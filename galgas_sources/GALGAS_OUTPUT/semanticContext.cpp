//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'semanticContext.cpp'                         *
//                        Generated by version 2.5.0                         *
//                       july 9th, 2013, at 20h7'28"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "semanticContext.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "optionLL1grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticContext.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'addCategories'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addCategories (const GALGAS_categoryMethodMapForBuildingContext constinArgument0,
                            const GALGAS_categoryReaderMapForBuildingContext constinArgument1,
                            const GALGAS_categoryModifierMapForBuildingContext constinArgument2,
                            GALGAS_semanticContext & ioArgument3,
                            const GALGAS_lstring constinArgument4,
                            GALGAS_readerMap & ioArgument5,
                            GALGAS_modifierMap & ioArgument6,
                            GALGAS_instanceMethodMap & ioArgument7,
                            C_Compiler * inCompiler
                            COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

cMapElement_grammarLabelMap::cMapElement_grammarLabelMap (const GALGAS_lstring & inKey,
                                                          const GALGAS_formalParameterSignature & in_mLabelSignature
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mLabelSignature (in_mLabelSignature) {
}

//---------------------------------------------------------------------------*

bool cMapElement_grammarLabelMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mLabelSignature.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_grammarLabelMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_grammarLabelMap (mAttribute_lkey, mAttribute_mLabelSignature COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_grammarLabelMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mLabelSignature" ":" ;
  mAttribute_mLabelSignature.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_grammarLabelMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_grammarLabelMap * operand = (cMapElement_grammarLabelMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mLabelSignature.objectCompare (operand->mAttribute_mLabelSignature) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap::GALGAS_grammarLabelMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap::GALGAS_grammarLabelMap (const GALGAS_grammarLabelMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap & GALGAS_grammarLabelMap::operator = (const GALGAS_grammarLabelMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap GALGAS_grammarLabelMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_grammarLabelMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap GALGAS_grammarLabelMap::constructor_mapWithMapToOverride (const GALGAS_grammarLabelMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_grammarLabelMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap GALGAS_grammarLabelMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_grammarLabelMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_grammarLabelMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 GALGAS_formalParameterSignature inArgument0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_grammarLabelMap * p = NULL ;
  macroMyNew (p, cMapElement_grammarLabelMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' grammar label has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_grammarLabelMap_searchKey = "the '%K' grammar label is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_grammarLabelMap::method_searchKey (GALGAS_lstring inKey,
                                               GALGAS_formalParameterSignature & outArgument0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  const cMapElement_grammarLabelMap * p = (const cMapElement_grammarLabelMap *) performSearch (inKey,
                                                                                                 inCompiler,
                                                                                                 kSearchErrorMessage_grammarLabelMap_searchKey
                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_grammarLabelMap) ;
    outArgument0 = p->mAttribute_mLabelSignature ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterSignature GALGAS_grammarLabelMap::reader_mLabelSignatureForKey (const GALGAS_string & inKey,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_grammarLabelMap * p = (const cMapElement_grammarLabelMap *) attributes ;
  GALGAS_formalParameterSignature result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_grammarLabelMap) ;
    result = p->mAttribute_mLabelSignature ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_grammarLabelMap::modifier_setMLabelSignatureForKey (GALGAS_formalParameterSignature inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_grammarLabelMap * p = (cMapElement_grammarLabelMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_grammarLabelMap) ;
    p->mAttribute_mLabelSignature = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_grammarLabelMap * GALGAS_grammarLabelMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                const GALGAS_string & inKey
                                                                                                COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_grammarLabelMap * result = (cMapElement_grammarLabelMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_grammarLabelMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_grammarLabelMap * GALGAS_grammarLabelMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                   const GALGAS_lstring & inKey
                                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_grammarLabelMap_searchKey COMMA_THERE) ;
  cMapElement_grammarLabelMap * result = (cMapElement_grammarLabelMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_grammarLabelMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_grammarLabelMap::cEnumerator_grammarLabelMap (const GALGAS_grammarLabelMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap_2E_element cEnumerator_grammarLabelMap::current (LOCATION_ARGS) const {
  const cMapElement_grammarLabelMap * p = (const cMapElement_grammarLabelMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_grammarLabelMap) ;
  return GALGAS_grammarLabelMap_2E_element (p->mAttribute_lkey, p->mAttribute_mLabelSignature) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_grammarLabelMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterSignature cEnumerator_grammarLabelMap::current_mLabelSignature (LOCATION_ARGS) const {
  const cMapElement_grammarLabelMap * p = (const cMapElement_grammarLabelMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_grammarLabelMap) ;
  return p->mAttribute_mLabelSignature ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @grammarLabelMap type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_grammarLabelMap ("grammarLabelMap",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_grammarLabelMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_grammarLabelMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_grammarLabelMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_grammarLabelMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap GALGAS_grammarLabelMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler,
                                                              const GALGAS_location & inErrorLocation,
                                                              const GALGAS_string & inErrorMessage
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_grammarLabelMap result ;
  const GALGAS_grammarLabelMap * p = (const GALGAS_grammarLabelMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_grammarLabelMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_grammarMap::cMapElement_grammarMap (const GALGAS_lstring & inKey,
                                                const GALGAS_grammarLabelMap & in_mLabelMap,
                                                const GALGAS_bool & in_mHasIndexing
                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mLabelMap (in_mLabelMap),
mAttribute_mHasIndexing (in_mHasIndexing) {
}

//---------------------------------------------------------------------------*

bool cMapElement_grammarMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mLabelMap.isValid () && mAttribute_mHasIndexing.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_grammarMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_grammarMap (mAttribute_lkey, mAttribute_mLabelMap, mAttribute_mHasIndexing COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_grammarMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mLabelMap" ":" ;
  mAttribute_mLabelMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mHasIndexing" ":" ;
  mAttribute_mHasIndexing.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_grammarMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_grammarMap * operand = (cMapElement_grammarMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mLabelMap.objectCompare (operand->mAttribute_mLabelMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mHasIndexing.objectCompare (operand->mAttribute_mHasIndexing) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarMap::GALGAS_grammarMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_grammarMap::GALGAS_grammarMap (const GALGAS_grammarMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_grammarMap & GALGAS_grammarMap::operator = (const GALGAS_grammarMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarMap GALGAS_grammarMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_grammarMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarMap GALGAS_grammarMap::constructor_mapWithMapToOverride (const GALGAS_grammarMap & inMapToOverride
                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_grammarMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarMap GALGAS_grammarMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_grammarMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_grammarMap::modifier_insertKey (GALGAS_lstring inKey,
                                            GALGAS_grammarLabelMap inArgument0,
                                            GALGAS_bool inArgument1,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  cMapElement_grammarMap * p = NULL ;
  macroMyNew (p, cMapElement_grammarMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' grammar has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_grammarMap_searchKey = "the '%K' grammar is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_grammarMap::method_searchKey (GALGAS_lstring inKey,
                                          GALGAS_grammarLabelMap & outArgument0,
                                          GALGAS_bool & outArgument1,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) const {
  const cMapElement_grammarMap * p = (const cMapElement_grammarMap *) performSearch (inKey,
                                                                                       inCompiler,
                                                                                       kSearchErrorMessage_grammarMap_searchKey
                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_grammarMap) ;
    outArgument0 = p->mAttribute_mLabelMap ;
    outArgument1 = p->mAttribute_mHasIndexing ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap GALGAS_grammarMap::reader_mLabelMapForKey (const GALGAS_string & inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_grammarMap * p = (const cMapElement_grammarMap *) attributes ;
  GALGAS_grammarLabelMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_grammarMap) ;
    result = p->mAttribute_mLabelMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_grammarMap::reader_mHasIndexingForKey (const GALGAS_string & inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_grammarMap * p = (const cMapElement_grammarMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_grammarMap) ;
    result = p->mAttribute_mHasIndexing ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_grammarMap::modifier_setMLabelMapForKey (GALGAS_grammarLabelMap inAttributeValue,
                                                     GALGAS_string inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_grammarMap * p = (cMapElement_grammarMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_grammarMap) ;
    p->mAttribute_mLabelMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_grammarMap::modifier_setMHasIndexingForKey (GALGAS_bool inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_grammarMap * p = (cMapElement_grammarMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_grammarMap) ;
    p->mAttribute_mHasIndexing = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_grammarMap * GALGAS_grammarMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                      const GALGAS_string & inKey
                                                                                      COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_grammarMap * result = (cMapElement_grammarMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_grammarMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_grammarMap * GALGAS_grammarMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                         const GALGAS_lstring & inKey
                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_grammarMap_searchKey COMMA_THERE) ;
  cMapElement_grammarMap * result = (cMapElement_grammarMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_grammarMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_grammarMap::cEnumerator_grammarMap (const GALGAS_grammarMap & inEnumeratedObject,
                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarMap_2E_element cEnumerator_grammarMap::current (LOCATION_ARGS) const {
  const cMapElement_grammarMap * p = (const cMapElement_grammarMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_grammarMap) ;
  return GALGAS_grammarMap_2E_element (p->mAttribute_lkey, p->mAttribute_mLabelMap, p->mAttribute_mHasIndexing) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_grammarMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap cEnumerator_grammarMap::current_mLabelMap (LOCATION_ARGS) const {
  const cMapElement_grammarMap * p = (const cMapElement_grammarMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_grammarMap) ;
  return p->mAttribute_mLabelMap ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_grammarMap::current_mHasIndexing (LOCATION_ARGS) const {
  const cMapElement_grammarMap * p = (const cMapElement_grammarMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_grammarMap) ;
  return p->mAttribute_mHasIndexing ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @grammarMap type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_grammarMap ("grammarMap",
                                   NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_grammarMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_grammarMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_grammarMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_grammarMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarMap GALGAS_grammarMap::extractObject (const GALGAS_object & inObject,
                                                    C_Compiler * inCompiler,
                                                    const GALGAS_location & inErrorLocation,
                                                    const GALGAS_string & inErrorMessage
                                                    COMMA_LOCATION_ARGS) {
  GALGAS_grammarMap result ;
  const GALGAS_grammarMap * p = (const GALGAS_grammarMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_grammarMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_routineMap::cMapElement_routineMap (const GALGAS_lstring & inKey,
                                                const GALGAS_formalParameterSignature & in_mRoutineSignature
                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRoutineSignature (in_mRoutineSignature) {
}

//---------------------------------------------------------------------------*

bool cMapElement_routineMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRoutineSignature.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_routineMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_routineMap (mAttribute_lkey, mAttribute_mRoutineSignature COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_routineMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRoutineSignature" ":" ;
  mAttribute_mRoutineSignature.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_routineMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_routineMap * operand = (cMapElement_routineMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRoutineSignature.objectCompare (operand->mAttribute_mRoutineSignature) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_routineMap::GALGAS_routineMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_routineMap::GALGAS_routineMap (const GALGAS_routineMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_routineMap & GALGAS_routineMap::operator = (const GALGAS_routineMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_routineMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_routineMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_routineMap::constructor_mapWithMapToOverride (const GALGAS_routineMap & inMapToOverride
                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_routineMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_routineMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_routineMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_routineMap::modifier_insertKey (GALGAS_lstring inKey,
                                            GALGAS_formalParameterSignature inArgument0,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  cMapElement_routineMap * p = NULL ;
  macroMyNew (p, cMapElement_routineMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' routine has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_routineMap_searchKey = "the '%K' routine is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_routineMap::method_searchKey (GALGAS_lstring inKey,
                                          GALGAS_formalParameterSignature & outArgument0,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) const {
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) performSearch (inKey,
                                                                                       inCompiler,
                                                                                       kSearchErrorMessage_routineMap_searchKey
                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_routineMap) ;
    outArgument0 = p->mAttribute_mRoutineSignature ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterSignature GALGAS_routineMap::reader_mRoutineSignatureForKey (const GALGAS_string & inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) attributes ;
  GALGAS_formalParameterSignature result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_routineMap) ;
    result = p->mAttribute_mRoutineSignature ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_routineMap::modifier_setMRoutineSignatureForKey (GALGAS_formalParameterSignature inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMap * p = (cMapElement_routineMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMap) ;
    p->mAttribute_mRoutineSignature = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_routineMap * GALGAS_routineMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                      const GALGAS_string & inKey
                                                                                      COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMap * result = (cMapElement_routineMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_routineMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_routineMap * GALGAS_routineMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                         const GALGAS_lstring & inKey
                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_routineMap_searchKey COMMA_THERE) ;
  cMapElement_routineMap * result = (cMapElement_routineMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_routineMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_routineMap::cEnumerator_routineMap (const GALGAS_routineMap & inEnumeratedObject,
                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_routineMap_2E_element cEnumerator_routineMap::current (LOCATION_ARGS) const {
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_routineMap) ;
  return GALGAS_routineMap_2E_element (p->mAttribute_lkey, p->mAttribute_mRoutineSignature) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_routineMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterSignature cEnumerator_routineMap::current_mRoutineSignature (LOCATION_ARGS) const {
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_routineMap) ;
  return p->mAttribute_mRoutineSignature ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @routineMap type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineMap ("routineMap",
                                   NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_routineMap::extractObject (const GALGAS_object & inObject,
                                                    C_Compiler * inCompiler,
                                                    const GALGAS_location & inErrorLocation,
                                                    const GALGAS_string & inErrorMessage
                                                    COMMA_LOCATION_ARGS) {
  GALGAS_routineMap result ;
  const GALGAS_routineMap * p = (const GALGAS_routineMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_functionMap::cMapElement_functionMap (const GALGAS_lstring & inKey,
                                                  const GALGAS_unifiedTypeMapProxyList & in_mFunctionSignature,
                                                  const GALGAS_unifiedTypeMapProxy & in_mResultType
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mFunctionSignature (in_mFunctionSignature),
mAttribute_mResultType (in_mResultType) {
}

//---------------------------------------------------------------------------*

bool cMapElement_functionMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFunctionSignature.isValid () && mAttribute_mResultType.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_functionMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_functionMap (mAttribute_lkey, mAttribute_mFunctionSignature, mAttribute_mResultType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_functionMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFunctionSignature" ":" ;
  mAttribute_mFunctionSignature.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mResultType" ":" ;
  mAttribute_mResultType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_functionMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_functionMap * operand = (cMapElement_functionMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mFunctionSignature.objectCompare (operand->mAttribute_mFunctionSignature) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mResultType.objectCompare (operand->mAttribute_mResultType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_functionMap::GALGAS_functionMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_functionMap::GALGAS_functionMap (const GALGAS_functionMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_functionMap & GALGAS_functionMap::operator = (const GALGAS_functionMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_functionMap GALGAS_functionMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_functionMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_functionMap GALGAS_functionMap::constructor_mapWithMapToOverride (const GALGAS_functionMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_functionMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_functionMap GALGAS_functionMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_functionMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_functionMap::modifier_insertKey (GALGAS_lstring inKey,
                                             GALGAS_unifiedTypeMapProxyList inArgument0,
                                             GALGAS_unifiedTypeMapProxy inArgument1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_functionMap * p = NULL ;
  macroMyNew (p, cMapElement_functionMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' function has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_functionMap_searchKey = "the '%K' function is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_functionMap::method_searchKey (GALGAS_lstring inKey,
                                           GALGAS_unifiedTypeMapProxyList & outArgument0,
                                           GALGAS_unifiedTypeMapProxy & outArgument1,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_functionMap * p = (const cMapElement_functionMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kSearchErrorMessage_functionMap_searchKey
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_functionMap) ;
    outArgument0 = p->mAttribute_mFunctionSignature ;
    outArgument1 = p->mAttribute_mResultType ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxyList GALGAS_functionMap::reader_mFunctionSignatureForKey (const GALGAS_string & inKey,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_functionMap * p = (const cMapElement_functionMap *) attributes ;
  GALGAS_unifiedTypeMapProxyList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_functionMap) ;
    result = p->mAttribute_mFunctionSignature ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_functionMap::reader_mResultTypeForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_functionMap * p = (const cMapElement_functionMap *) attributes ;
  GALGAS_unifiedTypeMapProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_functionMap) ;
    result = p->mAttribute_mResultType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_functionMap::modifier_setMFunctionSignatureForKey (GALGAS_unifiedTypeMapProxyList inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_functionMap * p = (cMapElement_functionMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_functionMap) ;
    p->mAttribute_mFunctionSignature = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_functionMap::modifier_setMResultTypeForKey (GALGAS_unifiedTypeMapProxy inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_functionMap * p = (cMapElement_functionMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_functionMap) ;
    p->mAttribute_mResultType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_functionMap * GALGAS_functionMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                        const GALGAS_string & inKey
                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_functionMap * result = (cMapElement_functionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_functionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_functionMap * GALGAS_functionMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                           const GALGAS_lstring & inKey
                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_functionMap_searchKey COMMA_THERE) ;
  cMapElement_functionMap * result = (cMapElement_functionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_functionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_functionMap::cEnumerator_functionMap (const GALGAS_functionMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_functionMap_2E_element cEnumerator_functionMap::current (LOCATION_ARGS) const {
  const cMapElement_functionMap * p = (const cMapElement_functionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_functionMap) ;
  return GALGAS_functionMap_2E_element (p->mAttribute_lkey, p->mAttribute_mFunctionSignature, p->mAttribute_mResultType) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_functionMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxyList cEnumerator_functionMap::current_mFunctionSignature (LOCATION_ARGS) const {
  const cMapElement_functionMap * p = (const cMapElement_functionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_functionMap) ;
  return p->mAttribute_mFunctionSignature ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy cEnumerator_functionMap::current_mResultType (LOCATION_ARGS) const {
  const cMapElement_functionMap * p = (const cMapElement_functionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_functionMap) ;
  return p->mAttribute_mResultType ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @functionMap type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_functionMap ("functionMap",
                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_functionMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_functionMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_functionMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_functionMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_functionMap GALGAS_functionMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler,
                                                      const GALGAS_location & inErrorLocation,
                                                      const GALGAS_string & inErrorMessage
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_functionMap result ;
  const GALGAS_functionMap * p = (const GALGAS_functionMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_functionMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_wrapperFileMap::cMapElement_wrapperFileMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_string & in_mAbsoluteFilePath,
                                                        const GALGAS_bool & in_mIsTextFile,
                                                        const GALGAS_uint & in_mWrapperDirectoryIndex,
                                                        const GALGAS_uint & in_mWrapperFileIndex
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAbsoluteFilePath (in_mAbsoluteFilePath),
mAttribute_mIsTextFile (in_mIsTextFile),
mAttribute_mWrapperDirectoryIndex (in_mWrapperDirectoryIndex),
mAttribute_mWrapperFileIndex (in_mWrapperFileIndex) {
}

//---------------------------------------------------------------------------*

bool cMapElement_wrapperFileMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAbsoluteFilePath.isValid () && mAttribute_mIsTextFile.isValid () && mAttribute_mWrapperDirectoryIndex.isValid () && mAttribute_mWrapperFileIndex.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_wrapperFileMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_wrapperFileMap (mAttribute_lkey, mAttribute_mAbsoluteFilePath, mAttribute_mIsTextFile, mAttribute_mWrapperDirectoryIndex, mAttribute_mWrapperFileIndex COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_wrapperFileMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAbsoluteFilePath" ":" ;
  mAttribute_mAbsoluteFilePath.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsTextFile" ":" ;
  mAttribute_mIsTextFile.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mWrapperDirectoryIndex" ":" ;
  mAttribute_mWrapperDirectoryIndex.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mWrapperFileIndex" ":" ;
  mAttribute_mWrapperFileIndex.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_wrapperFileMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_wrapperFileMap * operand = (cMapElement_wrapperFileMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAbsoluteFilePath.objectCompare (operand->mAttribute_mAbsoluteFilePath) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIsTextFile.objectCompare (operand->mAttribute_mIsTextFile) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mWrapperDirectoryIndex.objectCompare (operand->mAttribute_mWrapperDirectoryIndex) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mWrapperFileIndex.objectCompare (operand->mAttribute_mWrapperFileIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap::GALGAS_wrapperFileMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap::GALGAS_wrapperFileMap (const GALGAS_wrapperFileMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap & GALGAS_wrapperFileMap::operator = (const GALGAS_wrapperFileMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap GALGAS_wrapperFileMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_wrapperFileMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap GALGAS_wrapperFileMap::constructor_mapWithMapToOverride (const GALGAS_wrapperFileMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_wrapperFileMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap GALGAS_wrapperFileMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_wrapperFileMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_wrapperFileMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_string inArgument0,
                                                GALGAS_bool inArgument1,
                                                GALGAS_uint inArgument2,
                                                GALGAS_uint inArgument3,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_wrapperFileMap * p = NULL ;
  macroMyNew (p, cMapElement_wrapperFileMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "INTERNAL ERROR" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_wrapperFileMap_searchKey = "INTERNAL ERROR" ;

//---------------------------------------------------------------------------*

void GALGAS_wrapperFileMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_string & outArgument0,
                                              GALGAS_bool & outArgument1,
                                              GALGAS_uint & outArgument2,
                                              GALGAS_uint & outArgument3,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_wrapperFileMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_wrapperFileMap) ;
    outArgument0 = p->mAttribute_mAbsoluteFilePath ;
    outArgument1 = p->mAttribute_mIsTextFile ;
    outArgument2 = p->mAttribute_mWrapperDirectoryIndex ;
    outArgument3 = p->mAttribute_mWrapperFileIndex ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_wrapperFileMap::reader_mAbsoluteFilePathForKey (const GALGAS_string & inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_wrapperFileMap) ;
    result = p->mAttribute_mAbsoluteFilePath ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_wrapperFileMap::reader_mIsTextFileForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_wrapperFileMap) ;
    result = p->mAttribute_mIsTextFile ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_wrapperFileMap::reader_mWrapperDirectoryIndexForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_wrapperFileMap) ;
    result = p->mAttribute_mWrapperDirectoryIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_wrapperFileMap::reader_mWrapperFileIndexForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_wrapperFileMap) ;
    result = p->mAttribute_mWrapperFileIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_wrapperFileMap::modifier_setMAbsoluteFilePathForKey (GALGAS_string inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperFileMap * p = (cMapElement_wrapperFileMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
    p->mAttribute_mAbsoluteFilePath = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_wrapperFileMap::modifier_setMIsTextFileForKey (GALGAS_bool inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperFileMap * p = (cMapElement_wrapperFileMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
    p->mAttribute_mIsTextFile = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_wrapperFileMap::modifier_setMWrapperDirectoryIndexForKey (GALGAS_uint inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperFileMap * p = (cMapElement_wrapperFileMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
    p->mAttribute_mWrapperDirectoryIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_wrapperFileMap::modifier_setMWrapperFileIndexForKey (GALGAS_uint inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperFileMap * p = (cMapElement_wrapperFileMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
    p->mAttribute_mWrapperFileIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_wrapperFileMap * GALGAS_wrapperFileMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperFileMap * result = (cMapElement_wrapperFileMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_wrapperFileMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_wrapperFileMap * GALGAS_wrapperFileMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                 const GALGAS_lstring & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_wrapperFileMap_searchKey COMMA_THERE) ;
  cMapElement_wrapperFileMap * result = (cMapElement_wrapperFileMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_wrapperFileMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_wrapperFileMap::cEnumerator_wrapperFileMap (const GALGAS_wrapperFileMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap_2E_element cEnumerator_wrapperFileMap::current (LOCATION_ARGS) const {
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_wrapperFileMap) ;
  return GALGAS_wrapperFileMap_2E_element (p->mAttribute_lkey, p->mAttribute_mAbsoluteFilePath, p->mAttribute_mIsTextFile, p->mAttribute_mWrapperDirectoryIndex, p->mAttribute_mWrapperFileIndex) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_wrapperFileMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_wrapperFileMap::current_mAbsoluteFilePath (LOCATION_ARGS) const {
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_wrapperFileMap) ;
  return p->mAttribute_mAbsoluteFilePath ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_wrapperFileMap::current_mIsTextFile (LOCATION_ARGS) const {
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_wrapperFileMap) ;
  return p->mAttribute_mIsTextFile ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_wrapperFileMap::current_mWrapperDirectoryIndex (LOCATION_ARGS) const {
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_wrapperFileMap) ;
  return p->mAttribute_mWrapperDirectoryIndex ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_wrapperFileMap::current_mWrapperFileIndex (LOCATION_ARGS) const {
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_wrapperFileMap) ;
  return p->mAttribute_mWrapperFileIndex ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @wrapperFileMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_wrapperFileMap ("wrapperFileMap",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_wrapperFileMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_wrapperFileMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_wrapperFileMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_wrapperFileMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap GALGAS_wrapperFileMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation,
                                                            const GALGAS_string & inErrorMessage
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_wrapperFileMap result ;
  const GALGAS_wrapperFileMap * p = (const GALGAS_wrapperFileMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_wrapperFileMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_wrapperDirectoryMap::cMapElement_wrapperDirectoryMap (const GALGAS_lstring & inKey,
                                                                  const GALGAS_wrapperFileMap & in_mRegularFileMap,
                                                                  const GALGAS_wrapperDirectoryMap & in_mDirectoryMap,
                                                                  const GALGAS_uint & in_mWrapperDirectoryIndex
                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRegularFileMap (in_mRegularFileMap),
mAttribute_mDirectoryMap (in_mDirectoryMap),
mAttribute_mWrapperDirectoryIndex (in_mWrapperDirectoryIndex) {
}

//---------------------------------------------------------------------------*

bool cMapElement_wrapperDirectoryMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRegularFileMap.isValid () && mAttribute_mDirectoryMap.isValid () && mAttribute_mWrapperDirectoryIndex.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_wrapperDirectoryMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_wrapperDirectoryMap (mAttribute_lkey, mAttribute_mRegularFileMap, mAttribute_mDirectoryMap, mAttribute_mWrapperDirectoryIndex COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_wrapperDirectoryMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRegularFileMap" ":" ;
  mAttribute_mRegularFileMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDirectoryMap" ":" ;
  mAttribute_mDirectoryMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mWrapperDirectoryIndex" ":" ;
  mAttribute_mWrapperDirectoryIndex.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_wrapperDirectoryMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_wrapperDirectoryMap * operand = (cMapElement_wrapperDirectoryMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRegularFileMap.objectCompare (operand->mAttribute_mRegularFileMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDirectoryMap.objectCompare (operand->mAttribute_mDirectoryMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mWrapperDirectoryIndex.objectCompare (operand->mAttribute_mWrapperDirectoryIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap::GALGAS_wrapperDirectoryMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap::GALGAS_wrapperDirectoryMap (const GALGAS_wrapperDirectoryMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap & GALGAS_wrapperDirectoryMap::operator = (const GALGAS_wrapperDirectoryMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap GALGAS_wrapperDirectoryMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_wrapperDirectoryMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap GALGAS_wrapperDirectoryMap::constructor_mapWithMapToOverride (const GALGAS_wrapperDirectoryMap & inMapToOverride
                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_wrapperDirectoryMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap GALGAS_wrapperDirectoryMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_wrapperDirectoryMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_wrapperDirectoryMap::modifier_insertKey (GALGAS_lstring inKey,
                                                     GALGAS_wrapperFileMap inArgument0,
                                                     GALGAS_wrapperDirectoryMap inArgument1,
                                                     GALGAS_uint inArgument2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_wrapperDirectoryMap * p = NULL ;
  macroMyNew (p, cMapElement_wrapperDirectoryMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "INTERNAL ERROR" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_wrapperDirectoryMap_searchKey = "INTERNAL ERROR" ;

//---------------------------------------------------------------------------*

void GALGAS_wrapperDirectoryMap::method_searchKey (GALGAS_lstring inKey,
                                                   GALGAS_wrapperFileMap & outArgument0,
                                                   GALGAS_wrapperDirectoryMap & outArgument1,
                                                   GALGAS_uint & outArgument2,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_wrapperDirectoryMap * p = (const cMapElement_wrapperDirectoryMap *) performSearch (inKey,
                                                                                                         inCompiler,
                                                                                                         kSearchErrorMessage_wrapperDirectoryMap_searchKey
                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_wrapperDirectoryMap) ;
    outArgument0 = p->mAttribute_mRegularFileMap ;
    outArgument1 = p->mAttribute_mDirectoryMap ;
    outArgument2 = p->mAttribute_mWrapperDirectoryIndex ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap GALGAS_wrapperDirectoryMap::reader_mRegularFileMapForKey (const GALGAS_string & inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_wrapperDirectoryMap * p = (const cMapElement_wrapperDirectoryMap *) attributes ;
  GALGAS_wrapperFileMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_wrapperDirectoryMap) ;
    result = p->mAttribute_mRegularFileMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap GALGAS_wrapperDirectoryMap::reader_mDirectoryMapForKey (const GALGAS_string & inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_wrapperDirectoryMap * p = (const cMapElement_wrapperDirectoryMap *) attributes ;
  GALGAS_wrapperDirectoryMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_wrapperDirectoryMap) ;
    result = p->mAttribute_mDirectoryMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_wrapperDirectoryMap::reader_mWrapperDirectoryIndexForKey (const GALGAS_string & inKey,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_wrapperDirectoryMap * p = (const cMapElement_wrapperDirectoryMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_wrapperDirectoryMap) ;
    result = p->mAttribute_mWrapperDirectoryIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_wrapperDirectoryMap::modifier_setMRegularFileMapForKey (GALGAS_wrapperFileMap inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperDirectoryMap * p = (cMapElement_wrapperDirectoryMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperDirectoryMap) ;
    p->mAttribute_mRegularFileMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_wrapperDirectoryMap::modifier_setMDirectoryMapForKey (GALGAS_wrapperDirectoryMap inAttributeValue,
                                                                  GALGAS_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperDirectoryMap * p = (cMapElement_wrapperDirectoryMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperDirectoryMap) ;
    p->mAttribute_mDirectoryMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_wrapperDirectoryMap::modifier_setMWrapperDirectoryIndexForKey (GALGAS_uint inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperDirectoryMap * p = (cMapElement_wrapperDirectoryMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperDirectoryMap) ;
    p->mAttribute_mWrapperDirectoryIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_wrapperDirectoryMap * GALGAS_wrapperDirectoryMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                        const GALGAS_string & inKey
                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperDirectoryMap * result = (cMapElement_wrapperDirectoryMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_wrapperDirectoryMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_wrapperDirectoryMap * GALGAS_wrapperDirectoryMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                           const GALGAS_lstring & inKey
                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_wrapperDirectoryMap_searchKey COMMA_THERE) ;
  cMapElement_wrapperDirectoryMap * result = (cMapElement_wrapperDirectoryMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_wrapperDirectoryMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_wrapperDirectoryMap::cEnumerator_wrapperDirectoryMap (const GALGAS_wrapperDirectoryMap & inEnumeratedObject,
                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap_2E_element cEnumerator_wrapperDirectoryMap::current (LOCATION_ARGS) const {
  const cMapElement_wrapperDirectoryMap * p = (const cMapElement_wrapperDirectoryMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_wrapperDirectoryMap) ;
  return GALGAS_wrapperDirectoryMap_2E_element (p->mAttribute_lkey, p->mAttribute_mRegularFileMap, p->mAttribute_mDirectoryMap, p->mAttribute_mWrapperDirectoryIndex) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_wrapperDirectoryMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap cEnumerator_wrapperDirectoryMap::current_mRegularFileMap (LOCATION_ARGS) const {
  const cMapElement_wrapperDirectoryMap * p = (const cMapElement_wrapperDirectoryMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_wrapperDirectoryMap) ;
  return p->mAttribute_mRegularFileMap ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap cEnumerator_wrapperDirectoryMap::current_mDirectoryMap (LOCATION_ARGS) const {
  const cMapElement_wrapperDirectoryMap * p = (const cMapElement_wrapperDirectoryMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_wrapperDirectoryMap) ;
  return p->mAttribute_mDirectoryMap ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_wrapperDirectoryMap::current_mWrapperDirectoryIndex (LOCATION_ARGS) const {
  const cMapElement_wrapperDirectoryMap * p = (const cMapElement_wrapperDirectoryMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_wrapperDirectoryMap) ;
  return p->mAttribute_mWrapperDirectoryIndex ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @wrapperDirectoryMap type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_wrapperDirectoryMap ("wrapperDirectoryMap",
                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_wrapperDirectoryMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_wrapperDirectoryMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_wrapperDirectoryMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_wrapperDirectoryMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap GALGAS_wrapperDirectoryMap::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler,
                                                                      const GALGAS_location & inErrorLocation,
                                                                      const GALGAS_string & inErrorMessage
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_wrapperDirectoryMap result ;
  const GALGAS_wrapperDirectoryMap * p = (const GALGAS_wrapperDirectoryMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_wrapperDirectoryMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_filewrapperTemplateMap::cMapElement_filewrapperTemplateMap (const GALGAS_lstring & inKey,
                                                                        const GALGAS_unifiedTypeMapProxyList & in_mTemplateSignature,
                                                                        const GALGAS_lstring & in_mFilewrapperTemplatePath
                                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mTemplateSignature (in_mTemplateSignature),
mAttribute_mFilewrapperTemplatePath (in_mFilewrapperTemplatePath) {
}

//---------------------------------------------------------------------------*

bool cMapElement_filewrapperTemplateMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mTemplateSignature.isValid () && mAttribute_mFilewrapperTemplatePath.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_filewrapperTemplateMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_filewrapperTemplateMap (mAttribute_lkey, mAttribute_mTemplateSignature, mAttribute_mFilewrapperTemplatePath COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_filewrapperTemplateMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTemplateSignature" ":" ;
  mAttribute_mTemplateSignature.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFilewrapperTemplatePath" ":" ;
  mAttribute_mFilewrapperTemplatePath.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_filewrapperTemplateMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_filewrapperTemplateMap * operand = (cMapElement_filewrapperTemplateMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mTemplateSignature.objectCompare (operand->mAttribute_mTemplateSignature) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFilewrapperTemplatePath.objectCompare (operand->mAttribute_mFilewrapperTemplatePath) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap::GALGAS_filewrapperTemplateMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap::GALGAS_filewrapperTemplateMap (const GALGAS_filewrapperTemplateMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap & GALGAS_filewrapperTemplateMap::operator = (const GALGAS_filewrapperTemplateMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap GALGAS_filewrapperTemplateMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_filewrapperTemplateMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap GALGAS_filewrapperTemplateMap::constructor_mapWithMapToOverride (const GALGAS_filewrapperTemplateMap & inMapToOverride
                                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_filewrapperTemplateMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap GALGAS_filewrapperTemplateMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_filewrapperTemplateMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_filewrapperTemplateMap::modifier_insertKey (GALGAS_lstring inKey,
                                                        GALGAS_unifiedTypeMapProxyList inArgument0,
                                                        GALGAS_lstring inArgument1,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cMapElement_filewrapperTemplateMap * p = NULL ;
  macroMyNew (p, cMapElement_filewrapperTemplateMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' filewrapper template has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_filewrapperTemplateMap_searchKey = "the '%K' filewrapper template is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_filewrapperTemplateMap::method_searchKey (GALGAS_lstring inKey,
                                                      GALGAS_unifiedTypeMapProxyList & outArgument0,
                                                      GALGAS_lstring & outArgument1,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  const cMapElement_filewrapperTemplateMap * p = (const cMapElement_filewrapperTemplateMap *) performSearch (inKey,
                                                                                                               inCompiler,
                                                                                                               kSearchErrorMessage_filewrapperTemplateMap_searchKey
                                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_filewrapperTemplateMap) ;
    outArgument0 = p->mAttribute_mTemplateSignature ;
    outArgument1 = p->mAttribute_mFilewrapperTemplatePath ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxyList GALGAS_filewrapperTemplateMap::reader_mTemplateSignatureForKey (const GALGAS_string & inKey,
                                                                                               C_Compiler * inCompiler
                                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_filewrapperTemplateMap * p = (const cMapElement_filewrapperTemplateMap *) attributes ;
  GALGAS_unifiedTypeMapProxyList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_filewrapperTemplateMap) ;
    result = p->mAttribute_mTemplateSignature ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_filewrapperTemplateMap::reader_mFilewrapperTemplatePathForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_filewrapperTemplateMap * p = (const cMapElement_filewrapperTemplateMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_filewrapperTemplateMap) ;
    result = p->mAttribute_mFilewrapperTemplatePath ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_filewrapperTemplateMap::modifier_setMTemplateSignatureForKey (GALGAS_unifiedTypeMapProxyList inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperTemplateMap * p = (cMapElement_filewrapperTemplateMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperTemplateMap) ;
    p->mAttribute_mTemplateSignature = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_filewrapperTemplateMap::modifier_setMFilewrapperTemplatePathForKey (GALGAS_lstring inAttributeValue,
                                                                                GALGAS_string inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperTemplateMap * p = (cMapElement_filewrapperTemplateMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperTemplateMap) ;
    p->mAttribute_mFilewrapperTemplatePath = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_filewrapperTemplateMap * GALGAS_filewrapperTemplateMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                              const GALGAS_string & inKey
                                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperTemplateMap * result = (cMapElement_filewrapperTemplateMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_filewrapperTemplateMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_filewrapperTemplateMap * GALGAS_filewrapperTemplateMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                 const GALGAS_lstring & inKey
                                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_filewrapperTemplateMap_searchKey COMMA_THERE) ;
  cMapElement_filewrapperTemplateMap * result = (cMapElement_filewrapperTemplateMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_filewrapperTemplateMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_filewrapperTemplateMap::cEnumerator_filewrapperTemplateMap (const GALGAS_filewrapperTemplateMap & inEnumeratedObject,
                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap_2E_element cEnumerator_filewrapperTemplateMap::current (LOCATION_ARGS) const {
  const cMapElement_filewrapperTemplateMap * p = (const cMapElement_filewrapperTemplateMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_filewrapperTemplateMap) ;
  return GALGAS_filewrapperTemplateMap_2E_element (p->mAttribute_lkey, p->mAttribute_mTemplateSignature, p->mAttribute_mFilewrapperTemplatePath) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_filewrapperTemplateMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxyList cEnumerator_filewrapperTemplateMap::current_mTemplateSignature (LOCATION_ARGS) const {
  const cMapElement_filewrapperTemplateMap * p = (const cMapElement_filewrapperTemplateMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_filewrapperTemplateMap) ;
  return p->mAttribute_mTemplateSignature ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_filewrapperTemplateMap::current_mFilewrapperTemplatePath (LOCATION_ARGS) const {
  const cMapElement_filewrapperTemplateMap * p = (const cMapElement_filewrapperTemplateMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_filewrapperTemplateMap) ;
  return p->mAttribute_mFilewrapperTemplatePath ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @filewrapperTemplateMap type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_filewrapperTemplateMap ("filewrapperTemplateMap",
                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_filewrapperTemplateMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_filewrapperTemplateMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_filewrapperTemplateMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_filewrapperTemplateMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap GALGAS_filewrapperTemplateMap::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler,
                                                                            const GALGAS_location & inErrorLocation,
                                                                            const GALGAS_string & inErrorMessage
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_filewrapperTemplateMap result ;
  const GALGAS_filewrapperTemplateMap * p = (const GALGAS_filewrapperTemplateMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_filewrapperTemplateMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_filewrapperMap::cMapElement_filewrapperMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_lstring & in_mFilewrapperPath,
                                                        const GALGAS_lstringlist & in_mFilewrapperExtensionList,
                                                        const GALGAS_wrapperFileMap & in_mFilewrapperFileMap,
                                                        const GALGAS_wrapperDirectoryMap & in_mFilewrapperDirectoryMap,
                                                        const GALGAS_filewrapperTemplateMap & in_mFilewrapperTemplateMap
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mFilewrapperPath (in_mFilewrapperPath),
mAttribute_mFilewrapperExtensionList (in_mFilewrapperExtensionList),
mAttribute_mFilewrapperFileMap (in_mFilewrapperFileMap),
mAttribute_mFilewrapperDirectoryMap (in_mFilewrapperDirectoryMap),
mAttribute_mFilewrapperTemplateMap (in_mFilewrapperTemplateMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_filewrapperMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFilewrapperPath.isValid () && mAttribute_mFilewrapperExtensionList.isValid () && mAttribute_mFilewrapperFileMap.isValid () && mAttribute_mFilewrapperDirectoryMap.isValid () && mAttribute_mFilewrapperTemplateMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_filewrapperMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_filewrapperMap (mAttribute_lkey, mAttribute_mFilewrapperPath, mAttribute_mFilewrapperExtensionList, mAttribute_mFilewrapperFileMap, mAttribute_mFilewrapperDirectoryMap, mAttribute_mFilewrapperTemplateMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_filewrapperMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFilewrapperPath" ":" ;
  mAttribute_mFilewrapperPath.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFilewrapperExtensionList" ":" ;
  mAttribute_mFilewrapperExtensionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFilewrapperFileMap" ":" ;
  mAttribute_mFilewrapperFileMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFilewrapperDirectoryMap" ":" ;
  mAttribute_mFilewrapperDirectoryMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFilewrapperTemplateMap" ":" ;
  mAttribute_mFilewrapperTemplateMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_filewrapperMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_filewrapperMap * operand = (cMapElement_filewrapperMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mFilewrapperPath.objectCompare (operand->mAttribute_mFilewrapperPath) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFilewrapperExtensionList.objectCompare (operand->mAttribute_mFilewrapperExtensionList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFilewrapperFileMap.objectCompare (operand->mAttribute_mFilewrapperFileMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFilewrapperDirectoryMap.objectCompare (operand->mAttribute_mFilewrapperDirectoryMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFilewrapperTemplateMap.objectCompare (operand->mAttribute_mFilewrapperTemplateMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperMap::GALGAS_filewrapperMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperMap::GALGAS_filewrapperMap (const GALGAS_filewrapperMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperMap & GALGAS_filewrapperMap::operator = (const GALGAS_filewrapperMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperMap GALGAS_filewrapperMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_filewrapperMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperMap GALGAS_filewrapperMap::constructor_mapWithMapToOverride (const GALGAS_filewrapperMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_filewrapperMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperMap GALGAS_filewrapperMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_filewrapperMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_filewrapperMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_lstring inArgument0,
                                                GALGAS_lstringlist inArgument1,
                                                GALGAS_wrapperFileMap inArgument2,
                                                GALGAS_wrapperDirectoryMap inArgument3,
                                                GALGAS_filewrapperTemplateMap inArgument4,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_filewrapperMap * p = NULL ;
  macroMyNew (p, cMapElement_filewrapperMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' filewrapper has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_filewrapperMap_searchKey = "the '%K' filewrapper is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_filewrapperMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_lstring & outArgument0,
                                              GALGAS_lstringlist & outArgument1,
                                              GALGAS_wrapperFileMap & outArgument2,
                                              GALGAS_wrapperDirectoryMap & outArgument3,
                                              GALGAS_filewrapperTemplateMap & outArgument4,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_filewrapperMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_filewrapperMap) ;
    outArgument0 = p->mAttribute_mFilewrapperPath ;
    outArgument1 = p->mAttribute_mFilewrapperExtensionList ;
    outArgument2 = p->mAttribute_mFilewrapperFileMap ;
    outArgument3 = p->mAttribute_mFilewrapperDirectoryMap ;
    outArgument4 = p->mAttribute_mFilewrapperTemplateMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_filewrapperMap::reader_mFilewrapperPathForKey (const GALGAS_string & inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_filewrapperMap) ;
    result = p->mAttribute_mFilewrapperPath ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_filewrapperMap::reader_mFilewrapperExtensionListForKey (const GALGAS_string & inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) attributes ;
  GALGAS_lstringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_filewrapperMap) ;
    result = p->mAttribute_mFilewrapperExtensionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap GALGAS_filewrapperMap::reader_mFilewrapperFileMapForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) attributes ;
  GALGAS_wrapperFileMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_filewrapperMap) ;
    result = p->mAttribute_mFilewrapperFileMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap GALGAS_filewrapperMap::reader_mFilewrapperDirectoryMapForKey (const GALGAS_string & inKey,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) attributes ;
  GALGAS_wrapperDirectoryMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_filewrapperMap) ;
    result = p->mAttribute_mFilewrapperDirectoryMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap GALGAS_filewrapperMap::reader_mFilewrapperTemplateMapForKey (const GALGAS_string & inKey,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) attributes ;
  GALGAS_filewrapperTemplateMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_filewrapperMap) ;
    result = p->mAttribute_mFilewrapperTemplateMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_filewrapperMap::modifier_setMFilewrapperPathForKey (GALGAS_lstring inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperMap * p = (cMapElement_filewrapperMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperMap) ;
    p->mAttribute_mFilewrapperPath = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_filewrapperMap::modifier_setMFilewrapperExtensionListForKey (GALGAS_lstringlist inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperMap * p = (cMapElement_filewrapperMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperMap) ;
    p->mAttribute_mFilewrapperExtensionList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_filewrapperMap::modifier_setMFilewrapperFileMapForKey (GALGAS_wrapperFileMap inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperMap * p = (cMapElement_filewrapperMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperMap) ;
    p->mAttribute_mFilewrapperFileMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_filewrapperMap::modifier_setMFilewrapperDirectoryMapForKey (GALGAS_wrapperDirectoryMap inAttributeValue,
                                                                        GALGAS_string inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperMap * p = (cMapElement_filewrapperMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperMap) ;
    p->mAttribute_mFilewrapperDirectoryMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_filewrapperMap::modifier_setMFilewrapperTemplateMapForKey (GALGAS_filewrapperTemplateMap inAttributeValue,
                                                                       GALGAS_string inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperMap * p = (cMapElement_filewrapperMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperMap) ;
    p->mAttribute_mFilewrapperTemplateMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_filewrapperMap * GALGAS_filewrapperMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperMap * result = (cMapElement_filewrapperMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_filewrapperMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_filewrapperMap * GALGAS_filewrapperMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                 const GALGAS_lstring & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_filewrapperMap_searchKey COMMA_THERE) ;
  cMapElement_filewrapperMap * result = (cMapElement_filewrapperMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_filewrapperMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_filewrapperMap::cEnumerator_filewrapperMap (const GALGAS_filewrapperMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperMap_2E_element cEnumerator_filewrapperMap::current (LOCATION_ARGS) const {
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_filewrapperMap) ;
  return GALGAS_filewrapperMap_2E_element (p->mAttribute_lkey, p->mAttribute_mFilewrapperPath, p->mAttribute_mFilewrapperExtensionList, p->mAttribute_mFilewrapperFileMap, p->mAttribute_mFilewrapperDirectoryMap, p->mAttribute_mFilewrapperTemplateMap) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_filewrapperMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_filewrapperMap::current_mFilewrapperPath (LOCATION_ARGS) const {
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_filewrapperMap) ;
  return p->mAttribute_mFilewrapperPath ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist cEnumerator_filewrapperMap::current_mFilewrapperExtensionList (LOCATION_ARGS) const {
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_filewrapperMap) ;
  return p->mAttribute_mFilewrapperExtensionList ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap cEnumerator_filewrapperMap::current_mFilewrapperFileMap (LOCATION_ARGS) const {
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_filewrapperMap) ;
  return p->mAttribute_mFilewrapperFileMap ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap cEnumerator_filewrapperMap::current_mFilewrapperDirectoryMap (LOCATION_ARGS) const {
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_filewrapperMap) ;
  return p->mAttribute_mFilewrapperDirectoryMap ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap cEnumerator_filewrapperMap::current_mFilewrapperTemplateMap (LOCATION_ARGS) const {
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_filewrapperMap) ;
  return p->mAttribute_mFilewrapperTemplateMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @filewrapperMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_filewrapperMap ("filewrapperMap",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_filewrapperMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_filewrapperMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_filewrapperMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_filewrapperMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperMap GALGAS_filewrapperMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation,
                                                            const GALGAS_string & inErrorMessage
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_filewrapperMap result ;
  const GALGAS_filewrapperMap * p = (const GALGAS_filewrapperMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_filewrapperMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_optionComponentMapForSemanticAnalysis::cMapElement_optionComponentMapForSemanticAnalysis (const GALGAS_lstring & inKey,
                                                                                                      const GALGAS_commandLineOptionMap & in_mBoolOptionMap,
                                                                                                      const GALGAS_commandLineOptionMap & in_mUIntOptionMap,
                                                                                                      const GALGAS_commandLineOptionMap & in_mStringOptionMap
                                                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mBoolOptionMap (in_mBoolOptionMap),
mAttribute_mUIntOptionMap (in_mUIntOptionMap),
mAttribute_mStringOptionMap (in_mStringOptionMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_optionComponentMapForSemanticAnalysis::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mBoolOptionMap.isValid () && mAttribute_mUIntOptionMap.isValid () && mAttribute_mStringOptionMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_optionComponentMapForSemanticAnalysis::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_optionComponentMapForSemanticAnalysis (mAttribute_lkey, mAttribute_mBoolOptionMap, mAttribute_mUIntOptionMap, mAttribute_mStringOptionMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_optionComponentMapForSemanticAnalysis::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBoolOptionMap" ":" ;
  mAttribute_mBoolOptionMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mUIntOptionMap" ":" ;
  mAttribute_mUIntOptionMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mStringOptionMap" ":" ;
  mAttribute_mStringOptionMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_optionComponentMapForSemanticAnalysis::compare (const cCollectionElement * inOperand) const {
  cMapElement_optionComponentMapForSemanticAnalysis * operand = (cMapElement_optionComponentMapForSemanticAnalysis *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mBoolOptionMap.objectCompare (operand->mAttribute_mBoolOptionMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mUIntOptionMap.objectCompare (operand->mAttribute_mUIntOptionMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mStringOptionMap.objectCompare (operand->mAttribute_mStringOptionMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis::GALGAS_optionComponentMapForSemanticAnalysis (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis::GALGAS_optionComponentMapForSemanticAnalysis (const GALGAS_optionComponentMapForSemanticAnalysis & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis & GALGAS_optionComponentMapForSemanticAnalysis::operator = (const GALGAS_optionComponentMapForSemanticAnalysis & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis GALGAS_optionComponentMapForSemanticAnalysis::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_optionComponentMapForSemanticAnalysis result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis GALGAS_optionComponentMapForSemanticAnalysis::constructor_mapWithMapToOverride (const GALGAS_optionComponentMapForSemanticAnalysis & inMapToOverride
                                                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_optionComponentMapForSemanticAnalysis result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis GALGAS_optionComponentMapForSemanticAnalysis::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_optionComponentMapForSemanticAnalysis result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_optionComponentMapForSemanticAnalysis::modifier_insertKey (GALGAS_lstring inKey,
                                                                       GALGAS_commandLineOptionMap inArgument0,
                                                                       GALGAS_commandLineOptionMap inArgument1,
                                                                       GALGAS_commandLineOptionMap inArgument2,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_optionComponentMapForSemanticAnalysis * p = NULL ;
  macroMyNew (p, cMapElement_optionComponentMapForSemanticAnalysis (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of the '%K' option component: it has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_optionComponentMapForSemanticAnalysis_searchKey = "the '%K' option component is not imported" ;

//---------------------------------------------------------------------------*

void GALGAS_optionComponentMapForSemanticAnalysis::method_searchKey (GALGAS_lstring inKey,
                                                                     GALGAS_commandLineOptionMap & outArgument0,
                                                                     GALGAS_commandLineOptionMap & outArgument1,
                                                                     GALGAS_commandLineOptionMap & outArgument2,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cMapElement_optionComponentMapForSemanticAnalysis * p = (const cMapElement_optionComponentMapForSemanticAnalysis *) performSearch (inKey,
                                                                                                                                             inCompiler,
                                                                                                                                             kSearchErrorMessage_optionComponentMapForSemanticAnalysis_searchKey
                                                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_optionComponentMapForSemanticAnalysis) ;
    outArgument0 = p->mAttribute_mBoolOptionMap ;
    outArgument1 = p->mAttribute_mUIntOptionMap ;
    outArgument2 = p->mAttribute_mStringOptionMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_commandLineOptionMap GALGAS_optionComponentMapForSemanticAnalysis::reader_mBoolOptionMapForKey (const GALGAS_string & inKey,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_optionComponentMapForSemanticAnalysis * p = (const cMapElement_optionComponentMapForSemanticAnalysis *) attributes ;
  GALGAS_commandLineOptionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_optionComponentMapForSemanticAnalysis) ;
    result = p->mAttribute_mBoolOptionMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_commandLineOptionMap GALGAS_optionComponentMapForSemanticAnalysis::reader_mUIntOptionMapForKey (const GALGAS_string & inKey,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_optionComponentMapForSemanticAnalysis * p = (const cMapElement_optionComponentMapForSemanticAnalysis *) attributes ;
  GALGAS_commandLineOptionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_optionComponentMapForSemanticAnalysis) ;
    result = p->mAttribute_mUIntOptionMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_commandLineOptionMap GALGAS_optionComponentMapForSemanticAnalysis::reader_mStringOptionMapForKey (const GALGAS_string & inKey,
                                                                                                         C_Compiler * inCompiler
                                                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_optionComponentMapForSemanticAnalysis * p = (const cMapElement_optionComponentMapForSemanticAnalysis *) attributes ;
  GALGAS_commandLineOptionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_optionComponentMapForSemanticAnalysis) ;
    result = p->mAttribute_mStringOptionMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_optionComponentMapForSemanticAnalysis::modifier_setMBoolOptionMapForKey (GALGAS_commandLineOptionMap inAttributeValue,
                                                                                     GALGAS_string inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionComponentMapForSemanticAnalysis * p = (cMapElement_optionComponentMapForSemanticAnalysis *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionComponentMapForSemanticAnalysis) ;
    p->mAttribute_mBoolOptionMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_optionComponentMapForSemanticAnalysis::modifier_setMUIntOptionMapForKey (GALGAS_commandLineOptionMap inAttributeValue,
                                                                                     GALGAS_string inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionComponentMapForSemanticAnalysis * p = (cMapElement_optionComponentMapForSemanticAnalysis *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionComponentMapForSemanticAnalysis) ;
    p->mAttribute_mUIntOptionMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_optionComponentMapForSemanticAnalysis::modifier_setMStringOptionMapForKey (GALGAS_commandLineOptionMap inAttributeValue,
                                                                                       GALGAS_string inKey,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionComponentMapForSemanticAnalysis * p = (cMapElement_optionComponentMapForSemanticAnalysis *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionComponentMapForSemanticAnalysis) ;
    p->mAttribute_mStringOptionMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_optionComponentMapForSemanticAnalysis * GALGAS_optionComponentMapForSemanticAnalysis::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                                            const GALGAS_string & inKey
                                                                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionComponentMapForSemanticAnalysis * result = (cMapElement_optionComponentMapForSemanticAnalysis *) p ;
  macroNullOrValidSharedObject (result, cMapElement_optionComponentMapForSemanticAnalysis) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_optionComponentMapForSemanticAnalysis * GALGAS_optionComponentMapForSemanticAnalysis::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                                               const GALGAS_lstring & inKey
                                                                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_optionComponentMapForSemanticAnalysis_searchKey COMMA_THERE) ;
  cMapElement_optionComponentMapForSemanticAnalysis * result = (cMapElement_optionComponentMapForSemanticAnalysis *) p ;
  macroNullOrValidSharedObject (result, cMapElement_optionComponentMapForSemanticAnalysis) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_optionComponentMapForSemanticAnalysis::cEnumerator_optionComponentMapForSemanticAnalysis (const GALGAS_optionComponentMapForSemanticAnalysis & inEnumeratedObject,
                                                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis_2E_element cEnumerator_optionComponentMapForSemanticAnalysis::current (LOCATION_ARGS) const {
  const cMapElement_optionComponentMapForSemanticAnalysis * p = (const cMapElement_optionComponentMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_optionComponentMapForSemanticAnalysis) ;
  return GALGAS_optionComponentMapForSemanticAnalysis_2E_element (p->mAttribute_lkey, p->mAttribute_mBoolOptionMap, p->mAttribute_mUIntOptionMap, p->mAttribute_mStringOptionMap) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_optionComponentMapForSemanticAnalysis::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_commandLineOptionMap cEnumerator_optionComponentMapForSemanticAnalysis::current_mBoolOptionMap (LOCATION_ARGS) const {
  const cMapElement_optionComponentMapForSemanticAnalysis * p = (const cMapElement_optionComponentMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_optionComponentMapForSemanticAnalysis) ;
  return p->mAttribute_mBoolOptionMap ;
}

//---------------------------------------------------------------------------*

GALGAS_commandLineOptionMap cEnumerator_optionComponentMapForSemanticAnalysis::current_mUIntOptionMap (LOCATION_ARGS) const {
  const cMapElement_optionComponentMapForSemanticAnalysis * p = (const cMapElement_optionComponentMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_optionComponentMapForSemanticAnalysis) ;
  return p->mAttribute_mUIntOptionMap ;
}

//---------------------------------------------------------------------------*

GALGAS_commandLineOptionMap cEnumerator_optionComponentMapForSemanticAnalysis::current_mStringOptionMap (LOCATION_ARGS) const {
  const cMapElement_optionComponentMapForSemanticAnalysis * p = (const cMapElement_optionComponentMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_optionComponentMapForSemanticAnalysis) ;
  return p->mAttribute_mStringOptionMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                @optionComponentMapForSemanticAnalysis type                *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_optionComponentMapForSemanticAnalysis ("optionComponentMapForSemanticAnalysis",
                                                              NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_optionComponentMapForSemanticAnalysis::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_optionComponentMapForSemanticAnalysis ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_optionComponentMapForSemanticAnalysis::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_optionComponentMapForSemanticAnalysis (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis GALGAS_optionComponentMapForSemanticAnalysis::extractObject (const GALGAS_object & inObject,
                                                                                                          C_Compiler * inCompiler,
                                                                                                          const GALGAS_location & inErrorLocation,
                                                                                                          const GALGAS_string & inErrorMessage
                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_optionComponentMapForSemanticAnalysis result ;
  const GALGAS_optionComponentMapForSemanticAnalysis * p = (const GALGAS_optionComponentMapForSemanticAnalysis *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_optionComponentMapForSemanticAnalysis *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_optionMapForSemanticAnalysis::cMapElement_optionMapForSemanticAnalysis (const GALGAS_lstring & inKey,
                                                                                    const GALGAS_unifiedTypeMapProxy & in_mOptionType,
                                                                                    const GALGAS_char & in_mOptionChar,
                                                                                    const GALGAS_string & in_mOptionString,
                                                                                    const GALGAS_string & in_mComment,
                                                                                    const GALGAS_string & in_mDefaultValue
                                                                                    COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mOptionType (in_mOptionType),
mAttribute_mOptionChar (in_mOptionChar),
mAttribute_mOptionString (in_mOptionString),
mAttribute_mComment (in_mComment),
mAttribute_mDefaultValue (in_mDefaultValue) {
}

//---------------------------------------------------------------------------*

bool cMapElement_optionMapForSemanticAnalysis::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mOptionType.isValid () && mAttribute_mOptionChar.isValid () && mAttribute_mOptionString.isValid () && mAttribute_mComment.isValid () && mAttribute_mDefaultValue.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_optionMapForSemanticAnalysis::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_optionMapForSemanticAnalysis (mAttribute_lkey, mAttribute_mOptionType, mAttribute_mOptionChar, mAttribute_mOptionString, mAttribute_mComment, mAttribute_mDefaultValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_optionMapForSemanticAnalysis::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOptionType" ":" ;
  mAttribute_mOptionType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOptionChar" ":" ;
  mAttribute_mOptionChar.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOptionString" ":" ;
  mAttribute_mOptionString.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mComment" ":" ;
  mAttribute_mComment.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDefaultValue" ":" ;
  mAttribute_mDefaultValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_optionMapForSemanticAnalysis::compare (const cCollectionElement * inOperand) const {
  cMapElement_optionMapForSemanticAnalysis * operand = (cMapElement_optionMapForSemanticAnalysis *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mOptionType.objectCompare (operand->mAttribute_mOptionType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOptionChar.objectCompare (operand->mAttribute_mOptionChar) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOptionString.objectCompare (operand->mAttribute_mOptionString) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mComment.objectCompare (operand->mAttribute_mComment) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDefaultValue.objectCompare (operand->mAttribute_mDefaultValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis::GALGAS_optionMapForSemanticAnalysis (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis::GALGAS_optionMapForSemanticAnalysis (const GALGAS_optionMapForSemanticAnalysis & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis & GALGAS_optionMapForSemanticAnalysis::operator = (const GALGAS_optionMapForSemanticAnalysis & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis GALGAS_optionMapForSemanticAnalysis::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_optionMapForSemanticAnalysis result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis GALGAS_optionMapForSemanticAnalysis::constructor_mapWithMapToOverride (const GALGAS_optionMapForSemanticAnalysis & inMapToOverride
                                                                                                           COMMA_LOCATION_ARGS) {
  GALGAS_optionMapForSemanticAnalysis result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis GALGAS_optionMapForSemanticAnalysis::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_optionMapForSemanticAnalysis result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis::modifier_insertKey (GALGAS_lstring inKey,
                                                              GALGAS_unifiedTypeMapProxy inArgument0,
                                                              GALGAS_char inArgument1,
                                                              GALGAS_string inArgument2,
                                                              GALGAS_string inArgument3,
                                                              GALGAS_string inArgument4,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cMapElement_optionMapForSemanticAnalysis * p = NULL ;
  macroMyNew (p, cMapElement_optionMapForSemanticAnalysis (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' command line option has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_optionMapForSemanticAnalysis_searchKey = "the '%K' command line option is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis::method_searchKey (GALGAS_lstring inKey,
                                                            GALGAS_unifiedTypeMapProxy & outArgument0,
                                                            GALGAS_char & outArgument1,
                                                            GALGAS_string & outArgument2,
                                                            GALGAS_string & outArgument3,
                                                            GALGAS_string & outArgument4,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) performSearch (inKey,
                                                                                                                           inCompiler,
                                                                                                                           kSearchErrorMessage_optionMapForSemanticAnalysis_searchKey
                                                                                                                           COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_optionMapForSemanticAnalysis) ;
    outArgument0 = p->mAttribute_mOptionType ;
    outArgument1 = p->mAttribute_mOptionChar ;
    outArgument2 = p->mAttribute_mOptionString ;
    outArgument3 = p->mAttribute_mComment ;
    outArgument4 = p->mAttribute_mDefaultValue ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_optionMapForSemanticAnalysis::reader_mOptionTypeForKey (const GALGAS_string & inKey,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) attributes ;
  GALGAS_unifiedTypeMapProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_optionMapForSemanticAnalysis) ;
    result = p->mAttribute_mOptionType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_char GALGAS_optionMapForSemanticAnalysis::reader_mOptionCharForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) attributes ;
  GALGAS_char result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_optionMapForSemanticAnalysis) ;
    result = p->mAttribute_mOptionChar ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_optionMapForSemanticAnalysis::reader_mOptionStringForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_optionMapForSemanticAnalysis) ;
    result = p->mAttribute_mOptionString ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_optionMapForSemanticAnalysis::reader_mCommentForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_optionMapForSemanticAnalysis) ;
    result = p->mAttribute_mComment ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_optionMapForSemanticAnalysis::reader_mDefaultValueForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_optionMapForSemanticAnalysis) ;
    result = p->mAttribute_mDefaultValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis::modifier_setMOptionTypeForKey (GALGAS_unifiedTypeMapProxy inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionMapForSemanticAnalysis * p = (cMapElement_optionMapForSemanticAnalysis *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
    p->mAttribute_mOptionType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis::modifier_setMOptionCharForKey (GALGAS_char inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionMapForSemanticAnalysis * p = (cMapElement_optionMapForSemanticAnalysis *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
    p->mAttribute_mOptionChar = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis::modifier_setMOptionStringForKey (GALGAS_string inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionMapForSemanticAnalysis * p = (cMapElement_optionMapForSemanticAnalysis *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
    p->mAttribute_mOptionString = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis::modifier_setMCommentForKey (GALGAS_string inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionMapForSemanticAnalysis * p = (cMapElement_optionMapForSemanticAnalysis *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
    p->mAttribute_mComment = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis::modifier_setMDefaultValueForKey (GALGAS_string inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionMapForSemanticAnalysis * p = (cMapElement_optionMapForSemanticAnalysis *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
    p->mAttribute_mDefaultValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_optionMapForSemanticAnalysis * GALGAS_optionMapForSemanticAnalysis::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                          const GALGAS_string & inKey
                                                                                                                          COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionMapForSemanticAnalysis * result = (cMapElement_optionMapForSemanticAnalysis *) p ;
  macroNullOrValidSharedObject (result, cMapElement_optionMapForSemanticAnalysis) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_optionMapForSemanticAnalysis * GALGAS_optionMapForSemanticAnalysis::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                             const GALGAS_lstring & inKey
                                                                                                                             COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_optionMapForSemanticAnalysis_searchKey COMMA_THERE) ;
  cMapElement_optionMapForSemanticAnalysis * result = (cMapElement_optionMapForSemanticAnalysis *) p ;
  macroNullOrValidSharedObject (result, cMapElement_optionMapForSemanticAnalysis) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_optionMapForSemanticAnalysis::cEnumerator_optionMapForSemanticAnalysis (const GALGAS_optionMapForSemanticAnalysis & inEnumeratedObject,
                                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis_2E_element cEnumerator_optionMapForSemanticAnalysis::current (LOCATION_ARGS) const {
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_optionMapForSemanticAnalysis) ;
  return GALGAS_optionMapForSemanticAnalysis_2E_element (p->mAttribute_lkey, p->mAttribute_mOptionType, p->mAttribute_mOptionChar, p->mAttribute_mOptionString, p->mAttribute_mComment, p->mAttribute_mDefaultValue) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_optionMapForSemanticAnalysis::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy cEnumerator_optionMapForSemanticAnalysis::current_mOptionType (LOCATION_ARGS) const {
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_optionMapForSemanticAnalysis) ;
  return p->mAttribute_mOptionType ;
}

//---------------------------------------------------------------------------*

GALGAS_char cEnumerator_optionMapForSemanticAnalysis::current_mOptionChar (LOCATION_ARGS) const {
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_optionMapForSemanticAnalysis) ;
  return p->mAttribute_mOptionChar ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_optionMapForSemanticAnalysis::current_mOptionString (LOCATION_ARGS) const {
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_optionMapForSemanticAnalysis) ;
  return p->mAttribute_mOptionString ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_optionMapForSemanticAnalysis::current_mComment (LOCATION_ARGS) const {
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_optionMapForSemanticAnalysis) ;
  return p->mAttribute_mComment ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_optionMapForSemanticAnalysis::current_mDefaultValue (LOCATION_ARGS) const {
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_optionMapForSemanticAnalysis) ;
  return p->mAttribute_mDefaultValue ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @optionMapForSemanticAnalysis type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_optionMapForSemanticAnalysis ("optionMapForSemanticAnalysis",
                                                     NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_optionMapForSemanticAnalysis::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_optionMapForSemanticAnalysis ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_optionMapForSemanticAnalysis::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_optionMapForSemanticAnalysis (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis GALGAS_optionMapForSemanticAnalysis::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler,
                                                                                        const GALGAS_location & inErrorLocation,
                                                                                        const GALGAS_string & inErrorMessage
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_optionMapForSemanticAnalysis result ;
  const GALGAS_optionMapForSemanticAnalysis * p = (const GALGAS_optionMapForSemanticAnalysis *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_optionMapForSemanticAnalysis *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_lexiqueComponentMapForSemanticAnalysis::cMapElement_lexiqueComponentMapForSemanticAnalysis (const GALGAS_lstring & inKey
                                                                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------*

bool cMapElement_lexiqueComponentMapForSemanticAnalysis::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_lexiqueComponentMapForSemanticAnalysis::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_lexiqueComponentMapForSemanticAnalysis (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_lexiqueComponentMapForSemanticAnalysis::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_lexiqueComponentMapForSemanticAnalysis::compare (const cCollectionElement * inOperand) const {
  cMapElement_lexiqueComponentMapForSemanticAnalysis * operand = (cMapElement_lexiqueComponentMapForSemanticAnalysis *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis::GALGAS_lexiqueComponentMapForSemanticAnalysis (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis::GALGAS_lexiqueComponentMapForSemanticAnalysis (const GALGAS_lexiqueComponentMapForSemanticAnalysis & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis & GALGAS_lexiqueComponentMapForSemanticAnalysis::operator = (const GALGAS_lexiqueComponentMapForSemanticAnalysis & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis GALGAS_lexiqueComponentMapForSemanticAnalysis::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_lexiqueComponentMapForSemanticAnalysis result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis GALGAS_lexiqueComponentMapForSemanticAnalysis::constructor_mapWithMapToOverride (const GALGAS_lexiqueComponentMapForSemanticAnalysis & inMapToOverride
                                                                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_lexiqueComponentMapForSemanticAnalysis result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis GALGAS_lexiqueComponentMapForSemanticAnalysis::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_lexiqueComponentMapForSemanticAnalysis result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_lexiqueComponentMapForSemanticAnalysis::modifier_insertKey (GALGAS_lstring inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  cMapElement_lexiqueComponentMapForSemanticAnalysis * p = NULL ;
  macroMyNew (p, cMapElement_lexiqueComponentMapForSemanticAnalysis (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of the '%K' lexique component: it has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_lexiqueComponentMapForSemanticAnalysis_searchKey = "the '%K' lexique component is not imported" ;

//---------------------------------------------------------------------------*

void GALGAS_lexiqueComponentMapForSemanticAnalysis::method_searchKey (GALGAS_lstring inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cMapElement_lexiqueComponentMapForSemanticAnalysis * p = (const cMapElement_lexiqueComponentMapForSemanticAnalysis *) performSearch (inKey,
                                                                                                                                               inCompiler,
                                                                                                                                               kSearchErrorMessage_lexiqueComponentMapForSemanticAnalysis_searchKey
                                                                                                                                               COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, const cMapElement_lexiqueComponentMapForSemanticAnalysis) ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_lexiqueComponentMapForSemanticAnalysis * GALGAS_lexiqueComponentMapForSemanticAnalysis::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                                              const GALGAS_string & inKey
                                                                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_lexiqueComponentMapForSemanticAnalysis * result = (cMapElement_lexiqueComponentMapForSemanticAnalysis *) p ;
  macroNullOrValidSharedObject (result, cMapElement_lexiqueComponentMapForSemanticAnalysis) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_lexiqueComponentMapForSemanticAnalysis * GALGAS_lexiqueComponentMapForSemanticAnalysis::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                                                 const GALGAS_lstring & inKey
                                                                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_lexiqueComponentMapForSemanticAnalysis_searchKey COMMA_THERE) ;
  cMapElement_lexiqueComponentMapForSemanticAnalysis * result = (cMapElement_lexiqueComponentMapForSemanticAnalysis *) p ;
  macroNullOrValidSharedObject (result, cMapElement_lexiqueComponentMapForSemanticAnalysis) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_lexiqueComponentMapForSemanticAnalysis::cEnumerator_lexiqueComponentMapForSemanticAnalysis (const GALGAS_lexiqueComponentMapForSemanticAnalysis & inEnumeratedObject,
                                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element cEnumerator_lexiqueComponentMapForSemanticAnalysis::current (LOCATION_ARGS) const {
  const cMapElement_lexiqueComponentMapForSemanticAnalysis * p = (const cMapElement_lexiqueComponentMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_lexiqueComponentMapForSemanticAnalysis) ;
  return GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_lexiqueComponentMapForSemanticAnalysis::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//               @lexiqueComponentMapForSemanticAnalysis type                *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_lexiqueComponentMapForSemanticAnalysis ("lexiqueComponentMapForSemanticAnalysis",
                                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_lexiqueComponentMapForSemanticAnalysis::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_lexiqueComponentMapForSemanticAnalysis ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_lexiqueComponentMapForSemanticAnalysis::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_lexiqueComponentMapForSemanticAnalysis (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis GALGAS_lexiqueComponentMapForSemanticAnalysis::extractObject (const GALGAS_object & inObject,
                                                                                                            C_Compiler * inCompiler,
                                                                                                            const GALGAS_location & inErrorLocation,
                                                                                                            const GALGAS_string & inErrorMessage
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_lexiqueComponentMapForSemanticAnalysis result ;
  const GALGAS_lexiqueComponentMapForSemanticAnalysis * p = (const GALGAS_lexiqueComponentMapForSemanticAnalysis *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_lexiqueComponentMapForSemanticAnalysis *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_categoryMethodMapForType::cMapElement_categoryMethodMapForType (const GALGAS_lstring & inKey,
                                                                            const GALGAS_formalParameterListAST & in_mFormalParameterList
                                                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mFormalParameterList (in_mFormalParameterList) {
}

//---------------------------------------------------------------------------*

bool cMapElement_categoryMethodMapForType::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFormalParameterList.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_categoryMethodMapForType::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_categoryMethodMapForType (mAttribute_lkey, mAttribute_mFormalParameterList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_categoryMethodMapForType::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFormalParameterList" ":" ;
  mAttribute_mFormalParameterList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_categoryMethodMapForType::compare (const cCollectionElement * inOperand) const {
  cMapElement_categoryMethodMapForType * operand = (cMapElement_categoryMethodMapForType *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mFormalParameterList.objectCompare (operand->mAttribute_mFormalParameterList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType::GALGAS_categoryMethodMapForType (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType::GALGAS_categoryMethodMapForType (const GALGAS_categoryMethodMapForType & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType & GALGAS_categoryMethodMapForType::operator = (const GALGAS_categoryMethodMapForType & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType GALGAS_categoryMethodMapForType::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_categoryMethodMapForType result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType GALGAS_categoryMethodMapForType::constructor_mapWithMapToOverride (const GALGAS_categoryMethodMapForType & inMapToOverride
                                                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForType result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType GALGAS_categoryMethodMapForType::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_categoryMethodMapForType result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForType::modifier_insertKey (GALGAS_lstring inKey,
                                                          GALGAS_formalParameterListAST inArgument0,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cMapElement_categoryMethodMapForType * p = NULL ;
  macroMyNew (p, cMapElement_categoryMethodMapForType (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' method has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterListAST GALGAS_categoryMethodMapForType::reader_mFormalParameterListForKey (const GALGAS_string & inKey,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_categoryMethodMapForType * p = (const cMapElement_categoryMethodMapForType *) attributes ;
  GALGAS_formalParameterListAST result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_categoryMethodMapForType) ;
    result = p->mAttribute_mFormalParameterList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForType::modifier_setMFormalParameterListForKey (GALGAS_formalParameterListAST inAttributeValue,
                                                                              GALGAS_string inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryMethodMapForType * p = (cMapElement_categoryMethodMapForType *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryMethodMapForType) ;
    p->mAttribute_mFormalParameterList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_categoryMethodMapForType * GALGAS_categoryMethodMapForType::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                  const GALGAS_string & inKey
                                                                                                                  COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryMethodMapForType * result = (cMapElement_categoryMethodMapForType *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryMethodMapForType) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_categoryMethodMapForType::cEnumerator_categoryMethodMapForType (const GALGAS_categoryMethodMapForType & inEnumeratedObject,
                                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType_2E_element cEnumerator_categoryMethodMapForType::current (LOCATION_ARGS) const {
  const cMapElement_categoryMethodMapForType * p = (const cMapElement_categoryMethodMapForType *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_categoryMethodMapForType) ;
  return GALGAS_categoryMethodMapForType_2E_element (p->mAttribute_lkey, p->mAttribute_mFormalParameterList) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryMethodMapForType::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterListAST cEnumerator_categoryMethodMapForType::current_mFormalParameterList (LOCATION_ARGS) const {
  const cMapElement_categoryMethodMapForType * p = (const cMapElement_categoryMethodMapForType *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_categoryMethodMapForType) ;
  return p->mAttribute_mFormalParameterList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                      @categoryMethodMapForType type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryMethodMapForType ("categoryMethodMapForType",
                                                 NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryMethodMapForType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryMethodMapForType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryMethodMapForType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryMethodMapForType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType GALGAS_categoryMethodMapForType::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler,
                                                                                const GALGAS_location & inErrorLocation,
                                                                                const GALGAS_string & inErrorMessage
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForType result ;
  const GALGAS_categoryMethodMapForType * p = (const GALGAS_categoryMethodMapForType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryMethodMapForType *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_categoryMethodMapForBuildingContext::cMapElement_categoryMethodMapForBuildingContext (const GALGAS_lstring & inKey,
                                                                                                  const GALGAS_categoryMethodMapForType & in_mCategoryMethodMapForType
                                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mCategoryMethodMapForType (in_mCategoryMethodMapForType) {
}

//---------------------------------------------------------------------------*

bool cMapElement_categoryMethodMapForBuildingContext::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCategoryMethodMapForType.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_categoryMethodMapForBuildingContext::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_categoryMethodMapForBuildingContext (mAttribute_lkey, mAttribute_mCategoryMethodMapForType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_categoryMethodMapForBuildingContext::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCategoryMethodMapForType" ":" ;
  mAttribute_mCategoryMethodMapForType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_categoryMethodMapForBuildingContext::compare (const cCollectionElement * inOperand) const {
  cMapElement_categoryMethodMapForBuildingContext * operand = (cMapElement_categoryMethodMapForBuildingContext *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mCategoryMethodMapForType.objectCompare (operand->mAttribute_mCategoryMethodMapForType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext::GALGAS_categoryMethodMapForBuildingContext (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext::GALGAS_categoryMethodMapForBuildingContext (const GALGAS_categoryMethodMapForBuildingContext & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext & GALGAS_categoryMethodMapForBuildingContext::operator = (const GALGAS_categoryMethodMapForBuildingContext & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext GALGAS_categoryMethodMapForBuildingContext::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_categoryMethodMapForBuildingContext result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext GALGAS_categoryMethodMapForBuildingContext::constructor_mapWithMapToOverride (const GALGAS_categoryMethodMapForBuildingContext & inMapToOverride
                                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForBuildingContext result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext GALGAS_categoryMethodMapForBuildingContext::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_categoryMethodMapForBuildingContext result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForBuildingContext::modifier_insertKey (GALGAS_lstring inKey,
                                                                     GALGAS_categoryMethodMapForType inArgument0,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_categoryMethodMapForBuildingContext * p = NULL ;
  macroMyNew (p, cMapElement_categoryMethodMapForBuildingContext (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "internal error" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_categoryMethodMapForBuildingContext_searchKey = "internal error" ;

//---------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForBuildingContext::method_searchKey (GALGAS_lstring inKey,
                                                                   GALGAS_categoryMethodMapForType & outArgument0,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_categoryMethodMapForBuildingContext * p = (const cMapElement_categoryMethodMapForBuildingContext *) performSearch (inKey,
                                                                                                                                         inCompiler,
                                                                                                                                         kSearchErrorMessage_categoryMethodMapForBuildingContext_searchKey
                                                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_categoryMethodMapForBuildingContext) ;
    outArgument0 = p->mAttribute_mCategoryMethodMapForType ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType GALGAS_categoryMethodMapForBuildingContext::reader_mCategoryMethodMapForTypeForKey (const GALGAS_string & inKey,
                                                                                                                    C_Compiler * inCompiler
                                                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_categoryMethodMapForBuildingContext * p = (const cMapElement_categoryMethodMapForBuildingContext *) attributes ;
  GALGAS_categoryMethodMapForType result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_categoryMethodMapForBuildingContext) ;
    result = p->mAttribute_mCategoryMethodMapForType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForBuildingContext::modifier_setMCategoryMethodMapForTypeForKey (GALGAS_categoryMethodMapForType inAttributeValue,
                                                                                              GALGAS_string inKey,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryMethodMapForBuildingContext * p = (cMapElement_categoryMethodMapForBuildingContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryMethodMapForBuildingContext) ;
    p->mAttribute_mCategoryMethodMapForType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_categoryMethodMapForBuildingContext * GALGAS_categoryMethodMapForBuildingContext::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                                        const GALGAS_string & inKey
                                                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryMethodMapForBuildingContext * result = (cMapElement_categoryMethodMapForBuildingContext *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryMethodMapForBuildingContext) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_categoryMethodMapForBuildingContext * GALGAS_categoryMethodMapForBuildingContext::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                                           const GALGAS_lstring & inKey
                                                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_categoryMethodMapForBuildingContext_searchKey COMMA_THERE) ;
  cMapElement_categoryMethodMapForBuildingContext * result = (cMapElement_categoryMethodMapForBuildingContext *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryMethodMapForBuildingContext) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_categoryMethodMapForBuildingContext::cEnumerator_categoryMethodMapForBuildingContext (const GALGAS_categoryMethodMapForBuildingContext & inEnumeratedObject,
                                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext_2E_element cEnumerator_categoryMethodMapForBuildingContext::current (LOCATION_ARGS) const {
  const cMapElement_categoryMethodMapForBuildingContext * p = (const cMapElement_categoryMethodMapForBuildingContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_categoryMethodMapForBuildingContext) ;
  return GALGAS_categoryMethodMapForBuildingContext_2E_element (p->mAttribute_lkey, p->mAttribute_mCategoryMethodMapForType) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryMethodMapForBuildingContext::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType cEnumerator_categoryMethodMapForBuildingContext::current_mCategoryMethodMapForType (LOCATION_ARGS) const {
  const cMapElement_categoryMethodMapForBuildingContext * p = (const cMapElement_categoryMethodMapForBuildingContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_categoryMethodMapForBuildingContext) ;
  return p->mAttribute_mCategoryMethodMapForType ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                 @categoryMethodMapForBuildingContext type                 *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryMethodMapForBuildingContext ("categoryMethodMapForBuildingContext",
                                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryMethodMapForBuildingContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryMethodMapForBuildingContext ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryMethodMapForBuildingContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryMethodMapForBuildingContext (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext GALGAS_categoryMethodMapForBuildingContext::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler,
                                                                                                      const GALGAS_location & inErrorLocation,
                                                                                                      const GALGAS_string & inErrorMessage
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForBuildingContext result ;
  const GALGAS_categoryMethodMapForBuildingContext * p = (const GALGAS_categoryMethodMapForBuildingContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryMethodMapForBuildingContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_categoryModifierMapForType::cMapElement_categoryModifierMapForType (const GALGAS_lstring & inKey,
                                                                                const GALGAS_formalParameterListAST & in_mFormalParameterList
                                                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mFormalParameterList (in_mFormalParameterList) {
}

//---------------------------------------------------------------------------*

bool cMapElement_categoryModifierMapForType::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFormalParameterList.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_categoryModifierMapForType::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_categoryModifierMapForType (mAttribute_lkey, mAttribute_mFormalParameterList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_categoryModifierMapForType::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFormalParameterList" ":" ;
  mAttribute_mFormalParameterList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_categoryModifierMapForType::compare (const cCollectionElement * inOperand) const {
  cMapElement_categoryModifierMapForType * operand = (cMapElement_categoryModifierMapForType *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mFormalParameterList.objectCompare (operand->mAttribute_mFormalParameterList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType::GALGAS_categoryModifierMapForType (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType::GALGAS_categoryModifierMapForType (const GALGAS_categoryModifierMapForType & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType & GALGAS_categoryModifierMapForType::operator = (const GALGAS_categoryModifierMapForType & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType GALGAS_categoryModifierMapForType::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_categoryModifierMapForType result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType GALGAS_categoryModifierMapForType::constructor_mapWithMapToOverride (const GALGAS_categoryModifierMapForType & inMapToOverride
                                                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForType result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType GALGAS_categoryModifierMapForType::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_categoryModifierMapForType result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForType::modifier_insertKey (GALGAS_lstring inKey,
                                                            GALGAS_formalParameterListAST inArgument0,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cMapElement_categoryModifierMapForType * p = NULL ;
  macroMyNew (p, cMapElement_categoryModifierMapForType (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' modifier has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterListAST GALGAS_categoryModifierMapForType::reader_mFormalParameterListForKey (const GALGAS_string & inKey,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_categoryModifierMapForType * p = (const cMapElement_categoryModifierMapForType *) attributes ;
  GALGAS_formalParameterListAST result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_categoryModifierMapForType) ;
    result = p->mAttribute_mFormalParameterList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForType::modifier_setMFormalParameterListForKey (GALGAS_formalParameterListAST inAttributeValue,
                                                                                GALGAS_string inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryModifierMapForType * p = (cMapElement_categoryModifierMapForType *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryModifierMapForType) ;
    p->mAttribute_mFormalParameterList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_categoryModifierMapForType * GALGAS_categoryModifierMapForType::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                      const GALGAS_string & inKey
                                                                                                                      COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryModifierMapForType * result = (cMapElement_categoryModifierMapForType *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryModifierMapForType) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_categoryModifierMapForType::cEnumerator_categoryModifierMapForType (const GALGAS_categoryModifierMapForType & inEnumeratedObject,
                                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType_2E_element cEnumerator_categoryModifierMapForType::current (LOCATION_ARGS) const {
  const cMapElement_categoryModifierMapForType * p = (const cMapElement_categoryModifierMapForType *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_categoryModifierMapForType) ;
  return GALGAS_categoryModifierMapForType_2E_element (p->mAttribute_lkey, p->mAttribute_mFormalParameterList) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryModifierMapForType::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterListAST cEnumerator_categoryModifierMapForType::current_mFormalParameterList (LOCATION_ARGS) const {
  const cMapElement_categoryModifierMapForType * p = (const cMapElement_categoryModifierMapForType *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_categoryModifierMapForType) ;
  return p->mAttribute_mFormalParameterList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @categoryModifierMapForType type                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryModifierMapForType ("categoryModifierMapForType",
                                                   NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryModifierMapForType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryModifierMapForType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryModifierMapForType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryModifierMapForType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType GALGAS_categoryModifierMapForType::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler,
                                                                                    const GALGAS_location & inErrorLocation,
                                                                                    const GALGAS_string & inErrorMessage
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForType result ;
  const GALGAS_categoryModifierMapForType * p = (const GALGAS_categoryModifierMapForType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryModifierMapForType *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_categoryModifierMapForBuildingContext::cMapElement_categoryModifierMapForBuildingContext (const GALGAS_lstring & inKey,
                                                                                                      const GALGAS_categoryModifierMapForType & in_mCategoryModifierMapForType
                                                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mCategoryModifierMapForType (in_mCategoryModifierMapForType) {
}

//---------------------------------------------------------------------------*

bool cMapElement_categoryModifierMapForBuildingContext::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCategoryModifierMapForType.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_categoryModifierMapForBuildingContext::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_categoryModifierMapForBuildingContext (mAttribute_lkey, mAttribute_mCategoryModifierMapForType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_categoryModifierMapForBuildingContext::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCategoryModifierMapForType" ":" ;
  mAttribute_mCategoryModifierMapForType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_categoryModifierMapForBuildingContext::compare (const cCollectionElement * inOperand) const {
  cMapElement_categoryModifierMapForBuildingContext * operand = (cMapElement_categoryModifierMapForBuildingContext *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mCategoryModifierMapForType.objectCompare (operand->mAttribute_mCategoryModifierMapForType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext::GALGAS_categoryModifierMapForBuildingContext (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext::GALGAS_categoryModifierMapForBuildingContext (const GALGAS_categoryModifierMapForBuildingContext & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext & GALGAS_categoryModifierMapForBuildingContext::operator = (const GALGAS_categoryModifierMapForBuildingContext & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext GALGAS_categoryModifierMapForBuildingContext::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_categoryModifierMapForBuildingContext result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext GALGAS_categoryModifierMapForBuildingContext::constructor_mapWithMapToOverride (const GALGAS_categoryModifierMapForBuildingContext & inMapToOverride
                                                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForBuildingContext result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext GALGAS_categoryModifierMapForBuildingContext::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_categoryModifierMapForBuildingContext result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForBuildingContext::modifier_insertKey (GALGAS_lstring inKey,
                                                                       GALGAS_categoryModifierMapForType inArgument0,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_categoryModifierMapForBuildingContext * p = NULL ;
  macroMyNew (p, cMapElement_categoryModifierMapForBuildingContext (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "internal error" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_categoryModifierMapForBuildingContext_searchKey = "internal error" ;

//---------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForBuildingContext::method_searchKey (GALGAS_lstring inKey,
                                                                     GALGAS_categoryModifierMapForType & outArgument0,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cMapElement_categoryModifierMapForBuildingContext * p = (const cMapElement_categoryModifierMapForBuildingContext *) performSearch (inKey,
                                                                                                                                             inCompiler,
                                                                                                                                             kSearchErrorMessage_categoryModifierMapForBuildingContext_searchKey
                                                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_categoryModifierMapForBuildingContext) ;
    outArgument0 = p->mAttribute_mCategoryModifierMapForType ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType GALGAS_categoryModifierMapForBuildingContext::reader_mCategoryModifierMapForTypeForKey (const GALGAS_string & inKey,
                                                                                                                          C_Compiler * inCompiler
                                                                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_categoryModifierMapForBuildingContext * p = (const cMapElement_categoryModifierMapForBuildingContext *) attributes ;
  GALGAS_categoryModifierMapForType result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_categoryModifierMapForBuildingContext) ;
    result = p->mAttribute_mCategoryModifierMapForType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForBuildingContext::modifier_setMCategoryModifierMapForTypeForKey (GALGAS_categoryModifierMapForType inAttributeValue,
                                                                                                  GALGAS_string inKey,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryModifierMapForBuildingContext * p = (cMapElement_categoryModifierMapForBuildingContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryModifierMapForBuildingContext) ;
    p->mAttribute_mCategoryModifierMapForType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_categoryModifierMapForBuildingContext * GALGAS_categoryModifierMapForBuildingContext::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                                            const GALGAS_string & inKey
                                                                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryModifierMapForBuildingContext * result = (cMapElement_categoryModifierMapForBuildingContext *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryModifierMapForBuildingContext) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_categoryModifierMapForBuildingContext * GALGAS_categoryModifierMapForBuildingContext::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                                               const GALGAS_lstring & inKey
                                                                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_categoryModifierMapForBuildingContext_searchKey COMMA_THERE) ;
  cMapElement_categoryModifierMapForBuildingContext * result = (cMapElement_categoryModifierMapForBuildingContext *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryModifierMapForBuildingContext) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_categoryModifierMapForBuildingContext::cEnumerator_categoryModifierMapForBuildingContext (const GALGAS_categoryModifierMapForBuildingContext & inEnumeratedObject,
                                                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext_2E_element cEnumerator_categoryModifierMapForBuildingContext::current (LOCATION_ARGS) const {
  const cMapElement_categoryModifierMapForBuildingContext * p = (const cMapElement_categoryModifierMapForBuildingContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_categoryModifierMapForBuildingContext) ;
  return GALGAS_categoryModifierMapForBuildingContext_2E_element (p->mAttribute_lkey, p->mAttribute_mCategoryModifierMapForType) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryModifierMapForBuildingContext::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType cEnumerator_categoryModifierMapForBuildingContext::current_mCategoryModifierMapForType (LOCATION_ARGS) const {
  const cMapElement_categoryModifierMapForBuildingContext * p = (const cMapElement_categoryModifierMapForBuildingContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_categoryModifierMapForBuildingContext) ;
  return p->mAttribute_mCategoryModifierMapForType ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                @categoryModifierMapForBuildingContext type                *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryModifierMapForBuildingContext ("categoryModifierMapForBuildingContext",
                                                              NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryModifierMapForBuildingContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryModifierMapForBuildingContext ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryModifierMapForBuildingContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryModifierMapForBuildingContext (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext GALGAS_categoryModifierMapForBuildingContext::extractObject (const GALGAS_object & inObject,
                                                                                                          C_Compiler * inCompiler,
                                                                                                          const GALGAS_location & inErrorLocation,
                                                                                                          const GALGAS_string & inErrorMessage
                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForBuildingContext result ;
  const GALGAS_categoryModifierMapForBuildingContext * p = (const GALGAS_categoryModifierMapForBuildingContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryModifierMapForBuildingContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_categoryReaderMapForType::cMapElement_categoryReaderMapForType (const GALGAS_lstring & inKey,
                                                                            const GALGAS_lstring & in_mResultTypeName,
                                                                            const GALGAS_formalInputParameterListAST & in_mInputFormalParameterList
                                                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mResultTypeName (in_mResultTypeName),
mAttribute_mInputFormalParameterList (in_mInputFormalParameterList) {
}

//---------------------------------------------------------------------------*

bool cMapElement_categoryReaderMapForType::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mResultTypeName.isValid () && mAttribute_mInputFormalParameterList.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_categoryReaderMapForType::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_categoryReaderMapForType (mAttribute_lkey, mAttribute_mResultTypeName, mAttribute_mInputFormalParameterList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_categoryReaderMapForType::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mResultTypeName" ":" ;
  mAttribute_mResultTypeName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInputFormalParameterList" ":" ;
  mAttribute_mInputFormalParameterList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_categoryReaderMapForType::compare (const cCollectionElement * inOperand) const {
  cMapElement_categoryReaderMapForType * operand = (cMapElement_categoryReaderMapForType *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mResultTypeName.objectCompare (operand->mAttribute_mResultTypeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInputFormalParameterList.objectCompare (operand->mAttribute_mInputFormalParameterList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType::GALGAS_categoryReaderMapForType (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType::GALGAS_categoryReaderMapForType (const GALGAS_categoryReaderMapForType & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType & GALGAS_categoryReaderMapForType::operator = (const GALGAS_categoryReaderMapForType & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType GALGAS_categoryReaderMapForType::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_categoryReaderMapForType result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType GALGAS_categoryReaderMapForType::constructor_mapWithMapToOverride (const GALGAS_categoryReaderMapForType & inMapToOverride
                                                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForType result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType GALGAS_categoryReaderMapForType::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_categoryReaderMapForType result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForType::modifier_insertKey (GALGAS_lstring inKey,
                                                          GALGAS_lstring inArgument0,
                                                          GALGAS_formalInputParameterListAST inArgument1,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cMapElement_categoryReaderMapForType * p = NULL ;
  macroMyNew (p, cMapElement_categoryReaderMapForType (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' reader has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryReaderMapForType::reader_mResultTypeNameForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_categoryReaderMapForType * p = (const cMapElement_categoryReaderMapForType *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_categoryReaderMapForType) ;
    result = p->mAttribute_mResultTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_formalInputParameterListAST GALGAS_categoryReaderMapForType::reader_mInputFormalParameterListForKey (const GALGAS_string & inKey,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_categoryReaderMapForType * p = (const cMapElement_categoryReaderMapForType *) attributes ;
  GALGAS_formalInputParameterListAST result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_categoryReaderMapForType) ;
    result = p->mAttribute_mInputFormalParameterList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForType::modifier_setMResultTypeNameForKey (GALGAS_lstring inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryReaderMapForType * p = (cMapElement_categoryReaderMapForType *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryReaderMapForType) ;
    p->mAttribute_mResultTypeName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForType::modifier_setMInputFormalParameterListForKey (GALGAS_formalInputParameterListAST inAttributeValue,
                                                                                   GALGAS_string inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryReaderMapForType * p = (cMapElement_categoryReaderMapForType *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryReaderMapForType) ;
    p->mAttribute_mInputFormalParameterList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_categoryReaderMapForType * GALGAS_categoryReaderMapForType::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                  const GALGAS_string & inKey
                                                                                                                  COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryReaderMapForType * result = (cMapElement_categoryReaderMapForType *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryReaderMapForType) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_categoryReaderMapForType::cEnumerator_categoryReaderMapForType (const GALGAS_categoryReaderMapForType & inEnumeratedObject,
                                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType_2E_element cEnumerator_categoryReaderMapForType::current (LOCATION_ARGS) const {
  const cMapElement_categoryReaderMapForType * p = (const cMapElement_categoryReaderMapForType *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_categoryReaderMapForType) ;
  return GALGAS_categoryReaderMapForType_2E_element (p->mAttribute_lkey, p->mAttribute_mResultTypeName, p->mAttribute_mInputFormalParameterList) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryReaderMapForType::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryReaderMapForType::current_mResultTypeName (LOCATION_ARGS) const {
  const cMapElement_categoryReaderMapForType * p = (const cMapElement_categoryReaderMapForType *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_categoryReaderMapForType) ;
  return p->mAttribute_mResultTypeName ;
}

//---------------------------------------------------------------------------*

GALGAS_formalInputParameterListAST cEnumerator_categoryReaderMapForType::current_mInputFormalParameterList (LOCATION_ARGS) const {
  const cMapElement_categoryReaderMapForType * p = (const cMapElement_categoryReaderMapForType *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_categoryReaderMapForType) ;
  return p->mAttribute_mInputFormalParameterList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                      @categoryReaderMapForType type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryReaderMapForType ("categoryReaderMapForType",
                                                 NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryReaderMapForType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryReaderMapForType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryReaderMapForType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryReaderMapForType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType GALGAS_categoryReaderMapForType::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler,
                                                                                const GALGAS_location & inErrorLocation,
                                                                                const GALGAS_string & inErrorMessage
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForType result ;
  const GALGAS_categoryReaderMapForType * p = (const GALGAS_categoryReaderMapForType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryReaderMapForType *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_categoryReaderMapForBuildingContext::cMapElement_categoryReaderMapForBuildingContext (const GALGAS_lstring & inKey,
                                                                                                  const GALGAS_categoryReaderMapForType & in_mCategoryReaderMapForType
                                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mCategoryReaderMapForType (in_mCategoryReaderMapForType) {
}

//---------------------------------------------------------------------------*

bool cMapElement_categoryReaderMapForBuildingContext::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCategoryReaderMapForType.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_categoryReaderMapForBuildingContext::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_categoryReaderMapForBuildingContext (mAttribute_lkey, mAttribute_mCategoryReaderMapForType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_categoryReaderMapForBuildingContext::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCategoryReaderMapForType" ":" ;
  mAttribute_mCategoryReaderMapForType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_categoryReaderMapForBuildingContext::compare (const cCollectionElement * inOperand) const {
  cMapElement_categoryReaderMapForBuildingContext * operand = (cMapElement_categoryReaderMapForBuildingContext *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mCategoryReaderMapForType.objectCompare (operand->mAttribute_mCategoryReaderMapForType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext::GALGAS_categoryReaderMapForBuildingContext (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext::GALGAS_categoryReaderMapForBuildingContext (const GALGAS_categoryReaderMapForBuildingContext & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext & GALGAS_categoryReaderMapForBuildingContext::operator = (const GALGAS_categoryReaderMapForBuildingContext & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext GALGAS_categoryReaderMapForBuildingContext::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_categoryReaderMapForBuildingContext result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext GALGAS_categoryReaderMapForBuildingContext::constructor_mapWithMapToOverride (const GALGAS_categoryReaderMapForBuildingContext & inMapToOverride
                                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForBuildingContext result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext GALGAS_categoryReaderMapForBuildingContext::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_categoryReaderMapForBuildingContext result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForBuildingContext::modifier_insertKey (GALGAS_lstring inKey,
                                                                     GALGAS_categoryReaderMapForType inArgument0,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_categoryReaderMapForBuildingContext * p = NULL ;
  macroMyNew (p, cMapElement_categoryReaderMapForBuildingContext (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "internal error" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_categoryReaderMapForBuildingContext_searchKey = "internal error" ;

//---------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForBuildingContext::method_searchKey (GALGAS_lstring inKey,
                                                                   GALGAS_categoryReaderMapForType & outArgument0,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_categoryReaderMapForBuildingContext * p = (const cMapElement_categoryReaderMapForBuildingContext *) performSearch (inKey,
                                                                                                                                         inCompiler,
                                                                                                                                         kSearchErrorMessage_categoryReaderMapForBuildingContext_searchKey
                                                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_categoryReaderMapForBuildingContext) ;
    outArgument0 = p->mAttribute_mCategoryReaderMapForType ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType GALGAS_categoryReaderMapForBuildingContext::reader_mCategoryReaderMapForTypeForKey (const GALGAS_string & inKey,
                                                                                                                    C_Compiler * inCompiler
                                                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_categoryReaderMapForBuildingContext * p = (const cMapElement_categoryReaderMapForBuildingContext *) attributes ;
  GALGAS_categoryReaderMapForType result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_categoryReaderMapForBuildingContext) ;
    result = p->mAttribute_mCategoryReaderMapForType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForBuildingContext::modifier_setMCategoryReaderMapForTypeForKey (GALGAS_categoryReaderMapForType inAttributeValue,
                                                                                              GALGAS_string inKey,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryReaderMapForBuildingContext * p = (cMapElement_categoryReaderMapForBuildingContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryReaderMapForBuildingContext) ;
    p->mAttribute_mCategoryReaderMapForType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_categoryReaderMapForBuildingContext * GALGAS_categoryReaderMapForBuildingContext::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                                        const GALGAS_string & inKey
                                                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryReaderMapForBuildingContext * result = (cMapElement_categoryReaderMapForBuildingContext *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryReaderMapForBuildingContext) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_categoryReaderMapForBuildingContext * GALGAS_categoryReaderMapForBuildingContext::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                                           const GALGAS_lstring & inKey
                                                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_categoryReaderMapForBuildingContext_searchKey COMMA_THERE) ;
  cMapElement_categoryReaderMapForBuildingContext * result = (cMapElement_categoryReaderMapForBuildingContext *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryReaderMapForBuildingContext) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_categoryReaderMapForBuildingContext::cEnumerator_categoryReaderMapForBuildingContext (const GALGAS_categoryReaderMapForBuildingContext & inEnumeratedObject,
                                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext_2E_element cEnumerator_categoryReaderMapForBuildingContext::current (LOCATION_ARGS) const {
  const cMapElement_categoryReaderMapForBuildingContext * p = (const cMapElement_categoryReaderMapForBuildingContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_categoryReaderMapForBuildingContext) ;
  return GALGAS_categoryReaderMapForBuildingContext_2E_element (p->mAttribute_lkey, p->mAttribute_mCategoryReaderMapForType) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryReaderMapForBuildingContext::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType cEnumerator_categoryReaderMapForBuildingContext::current_mCategoryReaderMapForType (LOCATION_ARGS) const {
  const cMapElement_categoryReaderMapForBuildingContext * p = (const cMapElement_categoryReaderMapForBuildingContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_categoryReaderMapForBuildingContext) ;
  return p->mAttribute_mCategoryReaderMapForType ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                 @categoryReaderMapForBuildingContext type                 *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryReaderMapForBuildingContext ("categoryReaderMapForBuildingContext",
                                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryReaderMapForBuildingContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryReaderMapForBuildingContext ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryReaderMapForBuildingContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryReaderMapForBuildingContext (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext GALGAS_categoryReaderMapForBuildingContext::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler,
                                                                                                      const GALGAS_location & inErrorLocation,
                                                                                                      const GALGAS_string & inErrorMessage
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForBuildingContext result ;
  const GALGAS_categoryReaderMapForBuildingContext * p = (const GALGAS_categoryReaderMapForBuildingContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryReaderMapForBuildingContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'addCategories'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addCategories (const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                            const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                            const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                            GALGAS_semanticContext & ioArgument_ioSemanticContext,
                            const GALGAS_lstring constinArgument_inTypeName,
                            GALGAS_readerMap & ioArgument_ioReaderMap,
                            GALGAS_modifierMap & ioArgument_ioModifierMap,
                            GALGAS_instanceMethodMap & ioArgument_ioInstanceMethodMap,
                            C_Compiler * inCompiler
                            COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = constinArgument_inCategoryMethodMapForBuildingContext.reader_hasKey (constinArgument_inTypeName.reader_string (SOURCE_FILE_AT_LINE (491)) COMMA_SOURCE_FILE_AT_LINE (491)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_categoryMethodMapForType var_categoryMethodMapForType ;
    constinArgument_inCategoryMethodMapForBuildingContext.method_searchKey (constinArgument_inTypeName, var_categoryMethodMapForType, inCompiler COMMA_SOURCE_FILE_AT_LINE (493)) ;
    cEnumerator_categoryMethodMapForType enumerator_19700 (var_categoryMethodMapForType, kEnumeration_up) ;
    while (enumerator_19700.hasCurrentObject ()) {
      GALGAS_formalParameterSignature var_formalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (495)) ;
      cEnumerator_formalParameterListAST enumerator_19803 (enumerator_19700.current_mFormalParameterList (HERE), kEnumeration_up) ;
      while (enumerator_19803.hasCurrentObject ()) {
        GALGAS_unifiedTypeMapProxy var_typeIndex ;
        {
        GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_19803.current_mFormalArgumentTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (498)), var_typeIndex COMMA_SOURCE_FILE_AT_LINE (498)) ;
        }
        var_formalArgumentList.addAssign_operation (var_typeIndex, enumerator_19803.current_mFormalArgumentPassingMode (HERE) COMMA_SOURCE_FILE_AT_LINE (499)) ;
        enumerator_19803.gotoNextObject () ;
      }
      {
      ioArgument_ioInstanceMethodMap.modifier_insertKey (enumerator_19700.current_lkey (HERE), GALGAS_methodKind::constructor_definedAsCategory (SOURCE_FILE_AT_LINE (503)), var_formalArgumentList, enumerator_19700.current_lkey (HERE).reader_location (SOURCE_FILE_AT_LINE (505)), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (507)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (501)) ;
      }
      enumerator_19700.gotoNextObject () ;
    }
  }
  const enumGalgasBool test_1 = constinArgument_inCategoryReaderMapForBuildingContext.reader_hasKey (constinArgument_inTypeName.reader_string (SOURCE_FILE_AT_LINE (513)) COMMA_SOURCE_FILE_AT_LINE (513)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_categoryReaderMapForType var_categoryReaderMapForType ;
    constinArgument_inCategoryReaderMapForBuildingContext.method_searchKey (constinArgument_inTypeName, var_categoryReaderMapForType, inCompiler COMMA_SOURCE_FILE_AT_LINE (515)) ;
    cEnumerator_categoryReaderMapForType enumerator_20640 (var_categoryReaderMapForType, kEnumeration_up) ;
    while (enumerator_20640.hasCurrentObject ()) {
      GALGAS_unifiedTypeMapProxyList var_formalArgumentList = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (517)) ;
      cEnumerator_formalInputParameterListAST enumerator_20747 (enumerator_20640.current_mInputFormalParameterList (HERE), kEnumeration_up) ;
      while (enumerator_20747.hasCurrentObject ()) {
        GALGAS_unifiedTypeMapProxy var_typeIndex ;
        {
        GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_20747.current_mFormalArgumentTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (520)), var_typeIndex COMMA_SOURCE_FILE_AT_LINE (520)) ;
        }
        var_formalArgumentList.addAssign_operation (var_typeIndex COMMA_SOURCE_FILE_AT_LINE (521)) ;
        enumerator_20747.gotoNextObject () ;
      }
      GALGAS_unifiedTypeMapProxy var_returnedType ;
      {
      GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_20640.current_mResultTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (524)), var_returnedType COMMA_SOURCE_FILE_AT_LINE (524)) ;
      }
      {
      ioArgument_ioReaderMap.modifier_insertKey (enumerator_20640.current_lkey (HERE), GALGAS_methodKind::constructor_definedAsCategory (SOURCE_FILE_AT_LINE (527)), var_formalArgumentList, enumerator_20640.current_lkey (HERE).reader_location (SOURCE_FILE_AT_LINE (529)), GALGAS_bool (true), var_returnedType, GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (532)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (525)) ;
      }
      enumerator_20640.gotoNextObject () ;
    }
  }
  const enumGalgasBool test_2 = constinArgument_inCategoryModifierMapForBuildingContext.reader_hasKey (constinArgument_inTypeName.reader_string (SOURCE_FILE_AT_LINE (538)) COMMA_SOURCE_FILE_AT_LINE (538)).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_categoryModifierMapForType var_categoryModifierMapForType ;
    constinArgument_inCategoryModifierMapForBuildingContext.method_searchKey (constinArgument_inTypeName, var_categoryModifierMapForType, inCompiler COMMA_SOURCE_FILE_AT_LINE (540)) ;
    cEnumerator_categoryModifierMapForType enumerator_21744 (var_categoryModifierMapForType, kEnumeration_up) ;
    while (enumerator_21744.hasCurrentObject ()) {
      GALGAS_formalParameterSignature var_formalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (542)) ;
      cEnumerator_formalParameterListAST enumerator_21847 (enumerator_21744.current_mFormalParameterList (HERE), kEnumeration_up) ;
      while (enumerator_21847.hasCurrentObject ()) {
        GALGAS_unifiedTypeMapProxy var_typeIndex ;
        {
        GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_21847.current_mFormalArgumentTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (545)), var_typeIndex COMMA_SOURCE_FILE_AT_LINE (545)) ;
        }
        var_formalArgumentList.addAssign_operation (var_typeIndex, enumerator_21847.current_mFormalArgumentPassingMode (HERE) COMMA_SOURCE_FILE_AT_LINE (546)) ;
        enumerator_21847.gotoNextObject () ;
      }
      {
      ioArgument_ioModifierMap.modifier_insertKey (enumerator_21744.current_lkey (HERE), GALGAS_methodKind::constructor_definedAsCategory (SOURCE_FILE_AT_LINE (550)), var_formalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (553)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (548)) ;
      }
      enumerator_21744.gotoNextObject () ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   Once function 'elementTypeNameSuffix'                   *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string onceFunction_elementTypeNameSuffix (C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string (".element") ;
//---
  return result_outResult ;
}



//---------------------------------------------------------------------------*
//  Function implementation                                                  *
//---------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_elementTypeNameSuffix = false ;
static GALGAS_string gOnceFunctionResult_elementTypeNameSuffix ;

//---------------------------------------------------------------------------*

GALGAS_string function_elementTypeNameSuffix (C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_elementTypeNameSuffix) {
    gOnceFunctionResult_elementTypeNameSuffix = onceFunction_elementTypeNameSuffix (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_elementTypeNameSuffix = true ;
  }
  return gOnceFunctionResult_elementTypeNameSuffix ;
}

//---------------------------------------------------------------------------*

static void releaseOnceFunctionResult_elementTypeNameSuffix (void) {
  gOnceFunctionResult_elementTypeNameSuffix.drop () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_elementTypeNameSuffix (NULL,
                                                                   releaseOnceFunctionResult_elementTypeNameSuffix) ;

//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_elementTypeNameSuffix [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_elementTypeNameSuffix (C_Compiler * inCompiler,
                                                                      const cObjectArray & /* inEffectiveParameterArray */,
                                                                      const GALGAS_location & /* inErrorLocation */
                                                                      COMMA_LOCATION_ARGS) {
  return function_elementTypeNameSuffix (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_elementTypeNameSuffix ("elementTypeNameSuffix",
                                                                       functionWithGenericHeader_elementTypeNameSuffix,
                                                                       & kTypeDescriptor_GALGAS_string,
                                                                       0,
                                                                       functionArgs_elementTypeNameSuffix) ;

//---------------------------------------------------------------------------*

cMapElement_wrapperExtensionMap::cMapElement_wrapperExtensionMap (const GALGAS_lstring & inKey
                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------*

bool cMapElement_wrapperExtensionMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_wrapperExtensionMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_wrapperExtensionMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_wrapperExtensionMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_wrapperExtensionMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_wrapperExtensionMap * operand = (cMapElement_wrapperExtensionMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap::GALGAS_wrapperExtensionMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap::GALGAS_wrapperExtensionMap (const GALGAS_wrapperExtensionMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap & GALGAS_wrapperExtensionMap::operator = (const GALGAS_wrapperExtensionMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap GALGAS_wrapperExtensionMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_wrapperExtensionMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap GALGAS_wrapperExtensionMap::constructor_mapWithMapToOverride (const GALGAS_wrapperExtensionMap & inMapToOverride
                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_wrapperExtensionMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap GALGAS_wrapperExtensionMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_wrapperExtensionMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_wrapperExtensionMap::modifier_insertKey (GALGAS_lstring inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_wrapperExtensionMap * p = NULL ;
  macroMyNew (p, cMapElement_wrapperExtensionMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' extension has been already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

cMapElement_wrapperExtensionMap * GALGAS_wrapperExtensionMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                        const GALGAS_string & inKey
                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperExtensionMap * result = (cMapElement_wrapperExtensionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_wrapperExtensionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_wrapperExtensionMap::cEnumerator_wrapperExtensionMap (const GALGAS_wrapperExtensionMap & inEnumeratedObject,
                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap_2E_element cEnumerator_wrapperExtensionMap::current (LOCATION_ARGS) const {
  const cMapElement_wrapperExtensionMap * p = (const cMapElement_wrapperExtensionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_wrapperExtensionMap) ;
  return GALGAS_wrapperExtensionMap_2E_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_wrapperExtensionMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @wrapperExtensionMap type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_wrapperExtensionMap ("wrapperExtensionMap",
                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_wrapperExtensionMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_wrapperExtensionMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_wrapperExtensionMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_wrapperExtensionMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap GALGAS_wrapperExtensionMap::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler,
                                                                      const GALGAS_location & inErrorLocation,
                                                                      const GALGAS_string & inErrorMessage
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_wrapperExtensionMap result ;
  const GALGAS_wrapperExtensionMap * p = (const GALGAS_wrapperExtensionMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_wrapperExtensionMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'recursivelyEnumerateDirectories'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivelyEnumerateDirectories (const GALGAS_string constinArgument_inAbsoluteSourcePath,
                                              const GALGAS_string constinArgument_inPathInWrapper,
                                              const GALGAS_wrapperExtensionMap constinArgument_inTextFileExtensionMap,
                                              const GALGAS_wrapperExtensionMap constinArgument_inBinaryFileExtensionMap,
                                              GALGAS_wrapperFileMap & outArgument_outWrapperFileMap,
                                              GALGAS_wrapperDirectoryMap & outArgument_outWrapperDirectoryMap,
                                              GALGAS_uint & ioArgument_ioWrapperFileIndex,
                                              GALGAS_uint & ioArgument_ioWrapperDirectoryIndex,
                                              C_Compiler * inCompiler
                                              COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outWrapperFileMap.drop () ; // Release 'out' argument
  outArgument_outWrapperDirectoryMap.drop () ; // Release 'out' argument
  GALGAS_uint var_currentDirectoryIndex = ioArgument_ioWrapperDirectoryIndex ;
  ioArgument_ioWrapperDirectoryIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1752)) ;
  GALGAS_stringlist var_files = constinArgument_inAbsoluteSourcePath.reader_regularFiles (GALGAS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1754)) ;
  outArgument_outWrapperFileMap = GALGAS_wrapperFileMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1755)) ;
  cEnumerator_stringlist enumerator_70827 (var_files, kEnumeration_up) ;
  while (enumerator_70827.hasCurrentObject ()) {
    const enumGalgasBool test_0 = constinArgument_inTextFileExtensionMap.reader_hasKey (enumerator_70827.current_mValue (HERE).reader_pathExtension (SOURCE_FILE_AT_LINE (1757)) COMMA_SOURCE_FILE_AT_LINE (1757)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_absoluteFilePath = constinArgument_inAbsoluteSourcePath.operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1758)).operator_concat (enumerator_70827.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1758)) ;
      {
      outArgument_outWrapperFileMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_70827.current_mValue (HERE), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1760)), var_absoluteFilePath, GALGAS_bool (true), var_currentDirectoryIndex, ioArgument_ioWrapperFileIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1759)) ;
      }
      ioArgument_ioWrapperFileIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1766)) ;
    }else if (kBoolFalse == test_0) {
      const enumGalgasBool test_1 = constinArgument_inBinaryFileExtensionMap.reader_hasKey (enumerator_70827.current_mValue (HERE).reader_pathExtension (SOURCE_FILE_AT_LINE (1767)) COMMA_SOURCE_FILE_AT_LINE (1767)).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_string var_absoluteFilePath = constinArgument_inAbsoluteSourcePath.operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1768)).operator_concat (enumerator_70827.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1768)) ;
        {
        outArgument_outWrapperFileMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_70827.current_mValue (HERE), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1770)), var_absoluteFilePath, GALGAS_bool (false), var_currentDirectoryIndex, ioArgument_ioWrapperFileIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1769)) ;
        }
        ioArgument_ioWrapperFileIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1776)) ;
      }
    }
    enumerator_70827.gotoNextObject () ;
  }
  GALGAS_stringlist var_directories = constinArgument_inAbsoluteSourcePath.reader_directories (GALGAS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1780)) ;
  outArgument_outWrapperDirectoryMap = GALGAS_wrapperDirectoryMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1781)) ;
  cEnumerator_stringlist enumerator_71792 (var_directories, kEnumeration_up) ;
  while (enumerator_71792.hasCurrentObject ()) {
    GALGAS_wrapperFileMap var_internalWrapperFileMap ;
    GALGAS_wrapperDirectoryMap var_internalWrapperDirectoryMap ;
    GALGAS_uint var_theDirectoryIndex = ioArgument_ioWrapperDirectoryIndex ;
    {
    routine_recursivelyEnumerateDirectories (constinArgument_inAbsoluteSourcePath.operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1787)).operator_concat (enumerator_71792.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1787)), constinArgument_inPathInWrapper.operator_concat (enumerator_71792.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1788)).operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1788)), constinArgument_inTextFileExtensionMap, constinArgument_inBinaryFileExtensionMap, var_internalWrapperFileMap, var_internalWrapperDirectoryMap, ioArgument_ioWrapperFileIndex, ioArgument_ioWrapperDirectoryIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1786)) ;
    }
    {
    outArgument_outWrapperDirectoryMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_71792.current_mValue (HERE), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1797)), var_internalWrapperFileMap, var_internalWrapperDirectoryMap, var_theDirectoryIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1796)) ;
    }
    enumerator_71792.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   '@semanticTypePrecedenceGraph' graph                    *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph::GALGAS_semanticTypePrecedenceGraph (void) :
AC_GALGAS_graph () {
}

//---------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph GALGAS_semanticTypePrecedenceGraph::constructor_emptyGraph (LOCATION_ARGS) {
  GALGAS_semanticTypePrecedenceGraph result ;
  result.makeNewEmptyGraph (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::modifier_addNode (GALGAS_lstring inKey,
                                                           GALGAS_semanticDeclarationAST inArgument_0,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  GALGAS_semanticDeclarationListAST::makeAttributesFromObjects (attributes, inArgument_0 COMMA_THERE) ;
  const char * kErrorMessage = "the '%K' type is already declared at %L" ;
  internalAddNode (inKey, kErrorMessage, attributes, inCompiler COMMA_THERE) ;
}


//---------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::method_topologicalSort (GALGAS_semanticDeclarationListAST & outSortedList,
                                                                 GALGAS_lstringlist & outSortedKeyList,
                                                                 GALGAS_semanticDeclarationListAST & outUnsortedList,
                                                                 GALGAS_lstringlist & outUnsortedKeyList,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  cSharedList * sortedList = NULL ;
  cSharedList * unsortedList = NULL ;
  internalTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_semanticDeclarationListAST (sortedList) ;
  outUnsortedList = GALGAS_semanticDeclarationListAST (unsortedList) ;
  GALGAS_semanticDeclarationListAST::detachSharedList (sortedList) ;
  GALGAS_semanticDeclarationListAST::detachSharedList (unsortedList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                     @semanticTypePrecedenceGraph type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_semanticTypePrecedenceGraph ("semanticTypePrecedenceGraph",
                                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_semanticTypePrecedenceGraph::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_semanticTypePrecedenceGraph ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_semanticTypePrecedenceGraph::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_semanticTypePrecedenceGraph (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph GALGAS_semanticTypePrecedenceGraph::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler,
                                                                                      const GALGAS_location & inErrorLocation,
                                                                                      const GALGAS_string & inErrorMessage
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_semanticTypePrecedenceGraph result ;
  const GALGAS_semanticTypePrecedenceGraph * p = (const GALGAS_semanticTypePrecedenceGraph *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_semanticTypePrecedenceGraph *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'buildSemanticContext'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildSemanticContext (const GALGAS_string constinArgument_inSourceFile,
                                   const GALGAS_semanticDeclarationListAST constinArgument_inSemanticDeclarationList,
                                   const GALGAS_location constinArgument_inEndOfSourceFile,
                                   GALGAS_semanticContext & outArgument_outSemanticContext,
                                   C_Compiler * inCompiler
                                   COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSemanticContext.drop () ; // Release 'out' argument
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inSemanticDeclarationList ;
  cEnumerator_semanticDeclarationListAST enumerator_140596 (constinArgument_inSemanticDeclarationList, kEnumeration_up) ;
  while (enumerator_140596.hasCurrentObject ()) {
    callCategoryMethod_addAssociatedElement ((const cPtr_semanticDeclarationAST *) enumerator_140596.current_mSemanticDeclaration (HERE).ptr (), var_semanticDeclarationList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3438)) ;
    enumerator_140596.gotoNextObject () ;
  }
  GALGAS_semanticTypePrecedenceGraph var_semanticTypePrecedenceGraph = GALGAS_semanticTypePrecedenceGraph::constructor_emptyGraph (SOURCE_FILE_AT_LINE (3444)) ;
  GALGAS_categoryMethodMapForBuildingContext var_categoryMethodMapForBuildingContext = GALGAS_categoryMethodMapForBuildingContext::constructor_emptyMap (SOURCE_FILE_AT_LINE (3445)) ;
  GALGAS_categoryReaderMapForBuildingContext var_categoryReaderMapForBuildingContext = GALGAS_categoryReaderMapForBuildingContext::constructor_emptyMap (SOURCE_FILE_AT_LINE (3446)) ;
  GALGAS_categoryModifierMapForBuildingContext var_categoryModifierMapForBuildingContext = GALGAS_categoryModifierMapForBuildingContext::constructor_emptyMap (SOURCE_FILE_AT_LINE (3447)) ;
  GALGAS_semanticDeclarationListAST var_categoryOverrideDefinitionList = GALGAS_semanticDeclarationListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (3448)) ;
  cEnumerator_semanticDeclarationListAST enumerator_141329 (var_semanticDeclarationList, kEnumeration_up) ;
  while (enumerator_141329.hasCurrentObject ()) {
    callCategoryMethod_enterDeclarationInGraph ((const cPtr_semanticDeclarationAST *) enumerator_141329.current_mSemanticDeclaration (HERE).ptr (), var_semanticTypePrecedenceGraph, var_categoryMethodMapForBuildingContext, var_categoryReaderMapForBuildingContext, var_categoryModifierMapForBuildingContext, var_categoryOverrideDefinitionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3450)) ;
    enumerator_141329.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_semanticTypePrecedenceGraph.reader_undefinedNodeCount (SOURCE_FILE_AT_LINE (3458)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    cEnumerator_lstringlist enumerator_141749 (var_semanticTypePrecedenceGraph.reader_undefinedNodeReferenceList (SOURCE_FILE_AT_LINE (3459)), kEnumeration_up) ;
    while (enumerator_141749.hasCurrentObject ()) {
      GALGAS_location location_1 (enumerator_141749.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_141749.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (3460)) COMMA_SOURCE_FILE_AT_LINE (3460)).operator_concat (GALGAS_string ("' type is not defined") COMMA_SOURCE_FILE_AT_LINE (3460)) COMMA_SOURCE_FILE_AT_LINE (3460)) ;
      enumerator_141749.gotoNextObject () ;
    }
    inCompiler->emitSemanticError (constinArgument_inEndOfSourceFile, GALGAS_string ("semantic analysis not performed, due to undefined type error(s)") COMMA_SOURCE_FILE_AT_LINE (3462)) ;
    outArgument_outSemanticContext.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    GALGAS_semanticDeclarationListAST var_sortedSemanticDeclarationListAST ;
    GALGAS_semanticDeclarationListAST var_unsortedSemanticDeclarationListAST ;
    GALGAS_lstringlist var_unsortedNodeKeyList ;
    GALGAS_lstringlist joker_142085_0 ; // Joker input parameter
    var_semanticTypePrecedenceGraph.method_topologicalSort (var_sortedSemanticDeclarationListAST, joker_142085_0, var_unsortedSemanticDeclarationListAST, var_unsortedNodeKeyList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3464)) ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE_AT_LINE (3475)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_string var_s = GALGAS_string ("semantic analysis not performed, ").operator_concat (var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE_AT_LINE (3476)).reader_string (SOURCE_FILE_AT_LINE (3476)) COMMA_SOURCE_FILE_AT_LINE (3476)).operator_concat (GALGAS_string (" declarations are involved in circular definition:") COMMA_SOURCE_FILE_AT_LINE (3476)) ;
      cEnumerator_semanticDeclarationListAST enumerator_142670 (var_unsortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_142670.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "-  ").operator_concat (callCategoryReader_keyRepresentation ((const cPtr_semanticDeclarationAST *) enumerator_142670.current_mSemanticDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (3478)) COMMA_SOURCE_FILE_AT_LINE (3478)) COMMA_SOURCE_FILE_AT_LINE (3478)) ;
        enumerator_142670.gotoNextObject () ;
      }
      inCompiler->emitSemanticError (constinArgument_inEndOfSourceFile, var_s COMMA_SOURCE_FILE_AT_LINE (3480)) ;
      outArgument_outSemanticContext.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_2) {
      var_sortedSemanticDeclarationListAST.dotAssign_operation (var_categoryOverrideDefinitionList COMMA_SOURCE_FILE_AT_LINE (3483)) ;
      outArgument_outSemanticContext = GALGAS_semanticContext::constructor_new (constinArgument_inSourceFile, GALGAS_unifiedTypeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (3487)), GALGAS_routineMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (3488)), GALGAS_functionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (3489)), GALGAS_filewrapperMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (3490)), GALGAS_grammarMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (3491)), GALGAS_optionComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE_AT_LINE (3492)), GALGAS_lexiqueComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE_AT_LINE (3493)), GALGAS_optionMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE_AT_LINE (3494)) COMMA_SOURCE_FILE_AT_LINE (3485)) ;
      cEnumerator_semanticDeclarationListAST enumerator_143478 (var_sortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_143478.hasCurrentObject ()) {
        callCategoryMethod_enterInSemanticContext ((const cPtr_semanticDeclarationAST *) enumerator_143478.current_mSemanticDeclaration (HERE).ptr (), var_categoryMethodMapForBuildingContext, var_categoryReaderMapForBuildingContext, var_categoryModifierMapForBuildingContext, outArgument_outSemanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (3498)) ;
        enumerator_143478.gotoNextObject () ;
      }
    }
  }
}


//---------------------------------------------------------------------------*

GALGAS_semanticContext::GALGAS_semanticContext (void) :
mAttribute_mSourceFileAbsolutePath (),
mAttribute_mTypeMap (),
mAttribute_mRoutineMap (),
mAttribute_mFunctionMap (),
mAttribute_mFilewrapperMap (),
mAttribute_mGrammarMap (),
mAttribute_mOptionComponentMapForSemanticAnalysis (),
mAttribute_mLexiqueComponentMapForSemanticAnalysis (),
mAttribute_mOptionMap () {
}

//---------------------------------------------------------------------------*

GALGAS_semanticContext::~ GALGAS_semanticContext (void) {
}

//---------------------------------------------------------------------------*

GALGAS_semanticContext::GALGAS_semanticContext (const GALGAS_string & inOperand0,
                                                const GALGAS_unifiedTypeMap & inOperand1,
                                                const GALGAS_routineMap & inOperand2,
                                                const GALGAS_functionMap & inOperand3,
                                                const GALGAS_filewrapperMap & inOperand4,
                                                const GALGAS_grammarMap & inOperand5,
                                                const GALGAS_optionComponentMapForSemanticAnalysis & inOperand6,
                                                const GALGAS_lexiqueComponentMapForSemanticAnalysis & inOperand7,
                                                const GALGAS_optionMapForSemanticAnalysis & inOperand8) :
mAttribute_mSourceFileAbsolutePath (inOperand0),
mAttribute_mTypeMap (inOperand1),
mAttribute_mRoutineMap (inOperand2),
mAttribute_mFunctionMap (inOperand3),
mAttribute_mFilewrapperMap (inOperand4),
mAttribute_mGrammarMap (inOperand5),
mAttribute_mOptionComponentMapForSemanticAnalysis (inOperand6),
mAttribute_mLexiqueComponentMapForSemanticAnalysis (inOperand7),
mAttribute_mOptionMap (inOperand8) {
}

//---------------------------------------------------------------------------*

GALGAS_semanticContext GALGAS_semanticContext::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_semanticContext (GALGAS_string::constructor_default (HERE),
                                 GALGAS_unifiedTypeMap::constructor_emptyMap (HERE),
                                 GALGAS_routineMap::constructor_emptyMap (HERE),
                                 GALGAS_functionMap::constructor_emptyMap (HERE),
                                 GALGAS_filewrapperMap::constructor_emptyMap (HERE),
                                 GALGAS_grammarMap::constructor_emptyMap (HERE),
                                 GALGAS_optionComponentMapForSemanticAnalysis::constructor_emptyMap (HERE),
                                 GALGAS_lexiqueComponentMapForSemanticAnalysis::constructor_emptyMap (HERE),
                                 GALGAS_optionMapForSemanticAnalysis::constructor_emptyMap (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticContext GALGAS_semanticContext::constructor_new (const GALGAS_string & inOperand0,
                                                                const GALGAS_unifiedTypeMap & inOperand1,
                                                                const GALGAS_routineMap & inOperand2,
                                                                const GALGAS_functionMap & inOperand3,
                                                                const GALGAS_filewrapperMap & inOperand4,
                                                                const GALGAS_grammarMap & inOperand5,
                                                                const GALGAS_optionComponentMapForSemanticAnalysis & inOperand6,
                                                                const GALGAS_lexiqueComponentMapForSemanticAnalysis & inOperand7,
                                                                const GALGAS_optionMapForSemanticAnalysis & inOperand8 
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_semanticContext result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid ()) {
    result = GALGAS_semanticContext (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_semanticContext::objectCompare (const GALGAS_semanticContext & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mSourceFileAbsolutePath.objectCompare (inOperand.mAttribute_mSourceFileAbsolutePath) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTypeMap.objectCompare (inOperand.mAttribute_mTypeMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRoutineMap.objectCompare (inOperand.mAttribute_mRoutineMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFunctionMap.objectCompare (inOperand.mAttribute_mFunctionMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFilewrapperMap.objectCompare (inOperand.mAttribute_mFilewrapperMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGrammarMap.objectCompare (inOperand.mAttribute_mGrammarMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOptionComponentMapForSemanticAnalysis.objectCompare (inOperand.mAttribute_mOptionComponentMapForSemanticAnalysis) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLexiqueComponentMapForSemanticAnalysis.objectCompare (inOperand.mAttribute_mLexiqueComponentMapForSemanticAnalysis) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOptionMap.objectCompare (inOperand.mAttribute_mOptionMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_semanticContext::isValid (void) const {
  return mAttribute_mSourceFileAbsolutePath.isValid () && mAttribute_mTypeMap.isValid () && mAttribute_mRoutineMap.isValid () && mAttribute_mFunctionMap.isValid () && mAttribute_mFilewrapperMap.isValid () && mAttribute_mGrammarMap.isValid () && mAttribute_mOptionComponentMapForSemanticAnalysis.isValid () && mAttribute_mLexiqueComponentMapForSemanticAnalysis.isValid () && mAttribute_mOptionMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_semanticContext::drop (void) {
  mAttribute_mSourceFileAbsolutePath.drop () ;
  mAttribute_mTypeMap.drop () ;
  mAttribute_mRoutineMap.drop () ;
  mAttribute_mFunctionMap.drop () ;
  mAttribute_mFilewrapperMap.drop () ;
  mAttribute_mGrammarMap.drop () ;
  mAttribute_mOptionComponentMapForSemanticAnalysis.drop () ;
  mAttribute_mLexiqueComponentMapForSemanticAnalysis.drop () ;
  mAttribute_mOptionMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_semanticContext::description (C_String & ioString,
                                          const PMSInt32 inIndentation) const {
  ioString << "<struct @semanticContext:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mSourceFileAbsolutePath.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTypeMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRoutineMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFunctionMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFilewrapperMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGrammarMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOptionComponentMapForSemanticAnalysis.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLexiqueComponentMapForSemanticAnalysis.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOptionMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_semanticContext::reader_mSourceFileAbsolutePath (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSourceFileAbsolutePath ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMap GALGAS_semanticContext::reader_mTypeMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTypeMap ;
}

//---------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_semanticContext::reader_mRoutineMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRoutineMap ;
}

//---------------------------------------------------------------------------*

GALGAS_functionMap GALGAS_semanticContext::reader_mFunctionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFunctionMap ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperMap GALGAS_semanticContext::reader_mFilewrapperMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFilewrapperMap ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarMap GALGAS_semanticContext::reader_mGrammarMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGrammarMap ;
}

//---------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis GALGAS_semanticContext::reader_mOptionComponentMapForSemanticAnalysis (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionComponentMapForSemanticAnalysis ;
}

//---------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis GALGAS_semanticContext::reader_mLexiqueComponentMapForSemanticAnalysis (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLexiqueComponentMapForSemanticAnalysis ;
}

//---------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis GALGAS_semanticContext::reader_mOptionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @semanticContext type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_semanticContext ("semanticContext",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_semanticContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_semanticContext ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_semanticContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_semanticContext (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticContext GALGAS_semanticContext::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler,
                                                              const GALGAS_location & inErrorLocation,
                                                              const GALGAS_string & inErrorMessage
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_semanticContext result ;
  const GALGAS_semanticContext * p = (const GALGAS_semanticContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_semanticContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Abstract category reader '@semanticDeclarationAST keyRepresentation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_semanticDeclarationAST_keyRepresentation> gCategoryReaderTable_semanticDeclarationAST_keyRepresentation ;

//---------------------------------------------------------------------------*

void enterCategoryReader_keyRepresentation (const PMSInt32 inClassIndex,
                                            categoryReaderSignature_semanticDeclarationAST_keyRepresentation inReader) {
  gCategoryReaderTable_semanticDeclarationAST_keyRepresentation.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_semanticDeclarationAST_keyRepresentation (void) {
  gCategoryReaderTable_semanticDeclarationAST_keyRepresentation.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_semanticDeclarationAST_keyRepresentation (NULL,
                                                                     freeCategoryReader_semanticDeclarationAST_keyRepresentation) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_semanticDeclarationAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_semanticDeclarationAST_keyRepresentation f = NULL ;
    if (classIndex < gCategoryReaderTable_semanticDeclarationAST_keyRepresentation.count ()) {
      f = gCategoryReaderTable_semanticDeclarationAST_keyRepresentation (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_semanticDeclarationAST_keyRepresentation.count ()) {
           f = gCategoryReaderTable_semanticDeclarationAST_keyRepresentation (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_semanticDeclarationAST_keyRepresentation.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@abstractCategoryModifierAST keyRepresentation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_abstractCategoryModifierAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_abstractCategoryModifierAST * object = (const cPtr_abstractCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, const cPtr_abstractCategoryModifierAST) ;
  result_outString = GALGAS_string ("abstract category modifier @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (247)) COMMA_SOURCE_FILE_AT_LINE (247)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (247)).operator_concat (object->mAttribute_mAbstractCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (247)) COMMA_SOURCE_FILE_AT_LINE (247)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_abstractCategoryModifierAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_abstractCategoryModifierAST.mSlotID,
                                         categoryReader_abstractCategoryModifierAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractCategoryModifierAST_keyRepresentation (defineCategoryReader_abstractCategoryModifierAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category reader '@categoryModifierAST keyRepresentation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_categoryModifierAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                           C_Compiler * /* inCompiler */
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_categoryModifierAST * object = (const cPtr_categoryModifierAST *) inObject ;
  macroValidSharedObject (object, const cPtr_categoryModifierAST) ;
  result_outString = GALGAS_string ("category modifier @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (255)) COMMA_SOURCE_FILE_AT_LINE (255)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (255)).operator_concat (object->mAttribute_mCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (255)) COMMA_SOURCE_FILE_AT_LINE (255)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_categoryModifierAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_categoryModifierAST.mSlotID,
                                         categoryReader_categoryModifierAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_categoryModifierAST_keyRepresentation (defineCategoryReader_categoryModifierAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@overridingCategoryModifierAST keyRepresentation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_overridingCategoryModifierAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                     C_Compiler * /* inCompiler */
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_overridingCategoryModifierAST * object = (const cPtr_overridingCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingCategoryModifierAST) ;
  result_outString = GALGAS_string ("overriding category modifier @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (263)) COMMA_SOURCE_FILE_AT_LINE (263)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (263)).operator_concat (object->mAttribute_mOverridingCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (263)) COMMA_SOURCE_FILE_AT_LINE (263)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_overridingCategoryModifierAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_overridingCategoryModifierAST.mSlotID,
                                         categoryReader_overridingCategoryModifierAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_overridingCategoryModifierAST_keyRepresentation (defineCategoryReader_overridingCategoryModifierAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@overridingAbstractCategoryModifierAST keyRepresentation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_overridingAbstractCategoryModifierAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                             C_Compiler * /* inCompiler */
                                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_overridingAbstractCategoryModifierAST * object = (const cPtr_overridingAbstractCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingAbstractCategoryModifierAST) ;
  result_outString = GALGAS_string ("overriding category modifier @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (271)) COMMA_SOURCE_FILE_AT_LINE (271)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (271)).operator_concat (object->mAttribute_mOverridingCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (271)) COMMA_SOURCE_FILE_AT_LINE (271)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_overridingAbstractCategoryModifierAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_overridingAbstractCategoryModifierAST.mSlotID,
                                         categoryReader_overridingAbstractCategoryModifierAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_overridingAbstractCategoryModifierAST_keyRepresentation (defineCategoryReader_overridingAbstractCategoryModifierAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category reader '@abstractCategoryMethodAST keyRepresentation' *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_abstractCategoryMethodAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_abstractCategoryMethodAST * object = (const cPtr_abstractCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, const cPtr_abstractCategoryMethodAST) ;
  result_outString = GALGAS_string ("abstract category method @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (279)) COMMA_SOURCE_FILE_AT_LINE (279)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (279)).operator_concat (object->mAttribute_mAbstractCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (279)) COMMA_SOURCE_FILE_AT_LINE (279)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_abstractCategoryMethodAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_abstractCategoryMethodAST.mSlotID,
                                         categoryReader_abstractCategoryMethodAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractCategoryMethodAST_keyRepresentation (defineCategoryReader_abstractCategoryMethodAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category reader '@categoryMethodAST keyRepresentation'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_categoryMethodAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                         C_Compiler * /* inCompiler */
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_categoryMethodAST * object = (const cPtr_categoryMethodAST *) inObject ;
  macroValidSharedObject (object, const cPtr_categoryMethodAST) ;
  result_outString = GALGAS_string ("category method @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (287)) COMMA_SOURCE_FILE_AT_LINE (287)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (287)).operator_concat (object->mAttribute_mCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (287)) COMMA_SOURCE_FILE_AT_LINE (287)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_categoryMethodAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_categoryMethodAST.mSlotID,
                                         categoryReader_categoryMethodAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_categoryMethodAST_keyRepresentation (defineCategoryReader_categoryMethodAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@overridingCategoryMethodAST keyRepresentation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_overridingCategoryMethodAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_overridingCategoryMethodAST * object = (const cPtr_overridingCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingCategoryMethodAST) ;
  result_outString = GALGAS_string ("overriding category method @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (295)) COMMA_SOURCE_FILE_AT_LINE (295)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (295)).operator_concat (object->mAttribute_mOverridingCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (295)) COMMA_SOURCE_FILE_AT_LINE (295)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_overridingCategoryMethodAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_overridingCategoryMethodAST.mSlotID,
                                         categoryReader_overridingCategoryMethodAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_overridingCategoryMethodAST_keyRepresentation (defineCategoryReader_overridingCategoryMethodAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@overridingAbstractCategoryMethodAST keyRepresentation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_overridingAbstractCategoryMethodAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                           C_Compiler * /* inCompiler */
                                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_overridingAbstractCategoryMethodAST * object = (const cPtr_overridingAbstractCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingAbstractCategoryMethodAST) ;
  result_outString = GALGAS_string ("overriding category method @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (303)) COMMA_SOURCE_FILE_AT_LINE (303)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (303)).operator_concat (object->mAttribute_mOverridingCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (303)) COMMA_SOURCE_FILE_AT_LINE (303)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_overridingAbstractCategoryMethodAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_overridingAbstractCategoryMethodAST.mSlotID,
                                         categoryReader_overridingAbstractCategoryMethodAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_overridingAbstractCategoryMethodAST_keyRepresentation (defineCategoryReader_overridingAbstractCategoryMethodAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category reader '@abstractCategoryReaderAST keyRepresentation' *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_abstractCategoryReaderAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_abstractCategoryReaderAST * object = (const cPtr_abstractCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, const cPtr_abstractCategoryReaderAST) ;
  result_outString = GALGAS_string ("abstract category reader @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (311)) COMMA_SOURCE_FILE_AT_LINE (311)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (311)).operator_concat (object->mAttribute_mAbstractCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (311)) COMMA_SOURCE_FILE_AT_LINE (311)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_abstractCategoryReaderAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_abstractCategoryReaderAST.mSlotID,
                                         categoryReader_abstractCategoryReaderAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractCategoryReaderAST_keyRepresentation (defineCategoryReader_abstractCategoryReaderAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category reader '@categoryReaderAST keyRepresentation'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_categoryReaderAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                         C_Compiler * /* inCompiler */
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_categoryReaderAST * object = (const cPtr_categoryReaderAST *) inObject ;
  macroValidSharedObject (object, const cPtr_categoryReaderAST) ;
  result_outString = GALGAS_string ("category reader @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (319)) COMMA_SOURCE_FILE_AT_LINE (319)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (319)).operator_concat (object->mAttribute_mCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (319)) COMMA_SOURCE_FILE_AT_LINE (319)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_categoryReaderAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_categoryReaderAST.mSlotID,
                                         categoryReader_categoryReaderAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_categoryReaderAST_keyRepresentation (defineCategoryReader_categoryReaderAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@overridingCategoryReaderAST keyRepresentation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_overridingCategoryReaderAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_overridingCategoryReaderAST * object = (const cPtr_overridingCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingCategoryReaderAST) ;
  result_outString = GALGAS_string ("overriding category reader @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (327)) COMMA_SOURCE_FILE_AT_LINE (327)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (327)).operator_concat (object->mAttribute_mOverridingCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (327)) COMMA_SOURCE_FILE_AT_LINE (327)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_overridingCategoryReaderAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_overridingCategoryReaderAST.mSlotID,
                                         categoryReader_overridingCategoryReaderAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_overridingCategoryReaderAST_keyRepresentation (defineCategoryReader_overridingCategoryReaderAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@overridingAbstractCategoryReaderAST keyRepresentation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_overridingAbstractCategoryReaderAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                           C_Compiler * /* inCompiler */
                                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_overridingAbstractCategoryReaderAST * object = (const cPtr_overridingAbstractCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingAbstractCategoryReaderAST) ;
  result_outString = GALGAS_string ("overriding category reader @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (335)) COMMA_SOURCE_FILE_AT_LINE (335)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (335)).operator_concat (object->mAttribute_mAbstractCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (335)) COMMA_SOURCE_FILE_AT_LINE (335)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_overridingAbstractCategoryReaderAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_overridingAbstractCategoryReaderAST.mSlotID,
                                         categoryReader_overridingAbstractCategoryReaderAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_overridingAbstractCategoryReaderAST_keyRepresentation (defineCategoryReader_overridingAbstractCategoryReaderAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category reader '@predefinedTypeAST keyRepresentation'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_predefinedTypeAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                         C_Compiler * /* inCompiler */
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_predefinedTypeAST * object = (const cPtr_predefinedTypeAST *) inObject ;
  macroValidSharedObject (object, const cPtr_predefinedTypeAST) ;
  result_outString = GALGAS_string ("predefined type @").operator_concat (object->mAttribute_mPredefinedTypeName COMMA_SOURCE_FILE_AT_LINE (343)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_predefinedTypeAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_predefinedTypeAST.mSlotID,
                                         categoryReader_predefinedTypeAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_predefinedTypeAST_keyRepresentation (defineCategoryReader_predefinedTypeAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category reader '@uniqueMapDeclarationAST keyRepresentation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_uniqueMapDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_uniqueMapDeclarationAST * object = (const cPtr_uniqueMapDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_uniqueMapDeclarationAST) ;
  result_outString = GALGAS_string ("unique map @").operator_concat (object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (351)) COMMA_SOURCE_FILE_AT_LINE (351)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_uniqueMapDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_uniqueMapDeclarationAST.mSlotID,
                                         categoryReader_uniqueMapDeclarationAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_uniqueMapDeclarationAST_keyRepresentation (defineCategoryReader_uniqueMapDeclarationAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category reader '@mapDeclarationAST keyRepresentation'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_mapDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                         C_Compiler * /* inCompiler */
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_mapDeclarationAST * object = (const cPtr_mapDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_mapDeclarationAST) ;
  result_outString = GALGAS_string ("map @").operator_concat (object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (359)) COMMA_SOURCE_FILE_AT_LINE (359)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_mapDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_mapDeclarationAST.mSlotID,
                                         categoryReader_mapDeclarationAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_mapDeclarationAST_keyRepresentation (defineCategoryReader_mapDeclarationAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category reader '@mapProxyDeclarationAST keyRepresentation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_mapProxyDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                              C_Compiler * /* inCompiler */
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_mapProxyDeclarationAST * object = (const cPtr_mapProxyDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_mapProxyDeclarationAST) ;
  result_outString = GALGAS_string ("map proxy @").operator_concat (object->mAttribute_mMapProxyTypeName.reader_string (SOURCE_FILE_AT_LINE (367)) COMMA_SOURCE_FILE_AT_LINE (367)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_mapProxyDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_mapProxyDeclarationAST.mSlotID,
                                         categoryReader_mapProxyDeclarationAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_mapProxyDeclarationAST_keyRepresentation (defineCategoryReader_mapProxyDeclarationAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category reader '@enumDeclarationAST keyRepresentation'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_enumDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                          C_Compiler * /* inCompiler */
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_enumDeclarationAST * object = (const cPtr_enumDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_enumDeclarationAST) ;
  result_outString = GALGAS_string ("enum @").operator_concat (object->mAttribute_mEnumTypeName.reader_string (SOURCE_FILE_AT_LINE (375)) COMMA_SOURCE_FILE_AT_LINE (375)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_enumDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_enumDeclarationAST.mSlotID,
                                         categoryReader_enumDeclarationAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_enumDeclarationAST_keyRepresentation (defineCategoryReader_enumDeclarationAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category reader '@sortedListDeclarationAST keyRepresentation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_sortedListDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                C_Compiler * /* inCompiler */
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_sortedListDeclarationAST * object = (const cPtr_sortedListDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_sortedListDeclarationAST) ;
  result_outString = GALGAS_string ("sorted list @").operator_concat (object->mAttribute_mSortedListTypeName.reader_string (SOURCE_FILE_AT_LINE (383)) COMMA_SOURCE_FILE_AT_LINE (383)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_sortedListDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_sortedListDeclarationAST.mSlotID,
                                         categoryReader_sortedListDeclarationAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_sortedListDeclarationAST_keyRepresentation (defineCategoryReader_sortedListDeclarationAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category reader '@structDeclarationAST keyRepresentation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_structDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                            C_Compiler * /* inCompiler */
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_structDeclarationAST * object = (const cPtr_structDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_structDeclarationAST) ;
  result_outString = GALGAS_string ("struct @").operator_concat (object->mAttribute_mStructTypeName.reader_string (SOURCE_FILE_AT_LINE (391)) COMMA_SOURCE_FILE_AT_LINE (391)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_structDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_structDeclarationAST.mSlotID,
                                         categoryReader_structDeclarationAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_structDeclarationAST_keyRepresentation (defineCategoryReader_structDeclarationAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category reader '@listDeclarationAST keyRepresentation'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_listDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                          C_Compiler * /* inCompiler */
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_listDeclarationAST * object = (const cPtr_listDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_listDeclarationAST) ;
  result_outString = GALGAS_string ("list @").operator_concat (object->mAttribute_mListTypeName.reader_string (SOURCE_FILE_AT_LINE (399)) COMMA_SOURCE_FILE_AT_LINE (399)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_listDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_listDeclarationAST.mSlotID,
                                         categoryReader_listDeclarationAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_listDeclarationAST_keyRepresentation (defineCategoryReader_listDeclarationAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category reader '@classDeclarationAST keyRepresentation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_classDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                           C_Compiler * /* inCompiler */
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_classDeclarationAST * object = (const cPtr_classDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_classDeclarationAST) ;
  result_outString = GALGAS_string ("class @").operator_concat (object->mAttribute_mClassTypeName.reader_string (SOURCE_FILE_AT_LINE (407)) COMMA_SOURCE_FILE_AT_LINE (407)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_classDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_classDeclarationAST.mSlotID,
                                         categoryReader_classDeclarationAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_classDeclarationAST_keyRepresentation (defineCategoryReader_classDeclarationAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category reader '@arrayDeclarationAST keyRepresentation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_arrayDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                           C_Compiler * /* inCompiler */
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_arrayDeclarationAST * object = (const cPtr_arrayDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_arrayDeclarationAST) ;
  result_outString = GALGAS_string ("array @").operator_concat (object->mAttribute_mArrayTypeName.reader_string (SOURCE_FILE_AT_LINE (415)) COMMA_SOURCE_FILE_AT_LINE (415)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_arrayDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_arrayDeclarationAST.mSlotID,
                                         categoryReader_arrayDeclarationAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_arrayDeclarationAST_keyRepresentation (defineCategoryReader_arrayDeclarationAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category reader '@listmapDeclarationAST keyRepresentation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_listmapDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                             C_Compiler * /* inCompiler */
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_listmapDeclarationAST * object = (const cPtr_listmapDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_listmapDeclarationAST) ;
  result_outString = GALGAS_string ("listmap @").operator_concat (object->mAttribute_mListmapTypeName.reader_string (SOURCE_FILE_AT_LINE (423)) COMMA_SOURCE_FILE_AT_LINE (423)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_listmapDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_listmapDeclarationAST.mSlotID,
                                         categoryReader_listmapDeclarationAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_listmapDeclarationAST_keyRepresentation (defineCategoryReader_listmapDeclarationAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category reader '@filewrapperDeclarationAST keyRepresentation' *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_filewrapperDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_filewrapperDeclarationAST * object = (const cPtr_filewrapperDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_filewrapperDeclarationAST) ;
  result_outString = GALGAS_string ("filewrapper @").operator_concat (object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (431)) COMMA_SOURCE_FILE_AT_LINE (431)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_filewrapperDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_filewrapperDeclarationAST.mSlotID,
                                         categoryReader_filewrapperDeclarationAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_filewrapperDeclarationAST_keyRepresentation (defineCategoryReader_filewrapperDeclarationAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category reader '@graphDeclarationAST keyRepresentation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_graphDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                           C_Compiler * /* inCompiler */
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_graphDeclarationAST * object = (const cPtr_graphDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_graphDeclarationAST) ;
  result_outString = GALGAS_string ("graph @").operator_concat (object->mAttribute_mGraphTypeName.reader_string (SOURCE_FILE_AT_LINE (439)) COMMA_SOURCE_FILE_AT_LINE (439)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_graphDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_graphDeclarationAST.mSlotID,
                                         categoryReader_graphDeclarationAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_graphDeclarationAST_keyRepresentation (defineCategoryReader_graphDeclarationAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category reader '@externTypeDeclarationAST keyRepresentation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_externTypeDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                C_Compiler * /* inCompiler */
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_externTypeDeclarationAST * object = (const cPtr_externTypeDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_externTypeDeclarationAST) ;
  result_outString = GALGAS_string ("extern @").operator_concat (object->mAttribute_mExternTypeName.reader_string (SOURCE_FILE_AT_LINE (447)) COMMA_SOURCE_FILE_AT_LINE (447)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_externTypeDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_externTypeDeclarationAST.mSlotID,
                                         categoryReader_externTypeDeclarationAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_externTypeDeclarationAST_keyRepresentation (defineCategoryReader_externTypeDeclarationAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@onceFunctionDeclarationAST keyRepresentation' *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_onceFunctionDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                  C_Compiler * /* inCompiler */
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_onceFunctionDeclarationAST * object = (const cPtr_onceFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_onceFunctionDeclarationAST) ;
  result_outString = GALGAS_string ("once function ").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (455)) COMMA_SOURCE_FILE_AT_LINE (455)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_onceFunctionDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_onceFunctionDeclarationAST.mSlotID,
                                         categoryReader_onceFunctionDeclarationAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_onceFunctionDeclarationAST_keyRepresentation (defineCategoryReader_onceFunctionDeclarationAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@externFunctionDeclarationAST keyRepresentation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_externFunctionDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                    C_Compiler * /* inCompiler */
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_externFunctionDeclarationAST * object = (const cPtr_externFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_externFunctionDeclarationAST) ;
  result_outString = GALGAS_string ("extern function ").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (463)) COMMA_SOURCE_FILE_AT_LINE (463)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_externFunctionDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_externFunctionDeclarationAST.mSlotID,
                                         categoryReader_externFunctionDeclarationAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_externFunctionDeclarationAST_keyRepresentation (defineCategoryReader_externFunctionDeclarationAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@externRoutineDeclarationAST keyRepresentation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_externRoutineDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_externRoutineDeclarationAST * object = (const cPtr_externRoutineDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_externRoutineDeclarationAST) ;
  result_outString = GALGAS_string ("extern routine ").operator_concat (object->mAttribute_mRoutineName.reader_string (SOURCE_FILE_AT_LINE (471)) COMMA_SOURCE_FILE_AT_LINE (471)) ;
//---
  return result_outString ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_externRoutineDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_externRoutineDeclarationAST.mSlotID,
                                         categoryReader_externRoutineDeclarationAST_keyRepresentation) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_externRoutineDeclarationAST_keyRepresentation (defineCategoryReader_externRoutineDeclarationAST_keyRepresentation, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Abstract category method '@semanticDeclarationAST enterInSemanticContext' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_semanticDeclarationAST_enterInSemanticContext> gCategoryMethodTable_semanticDeclarationAST_enterInSemanticContext ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_enterInSemanticContext (const PMSInt32 inClassIndex,
                                                 categoryMethodSignature_semanticDeclarationAST_enterInSemanticContext inMethod) {
  gCategoryMethodTable_semanticDeclarationAST_enterInSemanticContext.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_semanticDeclarationAST_enterInSemanticContext (void) {
  gCategoryMethodTable_semanticDeclarationAST_enterInSemanticContext.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticDeclarationAST_enterInSemanticContext (NULL,
                                                                          freeCategoryMethod_semanticDeclarationAST_enterInSemanticContext) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                const GALGAS_categoryMethodMapForBuildingContext constin_inCategoryMethodMapForBuildingContext,
                                                const GALGAS_categoryReaderMapForBuildingContext constin_inCategoryReaderMapForBuildingContext,
                                                const GALGAS_categoryModifierMapForBuildingContext constin_inCategoryModifierMapForBuildingContext,
                                                GALGAS_semanticContext & io_ioSemanticContext,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_semanticDeclarationAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_semanticDeclarationAST_enterInSemanticContext f = NULL ;
    if (classIndex < gCategoryMethodTable_semanticDeclarationAST_enterInSemanticContext.count ()) {
      f = gCategoryMethodTable_semanticDeclarationAST_enterInSemanticContext (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_semanticDeclarationAST_enterInSemanticContext.count ()) {
           f = gCategoryMethodTable_semanticDeclarationAST_enterInSemanticContext (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_semanticDeclarationAST_enterInSemanticContext.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inCategoryMethodMapForBuildingContext, constin_inCategoryReaderMapForBuildingContext, constin_inCategoryModifierMapForBuildingContext, io_ioSemanticContext, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@abstractCategoryMethodAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryMethodAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                             const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                             const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                             const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                             GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                             C_Compiler * /* inCompiler */
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryMethodAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_abstractCategoryMethodAST.mSlotID,
                                              categoryMethod_abstractCategoryMethodAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryMethodAST_enterInSemanticContext (defineCategoryMethod_abstractCategoryMethodAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@categoryMethodAST enterInSemanticContext'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_categoryMethodAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                     const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                     const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                     const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                     GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                     C_Compiler * /* inCompiler */
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_categoryMethodAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_categoryMethodAST.mSlotID,
                                              categoryMethod_categoryMethodAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryMethodAST_enterInSemanticContext (defineCategoryMethod_categoryMethodAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingCategoryMethodAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryMethodAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                               const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                               const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                               const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                               GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryMethodAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_overridingCategoryMethodAST.mSlotID,
                                              categoryMethod_overridingCategoryMethodAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryMethodAST_enterInSemanticContext (defineCategoryMethod_overridingCategoryMethodAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingAbstractCategoryMethodAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryMethodAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                                       const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                                       const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                                       const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                                       GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryMethodAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_overridingAbstractCategoryMethodAST.mSlotID,
                                              categoryMethod_overridingAbstractCategoryMethodAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryMethodAST_enterInSemanticContext (defineCategoryMethod_overridingAbstractCategoryMethodAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@abstractCategoryModifierAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryModifierAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                               const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                               const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                               const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                               GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryModifierAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_abstractCategoryModifierAST.mSlotID,
                                              categoryMethod_abstractCategoryModifierAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryModifierAST_enterInSemanticContext (defineCategoryMethod_abstractCategoryModifierAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@categoryModifierAST enterInSemanticContext'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_categoryModifierAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                       const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                       const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                       const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                       GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                       C_Compiler * /* inCompiler */
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_categoryModifierAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_categoryModifierAST.mSlotID,
                                              categoryMethod_categoryModifierAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryModifierAST_enterInSemanticContext (defineCategoryMethod_categoryModifierAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingCategoryModifierAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryModifierAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                                 const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                                 const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                                 const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                                 GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryModifierAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_overridingCategoryModifierAST.mSlotID,
                                              categoryMethod_overridingCategoryModifierAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryModifierAST_enterInSemanticContext (defineCategoryMethod_overridingCategoryModifierAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingAbstractCategoryModifierAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryModifierAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                                         const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                                         const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                                         const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                                         GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                                         C_Compiler * /* inCompiler */
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryModifierAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_overridingAbstractCategoryModifierAST.mSlotID,
                                              categoryMethod_overridingAbstractCategoryModifierAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryModifierAST_enterInSemanticContext (defineCategoryMethod_overridingAbstractCategoryModifierAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@abstractCategoryReaderAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryReaderAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                             const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                             const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                             const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                             GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                             C_Compiler * /* inCompiler */
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryReaderAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_abstractCategoryReaderAST.mSlotID,
                                              categoryMethod_abstractCategoryReaderAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryReaderAST_enterInSemanticContext (defineCategoryMethod_abstractCategoryReaderAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@categoryReaderAST enterInSemanticContext'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_categoryReaderAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                     const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                     const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                     const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                     GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                     C_Compiler * /* inCompiler */
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_categoryReaderAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_categoryReaderAST.mSlotID,
                                              categoryMethod_categoryReaderAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryReaderAST_enterInSemanticContext (defineCategoryMethod_categoryReaderAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingCategoryReaderAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryReaderAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                               const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                               const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                               const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                               GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryReaderAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_overridingCategoryReaderAST.mSlotID,
                                              categoryMethod_overridingCategoryReaderAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryReaderAST_enterInSemanticContext (defineCategoryMethod_overridingCategoryReaderAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingAbstractCategoryReaderAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryReaderAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                                       const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                                       const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                                       const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                                       GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryReaderAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_overridingAbstractCategoryReaderAST.mSlotID,
                                              categoryMethod_overridingAbstractCategoryReaderAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryReaderAST_enterInSemanticContext (defineCategoryMethod_overridingAbstractCategoryReaderAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Category Reader '@predefinedTypeKindEnum defaultConstructorName'      *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string categoryReader_defaultConstructorName (const GALGAS_predefinedTypeKindEnum & inObject,
                                                     C_Compiler * /* inCompiler */
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outName ; // Returned variable
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeKindEnum temp_0 = inObject ;
  if (temp_0.isValid ()) {
    switch (temp_0.enumValue ()) {
    case GALGAS_predefinedTypeKindEnum::kNotBuilt:
      break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_bool: case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_char: case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_double: case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_sint: case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_sint_36__34_: case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_string: case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_uint: case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_uint_36__34_: {
      result_outName = GALGAS_string ("default") ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_binaryset: {
      result_outName = GALGAS_string ("emptyBinarySet") ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_stringset: {
      result_outName = GALGAS_string ("emptySet") ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_type: {
      result_outName = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_application: {
      result_outName = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_data: {
      result_outName = GALGAS_string ("emptyData") ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_location: {
      result_outName = GALGAS_string ("nowhere") ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_function: {
      result_outName = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_object: {
      result_outName = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_filewrapper: {
      result_outName = GALGAS_string::makeEmptyString () ;
      } break ;
    }
  }
//---
  return result_outName ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@predefinedTypeAST enterInSemanticContext'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_predefinedTypeAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                     const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                     const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                     const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                     GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_predefinedTypeAST * object = (const cPtr_predefinedTypeAST *) inObject ;
  macroValidSharedObject (object, const cPtr_predefinedTypeAST) ;
  GALGAS_constructorMap var_constructorMap ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_0 = object ;
  callCategoryMethod_getConstructorMap ((const cPtr_predefinedTypeAST *) temp_0.ptr (), ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_constructorMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (719)) ;
  GALGAS_readerMap var_readerMap ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_1 = object ;
  callCategoryMethod_getReaderMap ((const cPtr_predefinedTypeAST *) temp_1.ptr (), ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (720)) ;
  GALGAS_modifierMap var_modifierMap ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_2 = object ;
  callCategoryMethod_getModifierMap ((const cPtr_predefinedTypeAST *) temp_2.ptr (), ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_modifierMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (721)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_3 = object ;
  callCategoryMethod_getInstanceMethodMap ((const cPtr_predefinedTypeAST *) temp_3.ptr (), ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (722)) ;
  GALGAS_classMethodMap var_classMethodMap ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_4 = object ;
  callCategoryMethod_getClassMethodMap ((const cPtr_predefinedTypeAST *) temp_4.ptr (), ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_classMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (723)) ;
  GALGAS_unifiedTypeMapProxyList var_addAssignArgumentList ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_5 = object ;
  callCategoryMethod_getAddAssignArgumentList ((const cPtr_predefinedTypeAST *) temp_5.ptr (), ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_addAssignArgumentList, inCompiler COMMA_SOURCE_FILE_AT_LINE (724)) ;
  GALGAS_enumerationDescriptorList var_enumerationList ;
  GALGAS_stringlist var_enumerationVariants ;
  GALGAS_string var_enumeratedTypeName ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_6 = object ;
  callCategoryMethod_getEnumerationList ((const cPtr_predefinedTypeAST *) temp_6.ptr (), ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_enumerationList, var_enumerationVariants, var_enumeratedTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (725)) ;
  GALGAS_unifiedTypeMapProxy var_selfTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mPredefinedTypeName, var_selfTypeProxy COMMA_SOURCE_FILE_AT_LINE (731)) ;
  }
  GALGAS_unifiedTypeMapProxy var_enumeratedTypeProxy ;
  const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, var_enumeratedTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_7) {
    var_enumeratedTypeProxy = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (739)) ;
  }else if (kBoolFalse == test_7) {
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_enumeratedTypeName, var_enumeratedTypeProxy COMMA_SOURCE_FILE_AT_LINE (741)) ;
    }
  }
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, GALGAS_lstring::constructor_new (object->mAttribute_mPredefinedTypeName, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (749)), var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (744)) ;
  }
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_8 = object ;
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (GALGAS_lstring::constructor_new (object->mAttribute_mPredefinedTypeName, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (756)), GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (758)), GALGAS_typeKindEnum::constructor_predefinedType (SOURCE_FILE_AT_LINE (759)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (760)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (761)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (762)), var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, var_classMethodMap, var_enumerationList, var_enumerationVariants, callCategoryReader_getSupportedOperatorFlags ((const cPtr_predefinedTypeAST *) temp_8.ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (770)), var_addAssignArgumentList, GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (772)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (773)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (774)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (775)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (776)), GALGAS_bool (false), var_enumeratedTypeProxy, categoryReader_defaultConstructorName (object->mAttribute_mKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (779)), inCompiler COMMA_SOURCE_FILE_AT_LINE (755)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_predefinedTypeAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_predefinedTypeAST.mSlotID,
                                              categoryMethod_predefinedTypeAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_predefinedTypeAST_enterInSemanticContext (defineCategoryMethod_predefinedTypeAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@mapDeclarationAST enterInSemanticContext'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_mapDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                     const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                     const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                     const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                     GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_mapDeclarationAST * object = (const cPtr_mapDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_mapDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_boolTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("bool"), var_boolTypeIndex COMMA_SOURCE_FILE_AT_LINE (799)) ;
  }
  GALGAS_unifiedTypeMapProxy var_stringTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("string"), var_stringTypeIndex COMMA_SOURCE_FILE_AT_LINE (802)) ;
  }
  GALGAS_unifiedTypeMapProxy var_locationTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("location"), var_locationTypeProxy COMMA_SOURCE_FILE_AT_LINE (805)) ;
  }
  GALGAS_unifiedTypeMapProxy var_lstringTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("lstring"), var_lstringTypeIndex COMMA_SOURCE_FILE_AT_LINE (808)) ;
  }
  GALGAS_unifiedTypeMapProxy var_currentMapTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (811)), var_currentMapTypeIndex COMMA_SOURCE_FILE_AT_LINE (811)) ;
  }
  GALGAS_enumerationDescriptorList var_enumerationDescriptor = GALGAS_enumerationDescriptorList::constructor_listWithValue (var_lstringTypeIndex, GALGAS_string ("lkey") COMMA_SOURCE_FILE_AT_LINE (813)) ;
  GALGAS_stringlist var_enumerationVariants = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (814)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("up") COMMA_SOURCE_FILE_AT_LINE (815)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("down") COMMA_SOURCE_FILE_AT_LINE (816)) ;
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (818)) ;
  GALGAS_readerMap var_readerMap = GALGAS_readerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (819)) ;
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (820)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (821)) ;
  {
  routine_enterConstructorWithoutArgument (var_constructorMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("emptyMap"), object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (823)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (823)) ;
  }
  {
  routine_enterConstructorWithArgument (var_constructorMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("mapWithMapToOverride"), object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (824)), object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (824)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (824)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("levels"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (826)) ;
  }
  {
  routine_enterInheritedReaderWith_32_Arguments (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("hasKeyAtLevel"), GALGAS_string ("string"), GALGAS_string ("uint"), GALGAS_string ("bool"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (827)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("allKeys"), GALGAS_string ("stringset"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (828)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("allKeyList"), GALGAS_string ("lstringlist"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (829)) ;
  }
  {
  routine_enterInheritedReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("hasKey"), GALGAS_string ("string"), GALGAS_string ("bool"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (830)) ;
  }
  {
  routine_enterInheritedReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("locationForKey"), GALGAS_string ("string"), GALGAS_string ("location"), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (831)) ;
  }
  {
  routine_enterBaseReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("overriddenMap"), object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (832)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (832)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("count"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (833)) ;
  }
  GALGAS_formalParameterSignature var_insertMethodFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (835)) ;
  var_insertMethodFormalArgumentList.addAssign_operation (var_boolTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (836)) COMMA_SOURCE_FILE_AT_LINE (836)) ;
  {
  var_modifierMap.modifier_insertOrReplace (GALGAS_string ("enableContextualHelp").reader_nowhere (SOURCE_FILE_AT_LINE (838)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (839)), var_insertMethodFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (842)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (837)) ;
  }
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (846)) ;
  var_insertMethodFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (847)) ;
  var_insertMethodFormalArgumentList.addAssign_operation (var_lstringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (848)) COMMA_SOURCE_FILE_AT_LINE (848)) ;
  GALGAS_formalParameterSignature var_removeMethodFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (849)) ;
  var_removeMethodFormalArgumentList.addAssign_operation (var_lstringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (850)) COMMA_SOURCE_FILE_AT_LINE (850)) ;
  cEnumerator_attributeInCollectionListAST enumerator_36002 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_36002.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_36002.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (853)), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (853)) ;
    }
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_attributeTypeIndex, enumerator_36002.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (856)) ;
    var_enumerationDescriptor.addAssign_operation (var_attributeTypeIndex, enumerator_36002.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (857)) COMMA_SOURCE_FILE_AT_LINE (857)) ;
    var_insertMethodFormalArgumentList.addAssign_operation (var_attributeTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (858)) COMMA_SOURCE_FILE_AT_LINE (858)) ;
    var_removeMethodFormalArgumentList.addAssign_operation (var_attributeTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (859)) COMMA_SOURCE_FILE_AT_LINE (859)) ;
    enumerator_36002.gotoNextObject () ;
  }
  cEnumerator_insertMethodListAST enumerator_36688 (object->mAttribute_mInsertMethodList, kEnumeration_up) ;
  while (enumerator_36688.hasCurrentObject ()) {
    const enumGalgasBool test_0 = var_modifierMap.reader_hasKey (enumerator_36688.current_mInsertMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (863)) COMMA_SOURCE_FILE_AT_LINE (863)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (enumerator_36688.current_mInsertMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_36688.current_mInsertMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (864)) COMMA_SOURCE_FILE_AT_LINE (864)).operator_concat (GALGAS_string ("' insert method is already declared") COMMA_SOURCE_FILE_AT_LINE (864)) COMMA_SOURCE_FILE_AT_LINE (864)) ;
    }else if (kBoolFalse == test_0) {
      {
      var_modifierMap.modifier_insertOrReplace (enumerator_36688.current_mInsertMethodName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (868)), var_insertMethodFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (871)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (866)) ;
      }
    }
    enumerator_36688.gotoNextObject () ;
  }
  cEnumerator_mapRemoveMethodListAST enumerator_37162 (object->mAttribute_mRemoveMethodList, kEnumeration_up) ;
  while (enumerator_37162.hasCurrentObject ()) {
    const enumGalgasBool test_2 = var_modifierMap.reader_hasKey (enumerator_37162.current_mMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (878)) COMMA_SOURCE_FILE_AT_LINE (878)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (enumerator_37162.current_mMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the '").operator_concat (enumerator_37162.current_mMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (879)) COMMA_SOURCE_FILE_AT_LINE (879)).operator_concat (GALGAS_string ("' method is already declared as an insert modifier or a remove modifier") COMMA_SOURCE_FILE_AT_LINE (879)) COMMA_SOURCE_FILE_AT_LINE (879)) ;
    }else if (kBoolFalse == test_2) {
      {
      var_modifierMap.modifier_insertOrReplace (enumerator_37162.current_mMethodName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (883)), var_removeMethodFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (886)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (881)) ;
      }
    }
    enumerator_37162.gotoNextObject () ;
  }
  cEnumerator_mapSearchMethodListAST enumerator_37689 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_37689.hasCurrentObject ()) {
    {
    var_instanceMethodMap.modifier_insertKey (enumerator_37689.current_mSearchMethodName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (895)), var_removeMethodFormalArgumentList, enumerator_37689.current_mSearchMethodName (HERE).reader_location (SOURCE_FILE_AT_LINE (897)), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (899)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (893)) ;
    }
    enumerator_37689.gotoNextObject () ;
  }
  cEnumerator_attributeInCollectionListAST enumerator_38024 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_38024.hasCurrentObject ()) {
    GALGAS_lstring var_accessorName = GALGAS_lstring::constructor_new (enumerator_38024.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (905)).operator_concat (GALGAS_string ("ForKey") COMMA_SOURCE_FILE_AT_LINE (905)), enumerator_38024.current_mAttributeName (HERE).reader_location (SOURCE_FILE_AT_LINE (905)) COMMA_SOURCE_FILE_AT_LINE (905)) ;
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_38024.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (907)), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (907)) ;
    }
    {
    var_readerMap.modifier_insertOrReplace (var_accessorName, GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (910)), GALGAS_unifiedTypeMapProxyList::constructor_listWithValue (var_stringTypeIndex COMMA_SOURCE_FILE_AT_LINE (911)), inCompiler->here (), GALGAS_bool (true), var_attributeTypeIndex, GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (915)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (908)) ;
    }
    enumerator_38024.gotoNextObject () ;
  }
  const enumGalgasBool test_4 = GALGAS_bool (kIsSupOrEqual, object->mAttribute_mInsertOrReplaceDeclarationListAST.reader_length (SOURCE_FILE_AT_LINE (920)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
  if (kBoolTrue == test_4) {
    GALGAS_location var_insertOrReplaceLocation ;
    object->mAttribute_mInsertOrReplaceDeclarationListAST.method_first (var_insertOrReplaceLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (922)) ;
    {
    var_modifierMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("insertOrReplace"), var_insertOrReplaceLocation COMMA_SOURCE_FILE_AT_LINE (924)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (925)), var_insertMethodFormalArgumentList, GALGAS_bool (false), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (928)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (923)) ;
    }
  }
  cEnumerator_attributeInCollectionListAST enumerator_39163 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_39163.hasCurrentObject ()) {
    GALGAS_lstring var_accessorName = GALGAS_lstring::constructor_new (GALGAS_string ("set").operator_concat (enumerator_39163.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (934)).reader_stringByCapitalizingFirstCharacter (SOURCE_FILE_AT_LINE (934)) COMMA_SOURCE_FILE_AT_LINE (934)).operator_concat (GALGAS_string ("ForKey") COMMA_SOURCE_FILE_AT_LINE (934)), enumerator_39163.current_mAttributeName (HERE).reader_location (SOURCE_FILE_AT_LINE (934)) COMMA_SOURCE_FILE_AT_LINE (934)) ;
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_39163.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (936)), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (936)) ;
    }
    GALGAS_formalParameterSignature var_accessorFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (937)) ;
    var_accessorFormalArgumentList.addAssign_operation (var_attributeTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (938)) COMMA_SOURCE_FILE_AT_LINE (938)) ;
    var_accessorFormalArgumentList.addAssign_operation (var_stringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (939)) COMMA_SOURCE_FILE_AT_LINE (939)) ;
    {
    var_modifierMap.modifier_insertOrReplace (var_accessorName, GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (942)), var_accessorFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (945)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (940)) ;
    }
    enumerator_39163.gotoNextObject () ;
  }
  GALGAS_withAccessorMap var_withAccessorMap = GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (950)) ;
  {
  var_withAccessorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("hasKey"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (951)), var_stringTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (951)) ;
  }
  cEnumerator_mapSearchMethodListAST enumerator_40181 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_40181.hasCurrentObject ()) {
    {
    var_withAccessorMap.modifier_insertKey (enumerator_40181.current_mSearchMethodName (HERE), var_lstringTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (953)) ;
    }
    enumerator_40181.gotoNextObject () ;
  }
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mMapTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (959)) ;
  }
  GALGAS_unifiedTypeMapProxy var_enumeratorTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mMapTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE_AT_LINE (972)) COMMA_SOURCE_FILE_AT_LINE (972)), var_enumeratorTypeIndex COMMA_SOURCE_FILE_AT_LINE (970)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mMapTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (979)), GALGAS_typeKindEnum::constructor_mapType (SOURCE_FILE_AT_LINE (980)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (981)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (982)), var_typedAttributeList, var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (988)), var_enumerationDescriptor, var_enumerationVariants, function_doNotGenererateObjectCompare (inCompiler COMMA_SOURCE_FILE_AT_LINE (991)), GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (992)), GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (993)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (994)), object->mAttribute_mSearchMethodList, GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (996)), var_withAccessorMap, GALGAS_bool (false), var_enumeratorTypeIndex, GALGAS_string ("emptyMap"), inCompiler COMMA_SOURCE_FILE_AT_LINE (976)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_mapDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_mapDeclarationAST.mSlotID,
                                              categoryMethod_mapDeclarationAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_mapDeclarationAST_enterInSemanticContext (defineCategoryMethod_mapDeclarationAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@uniqueMapDeclarationAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_uniqueMapDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                           const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                           const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                           const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                           GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_uniqueMapDeclarationAST * object = (const cPtr_uniqueMapDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_uniqueMapDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_stringTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("string"), var_stringTypeIndex COMMA_SOURCE_FILE_AT_LINE (1014)) ;
  }
  GALGAS_unifiedTypeMapProxy var_locationTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("location"), var_locationTypeProxy COMMA_SOURCE_FILE_AT_LINE (1017)) ;
  }
  GALGAS_unifiedTypeMapProxy var_lstringTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("lstring"), var_lstringTypeIndex COMMA_SOURCE_FILE_AT_LINE (1020)) ;
  }
  GALGAS_unifiedTypeMapProxy var_currentMapTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (1023)), var_currentMapTypeIndex COMMA_SOURCE_FILE_AT_LINE (1023)) ;
  }
  GALGAS_enumerationDescriptorList var_enumerationDescriptor = GALGAS_enumerationDescriptorList::constructor_listWithValue (var_lstringTypeIndex, GALGAS_string ("lkey") COMMA_SOURCE_FILE_AT_LINE (1025)) ;
  GALGAS_stringlist var_enumerationVariants = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1026)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("up") COMMA_SOURCE_FILE_AT_LINE (1027)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("down") COMMA_SOURCE_FILE_AT_LINE (1028)) ;
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1030)) ;
  GALGAS_readerMap var_readerMap = GALGAS_readerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1031)) ;
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1032)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1033)) ;
  {
  routine_enterConstructorWithoutArgument (var_constructorMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("emptyMap"), object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (1035)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1035)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("allKeys"), GALGAS_string ("stringset"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1037)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("allKeyList"), GALGAS_string ("lstringlist"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1038)) ;
  }
  {
  routine_enterInheritedReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("hasKey"), GALGAS_string ("string"), GALGAS_string ("bool"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1039)) ;
  }
  {
  routine_enterInheritedReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("locationForKey"), GALGAS_string ("string"), GALGAS_string ("location"), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (1040)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("count"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1041)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("unsolvedProxyCount"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1042)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("unsolvedProxyKeyList"), GALGAS_string ("stringlist"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1043)) ;
  }
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1045)) ;
  GALGAS_formalParameterSignature var_insertMethodFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1046)) ;
  var_insertMethodFormalArgumentList.addAssign_operation (var_lstringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1047)) COMMA_SOURCE_FILE_AT_LINE (1047)) ;
  GALGAS_formalParameterSignature var_removeMethodFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1048)) ;
  var_removeMethodFormalArgumentList.addAssign_operation (var_lstringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1049)) COMMA_SOURCE_FILE_AT_LINE (1049)) ;
  cEnumerator_attributeInCollectionListAST enumerator_44563 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_44563.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_44563.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1052)), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (1052)) ;
    }
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_attributeTypeIndex, enumerator_44563.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (1055)) ;
    var_enumerationDescriptor.addAssign_operation (var_attributeTypeIndex, enumerator_44563.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1056)) COMMA_SOURCE_FILE_AT_LINE (1056)) ;
    var_insertMethodFormalArgumentList.addAssign_operation (var_attributeTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1057)) COMMA_SOURCE_FILE_AT_LINE (1057)) ;
    var_removeMethodFormalArgumentList.addAssign_operation (var_attributeTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1058)) COMMA_SOURCE_FILE_AT_LINE (1058)) ;
    enumerator_44563.gotoNextObject () ;
  }
  cEnumerator_insertMethodListAST enumerator_45249 (object->mAttribute_mInsertMethodList, kEnumeration_up) ;
  while (enumerator_45249.hasCurrentObject ()) {
    const enumGalgasBool test_0 = var_modifierMap.reader_hasKey (enumerator_45249.current_mInsertMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (1062)) COMMA_SOURCE_FILE_AT_LINE (1062)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (enumerator_45249.current_mInsertMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_45249.current_mInsertMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (1063)) COMMA_SOURCE_FILE_AT_LINE (1063)).operator_concat (GALGAS_string ("' insert method is already declared") COMMA_SOURCE_FILE_AT_LINE (1063)) COMMA_SOURCE_FILE_AT_LINE (1063)) ;
    }else if (kBoolFalse == test_0) {
      {
      var_modifierMap.modifier_insertOrReplace (enumerator_45249.current_mInsertMethodName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1067)), var_insertMethodFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1070)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1065)) ;
      }
    }
    enumerator_45249.gotoNextObject () ;
  }
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, object->mAttribute_mMapStateList.reader_length (SOURCE_FILE_AT_LINE (1076)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_2) {
    cEnumerator_mapSearchMethodListAST enumerator_45823 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
    while (enumerator_45823.hasCurrentObject ()) {
      {
      var_instanceMethodMap.modifier_insertKey (enumerator_45823.current_mSearchMethodName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1080)), var_removeMethodFormalArgumentList, enumerator_45823.current_mSearchMethodName (HERE).reader_location (SOURCE_FILE_AT_LINE (1082)), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1084)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1078)) ;
      }
      enumerator_45823.gotoNextObject () ;
    }
  }else if (kBoolFalse == test_2) {
    cEnumerator_mapSearchMethodListAST enumerator_46153 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
    while (enumerator_46153.hasCurrentObject ()) {
      {
      var_modifierMap.modifier_insertKey (enumerator_46153.current_mSearchMethodName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1092)), var_removeMethodFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1095)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1090)) ;
      }
      enumerator_46153.gotoNextObject () ;
    }
  }
  const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, object->mAttribute_mMapStateList.reader_length (SOURCE_FILE_AT_LINE (1101)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_unifiedTypeMapProxy var_locationTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("location"), var_locationTypeIndex COMMA_SOURCE_FILE_AT_LINE (1103)) ;
    }
    {
    var_modifierMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("openBranch"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1105)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1106)), GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1107)), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (1109)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1104)) ;
    }
    {
    var_modifierMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("closeBranch"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1113)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1114)), GALGAS_formalParameterSignature::constructor_listWithValue (var_locationTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1115)) COMMA_SOURCE_FILE_AT_LINE (1115)), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1117)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1112)) ;
    }
    {
    var_modifierMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("closeOverride"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1121)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1122)), GALGAS_formalParameterSignature::constructor_listWithValue (var_locationTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1123)) COMMA_SOURCE_FILE_AT_LINE (1123)), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (1125)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1120)) ;
    }
    {
    var_instanceMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("checkAutomatonStates"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1129)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1130)), GALGAS_formalParameterSignature::constructor_listWithValue (var_locationTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1131)) COMMA_SOURCE_FILE_AT_LINE (1131)), inCompiler->here (), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1134)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1128)) ;
    }
    cEnumerator_mapOverrideBlockListAST enumerator_47903 (object->mAttribute_mMapOverrideBlockListAST, kEnumeration_up) ;
    while (enumerator_47903.hasCurrentObject ()) {
      {
      var_modifierMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("openOverrideFor").operator_concat (enumerator_47903.current_mOverrideBlockName (HERE).mAttribute_string.reader_stringByCapitalizingFirstCharacter (SOURCE_FILE_AT_LINE (1139)) COMMA_SOURCE_FILE_AT_LINE (1139)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1139)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1140)), GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1141)), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1143)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1138)) ;
      }
      enumerator_47903.gotoNextObject () ;
    }
  }
  cEnumerator_attributeInCollectionListAST enumerator_48312 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_48312.hasCurrentObject ()) {
    GALGAS_lstring var_accessorName = GALGAS_lstring::constructor_new (enumerator_48312.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1150)).operator_concat (GALGAS_string ("ForKey") COMMA_SOURCE_FILE_AT_LINE (1150)), enumerator_48312.current_mAttributeName (HERE).reader_location (SOURCE_FILE_AT_LINE (1150)) COMMA_SOURCE_FILE_AT_LINE (1150)) ;
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_48312.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1152)), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (1152)) ;
    }
    {
    var_readerMap.modifier_insertOrReplace (var_accessorName, GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1155)), GALGAS_unifiedTypeMapProxyList::constructor_listWithValue (var_stringTypeIndex COMMA_SOURCE_FILE_AT_LINE (1156)), inCompiler->here (), GALGAS_bool (true), var_attributeTypeIndex, GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1160)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1153)) ;
    }
    enumerator_48312.gotoNextObject () ;
  }
  cEnumerator_attributeInCollectionListAST enumerator_48961 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_48961.hasCurrentObject ()) {
    GALGAS_lstring var_accessorName = GALGAS_lstring::constructor_new (GALGAS_string ("set").operator_concat (enumerator_48961.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1166)).reader_stringByCapitalizingFirstCharacter (SOURCE_FILE_AT_LINE (1166)) COMMA_SOURCE_FILE_AT_LINE (1166)).operator_concat (GALGAS_string ("ForKey") COMMA_SOURCE_FILE_AT_LINE (1166)), enumerator_48961.current_mAttributeName (HERE).reader_location (SOURCE_FILE_AT_LINE (1166)) COMMA_SOURCE_FILE_AT_LINE (1166)) ;
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_48961.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1168)), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (1168)) ;
    }
    GALGAS_formalParameterSignature var_accessorFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1169)) ;
    var_accessorFormalArgumentList.addAssign_operation (var_attributeTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1170)) COMMA_SOURCE_FILE_AT_LINE (1170)) ;
    var_accessorFormalArgumentList.addAssign_operation (var_stringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1171)) COMMA_SOURCE_FILE_AT_LINE (1171)) ;
    {
    var_modifierMap.modifier_insertOrReplace (var_accessorName, GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1174)), var_accessorFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1177)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1172)) ;
    }
    enumerator_48961.gotoNextObject () ;
  }
  GALGAS_withAccessorMap var_withAccessorMap = GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1182)) ;
  {
  var_withAccessorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("hasKey"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1183)), var_stringTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1183)) ;
  }
  cEnumerator_mapSearchMethodListAST enumerator_49979 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_49979.hasCurrentObject ()) {
    {
    var_withAccessorMap.modifier_insertKey (enumerator_49979.current_mSearchMethodName (HERE), var_lstringTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1185)) ;
    }
    enumerator_49979.gotoNextObject () ;
  }
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mMapTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1191)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mMapTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1205)), GALGAS_typeKindEnum::constructor_uniqueMapType (SOURCE_FILE_AT_LINE (1206)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1207)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1208)), var_typedAttributeList, var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1214)), var_enumerationDescriptor, var_enumerationVariants, function_doNotGenererateObjectCompare (inCompiler COMMA_SOURCE_FILE_AT_LINE (1217)), GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (1218)), GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (1219)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1220)), object->mAttribute_mSearchMethodList, GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1222)), var_withAccessorMap, GALGAS_bool (false), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1225)), GALGAS_string ("emptyMap"), inCompiler COMMA_SOURCE_FILE_AT_LINE (1202)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_uniqueMapDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_uniqueMapDeclarationAST.mSlotID,
                                              categoryMethod_uniqueMapDeclarationAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_uniqueMapDeclarationAST_enterInSemanticContext (defineCategoryMethod_uniqueMapDeclarationAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@mapProxyDeclarationAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_mapProxyDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                          const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                          const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                          const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                          GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_mapProxyDeclarationAST * object = (const cPtr_mapProxyDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_mapProxyDeclarationAST) ;
  GALGAS_typeKindEnum var_typeKindEnum ;
  GALGAS_typedAttributeList var_mapTypedAttributeList ;
  GALGAS_mapSearchMethodListAST var_searchMethodList ;
  GALGAS_bool joker_51785_2 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_51785_1 ; // Joker input parameter
  GALGAS_typedAttributeList joker_51825_2 ; // Joker input parameter
  GALGAS_attributeMap joker_51825_1 ; // Joker input parameter
  GALGAS_constructorMap joker_51881_11 ; // Joker input parameter
  GALGAS_readerMap joker_51881_10 ; // Joker input parameter
  GALGAS_modifierMap joker_51881_9 ; // Joker input parameter
  GALGAS_instanceMethodMap joker_51881_8 ; // Joker input parameter
  GALGAS_classMethodMap joker_51881_7 ; // Joker input parameter
  GALGAS_enumerationDescriptorList joker_51881_6 ; // Joker input parameter
  GALGAS_stringlist joker_51881_5 ; // Joker input parameter
  GALGAS_uint joker_51881_4 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxyList joker_51881_3 ; // Joker input parameter
  GALGAS_stringset joker_51881_2 ; // Joker input parameter
  GALGAS_lstringlist joker_51881_1 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_51935_5 ; // Joker input parameter
  GALGAS_withAccessorMap joker_51935_4 ; // Joker input parameter
  GALGAS_bool joker_51935_3 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_51935_2 ; // Joker input parameter
  GALGAS_string joker_51935_1 ; // Joker input parameter
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.method_searchKey (object->mAttribute_mAssociatedMapTypeName, joker_51785_2, joker_51785_1, var_typeKindEnum, joker_51825_2, joker_51825_1, var_mapTypedAttributeList, joker_51881_11, joker_51881_10, joker_51881_9, joker_51881_8, joker_51881_7, joker_51881_6, joker_51881_5, joker_51881_4, joker_51881_3, joker_51881_2, joker_51881_1, var_searchMethodList, joker_51935_5, joker_51935_4, joker_51935_3, joker_51935_2, joker_51935_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1240)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_typeKindEnum.objectCompare (GALGAS_typeKindEnum::constructor_uniqueMapType (SOURCE_FILE_AT_LINE (1250)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAssociatedMapTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the @").operator_concat (object->mAttribute_mAssociatedMapTypeName.reader_string (SOURCE_FILE_AT_LINE (1251)) COMMA_SOURCE_FILE_AT_LINE (1251)).operator_concat (GALGAS_string (" should be an unique map type") COMMA_SOURCE_FILE_AT_LINE (1251)) COMMA_SOURCE_FILE_AT_LINE (1251)) ;
    var_mapTypedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1252)) ;
  }
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1255)) ;
  GALGAS_readerMap var_readerMap = GALGAS_readerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1256)) ;
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1257)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1258)) ;
  GALGAS_classMethodMap var_classMethodMap = GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1259)) ;
  GALGAS_unifiedTypeMapProxy var_associatedMapTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAssociatedMapTypeName.reader_string (SOURCE_FILE_AT_LINE (1262)), var_associatedMapTypeIndex COMMA_SOURCE_FILE_AT_LINE (1262)) ;
  }
  GALGAS_unifiedTypeMapProxy var_stringTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("string"), var_stringTypeIndex COMMA_SOURCE_FILE_AT_LINE (1265)) ;
  }
  GALGAS_unifiedTypeMapProxy var_lstringTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("lstring"), var_lstringTypeIndex COMMA_SOURCE_FILE_AT_LINE (1268)) ;
  }
  GALGAS_unifiedTypeMapProxy var_mapProxyTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mMapProxyTypeName.reader_string (SOURCE_FILE_AT_LINE (1271)), var_mapProxyTypeProxy COMMA_SOURCE_FILE_AT_LINE (1271)) ;
  }
  GALGAS_formalParameterSignature var_argList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1273)) ;
  var_argList.addAssign_operation (var_associatedMapTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentInOut (SOURCE_FILE_AT_LINE (1274)) COMMA_SOURCE_FILE_AT_LINE (1274)) ;
  var_argList.addAssign_operation (var_stringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1275)) COMMA_SOURCE_FILE_AT_LINE (1275)) ;
  var_argList.addAssign_operation (var_mapProxyTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1276)) COMMA_SOURCE_FILE_AT_LINE (1276)) ;
  {
  var_classMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("makeRegularProxy"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1278)), var_argList, GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1277)) ;
  }
  {
  routine_enterConstructorWithoutArgument (var_constructorMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("null"), object->mAttribute_mMapProxyTypeName.reader_string (SOURCE_FILE_AT_LINE (1283)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1283)) ;
  }
  GALGAS_unifiedTypeMapProxyList var_constructorAttributeTypeList = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (1285)) ;
  var_constructorAttributeTypeList.addAssign_operation (var_associatedMapTypeIndex COMMA_SOURCE_FILE_AT_LINE (1286)) ;
  var_constructorAttributeTypeList.addAssign_operation (var_lstringTypeIndex COMMA_SOURCE_FILE_AT_LINE (1287)) ;
  cEnumerator_mapSearchMethodListAST enumerator_53974 (var_searchMethodList, kEnumeration_up) ;
  while (enumerator_53974.hasCurrentObject ()) {
    {
    var_constructorMap.modifier_insertKey (enumerator_53974.current_mSearchMethodName (HERE), var_constructorAttributeTypeList, GALGAS_bool (true), var_mapProxyTypeProxy, inCompiler COMMA_SOURCE_FILE_AT_LINE (1289)) ;
    }
    enumerator_53974.gotoNextObject () ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("isSolved"), GALGAS_string ("bool"), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (1297)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("isNull"), GALGAS_string ("bool"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1298)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("isRegular"), GALGAS_string ("bool"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1299)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("lkey"), GALGAS_string ("lstring"), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (1300)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("key"), GALGAS_string ("string"), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (1301)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("identifierRepresentation"), GALGAS_string ("string"), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (1302)) ;
  }
  GALGAS_readerMap var_inheritedReaderMap = var_readerMap ;
  cEnumerator_typedAttributeList enumerator_54945 (var_mapTypedAttributeList, kEnumeration_up) ;
  while (enumerator_54945.hasCurrentObject ()) {
    const enumGalgasBool test_2 = var_inheritedReaderMap.reader_hasKey (enumerator_54945.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1306)) COMMA_SOURCE_FILE_AT_LINE (1306)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      cEnumerator_stringset enumerator_55088 (var_inheritedReaderMap.reader_allKeys (SOURCE_FILE_AT_LINE (1308)), kEnumeration_up) ;
      while (enumerator_55088.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("'").operator_concat (enumerator_55088.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (1309)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1309)) COMMA_SOURCE_FILE_AT_LINE (1309)) ;
        if (enumerator_55088.hasNextObject ()) {
          var_s.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (1310)) ;
        }
        enumerator_55088.gotoNextObject () ;
      }
      GALGAS_location location_3 (enumerator_54945.current_mAttributeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the map has a associated map proxy, which has predefined readers: ").operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (1312)).operator_concat (GALGAS_string ("; you cannot use theses names for naming an attribute of this map") COMMA_SOURCE_FILE_AT_LINE (1313)) COMMA_SOURCE_FILE_AT_LINE (1312)) ;
    }else if (kBoolFalse == test_2) {
      {
      var_readerMap.modifier_insertKey (enumerator_54945.current_mAttributeName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1317)), GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (1318)), inCompiler->here (), GALGAS_bool (true), enumerator_54945.current_mAttributeTypeProxy (HERE), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1322)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1315)) ;
      }
    }
    enumerator_54945.gotoNextObject () ;
  }
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mMapProxyTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1328)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mMapProxyTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1342)), GALGAS_typeKindEnum::constructor_mapProxyType (SOURCE_FILE_AT_LINE (1343)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1344)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1345)), var_mapTypedAttributeList, var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, var_classMethodMap, GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (1352)), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1353)), function_doNotGenererateObjectCompare (inCompiler COMMA_SOURCE_FILE_AT_LINE (1354)), GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (1355)), GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (1356)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1357)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1358)), var_searchMethodList, GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1360)), GALGAS_bool (false), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1362)), GALGAS_string ("null"), inCompiler COMMA_SOURCE_FILE_AT_LINE (1339)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_mapProxyDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_mapProxyDeclarationAST.mSlotID,
                                              categoryMethod_mapProxyDeclarationAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_mapProxyDeclarationAST_enterInSemanticContext (defineCategoryMethod_mapProxyDeclarationAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@externTypeDeclarationAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_externTypeDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                            const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                            const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                            const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                            GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externTypeDeclarationAST * object = (const cPtr_externTypeDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_externTypeDeclarationAST) ;
  GALGAS_readerMap var_readerMap = GALGAS_readerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1376)) ;
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1377)) ;
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1378)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1379)) ;
  GALGAS_classMethodMap var_classMethodMap = GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1380)) ;
  cEnumerator_externTypeConstructorList enumerator_57529 (object->mAttribute_mExternTypeConstructorList, kEnumeration_up) ;
  while (enumerator_57529.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_returnedTypeProxy ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_57529.current_mResultTypeName (HERE).mAttribute_string, var_returnedTypeProxy COMMA_SOURCE_FILE_AT_LINE (1384)) ;
    }
    GALGAS_unifiedTypeMapProxyList var_arguments = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (1386)) ;
    cEnumerator_lstringlist enumerator_57791 (enumerator_57529.current_mArgumentTypeNameList (HERE), kEnumeration_up) ;
    while (enumerator_57791.hasCurrentObject ()) {
      GALGAS_unifiedTypeMapProxy var_argumentTypeProxy ;
      {
      GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_57791.current_mValue (HERE).mAttribute_string, var_argumentTypeProxy COMMA_SOURCE_FILE_AT_LINE (1389)) ;
      }
      var_arguments.addAssign_operation (var_argumentTypeProxy COMMA_SOURCE_FILE_AT_LINE (1390)) ;
      enumerator_57791.gotoNextObject () ;
    }
    {
    var_constructorMap.modifier_insertKey (enumerator_57529.current_mConstructorName (HERE), var_arguments, GALGAS_bool (true), var_returnedTypeProxy, inCompiler COMMA_SOURCE_FILE_AT_LINE (1393)) ;
    }
    enumerator_57529.gotoNextObject () ;
  }
  cEnumerator_externTypeReaderList enumerator_58232 (object->mAttribute_mExternTypeReaderList, kEnumeration_up) ;
  while (enumerator_58232.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_returnedTypeProxy ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_58232.current_mResultTypeName (HERE).mAttribute_string, var_returnedTypeProxy COMMA_SOURCE_FILE_AT_LINE (1403)) ;
    }
    GALGAS_unifiedTypeMapProxyList var_arguments = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (1405)) ;
    cEnumerator_lstringlist enumerator_58494 (enumerator_58232.current_mArgumentTypeNameList (HERE), kEnumeration_up) ;
    while (enumerator_58494.hasCurrentObject ()) {
      GALGAS_unifiedTypeMapProxy var_argumentTypeProxy ;
      {
      GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_58494.current_mValue (HERE).mAttribute_string, var_argumentTypeProxy COMMA_SOURCE_FILE_AT_LINE (1408)) ;
      }
      var_arguments.addAssign_operation (var_argumentTypeProxy COMMA_SOURCE_FILE_AT_LINE (1409)) ;
      enumerator_58494.gotoNextObject () ;
    }
    {
    var_readerMap.modifier_insertKey (enumerator_58232.current_mReaderName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1414)), var_arguments, inCompiler->here (), GALGAS_bool (true), var_returnedTypeProxy, GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (1419)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1412)) ;
    }
    enumerator_58232.gotoNextObject () ;
  }
  cEnumerator_externTypeModifierList enumerator_59046 (object->mAttribute_mExternTypeModifierList, kEnumeration_up) ;
  while (enumerator_59046.hasCurrentObject ()) {
    GALGAS_formalParameterSignature var_routineSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1425)) ;
    cEnumerator_formalParameterListAST enumerator_59143 (enumerator_59046.current_mFormalParameterList (HERE), kEnumeration_up) ;
    while (enumerator_59143.hasCurrentObject ()) {
      GALGAS_unifiedTypeMapProxy var_parameterTypeIndex ;
      {
      GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_59143.current_mFormalArgumentTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1430)), var_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (1428)) ;
      }
      var_routineSignature.addAssign_operation (var_parameterTypeIndex, enumerator_59143.current_mFormalArgumentPassingMode (HERE) COMMA_SOURCE_FILE_AT_LINE (1433)) ;
      enumerator_59143.gotoNextObject () ;
    }
    {
    var_modifierMap.modifier_insertKey (enumerator_59046.current_mModifierName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1438)), var_routineSignature, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (1441)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1436)) ;
    }
    enumerator_59046.gotoNextObject () ;
  }
  cEnumerator_externTypeMethodList enumerator_59752 (object->mAttribute_mExternTypeMethodList, kEnumeration_up) ;
  while (enumerator_59752.hasCurrentObject ()) {
    GALGAS_formalParameterSignature var_routineSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1447)) ;
    cEnumerator_formalParameterListAST enumerator_59849 (enumerator_59752.current_mFormalParameterList (HERE), kEnumeration_up) ;
    while (enumerator_59849.hasCurrentObject ()) {
      GALGAS_unifiedTypeMapProxy var_parameterTypeIndex ;
      {
      GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_59849.current_mFormalArgumentTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1452)), var_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (1450)) ;
      }
      var_routineSignature.addAssign_operation (var_parameterTypeIndex, enumerator_59849.current_mFormalArgumentPassingMode (HERE) COMMA_SOURCE_FILE_AT_LINE (1455)) ;
      enumerator_59849.gotoNextObject () ;
    }
    {
    var_instanceMethodMap.modifier_insertKey (enumerator_59752.current_mMethodName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1460)), var_routineSignature, enumerator_59752.current_mDeclarationLocation (HERE), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (1464)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1458)) ;
    }
    enumerator_59752.gotoNextObject () ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mExternTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1472)), GALGAS_typeKindEnum::constructor_graphType (SOURCE_FILE_AT_LINE (1473)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1474)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1475)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1476)), var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1481)), GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (1482)), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1483)), GALGAS_uint ((PMUInt32) 0U), GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (1485)), GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (1486)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1487)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1488)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1489)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1490)), GALGAS_bool (false), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1492)), GALGAS_string ("default"), inCompiler COMMA_SOURCE_FILE_AT_LINE (1469)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_externTypeDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_externTypeDeclarationAST.mSlotID,
                                              categoryMethod_externTypeDeclarationAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externTypeDeclarationAST_enterInSemanticContext (defineCategoryMethod_externTypeDeclarationAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@graphDeclarationAST enterInSemanticContext'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_graphDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                       const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                       const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                       const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                       GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_graphDeclarationAST * object = (const cPtr_graphDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_graphDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_stringTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("string"), var_stringTypeProxy COMMA_SOURCE_FILE_AT_LINE (1507)) ;
  }
  GALGAS_unifiedTypeMapProxy var_lstringTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("lstring"), var_lstringTypeProxy COMMA_SOURCE_FILE_AT_LINE (1510)) ;
  }
  GALGAS_unifiedTypeMapProxy var_graphTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mGraphTypeName.mAttribute_string, var_graphTypeProxy COMMA_SOURCE_FILE_AT_LINE (1513)) ;
  }
  GALGAS_unifiedTypeMapProxy var_associatedListTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAssociatedListTypeName.reader_string (SOURCE_FILE_AT_LINE (1516)), var_associatedListTypeProxy COMMA_SOURCE_FILE_AT_LINE (1516)) ;
  }
  GALGAS_unifiedTypeMapProxy var_lstringListTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("lstringlist"), var_lstringListTypeProxy COMMA_SOURCE_FILE_AT_LINE (1519)) ;
  }
  GALGAS_readerMap var_readerMap = GALGAS_readerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1521)) ;
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1522)) ;
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1523)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1524)) ;
  GALGAS_classMethodMap var_classMethodMap = GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1525)) ;
  GALGAS_formalParameterSignature var_formalParameterList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1527)) ;
  var_formalParameterList.addAssign_operation (var_associatedListTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1528)) COMMA_SOURCE_FILE_AT_LINE (1528)) ;
  var_formalParameterList.addAssign_operation (var_lstringListTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1529)) COMMA_SOURCE_FILE_AT_LINE (1529)) ;
  var_formalParameterList.addAssign_operation (var_associatedListTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1530)) COMMA_SOURCE_FILE_AT_LINE (1530)) ;
  var_formalParameterList.addAssign_operation (var_lstringListTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1531)) COMMA_SOURCE_FILE_AT_LINE (1531)) ;
  {
  var_instanceMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("topologicalSort"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1533)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1534)), var_formalParameterList, inCompiler->here (), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1538)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1532)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("undefinedNodeCount"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1542)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("undefinedNodeKeyList"), GALGAS_string ("stringlist"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1550)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("undefinedNodeReferenceList"), GALGAS_string ("lstringlist"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1558)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("graphviz"), GALGAS_string ("string"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1566)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("arcs"), GALGAS_string ("2stringlist"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1574)) ;
  }
  {
  var_constructorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("emptyGraph"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1583)), GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (1584)), GALGAS_bool (false), var_graphTypeProxy, inCompiler COMMA_SOURCE_FILE_AT_LINE (1582)) ;
  }
  var_formalParameterList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1589)) ;
  var_formalParameterList.addAssign_operation (var_lstringTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1590)) COMMA_SOURCE_FILE_AT_LINE (1590)) ;
  cEnumerator_unifiedTypeMapProxyList enumerator_65029 (var_associatedListTypeProxy.reader_mAddAssignOperatorArguments (inCompiler COMMA_SOURCE_FILE_AT_LINE (1591)), kEnumeration_up) ;
  while (enumerator_65029.hasCurrentObject ()) {
    var_formalParameterList.addAssign_operation (enumerator_65029.current_mType (HERE), GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1592)) COMMA_SOURCE_FILE_AT_LINE (1592)) ;
    enumerator_65029.gotoNextObject () ;
  }
  cEnumerator_graphInsertModifierList enumerator_65158 (object->mAttribute_mInsertModifierList, kEnumeration_up) ;
  while (enumerator_65158.hasCurrentObject ()) {
    {
    var_modifierMap.modifier_insertOrReplace (enumerator_65158.current_mInsertModifierName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1597)), var_formalParameterList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1600)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1595)) ;
    }
    enumerator_65158.gotoNextObject () ;
  }
  var_formalParameterList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1605)) ;
  var_formalParameterList.addAssign_operation (var_lstringTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1606)) COMMA_SOURCE_FILE_AT_LINE (1606)) ;
  var_formalParameterList.addAssign_operation (var_lstringTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1607)) COMMA_SOURCE_FILE_AT_LINE (1607)) ;
  {
  var_modifierMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("addArc"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1609)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1610)), var_formalParameterList, GALGAS_bool (false), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (1613)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1608)) ;
  }
  var_formalParameterList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1617)) ;
  var_formalParameterList.addAssign_operation (var_lstringTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1618)) COMMA_SOURCE_FILE_AT_LINE (1618)) ;
  {
  var_modifierMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("noteNode"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1620)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1621)), var_formalParameterList, GALGAS_bool (false), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (1624)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1619)) ;
  }
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mGraphTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1628)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mGraphTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1642)), GALGAS_typeKindEnum::constructor_graphType (SOURCE_FILE_AT_LINE (1643)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1644)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1645)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1646)), var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1651)), GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (1652)), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1653)), function_doNotGenererateObjectCompare (inCompiler COMMA_SOURCE_FILE_AT_LINE (1654)), GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (1655)), GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (1656)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1657)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1658)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1659)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1660)), GALGAS_bool (false), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1662)), GALGAS_string ("emptyGraph"), inCompiler COMMA_SOURCE_FILE_AT_LINE (1639)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_graphDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_graphDeclarationAST.mSlotID,
                                              categoryMethod_graphDeclarationAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_graphDeclarationAST_enterInSemanticContext (defineCategoryMethod_graphDeclarationAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@enumDeclarationAST enterInSemanticContext'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_enumDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                      const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                      const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                      const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                      GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_enumDeclarationAST * object = (const cPtr_enumDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_enumDeclarationAST) ;
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1677)) ;
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1678)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1679)) ;
  GALGAS_classMethodMap var_classMethodMap = GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1680)) ;
  GALGAS_unifiedTypeMapProxy var_currentTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mEnumTypeName.reader_string (SOURCE_FILE_AT_LINE (1683)), var_currentTypeIndex COMMA_SOURCE_FILE_AT_LINE (1683)) ;
  }
  GALGAS_stringset var_constantSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (1685)) ;
  cEnumerator_lstringlist enumerator_68433 (object->mAttribute_mConstantList, kEnumeration_up) ;
  while (enumerator_68433.hasCurrentObject ()) {
    var_constantSet.addAssign_operation (enumerator_68433.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1687)) COMMA_SOURCE_FILE_AT_LINE (1687)) ;
    {
    routine_enterConstructorWithoutArgument (var_constructorMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_68433.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1688)), object->mAttribute_mEnumTypeName.reader_string (SOURCE_FILE_AT_LINE (1688)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1688)) ;
    }
    enumerator_68433.gotoNextObject () ;
  }
  GALGAS_readerMap var_readerMap ;
  {
  routine_commonReaderMapForAllTypes (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1692)) ;
  }
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mEnumTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1694)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mEnumTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1708)), GALGAS_typeKindEnum::constructor_enumType (SOURCE_FILE_AT_LINE (1709)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1710)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1711)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1712)), var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1717)), GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (1718)), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1719)), function_generateDescriptionReaderUtilityMethod (inCompiler COMMA_SOURCE_FILE_AT_LINE (1720)).operator_or (function_isComparable (inCompiler COMMA_SOURCE_FILE_AT_LINE (1720)) COMMA_SOURCE_FILE_AT_LINE (1720)), GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (1721)), var_constantSet, object->mAttribute_mConstantList, GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1724)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1725)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1726)), GALGAS_bool (false), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1728)), object->mAttribute_mConstantList.reader_mValueAtIndex (GALGAS_uint ((PMUInt32) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1729)).mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (1705)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_enumDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_enumDeclarationAST.mSlotID,
                                              categoryMethod_enumDeclarationAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_enumDeclarationAST_enterInSemanticContext (defineCategoryMethod_enumDeclarationAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@filewrapperDeclarationAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_filewrapperDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                             const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                             const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                             const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                             GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_filewrapperDeclarationAST * object = (const cPtr_filewrapperDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_filewrapperDeclarationAST) ;
  GALGAS_filewrapperTemplateMap var_filewrapperTemplateMap = GALGAS_filewrapperTemplateMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1814)) ;
  cEnumerator_filewrapperTemplateListAST enumerator_73026 (object->mAttribute_mFilewrapperTemplateList, kEnumeration_up) ;
  while (enumerator_73026.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxyList var_templateSignature = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (1816)) ;
    cEnumerator_formalTemplateInputParameterListAST enumerator_73144 (enumerator_73026.current_mFilewrapperTemplateFormalInputParameters (HERE), kEnumeration_up) ;
    while (enumerator_73144.hasCurrentObject ()) {
      GALGAS_unifiedTypeMapProxy var_parameterTypeIndex ;
      {
      GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_73144.current_mFormalArgumentTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1819)), var_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (1819)) ;
      }
      var_templateSignature.addAssign_operation (var_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (1820)) ;
      enumerator_73144.gotoNextObject () ;
    }
    {
    var_filewrapperTemplateMap.modifier_insertKey (enumerator_73026.current_mFilewrapperTemplateName (HERE), var_templateSignature, enumerator_73026.current_mFilewrapperTemplatePath (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1822)) ;
    }
    enumerator_73026.gotoNextObject () ;
  }
  GALGAS_wrapperExtensionMap var_textExtensionMap = GALGAS_wrapperExtensionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1829)) ;
  cEnumerator_lstringlist enumerator_73679 (object->mAttribute_mFilewrapperTextFileExtensionList, kEnumeration_up) ;
  while (enumerator_73679.hasCurrentObject ()) {
    {
    var_textExtensionMap.modifier_insertKey (enumerator_73679.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1831)) ;
    }
    enumerator_73679.gotoNextObject () ;
  }
  GALGAS_wrapperExtensionMap var_binaryFileExtensionMap = GALGAS_wrapperExtensionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1834)) ;
  cEnumerator_lstringlist enumerator_73885 (object->mAttribute_mFilewrapperBinaryFileExtensionList, kEnumeration_up) ;
  while (enumerator_73885.hasCurrentObject ()) {
    const enumGalgasBool test_0 = var_textExtensionMap.reader_hasKey (enumerator_73885.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1836)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (enumerator_73885.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_73885.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1837)) COMMA_SOURCE_FILE_AT_LINE (1837)).operator_concat (GALGAS_string ("' extension is already used for text files") COMMA_SOURCE_FILE_AT_LINE (1837)) COMMA_SOURCE_FILE_AT_LINE (1837)) ;
    }else if (kBoolFalse == test_0) {
      {
      var_binaryFileExtensionMap.modifier_insertKey (enumerator_73885.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1839)) ;
      }
    }
    enumerator_73885.gotoNextObject () ;
  }
  GALGAS_wrapperFileMap var_regularRootFileMap ;
  GALGAS_wrapperDirectoryMap var_wrapperDirectoryMap ;
  GALGAS_string var_absoluteSourcePath ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, object->mAttribute_mFilewrapperPath.reader_string (SOURCE_FILE_AT_LINE (1846)).reader_firstCharacterOrNul (SOURCE_FILE_AT_LINE (1846)).objectCompare (GALGAS_char (TO_UNICODE (47)))).boolEnum () ;
  if (kBoolTrue == test_2) {
    var_absoluteSourcePath = object->mAttribute_mFilewrapperPath.reader_string (SOURCE_FILE_AT_LINE (1847)) ;
  }else if (kBoolFalse == test_2) {
    var_absoluteSourcePath = object->mAttribute_mSourceFileAbsolutePath.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (1849)).operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1849)).operator_concat (object->mAttribute_mFilewrapperPath.reader_string (SOURCE_FILE_AT_LINE (1849)) COMMA_SOURCE_FILE_AT_LINE (1849)) ;
  }
  const enumGalgasBool test_3 = var_absoluteSourcePath.reader_directoryExists (SOURCE_FILE_AT_LINE (1851)).operator_not (SOURCE_FILE_AT_LINE (1851)).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (object->mAttribute_mFilewrapperPath.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("The '").operator_concat (var_absoluteSourcePath COMMA_SOURCE_FILE_AT_LINE (1852)).operator_concat (GALGAS_string ("' directory does not exist") COMMA_SOURCE_FILE_AT_LINE (1852)) COMMA_SOURCE_FILE_AT_LINE (1852)) ;
    var_regularRootFileMap.drop () ; // Release error dropped variable
    var_wrapperDirectoryMap.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_3) {
    GALGAS_uint var_wrapperFileIndex = GALGAS_uint ((PMUInt32) 0U) ;
    GALGAS_uint var_wrapperDirectoryIndex = GALGAS_uint ((PMUInt32) 0U) ;
    {
    routine_recursivelyEnumerateDirectories (var_absoluteSourcePath, GALGAS_string ("/"), var_textExtensionMap, var_binaryFileExtensionMap, var_regularRootFileMap, var_wrapperDirectoryMap, var_wrapperFileIndex, var_wrapperDirectoryIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1858)) ;
    }
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mFilewrapperMap.modifier_insertKey (object->mAttribute_mFilewrapperName, object->mAttribute_mFilewrapperPath, object->mAttribute_mFilewrapperTextFileExtensionList, var_regularRootFileMap, var_wrapperDirectoryMap, var_filewrapperTemplateMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1870)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_filewrapperDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_filewrapperDeclarationAST.mSlotID,
                                              categoryMethod_filewrapperDeclarationAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_filewrapperDeclarationAST_enterInSemanticContext (defineCategoryMethod_filewrapperDeclarationAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@listDeclarationAST enterInSemanticContext'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_listDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                      const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                      const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                      const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                      GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listDeclarationAST * object = (const cPtr_listDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_listDeclarationAST) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1889)) ;
  cEnumerator_attributeInCollectionListAST enumerator_75835 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_75835.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_75835.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1892)), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (1892)) ;
    }
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (false) ;
    cEnumerator_lstringlist enumerator_76095 (enumerator_75835.current_mFeatureList (HERE), kEnumeration_up) ;
    while (enumerator_76095.hasCurrentObject ()) {
      const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, enumerator_76095.current_mValue (HERE).mAttribute_string.objectCompare (GALGAS_string ("nogetter"))).boolEnum () ;
      if (kBoolTrue == test_0) {
        var_hasGetter = GALGAS_bool (false) ;
      }else if (kBoolFalse == test_0) {
        const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_76095.current_mValue (HERE).mAttribute_string.objectCompare (GALGAS_string ("setter"))).boolEnum () ;
        if (kBoolTrue == test_1) {
          var_hasSetter = GALGAS_bool (true) ;
        }
      }
      enumerator_76095.gotoNextObject () ;
    }
    var_typedAttributeList.addAssign_operation (var_attributeTypeIndex, enumerator_75835.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (1902)) ;
    enumerator_75835.gotoNextObject () ;
  }
  GALGAS_unifiedTypeMapProxy var_uintType ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("uint"), var_uintType COMMA_SOURCE_FILE_AT_LINE (1906)) ;
  }
  GALGAS_unifiedTypeMapProxy var_listTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mListTypeName.reader_string (SOURCE_FILE_AT_LINE (1909)), var_listTypeIndex COMMA_SOURCE_FILE_AT_LINE (1909)) ;
  }
  GALGAS_enumerationDescriptorList var_enumerationDescriptor = GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (1911)) ;
  GALGAS_unifiedTypeMapProxyList var_constructorAttributeTypeList = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (1912)) ;
  GALGAS_formalParameterSignature var_modifierOutputFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1913)) ;
  GALGAS_formalParameterSignature var_modifierInputFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1914)) ;
  cEnumerator_typedAttributeList enumerator_77040 (var_typedAttributeList, kEnumeration_up) ;
  while (enumerator_77040.hasCurrentObject ()) {
    var_enumerationDescriptor.addAssign_operation (enumerator_77040.current_mAttributeTypeProxy (HERE), enumerator_77040.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1916)) COMMA_SOURCE_FILE_AT_LINE (1916)) ;
    var_constructorAttributeTypeList.addAssign_operation (enumerator_77040.current_mAttributeTypeProxy (HERE) COMMA_SOURCE_FILE_AT_LINE (1917)) ;
    var_modifierOutputFormalArgumentList.addAssign_operation (enumerator_77040.current_mAttributeTypeProxy (HERE), GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1918)) COMMA_SOURCE_FILE_AT_LINE (1918)) ;
    var_modifierInputFormalArgumentList.addAssign_operation (enumerator_77040.current_mAttributeTypeProxy (HERE), GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1919)) COMMA_SOURCE_FILE_AT_LINE (1919)) ;
    enumerator_77040.gotoNextObject () ;
  }
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1922)) ;
  {
  routine_enterConstructorWithoutArgument (var_constructorMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("emptyList"), object->mAttribute_mListTypeName.reader_string (SOURCE_FILE_AT_LINE (1923)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1923)) ;
  }
  {
  var_constructorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("listWithValue"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1925)), var_constructorAttributeTypeList, GALGAS_bool (false), var_listTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1924)) ;
  }
  GALGAS_readerMap var_readerMap = GALGAS_readerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1931)) ;
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("length"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1932)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("range"), GALGAS_string ("range"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1933)) ;
  }
  {
  routine_enterBaseReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("subListFromIndex"), GALGAS_string ("uint"), object->mAttribute_mListTypeName.reader_string (SOURCE_FILE_AT_LINE (1934)), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (1934)) ;
  }
  {
  routine_enterBaseReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("subListWithRange"), GALGAS_string ("range"), object->mAttribute_mListTypeName.reader_string (SOURCE_FILE_AT_LINE (1935)), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (1935)) ;
  }
  cEnumerator_typedAttributeList enumerator_78308 (var_typedAttributeList, kEnumeration_up) ;
  while (enumerator_78308.hasCurrentObject ()) {
    const enumGalgasBool test_2 = enumerator_78308.current_mHasGetter (HERE).boolEnum () ;
    if (kBoolTrue == test_2) {
      {
      var_readerMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (enumerator_78308.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1939)).operator_concat (GALGAS_string ("AtIndex") COMMA_SOURCE_FILE_AT_LINE (1939)), enumerator_78308.current_mAttributeName (HERE).reader_location (SOURCE_FILE_AT_LINE (1939)) COMMA_SOURCE_FILE_AT_LINE (1939)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1940)), GALGAS_unifiedTypeMapProxyList::constructor_listWithValue (var_uintType COMMA_SOURCE_FILE_AT_LINE (1941)), inCompiler->here (), GALGAS_bool (true), enumerator_78308.current_mAttributeTypeProxy (HERE), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1945)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1938)) ;
      }
    }
    enumerator_78308.gotoNextObject () ;
  }
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1951)) ;
  {
  var_modifierMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("popFirst"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1953)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1954)), var_modifierOutputFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1957)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1952)) ;
  }
  {
  var_modifierMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("popLast"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1961)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1962)), var_modifierOutputFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1965)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1960)) ;
  }
  {
  var_modifierMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("prependValue"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1969)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1970)), var_modifierInputFormalArgumentList, GALGAS_bool (false), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1973)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1968)) ;
  }
  cEnumerator_typedAttributeList enumerator_79425 (var_typedAttributeList, kEnumeration_up) ;
  while (enumerator_79425.hasCurrentObject ()) {
    const enumGalgasBool test_3 = enumerator_79425.current_mHasSetter (HERE).boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_formalParameterSignature var_setterFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1978)) ;
      var_setterFormalArgumentList.addAssign_operation (enumerator_79425.current_mAttributeTypeProxy (HERE), GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1979)) COMMA_SOURCE_FILE_AT_LINE (1979)) ;
      var_setterFormalArgumentList.addAssign_operation (var_uintType, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1980)) COMMA_SOURCE_FILE_AT_LINE (1980)) ;
      {
      var_modifierMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("set").operator_concat (enumerator_79425.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1982)).reader_stringByCapitalizingFirstCharacter (SOURCE_FILE_AT_LINE (1982)) COMMA_SOURCE_FILE_AT_LINE (1982)).operator_concat (GALGAS_string ("AtIndex") COMMA_SOURCE_FILE_AT_LINE (1982)), enumerator_79425.current_mAttributeName (HERE).reader_location (SOURCE_FILE_AT_LINE (1982)) COMMA_SOURCE_FILE_AT_LINE (1982)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1983)), var_setterFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1986)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1981)) ;
      }
    }
    enumerator_79425.gotoNextObject () ;
  }
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1992)) ;
  {
  var_instanceMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("first"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1994)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1995)), var_modifierOutputFormalArgumentList, inCompiler->here (), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1999)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1993)) ;
  }
  {
  var_instanceMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("last"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2003)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2004)), var_modifierOutputFormalArgumentList, inCompiler->here (), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2008)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2002)) ;
  }
  GALGAS_stringlist var_enumerationVariants = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2011)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("up") COMMA_SOURCE_FILE_AT_LINE (2012)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("down") COMMA_SOURCE_FILE_AT_LINE (2013)) ;
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mListTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2015)) ;
  }
  GALGAS_unifiedTypeMapProxy var_enumeratedTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mListTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE_AT_LINE (2028)) COMMA_SOURCE_FILE_AT_LINE (2028)), var_enumeratedTypeIndex COMMA_SOURCE_FILE_AT_LINE (2026)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mListTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2035)), GALGAS_typeKindEnum::constructor_listType (SOURCE_FILE_AT_LINE (2036)), var_typedAttributeList, GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2038)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2039)), var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2044)), var_enumerationDescriptor, var_enumerationVariants, function_binaryConcatOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (2047)).operator_or (function_doNotGenererateObjectCompare (inCompiler COMMA_SOURCE_FILE_AT_LINE (2047)) COMMA_SOURCE_FILE_AT_LINE (2047)).operator_or (function_dotAssignOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (2047)) COMMA_SOURCE_FILE_AT_LINE (2047)), var_constructorAttributeTypeList, GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (2049)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2050)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2051)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2052)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2053)), GALGAS_bool (false), var_enumeratedTypeIndex, GALGAS_string ("emptyList"), inCompiler COMMA_SOURCE_FILE_AT_LINE (2032)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_listDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_listDeclarationAST.mSlotID,
                                              categoryMethod_listDeclarationAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listDeclarationAST_enterInSemanticContext (defineCategoryMethod_listDeclarationAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@sortedListDeclarationAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_sortedListDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                            const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                            const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                            const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                            GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_sortedListDeclarationAST * object = (const cPtr_sortedListDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_sortedListDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_uintType ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("uint"), var_uintType COMMA_SOURCE_FILE_AT_LINE (2070)) ;
  }
  GALGAS_unifiedTypeMapProxy var_listTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mSortedListTypeName.reader_string (SOURCE_FILE_AT_LINE (2073)), var_listTypeIndex COMMA_SOURCE_FILE_AT_LINE (2073)) ;
  }
  GALGAS_enumerationDescriptorList var_enumerationDescriptor = GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (2075)) ;
  GALGAS_unifiedTypeMapProxyList var_constructorAttributeTypeList = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (2076)) ;
  GALGAS_formalParameterSignature var_modifierFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (2077)) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2078)) ;
  cEnumerator_attributeInCollectionListAST enumerator_83189 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_83189.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_83189.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2081)), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (2081)) ;
    }
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_attributeTypeIndex, enumerator_83189.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (2084)) ;
    var_enumerationDescriptor.addAssign_operation (var_attributeTypeIndex, enumerator_83189.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2085)) COMMA_SOURCE_FILE_AT_LINE (2085)) ;
    var_constructorAttributeTypeList.addAssign_operation (var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (2086)) ;
    var_modifierFormalArgumentList.addAssign_operation (var_attributeTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (2087)) COMMA_SOURCE_FILE_AT_LINE (2087)) ;
    enumerator_83189.gotoNextObject () ;
  }
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2090)) ;
  {
  routine_enterConstructorWithoutArgument (var_constructorMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("emptySortedList"), object->mAttribute_mSortedListTypeName.reader_string (SOURCE_FILE_AT_LINE (2091)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2091)) ;
  }
  {
  var_constructorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("sortedListWithValue"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2093)), var_constructorAttributeTypeList, GALGAS_bool (false), var_listTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2092)) ;
  }
  GALGAS_readerMap var_readerMap = GALGAS_readerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2099)) ;
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("length"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2100)) ;
  }
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2102)) ;
  {
  var_modifierMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("popGreatest"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2104)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2105)), var_modifierFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2108)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (2103)) ;
  }
  {
  var_modifierMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("popSmallest"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2112)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2113)), var_modifierFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2116)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (2111)) ;
  }
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2120)) ;
  {
  var_instanceMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("greatest"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2122)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2123)), var_modifierFormalArgumentList, inCompiler->here (), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2127)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2121)) ;
  }
  {
  var_instanceMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("smallest"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2131)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2132)), var_modifierFormalArgumentList, inCompiler->here (), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2136)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2130)) ;
  }
  GALGAS_stringlist var_enumerationVariants = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2140)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("up") COMMA_SOURCE_FILE_AT_LINE (2141)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("down") COMMA_SOURCE_FILE_AT_LINE (2142)) ;
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mSortedListTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2144)) ;
  }
  GALGAS_unifiedTypeMapProxy var_enumeratedTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mSortedListTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE_AT_LINE (2156)) COMMA_SOURCE_FILE_AT_LINE (2156)), var_enumeratedTypeIndex COMMA_SOURCE_FILE_AT_LINE (2156)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mSortedListTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2161)), GALGAS_typeKindEnum::constructor_sortedListType (SOURCE_FILE_AT_LINE (2162)), var_typedAttributeList, GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2164)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2165)), var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2170)), var_enumerationDescriptor, var_enumerationVariants, function_binaryConcatOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (2173)).operator_or (function_doNotGenererateObjectCompare (inCompiler COMMA_SOURCE_FILE_AT_LINE (2173)) COMMA_SOURCE_FILE_AT_LINE (2173)).operator_or (function_dotAssignOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (2173)) COMMA_SOURCE_FILE_AT_LINE (2173)), var_constructorAttributeTypeList, GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (2175)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2176)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2177)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2178)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2179)), GALGAS_bool (false), var_enumeratedTypeIndex, GALGAS_string ("emptySortedList"), inCompiler COMMA_SOURCE_FILE_AT_LINE (2158)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_sortedListDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_sortedListDeclarationAST.mSlotID,
                                              categoryMethod_sortedListDeclarationAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_sortedListDeclarationAST_enterInSemanticContext (defineCategoryMethod_sortedListDeclarationAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@structDeclarationAST enterInSemanticContext' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_structDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                        const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                        const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                        const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                        GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_structDeclarationAST * object = (const cPtr_structDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_structDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_structTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mStructTypeName.reader_string (SOURCE_FILE_AT_LINE (2196)), var_structTypeIndex COMMA_SOURCE_FILE_AT_LINE (2196)) ;
  }
  GALGAS_attributeMap var_attributeMap = GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2198)) ;
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2199)) ;
  GALGAS_unifiedTypeMapProxyList var_constructorAttributeTypeList = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (2200)) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2201)) ;
  cEnumerator_attributeInCollectionListAST enumerator_87715 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_87715.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_87715.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2204)), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (2204)) ;
    }
    var_constructorAttributeTypeList.addAssign_operation (var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (2205)) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (false) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_attributeTypeIndex, enumerator_87715.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (2208)) ;
    {
    var_attributeMap.modifier_insertKey (enumerator_87715.current_mAttributeName (HERE), var_attributeTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2209)) ;
    }
    enumerator_87715.gotoNextObject () ;
  }
  {
  var_constructorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("new"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2212)), var_constructorAttributeTypeList, GALGAS_bool (false), var_structTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2211)) ;
  }
  GALGAS_readerMap var_readerMap ;
  {
  routine_commonReaderMapForAllTypes (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2219)) ;
  }
  cEnumerator_typedAttributeList enumerator_88453 (var_typedAttributeList, kEnumeration_up) ;
  while (enumerator_88453.hasCurrentObject ()) {
    {
    routine_enterBaseFinalReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_88453.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2226)), enumerator_88453.current_mAttributeTypeProxy (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2227)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2223)) ;
    }
    enumerator_88453.gotoNextObject () ;
  }
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2233)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2235)) ;
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mStructTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2237)) ;
  }
  GALGAS_unifiedTypeMapProxy var_enumeratedType ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mEnumeratedElementTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_enumeratedType = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2250)) ;
  }else if (kBoolFalse == test_0) {
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mEnumeratedElementTypeName, var_enumeratedType COMMA_SOURCE_FILE_AT_LINE (2252)) ;
    }
  }
  GALGAS_string var_defaultConstructorName = GALGAS_string ("default") ;
  cEnumerator_typedAttributeList enumerator_89635 (var_typedAttributeList, kEnumeration_up) ;
  bool bool_1 = GALGAS_bool (kIsNotEqual, var_defaultConstructorName.objectCompare (GALGAS_string::makeEmptyString ())).isValidAndTrue () ;
  if (enumerator_89635.hasCurrentObject () && bool_1) {
    while (enumerator_89635.hasCurrentObject () && bool_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, enumerator_89635.current_mAttributeTypeProxy (HERE).reader_mDefaultConstructorName (inCompiler COMMA_SOURCE_FILE_AT_LINE (2261)).objectCompare (GALGAS_string::makeEmptyString ())).operator_or (enumerator_89635.current_mAttributeTypeProxy (HERE).reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (2261)).operator_not (SOURCE_FILE_AT_LINE (2261)) COMMA_SOURCE_FILE_AT_LINE (2261)).boolEnum () ;
      if (kBoolTrue == test_2) {
        var_defaultConstructorName = GALGAS_string::makeEmptyString () ;
      }
      enumerator_89635.gotoNextObject () ;
      if (enumerator_89635.hasCurrentObject ()) {
        bool_1 = GALGAS_bool (kIsNotEqual, var_defaultConstructorName.objectCompare (GALGAS_string::makeEmptyString ())).isValidAndTrue () ;
      }
    }
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mStructTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2269)), GALGAS_typeKindEnum::constructor_structType (SOURCE_FILE_AT_LINE (2270)), var_typedAttributeList, var_attributeMap, var_typedAttributeList, var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2278)), GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (2279)), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2280)), function_generateDescriptionReaderUtilityMethod (inCompiler COMMA_SOURCE_FILE_AT_LINE (2281)), GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (2282)), GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (2283)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2284)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2285)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2286)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2287)), GALGAS_bool (false), var_enumeratedType, var_defaultConstructorName, inCompiler COMMA_SOURCE_FILE_AT_LINE (2266)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_structDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_structDeclarationAST.mSlotID,
                                              categoryMethod_structDeclarationAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_structDeclarationAST_enterInSemanticContext (defineCategoryMethod_structDeclarationAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@classDeclarationAST enterInSemanticContext'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_classDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                       const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                       const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                       const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                       GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_classDeclarationAST * object = (const cPtr_classDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_classDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_uintType ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("uint"), var_uintType COMMA_SOURCE_FILE_AT_LINE (2303)) ;
  }
  GALGAS_readerMap var_readerMap ;
  GALGAS_modifierMap var_modifierMap ;
  GALGAS_instanceMethodMap var_instanceMethodMap ;
  GALGAS_typedAttributeList var_inheritedTypedAttributeList ;
  GALGAS_attributeMap var_attributeMap = GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2309)) ;
  GALGAS_unifiedTypeMapProxy var_superClassIndex ;
  GALGAS_bool var_generateHeaderInSeparateFile ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE_AT_LINE (2313)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_superClassIndex = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2314)) ;
    {
    routine_commonReaderMapForAllTypes (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2315)) ;
    }
    var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2316)) ;
    var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2317)) ;
    var_inheritedTypedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2318)) ;
    var_attributeMap = GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2319)) ;
    var_generateHeaderInSeparateFile = GALGAS_bool (false) ;
    cEnumerator_lstringlist enumerator_92029 (object->mAttribute_mClassFeatureList, kEnumeration_up) ;
    while (enumerator_92029.hasCurrentObject ()) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_92029.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2322)).objectCompare (GALGAS_string ("generatedInSeparateFile"))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_generateHeaderInSeparateFile = GALGAS_bool (true) ;
      }
      enumerator_92029.gotoNextObject () ;
    }
  }else if (kBoolFalse == test_0) {
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE_AT_LINE (2327)), var_superClassIndex COMMA_SOURCE_FILE_AT_LINE (2327)) ;
    }
    GALGAS_typeKindEnum var_typeKindEnum ;
    GALGAS_readerMap var_inheritedReaderMap ;
    GALGAS_modifierMap var_inheritedModifierMap ;
    GALGAS_instanceMethodMap var_inheritedMethodMap ;
    GALGAS_bool joker_92522_2 ; // Joker input parameter
    GALGAS_unifiedTypeMapProxy joker_92522_1 ; // Joker input parameter
    GALGAS_typedAttributeList joker_92607_2 ; // Joker input parameter
    GALGAS_constructorMap joker_92607_1 ; // Joker input parameter
    GALGAS_classMethodMap joker_92698_10 ; // Joker input parameter
    GALGAS_enumerationDescriptorList joker_92698_9 ; // Joker input parameter
    GALGAS_stringlist joker_92698_8 ; // Joker input parameter
    GALGAS_uint joker_92698_7 ; // Joker input parameter
    GALGAS_unifiedTypeMapProxyList joker_92698_6 ; // Joker input parameter
    GALGAS_stringset joker_92698_5 ; // Joker input parameter
    GALGAS_lstringlist joker_92698_4 ; // Joker input parameter
    GALGAS_mapSearchMethodListAST joker_92698_3 ; // Joker input parameter
    GALGAS_mapSearchMethodListAST joker_92698_2 ; // Joker input parameter
    GALGAS_withAccessorMap joker_92698_1 ; // Joker input parameter
    GALGAS_unifiedTypeMapProxy joker_92744_2 ; // Joker input parameter
    GALGAS_string joker_92744_1 ; // Joker input parameter
    ioArgument_ioSemanticContext.mAttribute_mTypeMap.method_searchKey (object->mAttribute_mSuperClassName, joker_92522_2, joker_92522_1, var_typeKindEnum, var_inheritedTypedAttributeList, var_attributeMap, joker_92607_2, joker_92607_1, var_inheritedReaderMap, var_inheritedModifierMap, var_inheritedMethodMap, joker_92698_10, joker_92698_9, joker_92698_8, joker_92698_7, joker_92698_6, joker_92698_5, joker_92698_4, joker_92698_3, joker_92698_2, joker_92698_1, var_generateHeaderInSeparateFile, joker_92744_2, joker_92744_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (2332)) ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, var_typeKindEnum.objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (2347)))).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mSuperClassName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the @").operator_concat (object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE_AT_LINE (2348)) COMMA_SOURCE_FILE_AT_LINE (2348)).operator_concat (GALGAS_string (" should be a class type") COMMA_SOURCE_FILE_AT_LINE (2348)) COMMA_SOURCE_FILE_AT_LINE (2348)) ;
    }
    var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2351)) ;
    cEnumerator_modifierMap enumerator_93033 (var_inheritedModifierMap, kEnumeration_up) ;
    while (enumerator_93033.hasCurrentObject ()) {
      {
      var_modifierMap.modifier_insertKey (enumerator_93033.current_lkey (HERE), enumerator_93033.current_mKind (HERE), enumerator_93033.current_mParameterList (HERE), enumerator_93033.current_mHasCompilerArgument (HERE), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (2358)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2353)) ;
      }
      enumerator_93033.gotoNextObject () ;
    }
    var_readerMap = GALGAS_readerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2363)) ;
    cEnumerator_readerMap enumerator_93359 (var_inheritedReaderMap, kEnumeration_up) ;
    while (enumerator_93359.hasCurrentObject ()) {
      {
      var_readerMap.modifier_insertKey (enumerator_93359.current_lkey (HERE), enumerator_93359.current_mKind (HERE), enumerator_93359.current_mArgumentTypeList (HERE), enumerator_93359.current_mDeclarationLocation (HERE), enumerator_93359.current_mHasCompilerArgument (HERE), enumerator_93359.current_mReturnedType (HERE), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (2372)), enumerator_93359.current_mErrorMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2365)) ;
      }
      enumerator_93359.gotoNextObject () ;
    }
    var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2377)) ;
    cEnumerator_instanceMethodMap enumerator_93747 (var_inheritedMethodMap, kEnumeration_up) ;
    while (enumerator_93747.hasCurrentObject ()) {
      {
      var_instanceMethodMap.modifier_insertKey (enumerator_93747.current_lkey (HERE), enumerator_93747.current_mKind (HERE), enumerator_93747.current_mParameterList (HERE), enumerator_93747.current_mDeclarationLocation (HERE), enumerator_93747.current_mHasCompilerArgument (HERE), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (2385)), enumerator_93747.current_mErrorMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2379)) ;
      }
      enumerator_93747.gotoNextObject () ;
    }
  }
  GALGAS_unifiedTypeMapProxyList var_constructorAttributeTypeList = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (2391)) ;
  cEnumerator_typedAttributeList enumerator_94166 (var_inheritedTypedAttributeList, kEnumeration_up) ;
  while (enumerator_94166.hasCurrentObject ()) {
    var_constructorAttributeTypeList.addAssign_operation (enumerator_94166.current_mAttributeTypeProxy (HERE) COMMA_SOURCE_FILE_AT_LINE (2393)) ;
    enumerator_94166.gotoNextObject () ;
  }
  cEnumerator_attributeInCollectionListAST enumerator_94269 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_94269.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_94269.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2397)), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (2397)) ;
    }
    var_constructorAttributeTypeList.addAssign_operation (var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (2398)) ;
    {
    var_attributeMap.modifier_insertKey (enumerator_94269.current_mAttributeName (HERE), var_attributeTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2399)) ;
    }
    const enumGalgasBool test_4 = var_readerMap.reader_hasKey (enumerator_94269.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2400)) COMMA_SOURCE_FILE_AT_LINE (2400)).boolEnum () ;
    if (kBoolTrue == test_4) {
      GALGAS_location location_5 (enumerator_94269.current_mAttributeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_5, GALGAS_string ("'").operator_concat (enumerator_94269.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2401)) COMMA_SOURCE_FILE_AT_LINE (2401)).operator_concat (GALGAS_string ("' is the name of a prefefined or a user defined reader") COMMA_SOURCE_FILE_AT_LINE (2401)) COMMA_SOURCE_FILE_AT_LINE (2401)) ;
    }
    enumerator_94269.gotoNextObject () ;
  }
  GALGAS_unifiedTypeMapProxy var_classIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mClassTypeName.reader_string (SOURCE_FILE_AT_LINE (2407)), var_classIndex COMMA_SOURCE_FILE_AT_LINE (2405)) ;
  }
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2411)) ;
  const enumGalgasBool test_6 = object->mAttribute_mIsAbstract.operator_not (SOURCE_FILE_AT_LINE (2412)).boolEnum () ;
  if (kBoolTrue == test_6) {
    {
    var_constructorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("new"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2414)), var_constructorAttributeTypeList, GALGAS_bool (false), var_classIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2413)) ;
    }
  }
  GALGAS_typedAttributeList var_currentClassTypedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2421)) ;
  GALGAS_typedAttributeList var_allTypedAttributeList = var_inheritedTypedAttributeList ;
  cEnumerator_attributeInCollectionListAST enumerator_95377 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_95377.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_95377.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2425)), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (2425)) ;
    }
    GALGAS_bool var_hasSetter = GALGAS_bool (false) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    cEnumerator_lstringlist enumerator_95637 (enumerator_95377.current_mFeatureList (HERE), kEnumeration_up) ;
    while (enumerator_95637.hasCurrentObject ()) {
      const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, enumerator_95637.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2429)).objectCompare (GALGAS_string ("setter"))).boolEnum () ;
      if (kBoolTrue == test_7) {
        var_hasSetter = GALGAS_bool (true) ;
      }else if (kBoolFalse == test_7) {
        const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, enumerator_95637.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2431)).objectCompare (GALGAS_string ("nogetter"))).boolEnum () ;
        if (kBoolTrue == test_8) {
          var_hasGetter = GALGAS_bool (false) ;
        }
      }
      enumerator_95637.gotoNextObject () ;
    }
    var_currentClassTypedAttributeList.addAssign_operation (var_attributeTypeIndex, enumerator_95377.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (2435)) ;
    var_allTypedAttributeList.addAssign_operation (var_attributeTypeIndex, enumerator_95377.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (2436)) ;
    const enumGalgasBool test_9 = var_hasGetter.boolEnum () ;
    if (kBoolTrue == test_9) {
      {
      var_readerMap.modifier_insertKey (enumerator_95377.current_mAttributeName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2440)), GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (2441)), inCompiler->here (), GALGAS_bool (false), var_attributeTypeIndex, GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2445)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2438)) ;
      }
    }
    enumerator_95377.gotoNextObject () ;
  }
  cEnumerator_typedAttributeList enumerator_96693 (var_currentClassTypedAttributeList, kEnumeration_up) ;
  while (enumerator_96693.hasCurrentObject ()) {
    const enumGalgasBool test_10 = enumerator_96693.current_mHasSetter (HERE).boolEnum () ;
    if (kBoolTrue == test_10) {
      {
      var_modifierMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("set").operator_concat (enumerator_96693.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2460)).reader_stringByCapitalizingFirstCharacter (SOURCE_FILE_AT_LINE (2460)) COMMA_SOURCE_FILE_AT_LINE (2460)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2460)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2461)), GALGAS_formalParameterSignature::constructor_listWithValue (enumerator_96693.current_mAttributeTypeProxy (HERE), GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (2462)) COMMA_SOURCE_FILE_AT_LINE (2462)), GALGAS_bool (false), GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2464)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2459)) ;
      }
    }
    enumerator_96693.gotoNextObject () ;
  }
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mClassTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2470)) ;
  }
  GALGAS_string var_defaultConstructorName ;
  const enumGalgasBool test_11 = var_superClassIndex.reader_isNull (SOURCE_FILE_AT_LINE (2482)).boolEnum () ;
  if (kBoolTrue == test_11) {
    var_defaultConstructorName = GALGAS_string ("default") ;
  }else if (kBoolFalse == test_11) {
    var_defaultConstructorName = var_superClassIndex.reader_mDefaultConstructorName (inCompiler COMMA_SOURCE_FILE_AT_LINE (2485)) ;
  }
  cEnumerator_typedAttributeList enumerator_97714 (var_currentClassTypedAttributeList, kEnumeration_up) ;
  bool bool_12 = GALGAS_bool (kIsNotEqual, var_defaultConstructorName.objectCompare (GALGAS_string::makeEmptyString ())).isValidAndTrue () ;
  if (enumerator_97714.hasCurrentObject () && bool_12) {
    while (enumerator_97714.hasCurrentObject () && bool_12) {
      const enumGalgasBool test_13 = GALGAS_bool (kIsEqual, enumerator_97714.current_mAttributeTypeProxy (HERE).reader_mDefaultConstructorName (inCompiler COMMA_SOURCE_FILE_AT_LINE (2488)).objectCompare (GALGAS_string::makeEmptyString ())).operator_or (enumerator_97714.current_mAttributeTypeProxy (HERE).reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (2488)).operator_not (SOURCE_FILE_AT_LINE (2488)) COMMA_SOURCE_FILE_AT_LINE (2488)).boolEnum () ;
      if (kBoolTrue == test_13) {
        var_defaultConstructorName = GALGAS_string::makeEmptyString () ;
      }
      enumerator_97714.gotoNextObject () ;
      if (enumerator_97714.hasCurrentObject ()) {
        bool_12 = GALGAS_bool (kIsNotEqual, var_defaultConstructorName.objectCompare (GALGAS_string::makeEmptyString ())).isValidAndTrue () ;
      }
    }
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mClassTypeName, object->mAttribute_mIsAbstract.operator_not (SOURCE_FILE_AT_LINE (2495)), var_superClassIndex, GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (2497)), var_allTypedAttributeList, var_attributeMap, var_currentClassTypedAttributeList, var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2505)), GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (2506)), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2507)), GALGAS_uint ((PMUInt32) 0U), GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (2509)), GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (2510)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2511)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2512)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2513)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2514)), var_generateHeaderInSeparateFile, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2516)), var_defaultConstructorName, inCompiler COMMA_SOURCE_FILE_AT_LINE (2493)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_classDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_classDeclarationAST.mSlotID,
                                              categoryMethod_classDeclarationAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_classDeclarationAST_enterInSemanticContext (defineCategoryMethod_classDeclarationAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@externRoutineDeclarationAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_externRoutineDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                               const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                               const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                               const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                               GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externRoutineDeclarationAST * object = (const cPtr_externRoutineDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_externRoutineDeclarationAST) ;
  GALGAS_formalParameterSignature var_routineSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (2530)) ;
  cEnumerator_formalParameterListAST enumerator_99362 (object->mAttribute_mFormalArgumentList, kEnumeration_up) ;
  while (enumerator_99362.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_parameterTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_99362.current_mFormalArgumentTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2533)), var_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (2533)) ;
    }
    var_routineSignature.addAssign_operation (var_parameterTypeIndex, enumerator_99362.current_mFormalArgumentPassingMode (HERE) COMMA_SOURCE_FILE_AT_LINE (2534)) ;
    enumerator_99362.gotoNextObject () ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mRoutineMap.modifier_insertKey (object->mAttribute_mRoutineName, var_routineSignature, inCompiler COMMA_SOURCE_FILE_AT_LINE (2537)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_externRoutineDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_externRoutineDeclarationAST.mSlotID,
                                              categoryMethod_externRoutineDeclarationAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externRoutineDeclarationAST_enterInSemanticContext (defineCategoryMethod_externRoutineDeclarationAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@externFunctionDeclarationAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_externFunctionDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                                const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                                const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                                const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                                GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externFunctionDeclarationAST * object = (const cPtr_externFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_externFunctionDeclarationAST) ;
  GALGAS_unifiedTypeMapProxyList var_functionSignature = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (2549)) ;
  cEnumerator_formalInputParameterListAST enumerator_100357 (object->mAttribute_mFormalArgumentList, kEnumeration_up) ;
  while (enumerator_100357.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_parameterTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_100357.current_mFormalArgumentTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2552)), var_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (2552)) ;
    }
    var_functionSignature.addAssign_operation (var_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (2553)) ;
    enumerator_100357.gotoNextObject () ;
  }
  GALGAS_unifiedTypeMapProxy var_resultTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mResultTypeName.reader_string (SOURCE_FILE_AT_LINE (2557)), var_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (2557)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mFunctionMap.modifier_insertKey (object->mAttribute_mFunctionName, var_functionSignature, var_resultTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2559)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_externFunctionDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_externFunctionDeclarationAST.mSlotID,
                                              categoryMethod_externFunctionDeclarationAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externFunctionDeclarationAST_enterInSemanticContext (defineCategoryMethod_externFunctionDeclarationAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@onceFunctionDeclarationAST enterInSemanticContext'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_onceFunctionDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                              const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                              const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                              const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                              GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_onceFunctionDeclarationAST * object = (const cPtr_onceFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_onceFunctionDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_resultTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mResultTypeName.reader_string (SOURCE_FILE_AT_LINE (2572)), var_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (2572)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mFunctionMap.modifier_insertKey (object->mAttribute_mFunctionName, GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (2574)), var_resultTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2574)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_onceFunctionDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_onceFunctionDeclarationAST.mSlotID,
                                              categoryMethod_onceFunctionDeclarationAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_onceFunctionDeclarationAST_enterInSemanticContext (defineCategoryMethod_onceFunctionDeclarationAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@arrayDeclarationAST enterInSemanticContext'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_arrayDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                       const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                       const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                       const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                       GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_arrayDeclarationAST * object = (const cPtr_arrayDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_arrayDeclarationAST) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2586)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mDimension.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the dimension of an array should be > 0") COMMA_SOURCE_FILE_AT_LINE (2587)) ;
  }
  GALGAS_unifiedTypeMapProxy var_arrayTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mArrayTypeName.reader_string (SOURCE_FILE_AT_LINE (2591)), var_arrayTypeIndex COMMA_SOURCE_FILE_AT_LINE (2591)) ;
  }
  GALGAS_unifiedTypeMapProxy var_elementTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mElementTypeName.reader_string (SOURCE_FILE_AT_LINE (2594)), var_elementTypeIndex COMMA_SOURCE_FILE_AT_LINE (2594)) ;
  }
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2596)) ;
  GALGAS_readerMap var_readerMap = GALGAS_readerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2597)) ;
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2598)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2599)) ;
  GALGAS_unifiedTypeMapProxy var_boolType ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("bool"), var_boolType COMMA_SOURCE_FILE_AT_LINE (2602)) ;
  }
  GALGAS_unifiedTypeMapProxy var_uintType ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("uint"), var_uintType COMMA_SOURCE_FILE_AT_LINE (2605)) ;
  }
  GALGAS_unifiedTypeMapProxyList var_uintArgs = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (2607)) ;
  GALGAS_uint var_idx = GALGAS_uint ((PMUInt32) 0U) ;
  if (object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2609)).isValid ()) {
    PMUInt32 variant_103147 = object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2609)).uintValue () ;
    bool loop_103147 = true ;
    while (loop_103147) {
      loop_103147 = GALGAS_bool (kIsStrictInf, var_idx.objectCompare (object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2609)))).isValid () ;
      if (loop_103147) {
        loop_103147 = GALGAS_bool (kIsStrictInf, var_idx.objectCompare (object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2609)))).boolValue () ;
      }
      if (loop_103147 && (0 == variant_103147)) {
        loop_103147 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (2609)) ;
      }
      if (loop_103147) {
        variant_103147 -- ;
        var_uintArgs.addAssign_operation (var_uintType COMMA_SOURCE_FILE_AT_LINE (2610)) ;
        var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (2611)) ;
      }
    }
  }
  {
  var_constructorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("new"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2615)), var_uintArgs, GALGAS_bool (false), var_arrayTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2614)) ;
  }
  {
  routine_enterBaseReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("axisCount"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2621)) ;
  }
  {
  routine_enterBaseReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("sizeForAxis"), GALGAS_string ("uint"), GALGAS_string ("uint"), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (2622)) ;
  }
  {
  routine_enterBaseReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("rangeForAxis"), GALGAS_string ("uint"), GALGAS_string ("range"), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (2623)) ;
  }
  {
  var_readerMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("isValueValidAtIndex"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2625)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2626)), var_uintArgs, inCompiler->here (), GALGAS_bool (true), var_boolType, GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2631)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (2624)) ;
  }
  {
  var_readerMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("valueAtIndex"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2635)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2636)), var_uintArgs, inCompiler->here (), GALGAS_bool (true), var_elementTypeIndex, GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2641)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (2634)) ;
  }
  GALGAS_formalParameterSignature var_modifierFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (2645)) ;
  var_modifierFormalArgumentList.addAssign_operation (var_elementTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (2646)) COMMA_SOURCE_FILE_AT_LINE (2646)) ;
  var_idx = GALGAS_uint ((PMUInt32) 0U) ;
  if (object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2648)).isValid ()) {
    PMUInt32 variant_104400 = object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2648)).uintValue () ;
    bool loop_104400 = true ;
    while (loop_104400) {
      loop_104400 = GALGAS_bool (kIsStrictInf, var_idx.objectCompare (object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2648)))).isValid () ;
      if (loop_104400) {
        loop_104400 = GALGAS_bool (kIsStrictInf, var_idx.objectCompare (object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2648)))).boolValue () ;
      }
      if (loop_104400 && (0 == variant_104400)) {
        loop_104400 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (2648)) ;
      }
      if (loop_104400) {
        variant_104400 -- ;
        var_modifierFormalArgumentList.addAssign_operation (var_uintType, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (2649)) COMMA_SOURCE_FILE_AT_LINE (2649)) ;
        var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (2650)) ;
      }
    }
  }
  {
  var_modifierMap.modifier_insertKey (GALGAS_string ("setValueAtIndex").reader_nowhere (SOURCE_FILE_AT_LINE (2653)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2654)), var_modifierFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2657)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2652)) ;
  }
  {
  var_modifierMap.modifier_insertKey (GALGAS_string ("forceValueAtIndex").reader_nowhere (SOURCE_FILE_AT_LINE (2661)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2662)), var_modifierFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2665)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2660)) ;
  }
  {
  GALGAS_unifiedTypeMapProxy joker_104995_0 ; // Joker input parameter
  GALGAS_formalArgumentPassingModeAST joker_104998_0 ; // Joker input parameter
  var_modifierFormalArgumentList.modifier_popFirst (joker_104995_0, joker_104998_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2668)) ;
  }
  {
  var_modifierMap.modifier_insertKey (GALGAS_string ("invalidateValueAtIndex").reader_nowhere (SOURCE_FILE_AT_LINE (2670)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2671)), var_modifierFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2674)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2669)) ;
  }
  {
  var_modifierMap.modifier_insertKey (GALGAS_string ("setSize").reader_nowhere (SOURCE_FILE_AT_LINE (2678)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2679)), var_modifierFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2682)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2677)) ;
  }
  var_modifierFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (2685)) ;
  var_modifierFormalArgumentList.addAssign_operation (var_uintType, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (2686)) COMMA_SOURCE_FILE_AT_LINE (2686)) ;
  var_modifierFormalArgumentList.addAssign_operation (var_uintType, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (2687)) COMMA_SOURCE_FILE_AT_LINE (2687)) ;
  {
  var_modifierMap.modifier_insertKey (GALGAS_string ("setSizeForAxis").reader_nowhere (SOURCE_FILE_AT_LINE (2689)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2690)), var_modifierFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2693)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2688)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mArrayTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2700)), GALGAS_typeKindEnum::constructor_listMapType (SOURCE_FILE_AT_LINE (2701)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2702)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2703)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2704)), var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2709)), GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (2710)), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2711)), GALGAS_uint ((PMUInt32) 0U), GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (2713)), GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (2714)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2715)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2716)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2717)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2718)), GALGAS_bool (false), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2720)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2697)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_arrayDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_arrayDeclarationAST.mSlotID,
                                              categoryMethod_arrayDeclarationAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_arrayDeclarationAST_enterInSemanticContext (defineCategoryMethod_arrayDeclarationAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@listmapDeclarationAST enterInSemanticContext' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_listmapDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                         const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                         const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                         const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                         GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listmapDeclarationAST * object = (const cPtr_listmapDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_listmapDeclarationAST) ;
  GALGAS_typeKindEnum var_typeKindEnum ;
  GALGAS_typedAttributeList var_listTypedAttributeList ;
  GALGAS_bool joker_107382_2 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_107382_1 ; // Joker input parameter
  GALGAS_attributeMap joker_107471_19 ; // Joker input parameter
  GALGAS_typedAttributeList joker_107471_18 ; // Joker input parameter
  GALGAS_constructorMap joker_107471_17 ; // Joker input parameter
  GALGAS_readerMap joker_107471_16 ; // Joker input parameter
  GALGAS_modifierMap joker_107471_15 ; // Joker input parameter
  GALGAS_instanceMethodMap joker_107471_14 ; // Joker input parameter
  GALGAS_classMethodMap joker_107471_13 ; // Joker input parameter
  GALGAS_enumerationDescriptorList joker_107471_12 ; // Joker input parameter
  GALGAS_stringlist joker_107471_11 ; // Joker input parameter
  GALGAS_uint joker_107471_10 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxyList joker_107471_9 ; // Joker input parameter
  GALGAS_stringset joker_107471_8 ; // Joker input parameter
  GALGAS_lstringlist joker_107471_7 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_107471_6 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_107471_5 ; // Joker input parameter
  GALGAS_withAccessorMap joker_107471_4 ; // Joker input parameter
  GALGAS_bool joker_107471_3 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_107471_2 ; // Joker input parameter
  GALGAS_string joker_107471_1 ; // Joker input parameter
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.method_searchKey (object->mAttribute_mAssociatedListTypeName, joker_107382_2, joker_107382_1, var_typeKindEnum, var_listTypedAttributeList, joker_107471_19, joker_107471_18, joker_107471_17, joker_107471_16, joker_107471_15, joker_107471_14, joker_107471_13, joker_107471_12, joker_107471_11, joker_107471_10, joker_107471_9, joker_107471_8, joker_107471_7, joker_107471_6, joker_107471_5, joker_107471_4, joker_107471_3, joker_107471_2, joker_107471_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (2735)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_typeKindEnum.objectCompare (GALGAS_typeKindEnum::constructor_listType (SOURCE_FILE_AT_LINE (2742)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAssociatedListTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the '@").operator_concat (object->mAttribute_mAssociatedListTypeName.reader_string (SOURCE_FILE_AT_LINE (2743)) COMMA_SOURCE_FILE_AT_LINE (2743)).operator_concat (GALGAS_string ("' type should be a list type") COMMA_SOURCE_FILE_AT_LINE (2743)) COMMA_SOURCE_FILE_AT_LINE (2743)) ;
    var_listTypedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2744)) ;
  }
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2747)) ;
  GALGAS_readerMap var_readerMap = GALGAS_readerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2748)) ;
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2749)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2750)) ;
  GALGAS_unifiedTypeMapProxy var_associatedListTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAssociatedListTypeName.reader_string (SOURCE_FILE_AT_LINE (2753)), var_associatedListTypeIndex COMMA_SOURCE_FILE_AT_LINE (2753)) ;
  }
  GALGAS_unifiedTypeMapProxy var_currentTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mListmapTypeName.reader_string (SOURCE_FILE_AT_LINE (2756)), var_currentTypeIndex COMMA_SOURCE_FILE_AT_LINE (2756)) ;
  }
  GALGAS_unifiedTypeMapProxy var_stringTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("string"), var_stringTypeIndex COMMA_SOURCE_FILE_AT_LINE (2759)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("count"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2761)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("allKeys"), GALGAS_string ("stringset"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2762)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("keyList"), GALGAS_string ("stringlist"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2763)) ;
  }
  {
  routine_enterBaseReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("listForKey"), GALGAS_string ("string"), object->mAttribute_mAssociatedListTypeName.reader_string (SOURCE_FILE_AT_LINE (2764)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2764)) ;
  }
  {
  routine_enterConstructorWithoutArgument (var_constructorMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("emptyMap"), object->mAttribute_mListmapTypeName.reader_string (SOURCE_FILE_AT_LINE (2766)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2766)) ;
  }
  GALGAS_enumerationDescriptorList var_enumeratorDescriptor = GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (2768)) ;
  var_enumeratorDescriptor.addAssign_operation (var_stringTypeIndex, GALGAS_string ("key") COMMA_SOURCE_FILE_AT_LINE (2769)) ;
  var_enumeratorDescriptor.addAssign_operation (var_associatedListTypeIndex, GALGAS_string ("mList") COMMA_SOURCE_FILE_AT_LINE (2770)) ;
  GALGAS_unifiedTypeMapProxyList var_addAssignOperatorDescription = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (2772)) ;
  var_addAssignOperatorDescription.addAssign_operation (var_stringTypeIndex COMMA_SOURCE_FILE_AT_LINE (2773)) ;
  cEnumerator_typedAttributeList enumerator_109495 (var_listTypedAttributeList, kEnumeration_up) ;
  while (enumerator_109495.hasCurrentObject ()) {
    var_addAssignOperatorDescription.addAssign_operation (enumerator_109495.current_mAttributeTypeProxy (HERE) COMMA_SOURCE_FILE_AT_LINE (2775)) ;
    enumerator_109495.gotoNextObject () ;
  }
  GALGAS_stringlist var_enumerationVariants = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2778)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("up") COMMA_SOURCE_FILE_AT_LINE (2779)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("down") COMMA_SOURCE_FILE_AT_LINE (2780)) ;
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mListmapTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2782)) ;
  }
  GALGAS_unifiedTypeMapProxy var_enumeratedTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeRegularProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mListmapTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE_AT_LINE (2794)) COMMA_SOURCE_FILE_AT_LINE (2794)), var_enumeratedTypeIndex COMMA_SOURCE_FILE_AT_LINE (2794)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mListmapTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2799)), GALGAS_typeKindEnum::constructor_listMapType (SOURCE_FILE_AT_LINE (2800)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2801)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2802)), var_listTypedAttributeList, var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2808)), var_enumeratorDescriptor, var_enumerationVariants, function_doNotGenererateObjectCompare (inCompiler COMMA_SOURCE_FILE_AT_LINE (2811)), var_addAssignOperatorDescription, GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (2813)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2814)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2815)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2816)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2817)), GALGAS_bool (false), var_enumeratedTypeIndex, GALGAS_string ("emptyMap"), inCompiler COMMA_SOURCE_FILE_AT_LINE (2796)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_listmapDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_listmapDeclarationAST.mSlotID,
                                              categoryMethod_listmapDeclarationAST_enterInSemanticContext) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listmapDeclarationAST_enterInSemanticContext (defineCategoryMethod_listmapDeclarationAST_enterInSemanticContext, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category method '@semanticDeclarationAST enterDeclarationInGraph' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_semanticDeclarationAST_enterDeclarationInGraph> gCategoryMethodTable_semanticDeclarationAST_enterDeclarationInGraph ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_enterDeclarationInGraph (const PMSInt32 inClassIndex,
                                                  categoryMethodSignature_semanticDeclarationAST_enterDeclarationInGraph inMethod) {
  gCategoryMethodTable_semanticDeclarationAST_enterDeclarationInGraph.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_semanticDeclarationAST_enterDeclarationInGraph (void) {
  gCategoryMethodTable_semanticDeclarationAST_enterDeclarationInGraph.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticDeclarationAST_enterDeclarationInGraph (NULL,
                                                                           freeCategoryMethod_semanticDeclarationAST_enterDeclarationInGraph) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                 GALGAS_semanticTypePrecedenceGraph & io_ioSemanticTypePrecedenceGraph,
                                                 GALGAS_categoryMethodMapForBuildingContext & io_ioCategoryMethodMapForBuildingContext,
                                                 GALGAS_categoryReaderMapForBuildingContext & io_ioCategoryReaderMapForBuildingContext,
                                                 GALGAS_categoryModifierMapForBuildingContext & io_ioCategoryModifierMapForBuildingContext,
                                                 GALGAS_semanticDeclarationListAST & io_ioCategoryOverrideDefinitionList,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_semanticDeclarationAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_semanticDeclarationAST_enterDeclarationInGraph f = NULL ;
    if (classIndex < gCategoryMethodTable_semanticDeclarationAST_enterDeclarationInGraph.count ()) {
      f = gCategoryMethodTable_semanticDeclarationAST_enterDeclarationInGraph (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_semanticDeclarationAST_enterDeclarationInGraph.count ()) {
           f = gCategoryMethodTable_semanticDeclarationAST_enterDeclarationInGraph (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_semanticDeclarationAST_enterDeclarationInGraph.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioSemanticTypePrecedenceGraph, io_ioCategoryMethodMapForBuildingContext, io_ioCategoryReaderMapForBuildingContext, io_ioCategoryModifierMapForBuildingContext, io_ioCategoryOverrideDefinitionList, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@predefinedTypeAST enterDeclarationInGraph'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_predefinedTypeAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                      GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                      GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                      GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                      GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                      GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_predefinedTypeAST * object = (const cPtr_predefinedTypeAST *) inObject ;
  macroValidSharedObject (object, const cPtr_predefinedTypeAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mPredefinedTypeName COMMA_SOURCE_FILE_AT_LINE (2853)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2853)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2854)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_predefinedTypeAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_predefinedTypeAST.mSlotID,
                                               categoryMethod_predefinedTypeAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_predefinedTypeAST_enterDeclarationInGraph (defineCategoryMethod_predefinedTypeAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@classDeclarationAST enterDeclarationInGraph' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_classDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                        GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                        GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                        GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                        GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                        GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_classDeclarationAST * object = (const cPtr_classDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_classDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mClassTypeName.reader_string (SOURCE_FILE_AT_LINE (2866)) COMMA_SOURCE_FILE_AT_LINE (2866)), object->mAttribute_mClassTypeName.reader_location (SOURCE_FILE_AT_LINE (2866)) COMMA_SOURCE_FILE_AT_LINE (2866)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_classDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2867)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, object->mAttribute_mSuperClassName.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    ioArgument_ioSemanticTypePrecedenceGraph.modifier_addArc (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE_AT_LINE (2869)) COMMA_SOURCE_FILE_AT_LINE (2869)), object->mAttribute_mSuperClassName.reader_location (SOURCE_FILE_AT_LINE (2869)) COMMA_SOURCE_FILE_AT_LINE (2869)) COMMA_SOURCE_FILE_AT_LINE (2869)) ;
    }
  }
  cEnumerator_attributeInCollectionListAST enumerator_113674 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_113674.hasCurrentObject ()) {
    {
    ioArgument_ioSemanticTypePrecedenceGraph.modifier_addArc (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (enumerator_113674.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2872)) COMMA_SOURCE_FILE_AT_LINE (2872)), enumerator_113674.current_mAttributeTypeName (HERE).reader_location (SOURCE_FILE_AT_LINE (2872)) COMMA_SOURCE_FILE_AT_LINE (2872)) COMMA_SOURCE_FILE_AT_LINE (2872)) ;
    }
    enumerator_113674.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_classDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_classDeclarationAST.mSlotID,
                                               categoryMethod_classDeclarationAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_classDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_classDeclarationAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@listDeclarationAST enterDeclarationInGraph'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_listDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                       GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                       GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                       GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                       GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                       GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listDeclarationAST * object = (const cPtr_listDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_listDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mListTypeName.reader_string (SOURCE_FILE_AT_LINE (2886)) COMMA_SOURCE_FILE_AT_LINE (2886)), object->mAttribute_mListTypeName.reader_location (SOURCE_FILE_AT_LINE (2886)) COMMA_SOURCE_FILE_AT_LINE (2886)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_listDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2887)) ;
  }
  cEnumerator_attributeInCollectionListAST enumerator_114655 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_114655.hasCurrentObject ()) {
    {
    ioArgument_ioSemanticTypePrecedenceGraph.modifier_noteNode (GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (enumerator_114655.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2889)) COMMA_SOURCE_FILE_AT_LINE (2889)), enumerator_114655.current_mAttributeTypeName (HERE).reader_location (SOURCE_FILE_AT_LINE (2889)) COMMA_SOURCE_FILE_AT_LINE (2889)) COMMA_SOURCE_FILE_AT_LINE (2889)) ;
    }
    enumerator_114655.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_listDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_listDeclarationAST.mSlotID,
                                               categoryMethod_listDeclarationAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_listDeclarationAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@structDeclarationAST enterDeclarationInGraph' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_structDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                         GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                         GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                         GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                         GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                         GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_structDeclarationAST * object = (const cPtr_structDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_structDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mStructTypeName.reader_string (SOURCE_FILE_AT_LINE (2902)) COMMA_SOURCE_FILE_AT_LINE (2902)), object->mAttribute_mStructTypeName.reader_location (SOURCE_FILE_AT_LINE (2902)) COMMA_SOURCE_FILE_AT_LINE (2902)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_structDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2903)) ;
  }
  cEnumerator_attributeInCollectionListAST enumerator_115516 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_115516.hasCurrentObject ()) {
    {
    ioArgument_ioSemanticTypePrecedenceGraph.modifier_addArc (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (enumerator_115516.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2905)) COMMA_SOURCE_FILE_AT_LINE (2905)), enumerator_115516.current_mAttributeTypeName (HERE).reader_location (SOURCE_FILE_AT_LINE (2905)) COMMA_SOURCE_FILE_AT_LINE (2905)) COMMA_SOURCE_FILE_AT_LINE (2905)) ;
    }
    enumerator_115516.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_structDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_structDeclarationAST.mSlotID,
                                               categoryMethod_structDeclarationAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_structDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_structDeclarationAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@enumDeclarationAST enterDeclarationInGraph'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_enumDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                       GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                       GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                       GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                       GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                       GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_enumDeclarationAST * object = (const cPtr_enumDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_enumDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mEnumTypeName.reader_string (SOURCE_FILE_AT_LINE (2918)) COMMA_SOURCE_FILE_AT_LINE (2918)), object->mAttribute_mEnumTypeName.reader_location (SOURCE_FILE_AT_LINE (2918)) COMMA_SOURCE_FILE_AT_LINE (2918)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_enumDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2919)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_enumDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_enumDeclarationAST.mSlotID,
                                               categoryMethod_enumDeclarationAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_enumDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_enumDeclarationAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@sortedListDeclarationAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_sortedListDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                             GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                             GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                             GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                             GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                             GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_sortedListDeclarationAST * object = (const cPtr_sortedListDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_sortedListDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mSortedListTypeName.reader_string (SOURCE_FILE_AT_LINE (2931)) COMMA_SOURCE_FILE_AT_LINE (2931)), object->mAttribute_mSortedListTypeName.reader_location (SOURCE_FILE_AT_LINE (2931)) COMMA_SOURCE_FILE_AT_LINE (2931)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_sortedListDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2932)) ;
  }
  cEnumerator_attributeInCollectionListAST enumerator_117081 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_117081.hasCurrentObject ()) {
    {
    ioArgument_ioSemanticTypePrecedenceGraph.modifier_noteNode (GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (enumerator_117081.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2934)) COMMA_SOURCE_FILE_AT_LINE (2934)), enumerator_117081.current_mAttributeTypeName (HERE).reader_location (SOURCE_FILE_AT_LINE (2934)) COMMA_SOURCE_FILE_AT_LINE (2934)) COMMA_SOURCE_FILE_AT_LINE (2934)) ;
    }
    enumerator_117081.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_sortedListDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_sortedListDeclarationAST.mSlotID,
                                               categoryMethod_sortedListDeclarationAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_sortedListDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_sortedListDeclarationAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@arrayDeclarationAST enterDeclarationInGraph' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_arrayDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                        GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                        GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                        GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                        GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                        GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_arrayDeclarationAST * object = (const cPtr_arrayDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_arrayDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mArrayTypeName.reader_string (SOURCE_FILE_AT_LINE (2947)) COMMA_SOURCE_FILE_AT_LINE (2947)), object->mAttribute_mArrayTypeName.reader_location (SOURCE_FILE_AT_LINE (2947)) COMMA_SOURCE_FILE_AT_LINE (2947)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_arrayDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2948)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addArc (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mElementTypeName.reader_string (SOURCE_FILE_AT_LINE (2949)) COMMA_SOURCE_FILE_AT_LINE (2949)), object->mAttribute_mElementTypeName.reader_location (SOURCE_FILE_AT_LINE (2949)) COMMA_SOURCE_FILE_AT_LINE (2949)) COMMA_SOURCE_FILE_AT_LINE (2949)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_arrayDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_arrayDeclarationAST.mSlotID,
                                               categoryMethod_arrayDeclarationAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_arrayDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_arrayDeclarationAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@listmapDeclarationAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_listmapDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                          GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                          GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                          GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                          GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                          GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listmapDeclarationAST * object = (const cPtr_listmapDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_listmapDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mListmapTypeName.reader_string (SOURCE_FILE_AT_LINE (2961)) COMMA_SOURCE_FILE_AT_LINE (2961)), object->mAttribute_mListmapTypeName.reader_location (SOURCE_FILE_AT_LINE (2961)) COMMA_SOURCE_FILE_AT_LINE (2961)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_listmapDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2962)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addArc (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mAssociatedListTypeName.reader_string (SOURCE_FILE_AT_LINE (2963)) COMMA_SOURCE_FILE_AT_LINE (2963)), object->mAttribute_mAssociatedListTypeName.reader_location (SOURCE_FILE_AT_LINE (2963)) COMMA_SOURCE_FILE_AT_LINE (2963)) COMMA_SOURCE_FILE_AT_LINE (2963)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_listmapDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_listmapDeclarationAST.mSlotID,
                                               categoryMethod_listmapDeclarationAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listmapDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_listmapDeclarationAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@mapDeclarationAST enterDeclarationInGraph'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_mapDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                      GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                      GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                      GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                      GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                      GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_mapDeclarationAST * object = (const cPtr_mapDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_mapDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (2975)) COMMA_SOURCE_FILE_AT_LINE (2975)), object->mAttribute_mMapTypeName.reader_location (SOURCE_FILE_AT_LINE (2975)) COMMA_SOURCE_FILE_AT_LINE (2975)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_mapDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2976)) ;
  }
  cEnumerator_attributeInCollectionListAST enumerator_119575 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_119575.hasCurrentObject ()) {
    {
    ioArgument_ioSemanticTypePrecedenceGraph.modifier_noteNode (GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (enumerator_119575.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2978)) COMMA_SOURCE_FILE_AT_LINE (2978)), enumerator_119575.current_mAttributeTypeName (HERE).reader_location (SOURCE_FILE_AT_LINE (2978)) COMMA_SOURCE_FILE_AT_LINE (2978)) COMMA_SOURCE_FILE_AT_LINE (2978)) ;
    }
    enumerator_119575.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_mapDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_mapDeclarationAST.mSlotID,
                                               categoryMethod_mapDeclarationAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_mapDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_mapDeclarationAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@uniqueMapDeclarationAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_uniqueMapDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                            GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                            GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                            GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                            GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                            GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_uniqueMapDeclarationAST * object = (const cPtr_uniqueMapDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_uniqueMapDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (2991)) COMMA_SOURCE_FILE_AT_LINE (2991)), object->mAttribute_mMapTypeName.reader_location (SOURCE_FILE_AT_LINE (2991)) COMMA_SOURCE_FILE_AT_LINE (2991)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_uniqueMapDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2992)) ;
  }
  cEnumerator_attributeInCollectionListAST enumerator_120433 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_120433.hasCurrentObject ()) {
    {
    ioArgument_ioSemanticTypePrecedenceGraph.modifier_noteNode (GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (enumerator_120433.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2994)) COMMA_SOURCE_FILE_AT_LINE (2994)), enumerator_120433.current_mAttributeTypeName (HERE).reader_location (SOURCE_FILE_AT_LINE (2994)) COMMA_SOURCE_FILE_AT_LINE (2994)) COMMA_SOURCE_FILE_AT_LINE (2994)) ;
    }
    enumerator_120433.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_uniqueMapDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_uniqueMapDeclarationAST.mSlotID,
                                               categoryMethod_uniqueMapDeclarationAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_uniqueMapDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_uniqueMapDeclarationAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@mapProxyDeclarationAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_mapProxyDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                           GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                           GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                           GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                           GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                           GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_mapProxyDeclarationAST * object = (const cPtr_mapProxyDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_mapProxyDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mMapProxyTypeName.reader_string (SOURCE_FILE_AT_LINE (3007)) COMMA_SOURCE_FILE_AT_LINE (3007)), object->mAttribute_mMapProxyTypeName.reader_location (SOURCE_FILE_AT_LINE (3007)) COMMA_SOURCE_FILE_AT_LINE (3007)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_mapProxyDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3008)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addArc (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mAssociatedMapTypeName.reader_string (SOURCE_FILE_AT_LINE (3009)) COMMA_SOURCE_FILE_AT_LINE (3009)), object->mAttribute_mAssociatedMapTypeName.reader_location (SOURCE_FILE_AT_LINE (3009)) COMMA_SOURCE_FILE_AT_LINE (3009)) COMMA_SOURCE_FILE_AT_LINE (3009)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_mapProxyDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_mapProxyDeclarationAST.mSlotID,
                                               categoryMethod_mapProxyDeclarationAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_mapProxyDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_mapProxyDeclarationAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@graphDeclarationAST enterDeclarationInGraph' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_graphDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                        GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                        GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                        GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                        GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                        GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_graphDeclarationAST * object = (const cPtr_graphDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_graphDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mGraphTypeName.reader_string (SOURCE_FILE_AT_LINE (3021)) COMMA_SOURCE_FILE_AT_LINE (3021)), object->mAttribute_mGraphTypeName.reader_location (SOURCE_FILE_AT_LINE (3021)) COMMA_SOURCE_FILE_AT_LINE (3021)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_graphDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3022)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addArc (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mAssociatedListTypeName.reader_string (SOURCE_FILE_AT_LINE (3023)) COMMA_SOURCE_FILE_AT_LINE (3023)), object->mAttribute_mAssociatedListTypeName.reader_location (SOURCE_FILE_AT_LINE (3023)) COMMA_SOURCE_FILE_AT_LINE (3023)) COMMA_SOURCE_FILE_AT_LINE (3023)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_graphDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_graphDeclarationAST.mSlotID,
                                               categoryMethod_graphDeclarationAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_graphDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_graphDeclarationAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@externTypeDeclarationAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_externTypeDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                             GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                             GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                             GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                             GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                             GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externTypeDeclarationAST * object = (const cPtr_externTypeDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_externTypeDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mExternTypeName.reader_string (SOURCE_FILE_AT_LINE (3035)) COMMA_SOURCE_FILE_AT_LINE (3035)), object->mAttribute_mExternTypeName.reader_location (SOURCE_FILE_AT_LINE (3035)) COMMA_SOURCE_FILE_AT_LINE (3035)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_externTypeDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3036)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_externTypeDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_externTypeDeclarationAST.mSlotID,
                                               categoryMethod_externTypeDeclarationAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externTypeDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_externTypeDeclarationAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@externFunctionDeclarationAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_externFunctionDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                 GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                                 GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                 GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                 GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                                 GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externFunctionDeclarationAST * object = (const cPtr_externFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_externFunctionDeclarationAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_externFunctionDeclarationAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3048)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_externFunctionDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_externFunctionDeclarationAST.mSlotID,
                                               categoryMethod_externFunctionDeclarationAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externFunctionDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_externFunctionDeclarationAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@onceFunctionDeclarationAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_onceFunctionDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                               GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                               GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                               GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                               GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                               GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_onceFunctionDeclarationAST * object = (const cPtr_onceFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_onceFunctionDeclarationAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_onceFunctionDeclarationAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3060)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_onceFunctionDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_onceFunctionDeclarationAST.mSlotID,
                                               categoryMethod_onceFunctionDeclarationAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_onceFunctionDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_onceFunctionDeclarationAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@externRoutineDeclarationAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_externRoutineDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                                GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                                GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                                C_Compiler * /* inCompiler */
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externRoutineDeclarationAST * object = (const cPtr_externRoutineDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_externRoutineDeclarationAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_externRoutineDeclarationAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3072)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_externRoutineDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_externRoutineDeclarationAST.mSlotID,
                                               categoryMethod_externRoutineDeclarationAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externRoutineDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_externRoutineDeclarationAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@filewrapperDeclarationAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_filewrapperDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                              GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                              GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                              GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                              GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                              GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                              C_Compiler * /* inCompiler */
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_filewrapperDeclarationAST * object = (const cPtr_filewrapperDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_filewrapperDeclarationAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_filewrapperDeclarationAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3084)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_filewrapperDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_filewrapperDeclarationAST.mSlotID,
                                               categoryMethod_filewrapperDeclarationAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_filewrapperDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_filewrapperDeclarationAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingCategoryMethodAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryMethodAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                                GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                                GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                                C_Compiler * /* inCompiler */
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryMethodAST * object = (const cPtr_overridingCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingCategoryMethodAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_overridingCategoryMethodAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3096)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryMethodAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_overridingCategoryMethodAST.mSlotID,
                                               categoryMethod_overridingCategoryMethodAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryMethodAST_enterDeclarationInGraph (defineCategoryMethod_overridingCategoryMethodAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingCategoryModifierAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryModifierAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                  GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                                  GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                  GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                  GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                                  GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                                  C_Compiler * /* inCompiler */
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryModifierAST * object = (const cPtr_overridingCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingCategoryModifierAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_overridingCategoryModifierAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3108)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryModifierAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_overridingCategoryModifierAST.mSlotID,
                                               categoryMethod_overridingCategoryModifierAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryModifierAST_enterDeclarationInGraph (defineCategoryMethod_overridingCategoryModifierAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingAbstractCategoryReaderAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryReaderAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                        GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                                        GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                        GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                        GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                                        GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryReaderAST * object = (const cPtr_overridingAbstractCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingAbstractCategoryReaderAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_overridingAbstractCategoryReaderAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3120)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryReaderAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_overridingAbstractCategoryReaderAST.mSlotID,
                                               categoryMethod_overridingAbstractCategoryReaderAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryReaderAST_enterDeclarationInGraph (defineCategoryMethod_overridingAbstractCategoryReaderAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingAbstractCategoryMethodAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryMethodAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                        GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                                        GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                        GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                        GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                                        GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryMethodAST * object = (const cPtr_overridingAbstractCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingAbstractCategoryMethodAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_overridingAbstractCategoryMethodAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3132)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryMethodAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_overridingAbstractCategoryMethodAST.mSlotID,
                                               categoryMethod_overridingAbstractCategoryMethodAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryMethodAST_enterDeclarationInGraph (defineCategoryMethod_overridingAbstractCategoryMethodAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingAbstractCategoryModifierAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryModifierAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                          GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                                          GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                          GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                          GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                                          GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                                          C_Compiler * /* inCompiler */
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryModifierAST * object = (const cPtr_overridingAbstractCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingAbstractCategoryModifierAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_overridingAbstractCategoryModifierAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3144)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryModifierAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_overridingAbstractCategoryModifierAST.mSlotID,
                                               categoryMethod_overridingAbstractCategoryModifierAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryModifierAST_enterDeclarationInGraph (defineCategoryMethod_overridingAbstractCategoryModifierAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@categoryReaderAST enterDeclarationInGraph'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_categoryReaderAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                      GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                      GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                      GALGAS_categoryReaderMapForBuildingContext & ioArgument_ioCategoryReaderMapForBuildingContext,
                                                                      GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                      GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryReaderAST * object = (const cPtr_categoryReaderAST *) inObject ;
  macroValidSharedObject (object, const cPtr_categoryReaderAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("category reader @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3156)) COMMA_SOURCE_FILE_AT_LINE (3156)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (3156)).operator_concat (object->mAttribute_mCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (3156)) COMMA_SOURCE_FILE_AT_LINE (3156)), object->mAttribute_mCategoryReaderName.reader_location (SOURCE_FILE_AT_LINE (3156)) COMMA_SOURCE_FILE_AT_LINE (3156)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_categoryReaderAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3157)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addArc (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3158)) COMMA_SOURCE_FILE_AT_LINE (3158)), object->mAttribute_mTypeName.reader_location (SOURCE_FILE_AT_LINE (3158)) COMMA_SOURCE_FILE_AT_LINE (3158)) COMMA_SOURCE_FILE_AT_LINE (3158)) ;
  }
  const enumGalgasBool test_1 = ioArgument_ioCategoryReaderMapForBuildingContext.reader_hasKey (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3160)) COMMA_SOURCE_FILE_AT_LINE (3160)).operator_not (SOURCE_FILE_AT_LINE (3160)).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    ioArgument_ioCategoryReaderMapForBuildingContext.modifier_insertKey (object->mAttribute_mTypeName, GALGAS_categoryReaderMapForType::constructor_emptyMap (SOURCE_FILE_AT_LINE (3163)), inCompiler COMMA_SOURCE_FILE_AT_LINE (3161)) ;
    }
  }
  // index 1: attribute 'mCategoryReaderMapForType', type @categoryReaderMapForType
  cMapElement_categoryReaderMapForBuildingContext * objectArray_129515 = (cMapElement_categoryReaderMapForBuildingContext *) ioArgument_ioCategoryReaderMapForBuildingContext.readWriteAccessForWithInstruction_searchKey (inCompiler, object->mAttribute_mTypeName COMMA_SOURCE_FILE_AT_LINE (3166)) ;
  if (NULL != objectArray_129515) {
      macroValidSharedObject (objectArray_129515, cMapElement_categoryReaderMapForBuildingContext) ;
    {
    objectArray_129515->mAttribute_mCategoryReaderMapForType.modifier_insertKey (object->mAttribute_mCategoryReaderName, object->mAttribute_mCategoryReaderReturnedTypeName, object->mAttribute_mCategoryReaderFormalInputParameterList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3167)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_categoryReaderAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_categoryReaderAST.mSlotID,
                                               categoryMethod_categoryReaderAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryReaderAST_enterDeclarationInGraph (defineCategoryMethod_categoryReaderAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@categoryMethodAST enterDeclarationInGraph'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_categoryMethodAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                      GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                      GALGAS_categoryMethodMapForBuildingContext & ioArgument_ioCategoryMethodMapForBuildingContext,
                                                                      GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                      GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                      GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryMethodAST * object = (const cPtr_categoryMethodAST *) inObject ;
  macroValidSharedObject (object, const cPtr_categoryMethodAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("category method @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3184)) COMMA_SOURCE_FILE_AT_LINE (3184)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (3184)).operator_concat (object->mAttribute_mCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (3184)) COMMA_SOURCE_FILE_AT_LINE (3184)), object->mAttribute_mCategoryMethodName.reader_location (SOURCE_FILE_AT_LINE (3184)) COMMA_SOURCE_FILE_AT_LINE (3184)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_categoryMethodAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3185)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addArc (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3186)) COMMA_SOURCE_FILE_AT_LINE (3186)), object->mAttribute_mTypeName.reader_location (SOURCE_FILE_AT_LINE (3186)) COMMA_SOURCE_FILE_AT_LINE (3186)) COMMA_SOURCE_FILE_AT_LINE (3186)) ;
  }
  const enumGalgasBool test_1 = ioArgument_ioCategoryMethodMapForBuildingContext.reader_hasKey (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3188)) COMMA_SOURCE_FILE_AT_LINE (3188)).operator_not (SOURCE_FILE_AT_LINE (3188)).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    ioArgument_ioCategoryMethodMapForBuildingContext.modifier_insertKey (object->mAttribute_mTypeName, GALGAS_categoryMethodMapForType::constructor_emptyMap (SOURCE_FILE_AT_LINE (3191)), inCompiler COMMA_SOURCE_FILE_AT_LINE (3189)) ;
    }
  }
  // index 1: attribute 'mCategoryMethodMapForType', type @categoryMethodMapForType
  cMapElement_categoryMethodMapForBuildingContext * objectArray_130816 = (cMapElement_categoryMethodMapForBuildingContext *) ioArgument_ioCategoryMethodMapForBuildingContext.readWriteAccessForWithInstruction_searchKey (inCompiler, object->mAttribute_mTypeName COMMA_SOURCE_FILE_AT_LINE (3194)) ;
  if (NULL != objectArray_130816) {
      macroValidSharedObject (objectArray_130816, cMapElement_categoryMethodMapForBuildingContext) ;
    {
    objectArray_130816->mAttribute_mCategoryMethodMapForType.modifier_insertKey (object->mAttribute_mCategoryMethodName, object->mAttribute_mCategoryMethodFormalParameterList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3195)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_categoryMethodAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_categoryMethodAST.mSlotID,
                                               categoryMethod_categoryMethodAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryMethodAST_enterDeclarationInGraph (defineCategoryMethod_categoryMethodAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@categoryModifierAST enterDeclarationInGraph' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_categoryModifierAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                        GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                        GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                        GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                        GALGAS_categoryModifierMapForBuildingContext & ioArgument_ioCategoryModifierMapForBuildingContext,
                                                                        GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryModifierAST * object = (const cPtr_categoryModifierAST *) inObject ;
  macroValidSharedObject (object, const cPtr_categoryModifierAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("category modifier @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3211)) COMMA_SOURCE_FILE_AT_LINE (3211)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (3211)).operator_concat (object->mAttribute_mCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (3211)) COMMA_SOURCE_FILE_AT_LINE (3211)), object->mAttribute_mCategoryModifierName.reader_location (SOURCE_FILE_AT_LINE (3211)) COMMA_SOURCE_FILE_AT_LINE (3211)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_categoryModifierAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3212)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addArc (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3213)) COMMA_SOURCE_FILE_AT_LINE (3213)), object->mAttribute_mTypeName.reader_location (SOURCE_FILE_AT_LINE (3213)) COMMA_SOURCE_FILE_AT_LINE (3213)) COMMA_SOURCE_FILE_AT_LINE (3213)) ;
  }
  const enumGalgasBool test_1 = ioArgument_ioCategoryModifierMapForBuildingContext.reader_hasKey (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3215)) COMMA_SOURCE_FILE_AT_LINE (3215)).operator_not (SOURCE_FILE_AT_LINE (3215)).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    ioArgument_ioCategoryModifierMapForBuildingContext.modifier_insertKey (object->mAttribute_mTypeName, GALGAS_categoryModifierMapForType::constructor_emptyMap (SOURCE_FILE_AT_LINE (3218)), inCompiler COMMA_SOURCE_FILE_AT_LINE (3216)) ;
    }
  }
  // index 1: attribute 'mCategoryModifierMapForType', type @categoryModifierMapForType
  cMapElement_categoryModifierMapForBuildingContext * objectArray_132087 = (cMapElement_categoryModifierMapForBuildingContext *) ioArgument_ioCategoryModifierMapForBuildingContext.readWriteAccessForWithInstruction_searchKey (inCompiler, object->mAttribute_mTypeName COMMA_SOURCE_FILE_AT_LINE (3221)) ;
  if (NULL != objectArray_132087) {
      macroValidSharedObject (objectArray_132087, cMapElement_categoryModifierMapForBuildingContext) ;
    {
    objectArray_132087->mAttribute_mCategoryModifierMapForType.modifier_insertKey (object->mAttribute_mCategoryModifierName, object->mAttribute_mCategoryModifierFormalParameterList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3222)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_categoryModifierAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_categoryModifierAST.mSlotID,
                                               categoryMethod_categoryModifierAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryModifierAST_enterDeclarationInGraph (defineCategoryMethod_categoryModifierAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingCategoryReaderAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryReaderAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                                GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                                GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                                C_Compiler * /* inCompiler */
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryReaderAST * object = (const cPtr_overridingCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingCategoryReaderAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_overridingCategoryReaderAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3238)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryReaderAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_overridingCategoryReaderAST.mSlotID,
                                               categoryMethod_overridingCategoryReaderAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryReaderAST_enterDeclarationInGraph (defineCategoryMethod_overridingCategoryReaderAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@abstractCategoryReaderAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryReaderAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                              GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                              GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                              GALGAS_categoryReaderMapForBuildingContext & ioArgument_ioCategoryReaderMapForBuildingContext,
                                                                              GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                              GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryReaderAST * object = (const cPtr_abstractCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, const cPtr_abstractCategoryReaderAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("category reader @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3250)) COMMA_SOURCE_FILE_AT_LINE (3250)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (3250)).operator_concat (object->mAttribute_mAbstractCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (3250)) COMMA_SOURCE_FILE_AT_LINE (3250)), object->mAttribute_mAbstractCategoryReaderName.reader_location (SOURCE_FILE_AT_LINE (3250)) COMMA_SOURCE_FILE_AT_LINE (3250)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_abstractCategoryReaderAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3251)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addArc (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3252)) COMMA_SOURCE_FILE_AT_LINE (3252)), object->mAttribute_mTypeName.reader_location (SOURCE_FILE_AT_LINE (3252)) COMMA_SOURCE_FILE_AT_LINE (3252)) COMMA_SOURCE_FILE_AT_LINE (3252)) ;
  }
  const enumGalgasBool test_1 = ioArgument_ioCategoryReaderMapForBuildingContext.reader_hasKey (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3254)) COMMA_SOURCE_FILE_AT_LINE (3254)).operator_not (SOURCE_FILE_AT_LINE (3254)).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    ioArgument_ioCategoryReaderMapForBuildingContext.modifier_insertKey (object->mAttribute_mTypeName, GALGAS_categoryReaderMapForType::constructor_emptyMap (SOURCE_FILE_AT_LINE (3257)), inCompiler COMMA_SOURCE_FILE_AT_LINE (3255)) ;
    }
  }
  // index 1: attribute 'mCategoryReaderMapForType', type @categoryReaderMapForType
  cMapElement_categoryReaderMapForBuildingContext * objectArray_133987 = (cMapElement_categoryReaderMapForBuildingContext *) ioArgument_ioCategoryReaderMapForBuildingContext.readWriteAccessForWithInstruction_searchKey (inCompiler, object->mAttribute_mTypeName COMMA_SOURCE_FILE_AT_LINE (3260)) ;
  if (NULL != objectArray_133987) {
      macroValidSharedObject (objectArray_133987, cMapElement_categoryReaderMapForBuildingContext) ;
    {
    objectArray_133987->mAttribute_mCategoryReaderMapForType.modifier_insertKey (object->mAttribute_mAbstractCategoryReaderName, object->mAttribute_mAbstractCategoryReaderReturnedTypeName, object->mAttribute_mAbstractCategoryReaderFormalInputParameterList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3261)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryReaderAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_abstractCategoryReaderAST.mSlotID,
                                               categoryMethod_abstractCategoryReaderAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryReaderAST_enterDeclarationInGraph (defineCategoryMethod_abstractCategoryReaderAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@abstractCategoryMethodAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryMethodAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                              GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                              GALGAS_categoryMethodMapForBuildingContext & ioArgument_ioCategoryMethodMapForBuildingContext,
                                                                              GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                              GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                              GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryMethodAST * object = (const cPtr_abstractCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, const cPtr_abstractCategoryMethodAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("category method @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3278)) COMMA_SOURCE_FILE_AT_LINE (3278)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (3278)).operator_concat (object->mAttribute_mAbstractCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (3278)) COMMA_SOURCE_FILE_AT_LINE (3278)), object->mAttribute_mAbstractCategoryMethodName.reader_location (SOURCE_FILE_AT_LINE (3278)) COMMA_SOURCE_FILE_AT_LINE (3278)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_abstractCategoryMethodAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3279)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addArc (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3280)) COMMA_SOURCE_FILE_AT_LINE (3280)), object->mAttribute_mTypeName.reader_location (SOURCE_FILE_AT_LINE (3280)) COMMA_SOURCE_FILE_AT_LINE (3280)) COMMA_SOURCE_FILE_AT_LINE (3280)) ;
  }
  const enumGalgasBool test_1 = ioArgument_ioCategoryMethodMapForBuildingContext.reader_hasKey (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3282)) COMMA_SOURCE_FILE_AT_LINE (3282)).operator_not (SOURCE_FILE_AT_LINE (3282)).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    ioArgument_ioCategoryMethodMapForBuildingContext.modifier_insertKey (object->mAttribute_mTypeName, GALGAS_categoryMethodMapForType::constructor_emptyMap (SOURCE_FILE_AT_LINE (3285)), inCompiler COMMA_SOURCE_FILE_AT_LINE (3283)) ;
    }
  }
  // index 1: attribute 'mCategoryMethodMapForType', type @categoryMethodMapForType
  cMapElement_categoryMethodMapForBuildingContext * objectArray_135336 = (cMapElement_categoryMethodMapForBuildingContext *) ioArgument_ioCategoryMethodMapForBuildingContext.readWriteAccessForWithInstruction_searchKey (inCompiler, object->mAttribute_mTypeName COMMA_SOURCE_FILE_AT_LINE (3288)) ;
  if (NULL != objectArray_135336) {
      macroValidSharedObject (objectArray_135336, cMapElement_categoryMethodMapForBuildingContext) ;
    {
    objectArray_135336->mAttribute_mCategoryMethodMapForType.modifier_insertKey (object->mAttribute_mAbstractCategoryMethodName, object->mAttribute_mAbstractCategoryMethodFormalParameterList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3289)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryMethodAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_abstractCategoryMethodAST.mSlotID,
                                               categoryMethod_abstractCategoryMethodAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryMethodAST_enterDeclarationInGraph (defineCategoryMethod_abstractCategoryMethodAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@abstractCategoryModifierAST enterDeclarationInGraph'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryModifierAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                                GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                GALGAS_categoryModifierMapForBuildingContext & ioArgument_ioCategoryModifierMapForBuildingContext,
                                                                                GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryModifierAST * object = (const cPtr_abstractCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, const cPtr_abstractCategoryModifierAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("category modifier @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3305)) COMMA_SOURCE_FILE_AT_LINE (3305)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (3305)).operator_concat (object->mAttribute_mAbstractCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (3305)) COMMA_SOURCE_FILE_AT_LINE (3305)), object->mAttribute_mAbstractCategoryModifierName.reader_location (SOURCE_FILE_AT_LINE (3305)) COMMA_SOURCE_FILE_AT_LINE (3305)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_abstractCategoryModifierAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3306)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addArc (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3307)) COMMA_SOURCE_FILE_AT_LINE (3307)), object->mAttribute_mTypeName.reader_location (SOURCE_FILE_AT_LINE (3307)) COMMA_SOURCE_FILE_AT_LINE (3307)) COMMA_SOURCE_FILE_AT_LINE (3307)) ;
  }
  const enumGalgasBool test_1 = ioArgument_ioCategoryModifierMapForBuildingContext.reader_hasKey (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3309)) COMMA_SOURCE_FILE_AT_LINE (3309)).operator_not (SOURCE_FILE_AT_LINE (3309)).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    ioArgument_ioCategoryModifierMapForBuildingContext.modifier_insertKey (object->mAttribute_mTypeName, GALGAS_categoryModifierMapForType::constructor_emptyMap (SOURCE_FILE_AT_LINE (3312)), inCompiler COMMA_SOURCE_FILE_AT_LINE (3310)) ;
    }
  }
  // index 1: attribute 'mCategoryModifierMapForType', type @categoryModifierMapForType
  cMapElement_categoryModifierMapForBuildingContext * objectArray_136647 = (cMapElement_categoryModifierMapForBuildingContext *) ioArgument_ioCategoryModifierMapForBuildingContext.readWriteAccessForWithInstruction_searchKey (inCompiler, object->mAttribute_mTypeName COMMA_SOURCE_FILE_AT_LINE (3315)) ;
  if (NULL != objectArray_136647) {
      macroValidSharedObject (objectArray_136647, cMapElement_categoryModifierMapForBuildingContext) ;
    {
    objectArray_136647->mAttribute_mCategoryModifierMapForType.modifier_insertKey (object->mAttribute_mAbstractCategoryModifierName, object->mAttribute_mAbstractCategoryModifierFormalParameterList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3316)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryModifierAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_abstractCategoryModifierAST.mSlotID,
                                               categoryMethod_abstractCategoryModifierAST_enterDeclarationInGraph) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryModifierAST_enterDeclarationInGraph (defineCategoryMethod_abstractCategoryModifierAST_enterDeclarationInGraph, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@semanticDeclarationAST addAssociatedElement'       *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_semanticDeclarationAST_addAssociatedElement> gCategoryMethodTable_semanticDeclarationAST_addAssociatedElement ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_addAssociatedElement (const PMSInt32 inClassIndex,
                                               categoryMethodSignature_semanticDeclarationAST_addAssociatedElement inMethod) {
  gCategoryMethodTable_semanticDeclarationAST_addAssociatedElement.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_addAssociatedElement (const cPtr_semanticDeclarationAST * inObject,
                                              GALGAS_semanticDeclarationListAST & io_ioSemanticDeclarationList,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_semanticDeclarationAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_semanticDeclarationAST_addAssociatedElement f = NULL ;
    if (classIndex < gCategoryMethodTable_semanticDeclarationAST_addAssociatedElement.count ()) {
      f = gCategoryMethodTable_semanticDeclarationAST_addAssociatedElement (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_semanticDeclarationAST_addAssociatedElement.count ()) {
           f = gCategoryMethodTable_semanticDeclarationAST_addAssociatedElement (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_semanticDeclarationAST_addAssociatedElement.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioSemanticDeclarationList, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_semanticDeclarationAST_addAssociatedElement (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                        GALGAS_semanticDeclarationListAST & /* ioArgument_ioSemanticDeclarationList */,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_semanticDeclarationAST_addAssociatedElement (void) {
  enterCategoryMethod_addAssociatedElement (kTypeDescriptor_GALGAS_semanticDeclarationAST.mSlotID,
                                            categoryMethod_semanticDeclarationAST_addAssociatedElement) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_semanticDeclarationAST_addAssociatedElement (void) {
  gCategoryMethodTable_semanticDeclarationAST_addAssociatedElement.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticDeclarationAST_addAssociatedElement (defineCategoryMethod_semanticDeclarationAST_addAssociatedElement,
                                                                        freeCategoryMethod_semanticDeclarationAST_addAssociatedElement) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@mapDeclarationAST addAssociatedElement'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_mapDeclarationAST_addAssociatedElement (const cPtr_semanticDeclarationAST * inObject,
                                                                   GALGAS_semanticDeclarationListAST & ioArgument_ioSemanticDeclarationList,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_mapDeclarationAST * object = (const cPtr_mapDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_mapDeclarationAST) ;
  GALGAS_attributeInCollectionListAST var_structAttributeList = GALGAS_attributeInCollectionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (3335)) ;
  var_structAttributeList.addAssign_operation (GALGAS_string ("lstring").reader_nowhere (SOURCE_FILE_AT_LINE (3337)), GALGAS_string ("lkey").reader_nowhere (SOURCE_FILE_AT_LINE (3338)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (3339)) COMMA_SOURCE_FILE_AT_LINE (3336)) ;
  cEnumerator_attributeInCollectionListAST enumerator_137486 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_137486.hasCurrentObject ()) {
    var_structAttributeList.addAssign_operation (enumerator_137486.current_mAttributeTypeName (HERE), enumerator_137486.current_mAttributeName (HERE), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (3345)) COMMA_SOURCE_FILE_AT_LINE (3342)) ;
    enumerator_137486.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationList.addAssign_operation (GALGAS_structDeclarationAST::constructor_new (GALGAS_bool (true), GALGAS_lstring::constructor_new (object->mAttribute_mMapTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE_AT_LINE (3350)) COMMA_SOURCE_FILE_AT_LINE (3350)), object->mAttribute_mMapTypeName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (3350)), var_structAttributeList, GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (3348)) COMMA_SOURCE_FILE_AT_LINE (3348)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_mapDeclarationAST_addAssociatedElement (void) {
  enterCategoryMethod_addAssociatedElement (kTypeDescriptor_GALGAS_mapDeclarationAST.mSlotID,
                                            categoryMethod_mapDeclarationAST_addAssociatedElement) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_mapDeclarationAST_addAssociatedElement (defineCategoryMethod_mapDeclarationAST_addAssociatedElement, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@listDeclarationAST addAssociatedElement'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_listDeclarationAST_addAssociatedElement (const cPtr_semanticDeclarationAST * inObject,
                                                                    GALGAS_semanticDeclarationListAST & ioArgument_ioSemanticDeclarationList,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listDeclarationAST * object = (const cPtr_listDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_listDeclarationAST) ;
  GALGAS_attributeInCollectionListAST var_structAttributeList = GALGAS_attributeInCollectionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (3361)) ;
  cEnumerator_attributeInCollectionListAST enumerator_138120 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_138120.hasCurrentObject ()) {
    var_structAttributeList.addAssign_operation (enumerator_138120.current_mAttributeTypeName (HERE), enumerator_138120.current_mAttributeName (HERE), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (3366)) COMMA_SOURCE_FILE_AT_LINE (3363)) ;
    enumerator_138120.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationList.addAssign_operation (GALGAS_structDeclarationAST::constructor_new (GALGAS_bool (true), GALGAS_lstring::constructor_new (object->mAttribute_mListTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE_AT_LINE (3371)) COMMA_SOURCE_FILE_AT_LINE (3371)), object->mAttribute_mListTypeName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (3371)), var_structAttributeList, GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (3369)) COMMA_SOURCE_FILE_AT_LINE (3369)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_listDeclarationAST_addAssociatedElement (void) {
  enterCategoryMethod_addAssociatedElement (kTypeDescriptor_GALGAS_listDeclarationAST.mSlotID,
                                            categoryMethod_listDeclarationAST_addAssociatedElement) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listDeclarationAST_addAssociatedElement (defineCategoryMethod_listDeclarationAST_addAssociatedElement, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@sortedListDeclarationAST addAssociatedElement'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_sortedListDeclarationAST_addAssociatedElement (const cPtr_semanticDeclarationAST * inObject,
                                                                          GALGAS_semanticDeclarationListAST & ioArgument_ioSemanticDeclarationList,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_sortedListDeclarationAST * object = (const cPtr_sortedListDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_sortedListDeclarationAST) ;
  GALGAS_attributeInCollectionListAST var_structAttributeList = GALGAS_attributeInCollectionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (3382)) ;
  cEnumerator_attributeInCollectionListAST enumerator_138762 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_138762.hasCurrentObject ()) {
    var_structAttributeList.addAssign_operation (enumerator_138762.current_mAttributeTypeName (HERE), enumerator_138762.current_mAttributeName (HERE), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (3387)) COMMA_SOURCE_FILE_AT_LINE (3384)) ;
    enumerator_138762.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationList.addAssign_operation (GALGAS_structDeclarationAST::constructor_new (GALGAS_bool (true), GALGAS_lstring::constructor_new (object->mAttribute_mSortedListTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE_AT_LINE (3392)) COMMA_SOURCE_FILE_AT_LINE (3392)), object->mAttribute_mSortedListTypeName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (3392)), var_structAttributeList, GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (3390)) COMMA_SOURCE_FILE_AT_LINE (3390)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_sortedListDeclarationAST_addAssociatedElement (void) {
  enterCategoryMethod_addAssociatedElement (kTypeDescriptor_GALGAS_sortedListDeclarationAST.mSlotID,
                                            categoryMethod_sortedListDeclarationAST_addAssociatedElement) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_sortedListDeclarationAST_addAssociatedElement (defineCategoryMethod_sortedListDeclarationAST_addAssociatedElement, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@listmapDeclarationAST addAssociatedElement'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_listmapDeclarationAST_addAssociatedElement (const cPtr_semanticDeclarationAST * inObject,
                                                                       GALGAS_semanticDeclarationListAST & ioArgument_ioSemanticDeclarationList,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listmapDeclarationAST * object = (const cPtr_listmapDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_listmapDeclarationAST) ;
  GALGAS_attributeInCollectionListAST var_structAttributeList = GALGAS_attributeInCollectionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (3403)) ;
  var_structAttributeList.addAssign_operation (GALGAS_string ("string").reader_nowhere (SOURCE_FILE_AT_LINE (3405)), GALGAS_string ("key").reader_nowhere (SOURCE_FILE_AT_LINE (3406)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (3407)) COMMA_SOURCE_FILE_AT_LINE (3404)) ;
  var_structAttributeList.addAssign_operation (object->mAttribute_mAssociatedListTypeName, GALGAS_string ("mList").reader_nowhere (SOURCE_FILE_AT_LINE (3411)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (3412)) COMMA_SOURCE_FILE_AT_LINE (3409)) ;
  ioArgument_ioSemanticDeclarationList.addAssign_operation (GALGAS_structDeclarationAST::constructor_new (GALGAS_bool (true), GALGAS_lstring::constructor_new (object->mAttribute_mListmapTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE_AT_LINE (3417)) COMMA_SOURCE_FILE_AT_LINE (3417)), object->mAttribute_mListmapTypeName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (3417)), var_structAttributeList, GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (3415)) COMMA_SOURCE_FILE_AT_LINE (3415)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_listmapDeclarationAST_addAssociatedElement (void) {
  enterCategoryMethod_addAssociatedElement (kTypeDescriptor_GALGAS_listmapDeclarationAST.mSlotID,
                                            categoryMethod_listmapDeclarationAST_addAssociatedElement) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listmapDeclarationAST_addAssociatedElement (defineCategoryMethod_listmapDeclarationAST_addAssociatedElement, NULL) ;

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap_2E_element::GALGAS_grammarLabelMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mLabelSignature () {
}

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap_2E_element::~ GALGAS_grammarLabelMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap_2E_element::GALGAS_grammarLabelMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                      const GALGAS_formalParameterSignature & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mLabelSignature (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap_2E_element GALGAS_grammarLabelMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_grammarLabelMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                            GALGAS_formalParameterSignature::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap_2E_element GALGAS_grammarLabelMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                      const GALGAS_formalParameterSignature & inOperand1 
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_grammarLabelMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_grammarLabelMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_grammarLabelMap_2E_element::objectCompare (const GALGAS_grammarLabelMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLabelSignature.objectCompare (inOperand.mAttribute_mLabelSignature) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_grammarLabelMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mLabelSignature.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_grammarLabelMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mLabelSignature.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_grammarLabelMap_2E_element::description (C_String & ioString,
                                                     const PMSInt32 inIndentation) const {
  ioString << "<struct @grammarLabelMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLabelSignature.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_grammarLabelMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterSignature GALGAS_grammarLabelMap_2E_element::reader_mLabelSignature (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLabelSignature ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @grammarLabelMap.element type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_grammarLabelMap_2E_element ("grammarLabelMap.element",
                                                   NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_grammarLabelMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_grammarLabelMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_grammarLabelMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_grammarLabelMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap_2E_element GALGAS_grammarLabelMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler,
                                                                                    const GALGAS_location & inErrorLocation,
                                                                                    const GALGAS_string & inErrorMessage
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_grammarLabelMap_2E_element result ;
  const GALGAS_grammarLabelMap_2E_element * p = (const GALGAS_grammarLabelMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_grammarLabelMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarMap_2E_element::GALGAS_grammarMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mLabelMap (),
mAttribute_mHasIndexing () {
}

//---------------------------------------------------------------------------*

GALGAS_grammarMap_2E_element::~ GALGAS_grammarMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_grammarMap_2E_element::GALGAS_grammarMap_2E_element (const GALGAS_lstring & inOperand0,
                                                            const GALGAS_grammarLabelMap & inOperand1,
                                                            const GALGAS_bool & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mLabelMap (inOperand1),
mAttribute_mHasIndexing (inOperand2) {
}

//---------------------------------------------------------------------------*

GALGAS_grammarMap_2E_element GALGAS_grammarMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_grammarMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                       GALGAS_grammarLabelMap::constructor_emptyMap (HERE),
                                       GALGAS_bool::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarMap_2E_element GALGAS_grammarMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                            const GALGAS_grammarLabelMap & inOperand1,
                                                                            const GALGAS_bool & inOperand2 
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_grammarMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_grammarMap_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_grammarMap_2E_element::objectCompare (const GALGAS_grammarMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLabelMap.objectCompare (inOperand.mAttribute_mLabelMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHasIndexing.objectCompare (inOperand.mAttribute_mHasIndexing) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_grammarMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mLabelMap.isValid () && mAttribute_mHasIndexing.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_grammarMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mLabelMap.drop () ;
  mAttribute_mHasIndexing.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_grammarMap_2E_element::description (C_String & ioString,
                                                const PMSInt32 inIndentation) const {
  ioString << "<struct @grammarMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLabelMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHasIndexing.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_grammarMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarLabelMap GALGAS_grammarMap_2E_element::reader_mLabelMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLabelMap ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_grammarMap_2E_element::reader_mHasIndexing (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHasIndexing ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @grammarMap.element type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_grammarMap_2E_element ("grammarMap.element",
                                              NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_grammarMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_grammarMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_grammarMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_grammarMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_grammarMap_2E_element GALGAS_grammarMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler,
                                                                          const GALGAS_location & inErrorLocation,
                                                                          const GALGAS_string & inErrorMessage
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_grammarMap_2E_element result ;
  const GALGAS_grammarMap_2E_element * p = (const GALGAS_grammarMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_grammarMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_routineMap_2E_element::GALGAS_routineMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mRoutineSignature () {
}

//---------------------------------------------------------------------------*

GALGAS_routineMap_2E_element::~ GALGAS_routineMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_routineMap_2E_element::GALGAS_routineMap_2E_element (const GALGAS_lstring & inOperand0,
                                                            const GALGAS_formalParameterSignature & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mRoutineSignature (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_routineMap_2E_element GALGAS_routineMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_routineMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                       GALGAS_formalParameterSignature::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_routineMap_2E_element GALGAS_routineMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                            const GALGAS_formalParameterSignature & inOperand1 
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_routineMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_routineMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_routineMap_2E_element::objectCompare (const GALGAS_routineMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRoutineSignature.objectCompare (inOperand.mAttribute_mRoutineSignature) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_routineMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRoutineSignature.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_routineMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mRoutineSignature.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_routineMap_2E_element::description (C_String & ioString,
                                                const PMSInt32 inIndentation) const {
  ioString << "<struct @routineMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRoutineSignature.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_routineMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterSignature GALGAS_routineMap_2E_element::reader_mRoutineSignature (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRoutineSignature ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @routineMap.element type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineMap_2E_element ("routineMap.element",
                                              NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_routineMap_2E_element GALGAS_routineMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler,
                                                                          const GALGAS_location & inErrorLocation,
                                                                          const GALGAS_string & inErrorMessage
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_routineMap_2E_element result ;
  const GALGAS_routineMap_2E_element * p = (const GALGAS_routineMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_functionMap_2E_element::GALGAS_functionMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mFunctionSignature (),
mAttribute_mResultType () {
}

//---------------------------------------------------------------------------*

GALGAS_functionMap_2E_element::~ GALGAS_functionMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_functionMap_2E_element::GALGAS_functionMap_2E_element (const GALGAS_lstring & inOperand0,
                                                              const GALGAS_unifiedTypeMapProxyList & inOperand1,
                                                              const GALGAS_unifiedTypeMapProxy & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mFunctionSignature (inOperand1),
mAttribute_mResultType (inOperand2) {
}

//---------------------------------------------------------------------------*

GALGAS_functionMap_2E_element GALGAS_functionMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_functionMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                        GALGAS_unifiedTypeMapProxyList::constructor_emptyList (HERE),
                                        GALGAS_unifiedTypeMapProxy::constructor_null (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_functionMap_2E_element GALGAS_functionMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_unifiedTypeMapProxyList & inOperand1,
                                                                              const GALGAS_unifiedTypeMapProxy & inOperand2 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_functionMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_functionMap_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_functionMap_2E_element::objectCompare (const GALGAS_functionMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFunctionSignature.objectCompare (inOperand.mAttribute_mFunctionSignature) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mResultType.objectCompare (inOperand.mAttribute_mResultType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_functionMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFunctionSignature.isValid () && mAttribute_mResultType.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_functionMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mFunctionSignature.drop () ;
  mAttribute_mResultType.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_functionMap_2E_element::description (C_String & ioString,
                                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @functionMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFunctionSignature.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mResultType.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_functionMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxyList GALGAS_functionMap_2E_element::reader_mFunctionSignature (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFunctionSignature ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_functionMap_2E_element::reader_mResultType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mResultType ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @functionMap.element type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_functionMap_2E_element ("functionMap.element",
                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_functionMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_functionMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_functionMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_functionMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_functionMap_2E_element GALGAS_functionMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler,
                                                                            const GALGAS_location & inErrorLocation,
                                                                            const GALGAS_string & inErrorMessage
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_functionMap_2E_element result ;
  const GALGAS_functionMap_2E_element * p = (const GALGAS_functionMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_functionMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap_2E_element::GALGAS_wrapperFileMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mAbsoluteFilePath (),
mAttribute_mIsTextFile (),
mAttribute_mWrapperDirectoryIndex (),
mAttribute_mWrapperFileIndex () {
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap_2E_element::~ GALGAS_wrapperFileMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap_2E_element::GALGAS_wrapperFileMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_string & inOperand1,
                                                                    const GALGAS_bool & inOperand2,
                                                                    const GALGAS_uint & inOperand3,
                                                                    const GALGAS_uint & inOperand4) :
mAttribute_lkey (inOperand0),
mAttribute_mAbsoluteFilePath (inOperand1),
mAttribute_mIsTextFile (inOperand2),
mAttribute_mWrapperDirectoryIndex (inOperand3),
mAttribute_mWrapperFileIndex (inOperand4) {
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap_2E_element GALGAS_wrapperFileMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_wrapperFileMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                           GALGAS_string::constructor_default (HERE),
                                           GALGAS_bool::constructor_default (HERE),
                                           GALGAS_uint::constructor_default (HERE),
                                           GALGAS_uint::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap_2E_element GALGAS_wrapperFileMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_string & inOperand1,
                                                                                    const GALGAS_bool & inOperand2,
                                                                                    const GALGAS_uint & inOperand3,
                                                                                    const GALGAS_uint & inOperand4 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_wrapperFileMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_wrapperFileMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_wrapperFileMap_2E_element::objectCompare (const GALGAS_wrapperFileMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAbsoluteFilePath.objectCompare (inOperand.mAttribute_mAbsoluteFilePath) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIsTextFile.objectCompare (inOperand.mAttribute_mIsTextFile) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mWrapperDirectoryIndex.objectCompare (inOperand.mAttribute_mWrapperDirectoryIndex) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mWrapperFileIndex.objectCompare (inOperand.mAttribute_mWrapperFileIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_wrapperFileMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAbsoluteFilePath.isValid () && mAttribute_mIsTextFile.isValid () && mAttribute_mWrapperDirectoryIndex.isValid () && mAttribute_mWrapperFileIndex.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_wrapperFileMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAbsoluteFilePath.drop () ;
  mAttribute_mIsTextFile.drop () ;
  mAttribute_mWrapperDirectoryIndex.drop () ;
  mAttribute_mWrapperFileIndex.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_wrapperFileMap_2E_element::description (C_String & ioString,
                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @wrapperFileMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAbsoluteFilePath.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIsTextFile.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mWrapperDirectoryIndex.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mWrapperFileIndex.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_wrapperFileMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_wrapperFileMap_2E_element::reader_mAbsoluteFilePath (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAbsoluteFilePath ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_wrapperFileMap_2E_element::reader_mIsTextFile (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsTextFile ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_wrapperFileMap_2E_element::reader_mWrapperDirectoryIndex (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mWrapperDirectoryIndex ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_wrapperFileMap_2E_element::reader_mWrapperFileIndex (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mWrapperFileIndex ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @wrapperFileMap.element type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_wrapperFileMap_2E_element ("wrapperFileMap.element",
                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_wrapperFileMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_wrapperFileMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_wrapperFileMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_wrapperFileMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap_2E_element GALGAS_wrapperFileMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler,
                                                                                  const GALGAS_location & inErrorLocation,
                                                                                  const GALGAS_string & inErrorMessage
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_wrapperFileMap_2E_element result ;
  const GALGAS_wrapperFileMap_2E_element * p = (const GALGAS_wrapperFileMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_wrapperFileMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap_2E_element::GALGAS_wrapperDirectoryMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mRegularFileMap (),
mAttribute_mDirectoryMap (),
mAttribute_mWrapperDirectoryIndex () {
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap_2E_element::~ GALGAS_wrapperDirectoryMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap_2E_element::GALGAS_wrapperDirectoryMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_wrapperFileMap & inOperand1,
                                                                              const GALGAS_wrapperDirectoryMap & inOperand2,
                                                                              const GALGAS_uint & inOperand3) :
mAttribute_lkey (inOperand0),
mAttribute_mRegularFileMap (inOperand1),
mAttribute_mDirectoryMap (inOperand2),
mAttribute_mWrapperDirectoryIndex (inOperand3) {
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap_2E_element GALGAS_wrapperDirectoryMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_wrapperDirectoryMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                GALGAS_wrapperFileMap::constructor_emptyMap (HERE),
                                                GALGAS_wrapperDirectoryMap::constructor_emptyMap (HERE),
                                                GALGAS_uint::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap_2E_element GALGAS_wrapperDirectoryMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                              const GALGAS_wrapperFileMap & inOperand1,
                                                                                              const GALGAS_wrapperDirectoryMap & inOperand2,
                                                                                              const GALGAS_uint & inOperand3 
                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_wrapperDirectoryMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_wrapperDirectoryMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_wrapperDirectoryMap_2E_element::objectCompare (const GALGAS_wrapperDirectoryMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRegularFileMap.objectCompare (inOperand.mAttribute_mRegularFileMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDirectoryMap.objectCompare (inOperand.mAttribute_mDirectoryMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mWrapperDirectoryIndex.objectCompare (inOperand.mAttribute_mWrapperDirectoryIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_wrapperDirectoryMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRegularFileMap.isValid () && mAttribute_mDirectoryMap.isValid () && mAttribute_mWrapperDirectoryIndex.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_wrapperDirectoryMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mRegularFileMap.drop () ;
  mAttribute_mDirectoryMap.drop () ;
  mAttribute_mWrapperDirectoryIndex.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_wrapperDirectoryMap_2E_element::description (C_String & ioString,
                                                         const PMSInt32 inIndentation) const {
  ioString << "<struct @wrapperDirectoryMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRegularFileMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDirectoryMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mWrapperDirectoryIndex.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_wrapperDirectoryMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap GALGAS_wrapperDirectoryMap_2E_element::reader_mRegularFileMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRegularFileMap ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap GALGAS_wrapperDirectoryMap_2E_element::reader_mDirectoryMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDirectoryMap ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_wrapperDirectoryMap_2E_element::reader_mWrapperDirectoryIndex (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mWrapperDirectoryIndex ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @wrapperDirectoryMap.element type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_wrapperDirectoryMap_2E_element ("wrapperDirectoryMap.element",
                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_wrapperDirectoryMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_wrapperDirectoryMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_wrapperDirectoryMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_wrapperDirectoryMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap_2E_element GALGAS_wrapperDirectoryMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler,
                                                                                            const GALGAS_location & inErrorLocation,
                                                                                            const GALGAS_string & inErrorMessage
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_wrapperDirectoryMap_2E_element result ;
  const GALGAS_wrapperDirectoryMap_2E_element * p = (const GALGAS_wrapperDirectoryMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_wrapperDirectoryMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap_2E_element::GALGAS_filewrapperTemplateMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mTemplateSignature (),
mAttribute_mFilewrapperTemplatePath () {
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap_2E_element::~ GALGAS_filewrapperTemplateMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap_2E_element::GALGAS_filewrapperTemplateMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_unifiedTypeMapProxyList & inOperand1,
                                                                                    const GALGAS_lstring & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mTemplateSignature (inOperand1),
mAttribute_mFilewrapperTemplatePath (inOperand2) {
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap_2E_element GALGAS_filewrapperTemplateMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_filewrapperTemplateMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                   GALGAS_unifiedTypeMapProxyList::constructor_emptyList (HERE),
                                                   GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap_2E_element GALGAS_filewrapperTemplateMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                    const GALGAS_unifiedTypeMapProxyList & inOperand1,
                                                                                                    const GALGAS_lstring & inOperand2 
                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_filewrapperTemplateMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_filewrapperTemplateMap_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_filewrapperTemplateMap_2E_element::objectCompare (const GALGAS_filewrapperTemplateMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTemplateSignature.objectCompare (inOperand.mAttribute_mTemplateSignature) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFilewrapperTemplatePath.objectCompare (inOperand.mAttribute_mFilewrapperTemplatePath) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_filewrapperTemplateMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mTemplateSignature.isValid () && mAttribute_mFilewrapperTemplatePath.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_filewrapperTemplateMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mTemplateSignature.drop () ;
  mAttribute_mFilewrapperTemplatePath.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_filewrapperTemplateMap_2E_element::description (C_String & ioString,
                                                            const PMSInt32 inIndentation) const {
  ioString << "<struct @filewrapperTemplateMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTemplateSignature.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFilewrapperTemplatePath.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_filewrapperTemplateMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxyList GALGAS_filewrapperTemplateMap_2E_element::reader_mTemplateSignature (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTemplateSignature ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_filewrapperTemplateMap_2E_element::reader_mFilewrapperTemplatePath (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFilewrapperTemplatePath ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                   @filewrapperTemplateMap.element type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_filewrapperTemplateMap_2E_element ("filewrapperTemplateMap.element",
                                                          NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_filewrapperTemplateMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_filewrapperTemplateMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_filewrapperTemplateMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_filewrapperTemplateMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap_2E_element GALGAS_filewrapperTemplateMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                  C_Compiler * inCompiler,
                                                                                                  const GALGAS_location & inErrorLocation,
                                                                                                  const GALGAS_string & inErrorMessage
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_filewrapperTemplateMap_2E_element result ;
  const GALGAS_filewrapperTemplateMap_2E_element * p = (const GALGAS_filewrapperTemplateMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_filewrapperTemplateMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperMap_2E_element::GALGAS_filewrapperMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mFilewrapperPath (),
mAttribute_mFilewrapperExtensionList (),
mAttribute_mFilewrapperFileMap (),
mAttribute_mFilewrapperDirectoryMap (),
mAttribute_mFilewrapperTemplateMap () {
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperMap_2E_element::~ GALGAS_filewrapperMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperMap_2E_element::GALGAS_filewrapperMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_lstring & inOperand1,
                                                                    const GALGAS_lstringlist & inOperand2,
                                                                    const GALGAS_wrapperFileMap & inOperand3,
                                                                    const GALGAS_wrapperDirectoryMap & inOperand4,
                                                                    const GALGAS_filewrapperTemplateMap & inOperand5) :
mAttribute_lkey (inOperand0),
mAttribute_mFilewrapperPath (inOperand1),
mAttribute_mFilewrapperExtensionList (inOperand2),
mAttribute_mFilewrapperFileMap (inOperand3),
mAttribute_mFilewrapperDirectoryMap (inOperand4),
mAttribute_mFilewrapperTemplateMap (inOperand5) {
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperMap_2E_element GALGAS_filewrapperMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_filewrapperMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                           GALGAS_lstring::constructor_default (HERE),
                                           GALGAS_lstringlist::constructor_emptyList (HERE),
                                           GALGAS_wrapperFileMap::constructor_emptyMap (HERE),
                                           GALGAS_wrapperDirectoryMap::constructor_emptyMap (HERE),
                                           GALGAS_filewrapperTemplateMap::constructor_emptyMap (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperMap_2E_element GALGAS_filewrapperMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_lstring & inOperand1,
                                                                                    const GALGAS_lstringlist & inOperand2,
                                                                                    const GALGAS_wrapperFileMap & inOperand3,
                                                                                    const GALGAS_wrapperDirectoryMap & inOperand4,
                                                                                    const GALGAS_filewrapperTemplateMap & inOperand5 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_filewrapperMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid ()) {
    result = GALGAS_filewrapperMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_filewrapperMap_2E_element::objectCompare (const GALGAS_filewrapperMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFilewrapperPath.objectCompare (inOperand.mAttribute_mFilewrapperPath) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFilewrapperExtensionList.objectCompare (inOperand.mAttribute_mFilewrapperExtensionList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFilewrapperFileMap.objectCompare (inOperand.mAttribute_mFilewrapperFileMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFilewrapperDirectoryMap.objectCompare (inOperand.mAttribute_mFilewrapperDirectoryMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFilewrapperTemplateMap.objectCompare (inOperand.mAttribute_mFilewrapperTemplateMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_filewrapperMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFilewrapperPath.isValid () && mAttribute_mFilewrapperExtensionList.isValid () && mAttribute_mFilewrapperFileMap.isValid () && mAttribute_mFilewrapperDirectoryMap.isValid () && mAttribute_mFilewrapperTemplateMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_filewrapperMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mFilewrapperPath.drop () ;
  mAttribute_mFilewrapperExtensionList.drop () ;
  mAttribute_mFilewrapperFileMap.drop () ;
  mAttribute_mFilewrapperDirectoryMap.drop () ;
  mAttribute_mFilewrapperTemplateMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_filewrapperMap_2E_element::description (C_String & ioString,
                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @filewrapperMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFilewrapperPath.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFilewrapperExtensionList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFilewrapperFileMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFilewrapperDirectoryMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFilewrapperTemplateMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_filewrapperMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_filewrapperMap_2E_element::reader_mFilewrapperPath (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFilewrapperPath ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_filewrapperMap_2E_element::reader_mFilewrapperExtensionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFilewrapperExtensionList ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperFileMap GALGAS_filewrapperMap_2E_element::reader_mFilewrapperFileMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFilewrapperFileMap ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap GALGAS_filewrapperMap_2E_element::reader_mFilewrapperDirectoryMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFilewrapperDirectoryMap ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap GALGAS_filewrapperMap_2E_element::reader_mFilewrapperTemplateMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFilewrapperTemplateMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @filewrapperMap.element type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_filewrapperMap_2E_element ("filewrapperMap.element",
                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_filewrapperMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_filewrapperMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_filewrapperMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_filewrapperMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_filewrapperMap_2E_element GALGAS_filewrapperMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler,
                                                                                  const GALGAS_location & inErrorLocation,
                                                                                  const GALGAS_string & inErrorMessage
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_filewrapperMap_2E_element result ;
  const GALGAS_filewrapperMap_2E_element * p = (const GALGAS_filewrapperMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_filewrapperMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis_2E_element::GALGAS_optionComponentMapForSemanticAnalysis_2E_element (void) :
mAttribute_lkey (),
mAttribute_mBoolOptionMap (),
mAttribute_mUIntOptionMap (),
mAttribute_mStringOptionMap () {
}

//---------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis_2E_element::~ GALGAS_optionComponentMapForSemanticAnalysis_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis_2E_element::GALGAS_optionComponentMapForSemanticAnalysis_2E_element (const GALGAS_lstring & inOperand0,
                                                                                                                  const GALGAS_commandLineOptionMap & inOperand1,
                                                                                                                  const GALGAS_commandLineOptionMap & inOperand2,
                                                                                                                  const GALGAS_commandLineOptionMap & inOperand3) :
mAttribute_lkey (inOperand0),
mAttribute_mBoolOptionMap (inOperand1),
mAttribute_mUIntOptionMap (inOperand2),
mAttribute_mStringOptionMap (inOperand3) {
}

//---------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis_2E_element GALGAS_optionComponentMapForSemanticAnalysis_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_optionComponentMapForSemanticAnalysis_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                                  GALGAS_commandLineOptionMap::constructor_emptyMap (HERE),
                                                                  GALGAS_commandLineOptionMap::constructor_emptyMap (HERE),
                                                                  GALGAS_commandLineOptionMap::constructor_emptyMap (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis_2E_element GALGAS_optionComponentMapForSemanticAnalysis_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                                                  const GALGAS_commandLineOptionMap & inOperand1,
                                                                                                                                  const GALGAS_commandLineOptionMap & inOperand2,
                                                                                                                                  const GALGAS_commandLineOptionMap & inOperand3 
                                                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_optionComponentMapForSemanticAnalysis_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_optionComponentMapForSemanticAnalysis_2E_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_optionComponentMapForSemanticAnalysis_2E_element::objectCompare (const GALGAS_optionComponentMapForSemanticAnalysis_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBoolOptionMap.objectCompare (inOperand.mAttribute_mBoolOptionMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mUIntOptionMap.objectCompare (inOperand.mAttribute_mUIntOptionMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mStringOptionMap.objectCompare (inOperand.mAttribute_mStringOptionMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_optionComponentMapForSemanticAnalysis_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mBoolOptionMap.isValid () && mAttribute_mUIntOptionMap.isValid () && mAttribute_mStringOptionMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_optionComponentMapForSemanticAnalysis_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mBoolOptionMap.drop () ;
  mAttribute_mUIntOptionMap.drop () ;
  mAttribute_mStringOptionMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_optionComponentMapForSemanticAnalysis_2E_element::description (C_String & ioString,
                                                                           const PMSInt32 inIndentation) const {
  ioString << "<struct @optionComponentMapForSemanticAnalysis.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBoolOptionMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mUIntOptionMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mStringOptionMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_optionComponentMapForSemanticAnalysis_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_commandLineOptionMap GALGAS_optionComponentMapForSemanticAnalysis_2E_element::reader_mBoolOptionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBoolOptionMap ;
}

//---------------------------------------------------------------------------*

GALGAS_commandLineOptionMap GALGAS_optionComponentMapForSemanticAnalysis_2E_element::reader_mUIntOptionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mUIntOptionMap ;
}

//---------------------------------------------------------------------------*

GALGAS_commandLineOptionMap GALGAS_optionComponentMapForSemanticAnalysis_2E_element::reader_mStringOptionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mStringOptionMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//            @optionComponentMapForSemanticAnalysis.element type            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_optionComponentMapForSemanticAnalysis_2E_element ("optionComponentMapForSemanticAnalysis.element",
                                                                         NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_optionComponentMapForSemanticAnalysis_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_optionComponentMapForSemanticAnalysis_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_optionComponentMapForSemanticAnalysis_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_optionComponentMapForSemanticAnalysis_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis_2E_element GALGAS_optionComponentMapForSemanticAnalysis_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                                C_Compiler * inCompiler,
                                                                                                                                const GALGAS_location & inErrorLocation,
                                                                                                                                const GALGAS_string & inErrorMessage
                                                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_optionComponentMapForSemanticAnalysis_2E_element result ;
  const GALGAS_optionComponentMapForSemanticAnalysis_2E_element * p = (const GALGAS_optionComponentMapForSemanticAnalysis_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_optionComponentMapForSemanticAnalysis_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis_2E_element::GALGAS_optionMapForSemanticAnalysis_2E_element (void) :
mAttribute_lkey (),
mAttribute_mOptionType (),
mAttribute_mOptionChar (),
mAttribute_mOptionString (),
mAttribute_mComment (),
mAttribute_mDefaultValue () {
}

//---------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis_2E_element::~ GALGAS_optionMapForSemanticAnalysis_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis_2E_element::GALGAS_optionMapForSemanticAnalysis_2E_element (const GALGAS_lstring & inOperand0,
                                                                                                const GALGAS_unifiedTypeMapProxy & inOperand1,
                                                                                                const GALGAS_char & inOperand2,
                                                                                                const GALGAS_string & inOperand3,
                                                                                                const GALGAS_string & inOperand4,
                                                                                                const GALGAS_string & inOperand5) :
mAttribute_lkey (inOperand0),
mAttribute_mOptionType (inOperand1),
mAttribute_mOptionChar (inOperand2),
mAttribute_mOptionString (inOperand3),
mAttribute_mComment (inOperand4),
mAttribute_mDefaultValue (inOperand5) {
}

//---------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis_2E_element GALGAS_optionMapForSemanticAnalysis_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_optionMapForSemanticAnalysis_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                         GALGAS_unifiedTypeMapProxy::constructor_null (HERE),
                                                         GALGAS_char::constructor_default (HERE),
                                                         GALGAS_string::constructor_default (HERE),
                                                         GALGAS_string::constructor_default (HERE),
                                                         GALGAS_string::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis_2E_element GALGAS_optionMapForSemanticAnalysis_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                                const GALGAS_unifiedTypeMapProxy & inOperand1,
                                                                                                                const GALGAS_char & inOperand2,
                                                                                                                const GALGAS_string & inOperand3,
                                                                                                                const GALGAS_string & inOperand4,
                                                                                                                const GALGAS_string & inOperand5 
                                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_optionMapForSemanticAnalysis_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid ()) {
    result = GALGAS_optionMapForSemanticAnalysis_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_optionMapForSemanticAnalysis_2E_element::objectCompare (const GALGAS_optionMapForSemanticAnalysis_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOptionType.objectCompare (inOperand.mAttribute_mOptionType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOptionChar.objectCompare (inOperand.mAttribute_mOptionChar) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOptionString.objectCompare (inOperand.mAttribute_mOptionString) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mComment.objectCompare (inOperand.mAttribute_mComment) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDefaultValue.objectCompare (inOperand.mAttribute_mDefaultValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_optionMapForSemanticAnalysis_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mOptionType.isValid () && mAttribute_mOptionChar.isValid () && mAttribute_mOptionString.isValid () && mAttribute_mComment.isValid () && mAttribute_mDefaultValue.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mOptionType.drop () ;
  mAttribute_mOptionChar.drop () ;
  mAttribute_mOptionString.drop () ;
  mAttribute_mComment.drop () ;
  mAttribute_mDefaultValue.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis_2E_element::description (C_String & ioString,
                                                                  const PMSInt32 inIndentation) const {
  ioString << "<struct @optionMapForSemanticAnalysis.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOptionType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOptionChar.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOptionString.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mComment.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDefaultValue.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_optionMapForSemanticAnalysis_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_optionMapForSemanticAnalysis_2E_element::reader_mOptionType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionType ;
}

//---------------------------------------------------------------------------*

GALGAS_char GALGAS_optionMapForSemanticAnalysis_2E_element::reader_mOptionChar (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionChar ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_optionMapForSemanticAnalysis_2E_element::reader_mOptionString (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionString ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_optionMapForSemanticAnalysis_2E_element::reader_mComment (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mComment ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_optionMapForSemanticAnalysis_2E_element::reader_mDefaultValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDefaultValue ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                @optionMapForSemanticAnalysis.element type                 *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_optionMapForSemanticAnalysis_2E_element ("optionMapForSemanticAnalysis.element",
                                                                NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_optionMapForSemanticAnalysis_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_optionMapForSemanticAnalysis_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_optionMapForSemanticAnalysis_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_optionMapForSemanticAnalysis_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis_2E_element GALGAS_optionMapForSemanticAnalysis_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                              C_Compiler * inCompiler,
                                                                                                              const GALGAS_location & inErrorLocation,
                                                                                                              const GALGAS_string & inErrorMessage
                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_optionMapForSemanticAnalysis_2E_element result ;
  const GALGAS_optionMapForSemanticAnalysis_2E_element * p = (const GALGAS_optionMapForSemanticAnalysis_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_optionMapForSemanticAnalysis_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::~ GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::objectCompare (const GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::description (C_String & ioString,
                                                                            const PMSInt32 inIndentation) const {
  ioString << "<struct @lexiqueComponentMapForSemanticAnalysis.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//           @lexiqueComponentMapForSemanticAnalysis.element type            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element ("lexiqueComponentMapForSemanticAnalysis.element",
                                                                          NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                                  C_Compiler * inCompiler,
                                                                                                                                  const GALGAS_location & inErrorLocation,
                                                                                                                                  const GALGAS_string & inErrorMessage
                                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element result ;
  const GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element * p = (const GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType_2E_element::GALGAS_categoryMethodMapForType_2E_element (void) :
mAttribute_lkey (),
mAttribute_mFormalParameterList () {
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType_2E_element::~ GALGAS_categoryMethodMapForType_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType_2E_element::GALGAS_categoryMethodMapForType_2E_element (const GALGAS_lstring & inOperand0,
                                                                                        const GALGAS_formalParameterListAST & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mFormalParameterList (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType_2E_element GALGAS_categoryMethodMapForType_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_categoryMethodMapForType_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                     GALGAS_formalParameterListAST::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType_2E_element GALGAS_categoryMethodMapForType_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                        const GALGAS_formalParameterListAST & inOperand1 
                                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForType_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_categoryMethodMapForType_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_categoryMethodMapForType_2E_element::objectCompare (const GALGAS_categoryMethodMapForType_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFormalParameterList.objectCompare (inOperand.mAttribute_mFormalParameterList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_categoryMethodMapForType_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFormalParameterList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForType_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mFormalParameterList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForType_2E_element::description (C_String & ioString,
                                                              const PMSInt32 inIndentation) const {
  ioString << "<struct @categoryMethodMapForType.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFormalParameterList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryMethodMapForType_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterListAST GALGAS_categoryMethodMapForType_2E_element::reader_mFormalParameterList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFormalParameterList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                  @categoryMethodMapForType.element type                   *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryMethodMapForType_2E_element ("categoryMethodMapForType.element",
                                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryMethodMapForType_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryMethodMapForType_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryMethodMapForType_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryMethodMapForType_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType_2E_element GALGAS_categoryMethodMapForType_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler,
                                                                                                      const GALGAS_location & inErrorLocation,
                                                                                                      const GALGAS_string & inErrorMessage
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForType_2E_element result ;
  const GALGAS_categoryMethodMapForType_2E_element * p = (const GALGAS_categoryMethodMapForType_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryMethodMapForType_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext_2E_element::GALGAS_categoryMethodMapForBuildingContext_2E_element (void) :
mAttribute_lkey (),
mAttribute_mCategoryMethodMapForType () {
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext_2E_element::~ GALGAS_categoryMethodMapForBuildingContext_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext_2E_element::GALGAS_categoryMethodMapForBuildingContext_2E_element (const GALGAS_lstring & inOperand0,
                                                                                                              const GALGAS_categoryMethodMapForType & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mCategoryMethodMapForType (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext_2E_element GALGAS_categoryMethodMapForBuildingContext_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_categoryMethodMapForBuildingContext_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                                GALGAS_categoryMethodMapForType::constructor_emptyMap (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext_2E_element GALGAS_categoryMethodMapForBuildingContext_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                                              const GALGAS_categoryMethodMapForType & inOperand1 
                                                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForBuildingContext_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_categoryMethodMapForBuildingContext_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_categoryMethodMapForBuildingContext_2E_element::objectCompare (const GALGAS_categoryMethodMapForBuildingContext_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCategoryMethodMapForType.objectCompare (inOperand.mAttribute_mCategoryMethodMapForType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_categoryMethodMapForBuildingContext_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCategoryMethodMapForType.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForBuildingContext_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mCategoryMethodMapForType.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForBuildingContext_2E_element::description (C_String & ioString,
                                                                         const PMSInt32 inIndentation) const {
  ioString << "<struct @categoryMethodMapForBuildingContext.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCategoryMethodMapForType.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryMethodMapForBuildingContext_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType GALGAS_categoryMethodMapForBuildingContext_2E_element::reader_mCategoryMethodMapForType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCategoryMethodMapForType ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//             @categoryMethodMapForBuildingContext.element type             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryMethodMapForBuildingContext_2E_element ("categoryMethodMapForBuildingContext.element",
                                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryMethodMapForBuildingContext_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryMethodMapForBuildingContext_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryMethodMapForBuildingContext_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryMethodMapForBuildingContext_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext_2E_element GALGAS_categoryMethodMapForBuildingContext_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                            C_Compiler * inCompiler,
                                                                                                                            const GALGAS_location & inErrorLocation,
                                                                                                                            const GALGAS_string & inErrorMessage
                                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForBuildingContext_2E_element result ;
  const GALGAS_categoryMethodMapForBuildingContext_2E_element * p = (const GALGAS_categoryMethodMapForBuildingContext_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryMethodMapForBuildingContext_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType_2E_element::GALGAS_categoryModifierMapForType_2E_element (void) :
mAttribute_lkey (),
mAttribute_mFormalParameterList () {
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType_2E_element::~ GALGAS_categoryModifierMapForType_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType_2E_element::GALGAS_categoryModifierMapForType_2E_element (const GALGAS_lstring & inOperand0,
                                                                                            const GALGAS_formalParameterListAST & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mFormalParameterList (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType_2E_element GALGAS_categoryModifierMapForType_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_categoryModifierMapForType_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                       GALGAS_formalParameterListAST::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType_2E_element GALGAS_categoryModifierMapForType_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                            const GALGAS_formalParameterListAST & inOperand1 
                                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForType_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_categoryModifierMapForType_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_categoryModifierMapForType_2E_element::objectCompare (const GALGAS_categoryModifierMapForType_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFormalParameterList.objectCompare (inOperand.mAttribute_mFormalParameterList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_categoryModifierMapForType_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFormalParameterList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForType_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mFormalParameterList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForType_2E_element::description (C_String & ioString,
                                                                const PMSInt32 inIndentation) const {
  ioString << "<struct @categoryModifierMapForType.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFormalParameterList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryModifierMapForType_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterListAST GALGAS_categoryModifierMapForType_2E_element::reader_mFormalParameterList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFormalParameterList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                 @categoryModifierMapForType.element type                  *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryModifierMapForType_2E_element ("categoryModifierMapForType.element",
                                                              NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryModifierMapForType_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryModifierMapForType_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryModifierMapForType_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryModifierMapForType_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType_2E_element GALGAS_categoryModifierMapForType_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                          C_Compiler * inCompiler,
                                                                                                          const GALGAS_location & inErrorLocation,
                                                                                                          const GALGAS_string & inErrorMessage
                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForType_2E_element result ;
  const GALGAS_categoryModifierMapForType_2E_element * p = (const GALGAS_categoryModifierMapForType_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryModifierMapForType_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext_2E_element::GALGAS_categoryModifierMapForBuildingContext_2E_element (void) :
mAttribute_lkey (),
mAttribute_mCategoryModifierMapForType () {
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext_2E_element::~ GALGAS_categoryModifierMapForBuildingContext_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext_2E_element::GALGAS_categoryModifierMapForBuildingContext_2E_element (const GALGAS_lstring & inOperand0,
                                                                                                                  const GALGAS_categoryModifierMapForType & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mCategoryModifierMapForType (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext_2E_element GALGAS_categoryModifierMapForBuildingContext_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_categoryModifierMapForBuildingContext_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                                  GALGAS_categoryModifierMapForType::constructor_emptyMap (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext_2E_element GALGAS_categoryModifierMapForBuildingContext_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                                                  const GALGAS_categoryModifierMapForType & inOperand1 
                                                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForBuildingContext_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_categoryModifierMapForBuildingContext_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_categoryModifierMapForBuildingContext_2E_element::objectCompare (const GALGAS_categoryModifierMapForBuildingContext_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCategoryModifierMapForType.objectCompare (inOperand.mAttribute_mCategoryModifierMapForType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_categoryModifierMapForBuildingContext_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCategoryModifierMapForType.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForBuildingContext_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mCategoryModifierMapForType.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForBuildingContext_2E_element::description (C_String & ioString,
                                                                           const PMSInt32 inIndentation) const {
  ioString << "<struct @categoryModifierMapForBuildingContext.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCategoryModifierMapForType.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryModifierMapForBuildingContext_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType GALGAS_categoryModifierMapForBuildingContext_2E_element::reader_mCategoryModifierMapForType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCategoryModifierMapForType ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//            @categoryModifierMapForBuildingContext.element type            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryModifierMapForBuildingContext_2E_element ("categoryModifierMapForBuildingContext.element",
                                                                         NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryModifierMapForBuildingContext_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryModifierMapForBuildingContext_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryModifierMapForBuildingContext_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryModifierMapForBuildingContext_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext_2E_element GALGAS_categoryModifierMapForBuildingContext_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                                C_Compiler * inCompiler,
                                                                                                                                const GALGAS_location & inErrorLocation,
                                                                                                                                const GALGAS_string & inErrorMessage
                                                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForBuildingContext_2E_element result ;
  const GALGAS_categoryModifierMapForBuildingContext_2E_element * p = (const GALGAS_categoryModifierMapForBuildingContext_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryModifierMapForBuildingContext_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType_2E_element::GALGAS_categoryReaderMapForType_2E_element (void) :
mAttribute_lkey (),
mAttribute_mResultTypeName (),
mAttribute_mInputFormalParameterList () {
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType_2E_element::~ GALGAS_categoryReaderMapForType_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType_2E_element::GALGAS_categoryReaderMapForType_2E_element (const GALGAS_lstring & inOperand0,
                                                                                        const GALGAS_lstring & inOperand1,
                                                                                        const GALGAS_formalInputParameterListAST & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mResultTypeName (inOperand1),
mAttribute_mInputFormalParameterList (inOperand2) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType_2E_element GALGAS_categoryReaderMapForType_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_categoryReaderMapForType_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                     GALGAS_lstring::constructor_default (HERE),
                                                     GALGAS_formalInputParameterListAST::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType_2E_element GALGAS_categoryReaderMapForType_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                        const GALGAS_lstring & inOperand1,
                                                                                                        const GALGAS_formalInputParameterListAST & inOperand2 
                                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForType_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_categoryReaderMapForType_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_categoryReaderMapForType_2E_element::objectCompare (const GALGAS_categoryReaderMapForType_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mResultTypeName.objectCompare (inOperand.mAttribute_mResultTypeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInputFormalParameterList.objectCompare (inOperand.mAttribute_mInputFormalParameterList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_categoryReaderMapForType_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mResultTypeName.isValid () && mAttribute_mInputFormalParameterList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForType_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mResultTypeName.drop () ;
  mAttribute_mInputFormalParameterList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForType_2E_element::description (C_String & ioString,
                                                              const PMSInt32 inIndentation) const {
  ioString << "<struct @categoryReaderMapForType.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mResultTypeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInputFormalParameterList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryReaderMapForType_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryReaderMapForType_2E_element::reader_mResultTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mResultTypeName ;
}

//---------------------------------------------------------------------------*

GALGAS_formalInputParameterListAST GALGAS_categoryReaderMapForType_2E_element::reader_mInputFormalParameterList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInputFormalParameterList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                  @categoryReaderMapForType.element type                   *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryReaderMapForType_2E_element ("categoryReaderMapForType.element",
                                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryReaderMapForType_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryReaderMapForType_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryReaderMapForType_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryReaderMapForType_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType_2E_element GALGAS_categoryReaderMapForType_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler,
                                                                                                      const GALGAS_location & inErrorLocation,
                                                                                                      const GALGAS_string & inErrorMessage
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForType_2E_element result ;
  const GALGAS_categoryReaderMapForType_2E_element * p = (const GALGAS_categoryReaderMapForType_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryReaderMapForType_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext_2E_element::GALGAS_categoryReaderMapForBuildingContext_2E_element (void) :
mAttribute_lkey (),
mAttribute_mCategoryReaderMapForType () {
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext_2E_element::~ GALGAS_categoryReaderMapForBuildingContext_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext_2E_element::GALGAS_categoryReaderMapForBuildingContext_2E_element (const GALGAS_lstring & inOperand0,
                                                                                                              const GALGAS_categoryReaderMapForType & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mCategoryReaderMapForType (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext_2E_element GALGAS_categoryReaderMapForBuildingContext_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_categoryReaderMapForBuildingContext_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                                GALGAS_categoryReaderMapForType::constructor_emptyMap (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext_2E_element GALGAS_categoryReaderMapForBuildingContext_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                                              const GALGAS_categoryReaderMapForType & inOperand1 
                                                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForBuildingContext_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_categoryReaderMapForBuildingContext_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_categoryReaderMapForBuildingContext_2E_element::objectCompare (const GALGAS_categoryReaderMapForBuildingContext_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCategoryReaderMapForType.objectCompare (inOperand.mAttribute_mCategoryReaderMapForType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_categoryReaderMapForBuildingContext_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCategoryReaderMapForType.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForBuildingContext_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mCategoryReaderMapForType.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForBuildingContext_2E_element::description (C_String & ioString,
                                                                         const PMSInt32 inIndentation) const {
  ioString << "<struct @categoryReaderMapForBuildingContext.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCategoryReaderMapForType.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryReaderMapForBuildingContext_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType GALGAS_categoryReaderMapForBuildingContext_2E_element::reader_mCategoryReaderMapForType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCategoryReaderMapForType ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//             @categoryReaderMapForBuildingContext.element type             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryReaderMapForBuildingContext_2E_element ("categoryReaderMapForBuildingContext.element",
                                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryReaderMapForBuildingContext_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryReaderMapForBuildingContext_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryReaderMapForBuildingContext_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryReaderMapForBuildingContext_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext_2E_element GALGAS_categoryReaderMapForBuildingContext_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                            C_Compiler * inCompiler,
                                                                                                                            const GALGAS_location & inErrorLocation,
                                                                                                                            const GALGAS_string & inErrorMessage
                                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForBuildingContext_2E_element result ;
  const GALGAS_categoryReaderMapForBuildingContext_2E_element * p = (const GALGAS_categoryReaderMapForBuildingContext_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryReaderMapForBuildingContext_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap_2E_element::GALGAS_wrapperExtensionMap_2E_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap_2E_element::~ GALGAS_wrapperExtensionMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap_2E_element::GALGAS_wrapperExtensionMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap_2E_element GALGAS_wrapperExtensionMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_wrapperExtensionMap_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap_2E_element GALGAS_wrapperExtensionMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_wrapperExtensionMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_wrapperExtensionMap_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_wrapperExtensionMap_2E_element::objectCompare (const GALGAS_wrapperExtensionMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_wrapperExtensionMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_wrapperExtensionMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_wrapperExtensionMap_2E_element::description (C_String & ioString,
                                                         const PMSInt32 inIndentation) const {
  ioString << "<struct @wrapperExtensionMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_wrapperExtensionMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @wrapperExtensionMap.element type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_wrapperExtensionMap_2E_element ("wrapperExtensionMap.element",
                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_wrapperExtensionMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_wrapperExtensionMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_wrapperExtensionMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_wrapperExtensionMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap_2E_element GALGAS_wrapperExtensionMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler,
                                                                                            const GALGAS_location & inErrorLocation,
                                                                                            const GALGAS_string & inErrorMessage
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_wrapperExtensionMap_2E_element result ;
  const GALGAS_wrapperExtensionMap_2E_element * p = (const GALGAS_wrapperExtensionMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_wrapperExtensionMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->emitSemanticError (inErrorLocation, inErrorMessage COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


