//---------------------------------------------------------------------------*
//                                                                           *
//                File 'include_AC_instruction_ForGrammar.h'                 *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 18th, 2006, at 17h37'32"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1

class C_HTML_FileWrite ;
class cVocabulary ;
class cPureBNFproductionsList ;

//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_AC_instruction_ForGrammar'               *
//                                                                           *
//---------------------------------------------------------------------------*

#ifndef AC_instruction_ForGrammar_DEFINED
#define AC_instruction_ForGrammar_DEFINED

//---------------------------------------------------------------------------*

class cPtr_AC_instruction_ForGrammar : public C_GGS_Object {
//--- START OF USER ZONE 2

  public : virtual bool isSameSyntaxInstructionThan (C_Lexique & _inLexique,
                          cPtr_AC_instruction_ForGrammar * inInstruction,
                          const GGS_location & inEndOfInstructionListLocation) const = 0 ;
  public : virtual void printInstructionForGrammar (C_HTML_FileWrite & inHTMLfile) = 0 ;
  public : virtual void fixNewNonterminalSymbols (cVocabulary & ioVocabulary,
                                                  const C_String & inSyntaxComponentName,
                                                  sint32 & ioCount) = 0 ;
  public : virtual void buildRightDerivation (const sint32 inTerminalSymbolsCount,
                                      TC_UniqueArray <sint16> & ioInstructionsList) = 0 ;
  public : virtual void buildSelectAndRepeatProductions (const sint32 inTerminalSymbolsCount,
                                           const C_String & inSyntaxComponentName,
                                           cPureBNFproductionsList & ioProductions) = 0 ;
  public : virtual void fixInfos (class cInfo & inInfo,
                                  C_Lexique & inLexique) = 0 ;

//--- END OF USER ZONE 2

  public : cPtr_AC_instruction_ForGrammar (const GGS_location &  COMMA_LOCATION_ARGS) ;
  public : GGS_location  mStartLocation ;
  public : virtual void appendForDescription (C_String & ioString) const = 0 ;
} ;

//---------------------------------------------------------------------------*

#endif

