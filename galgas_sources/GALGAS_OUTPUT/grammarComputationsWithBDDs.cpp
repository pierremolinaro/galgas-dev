//---------------------------------------------------------------------------*
//                                                                           *
//                  File 'grammarComputationsWithBDDs.cpp'                   *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     october 19th, 2009, at 14h54'51"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "grammarComputationsWithBDDs.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "grammarComputationsWithBDDs.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                     Class for 'grammarDomain' Domain                      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_grammarDomain::GGS_grammarDomain (void) :
AC_galgas_domain (),
mDomain_V (),
mBDDVariableCountForDomain_V (0),
mBDDForRelation_nonterminalsWithEmptyProduction (),
mBDDForRelation_nonterminalsWithOneElementProduction (),
mBDDForRelation_nonterminalsWithTwoElementProduction () {
}

//---------------------------------------------------------------------------*

GGS_grammarDomain::~GGS_grammarDomain (void) {
}

//---------------------------------------------------------------------------*

GGS_grammarDomain GGS_grammarDomain::
constructor_domainWithNames (C_Compiler & /* inLexique */,
                             const GGS_stringlist & inDomain_V
                             COMMA_UNUSED_LOCATION_ARGS) {
  GGS_grammarDomain result ;
  result.mIsBuilt = true ;
  result.mDomain_V = inDomain_V ;
  result.mBDDVariableCountForDomain_V = AC_galgas_domain::bitCountForDomainSize (inDomain_V.count ()) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_grammarDomain::
modifier_addToNonterminalsWithEmptyProduction (C_Compiler & /* inLexique */,
                                    const GGS_uint & inValue_0
                                    COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt () && inValue_0.isBuilt ()) {
    PMUInt16 idx = 0 ;
    const C_BDD value_0 = C_BDD::varCompareConst (idx, mBDDVariableCountForDomain_V, C_BDD::kEqual, inValue_0.uintValue ()) ;
    idx += mBDDVariableCountForDomain_V ;
    mBDDForRelation_nonterminalsWithEmptyProduction |= value_0 ;
  }
}

//---------------------------------------------------------------------------*

void GGS_grammarDomain::
modifier_resetNonterminalsWithEmptyProduction (C_Compiler & /* inLexique */
                                    COMMA_UNUSED_LOCATION_ARGS) {
  mBDDForRelation_nonterminalsWithEmptyProduction.setToFalse () ;
}

//---------------------------------------------------------------------------*

void GGS_grammarDomain::
modifier_addToNonterminalsWithOneElementProduction (C_Compiler & /* inLexique */,
                                    const GGS_uint & inValue_0,
                                    const GGS_uint & inValue_1
                                    COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt () && inValue_0.isBuilt () && inValue_1.isBuilt ()) {
    PMUInt16 idx = 0 ;
    const C_BDD value_0 = C_BDD::varCompareConst (idx, mBDDVariableCountForDomain_V, C_BDD::kEqual, inValue_0.uintValue ()) ;
    idx += mBDDVariableCountForDomain_V ;
    const C_BDD value_1 = C_BDD::varCompareConst (idx, mBDDVariableCountForDomain_V, C_BDD::kEqual, inValue_1.uintValue ()) ;
    idx += mBDDVariableCountForDomain_V ;
    mBDDForRelation_nonterminalsWithOneElementProduction |= value_0 & value_1 ;
  }
}

//---------------------------------------------------------------------------*

void GGS_grammarDomain::
modifier_resetNonterminalsWithOneElementProduction (C_Compiler & /* inLexique */
                                    COMMA_UNUSED_LOCATION_ARGS) {
  mBDDForRelation_nonterminalsWithOneElementProduction.setToFalse () ;
}

//---------------------------------------------------------------------------*

void GGS_grammarDomain::
modifier_addToNonterminalsWithTwoElementProduction (C_Compiler & /* inLexique */,
                                    const GGS_uint & inValue_0,
                                    const GGS_uint & inValue_1,
                                    const GGS_uint & inValue_2
                                    COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt () && inValue_0.isBuilt () && inValue_1.isBuilt () && inValue_2.isBuilt ()) {
    PMUInt16 idx = 0 ;
    const C_BDD value_0 = C_BDD::varCompareConst (idx, mBDDVariableCountForDomain_V, C_BDD::kEqual, inValue_0.uintValue ()) ;
    idx += mBDDVariableCountForDomain_V ;
    const C_BDD value_1 = C_BDD::varCompareConst (idx, mBDDVariableCountForDomain_V, C_BDD::kEqual, inValue_1.uintValue ()) ;
    idx += mBDDVariableCountForDomain_V ;
    const C_BDD value_2 = C_BDD::varCompareConst (idx, mBDDVariableCountForDomain_V, C_BDD::kEqual, inValue_2.uintValue ()) ;
    idx += mBDDVariableCountForDomain_V ;
    mBDDForRelation_nonterminalsWithTwoElementProduction |= value_0 & value_1 & value_2 ;
  }
}

//---------------------------------------------------------------------------*

void GGS_grammarDomain::
modifier_resetNonterminalsWithTwoElementProduction (C_Compiler & /* inLexique */
                                    COMMA_UNUSED_LOCATION_ARGS) {
  mBDDForRelation_nonterminalsWithTwoElementProduction.setToFalse () ;
}

//---------------------------------------------------------------------------*

