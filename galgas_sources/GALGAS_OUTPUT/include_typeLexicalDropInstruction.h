//---------------------------------------------------------------------------*
//                                                                           *
//               File 'include_typeLexicalDropInstruction.h'                 *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                    december 10th, 2006, at 20h43'35"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_typeLexicalDropInstruction'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeLexicalDropInstruction : public cPtr_typeInstructionLexicale {
  private : typedef cPtr_typeInstructionLexicale inherited ;
//--- START OF USER ZONE 2

public : virtual bool instruction__uses_loop_variable (void) const ;
public : virtual void generate_scanner_instruction (const C_String & inLexiqueName,
                                                    const bool inGenerateEnterToken,
                                                    AC_OutputStream & inCppFile) const ;

//--- END OF USER ZONE 2

  public : cPtr_typeLexicalDropInstruction (const GGS_lstring &  COMMA_LOCATION_ARGS) ;
  public : GGS_lstring  attributTerminal ;
//--- Method for 'description' reader
  public : virtual void appendForDescription (C_Lexique & _inLexique,
                                              C_String & ioString,
                                              const sint32 inIndentation
                                              COMMA_LOCATION_ARGS) const ;
//--- Comparison
  public : virtual bool isEqualToObject (const C_GGS_Object * inOperand) const ;
} ;

//---------------------------------------------------------------------------*

