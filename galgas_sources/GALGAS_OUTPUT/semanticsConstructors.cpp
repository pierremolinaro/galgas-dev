//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semanticsConstructors.cpp'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     october 27th, 2010, at 19h33'5"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsConstructors.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsConstructors.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "enterConstructorWithoutArgument"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterConstructorWithoutArgument (C_CompilerEx & inLexique,
                                GGS_constructorMap  & var_cas_ioConstructorMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inConstructorName,
                                const GGS_string  var_cas_inReturnedTypeName,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterConstructorWithoutArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapProxy  var_cas_returnedTypeIndex ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inReturnedTypeName, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (33)) ;
  var_cas_ioConstructorMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inConstructorName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (35)), GGS_unifiedTypeMapProxyList ::constructor_emptyList (), var_cas_inHasLexiqueAndLocationArguments, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (34)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterConstructorWithoutArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "enterConstructorWithArgument"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterConstructorWithArgument (C_CompilerEx & inLexique,
                                GGS_constructorMap  & var_cas_ioConstructorMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inConstructorName,
                                const GGS_string  var_cas_inArgument1TypeName,
                                const GGS_string  var_cas_inReturnedTypeName,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterConstructorWithArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapProxy  var_cas_returnedTypeIndex ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inReturnedTypeName, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (53)) ;
  GGS_unifiedTypeMapProxy  var_cas_t ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inArgument1TypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (55)) ;
  var_cas_ioConstructorMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inConstructorName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (57)), GGS_unifiedTypeMapProxyList ::constructor_listWithValue (var_cas_t), var_cas_inHasLexiqueAndLocationArguments, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (56)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterConstructorWithArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "enterConstructorWith2Arguments"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterConstructorWith2Arguments (C_CompilerEx & inLexique,
                                GGS_constructorMap  & var_cas_ioConstructorMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inConstructorName,
                                const GGS_string  var_cas_inArgument1TypeName,
                                const GGS_string  var_cas_inArgument2TypeName,
                                const GGS_string  var_cas_inReturnedTypeName,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterConstructorWith2Arguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapProxy  var_cas_returnedTypeIndex ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inReturnedTypeName, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (76)) ;
  GGS_unifiedTypeMapProxyList  var_cas_argumentTypeList = GGS_unifiedTypeMapProxyList ::constructor_emptyList () ;
  GGS_unifiedTypeMapProxy  var_cas_t ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inArgument1TypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (79)) ;
  var_cas_argumentTypeList.addAssign_operation (var_cas_t) ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inArgument2TypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (81)) ;
  var_cas_argumentTypeList.addAssign_operation (var_cas_t) ;
  var_cas_ioConstructorMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inConstructorName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (84)), var_cas_argumentTypeList, var_cas_inHasLexiqueAndLocationArguments, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (83)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterConstructorWith2Arguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "enterConstructorWith3Arguments"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterConstructorWith3Arguments (C_CompilerEx & inLexique,
                                GGS_constructorMap  & var_cas_ioConstructorMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inConstructorName,
                                const GGS_string  var_cas_inArgument1TypeName,
                                const GGS_string  var_cas_inArgument2TypeName,
                                const GGS_string  var_cas_inArgument3TypeName,
                                const GGS_string  var_cas_inReturnedTypeName,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterConstructorWith3Arguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapProxy  var_cas_returnedTypeIndex ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inReturnedTypeName, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (104)) ;
  GGS_unifiedTypeMapProxy  var_cas_t ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inArgument1TypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (106)) ;
  GGS_unifiedTypeMapProxyList  var_cas_argumentTypeList = GGS_unifiedTypeMapProxyList ::constructor_emptyList () ;
  var_cas_argumentTypeList.addAssign_operation (var_cas_t) ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inArgument2TypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (109)) ;
  var_cas_argumentTypeList.addAssign_operation (var_cas_t) ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inArgument3TypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (111)) ;
  var_cas_argumentTypeList.addAssign_operation (var_cas_t) ;
  var_cas_ioConstructorMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inConstructorName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (114)), var_cas_argumentTypeList, var_cas_inHasLexiqueAndLocationArguments, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (113)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterConstructorWith3Arguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@stringPredefinedTypeAST.getConstructorMap'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__stringPredefinedTypeAST__getConstructorMap (C_CompilerEx & inLexique,
                                const cPtr_stringPredefinedTypeAST * operand_5192,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5192 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (127)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("retrieveAndResetTemplateString"),  GGS_string ("string"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (128)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithVersionString"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (129)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithSourceFilePath"),  GGS_string ("string"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (130)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithCurrentDirectory"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (131)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithMainFirstArgument"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (132)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithContentsOfFile"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (133)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithCurrentDateTime"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (134)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithEnvironmentVariable"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (135)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithEnvironmentVariableOrEmpty"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (136)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("CppLineComment"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (137)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("CppTitleComment"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (138)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("CppString"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (139)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("CppChar"),  GGS_string ("char"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (140)) ;
    ::routine_enterConstructorWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("componentsJoinedByString"),  GGS_string ("stringlist"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (141)) ;
    ::routine_enterConstructorWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithSequenceOfCharacters"),  GGS_string ("char"),  GGS_string ("uint"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (142)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@applicationPredefinedTypeAST.getConstructorMap'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__applicationPredefinedTypeAST__getConstructorMap (C_CompilerEx & inLexique,
                                const cPtr_applicationPredefinedTypeAST * operand_7147,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7147 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (151)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("boolOptionNameList"),  GGS_string ("2stringlist"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (153)) ;
    ::routine_enterConstructorWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("boolOptionInvocationLetter"),  GGS_string ("string"),  GGS_string ("string"),  GGS_string ("char"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (154)) ;
    ::routine_enterConstructorWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("boolOptionInvocationString"),  GGS_string ("string"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (155)) ;
    ::routine_enterConstructorWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("boolOptionCommentString"),  GGS_string ("string"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (156)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uintOptionNameList"),  GGS_string ("2stringlist"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (158)) ;
    ::routine_enterConstructorWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uintOptionInvocationLetter"),  GGS_string ("string"),  GGS_string ("string"),  GGS_string ("char"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (159)) ;
    ::routine_enterConstructorWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uintOptionInvocationString"),  GGS_string ("string"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (160)) ;
    ::routine_enterConstructorWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uintOptionCommentString"),  GGS_string ("string"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (161)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringOptionNameList"),  GGS_string ("2stringlist"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (163)) ;
    ::routine_enterConstructorWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringOptionInvocationLetter"),  GGS_string ("string"),  GGS_string ("string"),  GGS_string ("char"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (164)) ;
    ::routine_enterConstructorWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringOptionInvocationString"),  GGS_string ("string"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (165)) ;
    ::routine_enterConstructorWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringOptionCommentString"),  GGS_string ("string"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (166)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@charPredefinedTypeAST.getConstructorMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__charPredefinedTypeAST__getConstructorMap (C_CompilerEx & inLexique,
                                const cPtr_charPredefinedTypeAST * operand_9003,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9003 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("replacementCharacter"),  GGS_string ("char"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (176)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("unicodeCharacterWithUnsigned"),  GGS_string ("uint"),  GGS_string ("char"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (177)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@uintPredefinedTypeAST.getConstructorMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__uintPredefinedTypeAST__getConstructorMap (C_CompilerEx & inLexique,
                                const cPtr_uintPredefinedTypeAST * operand_9478,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9478 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (186)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("max"),  GGS_string ("uint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (187)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("errorCount"),  GGS_string ("uint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (188)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("warningCount"),  GGS_string ("uint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (189)) ;
    ::routine_enterConstructorWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("valueWithMask"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (190)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@sintPredefinedTypeAST.getConstructorMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sintPredefinedTypeAST__getConstructorMap (C_CompilerEx & inLexique,
                                const cPtr_sintPredefinedTypeAST * operand_10116,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10116 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (199)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("max"),  GGS_string ("sint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (200)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("min"),  GGS_string ("sint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (201)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@uint64PredefinedTypeAST.getConstructorMap'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__uint64PredefinedTypeAST__getConstructorMap (C_CompilerEx & inLexique,
                                const cPtr_uint64PredefinedTypeAST * operand_10546,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10546 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (210)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("max"),  GGS_string ("uint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (211)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint64MaskWithCompressedBitString"),  GGS_string ("string"),  GGS_string ("uint64"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (212)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint64BaseValueWithCompressedBitString"),  GGS_string ("string"),  GGS_string ("uint64"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (213)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint64WithBitString"),  GGS_string ("string"),  GGS_string ("uint64"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (214)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@sint64PredefinedTypeAST.getConstructorMap'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sint64PredefinedTypeAST__getConstructorMap (C_CompilerEx & inLexique,
                                const cPtr_sint64PredefinedTypeAST * operand_11257,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11257 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (223)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("max"),  GGS_string ("sint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (224)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("min"),  GGS_string ("sint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (225)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@stringsetPredefinedTypeAST.getConstructorMap'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__stringsetPredefinedTypeAST__getConstructorMap (C_CompilerEx & inLexique,
                                const cPtr_stringsetPredefinedTypeAST * operand_11694,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11694 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (234)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("emptySet"),  GGS_string ("stringset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (235)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("setWithString"),  GGS_string ("string"),  GGS_string ("stringset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (236)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@binarysetPredefinedTypeAST.getConstructorMap'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__binarysetPredefinedTypeAST__getConstructorMap (C_CompilerEx & inLexique,
                                const cPtr_binarysetPredefinedTypeAST * operand_12159,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12159 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (245)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithBit"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (246)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("emptyBinarySet"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (247)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("fullBinarySet"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (248)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithPredicateString"),  GGS_string ("string"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (249)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithNotEqualComparison"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (250)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithEqualComparison"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (251)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithStrictLowerComparison"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (252)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithStrictGreaterComparison"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (253)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithLowerOrEqualComparison"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (254)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithGreaterOrEqualComparison"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (255)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithEqualToConstant"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint64"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (256)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithNotEqualToConstant"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint64"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (257)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithStrictLowerThanConstant"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint64"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (258)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithStrictGreaterThanConstant"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint64"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (259)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithLowerOrEqualToConstant"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint64"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (260)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithGreaterOrEqualToConstant"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint64"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (261)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithITE"),  GGS_string ("binaryset"),  GGS_string ("binaryset"),  GGS_string ("binaryset"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (262)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@typePredefinedTypeAST.getConstructorMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__typePredefinedTypeAST__getConstructorMap (C_CompilerEx & inLexique,
                                const cPtr_typePredefinedTypeAST * operand_14728,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14728 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (271)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("typeList"),  GGS_string ("typelist"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (272)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@dataPredefinedTypeAST.getConstructorMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__dataPredefinedTypeAST__getConstructorMap (C_CompilerEx & inLexique,
                                const cPtr_dataPredefinedTypeAST * operand_15079,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15079 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (281)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("emptyData"),  GGS_string ("data"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (282)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@functionPredefinedTypeAST.getConstructorMap'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__functionPredefinedTypeAST__getConstructorMap (C_CompilerEx & inLexique,
                                const cPtr_functionPredefinedTypeAST * operand_15431,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15431 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (291)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("functionList"),  GGS_string ("functionlist"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (292)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("functionWithName"),  GGS_string ("string"),  GGS_string ("function"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (293)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isFunctionDefined"),  GGS_string ("string"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (294)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsConstructors (void) {
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__stringPredefinedTypeAST__getConstructorMap, gClassInfoFor__stringPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__applicationPredefinedTypeAST__getConstructorMap, gClassInfoFor__applicationPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__charPredefinedTypeAST__getConstructorMap, gClassInfoFor__charPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__uintPredefinedTypeAST__getConstructorMap, gClassInfoFor__uintPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__sintPredefinedTypeAST__getConstructorMap, gClassInfoFor__sintPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__uint64PredefinedTypeAST__getConstructorMap, gClassInfoFor__uint64PredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__sint64PredefinedTypeAST__getConstructorMap, gClassInfoFor__sint64PredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__stringsetPredefinedTypeAST__getConstructorMap, gClassInfoFor__stringsetPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__binarysetPredefinedTypeAST__getConstructorMap, gClassInfoFor__binarysetPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__typePredefinedTypeAST__getConstructorMap, gClassInfoFor__typePredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__dataPredefinedTypeAST__getConstructorMap, gClassInfoFor__dataPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__functionPredefinedTypeAST__getConstructorMap, gClassInfoFor__functionPredefinedTypeAST.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsConstructors (prologueRoutineFor_semanticsConstructors, NULL) ;

//---------------------------------------------------------------------------*

