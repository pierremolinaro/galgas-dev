//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semanticsConstructors.cpp'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       march 9th, 2010, at 23h9'58"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsConstructors.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsConstructors.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'e_constructorMapEXX'                         *
//                                                                           *
//---------------------------------------------------------------------------*

e_constructorMapEXX::e_constructorMapEXX (void) :
mArgumentTypeList (),
mHasLexique (),
mReturnedType () {
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      class map '@constructorMapEXX'                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptorEX kTypeDescriptor_GGS_constructorMapEXX ("constructorMapEXX", false, NULL) ;

//---------------------------------------------------------------------------*

elementOf_GGS_constructorMapEXX::
elementOf_GGS_constructorMapEXX (const GGS_lstring & inKey,
              const PMSInt32 inIndex,
              const e_constructorMapEXX & inInfo) :
AC_galgas_map_element (inKey, inIndex),
mInfo (inInfo) {
}

//---------------------------------------------------------------------------*

void elementOf_GGS_constructorMapEXX::
appendForMapDescription (const PMSInt32 inElementIndex,
                         C_String & ioString,
                         const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-key " ;
  ioString.appendSigned (inElementIndex) ;
  ioString << ":" << mKey.reader_description (inIndentation + 1) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-value " ;
  ioString.appendSigned (inElementIndex) ;
  ioString << ":" << mInfo.mArgumentTypeList.reader_description (inIndentation + 1) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-value " ;
  ioString.appendSigned (inElementIndex) ;
  ioString << ":" << mInfo.mHasLexique.reader_description (inIndentation + 1) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-value " ;
  ioString.appendSigned (inElementIndex) ;
  ioString << ":" << mInfo.mReturnedType.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_constructorMapEXX::
isEqualToMapElement (const AC_galgas_map_element * inOperand) const {
  const elementOf_GGS_constructorMapEXX * ptr = dynamic_cast <const elementOf_GGS_constructorMapEXX *> (inOperand) ;
  macroValidPointer (ptr) ;
  return (mInfo.mArgumentTypeList.operator_isEqual (ptr->mInfo.mArgumentTypeList)).boolValue ()
           && (mInfo.mHasLexique.operator_isEqual (ptr->mInfo.mHasLexique)).boolValue ()
           && (mInfo.mReturnedType.operator_isEqual (ptr->mInfo.mReturnedType)).boolValue () ;
}

//---------------------------------------------------------------------------*

AC_galgas_map_element * GGS_constructorMapEXX::
new_element (const GGS_lstring & inKey, void * inInfo) {
  MF_Assert (reinterpret_cast <e_constructorMapEXX *> (inInfo) != NULL, "Dynamic cast error", 0, 0) ;
  AC_galgas_map_element * p = NULL ;
  e_constructorMapEXX * info = (e_constructorMapEXX *) inInfo ;
  macroMyNew (p, cElement (inKey, nextIndex (), * info)) ;
  return p ;
}

//---------------------------------------------------------------------------*

void GGS_constructorMapEXX::
assignInfo (AC_galgas_map_element * inPtr, void * inInfo) {
  MF_Assert (reinterpret_cast <cElement *> (inPtr) != NULL, "Dynamic cast error", 0, 0) ;
  MF_Assert (reinterpret_cast <e_constructorMapEXX *> (inInfo) != NULL, "Dynamic cast error", 0, 0) ;
  cElement * p = (cElement *) inPtr ;
  e_constructorMapEXX * info = (e_constructorMapEXX *) inInfo ;
  p->mInfo = * info ;
}

//---------------------------------------------------------------------------*

GGS_constructorMapEXX GGS_constructorMapEXX::
constructor_emptyMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX result ;
  macroMyNew (result.mSharedMapRoot, cMapRoot) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_constructorMapEXX::
enterIndex (const GGS_lstring & inKey,
            AC_galgas_index_core & outIndex) {
  e_constructorMapEXX info  ;
  internalEnterIndex (inKey,
                      (void *) & info,
                      outIndex) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_constructorMapEXX::
operator_isEqual (const GGS_constructorMapEXX & inOperand) const {
  return GGS_bool (isBuilt () && inOperand.isBuilt (), isEqualToMap (inOperand)) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_constructorMapEXX::
operator_isNotEqual (const GGS_constructorMapEXX & inOperand) const {
  return GGS_bool (isBuilt () && inOperand.isBuilt (), ! isEqualToMap (inOperand)) ;
}

//---------------------------------------------------------------------------*

void GGS_constructorMapEXX::
internalInsertForDuplication (AC_galgas_map_element * inPtr) {
  MF_Assert (reinterpret_cast <cElement *> (inPtr) != NULL, "Dynamic cast error", 0, 0) ;
  cElement * p = (cElement *) inPtr ;
  PMSInt32 attributeIndex = -1 ; // Unused here
  GGS_location existingKeyLocation ; // Unused here
  internalInsert (p->mKey, (void *) & p->mInfo, attributeIndex, existingKeyLocation) ;
}

//---------------------------------------------------------------------------*

void GGS_constructorMapEXX::
insertElement (C_Compiler & inLexique,
                const utf32 * inErrorMessage,
                const GGS_lstring & inKey,
                const GGS_typeList & inParameter0,
                const GGS_bool& inParameter1,
                const GGS_ACGalgasType & inParameter2,
                GGS_luint * outIndex
                COMMA_LOCATION_ARGS) {
  PMSInt32 elementID = - 1 ;
  if (isBuilt ()
   && inParameter0.isBuilt ()
   && inParameter1.isBuilt ()
   && inParameter2.isBuilt ()
   && inKey.isBuilt ()) {
    insulateMap () ;
    e_constructorMapEXX info  ;
    info.mArgumentTypeList = inParameter0 ;
    info.mHasLexique = inParameter1 ;
    info.mReturnedType = inParameter2 ;
    GGS_location existingKeyLocation ;
    internalInsert (inKey, (void *) & info, elementID, existingKeyLocation) ;
    if (elementID < 0) {
      emitInsertMapSemanticErrorMessage (inLexique, inKey, inErrorMessage, existingKeyLocation COMMA_THERE) ;
    }
  }
  if (outIndex != NULL) {
    * outIndex = GGS_luint (GGS_uint (elementID >= 0, (PMUInt32) elementID), inKey) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_constructorMapEXX::
searchElement (C_Compiler & inLexique,
               const utf32 * inErrorMessage,
               const GGS_lstring & inKey,
               GGS_typeList   & outParameter0,
               GGS_bool  & outParameter1,
               GGS_ACGalgasType   & outParameter2,
               GGS_luint * outIndex
               COMMA_LOCATION_ARGS) const {
  cElement * node = NULL  ;
  if (isBuilt () && inKey.isBuilt ()) {
    AC_galgas_map_element * p = internal_search (inKey.string ()) ;
    MF_Assert ((p == NULL) || (reinterpret_cast <cElement *> (p) != NULL), "Dynamic cast error", 0, 0) ;
    node = (cElement *) p ;
    if (node == NULL) {
      emitMapSemanticErrorMessage (inLexique, inKey, inErrorMessage COMMA_THERE) ;
    }
  }
  if (node == NULL) {
    outParameter0.drop () ;
    outParameter1.drop () ;
    outParameter2.drop () ;
    if (outIndex != NULL) {
      outIndex->drop () ;
     }
  }else{
    outParameter0 = node->mInfo.mArgumentTypeList ;
    outParameter1 = node->mInfo.mHasLexique ;
    outParameter2 = node->mInfo.mReturnedType ;
    if (outIndex != NULL) {
      * outIndex = GGS_luint (GGS_uint (true, (PMUInt32) node->mID), inKey) ;
    }
  }
}

//---------------------------------------------------------------------------*

const utf32 GGS_constructorMapEXX::kSearchMessage_searchKey [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GGS_constructorMapEXX::
method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeList   & outParameter0,
                                GGS_bool  & outParameter1,
                                GGS_ACGalgasType   & outParameter2 COMMA_LOCATION_ARGS) const {
  searchElement (inLexique,
                  kSearchMessage_searchKey,
                  inKey,
                  outParameter0,
                  outParameter1,
                  outParameter2,
                  NULL
                  COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const utf32 GGS_constructorMapEXX::kInsertMessage_insertKey [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (' '),
  TO_UNICODE ('h'),
  TO_UNICODE ('a'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('b'),
  TO_UNICODE ('e'),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE (' '),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('a'),
  TO_UNICODE ('d'),
  TO_UNICODE ('y'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('f'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GGS_constructorMapEXX::
modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeList & inParameter0,
                                const GGS_bool& inParameter1,
                                const GGS_ACGalgasType & inParameter2 COMMA_LOCATION_ARGS) {
  insertElement (inLexique,
                 kInsertMessage_insertKey,
                 inKey,
                 inParameter0,
                 inParameter1,
                 inParameter2,
                 NULL
                 COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

GGS_constructorMapEXX GGS_constructorMapEXX::
constructor_mapWithMapToOverride (C_Compiler & /* inLexique */,
                                  const GGS_constructorMapEXX & inMapToOverride
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX result ; // Not Built
  if (inMapToOverride.mSharedMapRoot != NULL) {
    macroValidPointer (inMapToOverride.mSharedMapRoot) ;
    macroMyNew (result.mSharedMapRoot, cMapRoot) ;
    result.mSharedMapRoot->mNextMap = inMapToOverride.mSharedMapRoot ;
    inMapToOverride.mSharedMapRoot->mReferenceCount ++ ;
    result.mSharedMapRoot->mSequenceNumber = inMapToOverride.mSharedMapRoot->mSequenceNumber ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_constructorMapEXX GGS_constructorMapEXX::
reader_overriddenMap (C_Compiler & /* inLexique */
                      COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_constructorMapEXX result ; // Not Built
  if (mSharedMapRoot != NULL) {
    macroValidPointer (mSharedMapRoot) ;
    result.mSharedMapRoot = mSharedMapRoot->mNextMap ;
    if (result.mSharedMapRoot != NULL) {
      macroValidPointer (result.mSharedMapRoot) ;
      result.mSharedMapRoot->mReferenceCount ++ ;
    }else{
      macroMyNew (result.mSharedMapRoot, cMapRoot) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_constructorMapEXX::
reader_description (const PMSInt32 inIndentation) const {
  C_String s ;
  s << "<map @constructorMapEXX " ;
  if (isBuilt ()) {
    s.appendSigned (count ()) ;
    s << " object" << ((count () > 1) ? "s " : " ") ;
    cMapRoot * mapRoot = mSharedMapRoot ;
    PMSInt32 level = 0 ;
    while (mapRoot != NULL) {
      if (level > 0) {
        s << "\n" ;
        s.writeStringMultiple ("| ", inIndentation) ;
        s << "------- level " << cStringWithSigned (level) ;
      }
      macroValidPointer (mapRoot) ;
      cElement * p = (cElement *) mapRoot->mFirstItem ;
      PMSInt32 elementID = 0 ;
      while (p != NULL) {
        macroValidPointer (p) ;
        p->appendForMapDescription (elementID, s, inIndentation) ;
        p = p->nextObject () ;
        elementID ++ ;
      }
      mapRoot = mapRoot->mNextMap ;
      level ++ ;
    }
  }else{
    s << "not built" ;
  }
  s << "\n" ;
  s.writeStringMultiple ("| ", inIndentation) ;
  s << ">" ;
  return GGS_string (true, s) ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_typeList  & GGS_constructorMapEXX::cEnumerator::_mArgumentTypeList (LOCATION_ARGS) const {
  return ((cElement *) mObjectArray (mCurrentIndex COMMA_THERE))->mInfo.mArgumentTypeList ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_bool & GGS_constructorMapEXX::cEnumerator::_mHasLexique (LOCATION_ARGS) const {
  return ((cElement *) mObjectArray (mCurrentIndex COMMA_THERE))->mInfo.mHasLexique ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_ACGalgasType  & GGS_constructorMapEXX::cEnumerator::_mReturnedType (LOCATION_ARGS) const {
  return ((cElement *) mObjectArray (mCurrentIndex COMMA_THERE))->mInfo.mReturnedType ;
}

//---------------------------------------------------------------------------*

GGS_object GGS_constructorMapEXX::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_constructorMapEXX * p = NULL ;
    macroMyNew (p, GGS_constructorMapEXX (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_constructorMapEXX GGS_constructorMapEXX::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_constructorMapEXX result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_constructorMapEXX * p = dynamic_cast <const GGS_constructorMapEXX *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_constructorMapEXX, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptorEX * GGS_constructorMapEXX::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_constructorMapEXX ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "enterConstructorWithoutArgument"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterConstructorWithoutArgument (C_Compiler & inLexique,
                                GGS_constructorMapEXX  & var_cas_ioConstructorMap,
                                const GGS_string  var_cas_inName,
                                const GGS_ACGalgasType   var_cas_inReturnedType,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterConstructorWithoutArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioConstructorMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), GGS_typeList ::constructor_emptyList (), var_cas_inHasLexiqueAndLocationArguments, var_cas_inReturnedType COMMA_SOURCE_FILE_AT_LINE (41)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterConstructorWithoutArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "enterConstructorWithStringArgument"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterConstructorWithStringArgument (C_Compiler & inLexique,
                                GGS_constructorMapEXX  & var_cas_ioConstructorMap,
                                const GGS_string  var_cas_inName,
                                const GGS_ACGalgasType   var_cas_inReturnedType,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterConstructorWithStringArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioConstructorMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), GGS_typeList ::constructor_listWithValue (GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE)), var_cas_inHasLexiqueAndLocationArguments, var_cas_inReturnedType COMMA_SOURCE_FILE_AT_LINE (57)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterConstructorWithStringArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "enterConstructorWithCharArgument"        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterConstructorWithCharArgument (C_Compiler & inLexique,
                                GGS_constructorMapEXX  & var_cas_ioConstructorMap,
                                const GGS_string  var_cas_inName,
                                const GGS_ACGalgasType   var_cas_inReturnedType,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterConstructorWithCharArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioConstructorMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), GGS_typeList ::constructor_listWithValue (GGS_charGalgasType ::constructor_new (inLexique COMMA_HERE)), var_cas_inHasLexiqueAndLocationArguments, var_cas_inReturnedType COMMA_SOURCE_FILE_AT_LINE (73)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterConstructorWithCharArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "enterConstructorWithUintArgument"        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterConstructorWithUintArgument (C_Compiler & inLexique,
                                GGS_constructorMapEXX  & var_cas_ioConstructorMap,
                                const GGS_string  var_cas_inName,
                                const GGS_ACGalgasType   var_cas_inReturnedType,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterConstructorWithUintArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioConstructorMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), GGS_typeList ::constructor_listWithValue (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)), var_cas_inHasLexiqueAndLocationArguments, var_cas_inReturnedType COMMA_SOURCE_FILE_AT_LINE (89)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterConstructorWithUintArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "enterConstructorWith2UintArguments"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterConstructorWith2UintArguments (C_Compiler & inLexique,
                                GGS_constructorMapEXX  & var_cas_ioConstructorMap,
                                const GGS_string  var_cas_inName,
                                const GGS_ACGalgasType   var_cas_inReturnedType,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterConstructorWith2UintArguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeList  var_cas_t = GGS_typeList ::constructor_emptyList () ;
  var_cas_t.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_t.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_ioConstructorMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_t, var_cas_inHasLexiqueAndLocationArguments, var_cas_inReturnedType COMMA_SOURCE_FILE_AT_LINE (108)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterConstructorWith2UintArguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "enterConstructorWith3UintArguments"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterConstructorWith3UintArguments (C_Compiler & inLexique,
                                GGS_constructorMapEXX  & var_cas_ioConstructorMap,
                                const GGS_string  var_cas_inName,
                                const GGS_ACGalgasType   var_cas_inReturnedType,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterConstructorWith3UintArguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeList  var_cas_t = GGS_typeList ::constructor_emptyList () ;
  var_cas_t.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_t.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_t.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_ioConstructorMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_t, var_cas_inHasLexiqueAndLocationArguments, var_cas_inReturnedType COMMA_SOURCE_FILE_AT_LINE (128)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterConstructorWith3UintArguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "enterConstructorWith2UintUint64Arguments"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterConstructorWith2UintUint64Arguments (C_Compiler & inLexique,
                                GGS_constructorMapEXX  & var_cas_ioConstructorMap,
                                const GGS_string  var_cas_inName,
                                const GGS_ACGalgasType   var_cas_inReturnedType,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterConstructorWith2UintUint64Arguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeList  var_cas_t = GGS_typeList ::constructor_emptyList () ;
  var_cas_t.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_t.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_t.addAssign_operation (GGS_uint64GalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_ioConstructorMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_t, var_cas_inHasLexiqueAndLocationArguments, var_cas_inReturnedType COMMA_SOURCE_FILE_AT_LINE (148)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterConstructorWith2UintUint64Arguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Virtual Table for category reader '@ACGalgasType.constructorMap'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__constructorMap> gDispatchTableForReader__ACGalgasType__constructorMap ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__constructorMap (typeCategoryReader__ACGalgasType__constructorMap inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__constructorMap.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__ACGalgasType_defaultReader_constructorMap (C_Compiler &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_constructorMapEXX  () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__constructorMap
findCategoryReader__ACGalgasType__constructorMap (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__constructorMap result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__constructorMap.count ()) {
    result = gDispatchTableForReader__ACGalgasType__constructorMap (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__constructorMap (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__constructorMap.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_constructorMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category reader '@locationGalgasType.constructorMap'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__locationGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_locationGalgasType * operand_5477
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_5477 != NULL) {
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of once function "constructorMapFor_string"         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_string ;
static bool gCacheFlagForOnceFunction_constructorMapFor_string = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_string (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_string) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_string at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("stringWithVersionString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (170)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("stringWithSourceFilePath"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (171)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("stringWithCurrentDirectory"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (172)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("stringWithMainFirstArgument"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (173)) ;
    GGS_typeList  var_cas_t = GGS_typeList ::constructor_emptyList () ;
    var_cas_t.addAssign_operation (GGS_charGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_t.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("stringWithSequenceOfCharacters"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (177)) ;
    ::routine_enterConstructorWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("stringWithContentsOfFile"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (178)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("stringWithCurrentDateTime"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (179)) ;
    ::routine_enterConstructorWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("stringWithEnvironmentVariable"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (180)) ;
    ::routine_enterConstructorWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("stringWithEnvironmentVariableOrEmpty"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (181)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("CppLineComment"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (182)) ;
    ::routine_enterConstructorWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("CppTitleComment"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (183)) ;
    ::routine_enterConstructorWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("CppString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (184)) ;
    ::routine_enterConstructorWithCharArgument (inLexique,  var_cas_outMap,  GGS_string ("CppChar"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (185)) ;
    var_cas_t = GGS_typeList ::constructor_emptyList () ;
    var_cas_t.addAssign_operation (function_build_stringlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (187))) ;
    var_cas_t.addAssign_operation (GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("componentsJoinedByString"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (189)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_string\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_string = true ;
    gCachedResultForOnceFunction_constructorMapFor_string = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_string ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_string (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_string (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_string ("constructorMapFor_string",
                              functionForGenericCall_constructorMapFor_string,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@stringGalgasType.constructorMap'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__stringGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_stringGalgasType * operand_7550
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_7550 != NULL) {
    var_cas_outMap = function_constructorMapFor_string (inLexique COMMA_SOURCE_FILE_AT_LINE (195)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "constructorMapFor_char"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_char ;
static bool gCacheFlagForOnceFunction_constructorMapFor_char = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_char (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_char) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_char at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("replacementCharacter"),  GGS_charGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (202)) ;
    ::routine_enterConstructorWithUintArgument (inLexique,  var_cas_outMap,  GGS_string ("unicodeCharacterWithUnsigned"),  GGS_charGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (203)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_char\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_char = true ;
    gCachedResultForOnceFunction_constructorMapFor_char = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_char ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_char (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_char (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_char ("constructorMapFor_char",
                              functionForGenericCall_constructorMapFor_char,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@charGalgasType.constructorMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__charGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_charGalgasType * operand_8162
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_8162 != NULL) {
    var_cas_outMap = function_constructorMapFor_char (inLexique COMMA_SOURCE_FILE_AT_LINE (209)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@boolGalgasType.constructorMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__boolGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_boolGalgasType * operand_8372
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_8372 != NULL) {
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "constructorMapFor_uint"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_uint ;
static bool gCacheFlagForOnceFunction_constructorMapFor_uint = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_uint (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_uint) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_uint at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("max"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (222)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("errorCount"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (223)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("warningCount"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (224)) ;
    ::routine_enterConstructorWith2UintArguments (inLexique,  var_cas_outMap,  GGS_string ("valueWithMask"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (225)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_uint\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_uint = true ;
    gCachedResultForOnceFunction_constructorMapFor_uint = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_uint ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_uint (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_uint (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_uint ("constructorMapFor_uint",
                              functionForGenericCall_constructorMapFor_uint,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@uintGalgasType.constructorMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__uintGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_uintGalgasType * operand_9135
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_9135 != NULL) {
    var_cas_outMap = function_constructorMapFor_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (231)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "constructorMapFor_sint"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_sint ;
static bool gCacheFlagForOnceFunction_constructorMapFor_sint = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_sint (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_sint) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_sint at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("max"),  GGS_sintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (238)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("min"),  GGS_sintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (239)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_sint\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_sint = true ;
    gCachedResultForOnceFunction_constructorMapFor_sint = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_sint ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_sint (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_sint (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_sint ("constructorMapFor_sint",
                              functionForGenericCall_constructorMapFor_sint,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@sintGalgasType.constructorMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__sintGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_sintGalgasType * operand_9702
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_9702 != NULL) {
    var_cas_outMap = function_constructorMapFor_sint (inLexique COMMA_SOURCE_FILE_AT_LINE (245)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of once function "constructorMapFor_uint64"         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_uint64 ;
static bool gCacheFlagForOnceFunction_constructorMapFor_uint64 = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_uint64 (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_uint64) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_uint64 at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("max"),  GGS_uint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (252)) ;
    ::routine_enterConstructorWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("uint64MaskWithCompressedBitString"),  GGS_uint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (253)) ;
    ::routine_enterConstructorWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("uint64BaseValueWithCompressedBitString"),  GGS_uint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (254)) ;
    ::routine_enterConstructorWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("uint64WithBitString"),  GGS_uint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (255)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_uint64\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_uint64 = true ;
    gCachedResultForOnceFunction_constructorMapFor_uint64 = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_uint64 ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_uint64 (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_uint64 (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_uint64 ("constructorMapFor_uint64",
                              functionForGenericCall_constructorMapFor_uint64,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@uint64GalgasType.constructorMap'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__uint64GalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_uint64GalgasType * operand_10532
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_10532 != NULL) {
    var_cas_outMap = function_constructorMapFor_uint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (261)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of once function "constructorMapFor_sint64"         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_sint64 ;
static bool gCacheFlagForOnceFunction_constructorMapFor_sint64 = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_sint64 (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_sint64) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_sint64 at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("max"),  GGS_sint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (268)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("min"),  GGS_sint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (269)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_sint64\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_sint64 = true ;
    gCachedResultForOnceFunction_constructorMapFor_sint64 = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_sint64 ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_sint64 (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_sint64 (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_sint64 ("constructorMapFor_sint64",
                              functionForGenericCall_constructorMapFor_sint64,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@sint64GalgasType.constructorMap'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__sint64GalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_sint64GalgasType * operand_11109
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_11109 != NULL) {
    var_cas_outMap = function_constructorMapFor_sint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (275)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@doubleGalgasType.constructorMap'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__doubleGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_doubleGalgasType * operand_11323
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_11323 != NULL) {
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of once function "constructorMapFor_lstring"         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_lstring ;
static bool gCacheFlagForOnceFunction_constructorMapFor_lstring = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_lstring (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_lstring) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_lstring at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_typeList  var_cas_t = GGS_typeList ::constructor_emptyList () ;
    var_cas_t.addAssign_operation (GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_t.addAssign_operation (GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("new"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_lstringGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (291)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("retrieveAndResetTemplateString"),  GGS_lstringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (292)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_lstring\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_lstring = true ;
    gCachedResultForOnceFunction_constructorMapFor_lstring = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_lstring ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_lstring (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_lstring (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_lstring ("constructorMapFor_lstring",
                              functionForGenericCall_constructorMapFor_lstring,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Category reader '@lstringGalgasType.constructorMap'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__lstringGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_lstringGalgasType * operand_12035
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_12035 != NULL) {
    var_cas_outMap = function_constructorMapFor_lstring (inLexique COMMA_SOURCE_FILE_AT_LINE (298)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of once function "constructorMapFor_lchar"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_lchar ;
static bool gCacheFlagForOnceFunction_constructorMapFor_lchar = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_lchar (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_lchar) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_lchar at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_typeList  var_cas_t = GGS_typeList ::constructor_emptyList () ;
    var_cas_t.addAssign_operation (GGS_charGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_t.addAssign_operation (GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("new"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_lcharGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (308)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_lchar\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_lchar = true ;
    gCachedResultForOnceFunction_constructorMapFor_lchar = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_lchar ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_lchar (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_lchar (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_lchar ("constructorMapFor_lchar",
                              functionForGenericCall_constructorMapFor_lchar,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@lcharGalgasType.constructorMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__lcharGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_lcharGalgasType * operand_12627
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_12627 != NULL) {
    var_cas_outMap = function_constructorMapFor_lchar (inLexique COMMA_SOURCE_FILE_AT_LINE (314)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of once function "constructorMapFor_lbool"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_lbool ;
static bool gCacheFlagForOnceFunction_constructorMapFor_lbool = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_lbool (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_lbool) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_lbool at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_typeList  var_cas_t = GGS_typeList ::constructor_emptyList () ;
    var_cas_t.addAssign_operation (GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_t.addAssign_operation (GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("new"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_lboolGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (324)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_lbool\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_lbool = true ;
    gCachedResultForOnceFunction_constructorMapFor_lbool = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_lbool ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_lbool (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_lbool (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_lbool ("constructorMapFor_lbool",
                              functionForGenericCall_constructorMapFor_lbool,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@lboolGalgasType.constructorMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__lboolGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_lboolGalgasType * operand_13217
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_13217 != NULL) {
    var_cas_outMap = function_constructorMapFor_lbool (inLexique COMMA_SOURCE_FILE_AT_LINE (330)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of once function "constructorMapFor_luint"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_luint ;
static bool gCacheFlagForOnceFunction_constructorMapFor_luint = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_luint (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_luint) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_luint at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_typeList  var_cas_t = GGS_typeList ::constructor_emptyList () ;
    var_cas_t.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_t.addAssign_operation (GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("new"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_luintGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (340)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_luint\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_luint = true ;
    gCachedResultForOnceFunction_constructorMapFor_luint = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_luint ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_luint (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_luint (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_luint ("constructorMapFor_luint",
                              functionForGenericCall_constructorMapFor_luint,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@luintGalgasType.constructorMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__luintGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_luintGalgasType * operand_13807
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_13807 != NULL) {
    var_cas_outMap = function_constructorMapFor_luint (inLexique COMMA_SOURCE_FILE_AT_LINE (346)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of once function "constructorMapFor_lsint"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_lsint ;
static bool gCacheFlagForOnceFunction_constructorMapFor_lsint = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_lsint (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_lsint) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_lsint at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_typeList  var_cas_t = GGS_typeList ::constructor_emptyList () ;
    var_cas_t.addAssign_operation (GGS_sintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_t.addAssign_operation (GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("new"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_lsintGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (356)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_lsint\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_lsint = true ;
    gCachedResultForOnceFunction_constructorMapFor_lsint = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_lsint ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_lsint (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_lsint (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_lsint ("constructorMapFor_lsint",
                              functionForGenericCall_constructorMapFor_lsint,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@lsintGalgasType.constructorMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__lsintGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_lsintGalgasType * operand_14397
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_14397 != NULL) {
    var_cas_outMap = function_constructorMapFor_lsint (inLexique COMMA_SOURCE_FILE_AT_LINE (362)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of once function "constructorMapFor_luint64"         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_luint64 ;
static bool gCacheFlagForOnceFunction_constructorMapFor_luint64 = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_luint64 (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_luint64) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_luint64 at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_typeList  var_cas_t = GGS_typeList ::constructor_emptyList () ;
    var_cas_t.addAssign_operation (GGS_uint64GalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_t.addAssign_operation (GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("new"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_luint64GalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (372)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_luint64\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_luint64 = true ;
    gCachedResultForOnceFunction_constructorMapFor_luint64 = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_luint64 ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_luint64 (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_luint64 (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_luint64 ("constructorMapFor_luint64",
                              functionForGenericCall_constructorMapFor_luint64,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Category reader '@luint64GalgasType.constructorMap'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__luint64GalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_luint64GalgasType * operand_14995
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_14995 != NULL) {
    var_cas_outMap = function_constructorMapFor_luint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (378)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of once function "constructorMapFor_lsint64"         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_lsint64 ;
static bool gCacheFlagForOnceFunction_constructorMapFor_lsint64 = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_lsint64 (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_lsint64) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_lsint64 at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_typeList  var_cas_t = GGS_typeList ::constructor_emptyList () ;
    var_cas_t.addAssign_operation (GGS_sint64GalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_t.addAssign_operation (GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("new"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_lsint64GalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (388)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_lsint64\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_lsint64 = true ;
    gCachedResultForOnceFunction_constructorMapFor_lsint64 = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_lsint64 ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_lsint64 (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_lsint64 (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_lsint64 ("constructorMapFor_lsint64",
                              functionForGenericCall_constructorMapFor_lsint64,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Category reader '@lsint64GalgasType.constructorMap'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__lsint64GalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_lsint64GalgasType * operand_15595
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_15595 != NULL) {
    var_cas_outMap = function_constructorMapFor_lsint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (394)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of once function "constructorMapFor_ldouble"         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_ldouble ;
static bool gCacheFlagForOnceFunction_constructorMapFor_ldouble = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_ldouble (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_ldouble) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_ldouble at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_typeList  var_cas_t = GGS_typeList ::constructor_emptyList () ;
    var_cas_t.addAssign_operation (GGS_doubleGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_t.addAssign_operation (GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("new"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_ldoubleGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (404)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_ldouble\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_ldouble = true ;
    gCachedResultForOnceFunction_constructorMapFor_ldouble = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_ldouble ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_ldouble (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_ldouble (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_ldouble ("constructorMapFor_ldouble",
                              functionForGenericCall_constructorMapFor_ldouble,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Category reader '@ldoubleGalgasType.constructorMap'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__ldoubleGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_ldoubleGalgasType * operand_16195
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_16195 != NULL) {
    var_cas_outMap = function_constructorMapFor_ldouble (inLexique COMMA_SOURCE_FILE_AT_LINE (410)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of once function "constructorMapFor_stringset"        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_stringset ;
static bool gCacheFlagForOnceFunction_constructorMapFor_stringset = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_stringset (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_stringset) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_stringset at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("emptySet"),  GGS_stringsetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (417)) ;
    ::routine_enterConstructorWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("setWithString"),  GGS_stringsetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (418)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_stringset\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_stringset = true ;
    gCachedResultForOnceFunction_constructorMapFor_stringset = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_stringset ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_stringset (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_stringset (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_stringset ("constructorMapFor_stringset",
                              functionForGenericCall_constructorMapFor_stringset,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Category reader '@stringsetGalgasType.constructorMap'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__stringsetGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_stringsetGalgasType * operand_16803
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_16803 != NULL) {
    var_cas_outMap = function_constructorMapFor_stringset (inLexique COMMA_SOURCE_FILE_AT_LINE (424)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of once function "constructorMapFor_binaryset"        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_binaryset ;
static bool gCacheFlagForOnceFunction_constructorMapFor_binaryset = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_binaryset (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_binaryset) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_binaryset at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterConstructorWithUintArgument (inLexique,  var_cas_outMap,  GGS_string ("binarySetWithBit"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (431)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("emptyBinarySet"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (432)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("fullBinarySet"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (433)) ;
    ::routine_enterConstructorWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("binarySetWithPredicateString"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (434)) ;
    ::routine_enterConstructorWith3UintArguments (inLexique,  var_cas_outMap,  GGS_string ("binarySetWithNotEqualComparison"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (435)) ;
    ::routine_enterConstructorWith3UintArguments (inLexique,  var_cas_outMap,  GGS_string ("binarySetWithEqualComparison"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (436)) ;
    ::routine_enterConstructorWith3UintArguments (inLexique,  var_cas_outMap,  GGS_string ("binarySetWithStrictLowerComparison"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (437)) ;
    ::routine_enterConstructorWith3UintArguments (inLexique,  var_cas_outMap,  GGS_string ("binarySetWithStrictGreaterComparison"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (438)) ;
    ::routine_enterConstructorWith3UintArguments (inLexique,  var_cas_outMap,  GGS_string ("binarySetWithLowerOrEqualComparison"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (439)) ;
    ::routine_enterConstructorWith3UintArguments (inLexique,  var_cas_outMap,  GGS_string ("binarySetWithGreaterOrEqualComparison"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (440)) ;
    ::routine_enterConstructorWith2UintUint64Arguments (inLexique,  var_cas_outMap,  GGS_string ("binarySetWithEqualToConstant"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (441)) ;
    ::routine_enterConstructorWith2UintUint64Arguments (inLexique,  var_cas_outMap,  GGS_string ("binarySetWithNotEqualToConstant"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (442)) ;
    ::routine_enterConstructorWith2UintUint64Arguments (inLexique,  var_cas_outMap,  GGS_string ("binarySetWithStrictLowerThanConstant"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (443)) ;
    ::routine_enterConstructorWith2UintUint64Arguments (inLexique,  var_cas_outMap,  GGS_string ("binarySetWithStrictGreaterThanConstant"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (444)) ;
    ::routine_enterConstructorWith2UintUint64Arguments (inLexique,  var_cas_outMap,  GGS_string ("binarySetWithLowerOrEqualToConstant"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (445)) ;
    ::routine_enterConstructorWith2UintUint64Arguments (inLexique,  var_cas_outMap,  GGS_string ("binarySetWithGreaterOrEqualToConstant"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (446)) ;
    GGS_typeList  var_cas_t = GGS_typeList ::constructor_emptyList () ;
    var_cas_t.addAssign_operation (GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_t.addAssign_operation (GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_t.addAssign_operation (GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("binarySetWithITE"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (451)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_binaryset\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_binaryset = true ;
    gCachedResultForOnceFunction_constructorMapFor_binaryset = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_binaryset ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_binaryset (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_binaryset (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_binaryset ("constructorMapFor_binaryset",
                              functionForGenericCall_constructorMapFor_binaryset,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Category reader '@binarysetGalgasType.constructorMap'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__binarysetGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_binarysetGalgasType * operand_19348
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_19348 != NULL) {
    var_cas_outMap = function_constructorMapFor_binaryset (inLexique COMMA_SOURCE_FILE_AT_LINE (457)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "constructorMapFor_type"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_type ;
static bool gCacheFlagForOnceFunction_constructorMapFor_type = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_type (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_type) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_type at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("typeList"),  function_build_typelist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (464)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (464)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_type\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_type = true ;
    gCachedResultForOnceFunction_constructorMapFor_type = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_type ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_type (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_type (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_type ("constructorMapFor_type",
                              functionForGenericCall_constructorMapFor_type,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@typeGalgasType.constructorMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__typeGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_typeGalgasType * operand_19844
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_19844 != NULL) {
    var_cas_outMap = function_constructorMapFor_type (inLexique COMMA_SOURCE_FILE_AT_LINE (470)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@objectGalgasType.constructorMap'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__objectGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_objectGalgasType * operand_20056
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_20056 != NULL) {
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "constructorMapFor_data"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_data ;
static bool gCacheFlagForOnceFunction_constructorMapFor_data = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_data (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_data) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_data at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("emptyData"),  GGS_dataGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (483)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_data\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_data = true ;
    gCachedResultForOnceFunction_constructorMapFor_data = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_data ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_data (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_data (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_data ("constructorMapFor_data",
                              functionForGenericCall_constructorMapFor_data,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@dataGalgasType.constructorMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__dataGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_dataGalgasType * operand_20551
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_20551 != NULL) {
    var_cas_outMap = function_constructorMapFor_data (inLexique COMMA_SOURCE_FILE_AT_LINE (489)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of once function "constructorMapFor_function"        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX  gCachedResultForOnceFunction_constructorMapFor_function ;
static bool gCacheFlagForOnceFunction_constructorMapFor_function = false ;

//---------------------------------------------------------------------------*

GGS_constructorMapEXX  function_constructorMapFor_function (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_constructorMapFor_function) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_constructorMapFor_function at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_constructorMapEXX  var_cas_outMap ;
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("functionList"),  function_build_functionlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (496)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (496)) ;
    ::routine_enterConstructorWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("functionWithName"),  GGS_functionGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (497)) ;
    ::routine_enterConstructorWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("isFunctionDefined"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (498)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_constructorMapFor_function\n") ;
    #endif
    gCacheFlagForOnceFunction_constructorMapFor_function = true ;
    gCachedResultForOnceFunction_constructorMapFor_function = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_constructorMapFor_function ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_constructorMapFor_function (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_constructorMapEXX  result = function_constructorMapFor_function (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_constructorMapFor_function ("constructorMapFor_function",
                              functionForGenericCall_constructorMapFor_function,
                              & kTypeDescriptor_GGS_constructorMapEXX ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Category reader '@functionGalgasType.constructorMap'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__functionGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_functionGalgasType * operand_21259
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_21259 != NULL) {
    var_cas_outMap = function_constructorMapFor_function (inLexique COMMA_SOURCE_FILE_AT_LINE (504)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@classGalgasType.constructorMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__classGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_classGalgasType * operand_21474
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_21474 != NULL) {
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_ACGalgasType  var_cas_selfType = operand_21474 ;
    const GGS_bool cond_21898 = (operand_21474->mIsAbstract).operator_not () ;
    if (cond_21898.isBuiltAndTrue ()) {
      GGS_typeList  var_cas_typeList = GGS_typeList ::constructor_emptyList () ;
      {
        GGS_attributeList::cEnumerator enumerator_21739 (operand_21474->mAttributeList, true) ;
        const GGS_attributeList::cElement * operand_21739 = NULL ;
        while (((operand_21739 = enumerator_21739.nextObject ()))) {
          macroValidPointer (operand_21739) ;
          var_cas_typeList.addAssign_operation (operand_21739->mAttributeTypeIndex.reader_mType (inLexique COMMA_SOURCE_FILE_AT_LINE (515))) ;
        }
      }
      var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("new"), GGS_location (inLexique) COMMA_HERE), var_cas_typeList, GGS_bool (false), var_cas_selfType COMMA_SOURCE_FILE_AT_LINE (517)) ;
    }
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@listGalgasType.constructorMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__listGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_listGalgasType * operand_22043
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_22043 != NULL) {
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("emptyList"),  operand_22043,  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (525)) ;
    GGS_typeList  var_cas_typeList = GGS_typeList ::constructor_emptyList () ;
    {
      GGS_attributeList::cEnumerator enumerator_22248 (operand_22043->mAttributeList, true) ;
      const GGS_attributeList::cElement * operand_22248 = NULL ;
      while (((operand_22248 = enumerator_22248.nextObject ()))) {
        macroValidPointer (operand_22248) ;
        var_cas_typeList.addAssign_operation (operand_22248->mAttributeTypeIndex.reader_mType (inLexique COMMA_SOURCE_FILE_AT_LINE (528))) ;
      }
    }
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("listWithValue"), GGS_location (inLexique) COMMA_HERE), var_cas_typeList, GGS_bool (false), operand_22043 COMMA_SOURCE_FILE_AT_LINE (530)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category reader '@listmapGalgasType.constructorMap'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__listmapGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_listmapGalgasType * operand_22544
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_22544 != NULL) {
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("emptyMap"),  operand_22544,  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (537)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@structGalgasType.constructorMap'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__structGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_structGalgasType * operand_22830
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_22830 != NULL) {
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_typeList  var_cas_typeList = GGS_typeList ::constructor_emptyList () ;
    {
      GGS_attributeList::cEnumerator enumerator_22964 (operand_22830->mAttributeList, true) ;
      const GGS_attributeList::cElement * operand_22964 = NULL ;
      while (((operand_22964 = enumerator_22964.nextObject ()))) {
        macroValidPointer (operand_22964) ;
        var_cas_typeList.addAssign_operation (operand_22964->mAttributeTypeIndex.reader_mType (inLexique COMMA_SOURCE_FILE_AT_LINE (546))) ;
      }
    }
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("new"), GGS_location (inLexique) COMMA_HERE), var_cas_typeList, GGS_bool (false), operand_22830 COMMA_SOURCE_FILE_AT_LINE (548)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category reader '@sortedlistGalgasType.constructorMap'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__sortedlistGalgasType__constructorMap (C_Compiler & inLexique,
                                const cPtr_sortedlistGalgasType * operand_23253
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_23253 != NULL) {
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("emptySortedList"),  operand_23253,  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (555)) ;
    GGS_typeList  var_cas_typeList = GGS_typeList ::constructor_emptyList () ;
    {
      GGS_attributeList::cEnumerator enumerator_23464 (operand_23253->mAttributeList, true) ;
      const GGS_attributeList::cElement * operand_23464 = NULL ;
      while (((operand_23464 = enumerator_23464.nextObject ()))) {
        macroValidPointer (operand_23464) ;
        var_cas_typeList.addAssign_operation (operand_23464->mAttributeTypeIndex.reader_mType (inLexique COMMA_SOURCE_FILE_AT_LINE (558))) ;
      }
    }
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("sortedListWithValue"), GGS_location (inLexique) COMMA_HERE), var_cas_typeList, GGS_bool (false), operand_23253 COMMA_SOURCE_FILE_AT_LINE (560)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Category reader '@mapType.constructorMap'                  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__mapType__constructorMap (C_Compiler & inLexique,
                                const cPtr_mapType * operand_23756
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_23756 != NULL) {
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("emptyMap"),  operand_23756,  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (567)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("mapWithMapToOverride"), GGS_location (inLexique) COMMA_HERE), GGS_typeList ::constructor_listWithValue (operand_23756), GGS_bool (false), operand_23756 COMMA_SOURCE_FILE_AT_LINE (568)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@mapindexType.constructorMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__mapindexType__constructorMap (C_Compiler & inLexique,
                                const cPtr_mapindexType * operand_24155
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_24155 != NULL) {
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("null"),  operand_24155,  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (575)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Category reader '@enumType.constructorMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_constructorMapEXX 
category_reader__enumType__constructorMap (C_Compiler & inLexique,
                                const cPtr_enumType * operand_24429
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_constructorMapEXX  var_cas_outMap ;
  if (operand_24429 != NULL) {
    var_cas_outMap = GGS_constructorMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_ACGalgasType  var_cas_selfType = operand_24429 ;
    {
      GGS_enumConstructorMap::cEnumerator enumerator_24634 (operand_24429->mEnumConstructorMap, true) ;
      const GGS_enumConstructorMap::cElement * operand_24634 = NULL ;
      while (((operand_24634 = enumerator_24634.nextObject ()))) {
        macroValidPointer (operand_24634) ;
        ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  operand_24634->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (584)),  var_cas_selfType,  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (584)) ;
      }
    }
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsConstructors (void) {
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__locationGalgasType__constructorMap, gClassInfoFor__locationGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__stringGalgasType__constructorMap, gClassInfoFor__stringGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__charGalgasType__constructorMap, gClassInfoFor__charGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__boolGalgasType__constructorMap, gClassInfoFor__boolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__uintGalgasType__constructorMap, gClassInfoFor__uintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__sintGalgasType__constructorMap, gClassInfoFor__sintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__uint64GalgasType__constructorMap, gClassInfoFor__uint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__sint64GalgasType__constructorMap, gClassInfoFor__sint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__doubleGalgasType__constructorMap, gClassInfoFor__doubleGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__lstringGalgasType__constructorMap, gClassInfoFor__lstringGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__lcharGalgasType__constructorMap, gClassInfoFor__lcharGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__lboolGalgasType__constructorMap, gClassInfoFor__lboolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__luintGalgasType__constructorMap, gClassInfoFor__luintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__lsintGalgasType__constructorMap, gClassInfoFor__lsintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__luint64GalgasType__constructorMap, gClassInfoFor__luint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__lsint64GalgasType__constructorMap, gClassInfoFor__lsint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__ldoubleGalgasType__constructorMap, gClassInfoFor__ldoubleGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__stringsetGalgasType__constructorMap, gClassInfoFor__stringsetGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__binarysetGalgasType__constructorMap, gClassInfoFor__binarysetGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__typeGalgasType__constructorMap, gClassInfoFor__typeGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__objectGalgasType__constructorMap, gClassInfoFor__objectGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__dataGalgasType__constructorMap, gClassInfoFor__dataGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__functionGalgasType__constructorMap, gClassInfoFor__functionGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__classGalgasType__constructorMap, gClassInfoFor__classGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__listGalgasType__constructorMap, gClassInfoFor__listGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__listmapGalgasType__constructorMap, gClassInfoFor__listmapGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__structGalgasType__constructorMap, gClassInfoFor__structGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__sortedlistGalgasType__constructorMap, gClassInfoFor__sortedlistGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__mapType__constructorMap, gClassInfoFor__mapType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__mapindexType__constructorMap, gClassInfoFor__mapindexType.slotID ()) ;
  enterCategoryReader__ACGalgasType__constructorMap ((typeCategoryReader__ACGalgasType__constructorMap) category_reader__enumType__constructorMap, gClassInfoFor__enumType.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticsConstructors (void) {
  gDispatchTableForReader__ACGalgasType__constructorMap.free () ;
  gCachedResultForOnceFunction_constructorMapFor_string.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_char.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_uint.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_sint.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_uint64.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_sint64.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_lstring.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_lchar.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_lbool.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_luint.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_lsint.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_luint64.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_lsint64.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_ldouble.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_stringset.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_binaryset.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_type.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_data.drop () ;
  gCachedResultForOnceFunction_constructorMapFor_function.drop () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsConstructors (prologueRoutineFor_semanticsConstructors, epilogueRoutineFor_semanticsConstructors) ;

//---------------------------------------------------------------------------*

