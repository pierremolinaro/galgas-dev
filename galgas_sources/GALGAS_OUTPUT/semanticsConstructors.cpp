//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semanticsConstructors.cpp'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 18th, 2010, at 11h42'43"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsConstructors.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsConstructors.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "enterConstructorWithoutArgument"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterConstructorWithoutArgument (C_Compiler & inLexique,
                                GGS_constructorMap  & var_cas_ioConstructorMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inConstructorName,
                                const GGS_string  var_cas_inReturnedTypeName,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterConstructorWithoutArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapIndex  var_cas_returnedTypeIndex ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inReturnedTypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (33)), var_cas_ioUnifiedTypeMap, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (33)) ;
  var_cas_ioConstructorMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inConstructorName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (35)), GGS_unifiedTypeMapIndexList ::constructor_emptyList (), var_cas_inHasLexiqueAndLocationArguments, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (34)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterConstructorWithoutArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "enterConstructorWithArgument"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterConstructorWithArgument (C_Compiler & inLexique,
                                GGS_constructorMap  & var_cas_ioConstructorMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inConstructorName,
                                const GGS_string  var_cas_inArgument1TypeName,
                                const GGS_string  var_cas_inReturnedTypeName,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterConstructorWithArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapIndex  var_cas_returnedTypeIndex ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inReturnedTypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (53)), var_cas_ioUnifiedTypeMap, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (53)) ;
  GGS_unifiedTypeMapIndex  var_cas_t ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inArgument1TypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (55)), var_cas_ioUnifiedTypeMap, var_cas_t COMMA_SOURCE_FILE_AT_LINE (55)) ;
  var_cas_ioConstructorMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inConstructorName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (57)), GGS_unifiedTypeMapIndexList ::constructor_listWithValue (var_cas_t), var_cas_inHasLexiqueAndLocationArguments, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (56)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterConstructorWithArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "enterConstructorWith2Arguments"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterConstructorWith2Arguments (C_Compiler & inLexique,
                                GGS_constructorMap  & var_cas_ioConstructorMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inConstructorName,
                                const GGS_string  var_cas_inArgument1TypeName,
                                const GGS_string  var_cas_inArgument2TypeName,
                                const GGS_string  var_cas_inReturnedTypeName,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterConstructorWith2Arguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapIndex  var_cas_returnedTypeIndex ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inReturnedTypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (76)), var_cas_ioUnifiedTypeMap, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (76)) ;
  GGS_unifiedTypeMapIndexList  var_cas_argumentTypeList = GGS_unifiedTypeMapIndexList ::constructor_emptyList () ;
  GGS_unifiedTypeMapIndex  var_cas_t ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inArgument1TypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (79)), var_cas_ioUnifiedTypeMap, var_cas_t COMMA_SOURCE_FILE_AT_LINE (79)) ;
  var_cas_argumentTypeList.addAssign_operation (var_cas_t) ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inArgument2TypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (81)), var_cas_ioUnifiedTypeMap, var_cas_t COMMA_SOURCE_FILE_AT_LINE (81)) ;
  var_cas_argumentTypeList.addAssign_operation (var_cas_t) ;
  var_cas_ioConstructorMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inConstructorName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (84)), var_cas_argumentTypeList, var_cas_inHasLexiqueAndLocationArguments, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (83)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterConstructorWith2Arguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "enterConstructorWith3Arguments"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterConstructorWith3Arguments (C_Compiler & inLexique,
                                GGS_constructorMap  & var_cas_ioConstructorMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inConstructorName,
                                const GGS_string  var_cas_inArgument1TypeName,
                                const GGS_string  var_cas_inArgument2TypeName,
                                const GGS_string  var_cas_inArgument3TypeName,
                                const GGS_string  var_cas_inReturnedTypeName,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterConstructorWith3Arguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapIndex  var_cas_returnedTypeIndex ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inReturnedTypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (104)), var_cas_ioUnifiedTypeMap, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (104)) ;
  GGS_unifiedTypeMapIndex  var_cas_t ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inArgument1TypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (106)), var_cas_ioUnifiedTypeMap, var_cas_t COMMA_SOURCE_FILE_AT_LINE (106)) ;
  GGS_unifiedTypeMapIndexList  var_cas_argumentTypeList = GGS_unifiedTypeMapIndexList ::constructor_emptyList () ;
  var_cas_argumentTypeList.addAssign_operation (var_cas_t) ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inArgument2TypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (109)), var_cas_ioUnifiedTypeMap, var_cas_t COMMA_SOURCE_FILE_AT_LINE (109)) ;
  var_cas_argumentTypeList.addAssign_operation (var_cas_t) ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inArgument3TypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (111)), var_cas_ioUnifiedTypeMap, var_cas_t COMMA_SOURCE_FILE_AT_LINE (111)) ;
  var_cas_argumentTypeList.addAssign_operation (var_cas_t) ;
  var_cas_ioConstructorMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inConstructorName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (114)), var_cas_argumentTypeList, var_cas_inHasLexiqueAndLocationArguments, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (113)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterConstructorWith3Arguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@stringPredefinedTypeAST.getConstructorMap'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__stringPredefinedTypeAST__getConstructorMap (C_Compiler & inLexique,
                                const cPtr_stringPredefinedTypeAST * operand_5412,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5412 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (127)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithVersionString"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (128)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithSourceFilePath"),  GGS_string ("string"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (129)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithCurrentDirectory"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (130)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithMainFirstArgument"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (131)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithContentsOfFile"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (132)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithCurrentDateTime"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (133)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithEnvironmentVariable"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (134)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithEnvironmentVariableOrEmpty"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (135)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("CppLineComment"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (136)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("CppTitleComment"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (137)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("CppString"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (138)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("CppChar"),  GGS_string ("char"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (139)) ;
    ::routine_enterConstructorWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("componentsJoinedByString"),  GGS_string ("stringlist"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (140)) ;
    ::routine_enterConstructorWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringWithSequenceOfCharacters"),  GGS_string ("char"),  GGS_string ("uint"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (141)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@charPredefinedTypeAST.getConstructorMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__charPredefinedTypeAST__getConstructorMap (C_Compiler & inLexique,
                                const cPtr_charPredefinedTypeAST * operand_7246,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7246 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("replacementCharacter"),  GGS_string ("char"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (151)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("unicodeCharacterWithUnsigned"),  GGS_string ("uint"),  GGS_string ("char"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (152)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@uintPredefinedTypeAST.getConstructorMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__uintPredefinedTypeAST__getConstructorMap (C_Compiler & inLexique,
                                const cPtr_uintPredefinedTypeAST * operand_7721,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7721 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (161)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("max"),  GGS_string ("uint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (162)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("errorCount"),  GGS_string ("uint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (163)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("warningCount"),  GGS_string ("uint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (164)) ;
    ::routine_enterConstructorWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("valueWithMask"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (165)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@sintPredefinedTypeAST.getConstructorMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sintPredefinedTypeAST__getConstructorMap (C_Compiler & inLexique,
                                const cPtr_sintPredefinedTypeAST * operand_8359,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8359 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("max"),  GGS_string ("sint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (175)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("min"),  GGS_string ("sint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (176)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@uint64PredefinedTypeAST.getConstructorMap'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__uint64PredefinedTypeAST__getConstructorMap (C_Compiler & inLexique,
                                const cPtr_uint64PredefinedTypeAST * operand_8789,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8789 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (185)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("max"),  GGS_string ("uint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (186)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint64MaskWithCompressedBitString"),  GGS_string ("string"),  GGS_string ("uint64"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (187)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint64BaseValueWithCompressedBitString"),  GGS_string ("string"),  GGS_string ("uint64"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (188)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint64WithBitString"),  GGS_string ("string"),  GGS_string ("uint64"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (189)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@sint64PredefinedTypeAST.getConstructorMap'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sint64PredefinedTypeAST__getConstructorMap (C_Compiler & inLexique,
                                const cPtr_sint64PredefinedTypeAST * operand_9500,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9500 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("max"),  GGS_string ("sint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (199)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("min"),  GGS_string ("sint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (200)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@stringsetPredefinedTypeAST.getConstructorMap'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__stringsetPredefinedTypeAST__getConstructorMap (C_Compiler & inLexique,
                                const cPtr_stringsetPredefinedTypeAST * operand_9937,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9937 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (209)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("emptySet"),  GGS_string ("stringset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (210)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("setWithString"),  GGS_string ("string"),  GGS_string ("stringset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (211)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@binarysetPredefinedTypeAST.getConstructorMap'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__binarysetPredefinedTypeAST__getConstructorMap (C_Compiler & inLexique,
                                const cPtr_binarysetPredefinedTypeAST * operand_10402,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10402 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (220)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithBit"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (221)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("emptyBinarySet"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (222)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("fullBinarySet"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (223)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithPredicateString"),  GGS_string ("string"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (224)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithNotEqualComparison"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (225)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithEqualComparison"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (226)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithStrictLowerComparison"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (227)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithStrictGreaterComparison"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (228)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithLowerOrEqualComparison"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (229)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithGreaterOrEqualComparison"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (230)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithEqualToConstant"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint64"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (231)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithNotEqualToConstant"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint64"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (232)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithStrictLowerThanConstant"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint64"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (233)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithStrictGreaterThanConstant"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint64"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (234)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithLowerOrEqualToConstant"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint64"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (235)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithGreaterOrEqualToConstant"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint64"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (236)) ;
    ::routine_enterConstructorWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetWithITE"),  GGS_string ("binaryset"),  GGS_string ("binaryset"),  GGS_string ("binaryset"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (237)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@typePredefinedTypeAST.getConstructorMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__typePredefinedTypeAST__getConstructorMap (C_Compiler & inLexique,
                                const cPtr_typePredefinedTypeAST * operand_12971,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12971 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (246)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("typeList"),  GGS_string ("typelist"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (247)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@dataPredefinedTypeAST.getConstructorMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__dataPredefinedTypeAST__getConstructorMap (C_Compiler & inLexique,
                                const cPtr_dataPredefinedTypeAST * operand_13322,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13322 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (256)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("emptyData"),  GGS_string ("data"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (257)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@functionPredefinedTypeAST.getConstructorMap'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__functionPredefinedTypeAST__getConstructorMap (C_Compiler & inLexique,
                                const cPtr_functionPredefinedTypeAST * operand_13674,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13674 != NULL) {
    var_cas_outMap = GGS_constructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (266)) ;
    ::routine_enterConstructorWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("functionList"),  GGS_string ("functionlist"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (267)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("functionWithName"),  GGS_string ("string"),  GGS_string ("function"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (268)) ;
    ::routine_enterConstructorWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isFunctionDefined"),  GGS_string ("string"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (269)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsConstructors (void) {
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__stringPredefinedTypeAST__getConstructorMap, gClassInfoFor__stringPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__charPredefinedTypeAST__getConstructorMap, gClassInfoFor__charPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__uintPredefinedTypeAST__getConstructorMap, gClassInfoFor__uintPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__sintPredefinedTypeAST__getConstructorMap, gClassInfoFor__sintPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__uint64PredefinedTypeAST__getConstructorMap, gClassInfoFor__uint64PredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__sint64PredefinedTypeAST__getConstructorMap, gClassInfoFor__sint64PredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__stringsetPredefinedTypeAST__getConstructorMap, gClassInfoFor__stringsetPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__binarysetPredefinedTypeAST__getConstructorMap, gClassInfoFor__binarysetPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__typePredefinedTypeAST__getConstructorMap, gClassInfoFor__typePredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__dataPredefinedTypeAST__getConstructorMap, gClassInfoFor__dataPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getConstructorMap ((typeCategoryMethod__predefinedTypeAST__getConstructorMap) category_method__functionPredefinedTypeAST__getConstructorMap, gClassInfoFor__functionPredefinedTypeAST.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsConstructors (prologueRoutineFor_semanticsConstructors, NULL) ;

//---------------------------------------------------------------------------*

