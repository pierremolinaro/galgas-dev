//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'cli_options_parser.cpp'                        *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       may 26th, 2006, at 11h52'47"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "cli_options_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "cli_options_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void cli_options_parser::
cli_options_parser::
pr_galgas_component_cli_options_parser_63_24_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  GGS_M_cli_options  var_cas_boolOptionsMap ;
  var_cas_boolOptionsMap = GGS_M_cli_options::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_cli_options  var_cas_uintOptionsMap ;
  var_cas_uintOptionsMap = GGS_M_cli_options::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_cli_options  var_cas_stringOptionsMap ;
  var_cas_stringOptionsMap = GGS_M_cli_options::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_optionNameSet ;
  var_cas_optionNameSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  GGS_lstring  var_cas_optionComponentName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_optionComponentName.defineAttribute (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (_inLexique)) {
        case 2 : {
          GGS_lstring  var_cas_typeName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_typeName.defineAttribute (_inLexique.tokenString, _inLexique) ;
          GGS_lstring  var_cas_optionName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_optionName.defineAttribute (_inLexique.tokenString, _inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          GGS_lchar  var_cas_optionChar ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          var_cas_optionChar.defineAttribute (_inLexique.charValue, _inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          GGS_lstring  var_cas_optionString ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_optionString.defineAttribute (_inLexique.tokenString, _inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          GGS_lstring  var_cas_optionComment ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_optionComment.defineAttribute (_inLexique.tokenString, _inLexique) ;
          GGS_uint  var_cas_defaultValue ;
          switch (select_cli_options_parser_1 (_inLexique)) {
            case 1 : {
              var_cas_defaultValue = GGS_uint (true, 0UL) ;
              if (((var_cas_typeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (100))) == (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
                  GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "No default value for this option, 0 will be used") SOURCE_FILE_AT_LINE (101)) ;
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              if (((var_cas_typeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (105))) == (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
                  GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'default' construct is not allowed for a @bool option (allways false by default)") SOURCE_FILE_AT_LINE (106)) ;
              }else if (((var_cas_typeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (107))) == (GGS_string (true, "string"))).isBuiltAndTrue ()) {
                  GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'default' construct is not allowed for a @string option (allways false by default)") SOURCE_FILE_AT_LINE (108)) ;
              }
              GGS_luint  var_cas_v ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              var_cas_v.defineAttribute (_inLexique.ulongValue, _inLexique) ;
              var_cas_defaultValue = var_cas_v.reader_value (_inLexique SOURCE_FILE_AT_LINE (112)) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          if ((var_cas_optionNameSet.reader_hasKey (_inLexique, var_cas_optionName.reader_value (_inLexique SOURCE_FILE_AT_LINE (115)) SOURCE_FILE_AT_LINE (115))).isBuiltAndTrue ()) {
              var_cas_optionName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '")) + (var_cas_optionName.reader_value (_inLexique SOURCE_FILE_AT_LINE (116))))) + (GGS_string (true, "' command line option has been already declared"))) SOURCE_FILE_AT_LINE (116)) ;
          }else if (((var_cas_typeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (117))) == (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
            var_cas_boolOptionsMap.method_insertKey (_inLexique, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue SOURCE_FILE_AT_LINE (118)) ;
          }else if (((var_cas_typeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (119))) == (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
            var_cas_uintOptionsMap.method_insertKey (_inLexique, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue SOURCE_FILE_AT_LINE (120)) ;
          }else if (((var_cas_typeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (121))) == (GGS_string (true, "string"))).isBuiltAndTrue ()) {
            var_cas_stringOptionsMap.method_insertKey (_inLexique, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue SOURCE_FILE_AT_LINE (122)) ;
          }else{
              var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "only @bool, @uint or @string types can be used here") SOURCE_FILE_AT_LINE (124)) ;
          }
          var_cas_optionNameSet.addAssign_operation (var_cas_typeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (126))) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  var_cas_ioOptionsComponentsMap.method_insertKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (132)) ;
  if (var_cas_optionComponentName.isBuilt () &&
      var_cas_boolOptionsMap.isBuilt () &&
      var_cas_uintOptionsMap.isBuilt () &&
      var_cas_stringOptionsMap.isBuilt ()) {
    ::routine_generate_option_component (_inLexique,  var_cas_optionComponentName,  var_cas_boolOptionsMap,  var_cas_uintOptionsMap,  var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (134)) ;
  }
}

//---------------------------------------------------------------------------*

void cli_options_parser::
cli_options_parser::
pr_galgas_component_cli_options_parser_63_24_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          switch (select_cli_options_parser_1 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void cli_options_parser::
cli_options_parser::
pr_galgas_component_cli_options_parser_63_24_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          switch (select_cli_options_parser_1 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void cli_options_parser::
cli_options_parser::
pr_galgas_component_cli_options_parser_63_24_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          switch (select_cli_options_parser_1 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void cli_options_parser::
cli_options_parser::
pr_galgas_component_cli_options_parser_63_24_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          switch (select_cli_options_parser_1 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void cli_options_parser::
cli_options_parser::
pr_galgas_component_cli_options_parser_63_24_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap) {
  GGS_M_cli_options  var_cas_boolOptionsMap ;
  var_cas_boolOptionsMap = GGS_M_cli_options::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_cli_options  var_cas_uintOptionsMap ;
  var_cas_uintOptionsMap = GGS_M_cli_options::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_cli_options  var_cas_stringOptionsMap ;
  var_cas_stringOptionsMap = GGS_M_cli_options::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_optionNameSet ;
  var_cas_optionNameSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  GGS_lstring  var_cas_optionComponentName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_optionComponentName.defineAttribute (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (_inLexique)) {
        case 2 : {
          GGS_lstring  var_cas_typeName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_typeName.defineAttribute (_inLexique.tokenString, _inLexique) ;
          GGS_lstring  var_cas_optionName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_optionName.defineAttribute (_inLexique.tokenString, _inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          GGS_lchar  var_cas_optionChar ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          var_cas_optionChar.defineAttribute (_inLexique.charValue, _inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          GGS_lstring  var_cas_optionString ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_optionString.defineAttribute (_inLexique.tokenString, _inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          GGS_lstring  var_cas_optionComment ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_optionComment.defineAttribute (_inLexique.tokenString, _inLexique) ;
          GGS_uint  var_cas_defaultValue ;
          switch (select_cli_options_parser_1 (_inLexique)) {
            case 1 : {
              var_cas_defaultValue = GGS_uint (true, 0UL) ;
              if (((var_cas_typeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (275))) == (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
                  GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "No default value for this option, 0 will be used") SOURCE_FILE_AT_LINE (276)) ;
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              if (((var_cas_typeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (280))) == (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
                  GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'default' construct is not allowed for a @bool option (allways false by default)") SOURCE_FILE_AT_LINE (281)) ;
              }
              GGS_luint  var_cas_v ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              var_cas_v.defineAttribute (_inLexique.ulongValue, _inLexique) ;
              var_cas_defaultValue = var_cas_v.reader_value (_inLexique SOURCE_FILE_AT_LINE (285)) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          if ((var_cas_optionNameSet.reader_hasKey (_inLexique, var_cas_optionName.reader_value (_inLexique SOURCE_FILE_AT_LINE (288)) SOURCE_FILE_AT_LINE (288))).isBuiltAndTrue ()) {
              var_cas_optionName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '")) + (var_cas_optionName.reader_value (_inLexique SOURCE_FILE_AT_LINE (289))))) + (GGS_string (true, "' command line option has been already declared"))) SOURCE_FILE_AT_LINE (289)) ;
          }else if (((var_cas_typeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (290))) == (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
            var_cas_boolOptionsMap.method_insertKey (_inLexique, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue SOURCE_FILE_AT_LINE (291)) ;
          }else if (((var_cas_typeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (292))) == (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
            var_cas_uintOptionsMap.method_insertKey (_inLexique, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue SOURCE_FILE_AT_LINE (293)) ;
          }else if (((var_cas_typeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (294))) == (GGS_string (true, "string"))).isBuiltAndTrue ()) {
            var_cas_stringOptionsMap.method_insertKey (_inLexique, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue SOURCE_FILE_AT_LINE (295)) ;
          }else{
              var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "only @bool, @uint or @string types can be used here") SOURCE_FILE_AT_LINE (297)) ;
          }
          var_cas_optionNameSet.addAssign_operation (var_cas_typeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (299))) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  var_cas_ioOptionsComponentsMap.method_insertKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (304)) ;
}

//---------------------------------------------------------------------------*

