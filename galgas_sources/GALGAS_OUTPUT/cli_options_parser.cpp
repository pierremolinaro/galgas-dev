//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'cli_options_parser.cpp'                        *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 17th, 2006, at 16h55'19"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "cli_options_parser.h"


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void cli_options_parser::
pr_galgas_component_cli_options_parser_59_24_ (galgas_scanner & lexique_var_,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */) {
  GGS_M_cli_options  var_cas_boolOptionsMap ;
  var_cas_boolOptionsMap = GGS_M_cli_options::constructor_empty (HERE) ;
  GGS_M_cli_options  var_cas_uintOptionsMap ;
  var_cas_uintOptionsMap = GGS_M_cli_options::constructor_empty (HERE) ;
  GGS_M_cli_options  var_cas_stringOptionsMap ;
  var_cas_stringOptionsMap = GGS_M_cli_options::constructor_empty (HERE) ;
  GGS_stringset  var_cas_optionNameSet ;
  var_cas_optionNameSet = GGS_stringset::constructor_empty (HERE) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  GGS_lstring  var_cas_optionComponentName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_optionComponentName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (lexique_var_)) {
        case 2 : {
          GGS_lstring  var_cas_typeName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_typeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_lstring  var_cas_optionName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_optionName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          GGS_lchar  var_cas_optionChar ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          var_cas_optionChar.defineAttribute (lexique_var_.charValue, lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          GGS_lstring  var_cas_optionString ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_optionString.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          GGS_lstring  var_cas_optionComment ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_optionComment.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_uint  var_cas_defaultValue ;
          switch (select_cli_options_parser_1 (lexique_var_)) {
            case 1 : {
              var_cas_defaultValue = GGS_uint (true, 0UL) ;
              if (((var_cas_typeName.reader_value ()) == (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
                  GGS_location (lexique_var_).reader_location ().signalGGSSemanticWarning (lexique_var_, GGS_string (true, "No default value for this option, 0 will be used")) ;
              }
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              if (((var_cas_typeName.reader_value ()) == (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
                  GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "'default' construct is not allowed for a @bool option (allways false by default)")) ;
              }else if (((var_cas_typeName.reader_value ()) == (GGS_string (true, "string"))).isBuiltAndTrue ()) {
                  GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "'default' construct is not allowed for a @string option (allways false by default)")) ;
              }
              GGS_luint  var_cas_v ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              var_cas_v.defineAttribute (lexique_var_.ulongValue, lexique_var_) ;
              var_cas_defaultValue = var_cas_v.reader_value () ;
              } break ;
            default :
              break ;
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          if ((var_cas_optionNameSet.reader_hasKey (var_cas_optionName.reader_value ())).isBuiltAndTrue ()) {
              var_cas_optionName.reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "the '")) + (var_cas_optionName.reader_value ()))) + (GGS_string (true, "' command line option has been already declared")))) ;
          }else if (((var_cas_typeName.reader_value ()) == (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
            var_cas_boolOptionsMap.methode_insertKey (lexique_var_, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue) ;
          }else if (((var_cas_typeName.reader_value ()) == (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
            var_cas_uintOptionsMap.methode_insertKey (lexique_var_, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue) ;
          }else if (((var_cas_typeName.reader_value ()) == (GGS_string (true, "string"))).isBuiltAndTrue ()) {
            var_cas_stringOptionsMap.methode_insertKey (lexique_var_, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue) ;
          }else{
              var_cas_typeName.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "only @bool, @uint or @string types can be used here")) ;
          }
          var_cas_optionNameSet.addAssign_operation (var_cas_typeName.reader_value ()) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  var_cas_ioOptionsComponentsMap.methode_insertKey (lexique_var_, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap) ;
  if (var_cas_optionComponentName.isBuilt () &&
      var_cas_boolOptionsMap.isBuilt () &&
      var_cas_uintOptionsMap.isBuilt () &&
      var_cas_stringOptionsMap.isBuilt ()) {
    ::routine_generate_option_component (lexique_var_,  var_cas_optionComponentName,  var_cas_boolOptionsMap,  var_cas_uintOptionsMap,  var_cas_stringOptionsMap) ;
  }
}

//---------------------------------------------------------------------------*

void cli_options_parser::
pr_galgas_component_cli_options_parser_59_24_importLexique (galgas_scanner & lexique_var_,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          switch (select_cli_options_parser_1 (lexique_var_)) {
            case 1 : {
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              } break ;
            default :
              break ;
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void cli_options_parser::
pr_galgas_component_cli_options_parser_59_24_importSyntax (galgas_scanner & lexique_var_,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          switch (select_cli_options_parser_1 (lexique_var_)) {
            case 1 : {
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              } break ;
            default :
              break ;
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void cli_options_parser::
pr_galgas_component_cli_options_parser_59_24_importSemantics (galgas_scanner & lexique_var_,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          switch (select_cli_options_parser_1 (lexique_var_)) {
            case 1 : {
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              } break ;
            default :
              break ;
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void cli_options_parser::
pr_galgas_component_cli_options_parser_59_24_importGrammarForSemantics (galgas_scanner & lexique_var_,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          switch (select_cli_options_parser_1 (lexique_var_)) {
            case 1 : {
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              } break ;
            default :
              break ;
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void cli_options_parser::
pr_galgas_component_cli_options_parser_59_24_importOptions (galgas_scanner & lexique_var_,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap) {
  GGS_M_cli_options  var_cas_boolOptionsMap ;
  var_cas_boolOptionsMap = GGS_M_cli_options::constructor_empty (HERE) ;
  GGS_M_cli_options  var_cas_uintOptionsMap ;
  var_cas_uintOptionsMap = GGS_M_cli_options::constructor_empty (HERE) ;
  GGS_M_cli_options  var_cas_stringOptionsMap ;
  var_cas_stringOptionsMap = GGS_M_cli_options::constructor_empty (HERE) ;
  GGS_stringset  var_cas_optionNameSet ;
  var_cas_optionNameSet = GGS_stringset::constructor_empty (HERE) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  GGS_lstring  var_cas_optionComponentName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_optionComponentName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (lexique_var_)) {
        case 2 : {
          GGS_lstring  var_cas_typeName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_typeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_lstring  var_cas_optionName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_optionName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          GGS_lchar  var_cas_optionChar ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          var_cas_optionChar.defineAttribute (lexique_var_.charValue, lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          GGS_lstring  var_cas_optionString ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_optionString.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          GGS_lstring  var_cas_optionComment ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_optionComment.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_uint  var_cas_defaultValue ;
          switch (select_cli_options_parser_1 (lexique_var_)) {
            case 1 : {
              var_cas_defaultValue = GGS_uint (true, 0UL) ;
              if (((var_cas_typeName.reader_value ()) == (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
                  GGS_location (lexique_var_).reader_location ().signalGGSSemanticWarning (lexique_var_, GGS_string (true, "No default value for this option, 0 will be used")) ;
              }
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              if (((var_cas_typeName.reader_value ()) == (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
                  GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "'default' construct is not allowed for a @bool option (allways false by default)")) ;
              }
              GGS_luint  var_cas_v ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              var_cas_v.defineAttribute (lexique_var_.ulongValue, lexique_var_) ;
              var_cas_defaultValue = var_cas_v.reader_value () ;
              } break ;
            default :
              break ;
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          if ((var_cas_optionNameSet.reader_hasKey (var_cas_optionName.reader_value ())).isBuiltAndTrue ()) {
              var_cas_optionName.reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "the '")) + (var_cas_optionName.reader_value ()))) + (GGS_string (true, "' command line option has been already declared")))) ;
          }else if (((var_cas_typeName.reader_value ()) == (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
            var_cas_boolOptionsMap.methode_insertKey (lexique_var_, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue) ;
          }else if (((var_cas_typeName.reader_value ()) == (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
            var_cas_uintOptionsMap.methode_insertKey (lexique_var_, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue) ;
          }else if (((var_cas_typeName.reader_value ()) == (GGS_string (true, "string"))).isBuiltAndTrue ()) {
            var_cas_stringOptionsMap.methode_insertKey (lexique_var_, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue) ;
          }else{
              var_cas_typeName.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "only @bool, @uint or @string types can be used here")) ;
          }
          var_cas_optionNameSet.addAssign_operation (var_cas_typeName.reader_value ()) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  var_cas_ioOptionsComponentsMap.methode_insertKey (lexique_var_, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap) ;
}

//---------------------------------------------------------------------------*

void cli_options_parser::
pr_galgas_component_cli_options_parser_59_24_importMetamodels (galgas_scanner & lexique_var_,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          switch (select_cli_options_parser_1 (lexique_var_)) {
            case 1 : {
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              } break ;
            default :
              break ;
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

