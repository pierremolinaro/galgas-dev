//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'cli_options_parser.cpp'                        *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                    november 18th, 2006, at 17h42'52"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "cli_options_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "cli_options_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void cli_options_parser::
cli_options_parser::
pr_galgas_component_cli_options_parser_63_24_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  GGS_M_cli_options  var_cas_boolOptionsMap ;
  var_cas_boolOptionsMap = GGS_M_cli_options::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_cli_options  var_cas_uintOptionsMap ;
  var_cas_uintOptionsMap = GGS_M_cli_options::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_cli_options  var_cas_stringOptionsMap ;
  var_cas_stringOptionsMap = GGS_M_cli_options::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_optionNameSet ;
  var_cas_optionNameSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  GGS_lstring  var_cas_optionComponentName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_optionComponentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (_inLexique)) {
        case 2 : {
          GGS_lstring  var_cas_typeName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_typeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_lstring  var_cas_optionName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_optionName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          GGS_lchar  var_cas_optionChar ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          var_cas_optionChar.defineAttributeFromScanner (_inLexique.charValue, _inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          GGS_lstring  var_cas_optionString ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_optionString.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          GGS_lstring  var_cas_optionComment ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_optionComment.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_uint  var_cas_defaultValue ;
          switch (select_cli_options_parser_1 (_inLexique)) {
            case 1 : {
              var_cas_defaultValue = GGS_uint (true, 0U) ;
              if (((var_cas_typeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (125))) == (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "No default value for this option, 0 will be used") SOURCE_FILE_AT_LINE (126)) ;
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              if (((var_cas_typeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (130))) == (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'default' construct is not allowed for a @bool option (allways false by default)") SOURCE_FILE_AT_LINE (132)) ;
              }else if (((var_cas_typeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (132))) == (GGS_string (true, "string"))).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'default' construct is not allowed for a @string option (allways false by default)") SOURCE_FILE_AT_LINE (134)) ;
              }
              GGS_luint  var_cas_v ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              var_cas_v.defineAttributeFromScanner (_inLexique.uint32value, _inLexique) ;
              var_cas_defaultValue = var_cas_v.reader_uint (_inLexique SOURCE_FILE_AT_LINE (137)) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          if ((var_cas_optionNameSet.reader_hasKey (_inLexique, var_cas_optionName.reader_string (_inLexique SOURCE_FILE_AT_LINE (140)) SOURCE_FILE_AT_LINE (140))).isBuiltAndTrue ()) {
            var_cas_optionName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '")) + (var_cas_optionName.reader_string (_inLexique SOURCE_FILE_AT_LINE (141))))) + (GGS_string (true, "' command line option has been already declared"))) SOURCE_FILE_AT_LINE (142)) ;
          }else if (((var_cas_typeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (142))) == (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
            var_cas_boolOptionsMap.modifier_insertKey (_inLexique, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue SOURCE_FILE_AT_LINE (143)) ;
          }else if (((var_cas_typeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (144))) == (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
            var_cas_uintOptionsMap.modifier_insertKey (_inLexique, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue SOURCE_FILE_AT_LINE (145)) ;
          }else if (((var_cas_typeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (146))) == (GGS_string (true, "string"))).isBuiltAndTrue ()) {
            var_cas_stringOptionsMap.modifier_insertKey (_inLexique, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue SOURCE_FILE_AT_LINE (147)) ;
          }else{
            var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "only @bool, @uint or @string types can be used here") SOURCE_FILE_AT_LINE (150)) ;
          }
          var_cas_optionNameSet._addAssign_operation (var_cas_typeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (151))) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  var_cas_ioOptionsComponentsMap.modifier_insertKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (157)) ;
  if (var_cas_optionComponentName._isBuilt () &&
      var_cas_boolOptionsMap._isBuilt () &&
      var_cas_uintOptionsMap._isBuilt () &&
      var_cas_stringOptionsMap._isBuilt ()) {
    ::routine_generate_option_component (_inLexique,  var_cas_optionComponentName,  var_cas_boolOptionsMap,  var_cas_uintOptionsMap,  var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (159)) ;
  }
}

//---------------------------------------------------------------------------*

void cli_options_parser::
cli_options_parser::
pr_galgas_component_cli_options_parser_63_24_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          switch (select_cli_options_parser_1 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void cli_options_parser::
cli_options_parser::
pr_galgas_component_cli_options_parser_63_24_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          switch (select_cli_options_parser_1 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void cli_options_parser::
cli_options_parser::
pr_galgas_component_cli_options_parser_63_24_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          switch (select_cli_options_parser_1 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void cli_options_parser::
cli_options_parser::
pr_galgas_component_cli_options_parser_63_24_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          switch (select_cli_options_parser_1 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void cli_options_parser::
cli_options_parser::
pr_galgas_component_cli_options_parser_63_24_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap) {
  GGS_M_cli_options  var_cas_boolOptionsMap ;
  var_cas_boolOptionsMap = GGS_M_cli_options::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_cli_options  var_cas_uintOptionsMap ;
  var_cas_uintOptionsMap = GGS_M_cli_options::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_cli_options  var_cas_stringOptionsMap ;
  var_cas_stringOptionsMap = GGS_M_cli_options::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_optionNameSet ;
  var_cas_optionNameSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  GGS_lstring  var_cas_optionComponentName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_optionComponentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_cli_options_parser_0 (_inLexique)) {
        case 2 : {
          GGS_lstring  var_cas_typeName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_typeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_lstring  var_cas_optionName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_optionName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          GGS_lchar  var_cas_optionChar ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fchar) ;
          var_cas_optionChar.defineAttributeFromScanner (_inLexique.charValue, _inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          GGS_lstring  var_cas_optionString ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_optionString.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
          GGS_lstring  var_cas_optionComment ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_optionComment.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_uint  var_cas_defaultValue ;
          switch (select_cli_options_parser_1 (_inLexique)) {
            case 1 : {
              var_cas_defaultValue = GGS_uint (true, 0U) ;
              if (((var_cas_typeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (300))) == (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "No default value for this option, 0 will be used") SOURCE_FILE_AT_LINE (301)) ;
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_default) ;
              if (((var_cas_typeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (305))) == (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'default' construct is not allowed for a @bool option (allways false by default)") SOURCE_FILE_AT_LINE (307)) ;
              }
              GGS_luint  var_cas_v ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              var_cas_v.defineAttributeFromScanner (_inLexique.uint32value, _inLexique) ;
              var_cas_defaultValue = var_cas_v.reader_uint (_inLexique SOURCE_FILE_AT_LINE (310)) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          if ((var_cas_optionNameSet.reader_hasKey (_inLexique, var_cas_optionName.reader_string (_inLexique SOURCE_FILE_AT_LINE (313)) SOURCE_FILE_AT_LINE (313))).isBuiltAndTrue ()) {
            var_cas_optionName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '")) + (var_cas_optionName.reader_string (_inLexique SOURCE_FILE_AT_LINE (314))))) + (GGS_string (true, "' command line option has been already declared"))) SOURCE_FILE_AT_LINE (315)) ;
          }else if (((var_cas_typeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (315))) == (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
            var_cas_boolOptionsMap.modifier_insertKey (_inLexique, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue SOURCE_FILE_AT_LINE (316)) ;
          }else if (((var_cas_typeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (317))) == (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
            var_cas_uintOptionsMap.modifier_insertKey (_inLexique, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue SOURCE_FILE_AT_LINE (318)) ;
          }else if (((var_cas_typeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (319))) == (GGS_string (true, "string"))).isBuiltAndTrue ()) {
            var_cas_stringOptionsMap.modifier_insertKey (_inLexique, var_cas_optionName, var_cas_optionChar, var_cas_optionString, var_cas_optionComment, var_cas_defaultValue SOURCE_FILE_AT_LINE (320)) ;
          }else{
            var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "only @bool, @uint or @string types can be used here") SOURCE_FILE_AT_LINE (323)) ;
          }
          var_cas_optionNameSet._addAssign_operation (var_cas_typeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (324))) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  var_cas_ioOptionsComponentsMap.modifier_insertKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (329)) ;
}

//---------------------------------------------------------------------------*

