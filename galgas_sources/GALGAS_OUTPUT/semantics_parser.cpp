//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semantics_parser.cpp'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       may 31th, 2007, at 18h54'10"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "semantics_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semantics_parser.ggs", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_449_6_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &var_cas_ioLexiqueMapForUse,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &var_cas_ioTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  GGS_lstring  var_cas_componentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_string var_cas_defLexique ;
  var_cas_defLexique = GGS_string (true, "") ;
  GGS_ModelMap  var_cas_modelMap ;
  var_cas_modelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_ActionMap  var_cas_actionMap ;
  var_cas_actionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_inclusionsForHeaderFile ;
  GGS_stringset  var_cas_inclusionsForImplementationFile ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentEntitiesMap ;
  GGS_stringset  var_cas_classNamesSet ;
  var_cas_classNamesSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  GGS_stringset  var_cas_includedGrammarComponents ;
  GGS_entityToImplementMap  var_cas_allMetamodelClassMap ;
  nt_import_headers_semantics_and_grammars_ (_inLexique, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_includedGrammarComponents, var_cas_ioLexiqueMapForUse, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap, var_cas_ioGrammarComponentsMap, var_cas_ioOptionsComponentsMap, var_cas_inclusionsForImplementationFile, var_cas_inclusionsForHeaderFile, var_cas_optionsComponentsMapForUse, var_cas_modelMap, var_cas_actionMap, var_cas_componentEntitiesMap, var_cas_tableEnAvant, var_cas_allMetamodelClassMap) ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_19629 = _inLexique.parsingContext () ;
    GGS_typeTableRoutinesAimplementer  var_cas_UNUSED_tableRoutinesAimplementer ;
    var_cas_UNUSED_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_UNUSED_tableNomRoutinesDeclarees ;
    var_cas_UNUSED_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableEnAvant  var_cas_UNUSED_tableEnAvant ;
    var_cas_UNUSED_tableEnAvant = var_cas_tableEnAvant ;
    GGS_M_semanticsEntitiesForUse  var_cas_UNUSED_componentSemanticsEntitiesMap ;
    var_cas_UNUSED_componentSemanticsEntitiesMap = var_cas_componentEntitiesMap ;
    { bool syntaxRepeat = true ;
      while (syntaxRepeat) {
        switch (select_repeat_semantics_parser_0 (_inLexique)) {
          case 2 : {
            nt_semantics_declaration_importSemantics (_inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_UNUSED_componentSemanticsEntitiesMap, var_cas_UNUSED_tableNomRoutinesDeclarees, var_cas_UNUSED_tableEnAvant, var_cas_UNUSED_tableRoutinesAimplementer, var_cas_ioTreewalkingComponentMap) ;
            } break ;
          default :
            syntaxRepeat = false ;
            break ;
        }
      }
    }
  //--- Branch of parse/rewind instruction
    _inLexique.setParsingContext (context_19629) ;
    GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer ;
    var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees ;
    var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
    var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
    GGS_treewalkingRoutineHeaderMap  var_cas_treewalkingRoutineHeaderMap ;
    var_cas_treewalkingRoutineHeaderMap = GGS_treewalkingRoutineHeaderMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
    { bool syntaxRepeat = true ;
      while (syntaxRepeat) {
        switch (select_repeat_semantics_parser_0 (_inLexique)) {
          case 2 : {
            nt_semantics_declaration_ (_inLexique, var_cas_componentEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_optionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioTreewalkingComponentMap) ;
            } break ;
          default :
            syntaxRepeat = false ;
            break ;
        }
      }
    }
  //--- End of parse/rewind instruction
  if (((var_cas_ioSemanticsComponentsMap.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (539)) COMMA_SOURCE_FILE_AT_LINE (539)))._operator_not ()).isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap ;
    var_cas_optionsComponentsMap = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
    var_cas_ioSemanticsComponentsMap.modifier_insertKey (_inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentEntitiesMap COMMA_SOURCE_FILE_AT_LINE (541)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  const GGS_typeTableNomRoutinesDeclarees _var_20195 = var_cas_tableNomRoutinesDeclarees ;
  GGS_typeTableNomRoutinesDeclarees::element_type * operand_20195 = _var_20195.firstObject () ;
  while ((operand_20195 != NULL)) {
    macroValidPointer (operand_20195) ;
    if (((var_cas_tableRoutinesAimplementer.reader_hasKey (_inLexique, operand_20195->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (558)) COMMA_SOURCE_FILE_AT_LINE (558)))._operator_not ()).isBuiltAndTrue ()) {
      operand_20195->mKey.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the routine '"))._operator_concat (operand_20195->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (559))))._operator_concat (GGS_string (true, "' is not implemented within the component")) COMMA_SOURCE_FILE_AT_LINE (561)) ;
    }
    operand_20195 = operand_20195->nextObject () ;
  }
  if (var_cas_componentName._isBuilt () &&
      var_cas_inclusionsForHeaderFile._isBuilt () &&
      var_cas_defLexique._isBuilt () &&
      var_cas_listeEntitesAengendrer._isBuilt () &&
      var_cas_inclusionsForImplementationFile._isBuilt ()) {
    ::routine_generateSemanticsComponent (_inLexique,  var_cas_componentName,  var_cas_inclusionsForHeaderFile,  var_cas_defLexique,  var_cas_listeEntitesAengendrer,  var_cas_inclusionsForImplementationFile COMMA_SOURCE_FILE_AT_LINE (563)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_449_6_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_treewalkingComponents  &/* var_cas_ioTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_449_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &var_cas_ioTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  GGS_lstring  var_cas_componentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  ::routine_enterBuiltinTypes (_inLexique,  var_cas_componentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (597)) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  var_cas_includedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_ModelMap  var_cas_modelMap ;
  GGS_ActionMap  var_cas_actionMap ;
  nt_import_headers_semantics_and_grammars_importSemantics (_inLexique, var_cas_ioSemanticsComponentsMap, var_cas_includedSemanticsComponents, var_cas_includedOptionComponents, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap) ;
  GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer ;
  var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees ;
  var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_importSemantics (_inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioTreewalkingComponentMap) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (((var_cas_ioSemanticsComponentsMap.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (630)) COMMA_SOURCE_FILE_AT_LINE (630)))._operator_not ()).isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap ;
    var_cas_optionsComponentsMap = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
    var_cas_ioSemanticsComponentsMap.modifier_insertKey (_inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (632)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_449_6_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_449_6_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_treewalkingComponents  &/* var_cas_ioTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_449_6_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'import_headers_semantics_and_grammars'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_699_6_ (galgas_scanner & _inLexique,
                                GGS_stringset  &var_cas_outImportedSemanticsComponents,
                                GGS_stringset  &var_cas_outIncludedMetamodelComponents,
                                GGS_stringset  &var_cas_outImportedOptionComponents,
                                GGS_stringset  &var_cas_outImportedGrammarComponents,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &var_cas_ioTreewalkingComponentMap,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_stringset  &var_cas_outInclusionsForImplementationFile,
                                GGS_stringset  &var_cas_outInclusionsForHeaderFile,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_entityToImplementMap  &var_cas_outAllMetamodelClassMap) {
  var_cas_outAllMetamodelClassMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outActionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outInclusionsForHeaderFile = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outInclusionsForImplementationFile = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outIncludedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedOptionComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedGrammarComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_ioOptionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "char"), GGS_location (_inLexique) COMMA_HERE), GGS_CharModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (733)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "string"), GGS_location (_inLexique) COMMA_HERE), GGS_StringModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (735)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "uint"), GGS_location (_inLexique) COMMA_HERE), GGS_UIntModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (737)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "sint"), GGS_location (_inLexique) COMMA_HERE), GGS_SIntModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (739)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "uint64"), GGS_location (_inLexique) COMMA_HERE), GGS_UInt64Model::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (741)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "sint64"), GGS_location (_inLexique) COMMA_HERE), GGS_SInt64Model::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (743)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "bool"), GGS_location (_inLexique) COMMA_HERE), GGS_BoolModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (745)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "double"), GGS_location (_inLexique) COMMA_HERE), GGS_DoubleModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (747)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lchar"), GGS_location (_inLexique) COMMA_HERE), GGS_LCharModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (749)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lstring"), GGS_location (_inLexique) COMMA_HERE), GGS_LStringModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (751)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "luint"), GGS_location (_inLexique) COMMA_HERE), GGS_LUIntModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (753)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lsint"), GGS_location (_inLexique) COMMA_HERE), GGS_LSIntModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (755)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "luint64"), GGS_location (_inLexique) COMMA_HERE), GGS_LUInt64Model::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (757)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lsint64"), GGS_location (_inLexique) COMMA_HERE), GGS_LSInt64Model::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (759)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lbool"), GGS_location (_inLexique) COMMA_HERE), GGS_LBoolModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (761)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "ldouble"), GGS_location (_inLexique) COMMA_HERE), GGS_LDoubleModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (763)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "location"), GGS_location (_inLexique) COMMA_HERE), GGS_LocationModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (765)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "stringset"), GGS_location (_inLexique) COMMA_HERE), GGS_StringsetModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (767)) ;
  ::routine_enterBuiltinTypes (_inLexique,  var_cas_ioComponentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (768)) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents ;
  var_cas_alreadyImportedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents ;
  var_cas_alreadyImportedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
              GGS_lstring  var_cas_treewalkingComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_treewalkingComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForImplementationFile._addAssign_operation ((var_cas_treewalkingComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (780)))._operator_concat (GGS_string (true, ".h"))) ;
              switch (select_semantics_parser_3 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_fileName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_fileName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_fileName, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              GGS_lstring  var_cas_optionComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_optionComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outImportedOptionComponents._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (797))) ;
              GGS_M_cli_options  var_cas_boolOptionsMap ;
              GGS_M_cli_options  var_cas_uintOptionsMap ;
              GGS_M_cli_options  var_cas_stringOptionsMap ;
              switch (select_semantics_parser_4 (_inLexique)) {
                case 1 : {
                  if (var_cas_ioOptionsComponentsMap._isBuilt ()) {
                    var_cas_ioOptionsComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap COMMA_SOURCE_FILE_AT_LINE (802)) ;
                  }
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_fileName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_fileName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  GGS_M_optionComponents  var_cas_importedOptionComponentsMap ;
                  var_cas_importedOptionComponentsMap = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
                  nt_parse_option_component_for_importing_ (_inLexique, var_cas_fileName, var_cas_importedOptionComponentsMap) ;
                  if (var_cas_importedOptionComponentsMap._isBuilt ()) {
                    var_cas_importedOptionComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap COMMA_SOURCE_FILE_AT_LINE (812)) ;
                  }
                  } break ;
                default :
                  break ;
              }
              var_cas_ioOptionsComponentsMapForUse.modifier_insertKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap COMMA_SOURCE_FILE_AT_LINE (814)) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              GGS_lstring  var_cas_grammarComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_grammarComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outImportedGrammarComponents._addAssign_operation (var_cas_grammarComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (819))) ;
              GGS_M_grammarComponents  var_cas_grammarComponentsMap ;
              switch (select_semantics_parser_5 (_inLexique)) {
                case 1 : {
                  var_cas_grammarComponentsMap = var_cas_ioGrammarComponentsMap ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  var_cas_grammarComponentsMap = GGS_M_grammarComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
                  nt_parse_grammar_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_grammarComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioTreewalkingComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              GGS_M_nonterminalSymbolAltsForGrammar  var_cas_nonterminalSymbolParametersMap ;
              GGS_lstring  var_cas_lexiqueClassName ;
              GGS_M_optionComponents  automatic_var_0 ;
              if (var_cas_grammarComponentsMap._isBuilt ()) {
                var_cas_grammarComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_grammarComponentName, var_cas_nonterminalSymbolParametersMap, var_cas_lexiqueClassName, automatic_var_0 COMMA_SOURCE_FILE_AT_LINE (838)) ;
              }
              GGS_M_nonterminalSymbolAlts  var_cas_grammarAltMap ;
              var_cas_grammarAltMap = GGS_M_nonterminalSymbolAlts::constructor_emptyMap (_inLexique COMMA_HERE) ;
              const GGS_M_nonterminalSymbolAltsForGrammar _var_30121 = var_cas_nonterminalSymbolParametersMap ;
              GGS_M_nonterminalSymbolAltsForGrammar::element_type * operand_30121 = _var_30121.firstObject () ;
              while ((operand_30121 != NULL)) {
                macroValidPointer (operand_30121) ;
                GGS_L_EXsignature  var_cas_formalParametersList ;
                var_cas_formalParametersList = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                const GGS_L_signature _var_30295 = operand_30121->mInfo.mFormalParametersList ;
                GGS_L_signature::element_type * operand_30295 = _var_30295.firstObject () ;
                while ((operand_30295 != NULL)) {
                  macroValidPointer (operand_30295) ;
                  GGS_AC_semanticsEntity  var_cas_e ;
                  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
                    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, operand_30295->mGalgasTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (844)) ;
                  }
                  GGS_AC_galgasType  var_cas_type ;
                  var_cas_type = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_e.getPtr (), true, operand_30295->mGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (845)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (845)) ;
                  var_cas_formalParametersList._addAssign_operation (var_cas_type, operand_30295->mFormalArgumentPassingMode) ;
                  operand_30295 = operand_30295->nextObject () ;
                }
                var_cas_grammarAltMap.modifier_insertKey (_inLexique, operand_30121->mKey, var_cas_formalParametersList, operand_30121->mInfo.mReturnedEntityTypeName COMMA_SOURCE_FILE_AT_LINE (849)) ;
                operand_30121 = operand_30121->nextObject () ;
              }
              GGS_AC_semanticsEntity  var_cas_e ;
              var_cas_e = GGS_C_grammarForSemantics::constructor_new (_inLexique, var_cas_grammarAltMap, var_cas_lexiqueClassName COMMA_HERE) ;
              var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_grammarComponentName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (852)) ;
              GGS_lstring  var_cas_path ;
              var_cas_path = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_extension ;
              var_cas_extension = GGS_lstring::constructor_new (_inLexique, GGS_string (true, "h"), GGS_location (_inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_fileNameWithPath ;
              if (var_cas_path._isBuilt () &&
                  var_cas_grammarComponentName._isBuilt () &&
                  var_cas_extension._isBuilt ()) {
                ::routine_buildFileNameWithPath (_inLexique,  var_cas_fileNameWithPath,  var_cas_path,  var_cas_grammarComponentName,  var_cas_extension COMMA_SOURCE_FILE_AT_LINE (856)) ;
              }
              var_cas_outInclusionsForImplementationFile._addAssign_operation (var_cas_fileNameWithPath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (857))) ;
              const GGS_M_grammarComponents _var_31322 = var_cas_grammarComponentsMap ;
              GGS_M_grammarComponents::element_type * operand_31322 = _var_31322.firstObject () ;
              while ((operand_31322 != NULL)) {
                macroValidPointer (operand_31322) ;
                if (((var_cas_ioGrammarComponentsMap.reader_hasKey (_inLexique, operand_31322->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (862)) COMMA_SOURCE_FILE_AT_LINE (862)))._operator_not ()).isBuiltAndTrue ()) {
                  var_cas_ioGrammarComponentsMap.modifier_insertKey (_inLexique, operand_31322->mKey, operand_31322->mInfo.mNonterminalSymbolParametersMap, operand_31322->mInfo.mLexiqueName, operand_31322->mInfo.mOptionsMap COMMA_SOURCE_FILE_AT_LINE (863)) ;
                }
                operand_31322 = operand_31322->nextObject () ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              GGS_lstring  var_cas_componentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_6 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              if (((var_cas_outImportedSemanticsComponents.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (887)) COMMA_SOURCE_FILE_AT_LINE (887)))._operator_not ()).isBuiltAndTrue ()) {
                GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
                GGS_M_optionComponents  var_cas_importedOptionsComponentsMap ;
                GGS_ModelMap  automatic_var_1 ;
                GGS_ActionMap  automatic_var_2 ;
                GGS_stringset  automatic_var_3 ;
                GGS_stringset  automatic_var_4 ;
                GGS_stringset  automatic_var_5 ;
                if (var_cas_ioSemanticsComponentsMap._isBuilt ()) {
                  var_cas_ioSemanticsComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_componentName, automatic_var_1, automatic_var_2, automatic_var_3, automatic_var_4, automatic_var_5, var_cas_importedOptionsComponentsMap, var_cas_importedEntities COMMA_SOURCE_FILE_AT_LINE (890)) ;
                }
                const GGS_M_semanticsEntitiesForUse _var_32606 = var_cas_importedEntities ;
                GGS_M_semanticsEntitiesForUse::element_type * operand_32606 = _var_32606.firstObject () ;
                while ((operand_32606 != NULL)) {
                  macroValidPointer (operand_32606) ;
                  if (((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, operand_32606->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (892)) COMMA_SOURCE_FILE_AT_LINE (892)))._operator_not ()).isBuiltAndTrue ()) {
                    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, operand_32606->mKey, operand_32606->mInfo.aDefEntite COMMA_SOURCE_FILE_AT_LINE (893)) ;
                  }
                  operand_32606 = operand_32606->nextObject () ;
                }
                var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (896))) ;
                const GGS_M_optionComponents _var_33037 = var_cas_importedOptionsComponentsMap ;
                GGS_M_optionComponents::element_type * operand_33037 = _var_33037.firstObject () ;
                while ((operand_33037 != NULL)) {
                  macroValidPointer (operand_33037) ;
                  if (((var_cas_ioOptionsComponentsMapForUse.reader_hasKey (_inLexique, operand_33037->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (899)) COMMA_SOURCE_FILE_AT_LINE (899)))._operator_not ()).isBuiltAndTrue ()) {
                    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (operand_33037->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (900))))._operator_concat (GGS_string (true, "' option component must have been imported")) COMMA_SOURCE_FILE_AT_LINE (901)) ;
                  }
                  operand_33037 = operand_33037->nextObject () ;
                }
              }
              ::routine_importSemanticsComponent (_inLexique,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName COMMA_SOURCE_FILE_AT_LINE (904)) ;
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (915))) ;
              var_cas_outImportedSemanticsComponents._addAssign_operation (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (916))) ;
              } break ;
            case 5 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
              GGS_lstring  var_cas_metamodelComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_metamodelComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_7 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              if (((var_cas_outIncludedMetamodelComponents.reader_hasKey (_inLexique, var_cas_metamodelComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (933)) COMMA_SOURCE_FILE_AT_LINE (933)))._operator_not ()).isBuiltAndTrue ()) {
                GGS_entityToImplementMap  var_cas_metamodelClassMap ;
                GGS_lstring  automatic_var_6 ;
                GGS_stringset  automatic_var_7 ;
                if (var_cas_ioMetamodelComponentMap._isBuilt ()) {
                  var_cas_ioMetamodelComponentMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelComponentName, automatic_var_6, var_cas_metamodelClassMap, automatic_var_7 COMMA_SOURCE_FILE_AT_LINE (935)) ;
                }
                const GGS_entityToImplementMap _var_34481 = var_cas_metamodelClassMap ;
                GGS_entityToImplementMap::element_type * operand_34481 = _var_34481.firstObject () ;
                while ((operand_34481 != NULL)) {
                  macroValidPointer (operand_34481) ;
                  var_cas_outAllMetamodelClassMap.modifier_insertKey (_inLexique, operand_34481->mKey, operand_34481->mInfo.mAllMetamodelPropertyMap, operand_34481->mInfo.mIsAbstract, operand_34481->mInfo.mCurrentMetamodelPropertyMap, operand_34481->mInfo.mSuperEntityName, operand_34481->mInfo.mAncestorClassesMap, operand_34481->mInfo.mPropertyList, operand_34481->mInfo.mMetamodelName, operand_34481->mInfo.mID COMMA_SOURCE_FILE_AT_LINE (945)) ;
                  GGS_AC_galgasType  var_cas_t ;
                  var_cas_t = GGS_typeGalgas_singleReferenceEntity::constructor_new (_inLexique, operand_34481->mKey, operand_34481->mInfo.mPropertyList, operand_34481->mInfo.mAncestorClassesMap.reader_allKeys (_inLexique COMMA_SOURCE_FILE_AT_LINE (959)) COMMA_HERE) ;
                  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, operand_34481->mKey, GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (961)) ;
                  operand_34481 = operand_34481->nextObject () ;
                }
                var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (966))) ;
              }
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (969))) ;
              var_cas_outIncludedMetamodelComponents._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (970))) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_699_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_stringset  &var_cas_outIncludedSemanticsComponents,
                                GGS_stringset  &var_cas_outIncludedOptionComponents,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &var_cas_ioTreewalkingComponentMap) {
  var_cas_outActionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outIncludedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outIncludedOptionComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents ;
  var_cas_alreadyImportedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents ;
  var_cas_alreadyImportedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_3 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              GGS_lstring  var_cas_optionComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_optionComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outIncludedOptionComponents._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1008))) ;
              switch (select_semantics_parser_4 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_option_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_5 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_grammar_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              GGS_lstring  var_cas_componentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outIncludedSemanticsComponents._addAssign_operation (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1028))) ;
              switch (select_semantics_parser_6 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
              GGS_ModelMap  automatic_var_8 ;
              GGS_ActionMap  automatic_var_9 ;
              GGS_stringset  automatic_var_10 ;
              GGS_stringset  automatic_var_11 ;
              GGS_stringset  automatic_var_12 ;
              GGS_M_optionComponents  automatic_var_13 ;
              if (var_cas_ioSemanticsComponentsMap._isBuilt ()) {
                var_cas_ioSemanticsComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_componentName, automatic_var_8, automatic_var_9, automatic_var_10, automatic_var_11, automatic_var_12, automatic_var_13, var_cas_importedEntities COMMA_SOURCE_FILE_AT_LINE (1042)) ;
              }
              const GGS_M_semanticsEntitiesForUse _var_38250 = var_cas_importedEntities ;
              GGS_M_semanticsEntitiesForUse::element_type * operand_38250 = _var_38250.firstObject () ;
              while ((operand_38250 != NULL)) {
                macroValidPointer (operand_38250) ;
                if (((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, operand_38250->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1044)) COMMA_SOURCE_FILE_AT_LINE (1044)))._operator_not ()).isBuiltAndTrue ()) {
                  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, operand_38250->mKey, operand_38250->mInfo.aDefEntite COMMA_SOURCE_FILE_AT_LINE (1045)) ;
                }
                operand_38250 = operand_38250->nextObject () ;
              }
              ::routine_importSemanticsComponent (_inLexique,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName COMMA_SOURCE_FILE_AT_LINE (1048)) ;
              } break ;
            case 5 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
              GGS_lstring  var_cas_metamodelComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_metamodelComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_7 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              GGS_lstring  automatic_var_14 ;
              GGS_entityToImplementMap  automatic_var_15 ;
              GGS_stringset  automatic_var_16 ;
              if (var_cas_ioMetamodelComponentMap._isBuilt ()) {
                var_cas_ioMetamodelComponentMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelComponentName, automatic_var_14, automatic_var_15, automatic_var_16 COMMA_SOURCE_FILE_AT_LINE (1074)) ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_699_6_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_3 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_4 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_option_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_5 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_grammar_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_6 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 5 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_7 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1086_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_routineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_routineName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1114)) COMMA_SOURCE_FILE_AT_LINE (1114))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1116)) ;
    }
    GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
    var_cas_listeDeTypesPrecedenteDeclaration = GGS_typeEntiteRoutine::_castFrom (_inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1118)).reader_aListeArgumentsFormels (_inLexique COMMA_SOURCE_FILE_AT_LINE (1118)) ;
    ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (1119)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1126)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteRoutine::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1128)) ;
  }
  switch (select_semantics_parser_8 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_ioInstructionList ;
      var_cas_ioInstructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_entityPropertyMap  var_cas_propertyMap ;
      var_cas_propertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_treewalkingRoutineHeaderMap  var_cas_treewalkingRoutineHeaderMap ;
      var_cas_treewalkingRoutineHeaderMap = GGS_treewalkingRoutineHeaderMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_entityToImplementMap  var_cas_metamodelEntityMap ;
      var_cas_metamodelEntityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_semantic_instructions_list_ (_inLexique, var_cas_treewalkingRoutineHeaderMap, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_tableArgumentsMethode, var_cas_ioInstructionList, var_cas_propertyMap, var_cas_metamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      GGS_typeEntityToGenerate  var_cas_ea ;
      var_cas_ea = GGS_typeRoutineAengendrer::constructor_new (_inLexique, var_cas_routineName, var_cas_listeTypeEtNomsArguments, var_cas_ioInstructionList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_ea) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1160)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1086_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_routineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  var_cas_ioExternActionMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_signature, GGS_bool (true, false) COMMA_SOURCE_FILE_AT_LINE (1188)) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_routineName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1191)) COMMA_SOURCE_FILE_AT_LINE (1191))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1193)) ;
    }
    GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
    var_cas_listeDeTypesPrecedenteDeclaration = GGS_typeEntiteRoutine::_castFrom (_inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1195)).reader_aListeArgumentsFormels (_inLexique COMMA_SOURCE_FILE_AT_LINE (1195)) ;
    ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (1196)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1203)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteRoutine::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1205)) ;
  }
  switch (select_semantics_parser_8 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      nt_semantic_instructions_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1216)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1086_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  switch (select_semantics_parser_8 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      nt_semantic_instructions_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1226_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName,
                                GGS_string &var_cas_outSuperClassMessage) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClassName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_outSuperClassMessage = GGS_string (true, "") ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1226_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outMessageMap = GGS_classMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClasses = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outAttributeList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1226_6_parse (galgas_scanner & /* _inLexique */) {
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1268_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName,
                                GGS_string &var_cas_outSuperClassMessage) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outSuperClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outSuperClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1283)) ;
  }
  GGS_AC_galgasType  var_cas_typeUtilisateur ;
  var_cas_typeUtilisateur = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1285)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (1285)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_typeUtilisateur.getPtr (), true, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1287)) ;
  var_cas_tableDesMethodes = var_cas_classType.reader_mReaderMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1288)) ;
  var_cas_listeTousAttributsSemantiques = var_cas_classType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1289)) ;
  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1290)) ;
  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1291)) ;
  var_cas_tableAttributs = var_cas_classType.reader_mNonExternAttributesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1292)) ;
  var_cas_outSuperClassMessage = var_cas_classType.reader_mClassMessage (_inLexique COMMA_SOURCE_FILE_AT_LINE (1293)) ;
  var_cas_tableDesClassesAncetres.modifier_insertKey (_inLexique, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1304)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1268_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits) {
  GGS_lstring  var_cas_superClassName ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_superClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1323)) ;
  }
  GGS_AC_galgasType  var_cas_typeUtilisateur ;
  var_cas_typeUtilisateur = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1325)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (1325)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_typeUtilisateur.getPtr (), true, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1327)) ;
  var_cas_tableDesMethodes = var_cas_classType.reader_mReaderMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1328)) ;
  var_cas_listeTousAttributsSemantiques = var_cas_classType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1329)) ;
  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1330)) ;
  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1331)) ;
  var_cas_tableAttributs = var_cas_classType.reader_mNonExternAttributesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1332)) ;
  var_cas_tableDesClassesAncetres.modifier_insertKey (_inLexique, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1344)) ;
  GGS_TypeModel  var_cas_type ;
  if (var_cas_ioModelMap._isBuilt ()) {
    var_cas_ioModelMap (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (1347)) ;
  }
  { const GGS_TypeModel _var_51902 = var_cas_type ; // CAST instruction
    if (_var_51902.getPtr () != NULL) {
      macroValidPointer (_var_51902.getPtr ()) ;
      if (dynamic_cast <cPtr_ClassModel *> (_var_51902.getPtr ()) != NULL) {
        const GGS_ClassModel var_cas_model (_var_51902.getPtr ()) ;
        var_cas_outSuperClasses = var_cas_model.reader_mSuperClasses (_inLexique COMMA_SOURCE_FILE_AT_LINE (1350)) ;
        var_cas_outAttributeList = var_cas_model.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1351)) ;
        var_cas_outMessageMap = var_cas_model.reader_mMessageMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1352)) ;
      }else{
        var_cas_superClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '@"))._operator_concat (var_cas_superClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1354))))._operator_concat (GGS_string (true, "' type is not a class")) COMMA_SOURCE_FILE_AT_LINE (1356)) ;
        var_cas_outSuperClasses._drop_operation () ;
        var_cas_outAttributeList._drop_operation () ;
        var_cas_outMessageMap._drop_operation () ;
      }
    }
  }
  var_cas_outSuperClasses._addAssign_operation (var_cas_superClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1357))) ;
  var_cas_outMessageMap = GGS_classMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClasses = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outAttributeList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1268_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1371_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap) {
  GGS_bool var_cas_estAbstraite ;
  switch (select_semantics_parser_9 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      var_cas_estAbstraite = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_estAbstraite = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_abstractClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_abstractClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_10 (_inLexique)) {
    case 1 : {
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1392)) COMMA_SOURCE_FILE_AT_LINE (1392)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1393)) COMMA_SOURCE_FILE_AT_LINE (1393))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType::constructor_new (_inLexique, var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (1395)) ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_string var_cas_superClassMessage ;
      GGS_lstring  automatic_var_17 ;
      nt_parent_class_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap, automatic_var_17, var_cas_superClassMessage) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
      var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
      var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
      var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes ;
      var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      GGS_string var_cas_classMessage ;
      var_cas_classMessage = GGS_string (true, "") ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_11 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              switch (select_semantics_parser_12 (_inLexique)) {
                case 1 : {
                  GGS_lstring  var_cas_messageText ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (((var_cas_classMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1440)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the class message is already defined") COMMA_SOURCE_FILE_AT_LINE (1442)) ;
                  }else if (((var_cas_messageText.ggs_string ().reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1442)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the class message string should not be empty") COMMA_SOURCE_FILE_AT_LINE (1444)) ;
                  }else{
                    var_cas_classMessage = var_cas_messageText.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1445)) ;
                  }
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_messageName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_lstring  var_cas_messageText ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (((var_cas_inheritedMessageMap.reader_hasKey (_inLexique, var_cas_messageName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1454)) COMMA_SOURCE_FILE_AT_LINE (1454)))._operator_not ()).isBuiltAndTrue ()) {
                    var_cas_messageMapForHeirs.modifier_insertKey (_inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (1455)) ;
                  }
                  var_cas_tableMessagesClasseConcrete.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageText COMMA_SOURCE_FILE_AT_LINE (1457)) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_method_ (_inLexique, var_cas_estAbstraite, var_cas_listeAttributsSemantiquesCourants, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_classMessage) ;
              } break ;
            case 5 : {
              nt_overrided_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_classMessage) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      if ((((var_cas_superClassMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1506)))._operator_strictSup (GGS_uint (true, 0U)))._operator_and ((var_cas_classMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1506)))._operator_isEqual (GGS_uint (true, 0U)))).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this class should defined a class message, as it inherits from a class that does") COMMA_SOURCE_FILE_AT_LINE (1508)) ;
      }
      const GGS_typeClassInheritedMessagesMap _var_57300 = var_cas_inheritedMessageMap ;
      GGS_typeClassInheritedMessagesMap::element_type * operand_57300 = _var_57300.firstObject () ;
      while ((operand_57300 != NULL)) {
        macroValidPointer (operand_57300) ;
        if (((var_cas_tableMessagesClasseConcrete.reader_hasKey (_inLexique, operand_57300->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1511)) COMMA_SOURCE_FILE_AT_LINE (1511)))._operator_not ()).isBuiltAndTrue ()) {
          GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the message '"))._operator_concat (operand_57300->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1512))))._operator_concat (GGS_string (true, "' is not defined")) COMMA_SOURCE_FILE_AT_LINE (1513)) ;
        }
        operand_57300 = operand_57300->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_classMessage COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1526)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_classToImplement::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_estAbstraite, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesClassesAncetres, var_cas_tableMessagesClasseConcrete, var_cas_classMessage COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1371_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap) {
  GGS_bool var_cas_estAbstraite ;
  switch (select_semantics_parser_9 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      var_cas_estAbstraite = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_estAbstraite = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_abstractClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_abstractClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_10 (_inLexique)) {
    case 1 : {
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1563)) COMMA_SOURCE_FILE_AT_LINE (1563)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1564)) COMMA_SOURCE_FILE_AT_LINE (1564))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType::constructor_new (_inLexique, var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (1566)) ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_stringset  var_cas_superClasses ;
      GGS_typeListModel  var_cas_attributeList ;
      GGS_classMessageMap  var_cas_messageMap ;
      nt_parent_class_importSemantics (_inLexique, var_cas_ioModelMap, var_cas_superClasses, var_cas_attributeList, var_cas_messageMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeList, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
      var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
      var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
      var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes ;
      var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
      var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
      var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_string var_cas_classMessage ;
      var_cas_classMessage = GGS_string (true, "") ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_11 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              switch (select_semantics_parser_12 (_inLexique)) {
                case 1 : {
                  GGS_lstring  var_cas_messageText ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (((var_cas_classMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1616)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the class message is already defined") COMMA_SOURCE_FILE_AT_LINE (1618)) ;
                  }else if (((var_cas_messageText.ggs_string ().reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1618)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the class message string should not be empty") COMMA_SOURCE_FILE_AT_LINE (1620)) ;
                  }else{
                    var_cas_classMessage = var_cas_messageText.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1621)) ;
                  }
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_messageName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_lstring  var_cas_messageText ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (((var_cas_inheritedMessageMap.reader_hasKey (_inLexique, var_cas_messageName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1631)) COMMA_SOURCE_FILE_AT_LINE (1631)))._operator_not ()).isBuiltAndTrue ()) {
                    var_cas_messageMapForHeirs.modifier_insertKey (_inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (1632)) ;
                  }
                  var_cas_tableMessagesClasseConcrete.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageText COMMA_SOURCE_FILE_AT_LINE (1634)) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_method_ (_inLexique, var_cas_estAbstraite, var_cas_listeAttributsSemantiquesCourants, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_classMessage) ;
              } break ;
            case 5 : {
              nt_overrided_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_classMessage) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      const GGS_typeClassInheritedMessagesMap _var_63235 = var_cas_inheritedMessageMap ;
      GGS_typeClassInheritedMessagesMap::element_type * operand_63235 = _var_63235.firstObject () ;
      while ((operand_63235 != NULL)) {
        macroValidPointer (operand_63235) ;
        if (((var_cas_tableMessagesClasseConcrete.reader_hasKey (_inLexique, operand_63235->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1683)) COMMA_SOURCE_FILE_AT_LINE (1683)))._operator_not ()).isBuiltAndTrue ()) {
          GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the message '"))._operator_concat (operand_63235->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1684))))._operator_concat (GGS_string (true, "' is not defined")) COMMA_SOURCE_FILE_AT_LINE (1685)) ;
        }
        operand_63235 = operand_63235->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_classMessage COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1698)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ClassModel::constructor_new (_inLexique, GGS_bool (true, true), var_cas_superClasses, var_cas_attributeList, var_cas_messageMap COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (1701)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1371_6_parse (galgas_scanner & _inLexique) {
  switch (select_semantics_parser_9 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_10 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      nt_parent_class_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_11 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              switch (select_semantics_parser_12 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_method_parse (_inLexique) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_parse (_inLexique) ;
              } break ;
            case 5 : {
              nt_overrided_method_parse (_inLexique) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'abstract_method'             *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_abstract_method_semantics_parser_1709_6_ (galgas_scanner & _inLexique,
                                const GGS_bool var_cas_inIsAbstract,
                                GGS_typeListeAttributsSemantiques  &/* var_cas_listeAttributsSemantiquesCourants */,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  if (((var_cas_inIsAbstract)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a concrete class should not declare an abstract method") COMMA_SOURCE_FILE_AT_LINE (1722)) ;
  }
  GGS_lstring  var_cas_nomMethode ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  var_cas_tableDesMethodes.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (1737)) ;
  GGS_typeInstructionList  var_cas_listeInstructions ;
  var_cas_listeInstructions = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableMethodesAimplementer.modifier_insertAbstract (_inLexique, var_cas_nomMethode, var_cas_listeDeTypes, var_cas_listeTypeEtNomsArguments, var_cas_listeInstructions COMMA_SOURCE_FILE_AT_LINE (1739)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_abstract_method_semantics_parser_1709_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parse_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_method_semantics_parser_1745_6_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                const GGS_typeTableMethodes  var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributsHerites,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outMethodName,
                                GGS_typeInstructionList  &var_cas_outInstructionsList,
                                GGS_L_EXsignature  &var_cas_outMethodSignature,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_string var_cas_inClassMessage) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outMethodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap ;
  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  const GGS_typeSemanticAttributesMap _var_66917 = var_cas_tableAttributsHerites ;
  GGS_typeSemanticAttributesMap::element_type * operand_66917 = _var_66917.firstObject () ;
  while ((operand_66917 != NULL)) {
    macroValidPointer (operand_66917) ;
    GGS_typeCplusPlusName  var_cas_nomCpp ;
    var_cas_nomCpp = GGS_typeDirectName::constructor_new (_inLexique, operand_66917->mKey.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1769)), operand_66917->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1769)) COMMA_HERE) ;
    var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_66917->mKey, operand_66917->mInfo.mAttributType, var_cas_nomCpp COMMA_SOURCE_FILE_AT_LINE (1770)) ;
    operand_66917 = operand_66917->nextObject () ;
  }
  GGS_lstring  var_cas_me_Constant ;
  var_cas_me_Constant = GGS_lstring::constructor_new (_inLexique, GGS_string (true, "self"), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_me_constantCppName ;
  var_cas_me_constantCppName = GGS_typeCppThisName::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_typeDefinition ;
  var_cas_typeDefinition = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_inCurrentClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, var_cas_me_Constant, var_cas_typeDefinition, var_cas_me_constantCppName COMMA_SOURCE_FILE_AT_LINE (1784)) ;
  GGS_lstring  var_cas_super_Constant ;
  var_cas_super_Constant = GGS_lstring::constructor_new (_inLexique, GGS_string (true, "super"), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_super_constantCppName ;
  var_cas_super_constantCppName = GGS_typeCppInheritedName::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_typeDefinition = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, var_cas_super_Constant, var_cas_typeDefinition, var_cas_super_constantCppName COMMA_SOURCE_FILE_AT_LINE (1798)) ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_outMethodSignature, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  var_cas_componentSemanticsEntitiesMap = var_cas_ioComponentSemanticsEntitiesMap ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_typeDefinition COMMA_HERE) ;
  var_cas_componentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_inCurrentClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1813)) ;
  var_cas_outInstructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_entityPropertyMap  var_cas_propertyMap ;
  var_cas_propertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_treewalkingRoutineHeaderMap  var_cas_treewalkingRoutineHeaderMap ;
  var_cas_treewalkingRoutineHeaderMap = GGS_treewalkingRoutineHeaderMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap  var_cas_metamodelEntityMap ;
  var_cas_metamodelEntityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_treewalkingRoutineHeaderMap, var_cas_tableEnAvant, var_cas_componentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_outInstructionsList, var_cas_propertyMap, var_cas_metamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_method_semantics_parser_1745_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'non_abstract_method'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_non_abstract_method_semantics_parser_1834_6_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributs,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_string var_cas_inClassMessage) {
  switch (select_semantics_parser_13 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old syntax: from GALGAS 1.5.1, use 'method' instead of 'reader'") COMMA_SOURCE_FILE_AT_LINE (1854)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_method_ (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_inOptionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_inClassMessage) ;
  var_cas_tableDesMethodes.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (1879)) ;
  var_cas_tableMethodesAimplementer.modifier_insertNotAbstract (_inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList COMMA_SOURCE_FILE_AT_LINE (1880)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  switch (select_semantics_parser_14 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old syntax: from GALGAS 1.5.1, use 'method' instead of 'reader'") COMMA_SOURCE_FILE_AT_LINE (1886)) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_non_abstract_method_semantics_parser_1834_6_parse (galgas_scanner & _inLexique) {
  switch (select_semantics_parser_13 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  nt_parse_method_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  switch (select_semantics_parser_14 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'overrided_method'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_overrided_method_semantics_parser_1893_6_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributs,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_string var_cas_inClassMessage) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
  switch (select_semantics_parser_15 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old syntax: from GALGAS 1.5.1, use 'method' instead of 'reader'") COMMA_SOURCE_FILE_AT_LINE (1914)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_method_ (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_inOptionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_inClassMessage) ;
  GGS_L_EXsignature  var_cas_listeDeTypesMethodeOriginale ;
  if (var_cas_tableDesMethodes._isBuilt ()) {
    var_cas_tableDesMethodes (HERE)->method_searchKey (_inLexique, var_cas_methodName, var_cas_listeDeTypesMethodeOriginale COMMA_SOURCE_FILE_AT_LINE (1941)) ;
  }
  ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesMethodeOriginale,  var_cas_methodSignature,  GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (1942)) ;
  var_cas_tableMethodesAimplementer.modifier_insertNotAbstract (_inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList COMMA_SOURCE_FILE_AT_LINE (1948)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  switch (select_semantics_parser_16 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old syntax: from GALGAS 1.5.1, use 'method' instead of 'reader'") COMMA_SOURCE_FILE_AT_LINE (1954)) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_overrided_method_semantics_parser_1893_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
  switch (select_semantics_parser_15 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  nt_parse_method_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  switch (select_semantics_parser_16 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'formal_arguments_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_arguments_list_semantics_parser_1964_6_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_EXsignature  &var_cas_listeDeTypes,
                                GGS_typeVariablesMap  &var_cas_tableArgumentsMethode,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_L_signature  &var_cas_outSignatureForGrammar) {
  var_cas_listeDeTypes = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_listeTypeEtNomsArguments = GGS_typeListeTypesEtNomsArgMethode::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_outSignatureForGrammar = GGS_L_signature::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_17 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, true) ;
          switch (select_semantics_parser_18 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1994)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1994)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (1996)) ;
              } break ;
            case 2 : {
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1999)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1999)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
              var_cas_tableArgumentsMethode.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2001)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_19 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2020)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2020)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, true)) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2022)) ;
              } break ;
            case 2 : {
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2026)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2026)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, true)) ;
              var_cas_tableArgumentsMethode.modifier_insertInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2028)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          switch (select_semantics_parser_20 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2047)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2047)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, false)) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2049)) ;
              } break ;
            case 2 : {
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2052)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2052)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, false)) ;
              var_cas_tableArgumentsMethode.modifier_insertInOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2054)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_typeCplusPlusName  var_cas_natureNom ;
          var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2071)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2071)) COMMA_HERE) ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, false) ;
          var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
          var_cas_tableArgumentsMethode.modifier_insertOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2074)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_arguments_list_semantics_parser_1964_6_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_L_signature  &var_cas_outSignature) {
  var_cas_outSignature = GGS_L_signature::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_17 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_18 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_19 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_20 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_arguments_list_semantics_parser_1964_6_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_17 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_18 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_19 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_20 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'type_parsing'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_type_parsing_semantics_parser_2131_6_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_outTypeDefinition,
                                GGS_lstring  &var_cas_outTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2138)) COMMA_SOURCE_FILE_AT_LINE (2138))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2140)) ;
    }
    var_cas_outTypeDefinition = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (2141)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2141)) ;
  }else if ((var_cas_inTableEnAvant.reader_hasKey (_inLexique, var_cas_outTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2143)) COMMA_SOURCE_FILE_AT_LINE (2143))).isBuiltAndTrue ()) {
    if (var_cas_inTableEnAvant._isBuilt ()) {
      var_cas_inTableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_outTypeDefinition COMMA_SOURCE_FILE_AT_LINE (2144)) ;
    }
  }else{
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '@"))._operator_concat (var_cas_outTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2146))))._operator_concat (GGS_string (true, "' type is not defined")) COMMA_SOURCE_FILE_AT_LINE (2147)) ;
    var_cas_outTypeDefinition._drop_operation () ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_type_parsing_semantics_parser_2131_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2157_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_inTargetVarName,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_AC_galgasType  var_cas_targetVarType ;
  GGS_typeCplusPlusName  var_cas_targetVarCppName ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, var_cas_targetVarType, var_cas_targetVarCppName COMMA_SOURCE_FILE_AT_LINE (2180)) ;
  ::routine_checkAssignmentTypesCompatibility (_inLexique,  var_cas_targetVarType,  var_cas_sourceType,  GGS_location (_inLexique),  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (2181)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_assignmentInstruction::constructor_new (_inLexique, var_cas_targetVarCppName, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2157_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2194_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_inTargetVarName,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_3D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_AC_galgasType  var_cas_targetVarType ;
  GGS_typeCplusPlusName  var_cas_targetVarCppName ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_inTargetVarName, var_cas_targetVarType, var_cas_targetVarCppName COMMA_SOURCE_FILE_AT_LINE (2217)) ;
  GGS_string var_cas_sourceExpressionConverter ;
  if (var_cas_targetVarType._isBuilt () && var_cas_sourceType._isBuilt ()) {
    cPtr_AC_galgasType * ptr_84369 = var_cas_targetVarType (HERE) ;
    cPtr_AC_galgasType * ptr_84383 = var_cas_sourceType (HERE) ;
    cPtr_typeGalgas_string * operand_84369 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_84369) ;
    cPtr_typeGalgas_string * operand_84383 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_84383) ;
    if ((operand_84369 != NULL) && (operand_84383 != NULL)) {
      var_cas_sourceExpressionConverter = GGS_string (true, "") ;
    }else{
      cPtr_typeGalgas_string * operand_84369 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_84369) ;
      cPtr_typeGalgas_lstring * operand_84383 = dynamic_cast <cPtr_typeGalgas_lstring *> (ptr_84383) ;
      if ((operand_84369 != NULL) && (operand_84383 != NULL)) {
        var_cas_sourceExpressionConverter = GGS_string (true, "ggs_string") ;
      }else{
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "for '.=' operator, "))._operator_concat (var_cas_targetVarType.reader_messageGalgasType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2226))))._operator_concat (GGS_string (true, " target object type is not compatible with ")))._operator_concat (var_cas_sourceType.reader_messageGalgasType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2227))))._operator_concat (GGS_string (true, " source expression type")) COMMA_SOURCE_FILE_AT_LINE (2229)) ;
        var_cas_sourceExpressionConverter._drop_operation () ;
      }
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_dotEqualInstruction::constructor_new (_inLexique, var_cas_targetVarCppName, var_cas_sourceExpression, var_cas_sourceExpressionConverter COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2194_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_3D) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'input_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_input_parameters_list_semantics_parser_2243_6_ (galgas_scanner & _inLexique,
                                GGS_L_assignedVariables  &var_cas_listeAffectationParametresEffectifs,
                                GGS_typeCplusPlusNameList  &var_cas_outAllVariablesList,
                                GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap) {
  GGS_typeListeCibles  var_cas_listeCibles ;
  var_cas_listeCibles = GGS_typeListeCibles::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_21 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          switch (select_semantics_parser_22 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_nomVariableDest ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomVariableDest) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_AC_galgasType  var_cas_typeVarDest ;
              GGS_typeCplusPlusName  var_cas_nomCppDest ;
              var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomVariableDest, var_cas_typeVarDest, var_cas_nomCppDest COMMA_SOURCE_FILE_AT_LINE (2258)) ;
              var_cas_listeCibles._addAssign_operation (GGS_typeEntiteDest::constructor_new (_inLexique, var_cas_typeVarDest, var_cas_nomCppDest, GGS_location (_inLexique) COMMA_HERE)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              var_cas_listeCibles._addAssign_operation (GGS_typeJoker::constructor_new (_inLexique COMMA_HERE)) ;
              } break ;
            case 3 : {
              GGS_luint  var_cas_jokerCountWithLocation ;
              _inLexique._assignFromAttribute_uint32value (var_cas_jokerCountWithLocation) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              GGS_uint  var_cas_jokerCount ;
              var_cas_jokerCount = var_cas_jokerCountWithLocation.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (2267)) ;
              GGS_uint _variant_86270 = var_cas_jokerCount._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (2268)) ;
              GGS_bool _condition_86270 (_variant_86270._isBuilt (), true) ;
              while (_condition_86270.isBuiltAndTrue ()) {
                _condition_86270 = (var_cas_jokerCount)._operator_strictSup (GGS_uint (true, 0U)) ;
                if (_condition_86270.isBuiltAndTrue ()) {
                  if (_variant_86270.uintValue () == 0) {
                    _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (2272)) ;
                    _condition_86270 = GGS_bool (true, false) ;
                  }else{
                    _variant_86270._decrement_operation (_inLexique COMMA_HERE) ;
                    var_cas_listeCibles._addAssign_operation (GGS_typeJoker::constructor_new (_inLexique COMMA_HERE)) ;
                    var_cas_jokerCount._decrement_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (2271)) ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_bool var_cas_ellipsis ;
  switch (select_semantics_parser_23 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_2E_2E) COMMA_HERE) ;
      var_cas_ellipsis = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_ellipsis = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  if (((var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2283)))._operator_strictInf (var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2283)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "too much arguments: "))._operator_concat (var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2284)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2284))))._operator_concat (GGS_string (true, " expected, ")))._operator_concat (var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2285)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2285))))._operator_concat (GGS_string (true, " found")) COMMA_SOURCE_FILE_AT_LINE (2287)) ;
    var_cas_outAllVariablesList._drop_operation () ;
    var_cas_listeAffectationParametresEffectifs._drop_operation () ;
  }else if ((((var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2287)))._operator_strictSup (var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2287))))._operator_and ((var_cas_ellipsis)._operator_not ())).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "argument(s) missing: "))._operator_concat (var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2288)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2288))))._operator_concat (GGS_string (true, " expected, ")))._operator_concat (var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2289)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2289))))._operator_concat (GGS_string (true, " found")) COMMA_SOURCE_FILE_AT_LINE (2291)) ;
    var_cas_outAllVariablesList._drop_operation () ;
    var_cas_listeAffectationParametresEffectifs._drop_operation () ;
  }else{
    var_cas_listeAffectationParametresEffectifs = GGS_L_assignedVariables::constructor_emptyList (_inLexique COMMA_HERE) ;
    var_cas_outAllVariablesList = GGS_typeCplusPlusNameList::constructor_emptyList (_inLexique COMMA_HERE) ;
    const GGS_typeListeAttributsSemantiques _var_87262 = var_cas_listeAttributsSemantiques ;
    GGS_typeListeAttributsSemantiques::element_type * operand_87262 = _var_87262.firstObject () ;
    const GGS_typeListeCibles _var_87346 = var_cas_listeCibles ;
    GGS_typeListeCibles::element_type * operand_87346 = _var_87346.firstObject () ;
    while ((operand_87262 != NULL)
        && (operand_87346 != NULL)) {
      macroValidPointer (operand_87262) ;
      macroValidPointer (operand_87346) ;
      GGS_lstring  var_cas_nomAttributSource ;
      var_cas_nomAttributSource = operand_87262->aNomAttribut ;
      if (operand_87346->aCible._isBuilt ()) {
        operand_87346->aCible (HERE)->method_verifierType (_inLexique, operand_87262->mAttributType, var_cas_nomAttributSource, var_cas_listeAffectationParametresEffectifs, var_cas_outAllVariablesList COMMA_SOURCE_FILE_AT_LINE (2297)) ;
      }
      operand_87262 = operand_87262->nextObject () ;
      operand_87346 = operand_87346->nextObject () ;
    }
  }
  GGS_typeCplusPlusName  var_cas_nullName ;
  var_cas_nullName = GGS_typeNullName::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  if (var_cas_outAllVariablesList._isBuilt () &&
      var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2304))._isBuilt () &&
      var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2305))._isBuilt () &&
      var_cas_nullName._isBuilt ()) {
    ::routine_appendJokersIfNeeded (_inLexique,  var_cas_outAllVariablesList,  var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2304)),  var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2305)),  var_cas_nullName COMMA_SOURCE_FILE_AT_LINE (2302)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_input_parameters_list_semantics_parser_2243_6_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_21 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          switch (select_semantics_parser_22 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_23 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_2E_2E) COMMA_HERE) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2318_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource COMMA_SOURCE_FILE_AT_LINE (2331)) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleAddAssignOperatorCall (_inLexique, GGS_location (_inLexique), var_cas_formalParametersList COMMA_SOURCE_FILE_AT_LINE (2334)) ;
  }
  GGS_typeTypesList  var_cas_typeList ;
  var_cas_typeList = GGS_typeTypesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeExpressionList  var_cas_expressionList ;
  var_cas_expressionList = GGS_typeExpressionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList._addAssign_operation (var_cas_resultType, GGS_location (_inLexique)) ;
        var_cas_expressionList._addAssign_operation (var_cas_expression) ;
      switch (select_repeat_semantics_parser_24 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (((var_cas_formalParametersList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2354)))._operator_isNotEqual (var_cas_typeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2354)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, (((var_cas_typeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2355)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2355)))._operator_concat (GGS_string (true, " argument(s), while ")))._operator_concat (var_cas_formalParametersList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2355)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2355))))._operator_concat (GGS_string (true, " are needed")) COMMA_SOURCE_FILE_AT_LINE (2356)) ;
  }else{
    const GGS_typeListeAttributsSemantiques _var_89944 = var_cas_formalParametersList ;
    GGS_typeListeAttributsSemantiques::element_type * operand_89944 = _var_89944.firstObject () ;
    const GGS_typeTypesList _var_90014 = var_cas_typeList ;
    GGS_typeTypesList::element_type * operand_90014 = _var_90014.firstObject () ;
    while ((operand_89944 != NULL)
        && (operand_90014 != NULL)) {
      macroValidPointer (operand_89944) ;
      macroValidPointer (operand_90014) ;
      ::routine_checkAssignmentTypesCompatibility (_inLexique,  operand_89944->mAttributType,  operand_90014->mType,  operand_90014->mEndOfExpressionLocation,  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (2359)) ;
      operand_89944 = operand_89944->nextObject () ;
      operand_90014 = operand_90014->nextObject () ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeAppendInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2318_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        nt_expression_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_24 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2379_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource COMMA_SOURCE_FILE_AT_LINE (2392)) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleMinusAssignOperatorCall (_inLexique, GGS_location (_inLexique), var_cas_formalParametersList COMMA_SOURCE_FILE_AT_LINE (2395)) ;
  }
  GGS_typeTypesList  var_cas_typeList ;
  var_cas_typeList = GGS_typeTypesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeExpressionList  var_cas_expressionList ;
  var_cas_expressionList = GGS_typeExpressionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList._addAssign_operation (var_cas_resultType, GGS_location (_inLexique)) ;
        var_cas_expressionList._addAssign_operation (var_cas_expression) ;
      switch (select_repeat_semantics_parser_25 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (((var_cas_formalParametersList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2415)))._operator_isNotEqual (var_cas_typeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2415)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, (((var_cas_typeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2416)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2416)))._operator_concat (GGS_string (true, " argument(s), while ")))._operator_concat (var_cas_formalParametersList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2416)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2416))))._operator_concat (GGS_string (true, " are needed")) COMMA_SOURCE_FILE_AT_LINE (2417)) ;
  }else{
    const GGS_typeListeAttributsSemantiques _var_92515 = var_cas_formalParametersList ;
    GGS_typeListeAttributsSemantiques::element_type * operand_92515 = _var_92515.firstObject () ;
    const GGS_typeTypesList _var_92585 = var_cas_typeList ;
    GGS_typeTypesList::element_type * operand_92585 = _var_92585.firstObject () ;
    while ((operand_92515 != NULL)
        && (operand_92585 != NULL)) {
      macroValidPointer (operand_92515) ;
      macroValidPointer (operand_92585) ;
      ::routine_checkAssignmentTypesCompatibility (_inLexique,  operand_92515->mAttributType,  operand_92585->mType,  operand_92585->mEndOfExpressionLocation,  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (2420)) ;
      operand_92515 = operand_92515->nextObject () ;
      operand_92585 = operand_92585->nextObject () ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeRemoveInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2379_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3D) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        nt_expression_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_25 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2440_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_2B) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource COMMA_SOURCE_FILE_AT_LINE (2453)) ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleIncrementOperatorCall (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2455)) ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeIncrementInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2440_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_2B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2469_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_2D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource COMMA_SOURCE_FILE_AT_LINE (2482)) ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleDecrementOperatorCall (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2484)) ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeDecrementInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2469_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_2D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'actual_parameters_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_actual_parameters_list_semantics_parser_2494_6_ (galgas_scanner & _inLexique,
                                const GGS_L_EXsignature  var_cas_listeTypesParametresFormels,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_outExpressionList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique,  var_cas_listeTypesParametresFormels,  var_cas_listeTypesParametresEffectifs,  GGS_location (_inLexique),  var_cas_ioInstructionList,  var_cas_outExpressionList COMMA_SOURCE_FILE_AT_LINE (2510)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_actual_parameters_list_semantics_parser_2494_6_parse (galgas_scanner & _inLexique) {
  nt_parse_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'parse_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_parameters_list_semantics_parser_2525_6_ (galgas_scanner & _inLexique,
                                GGS_L_actualParametersSignature  &var_cas_listeTypesParametresEffectifs,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_outExpressionList = GGS_typeExpressionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_listeTypesParametresEffectifs = GGS_L_actualParametersSignature::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_exclusiveVariables ;
  var_cas_exclusiveVariables = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_26 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_expressionType ;
          GGS_typeExpression  var_cas_expressionValue ;
          nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_expressionValue, var_cas_expressionType) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterOut (_inLexique COMMA_HERE) ;
          var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_expressionType, var_cas_parameterPassingMode) ;
          var_cas_outExpressionList._addAssign_operation (var_cas_expressionValue) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterIn (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_27 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              var_cas_listeTypesParametresEffectifs._addAssign_operation (GGS_typeGalgas_jokerInParameterList::constructor_new (_inLexique COMMA_HERE), var_cas_parameterPassingMode) ;
              var_cas_outExpressionList._addAssign_operation (GGS_typeJokerInExpression::constructor_new (_inLexique COMMA_HERE)) ;
              } break ;
            case 2 : {
              GGS_luint  var_cas_jokerCountWithLocation ;
              _inLexique._assignFromAttribute_uint32value (var_cas_jokerCountWithLocation) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              GGS_uint  var_cas_jokerCount ;
              var_cas_jokerCount = var_cas_jokerCountWithLocation.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (2560)) ;
              GGS_uint _variant_98953 = var_cas_jokerCount._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (2561)) ;
              GGS_bool _condition_98953 (_variant_98953._isBuilt (), true) ;
              while (_condition_98953.isBuiltAndTrue ()) {
                _condition_98953 = (var_cas_jokerCount)._operator_strictSup (GGS_uint (true, 0U)) ;
                if (_condition_98953.isBuiltAndTrue ()) {
                  if (_variant_98953.uintValue () == 0) {
                    _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (2566)) ;
                    _condition_98953 = GGS_bool (true, false) ;
                  }else{
                    _variant_98953._decrement_operation (_inLexique COMMA_HERE) ;
                    var_cas_listeTypesParametresEffectifs._addAssign_operation (GGS_typeGalgas_jokerInParameterList::constructor_new (_inLexique COMMA_HERE), var_cas_parameterPassingMode) ;
                    var_cas_outExpressionList._addAssign_operation (GGS_typeJokerInExpression::constructor_new (_inLexique COMMA_HERE)) ;
                    var_cas_jokerCount._decrement_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (2565)) ;
                  }
                }
              }
              } break ;
            case 3 : {
              GGS_AC_galgasType  var_cas_typeArgument ;
              GGS_typeCplusPlusName  var_cas_nomCppArgument ;
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument COMMA_SOURCE_FILE_AT_LINE (2572)) ;
              var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
              GGS_typeExpression  var_cas_e ;
              var_cas_e = GGS_typeVarInExpression::constructor_new (_inLexique, var_cas_nomCppArgument COMMA_HERE) ;
              var_cas_outExpressionList._addAssign_operation (var_cas_e) ;
              if ((var_cas_exclusiveVariables.reader_hasKey (_inLexique, var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2576)) COMMA_SOURCE_FILE_AT_LINE (2576))).isBuiltAndTrue ()) {
                var_cas_nomArgument.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this object is already named as input or output/input effectif argument of current instruction") COMMA_SOURCE_FILE_AT_LINE (2578)) ;
              }else{
                var_cas_exclusiveVariables._addAssign_operation (var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2579))) ;
              }
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_typeArgument ;
          GGS_typeCplusPlusName  var_cas_nomCppArgument ;
          GGS_lstring  var_cas_nomArgument ;
          _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument COMMA_SOURCE_FILE_AT_LINE (2588)) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterOutIn (_inLexique COMMA_HERE) ;
          var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
          GGS_typeExpression  var_cas_e ;
          var_cas_e = GGS_typeVarInExpression::constructor_new (_inLexique, var_cas_nomCppArgument COMMA_HERE) ;
          var_cas_outExpressionList._addAssign_operation (var_cas_e) ;
          if ((var_cas_exclusiveVariables.reader_hasKey (_inLexique, var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2593)) COMMA_SOURCE_FILE_AT_LINE (2593))).isBuiltAndTrue ()) {
            var_cas_nomArgument.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this object is already named as input or output/input effectif argument of current instruction") COMMA_SOURCE_FILE_AT_LINE (2595)) ;
          }else{
            var_cas_exclusiveVariables._addAssign_operation (var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2596))) ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_parameters_list_semantics_parser_2525_6_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_26 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          nt_expression_parse (_inLexique) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          switch (select_semantics_parser_27 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'semantic_instructions_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instructions_list_semantics_parser_2605_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap) {
  var_cas_ioVariablesMap.prologue_verifyVariableUsing (_inLexique COMMA_SOURCE_FILE_AT_LINE (2616)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
  var_cas_ioVariablesMap.epilogue_verifyVariableUsing (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2616)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_semantics_parser_2605_6_parse (galgas_scanner & _inLexique) {
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2637_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_call) COMMA_HERE) ;
  GGS_lstring  var_cas_calledPropertyName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_calledPropertyName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_propertyType ;
  if (var_cas_inCurrentTreewalkingRoutinePropertyMap._isBuilt ()) {
    var_cas_inCurrentTreewalkingRoutinePropertyMap (HERE)->method_searchKey (_inLexique, var_cas_calledPropertyName, var_cas_propertyType COMMA_SOURCE_FILE_AT_LINE (2653)) ;
  }
  GGS_lstring  var_cas_entityName ;
  { const GGS_AC_galgasType _var_103124 = var_cas_propertyType ; // CAST instruction
    if (_var_103124.getPtr () != NULL) {
      macroValidPointer (_var_103124.getPtr ()) ;
      if (dynamic_cast <cPtr_typeGalgas_singleReferenceEntity *> (_var_103124.getPtr ()) != NULL) {
        const GGS_typeGalgas_singleReferenceEntity var_cas_ref (_var_103124.getPtr ()) ;
        var_cas_entityName = var_cas_ref.reader_mEntityTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (2657)) ;
      }else if (dynamic_cast <cPtr_typeGalgas_multipleReferenceEntity *> (_var_103124.getPtr ()) != NULL) {
        const GGS_typeGalgas_multipleReferenceEntity var_cas_ref (_var_103124.getPtr ()) ;
        var_cas_entityName = var_cas_ref.reader_mEntityTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (2659)) ;
      }else{
        var_cas_calledPropertyName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this property should be a single or a multiple reference") COMMA_SOURCE_FILE_AT_LINE (2662)) ;
        var_cas_entityName._drop_operation () ;
      }
    }
  }
  GGS_L_EXsignature  var_cas_routineSignature ;
  if ((var_cas_inTreewalkingRoutineHeaderMap.reader_hasKey (_inLexique, var_cas_entityName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2665)) COMMA_SOURCE_FILE_AT_LINE (2665))).isBuiltAndTrue ()) {
    GGS_typeListeTypesEtNomsArgMethode  automatic_var_18 ;
    if (var_cas_inTreewalkingRoutineHeaderMap._isBuilt ()) {
      var_cas_inTreewalkingRoutineHeaderMap (HERE)->method_searchKey (_inLexique, var_cas_entityName, var_cas_routineSignature, automatic_var_18 COMMA_SOURCE_FILE_AT_LINE (2666)) ;
    }
  }else{
    var_cas_calledPropertyName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "there is no treewalking routine for the '%"))._operator_concat (var_cas_entityName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2669))))._operator_concat (GGS_string (true, "' metamodel class")) COMMA_SOURCE_FILE_AT_LINE (2672)) ;
    var_cas_routineSignature._drop_operation () ;
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_parameters_list_ (_inLexique, var_cas_routineSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_callInstruction::constructor_new (_inLexique, var_cas_calledPropertyName, var_cas_entityName, var_cas_propertyType, var_cas_expressionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2637_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_call) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_actual_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2700_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_typeVarSource ;
  GGS_typeCplusPlusName  var_cas_sourceVarCppName ;
  GGS_lstring  var_cas_nomVarSource ;
  nt_read_access_ (_inLexique, var_cas_nomVarSource, var_cas_sourceVarCppName, var_cas_typeVarSource, var_cas_ioVariablesMap) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_typeVarSource.getPtr (), true, var_cas_nomVarSource COMMA_SOURCE_FILE_AT_LINE (2718)) ;
  GGS_lstring  var_cas_nomTypeSource ;
  var_cas_nomTypeSource = var_cas_classType.reader_mClassTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (2719)) ;
  GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits ;
  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (2720)) ;
  GGS_typeInstruction  var_cas_instruction ;
  nt_extract_instruction_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceVarCppName, var_cas_nomTypeSource, var_cas_tableMessagesAbstraits, var_cas_instruction, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2700_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
  nt_read_access_parse (_inLexique) ;
  nt_extract_instruction_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_extract_instruction_semantics_parser_2748_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits,
                                GGS_typeInstruction  &var_cas_outInstruction,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "simple extract instruction is obsolete: use cast expression instead") COMMA_SOURCE_FILE_AT_LINE (2762)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  GGS_lstring  var_cas_nomClasse ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomClasse) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomClasse, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2770)) ;
  }
  GGS_AC_galgasType  var_cas_leType ;
  var_cas_leType = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_nomClasse COMMA_SOURCE_FILE_AT_LINE (2771)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2771)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_leType.getPtr (), true, var_cas_nomClasse COMMA_SOURCE_FILE_AT_LINE (2773)) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  var_cas_listeAttributsSemantiques = var_cas_classType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (2774)) ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (2775)) ;
  if (((var_cas_tableDesClassesAncetres.reader_hasKey (_inLexique, var_cas_nomTypeSource.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2784)) COMMA_SOURCE_FILE_AT_LINE (2784)))._operator_not ()).isBuiltAndTrue ()) {
    var_cas_nomClasse.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This class does not inherit from '@"))._operator_concat (var_cas_nomTypeSource.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2785))))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (2786)) ;
  }
  GGS_L_assignedVariables  var_cas_listeAffectationParametresEffectifs ;
  GGS_typeCplusPlusNameList  var_cas_allVariablesList ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  nt_input_parameters_list_ (_inLexique, var_cas_listeAffectationParametresEffectifs, var_cas_allVariablesList, var_cas_listeAttributsSemantiques, var_cas_ioVariablesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  if (var_cas_errorExpressionType._isBuilt ()) {
    var_cas_errorExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (2810)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_lstring  var_cas_messageName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  if (var_cas_tableMessagesAbstraits._isBuilt ()) {
    var_cas_tableMessagesAbstraits (HERE)->method_searchKey (_inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (2814)) ;
  }
  var_cas_outInstruction = GGS_typeSimpleExtractInstruction::constructor_new (_inLexique, var_cas_inSourceVarCppName, var_cas_nomClasse, var_cas_listeAffectationParametresEffectifs, var_cas_errorExpression, var_cas_messageName COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_2748_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  nt_input_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_extract_instruction_semantics_parser_2827_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  /* var_cas_tableMessagesAbstraits */,
                                GGS_typeInstruction  &var_cas_outInstruction,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap) {
  GGS_typeStructuredExtractCasesList  var_cas_casesList ;
  var_cas_casesList = GGS_typeStructuredExtractCasesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "structured extract instruction is obsolete: use cast instruction instead") COMMA_SOURCE_FILE_AT_LINE (2843)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (2845)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (2847)) ;
        GGS_location  var_cas_indicatif1 ;
        var_cas_indicatif1 = GGS_location (_inLexique) ;
        GGS_lstring  var_cas_nomType1 ;
        _inLexique._assignFromAttribute_tokenString (var_cas_nomType1) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
          var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomType1, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2854)) ;
        }
        GGS_AC_galgasType  var_cas_definitionClasse1 ;
        var_cas_definitionClasse1 = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_nomType1 COMMA_SOURCE_FILE_AT_LINE (2855)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2855)) ;
        GGS_typeGalgasClassType  var_cas_classType1 ;
        var_cas_classType1 = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_definitionClasse1.getPtr (), true, var_cas_nomType1 COMMA_SOURCE_FILE_AT_LINE (2858)) ;
        GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 ;
        var_cas_listeAttributs1 = var_cas_classType1.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (2859)) ;
        GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 ;
        var_cas_tableDesClassesAncetresType1 = var_cas_classType1.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (2860)) ;
        if (((var_cas_tableDesClassesAncetresType1.reader_hasKey (_inLexique, var_cas_nomTypeSource.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2871)) COMMA_SOURCE_FILE_AT_LINE (2871)))._operator_not ()).isBuiltAndTrue ()) {
          var_cas_nomType1.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This class does not inherit from '@"))._operator_concat (var_cas_nomTypeSource.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2872))))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (2873)) ;
        }
        GGS_bool var_cas_noUsedParameter ;
        nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_indicatif1, GGS_localConstantBuildStyleEnum::constructor_listStyle (_inLexique COMMA_HERE), var_cas_noUsedParameter) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_instructionsList ;
        var_cas_instructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
        var_cas_casesList._addAssign_operation (var_cas_nomType1, var_cas_indicatif1, var_cas_instructionsList, var_cas_noUsedParameter) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2847)) ;
      switch (select_repeat_semantics_parser_28 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (2903)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_elseInstructionList ;
  var_cas_elseInstructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
  var_cas_outInstruction = GGS_typeStructuredExtractInstructionWithElse::constructor_new (_inLexique, var_cas_inSourceVarCppName, var_cas_casesList, var_cas_elseInstructionList COMMA_HERE) ;
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2903)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (2845)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_2827_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        nt_parse_effective_input_parameters_list_parse (_inLexique) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
        nt_semantic_instructions_list_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_28 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2932_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
  GGS_typeGalgasClassType  var_cas_sourceClassType ;
  var_cas_sourceClassType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_sourceExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2955)) ;
  GGS_lstring  var_cas_sourceExpressionTypeName ;
  var_cas_sourceExpressionTypeName = var_cas_sourceClassType.reader_mClassTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (2956)) ;
  GGS_string var_cas_sourceClassMessage ;
  var_cas_sourceClassMessage = var_cas_sourceClassType.reader_mClassMessage (_inLexique COMMA_SOURCE_FILE_AT_LINE (2957)) ;
  GGS_typeInstructionList  var_cas_elseBranchInstructionsList ;
  var_cas_elseBranchInstructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeStructuredCastBranchList  var_cas_branchList ;
  var_cas_branchList = GGS_typeStructuredCastBranchList::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (2965)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (2967)) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
        GGS_bool var_cas_checkForKindOfClass ;
        switch (select_semantics_parser_30 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E_3D) COMMA_HERE) ;
            var_cas_checkForKindOfClass = GGS_bool (true, true) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3D_3D) COMMA_HERE) ;
            var_cas_checkForKindOfClass = GGS_bool (true, false) ;
            } break ;
          default :
            break ;
        }
        GGS_lstring  var_cas_castedTypeName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_castedTypeName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
          var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_castedTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2981)) ;
        }
        GGS_AC_galgasType  var_cas_typeDefinition ;
        var_cas_typeDefinition = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_castedTypeName COMMA_SOURCE_FILE_AT_LINE (2982)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2982)) ;
        GGS_typeSuperClassesMap  var_cas_superClassMap ;
        var_cas_superClassMap = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_typeDefinition.getPtr (), true, var_cas_castedTypeName COMMA_SOURCE_FILE_AT_LINE (2986)).reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (2986)) ;
        GGS_string var_cas_sourceExpressionTypeNameString ;
        var_cas_sourceExpressionTypeNameString = var_cas_sourceExpressionTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2989)) ;
        if (((var_cas_checkForKindOfClass)._operator_not ()).isBuiltAndTrue ()) {
          if ((((var_cas_castedTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2991)))._operator_isNotEqual (var_cas_sourceExpressionTypeNameString))._operator_and ((var_cas_superClassMap.reader_hasKey (_inLexique, var_cas_sourceExpressionTypeNameString COMMA_SOURCE_FILE_AT_LINE (2991)))._operator_not ())).isBuiltAndTrue ()) {
            var_cas_castedTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This class is not '@"))._operator_concat (var_cas_sourceExpressionTypeNameString))._operator_concat (GGS_string (true, "' and does inherit from it")) COMMA_SOURCE_FILE_AT_LINE (2993)) ;
          }
        }else if (((var_cas_superClassMap.reader_hasKey (_inLexique, var_cas_sourceExpressionTypeNameString COMMA_SOURCE_FILE_AT_LINE (2994)))._operator_not ()).isBuiltAndTrue ()) {
          var_cas_castedTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This class does not inherit from '@"))._operator_concat (var_cas_sourceExpressionTypeNameString))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (2996)) ;
        }
        GGS_typeCplusPlusNameList  var_cas_localConstantCppNameList ;
        var_cas_localConstantCppNameList = GGS_typeCplusPlusNameList::constructor_emptyList (_inLexique COMMA_HERE) ;
        switch (select_semantics_parser_31 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            GGS_lstring  var_cas_localConstantName ;
            _inLexique._assignFromAttribute_tokenString (var_cas_localConstantName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_localConstantCppName ;
            var_cas_localConstantCppName = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_localConstantName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (3003)), var_cas_localConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3003)) COMMA_HERE) ;
            var_cas_localConstantCppNameList._addAssign_operation (var_cas_localConstantCppName) ;
            var_cas_ioVariablesMap.modifier_insertConstInArgument (_inLexique, var_cas_localConstantName, var_cas_typeDefinition, var_cas_localConstantCppName COMMA_SOURCE_FILE_AT_LINE (3005)) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
            GGS_lstring  var_cas_localConstantName ;
            _inLexique._assignFromAttribute_tokenString (var_cas_localConstantName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_localConstantCppName ;
            var_cas_localConstantCppName = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_localConstantName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (3010)), var_cas_localConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3010)) COMMA_HERE) ;
            var_cas_localConstantCppNameList._addAssign_operation (var_cas_localConstantCppName) ;
            var_cas_ioVariablesMap.modifier_insertUnusedConstInArgument (_inLexique, var_cas_localConstantName, var_cas_typeDefinition, var_cas_localConstantCppName COMMA_SOURCE_FILE_AT_LINE (3012)) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_instructionsList ;
        var_cas_instructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
        var_cas_branchList._addAssign_operation (var_cas_castedTypeName, var_cas_checkForKindOfClass, var_cas_localConstantCppNameList, var_cas_instructionsList) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2967)) ;
      switch (select_repeat_semantics_parser_29 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_AC_elseOrDefaultForCastInstruction  var_cas_elseOrDefault ;
  var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3033)) ;
  switch (select_semantics_parser_32 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_default) COMMA_HERE) ;
      if (((var_cas_sourceClassMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (3036)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "for using the 'default' construct, the static class of source expression (@"))._operator_concat (var_cas_sourceExpressionTypeName))._operator_concat (GGS_string (true, ") should define a class message")) COMMA_SOURCE_FILE_AT_LINE (3039)) ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
      GGS_typeExpression  var_cas_errorLocationExpression ;
      GGS_AC_galgasType  var_cas_errorLocationExpressionType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorLocationExpression, var_cas_errorLocationExpressionType) ;
      if (var_cas_errorLocationExpressionType._isBuilt ()) {
        var_cas_errorLocationExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (3051)) ;
      }
      var_cas_elseOrDefault = GGS_C_defaultForCastInstruction::constructor_new (_inLexique, var_cas_errorLocationExpression, GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_elseBranchInstructionsList ;
      var_cas_elseBranchInstructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseBranchInstructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
      var_cas_elseOrDefault = GGS_C_elseForCastInstruction::constructor_new (_inLexique, var_cas_elseBranchInstructionsList COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3033)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (2965)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeStructuredCastInstruction::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_sourceExpression, var_cas_sourceExpressionTypeName, var_cas_branchList, var_cas_elseOrDefault COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2932_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
        switch (select_semantics_parser_30 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E_3D) COMMA_HERE) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3D_3D) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        switch (select_semantics_parser_31 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
        nt_semantic_instructions_list_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_29 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_32 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_default) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3092_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  GGS_AC_galgasType  var_cas_definitionType ;
  GGS_lstring  var_cas_typeName ;
  nt_type_parsing_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
  GGS_lstring  var_cas_nomVariable ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomVariable) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_nomCppVariable ;
  var_cas_nomCppVariable = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomVariable.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (3115)), var_cas_nomVariable.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3115)) COMMA_HERE) ;
  var_cas_ioVariablesMap.modifier_insertLocalVariable (_inLexique, var_cas_nomVariable, var_cas_definitionType, var_cas_nomCppVariable COMMA_SOURCE_FILE_AT_LINE (3116)) ;
  nt_optional_assignment_ (_inLexique, var_cas_typeName, var_cas_nomVariable, var_cas_nomCppVariable, var_cas_definitionType, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3092_6_parse (galgas_scanner & _inLexique) {
  nt_type_parsing_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_optional_assignment_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3137_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_galgasVariableName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_galgasVariableName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        GGS_typeCplusPlusName  var_cas_nomCppVar ;
        GGS_AC_galgasType  automatic_var_19 ;
        var_cas_ioVariablesMap.modifier_searchForReadOnlyAccess (_inLexique, var_cas_galgasVariableName, automatic_var_19, var_cas_nomCppVar COMMA_SOURCE_FILE_AT_LINE (3153)) ;
        GGS_typeInstruction  var_cas_instruction ;
        var_cas_instruction = GGS_typeLogInstruction::constructor_new (_inLexique, var_cas_galgasVariableName, var_cas_nomCppVar COMMA_HERE) ;
        var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
      switch (select_repeat_semantics_parser_33 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3137_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_33 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3168_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_drop) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_nom ;
        _inLexique._assignFromAttribute_tokenString (var_cas_nom) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        GGS_typeCplusPlusName  var_cas_nomCppVar ;
        GGS_AC_galgasType  automatic_var_20 ;
        var_cas_ioVariablesMap.modifier_searchForDestructiveReadAccess (_inLexique, var_cas_nom, automatic_var_20, var_cas_nomCppVar COMMA_SOURCE_FILE_AT_LINE (3184)) ;
        GGS_typeInstruction  var_cas_instruction ;
        var_cas_instruction = GGS_typeDropInstruction::constructor_new (_inLexique, var_cas_nomCppVar COMMA_HERE) ;
        var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
      switch (select_repeat_semantics_parser_34 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3168_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_drop) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_34 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_3201_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */) {
  GGS_L_EXsignature  var_cas_signatureRoutine ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomVarDest, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3213)) ;
  }
  GGS_bool var_cas_isExternActionCall ;
  { const GGS_AC_semanticsEntity _var_126695 = var_cas_entite ; // CAST instruction
    if (_var_126695.getPtr () != NULL) {
      macroValidPointer (_var_126695.getPtr ()) ;
      if (dynamic_cast <cPtr_typeEntiteRoutine *> (_var_126695.getPtr ()) != NULL) {
        const GGS_typeEntiteRoutine var_cas_r (_var_126695.getPtr ()) ;
        var_cas_signatureRoutine = var_cas_r.reader_aListeArgumentsFormels (_inLexique COMMA_SOURCE_FILE_AT_LINE (3217)) ;
        var_cas_isExternActionCall = GGS_bool (true, false) ;
      }else if (dynamic_cast <cPtr_typeEntiteActionExterne *> (_var_126695.getPtr ()) != NULL) {
        const GGS_typeEntiteActionExterne var_cas_ae (_var_126695.getPtr ()) ;
        var_cas_signatureRoutine = var_cas_ae.reader_aSignature (_inLexique COMMA_SOURCE_FILE_AT_LINE (3220)) ;
        var_cas_isExternActionCall = GGS_bool (true, true) ;
      }else{
        var_cas_nomVarDest.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "'"))._operator_concat (var_cas_nomVarDest.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3224))))._operator_concat (GGS_string (true, "' should name a routine or an extern action")) COMMA_SOURCE_FILE_AT_LINE (3227)) ;
        var_cas_signatureRoutine._drop_operation () ;
        var_cas_isExternActionCall._drop_operation () ;
      }
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_parameters_list_ (_inLexique, var_cas_signatureRoutine, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeRoutineCallInstruction::constructor_new (_inLexique, var_cas_nomVarDest, var_cas_expressionsList, var_cas_signatureRoutine, var_cas_isExternActionCall COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_3201_6_parse (galgas_scanner & _inLexique) {
  nt_actual_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3261_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  switch (select_semantics_parser_35 (_inLexique)) {
    case 1 : {
      GGS_lstring  var_cas_readObjectName ;
      GGS_AC_galgasType  var_cas_variableType ;
      GGS_typeCplusPlusName  var_cas_cppVariableName ;
      nt_read_access_ (_inLexique, var_cas_readObjectName, var_cas_cppVariableName, var_cas_variableType, var_cas_ioVariablesMap) ;
      GGS_lstring  var_cas_methodName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      if (var_cas_variableType._isBuilt ()) {
        var_cas_variableType (HERE)->method_handleMethodInstructionCall (_inLexique, var_cas_readObjectName, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (3283)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeMethodCallInstruction::constructor_new (_inLexique, var_cas_cppVariableName, var_cas_methodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
      GGS_lstring  var_cas_modifiedObjectName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_modifiedObjectName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_variableType ;
      GGS_typeCplusPlusName  var_cas_cppVariableName ;
      var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_modifiedObjectName, var_cas_variableType, var_cas_cppVariableName COMMA_SOURCE_FILE_AT_LINE (3302)) ;
      GGS_lstring  var_cas_methodName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      if (var_cas_variableType._isBuilt ()) {
        var_cas_variableType (HERE)->method_handleModifierCall (_inLexique, var_cas_modifiedObjectName, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (3307)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeModifierCallInstruction::constructor_new (_inLexique, var_cas_cppVariableName, var_cas_methodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    case 3 : {
      GGS_lstring  var_cas_typeName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_lstring  var_cas_typeMethodName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_typeMethodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_typeMethodSignature ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
        var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_typeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (3328)) ;
      }
      GGS_AC_galgasType  var_cas_type ;
      var_cas_type = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_theEntity.getPtr (), true, var_cas_typeName COMMA_SOURCE_FILE_AT_LINE (3329)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (3329)) ;
      if (var_cas_type._isBuilt ()) {
        var_cas_type (HERE)->method_handleClassMethodCall (_inLexique, var_cas_typeMethodName, var_cas_typeMethodSignature COMMA_SOURCE_FILE_AT_LINE (3331)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_typeMethodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeCallOfTypeMethodInstruction::constructor_new (_inLexique, var_cas_typeName, var_cas_typeMethodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3261_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  switch (select_semantics_parser_35 (_inLexique)) {
    case 1 : {
      nt_read_access_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3361_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inMetamodelPropertyMap */,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  GGS_lstring  var_cas_nomVarDest ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomVarDest) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_instruction_beginning_with_identifier_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_nomVarDest, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inMetamodelEntityMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3361_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_instruction_beginning_with_identifier_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3392_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  if (var_cas_errorExpressionType._isBuilt ()) {
    var_cas_errorExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (3414)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeExpression  var_cas_warningMessageExpression ;
  GGS_AC_galgasType  var_cas_warningMessageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_warningMessageExpression, var_cas_warningMessageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs ;
  var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_warningMessageExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3427)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeWarningInstruction::constructor_new (_inLexique, var_cas_errorExpression, var_cas_warningMessageExpression, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3392_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3442_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorLocationExpression ;
  GGS_AC_galgasType  var_cas_errorLocationExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorLocationExpression, var_cas_errorLocationExpressionType) ;
  if (var_cas_errorLocationExpressionType._isBuilt ()) {
    var_cas_errorLocationExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (3464)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorMessageExpression ;
  GGS_AC_galgasType  var_cas_errorMessageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorMessageExpression, var_cas_errorMessageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs ;
  var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_errorMessageExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3477)) ;
  GGS_varToDropList  var_cas_variablesToDrop ;
  var_cas_variablesToDrop = GGS_varToDropList::constructor_emptyList (_inLexique COMMA_HERE) ;
  switch (select_semantics_parser_36 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_nomVariable ;
            _inLexique._assignFromAttribute_tokenString (var_cas_nomVariable) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_varCppName ;
            GGS_AC_galgasType  automatic_var_21 ;
            var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomVariable, automatic_var_21, var_cas_varCppName COMMA_SOURCE_FILE_AT_LINE (3488)) ;
            var_cas_variablesToDrop._addAssign_operation (var_cas_varCppName) ;
          switch (select_repeat_semantics_parser_37 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeErrorInstruction::constructor_new (_inLexique, var_cas_errorLocationExpression, var_cas_errorMessageExpression, GGS_location (_inLexique), var_cas_variablesToDrop COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3442_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  switch (select_semantics_parser_36 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_repeat_semantics_parser_37 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3511_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  GGS_location  var_cas_instructionLocation ;
  var_cas_instructionLocation = GGS_location (_inLexique) ;
  GGS_typeExpression  var_cas_messageExpression ;
  GGS_AC_galgasType  var_cas_messageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_messageExpression, var_cas_messageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs ;
  var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_messageExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3535)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeMessageInstruction::constructor_new (_inLexique, var_cas_messageExpression, var_cas_instructionLocation COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3511_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3549_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  GGS_L_expression_instructionsList_list  var_cas_listeBranchesTest ;
  var_cas_listeBranchesTest = GGS_L_expression_instructionsList_list::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3562)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3564)) ;
        GGS_typeExpression  var_cas_testBranche ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_testBranche, var_cas_resultType) ;
        GGS_typeGalgas_bool  var_cas_b ;
        var_cas_b = GGS_typeGalgas_bool::_castFrom (_inLexique, var_cas_resultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3574)) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_then) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_listeInstructionsBrancheTest ;
        var_cas_listeInstructionsBrancheTest = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheTest, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
        var_cas_listeBranchesTest._addAssign_operation (var_cas_testBranche, var_cas_listeInstructionsBrancheTest) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3564)) ;
      switch (select_repeat_semantics_parser_38 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_elsif) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeInstructionList  var_cas_listeInstructionsBrancheAutre ;
  var_cas_listeInstructionsBrancheAutre = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3595)) ;
  switch (select_semantics_parser_39 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheAutre, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3595)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3562)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_if_instruction::constructor_new (_inLexique, var_cas_listeBranchesTest, var_cas_listeInstructionsBrancheAutre COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3549_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        nt_expression_parse (_inLexique) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_then) COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_38 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_elsif) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_39 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3629_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  GGS_typeExpression  var_cas_switchExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_switchExpression, var_cas_resultType) ;
  GGS_typeGalgas_enum  var_cas_e ;
  var_cas_e = GGS_typeGalgas_enum::_castFrom (_inLexique, var_cas_resultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3652)) ;
  GGS_lstring  var_cas_enumTypeName ;
  var_cas_enumTypeName = var_cas_e.reader_mEnumTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (3653)) ;
  GGS_enumConstantMap  var_cas_enumConstantesMap ;
  var_cas_enumConstantesMap = var_cas_e.reader_mEnumConstantesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (3654)) ;
  GGS_stringset  var_cas_allBranchConstantSet ;
  var_cas_allBranchConstantSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_L_switchBranchlist  var_cas_switchBranchlist ;
  var_cas_switchBranchlist = GGS_L_switchBranchlist::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3659)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_stringset  var_cas_branchConstantSet ;
        var_cas_branchConstantSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
              GGS_lstring  var_cas_enumConstantName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_enumConstantName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_branchConstantSet._addAssign_operation (var_cas_enumConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3667))) ;
              if (var_cas_enumConstantesMap._isBuilt ()) {
                var_cas_enumConstantesMap (HERE)->method_searchKey (_inLexique, var_cas_enumConstantName COMMA_SOURCE_FILE_AT_LINE (3668)) ;
              }
              if ((var_cas_allBranchConstantSet.reader_hasKey (_inLexique, var_cas_enumConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3669)) COMMA_SOURCE_FILE_AT_LINE (3669))).isBuiltAndTrue ()) {
                var_cas_enumConstantName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this constant is already used in current switch instruction") COMMA_SOURCE_FILE_AT_LINE (3671)) ;
              }
            switch (select_repeat_semantics_parser_41 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
        var_cas_allBranchConstantSet = (var_cas_allBranchConstantSet)._operator_or (var_cas_branchConstantSet) ;
        var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3677)) ;
        GGS_typeInstructionList  var_cas_branchInstructionList ;
        var_cas_branchInstructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_branchInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
        var_cas_switchBranchlist._addAssign_operation (var_cas_branchConstantSet, var_cas_branchInstructionList) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3677)) ;
      switch (select_repeat_semantics_parser_40 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3659)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  GGS_stringset  var_cas_missingConstants ;
  var_cas_missingConstants = var_cas_enumConstantesMap.reader_allKeys (_inLexique COMMA_SOURCE_FILE_AT_LINE (3698))._substract_operation (_inLexique, var_cas_allBranchConstantSet COMMA_SOURCE_FILE_AT_LINE (3698)) ;
  const GGS_stringset _var_145154 = var_cas_missingConstants ;
  GGS_stringset::element_type * operand_145154 = _var_145154.firstObject () ;
  while ((operand_145154 != NULL)) {
    macroValidPointer (operand_145154) ;
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (operand_145154->mKey))._operator_concat (GGS_string (true, "' is not used in switch instruction")) COMMA_SOURCE_FILE_AT_LINE (3701)) ;
    operand_145154 = operand_145154->nextObject () ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_switch_instruction::constructor_new (_inLexique, var_cas_switchExpression, var_cas_enumTypeName, var_cas_switchBranchlist COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3629_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_repeat_semantics_parser_41 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_40 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3716_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  GGS_typeExpression  var_cas_variantExpression ;
  GGS_AC_galgasType  var_cas_variantResultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_variantExpression, var_cas_variantResultType) ;
  GGS_typeGalgas_uint  var_cas_ui ;
  var_cas_ui = GGS_typeGalgas_uint::_castFrom (_inLexique, var_cas_variantResultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3738)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList1 ;
  var_cas_instructionList1 = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (3743)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3744)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList1, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3744)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (3743)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
  GGS_typeExpression  var_cas_conditionalExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_conditionalExpression, var_cas_resultType) ;
  GGS_typeGalgas_bool  var_cas_b ;
  var_cas_b = GGS_typeGalgas_bool::_castFrom (_inLexique, var_cas_resultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3770)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList2 ;
  var_cas_instructionList2 = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (3775)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3776)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList2, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3776)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (3775)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_while_instruction::constructor_new (_inLexique, var_cas_variantExpression, var_cas_instructionList1, var_cas_conditionalExpression, var_cas_instructionList2, GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3716_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3810_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
  GGS_lstring  var_cas_grammarName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_grammarName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_altName ;
  switch (select_semantics_parser_42 (_inLexique)) {
    case 1 : {
      var_cas_altName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_label) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_altName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  GGS_lstring  var_cas_nomFichierSource ;
  GGS_typeCplusPlusName  var_cas_nomCppFichierSource ;
  GGS_AC_galgasType  var_cas_typeNomFichierSource ;
  nt_read_access_ (_inLexique, var_cas_nomFichierSource, var_cas_nomCppFichierSource, var_cas_typeNomFichierSource, var_cas_ioVariablesMap) ;
  GGS_typeGalgas_lstring  var_cas_gs ;
  var_cas_gs = GGS_typeGalgas_lstring::_castFrom (_inLexique, var_cas_typeNomFichierSource.getPtr (), true, var_cas_nomFichierSource COMMA_SOURCE_FILE_AT_LINE (3839)) ;
  GGS_typeExpressionList  var_cas_expressionsList ;
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_grammarName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (3853)) ;
  }
  GGS_C_grammarForSemantics  var_cas_gfs ;
  var_cas_gfs = GGS_C_grammarForSemantics::_castFrom (_inLexique, var_cas_e.getPtr (), true, var_cas_grammarName COMMA_SOURCE_FILE_AT_LINE (3854)) ;
  GGS_M_nonterminalSymbolAlts  var_cas_startSymbolAltMap ;
  var_cas_startSymbolAltMap = var_cas_gfs.reader_mGrammarAltMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (3855)) ;
  GGS_lstring  var_cas_lexiqueClassName ;
  var_cas_lexiqueClassName = var_cas_gfs.reader_mLexiqueClassName (_inLexique COMMA_SOURCE_FILE_AT_LINE (3856)) ;
  GGS_L_EXsignature  var_cas_startSymbolSignature ;
  GGS_lstring  var_cas_returnedEntity ;
  if (var_cas_startSymbolAltMap._isBuilt ()) {
    var_cas_startSymbolAltMap (HERE)->method_searchKey (_inLexique, var_cas_altName, var_cas_startSymbolSignature, var_cas_returnedEntity COMMA_SOURCE_FILE_AT_LINE (3860)) ;
  }
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique,  var_cas_startSymbolSignature,  var_cas_listeTypesParametresEffectifs,  GGS_location (_inLexique),  var_cas_ioInstructionList,  var_cas_expressionsList COMMA_SOURCE_FILE_AT_LINE (3861)) ;
  GGS_lstring  var_cas_metamodelClassVariableName ;
  var_cas_metamodelClassVariableName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
  switch (select_semantics_parser_43 (_inLexique)) {
    case 1 : {
      if (((var_cas_returnedEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3872)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "this grammar returns an instance of '@"))._operator_concat (var_cas_returnedEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3873))))._operator_concat (GGS_string (true, "' metamodel entity")) COMMA_SOURCE_FILE_AT_LINE (3873)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_metamodelClassVariableName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_type ;
      GGS_typeCplusPlusName  automatic_var_22 ;
      var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_metamodelClassVariableName, var_cas_type, automatic_var_22 COMMA_SOURCE_FILE_AT_LINE (3879)) ;
      GGS_lstring  var_cas_variableEntityName ;
      var_cas_variableEntityName = GGS_typeGalgas_singleReferenceEntity::_castFrom (_inLexique, var_cas_type.getPtr (), true, var_cas_metamodelClassVariableName COMMA_SOURCE_FILE_AT_LINE (3881)).reader_mEntityTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (3881)) ;
      if (((var_cas_returnedEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3883)))._operator_isNotEqual (var_cas_variableEntityName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3883)))).isBuiltAndTrue ()) {
        var_cas_metamodelClassVariableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "this variable has the '@"))._operator_concat (var_cas_variableEntityName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3884))))._operator_concat (GGS_string (true, "', but a variable of '@")))._operator_concat (var_cas_returnedEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3885))))._operator_concat (GGS_string (true, "' type is expected")) COMMA_SOURCE_FILE_AT_LINE (3886)) ;
      }
      } break ;
    default :
      break ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_grammarInstruction::constructor_new (_inLexique, var_cas_nomCppFichierSource, var_cas_grammarName, var_cas_expressionsList, var_cas_altName, var_cas_metamodelClassVariableName, var_cas_lexiqueClassName COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3810_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_42 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_label) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  nt_read_access_parse (_inLexique) ;
  nt_parse_parameters_list_parse (_inLexique) ;
  switch (select_semantics_parser_43 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3908_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
  GGS_lstring  var_cas_treewalkingComponentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_treewalkingComponentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_string var_cas_rootEntityName ;
  GGS_L_EXsignature  var_cas_treewalkingRoutineSignature ;
  if (var_cas_inTreewalkingComponentMap._isBuilt ()) {
    var_cas_inTreewalkingComponentMap (HERE)->method_searchKey (_inLexique, var_cas_treewalkingComponentName, var_cas_rootEntityName, var_cas_treewalkingRoutineSignature COMMA_SOURCE_FILE_AT_LINE (3926)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
  GGS_lstring  var_cas_modelVariableName ;
  GGS_typeCplusPlusName  var_cas_cppNameForModelVariable ;
  GGS_AC_galgasType  var_cas_modelVariableType ;
  nt_read_access_ (_inLexique, var_cas_modelVariableName, var_cas_cppNameForModelVariable, var_cas_modelVariableType, var_cas_ioVariablesMap) ;
  GGS_lstring  var_cas_variableEntity ;
  var_cas_variableEntity = GGS_typeGalgas_singleReferenceEntity::_castFrom (_inLexique, var_cas_modelVariableType.getPtr (), true, var_cas_modelVariableName COMMA_SOURCE_FILE_AT_LINE (3944)).reader_mEntityTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (3944)) ;
  if (((var_cas_variableEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3946)))._operator_isNotEqual (var_cas_rootEntityName)).isBuiltAndTrue ()) {
    var_cas_modelVariableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "the '"))._operator_concat (var_cas_modelVariableName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3947))))._operator_concat (GGS_string (true, "' variable is an instance of '@")))._operator_concat (var_cas_variableEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3948))))._operator_concat (GGS_string (true, "', but the '")))._operator_concat (var_cas_treewalkingComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3949))))._operator_concat (GGS_string (true, "' component requires an instance of '@")))._operator_concat (var_cas_rootEntityName))._operator_concat (GGS_string (true, "' type")) COMMA_SOURCE_FILE_AT_LINE (3951)) ;
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique,  var_cas_treewalkingRoutineSignature,  var_cas_listeTypesParametresEffectifs,  GGS_location (_inLexique),  var_cas_ioInstructionList,  var_cas_expressionsList COMMA_SOURCE_FILE_AT_LINE (3962)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_treewalkingInstruction::constructor_new (_inLexique, var_cas_treewalkingComponentName, var_cas_cppNameForModelVariable, var_cas_expressionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3908_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
  nt_read_access_parse (_inLexique) ;
  nt_parse_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3986_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (3999)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4000)) ;
  GGS_foreachEnumerationList  var_cas_foreachEnumerationList ;
  var_cas_foreachEnumerationList = GGS_foreachEnumerationList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_location  var_cas_magicNumber ;
        var_cas_magicNumber = GGS_location (_inLexique) ;
        GGS_typeExpression  var_cas_sourceExpression ;
        GGS_AC_galgasType  var_cas_sourceExpressionType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
        GGS_typeListeAttributsSemantiques  var_cas_formalEnumerationList ;
        GGS_localConstantBuildStyleEnum var_cas_localConstantBuildStyleEnum ;
        if (var_cas_sourceExpressionType._isBuilt ()) {
          var_cas_sourceExpressionType (HERE)->method_acceptForeachInstruction (_inLexique, var_cas_magicNumber, var_cas_formalEnumerationList, var_cas_localConstantBuildStyleEnum COMMA_SOURCE_FILE_AT_LINE (4018)) ;
        }
        GGS_string var_cas_typeName ;
        if (var_cas_sourceExpressionType._isBuilt ()) {
          var_cas_sourceExpressionType (HERE)->method_getTypeName (_inLexique, var_cas_typeName COMMA_SOURCE_FILE_AT_LINE (4021)) ;
        }
        GGS_bool automatic_var_23 ;
        nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_formalEnumerationList, var_cas_magicNumber, var_cas_localConstantBuildStyleEnum, automatic_var_23) ;
        var_cas_foreachEnumerationList._addAssign_operation (var_cas_sourceExpression, var_cas_magicNumber, var_cas_typeName) ;
      switch (select_repeat_semantics_parser_44 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeExpression  var_cas_whileExpression ;
  switch (select_semantics_parser_45 (_inLexique)) {
    case 1 : {
      var_cas_whileExpression = GGS_typeTrueBool::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_resultType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_whileExpression, var_cas_resultType) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList ;
  var_cas_instructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4000)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (3999)) ;
  var_cas_instruction = GGS_typeForeachInstruction::constructor_new (_inLexique, var_cas_foreachEnumerationList, var_cas_whileExpression, var_cas_instructionList COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3986_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        nt_expression_parse (_inLexique) ;
        nt_parse_effective_input_parameters_list_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_44 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_45 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'parse_match_operand'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_operand_semantics_parser_4083_6_ (galgas_scanner & _inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  &var_cas_outCppName,
                                GGS_lstring  &var_cas_outBaseTypeName,
                                GGS_location  &var_cas_outVarLocation,
                                GGS_bool &var_cas_outIsEnumeration,
                                GGS_enumConstantMap  &var_cas_outEnumMessageMap) {
  GGS_lstring  var_cas_variableName ;
  GGS_AC_galgasType  var_cas_type ;
  nt_read_access_ (_inLexique, var_cas_variableName, var_cas_outCppName, var_cas_type, var_cas_ioVariablesMap) ;
  var_cas_outVarLocation = GGS_location (_inLexique) ;
  { const GGS_AC_galgasType _var_160515 = var_cas_type ; // CAST instruction
    if (_var_160515.getPtr () != NULL) {
      macroValidPointer (_var_160515.getPtr ()) ;
      if (dynamic_cast <cPtr_typeGalgasClassType *> (_var_160515.getPtr ()) != NULL) {
        const GGS_typeGalgasClassType var_cas_t (_var_160515.getPtr ()) ;
        var_cas_outBaseTypeName = var_cas_t.reader_mClassTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4102)) ;
        var_cas_outIsEnumeration = GGS_bool (true, false) ;
        var_cas_outEnumMessageMap = GGS_enumConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      }else if (dynamic_cast <cPtr_typeGalgas_enum *> (_var_160515.getPtr ()) != NULL) {
        const GGS_typeGalgas_enum var_cas_e (_var_160515.getPtr ()) ;
        var_cas_outBaseTypeName = var_cas_e.reader_mEnumTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4106)) ;
        var_cas_outIsEnumeration = GGS_bool (true, true) ;
        var_cas_outEnumMessageMap = var_cas_e.reader_mEnumConstantesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4108)) ;
      }else{
        GGS_string var_cas_actualTypeName ;
        if (var_cas_type._isBuilt ()) {
          var_cas_type (HERE)->method_getTypeName (_inLexique, var_cas_actualTypeName COMMA_SOURCE_FILE_AT_LINE (4111)) ;
        }
        var_cas_variableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the type of this variable is '@"))._operator_concat (var_cas_actualTypeName))._operator_concat (GGS_string (true, "' ; I was expected an enumeration type or an abstract type")) COMMA_SOURCE_FILE_AT_LINE (4115)) ;
        var_cas_outBaseTypeName._drop_operation () ;
        var_cas_outIsEnumeration._drop_operation () ;
        var_cas_outEnumMessageMap._drop_operation () ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_operand_semantics_parser_4083_6_parse (galgas_scanner & _inLexique) {
  nt_read_access_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_case_semantics_parser_4121_6_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  var_cas_inVarLocation,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  /* var_cas_inEnumMessageMap */,
                                GGS_lstring  &var_cas_outTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (4134)) ;
  }
  GGS_AC_galgasType  var_cas_definitionClasse1 ;
  var_cas_definitionClasse1 = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (4135)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (4135)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_definitionClasse1.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (4138)) ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 ;
  var_cas_tableDesClassesAncetresType1 = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4139)) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 ;
  var_cas_listeAttributs1 = var_cas_classType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (4140)) ;
  GGS_bool var_cas_isAbstract ;
  var_cas_isAbstract = var_cas_classType.reader_mClassIsAbstract (_inLexique COMMA_SOURCE_FILE_AT_LINE (4141)) ;
  if ((var_cas_isAbstract).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "an abstract class is not allowed here") COMMA_SOURCE_FILE_AT_LINE (4154)) ;
  }
  if ((var_cas_inIsEnumeration).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "a constant of '@"))._operator_concat (var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4157))))._operator_concat (GGS_string (true, "' enumeration type is expected here")) COMMA_SOURCE_FILE_AT_LINE (4158)) ;
  }else if (((var_cas_tableDesClassesAncetresType1.reader_hasKey (_inLexique, var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4158)) COMMA_SOURCE_FILE_AT_LINE (4158)))._operator_not ()).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This type does not inherit from '"))._operator_concat (var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4159))))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (4160)) ;
  }
  GGS_bool automatic_var_24 ;
  nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_inVarLocation, GGS_localConstantBuildStyleEnum::constructor_listStyle (_inLexique COMMA_HERE), automatic_var_24) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_4121_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  nt_parse_effective_input_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_case_semantics_parser_4173_6_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  /* var_cas_inVarLocation */,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  var_cas_inEnumMessageMap,
                                GGS_lstring  &var_cas_outEnumConstantName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outEnumConstantName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  if ((var_cas_inIsEnumeration).isBuiltAndTrue ()) {
    if (var_cas_inEnumMessageMap._isBuilt ()) {
      var_cas_inEnumMessageMap (HERE)->method_searchKey (_inLexique, var_cas_outEnumConstantName COMMA_SOURCE_FILE_AT_LINE (4186)) ;
    }
  }else{
    var_cas_outEnumConstantName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "a class that inherit from '@"))._operator_concat (var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4188))))._operator_concat (GGS_string (true, "' abstract class is expected here")) COMMA_SOURCE_FILE_AT_LINE (4189)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_4173_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_4194_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_operand1_cppName ;
  GGS_lstring  var_cas_operand1_typeName ;
  GGS_location  var_cas_operand1_location ;
  GGS_bool var_cas_operand1_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand1_enumMessageMap ;
  nt_parse_match_operand_ (_inLexique, var_cas_ioVariablesMap, var_cas_operand1_cppName, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_operand2_cppName ;
  GGS_lstring  var_cas_operand2_typeName ;
  GGS_location  var_cas_operand2_location ;
  GGS_bool var_cas_operand2_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand2_enumMessageMap ;
  nt_parse_match_operand_ (_inLexique, var_cas_ioVariablesMap, var_cas_operand2_cppName, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_L_matchInstructionCasesList  var_cas_casesList ;
  var_cas_casesList = GGS_L_matchInstructionCasesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (4238)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_46 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4242)) ;
          GGS_lstring  var_cas_case1_name ;
          nt_parse_match_case_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap, var_cas_case1_name) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
          GGS_lstring  var_cas_case2_name ;
          nt_parse_match_case_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap, var_cas_case2_name) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          GGS_typeInstructionList  var_cas_instructionsList ;
          var_cas_instructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
          nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
          var_cas_casesList._addAssign_operation (var_cas_case1_name, var_cas_case2_name, var_cas_instructionsList) ;
          var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4242)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4285)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_elsePartInstructionsList ;
  var_cas_elsePartInstructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elsePartInstructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4285)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (4238)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeMatchInstruction::constructor_new (_inLexique, var_cas_operand1_location, var_cas_operand2_location, var_cas_operand1_cppName, var_cas_operand2_cppName, var_cas_operand1_typeName, var_cas_operand2_typeName, var_cas_operand1_isEnumeration, var_cas_operand2_isEnumeration, var_cas_casesList, var_cas_elsePartInstructionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4194_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  nt_parse_match_operand_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
  nt_parse_match_operand_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_46 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          nt_parse_match_case_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
          nt_parse_match_case_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          nt_semantic_instructions_list_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Implementation of production rule 'semantic_instructions_list_no_verif'   *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instructions_list_no_verif_semantics_parser_4320_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_47 (_inLexique)) {
        case 2 : {
          nt_semantic_instruction_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_no_verif_semantics_parser_4320_6_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_47 (_inLexique)) {
        case 2 : {
          nt_semantic_instruction_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_4351_6_ (galgas_scanner & _inLexique,
                                const GGS_lstring  /* var_cas_inTypeName */,
                                const GGS_lstring  /* var_cas_nomVarDest */,
                                const GGS_typeCplusPlusName  var_cas_inVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */) {
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeInstructionDeclarationVarLocale::constructor_new (_inLexique, var_cas_inVariableCppName, var_cas_inVariableType COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_4351_6_parse (galgas_scanner & /* _inLexique */) {
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_4367_6_ (galgas_scanner & _inLexique,
                                const GGS_lstring  /* var_cas_inTypeName */,
                                const GGS_lstring  var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  GGS_AC_galgasType  automatic_var_25 ;
  GGS_typeCplusPlusName  automatic_var_26 ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, automatic_var_25, automatic_var_26 COMMA_SOURCE_FILE_AT_LINE (4379)) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  ::routine_checkAssignmentTypesCompatibility (_inLexique,  var_cas_inVariableType,  var_cas_sourceType,  GGS_location (_inLexique),  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (4390)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_declarationInstructionWithAssignment::constructor_new (_inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_4367_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_4399_6_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inTypeName,
                                const GGS_lstring  var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap) {
  GGS_AC_galgasType  automatic_var_27 ;
  GGS_typeCplusPlusName  automatic_var_28 ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, automatic_var_27, automatic_var_28 COMMA_SOURCE_FILE_AT_LINE (4410)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  GGS_lstring  var_cas_constructorName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_constructorName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  if (var_cas_inVariableType._isBuilt ()) {
    var_cas_inVariableType (HERE)->method_handleConstructorCall (_inLexique, var_cas_constructorName, var_cas_listeAttributsSemantiques COMMA_SOURCE_FILE_AT_LINE (4416)) ;
  }
  GGS_typeExpressionList  var_cas_expressionList ;
  nt_output_expression_list_ (_inLexique, var_cas_expressionList, var_cas_listeAttributsSemantiques, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_e ;
  var_cas_e = GGS_typeConstructorExpression::constructor_new (_inLexique, var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4429)), var_cas_constructorName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4430)), var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (GGS_C_declarationInstructionWithAssignment::constructor_new (_inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_e COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_4399_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_output_expression_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4442_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  GGS_lstring  var_cas_mapindexTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapindexTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_48 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4456)) COMMA_SOURCE_FILE_AT_LINE (4456)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4457)) COMMA_SOURCE_FILE_AT_LINE (4457))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapindexType::constructor_new (_inLexique, var_cas_mapindexTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (4459)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      GGS_lstring  var_cas_mapTypeName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
        var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_mapTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (4466)) ;
      }
      GGS_AC_galgasType  var_cas_aType ;
      var_cas_aType = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_theEntity.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (4467)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (4467)) ;
      GGS_typeGalgasMapType  var_cas_mapType ;
      var_cas_mapType = GGS_typeGalgasMapType::_castFrom (_inLexique, var_cas_aType.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (4469)) ;
      GGS_typeListeAttributsSemantiques  var_cas_mapAttributesList ;
      var_cas_mapAttributesList = var_cas_mapType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (4470)) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesSurcharger ;
      var_cas_tableMethodesSurcharger = var_cas_mapType.reader_aTableMethodesSurcharger (_inLexique COMMA_SOURCE_FILE_AT_LINE (4471)) ;
      GGS_mapModifierMap  var_cas_modifierMethodMap ;
      var_cas_modifierMethodMap = var_cas_mapType.reader_mModifierMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4472)) ;
      GGS_mapMethodMap  var_cas_readerMethodMap ;
      var_cas_readerMethodMap = var_cas_mapType.reader_mReaderMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4473)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_mapIndexSearchReaderMap  var_cas_mapIndexSearchReaderMap ;
      var_cas_mapIndexSearchReaderMap = GGS_mapIndexSearchReaderMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_49 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_searchReaderName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_searchReaderName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              GGS_lstring  var_cas_mapindexErrorMessage ;
              _inLexique._assignFromAttribute_tokenString (var_cas_mapindexErrorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              if (var_cas_mapindexErrorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (4493)) ;
              }
              var_cas_mapIndexSearchReaderMap.modifier_insertKey (_inLexique, var_cas_searchReaderName, var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (4494)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_t ;
      var_cas_t = GGS_typeGalgasMapindexType::constructor_new (_inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap, var_cas_tableMethodesSurcharger, var_cas_modifierMethodMap, var_cas_readerMethodMap COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (4507)) ;
      GGS_typeEntityToGenerate  var_cas_e ;
      var_cas_e = GGS_C_mapindexToImplement::constructor_new (_inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_e) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4442_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  GGS_lstring  var_cas_mapindexTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapindexTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_48 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4530)) COMMA_SOURCE_FILE_AT_LINE (4530)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4531)) COMMA_SOURCE_FILE_AT_LINE (4531))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapindexType::constructor_new (_inLexique, var_cas_mapindexTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (4533)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      GGS_lstring  var_cas_mapTypeName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
        var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_mapTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (4540)) ;
      }
      GGS_AC_galgasType  var_cas_aType ;
      var_cas_aType = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_theEntity.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (4541)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (4541)) ;
      GGS_typeGalgasMapType  var_cas_mapType ;
      var_cas_mapType = GGS_typeGalgasMapType::_castFrom (_inLexique, var_cas_aType.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (4543)) ;
      GGS_typeListeAttributsSemantiques  var_cas_mapAttributesList ;
      var_cas_mapAttributesList = var_cas_mapType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (4544)) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesSurcharger ;
      var_cas_tableMethodesSurcharger = var_cas_mapType.reader_aTableMethodesSurcharger (_inLexique COMMA_SOURCE_FILE_AT_LINE (4545)) ;
      GGS_mapModifierMap  var_cas_modifierMethodMap ;
      var_cas_modifierMethodMap = var_cas_mapType.reader_mModifierMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4546)) ;
      GGS_mapMethodMap  var_cas_readerMethodMap ;
      var_cas_readerMethodMap = var_cas_mapType.reader_mReaderMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4547)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_mapIndexSearchReaderMap  var_cas_mapIndexSearchReaderMap ;
      var_cas_mapIndexSearchReaderMap = GGS_mapIndexSearchReaderMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_49 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_searchReaderName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_searchReaderName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              GGS_lstring  var_cas_mapindexErrorMessage ;
              _inLexique._assignFromAttribute_tokenString (var_cas_mapindexErrorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              if (var_cas_mapindexErrorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (4567)) ;
              }
              var_cas_mapIndexSearchReaderMap.modifier_insertKey (_inLexique, var_cas_searchReaderName, var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (4568)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_t ;
      var_cas_t = GGS_typeGalgasMapindexType::constructor_new (_inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap, var_cas_tableMethodesSurcharger, var_cas_modifierMethodMap, var_cas_readerMethodMap COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (4581)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_4442_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_48 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_49 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4591_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mapTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4605)) COMMA_SOURCE_FILE_AT_LINE (4605)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4606)) COMMA_SOURCE_FILE_AT_LINE (4606))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapType::constructor_new (_inLexique, var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (4608)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
      GGS_lstring  var_cas_cppClassName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_cppClassName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      var_cas_cppClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old style map definition") COMMA_SOURCE_FILE_AT_LINE (4615)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_51 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4628)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4635)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut ;
              var_cas_tableDebut = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin ;
              var_cas_tableFin = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_tableMethodesBloc.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin COMMA_SOURCE_FILE_AT_LINE (4670)) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      const GGS_insertOrSearchMethodList _var_181945 = var_cas_insertMethodList ;
      GGS_insertOrSearchMethodList::element_type * operand_181945 = _var_181945.firstObject () ;
      while ((operand_181945 != NULL)) {
        macroValidPointer (operand_181945) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        const GGS_typeListeAttributsSemantiques _var_182128 = var_cas_listeTousAttributsSemantiques ;
        GGS_typeListeAttributsSemantiques::element_type * operand_182128 = _var_182128.firstObject () ;
        while ((operand_182128 != NULL)) {
          macroValidPointer (operand_182128) ;
          var_cas_methodSignature._addAssign_operation (operand_182128->mAttributType, var_cas_inPassingMode) ;
          operand_182128 = operand_182128->nextObject () ;
        }
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_181945->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (4698)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        const GGS_typeListeAttributsSemantiques _var_182557 = var_cas_listeTousAttributsSemantiques ;
        GGS_typeListeAttributsSemantiques::element_type * operand_182557 = _var_182557.firstObject () ;
        while ((operand_182557 != NULL)) {
          macroValidPointer (operand_182557) ;
          var_cas_methodSignature._addAssign_operation (operand_182557->mAttributType, var_cas_inPassingMode) ;
          operand_182557 = operand_182557->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, (operand_181945->mMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4706)))._operator_concat (GGS_string (true, "GetIndex")), operand_181945->mMethodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (4706)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (4707)) ;
        operand_181945 = operand_181945->nextObject () ;
      }
      const GGS_insertOrSearchMethodList _var_182918 = var_cas_searchMethodList ;
      GGS_insertOrSearchMethodList::element_type * operand_182918 = _var_182918.firstObject () ;
      while ((operand_182918 != NULL)) {
        macroValidPointer (operand_182918) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        const GGS_typeListeAttributsSemantiques _var_183099 = var_cas_listeTousAttributsSemantiques ;
        GGS_typeListeAttributsSemantiques::element_type * operand_183099 = _var_183099.firstObject () ;
        while ((operand_183099 != NULL)) {
          macroValidPointer (operand_183099) ;
          var_cas_methodSignature._addAssign_operation (operand_183099->mAttributType, var_cas_outPassingMode) ;
          operand_183099 = operand_183099->nextObject () ;
        }
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_182918->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (4716)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        const GGS_typeListeAttributsSemantiques _var_183526 = var_cas_listeTousAttributsSemantiques ;
        GGS_typeListeAttributsSemantiques::element_type * operand_183526 = _var_183526.firstObject () ;
        while ((operand_183526 != NULL)) {
          macroValidPointer (operand_183526) ;
          var_cas_methodSignature._addAssign_operation (operand_183526->mAttributType, var_cas_outPassingMode) ;
          operand_183526 = operand_183526->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, (operand_182918->mMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4724)))._operator_concat (GGS_string (true, "GetIndex")), operand_182918->mMethodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (4724)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (4725)) ;
        operand_182918 = operand_182918->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (4736)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_typeDefinitionTableAimplementer::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_cppClassName, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_tableMethodesBloc COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_removeMethodList ;
      var_cas_removeMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_mapMethodMap  var_cas_mapReaderMethodMap ;
      var_cas_mapReaderMethodMap = GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_52 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (4780)) ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              const GGS_typeListeAttributsSemantiques _var_186564 = var_cas_listeTousAttributsSemantiques ;
              GGS_typeListeAttributsSemantiques::element_type * operand_186564 = _var_186564.firstObject () ;
              while ((operand_186564 != NULL)) {
                macroValidPointer (operand_186564) ;
                var_cas_methodSignature._addAssign_operation (operand_186564->mAttributType, var_cas_outPassingMode) ;
                operand_186564 = operand_186564->nextObject () ;
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (4788)) ;
              var_cas_removeMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4789)), GGS_bool (true, false), GGS_string (true, "")) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4791)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                const GGS_typeListeAttributsSemantiques _var_187152 = var_cas_listeTousAttributsSemantiques ;
                GGS_typeListeAttributsSemantiques::element_type * operand_187152 = _var_187152.firstObject () ;
                while ((operand_187152 != NULL)) {
                  macroValidPointer (operand_187152) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_187152->mAttributType, var_cas_outPassingMode) ;
                  operand_187152 = operand_187152->nextObject () ;
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (4798)) ;
                var_cas_removeMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4799)), GGS_bool (true, true), GGS_string (true, "")) ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (4807)) ;
              }
              GGS_string var_cas_shadowErrorMessage ;
              switch (select_semantics_parser_53 (_inLexique)) {
                case 1 : {
                  var_cas_shadowErrorMessage = GGS_string (true, "") ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  GGS_lstring  var_cas_shadowErrorMessageString ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_shadowErrorMessageString) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (var_cas_shadowErrorMessageString._isBuilt ()) {
                    ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_shadowErrorMessageString COMMA_SOURCE_FILE_AT_LINE (4815)) ;
                  }
                  var_cas_shadowErrorMessage = var_cas_shadowErrorMessageString.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4816)) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              const GGS_typeListeAttributsSemantiques _var_188247 = var_cas_listeTousAttributsSemantiques ;
              GGS_typeListeAttributsSemantiques::element_type * operand_188247 = _var_188247.firstObject () ;
              while ((operand_188247 != NULL)) {
                macroValidPointer (operand_188247) ;
                var_cas_methodSignature._addAssign_operation (operand_188247->mAttributType, var_cas_inPassingMode) ;
                operand_188247 = operand_188247->nextObject () ;
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (4825)) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4826)), GGS_bool (true, false), var_cas_shadowErrorMessage) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4828)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                const GGS_typeListeAttributsSemantiques _var_188850 = var_cas_listeTousAttributsSemantiques ;
                GGS_typeListeAttributsSemantiques::element_type * operand_188850 = _var_188850.firstObject () ;
                while ((operand_188850 != NULL)) {
                  macroValidPointer (operand_188850) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_188850->mAttributType, var_cas_inPassingMode) ;
                  operand_188850 = operand_188850->nextObject () ;
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (4835)) ;
                var_cas_insertMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4836)), GGS_bool (true, true), var_cas_shadowErrorMessage) ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_K_escapeCharacters (_inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (4844)) ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              const GGS_typeListeAttributsSemantiques _var_189631 = var_cas_listeTousAttributsSemantiques ;
              GGS_typeListeAttributsSemantiques::element_type * operand_189631 = _var_189631.firstObject () ;
              while ((operand_189631 != NULL)) {
                macroValidPointer (operand_189631) ;
                var_cas_methodSignature._addAssign_operation (operand_189631->mAttributType, var_cas_outPassingMode) ;
                operand_189631 = operand_189631->nextObject () ;
              }
              var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (4852)) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4853)), GGS_bool (true, false), GGS_string (true, "")) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4855)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                const GGS_typeListeAttributsSemantiques _var_190249 = var_cas_listeTousAttributsSemantiques ;
                GGS_typeListeAttributsSemantiques::element_type * operand_190249 = _var_190249.firstObject () ;
                while ((operand_190249 != NULL)) {
                  macroValidPointer (operand_190249) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_190249->mAttributType, var_cas_outPassingMode) ;
                  operand_190249 = operand_190249->nextObject () ;
                }
                var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (4862)) ;
                var_cas_searchMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4863)), GGS_bool (true, true), GGS_string (true, "")) ;
              }
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapReaderMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (4875)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_mapToImplement::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_removeMethodList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4591_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mapTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4901)) COMMA_SOURCE_FILE_AT_LINE (4901)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4901)) COMMA_SOURCE_FILE_AT_LINE (4901))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapType::constructor_new (_inLexique, var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (4903)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
      GGS_lstring  var_cas_cppClassName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_cppClassName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_51 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4922)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4929)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut ;
              var_cas_tableDebut = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin ;
              var_cas_tableFin = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_tableMethodesBloc.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin COMMA_SOURCE_FILE_AT_LINE (4964)) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      const GGS_insertOrSearchMethodList _var_194921 = var_cas_insertMethodList ;
      GGS_insertOrSearchMethodList::element_type * operand_194921 = _var_194921.firstObject () ;
      while ((operand_194921 != NULL)) {
        macroValidPointer (operand_194921) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        const GGS_typeListeAttributsSemantiques _var_195104 = var_cas_listeTousAttributsSemantiques ;
        GGS_typeListeAttributsSemantiques::element_type * operand_195104 = _var_195104.firstObject () ;
        while ((operand_195104 != NULL)) {
          macroValidPointer (operand_195104) ;
          var_cas_methodSignature._addAssign_operation (operand_195104->mAttributType, var_cas_inPassingMode) ;
          operand_195104 = operand_195104->nextObject () ;
        }
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_194921->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (4992)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        const GGS_typeListeAttributsSemantiques _var_195533 = var_cas_listeTousAttributsSemantiques ;
        GGS_typeListeAttributsSemantiques::element_type * operand_195533 = _var_195533.firstObject () ;
        while ((operand_195533 != NULL)) {
          macroValidPointer (operand_195533) ;
          var_cas_methodSignature._addAssign_operation (operand_195533->mAttributType, var_cas_inPassingMode) ;
          operand_195533 = operand_195533->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, (operand_194921->mMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5000)))._operator_concat (GGS_string (true, "GetIndex")), operand_194921->mMethodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (5000)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5001)) ;
        operand_194921 = operand_194921->nextObject () ;
      }
      const GGS_insertOrSearchMethodList _var_195894 = var_cas_searchMethodList ;
      GGS_insertOrSearchMethodList::element_type * operand_195894 = _var_195894.firstObject () ;
      while ((operand_195894 != NULL)) {
        macroValidPointer (operand_195894) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        const GGS_typeListeAttributsSemantiques _var_196077 = var_cas_listeTousAttributsSemantiques ;
        GGS_typeListeAttributsSemantiques::element_type * operand_196077 = _var_196077.firstObject () ;
        while ((operand_196077 != NULL)) {
          macroValidPointer (operand_196077) ;
          var_cas_methodSignature._addAssign_operation (operand_196077->mAttributType, var_cas_outPassingMode) ;
          operand_196077 = operand_196077->nextObject () ;
        }
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_195894->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5010)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        const GGS_typeListeAttributsSemantiques _var_196507 = var_cas_listeTousAttributsSemantiques ;
        GGS_typeListeAttributsSemantiques::element_type * operand_196507 = _var_196507.firstObject () ;
        while ((operand_196507 != NULL)) {
          macroValidPointer (operand_196507) ;
          var_cas_methodSignature._addAssign_operation (operand_196507->mAttributType, var_cas_outPassingMode) ;
          operand_196507 = operand_196507->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, (operand_195894->mMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5018)))._operator_concat (GGS_string (true, "GetIndex")), operand_195894->mMethodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (5018)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5019)) ;
        operand_195894 = operand_195894->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5030)) ;
      GGS_TypeModel  var_cas_type ;
      var_cas_type = GGS_MapModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (5032)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_mapMethodMap  var_cas_mapReaderMethodMap ;
      var_cas_mapReaderMethodMap = GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_52 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_29 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_29) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              const GGS_typeListeAttributsSemantiques _var_198741 = var_cas_listeTousAttributsSemantiques ;
              GGS_typeListeAttributsSemantiques::element_type * operand_198741 = _var_198741.firstObject () ;
              while ((operand_198741 != NULL)) {
                macroValidPointer (operand_198741) ;
                var_cas_methodSignature._addAssign_operation (operand_198741->mAttributType, var_cas_outPassingMode) ;
                operand_198741 = operand_198741->nextObject () ;
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5071)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5073)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                const GGS_typeListeAttributsSemantiques _var_199285 = var_cas_listeTousAttributsSemantiques ;
                GGS_typeListeAttributsSemantiques::element_type * operand_199285 = _var_199285.firstObject () ;
                while ((operand_199285 != NULL)) {
                  macroValidPointer (operand_199285) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_199285->mAttributType, var_cas_outPassingMode) ;
                  operand_199285 = operand_199285->nextObject () ;
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5080)) ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_30 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_30) ;
              switch (select_semantics_parser_53 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              const GGS_typeListeAttributsSemantiques _var_199965 = var_cas_listeTousAttributsSemantiques ;
              GGS_typeListeAttributsSemantiques::element_type * operand_199965 = _var_199965.firstObject () ;
              while ((operand_199965 != NULL)) {
                macroValidPointer (operand_199965) ;
                var_cas_methodSignature._addAssign_operation (operand_199965->mAttributType, var_cas_inPassingMode) ;
                operand_199965 = operand_199965->nextObject () ;
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5099)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5101)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                const GGS_typeListeAttributsSemantiques _var_200508 = var_cas_listeTousAttributsSemantiques ;
                GGS_typeListeAttributsSemantiques::element_type * operand_200508 = _var_200508.firstObject () ;
                while ((operand_200508 != NULL)) {
                  macroValidPointer (operand_200508) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_200508->mAttributType, var_cas_inPassingMode) ;
                  operand_200508 = operand_200508->nextObject () ;
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5108)) ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_31 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_31) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              const GGS_typeListeAttributsSemantiques _var_201108 = var_cas_listeTousAttributsSemantiques ;
              GGS_typeListeAttributsSemantiques::element_type * operand_201108 = _var_201108.firstObject () ;
              while ((operand_201108 != NULL)) {
                macroValidPointer (operand_201108) ;
                var_cas_methodSignature._addAssign_operation (operand_201108->mAttributType, var_cas_outPassingMode) ;
                operand_201108 = operand_201108->nextObject () ;
              }
              var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5122)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5124)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                const GGS_typeListeAttributsSemantiques _var_201692 = var_cas_listeTousAttributsSemantiques ;
                GGS_typeListeAttributsSemantiques::element_type * operand_201692 = _var_201692.firstObject () ;
                while ((operand_201692 != NULL)) {
                  macroValidPointer (operand_201692) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_201692->mAttributType, var_cas_outPassingMode) ;
                  operand_201692 = operand_201692->nextObject () ;
                }
                var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5131)) ;
              }
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapReaderMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5143)) ;
      GGS_TypeModel  var_cas_type ;
      var_cas_type = GGS_MapModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (5145)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_4591_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_51 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              nt_ex_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              nt_ex_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_52 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
              nt_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              nt_map_method_parse (_inLexique) ;
              switch (select_semantics_parser_53 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              nt_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'ex_map_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_ex_map_method_semantics_parser_5152_6_ (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_nomMethode,
                                GGS_lstring  &var_cas_outMessage) {
  _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outMessage) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_ex_map_method_semantics_parser_5152_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'map_method'               *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_map_method_semantics_parser_5164_6_ (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_methodName,
                                GGS_lstring  &var_cas_getIndexMethodName,
                                GGS_lstring  &var_cas_outMessage) {
  _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_54 (_inLexique)) {
    case 1 : {
      var_cas_getIndexMethodName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_getIndexMethodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outMessage) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_map_method_semantics_parser_5164_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_54 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5187_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_55 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5201)) COMMA_SOURCE_FILE_AT_LINE (5201)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5201)) COMMA_SOURCE_FILE_AT_LINE (5201))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5203)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_inputSignature ;
      var_cas_inputSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      const GGS_typeListeAttributsSemantiques _var_205007 = var_cas_listeTousAttributsSemantiques ;
      GGS_typeListeAttributsSemantiques::element_type * operand_205007 = _var_205007.firstObject () ;
      while ((operand_205007 != NULL)) {
        macroValidPointer (operand_205007) ;
        var_cas_extractSignature._addAssign_operation (operand_205007->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        var_cas_inputSignature._addAssign_operation (operand_205007->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE)) ;
        operand_205007 = operand_205007->nextObject () ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature, var_cas_inputSignature COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5235)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_listTypeToImplement::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5187_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_55 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5256)) COMMA_SOURCE_FILE_AT_LINE (5256)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5256)) COMMA_SOURCE_FILE_AT_LINE (5256))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5258)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_inputSignature ;
      var_cas_inputSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      const GGS_typeListeAttributsSemantiques _var_207207 = var_cas_listeTousAttributsSemantiques ;
      GGS_typeListeAttributsSemantiques::element_type * operand_207207 = _var_207207.firstObject () ;
      while ((operand_207207 != NULL)) {
        macroValidPointer (operand_207207) ;
        var_cas_extractSignature._addAssign_operation (operand_207207->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        var_cas_inputSignature._addAssign_operation (operand_207207->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE)) ;
        operand_207207 = operand_207207->nextObject () ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature, var_cas_inputSignature COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5290)) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ListModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5292)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5187_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_55 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5302_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_56 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5316)) COMMA_SOURCE_FILE_AT_LINE (5316)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5316)) COMMA_SOURCE_FILE_AT_LINE (5316))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5318)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      const GGS_typeListeAttributsSemantiques _var_209769 = var_cas_listeTousAttributsSemantiques ;
      GGS_typeListeAttributsSemantiques::element_type * operand_209769 = _var_209769.firstObject () ;
      while ((operand_209769 != NULL)) {
        macroValidPointer (operand_209769) ;
        var_cas_extractSignature._addAssign_operation (operand_209769->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        operand_209769 = operand_209769->nextObject () ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasSortedListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_sortDescriptorList  var_cas_sortDescriptorList ;
      var_cas_sortDescriptorList = GGS_sortDescriptorList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_stringset  var_cas_usedSortedAttributes ;
      var_cas_usedSortedAttributes = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_sortAttribute ;
            _inLexique._assignFromAttribute_tokenString (var_cas_sortAttribute) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            if ((var_cas_usedSortedAttributes.reader_hasKey (_inLexique, var_cas_sortAttribute.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5353)) COMMA_SOURCE_FILE_AT_LINE (5353))).isBuiltAndTrue ()) {
              var_cas_sortAttribute.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this attribute is already used in sort list") COMMA_SOURCE_FILE_AT_LINE (5355)) ;
            }else{
              GGS_AC_galgasType  var_cas_definitionType ;
              if (var_cas_tableAttributs._isBuilt ()) {
                var_cas_tableAttributs (HERE)->method_searchKey (_inLexique, var_cas_sortAttribute, var_cas_definitionType COMMA_SOURCE_FILE_AT_LINE (5357)) ;
              }
              if (var_cas_definitionType._isBuilt ()) {
                var_cas_definitionType (HERE)->method_acceptToBeSortKeyInSortedListDefinition (_inLexique, var_cas_sortAttribute COMMA_SOURCE_FILE_AT_LINE (5358)) ;
              }
              var_cas_usedSortedAttributes._addAssign_operation (var_cas_sortAttribute.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5359))) ;
            }
            GGS_bool var_cas_ascendingOrder ;
            switch (select_semantics_parser_58 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
                var_cas_ascendingOrder = GGS_bool (true, true) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
                var_cas_ascendingOrder = GGS_bool (true, false) ;
                } break ;
              default :
                break ;
            }
            var_cas_sortDescriptorList._addAssign_operation (var_cas_sortAttribute, var_cas_ascendingOrder) ;
          switch (select_repeat_semantics_parser_57 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5375)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_sortedListTypeToImplement::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_sortDescriptorList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5302_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_56 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5397)) COMMA_SOURCE_FILE_AT_LINE (5397)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5397)) COMMA_SOURCE_FILE_AT_LINE (5397))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5399)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      const GGS_typeListeAttributsSemantiques _var_212780 = var_cas_listeTousAttributsSemantiques ;
      GGS_typeListeAttributsSemantiques::element_type * operand_212780 = _var_212780.firstObject () ;
      while ((operand_212780 != NULL)) {
        macroValidPointer (operand_212780) ;
        var_cas_extractSignature._addAssign_operation (operand_212780->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        operand_212780 = operand_212780->nextObject () ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasSortedListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_semantics_parser_58 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
          switch (select_repeat_semantics_parser_57 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5441)) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ListModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5443)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5302_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_56 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_semantics_parser_58 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
          switch (select_repeat_semantics_parser_57 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'attributes_definition_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_attributes_definition_list_semantics_parser_5453_6_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                GGS_typeListModel  &var_cas_outAttributeListModel,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeAttributsSemantiquesCourants,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_listeAttributsSemantiquesCourants = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_outAttributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_59 (_inLexique)) {
        case 2 : {
          GGS_AC_galgasType  var_cas_definitionType ;
          GGS_lstring  var_cas_typeName ;
          nt_type_parsing_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
          GGS_lstring  var_cas_attributeName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_attributeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_tableAttributs.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_definitionType COMMA_SOURCE_FILE_AT_LINE (5477)) ;
          var_cas_listeTousAttributsSemantiques._addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_listeAttributsSemantiquesCourants._addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_outAttributeListModel._addAssign_operation (var_cas_typeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_attributes_definition_list_semantics_parser_5453_6_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_59 (_inLexique)) {
        case 2 : {
          nt_type_parsing_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5491_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  GGS_lstring  var_cas_externTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_externTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_cppClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_cppClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  GGS_lstring  var_cas_path ;
  _inLexique._assignFromAttribute_tokenString (var_cas_path) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_modifiersMap ;
  var_cas_modifiersMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap ;
  var_cas_readersInInstructionMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall ;
  var_cas_acceptAddAssignOperatorCall = GGS_bool (true, false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList ;
  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_externTypeConstructorMap  var_cas_constructorsMap ;
  var_cas_constructorsMap = GGS_M_externTypeConstructorMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_60 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
          GGS_lstring  var_cas_constructorName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_constructorName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList ;
          var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semantics_parser_61 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  var_cas_constructorArgumentTypesList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_constructorsMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList COMMA_SOURCE_FILE_AT_LINE (5541)) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          GGS_lstring  var_cas_methodName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
          var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_L_signature  var_cas_signatureForGrammarComponent ;
          nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_readersInInstructionMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (5561)) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          switch (select_semantics_parser_62 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_methodName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
              var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              var_cas_modifiersMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (5581)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
              GGS_location  var_cas_errorLocation ;
              var_cas_errorLocation = GGS_location (_inLexique) ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                  switch (select_repeat_semantics_parser_63 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                      var_cas_addAssignOperatorCallTypeList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              if ((var_cas_acceptAddAssignOperatorCall).isBuiltAndTrue ()) {
                var_cas_errorLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'+=' operator is already defined") COMMA_SOURCE_FILE_AT_LINE (5602)) ;
              }else{
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true, true) ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeEntityToGenerate  var_cas_t ;
  var_cas_t = GGS_typeExternTypeToGenerate::constructor_new (_inLexique, var_cas_externTypeName, var_cas_cppClassName, var_cas_path COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_t) ;
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasExternType::constructor_new (_inLexique, var_cas_externTypeName, var_cas_cppClassName, var_cas_constructorsMap, var_cas_modifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (5620)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5491_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  GGS_lstring  var_cas_externTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_externTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_cppClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_cppClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_EXmodifiersMap ;
  var_cas_EXmodifiersMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap ;
  var_cas_readersInInstructionMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall ;
  var_cas_acceptAddAssignOperatorCall = GGS_bool (true, false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList ;
  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_externTypeConstructorMap  var_cas_EXconstructorsMap ;
  var_cas_EXconstructorsMap = GGS_M_externTypeConstructorMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_constructorMap  var_cas_constructorMap ;
  var_cas_constructorMap = GGS_constructorMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_readerMap  var_cas_readerMap ;
  var_cas_readerMap = GGS_readerMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_modifierMap  var_cas_modifierMap ;
  var_cas_modifierMap = GGS_modifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListModel  var_cas_addAssignFormalInputArgumentList ;
  var_cas_addAssignFormalInputArgumentList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_60 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
          GGS_lstring  var_cas_constructorName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_constructorName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList ;
          var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeListModel  var_cas_formalInputArgumentList ;
          var_cas_formalInputArgumentList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semantics_parser_61 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  var_cas_constructorArgumentTypesList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  var_cas_formalInputArgumentList._addAssign_operation (var_cas_galgasTypeName) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_EXconstructorsMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList COMMA_SOURCE_FILE_AT_LINE (5677)) ;
          var_cas_constructorMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_formalInputArgumentList COMMA_SOURCE_FILE_AT_LINE (5678)) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          GGS_lstring  var_cas_readerName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_readerName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
          var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_L_signature  var_cas_signature ;
          nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_readersInInstructionMap.modifier_insertKey (_inLexique, var_cas_readerName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (5698)) ;
          var_cas_readerMap.modifier_insertKey (_inLexique, var_cas_readerName, var_cas_signature COMMA_SOURCE_FILE_AT_LINE (5699)) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          switch (select_semantics_parser_62 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_modifierName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_modifierName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
              var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_L_signature  var_cas_signature ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
              var_cas_EXmodifiersMap.modifier_insertKey (_inLexique, var_cas_modifierName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (5719)) ;
              var_cas_modifierMap.modifier_insertKey (_inLexique, var_cas_modifierName, var_cas_signature COMMA_SOURCE_FILE_AT_LINE (5720)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
              if (((var_cas_addAssignFormalInputArgumentList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (5723)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'+=' operator is already defined") COMMA_SOURCE_FILE_AT_LINE (5725)) ;
              }else{
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true, true) ;
              }
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                  switch (select_repeat_semantics_parser_63 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                      var_cas_addAssignOperatorCallTypeList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      var_cas_addAssignFormalInputArgumentList._addAssign_operation (var_cas_galgasTypeName) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasExternType::constructor_new (_inLexique, var_cas_externTypeName, var_cas_cppClassName, var_cas_EXconstructorsMap, var_cas_EXmodifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (5756)) ;
  GGS_TypeModel  var_cas_t ;
  var_cas_t = GGS_ExternTypeModel::constructor_new (_inLexique, var_cas_constructorMap, var_cas_readerMap, var_cas_modifierMap, var_cas_addAssignFormalInputArgumentList COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5758)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5491_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_60 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semantics_parser_61 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  nt_formal_argument_type_parse (_inLexique) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          nt_formal_arguments_list_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          switch (select_semantics_parser_62 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                  switch (select_repeat_semantics_parser_63 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                      nt_formal_argument_type_parse (_inLexique) ;
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5766_6_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5773)) COMMA_SOURCE_FILE_AT_LINE (5773))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_inComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_inComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5775)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (5776)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (5776)) ;
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (5779)) ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5766_6_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_5766_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5789_6_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5797)) COMMA_SOURCE_FILE_AT_LINE (5797))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_inComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_inComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5799)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (5800)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (5800)) ;
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (5803)) ;
    }
    GGS_typeGalgasUndefinedListType  var_cas_x ;
    var_cas_x = GGS_typeGalgasUndefinedListType::_castFrom (_inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (5804)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5789_6_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_5789_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5816_6_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5824)) COMMA_SOURCE_FILE_AT_LINE (5824))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_inComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_inComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5826)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (5827)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (5827)) ;
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (5830)) ;
    }
    GGS_typeGalgasUndefinedMapType  var_cas_x ;
    var_cas_x = GGS_typeGalgasUndefinedMapType::_castFrom (_inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (5831)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5816_6_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_5816_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5843_6_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5852)) COMMA_SOURCE_FILE_AT_LINE (5852))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_inComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_inComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5854)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (5855)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (5855)) ;
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (5858)) ;
    }
    GGS_typeGalgasUndefinedClassType  var_cas_x ;
    var_cas_x = GGS_typeGalgasUndefinedClassType::_castFrom (_inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (5859)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5843_6_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_5843_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5876_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_action) COMMA_HERE) ;
  GGS_lstring  var_cas_nomAction ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomAction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteActionExterne::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_nomAction, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5901)) ;
  GGS_typeEntityToGenerate  var_cas_ea ;
  var_cas_ea = GGS_typeActionExterneAengendrer::constructor_new (_inLexique, var_cas_nomAction, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_ea) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5876_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_action) COMMA_HERE) ;
  GGS_lstring  var_cas_actionName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteActionExterne::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5930)) ;
  var_cas_ioExternActionMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_signature, GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (5931)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5876_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_action) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5941_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  GGS_lstring  var_cas_enumTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_enumTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_enumConstantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_enumConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeEnumMessageMap  var_cas_enumMessageMap ;
  var_cas_enumMessageMap = GGS_typeEnumMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_constantName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_constantName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        var_cas_constantMap.modifier_insertKey (_inLexique, var_cas_constantName COMMA_SOURCE_FILE_AT_LINE (5962)) ;
      switch (select_repeat_semantics_parser_64 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_65 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          GGS_lstring  var_cas_messageName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          GGS_typeEnumCstMessageStringMap  var_cas_cstMessageStringMap ;
          var_cas_cstMessageStringMap = GGS_typeEnumCstMessageStringMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                GGS_lstring  var_cas_cstName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_cstName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                GGS_lstring  var_cas_cstString ;
                _inLexique._assignFromAttribute_tokenString (var_cas_cstString) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                var_cas_cstMessageStringMap.modifier_insertKey (_inLexique, var_cas_cstName, var_cas_cstString COMMA_SOURCE_FILE_AT_LINE (5982)) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              switch (select_repeat_semantics_parser_66 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
          GGS_L_lstringList  var_cas_messageStringList ;
          var_cas_messageStringList = GGS_L_lstringList::constructor_emptyList (_inLexique COMMA_HERE) ;
          const GGS_enumConstantMap _var_234409 = var_cas_constantMap ;
          GGS_enumConstantMap::element_type * operand_234409 = _var_234409.firstObject () ;
          while ((operand_234409 != NULL)) {
            macroValidPointer (operand_234409) ;
            GGS_lstring  var_cas_name ;
            var_cas_name = GGS_lstring::constructor_new (_inLexique, operand_234409->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5990)), GGS_location (_inLexique) COMMA_HERE) ;
            GGS_lstring  var_cas_cstString ;
            if (var_cas_cstMessageStringMap._isBuilt ()) {
              var_cas_cstMessageStringMap (HERE)->method_searchKey (_inLexique, var_cas_name, var_cas_cstString COMMA_SOURCE_FILE_AT_LINE (5992)) ;
            }
            var_cas_messageStringList._addAssign_operation (var_cas_cstString) ;
            operand_234409 = operand_234409->nextObject () ;
          }
          var_cas_enumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageStringList COMMA_SOURCE_FILE_AT_LINE (5996)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_typeEntityToGenerate  var_cas_e ;
  var_cas_e = GGS_enumGalgasType::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_e) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_enum::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_ee ;
  var_cas_ee = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_ee COMMA_SOURCE_FILE_AT_LINE (6008)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5941_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  GGS_lstring  var_cas_enumTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_enumTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_enumConstantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_enumConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_constantName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_constantName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        var_cas_constantMap.modifier_insertKey (_inLexique, var_cas_constantName COMMA_SOURCE_FILE_AT_LINE (6028)) ;
      switch (select_repeat_semantics_parser_64 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeEnumMessageMap  var_cas_exEnumMessageMap ;
  var_cas_exEnumMessageMap = GGS_typeEnumMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumMessageMap  var_cas_enumMessageMap ;
  var_cas_enumMessageMap = GGS_enumMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_65 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          GGS_lstring  var_cas_messageName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_enumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (6043)) ;
          GGS_L_lstringList  var_cas_messageStringList ;
          var_cas_messageStringList = GGS_L_lstringList::constructor_emptyList (_inLexique COMMA_HERE) ;
          var_cas_exEnumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageStringList COMMA_SOURCE_FILE_AT_LINE (6045)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              switch (select_repeat_semantics_parser_66 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_enum::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_exEnumMessageMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (6062)) ;
  GGS_TypeModel  var_cas_type ;
  var_cas_type = GGS_EnumModel::constructor_new (_inLexique, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (6064)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5941_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_64 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_65 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              switch (select_repeat_semantics_parser_66 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

