//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semantics_parser.cpp'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    november 26th, 2008, at 19h51'29"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "semantics_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semantics_parser.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "galgasTemplateGrammar.h"
#include "galgas_LL1_grammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_galgas_component_semantics_parser_558_23_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &var_cas_ioLexiqueMapForUse,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  GGS_lstring  var_cas_componentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_string var_cas_basename ;
  var_cas_basename = GGS_string::constructor_stringWithSourceFilePath (_inLexique COMMA_HERE).reader_lastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (571)).reader_stringByDeletingPathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (571)) ;
  if (((var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (572)))._operator_isNotEqual (var_cas_basename)).isBuiltAndTrue ()) {
    var_cas_componentName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, ((((GGS_string (true, "GALGAS 1.7.5 and later checks "
      "the component name ('"))._operator_concat (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (574))))._operator_concat (GGS_string (true, "') against the source file base name ('")))._operator_concat (var_cas_basename))._operator_concat (GGS_string (true, "'): they should be identical")) COMMA_SOURCE_FILE_AT_LINE (576)) ;
  }
  GGS_string var_cas_defLexique ;
  var_cas_defLexique = GGS_string (true, "") ;
  GGS_ModelMap  var_cas_modelMap ;
  var_cas_modelMap = GGS_ModelMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_ActionMap  var_cas_actionMap ;
  var_cas_actionMap = GGS_ActionMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_inclusionsForHeaderFile ;
  GGS_stringset  var_cas_inclusionsForImplementationFile ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentEntitiesMap ;
  GGS_stringset  var_cas_classNamesSet ;
  var_cas_classNamesSet = GGS_stringset ::constructor_emptySet () ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  GGS_stringset  var_cas_includedGrammarComponents ;
  nt_import_headers_semantics_and_grammars_ (_inLexique, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_includedGrammarComponents, var_cas_ioLexiqueMapForUse, var_cas_ioSemanticsComponentsMap, var_cas_ioGrammarComponentsMap, var_cas_ioOptionsComponentsMap, var_cas_inclusionsForImplementationFile, var_cas_inclusionsForHeaderFile, var_cas_optionsComponentsMapForUse, var_cas_modelMap, var_cas_actionMap, var_cas_componentEntitiesMap, var_cas_tableEnAvant, var_cas_ioSemanticContext) ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_23599 = _inLexique.parsingContext () ;
    GGS_typeTableRoutinesAimplementer  var_cas_UNUSED_tableRoutinesAimplementer ;
    var_cas_UNUSED_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer ::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_UNUSED_tableNomRoutinesDeclarees ;
    var_cas_UNUSED_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees ::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableEnAvant  var_cas_UNUSED_tableEnAvant ;
    var_cas_UNUSED_tableEnAvant = var_cas_tableEnAvant ;
    GGS_M_semanticsEntitiesForUse  var_cas_UNUSED_componentSemanticsEntitiesMap ;
    var_cas_UNUSED_componentSemanticsEntitiesMap = var_cas_componentEntitiesMap ;
    GGS_EXsemanticContext var_cas_UNUSED_semanticContext ;
    var_cas_UNUSED_semanticContext = GGS_EXsemanticContext::constructor_new (GGS_M_filewrappers ::constructor_emptyMap (_inLexique COMMA_HERE), GGS_stringset ::constructor_emptySet (), GGS_EXcategoryMethodMap ::constructor_emptyMap (_inLexique COMMA_HERE)) ;
    { bool syntaxRepeat_0 = true ;
      while (syntaxRepeat_0) {
        switch (select_repeat_semantics_parser_0 (_inLexique)) {
          case 2 : {
            nt_semantics_declaration_importSemantics (_inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_UNUSED_componentSemanticsEntitiesMap, var_cas_UNUSED_tableNomRoutinesDeclarees, var_cas_UNUSED_tableEnAvant, var_cas_UNUSED_tableRoutinesAimplementer, var_cas_UNUSED_semanticContext) ;
            } break ;
          default :
            syntaxRepeat_0 = false ;
            break ;
        }
      }
    }
  //--- Branch of parse/rewind instruction
    _inLexique.setParsingContext (context_23599) ;
    GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer ;
    var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer ::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees ;
    var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees ::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
    var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList ::constructor_emptyList () ;
    { bool syntaxRepeat_0 = true ;
      while (syntaxRepeat_0) {
        switch (select_repeat_semantics_parser_0 (_inLexique)) {
          case 2 : {
            nt_semantics_declaration_ (_inLexique, var_cas_componentEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_optionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext) ;
            } break ;
          default :
            syntaxRepeat_0 = false ;
            break ;
        }
      }
    }
  //--- End of parse/rewind instruction
  if (((var_cas_ioSemanticsComponentsMap.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (655)) COMMA_SOURCE_FILE_AT_LINE (655)))._operator_not ()).isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap ;
    var_cas_optionsComponentsMap = GGS_M_optionComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
    var_cas_ioSemanticsComponentsMap.modifier_insertKey (_inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentEntitiesMap COMMA_SOURCE_FILE_AT_LINE (657)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  {
    GGS_typeTableNomRoutinesDeclarees::cEnumerator enumerator_24185 (var_cas_tableNomRoutinesDeclarees, true) ;
    const GGS_typeTableNomRoutinesDeclarees::cElement * operand_24185 = NULL ;
    while (((operand_24185 = enumerator_24185.nextObject ()))) {
      macroValidPointer (operand_24185) ;
      if (((var_cas_tableRoutinesAimplementer.reader_hasKey (_inLexique, operand_24185->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (674)) COMMA_SOURCE_FILE_AT_LINE (674)))._operator_not ()).isBuiltAndTrue ()) {
        operand_24185->mKey.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the routine '"))._operator_concat (operand_24185->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (675))))._operator_concat (GGS_string (true, "' is not implemented in the component")) COMMA_SOURCE_FILE_AT_LINE (677)) ;
      }
    }
  }
  {
    GGS_typeTableEnAvant::cEnumerator enumerator_24522 (var_cas_tableEnAvant, true) ;
    const GGS_typeTableEnAvant::cElement * operand_24522 = NULL ;
    while (((operand_24522 = enumerator_24522.nextObject ()))) {
      macroValidPointer (operand_24522) ;
      if (((var_cas_componentEntitiesMap.reader_hasKey (_inLexique, operand_24522->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (681)) COMMA_SOURCE_FILE_AT_LINE (681)))._operator_not ()).isBuiltAndTrue ()) {
        operand_24522->mKey.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '@"))._operator_concat (operand_24522->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (682))))._operator_concat (GGS_string (true, "' forward type is not implemented in the component")) COMMA_SOURCE_FILE_AT_LINE (684)) ;
      }
    }
  }
  if (var_cas_componentName._isBuilt () &&
      var_cas_inclusionsForHeaderFile._isBuilt () &&
      var_cas_defLexique._isBuilt () &&
      var_cas_listeEntitesAengendrer._isBuilt () &&
      var_cas_inclusionsForImplementationFile._isBuilt ()) {
    ::routine_generateSemanticsComponent (_inLexique,  var_cas_componentName,  var_cas_inclusionsForHeaderFile,  var_cas_defLexique,  var_cas_listeEntitesAengendrer,  var_cas_inclusionsForImplementationFile COMMA_SOURCE_FILE_AT_LINE (687)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_galgas_component_semantics_parser_558_23_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_galgas_component_semantics_parser_558_23_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_galgas_component_semantics_parser_558_23_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_galgas_component_semantics_parser_558_23_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext,
                                GGS_stringset  &var_cas_ioImportedSemanticsComponentNameSet) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  GGS_lstring  var_cas_componentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  ::routine_enterBuiltinTypes (_inLexique,  var_cas_componentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (719)) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  var_cas_includedMetamodelComponents = GGS_stringset ::constructor_emptySet () ;
  GGS_ModelMap  var_cas_modelMap ;
  GGS_ActionMap  var_cas_actionMap ;
  nt_import_headers_semantics_and_grammars_importSemantics (_inLexique, var_cas_ioSemanticsComponentsMap, var_cas_includedSemanticsComponents, var_cas_includedOptionComponents, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_ioSemanticContext, var_cas_ioImportedSemanticsComponentNameSet) ;
  GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer ;
  var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees ;
  var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_importSemantics (_inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  if (((var_cas_ioSemanticsComponentsMap.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (752)) COMMA_SOURCE_FILE_AT_LINE (752)))._operator_not ()).isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap ;
    var_cas_optionsComponentsMap = GGS_M_optionComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
    var_cas_ioSemanticsComponentsMap.modifier_insertKey (_inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (754)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_galgas_component_semantics_parser_558_23_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "parse_semantics_component_for_importing"     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_parse_semantics_component_for_importing (C_Compiler & _inLexique,
                                const GGS_lstring   var_cas_inFileName,
                                GGS_M_semanticsComponents  & var_cas_ioSemanticsMapForUse,
                                GGS_EXsemanticContext & var_cas_ioSemanticContext,
                                GGS_stringset  & var_cas_ioImportedSemanticsComponentNameSet COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_parse_semantics_component_for_importing at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  galgas_LL1_grammar::_performSourceFileParsing_importSemantics (_inLexique,
                                  NULL,
                                  var_cas_inFileName,
                                  var_cas_ioSemanticsMapForUse,
                                  var_cas_ioSemanticContext,
                                  var_cas_ioImportedSemanticsComponentNameSet
                                  COMMA_SOURCE_FILE_AT_LINE (826)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_parse_semantics_component_for_importing\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'import_headers_semantics_and_grammars'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_839_44_ (galgas_scanner & _inLexique,
                                GGS_stringset  &var_cas_outImportedSemanticsComponentNameSet,
                                GGS_stringset  &var_cas_outIncludedMetamodelComponents,
                                GGS_stringset  &var_cas_outImportedOptionComponents,
                                GGS_stringset  &var_cas_outImportedGrammarComponents,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_stringset  &var_cas_outInclusionsForImplementationFile,
                                GGS_stringset  &var_cas_outInclusionsForHeaderFile,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  var_cas_outActionMap = GGS_ActionMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outInclusionsForHeaderFile = GGS_stringset ::constructor_emptySet () ;
  var_cas_outInclusionsForImplementationFile = GGS_stringset ::constructor_emptySet () ;
  var_cas_outImportedSemanticsComponentNameSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_outIncludedMetamodelComponents = GGS_stringset ::constructor_emptySet () ;
  var_cas_outImportedOptionComponents = GGS_stringset ::constructor_emptySet () ;
  var_cas_outImportedGrammarComponents = GGS_stringset ::constructor_emptySet () ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_ioOptionsComponentsMapForUse = GGS_M_optionComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap = GGS_ModelMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "char"), GGS_location (_inLexique) COMMA_HERE), GGS_CharModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (870)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "string"), GGS_location (_inLexique) COMMA_HERE), GGS_StringModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (872)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "uint"), GGS_location (_inLexique) COMMA_HERE), GGS_UIntModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (874)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "sint"), GGS_location (_inLexique) COMMA_HERE), GGS_SIntModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (876)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "uint64"), GGS_location (_inLexique) COMMA_HERE), GGS_UInt64Model ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (878)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "sint64"), GGS_location (_inLexique) COMMA_HERE), GGS_SInt64Model ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (880)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "bool"), GGS_location (_inLexique) COMMA_HERE), GGS_BoolModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (882)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "double"), GGS_location (_inLexique) COMMA_HERE), GGS_DoubleModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (884)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "lchar"), GGS_location (_inLexique) COMMA_HERE), GGS_LCharModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (886)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "lstring"), GGS_location (_inLexique) COMMA_HERE), GGS_LStringModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (888)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "luint"), GGS_location (_inLexique) COMMA_HERE), GGS_LUIntModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (890)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "lsint"), GGS_location (_inLexique) COMMA_HERE), GGS_LSIntModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (892)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "luint64"), GGS_location (_inLexique) COMMA_HERE), GGS_LUInt64Model ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (894)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "lsint64"), GGS_location (_inLexique) COMMA_HERE), GGS_LSInt64Model ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (896)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "lbool"), GGS_location (_inLexique) COMMA_HERE), GGS_LBoolModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (898)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "ldouble"), GGS_location (_inLexique) COMMA_HERE), GGS_LDoubleModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (900)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "location"), GGS_location (_inLexique) COMMA_HERE), GGS_LocationModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (902)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "stringset"), GGS_location (_inLexique) COMMA_HERE), GGS_StringsetModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (904)) ;
  ::routine_enterBuiltinTypes (_inLexique,  var_cas_ioComponentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (906)) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents ;
  var_cas_alreadyImportedSemanticsComponents = GGS_stringset ::constructor_emptySet () ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents ;
  var_cas_alreadyImportedMetamodelComponents = GGS_stringset ::constructor_emptySet () ;
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              GGS_lstring  var_cas_optionComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_optionComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (919))) ;
              var_cas_outImportedOptionComponents._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (920))) ;
              GGS_M_cli_options  var_cas_boolOptionsMap ;
              GGS_M_cli_options  var_cas_uintOptionsMap ;
              GGS_M_cli_options  var_cas_stringOptionsMap ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              GGS_lstring  var_cas_fileName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_fileName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              GGS_M_optionComponents  var_cas_importedOptionComponentsMap ;
              var_cas_importedOptionComponentsMap = GGS_M_optionComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              nt_parse_option_component_for_importing_ (_inLexique, var_cas_fileName, var_cas_importedOptionComponentsMap) ;
              const GGS_M_optionComponents  _temp_33060 = var_cas_importedOptionComponentsMap ;
              if (_temp_33060._isBuilt ()) {
                _temp_33060 (HERE)->method_searchKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap COMMA_SOURCE_FILE_AT_LINE (932)) ;
              }
              var_cas_ioOptionsComponentsMapForUse.modifier_insertKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap COMMA_SOURCE_FILE_AT_LINE (933)) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              GGS_lstring  var_cas_grammarComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_grammarComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForImplementationFile._addAssign_operation ((var_cas_grammarComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (938)))._operator_concat (GGS_string (true, ".h"))) ;
              var_cas_outImportedGrammarComponents._addAssign_operation (var_cas_grammarComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (939))) ;
              GGS_M_grammarComponents  var_cas_grammarComponentsMap ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              GGS_lstring  var_cas_sourceFile ;
              _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              var_cas_grammarComponentsMap = GGS_M_grammarComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              nt_parse_grammar_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_grammarComponentsMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioSemanticContext) ;
              GGS_M_nonterminalSymbolAltsForGrammar  var_cas_nonterminalSymbolParametersMap ;
              GGS_lstring  var_cas_lexiqueClassName ;
              GGS_M_optionComponents  automatic_var_0 ;
              const GGS_M_grammarComponents  _temp_34030 = var_cas_grammarComponentsMap ;
              if (_temp_34030._isBuilt ()) {
                _temp_34030 (HERE)->method_searchKey (_inLexique, var_cas_grammarComponentName, var_cas_nonterminalSymbolParametersMap, var_cas_lexiqueClassName, automatic_var_0 COMMA_SOURCE_FILE_AT_LINE (953)) ;
              }
              GGS_M_nonterminalSymbolAlts  var_cas_grammarAltMap ;
              var_cas_grammarAltMap = GGS_M_nonterminalSymbolAlts ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              {
                GGS_M_nonterminalSymbolAltsForGrammar::cEnumerator enumerator_34211 (var_cas_nonterminalSymbolParametersMap, true) ;
                const GGS_M_nonterminalSymbolAltsForGrammar::cElement * operand_34211 = NULL ;
                while (((operand_34211 = enumerator_34211.nextObject ()))) {
                  macroValidPointer (operand_34211) ;
                  GGS_L_EXsignature  var_cas_formalParametersList ;
                  var_cas_formalParametersList = GGS_L_EXsignature ::constructor_emptyList () ;
                  {
                    GGS_L_signature::cEnumerator enumerator_34340 (operand_34211->mInfo.mFormalParametersList, true) ;
                    const GGS_L_signature::cElement * operand_34340 = NULL ;
                    while (((operand_34340 = enumerator_34340.nextObject ()))) {
                      macroValidPointer (operand_34340) ;
                      GGS_AC_semanticsEntity  var_cas_e ;
                      const GGS_M_semanticsEntitiesForUse  _temp_34491 = var_cas_ioComponentSemanticsEntitiesMap ;
                      if (_temp_34491._isBuilt ()) {
                        _temp_34491 (HERE)->method_searchKey (_inLexique, operand_34340->mGalgasTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (959)) ;
                      }
                      GGS_AC_galgasType  var_cas_type ;
                      var_cas_type = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_e.getPtr (), true, operand_34340->mGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (960)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (960)) ;
                      var_cas_formalParametersList._addAssign_operation (var_cas_type, operand_34340->mFormalArgumentPassingMode) ;
                    }
                  }
                  var_cas_grammarAltMap.modifier_insertKey (_inLexique, operand_34211->mKey, var_cas_formalParametersList COMMA_SOURCE_FILE_AT_LINE (963)) ;
                }
              }
              GGS_AC_semanticsEntity  var_cas_e ;
              var_cas_e = GGS_C_grammarForSemantics ::constructor_new (_inLexique, var_cas_grammarAltMap, var_cas_lexiqueClassName COMMA_HERE) ;
              var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_grammarComponentName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (966)) ;
              GGS_lstring  var_cas_path ;
              var_cas_path = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_extension ;
              var_cas_extension = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "h"), GGS_location (_inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_fileNameWithPath ;
              if (var_cas_path._isBuilt () &&
                  var_cas_grammarComponentName._isBuilt () &&
                  var_cas_extension._isBuilt ()) {
                ::routine_buildFileNameWithPath (_inLexique,  var_cas_fileNameWithPath,  var_cas_path,  var_cas_grammarComponentName,  var_cas_extension COMMA_SOURCE_FILE_AT_LINE (970)) ;
              }
              var_cas_outInclusionsForImplementationFile._addAssign_operation (var_cas_fileNameWithPath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (971))) ;
              {
                GGS_M_grammarComponents::cEnumerator enumerator_35279 (var_cas_grammarComponentsMap, true) ;
                const GGS_M_grammarComponents::cElement * operand_35279 = NULL ;
                while (((operand_35279 = enumerator_35279.nextObject ()))) {
                  macroValidPointer (operand_35279) ;
                  if (((var_cas_ioGrammarComponentsMap.reader_hasKey (_inLexique, operand_35279->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (976)) COMMA_SOURCE_FILE_AT_LINE (976)))._operator_not ()).isBuiltAndTrue ()) {
                    var_cas_ioGrammarComponentsMap.modifier_insertKey (_inLexique, operand_35279->mKey, operand_35279->mInfo.mNonterminalSymbolParametersMap, operand_35279->mInfo.mLexiqueName, operand_35279->mInfo.mOptionsMap COMMA_SOURCE_FILE_AT_LINE (977)) ;
                  }
                }
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              GGS_lstring  var_cas_componentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (989))) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              GGS_lstring  var_cas_sourceFile ;
              _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              if (((var_cas_outImportedSemanticsComponentNameSet.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (993)) COMMA_SOURCE_FILE_AT_LINE (993)))._operator_not ()).isBuiltAndTrue ()) {
                var_cas_outImportedSemanticsComponentNameSet._addAssign_operation (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (994))) ;
                ::routine_parse_semantics_component_for_importing (_inLexique,  var_cas_sourceFile,  var_cas_ioSemanticsComponentsMap,  var_cas_ioSemanticContext,  var_cas_outImportedSemanticsComponentNameSet COMMA_SOURCE_FILE_AT_LINE (996)) ;
                GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
                GGS_M_optionComponents  var_cas_importedOptionsComponentsMap ;
                GGS_ModelMap  automatic_var_1 ;
                GGS_ActionMap  automatic_var_2 ;
                GGS_stringset  automatic_var_3 ;
                GGS_stringset  automatic_var_4 ;
                GGS_stringset  automatic_var_5 ;
                const GGS_M_semanticsComponents  _temp_36609 = var_cas_ioSemanticsComponentsMap ;
                if (_temp_36609._isBuilt ()) {
                  _temp_36609 (HERE)->method_searchKey (_inLexique, var_cas_componentName, automatic_var_1, automatic_var_2, automatic_var_3, automatic_var_4, automatic_var_5, var_cas_importedOptionsComponentsMap, var_cas_importedEntities COMMA_SOURCE_FILE_AT_LINE (1004)) ;
                }
                {
                  GGS_M_semanticsEntitiesForUse::cEnumerator enumerator_36712 (var_cas_importedEntities, true) ;
                  const GGS_M_semanticsEntitiesForUse::cElement * operand_36712 = NULL ;
                  while (((operand_36712 = enumerator_36712.nextObject ()))) {
                    macroValidPointer (operand_36712) ;
                    if (((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, operand_36712->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1006)) COMMA_SOURCE_FILE_AT_LINE (1006)))._operator_not ()).isBuiltAndTrue ()) {
                      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, operand_36712->mKey, operand_36712->mInfo.aDefEntite COMMA_SOURCE_FILE_AT_LINE (1007)) ;
                    }
                  }
                }
                {
                  GGS_M_optionComponents::cEnumerator enumerator_37152 (var_cas_importedOptionsComponentsMap, true) ;
                  const GGS_M_optionComponents::cElement * operand_37152 = NULL ;
                  while (((operand_37152 = enumerator_37152.nextObject ()))) {
                    macroValidPointer (operand_37152) ;
                    if (((var_cas_ioOptionsComponentsMapForUse.reader_hasKey (_inLexique, operand_37152->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1013)) COMMA_SOURCE_FILE_AT_LINE (1013)))._operator_not ()).isBuiltAndTrue ()) {
                      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (operand_37152->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1014))))._operator_concat (GGS_string (true, "' option component must have been imported")) COMMA_SOURCE_FILE_AT_LINE (1015)) ;
                    }
                  }
                }
              }
              ::routine_importSemanticsComponent (_inLexique,  var_cas_ioSemanticsComponentsMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName COMMA_SOURCE_FILE_AT_LINE (1019)) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_839_44_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_stringset  &var_cas_outIncludedSemanticsComponents,
                                GGS_stringset  &var_cas_outIncludedOptionComponents,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext,
                                GGS_stringset  &var_cas_ioImportedSemanticsComponentNameSet) {
  var_cas_outActionMap = GGS_ActionMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap = GGS_ModelMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outIncludedSemanticsComponents = GGS_stringset ::constructor_emptySet () ;
  var_cas_outIncludedOptionComponents = GGS_stringset ::constructor_emptySet () ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents ;
  var_cas_alreadyImportedSemanticsComponents = GGS_stringset ::constructor_emptySet () ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents ;
  var_cas_alreadyImportedMetamodelComponents = GGS_stringset ::constructor_emptySet () ;
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              GGS_lstring  var_cas_optionComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_optionComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outIncludedOptionComponents._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1057))) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              nt_parse_option_component_for_importing_parse (_inLexique) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              nt_parse_grammar_component_for_importing_parse (_inLexique) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              GGS_lstring  var_cas_componentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outIncludedSemanticsComponents._addAssign_operation (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1071))) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              GGS_lstring  var_cas_sourceFile ;
              _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              ::routine_parse_semantics_component_for_importing (_inLexique,  var_cas_sourceFile,  var_cas_ioSemanticsComponentsMap,  var_cas_ioSemanticContext,  var_cas_ioImportedSemanticsComponentNameSet COMMA_SOURCE_FILE_AT_LINE (1075)) ;
              GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
              GGS_ModelMap  automatic_var_6 ;
              GGS_ActionMap  automatic_var_7 ;
              GGS_stringset  automatic_var_8 ;
              GGS_stringset  automatic_var_9 ;
              GGS_stringset  automatic_var_10 ;
              GGS_M_optionComponents  automatic_var_11 ;
              const GGS_M_semanticsComponents  _temp_39535 = var_cas_ioSemanticsComponentsMap ;
              if (_temp_39535._isBuilt ()) {
                _temp_39535 (HERE)->method_searchKey (_inLexique, var_cas_componentName, automatic_var_6, automatic_var_7, automatic_var_8, automatic_var_9, automatic_var_10, automatic_var_11, var_cas_importedEntities COMMA_SOURCE_FILE_AT_LINE (1082)) ;
              }
              {
                GGS_M_semanticsEntitiesForUse::cEnumerator enumerator_39609 (var_cas_importedEntities, true) ;
                const GGS_M_semanticsEntitiesForUse::cElement * operand_39609 = NULL ;
                while (((operand_39609 = enumerator_39609.nextObject ()))) {
                  macroValidPointer (operand_39609) ;
                  if (((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, operand_39609->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1084)) COMMA_SOURCE_FILE_AT_LINE (1084)))._operator_not ()).isBuiltAndTrue ()) {
                    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, operand_39609->mKey, operand_39609->mInfo.aDefEntite COMMA_SOURCE_FILE_AT_LINE (1085)) ;
                  }
                }
              }
              ::routine_importSemanticsComponent (_inLexique,  var_cas_ioSemanticsComponentsMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName COMMA_SOURCE_FILE_AT_LINE (1089)) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_839_44_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              nt_parse_option_component_for_importing_parse (_inLexique) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              nt_parse_grammar_component_for_importing_parse (_inLexique) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1108_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_routineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_localVariableMap ;
  var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  automatic_var_12 ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_localVariableMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, automatic_var_12) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_routineName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1135)) COMMA_SOURCE_FILE_AT_LINE (1135))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  _temp_41776 = var_cas_ioComponentSemanticsEntitiesMap ;
    if (_temp_41776._isBuilt ()) {
      _temp_41776 (HERE)->method_searchKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1137)) ;
    }
    GGS_typeEntiteRoutine  var_cas_precedenteDeclaration ;
    var_cas_precedenteDeclaration = GGS_typeEntiteRoutine::_castFrom (_inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1138)) ;
    ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_precedenteDeclaration.reader_aListeArgumentsFormels (_inLexique COMMA_SOURCE_FILE_AT_LINE (1140)),  var_cas_listeDeTypes,  GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (1139)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1145)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteRoutine ::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1147)) ;
  }
  switch (select_semantics_parser_3 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_ioInstructionList ;
      var_cas_ioInstructionList = GGS_typeInstructionList ::constructor_emptyList () ;
      nt_semantic_instructions_list_ (_inLexique, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_localVariableMap, var_cas_ioInstructionList, var_cas_ioSemanticContext) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      GGS_typeEntityToGenerate  var_cas_ea ;
      var_cas_ea = GGS_typeRoutineAengendrer ::constructor_new (_inLexique, var_cas_routineName, var_cas_listeTypeEtNomsArguments, var_cas_ioInstructionList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_ea) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1175)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1108_28_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_routineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_localVariableMap ;
  var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_localVariableMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  var_cas_ioExternActionMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_signature, GGS_bool (true, false) COMMA_SOURCE_FILE_AT_LINE (1204)) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_routineName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1206)) COMMA_SOURCE_FILE_AT_LINE (1206))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  _temp_44374 = var_cas_ioComponentSemanticsEntitiesMap ;
    if (_temp_44374._isBuilt ()) {
      _temp_44374 (HERE)->method_searchKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1208)) ;
    }
    GGS_typeEntiteRoutine  var_cas_precedenteDeclaration ;
    var_cas_precedenteDeclaration = GGS_typeEntiteRoutine::_castFrom (_inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1209)) ;
    ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_precedenteDeclaration.reader_aListeArgumentsFormels (_inLexique COMMA_SOURCE_FILE_AT_LINE (1211)),  var_cas_listeDeTypes,  GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (1210)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1216)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteRoutine ::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1218)) ;
  }
  switch (select_semantics_parser_3 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      nt_semantic_instructions_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1229)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1108_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  switch (select_semantics_parser_3 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      nt_semantic_instructions_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1241_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_function) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_routineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_localVariableMap ;
  var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  automatic_var_13 ;
  nt_formal_input_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_localVariableMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, automatic_var_13) ;
  GGS_L_EXsignature  var_cas_returnedTypes ;
  var_cas_returnedTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  GGS_EXformalArgumentPassingMode var_cas_passingMode ;
  var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_returnedType ;
  GGS_lstring  var_cas_galgasTypeName ;
  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_returnedType, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
  GGS_lstring  var_cas_nomArgument ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_returnedVar ;
  var_cas_returnedVar = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1281)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1281)) COMMA_HERE) ;
  GGS_bool var_cas_modeIn ;
  var_cas_modeIn = GGS_bool (true, false) ;
  var_cas_localVariableMap.modifier_insertOutArgument (_inLexique, var_cas_nomArgument, var_cas_returnedType, var_cas_returnedVar COMMA_SOURCE_FILE_AT_LINE (1283)) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_routineName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1286)) COMMA_SOURCE_FILE_AT_LINE (1286))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  _temp_47528 = var_cas_ioComponentSemanticsEntitiesMap ;
    if (_temp_47528._isBuilt ()) {
      _temp_47528 (HERE)->method_searchKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1288)) ;
    }
    GGS_typeEntiteFonction  var_cas_precedenteDeclaration ;
    var_cas_precedenteDeclaration = GGS_typeEntiteFonction::_castFrom (_inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1289)) ;
    ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_precedenteDeclaration.reader_aListeArgumentsFormels (_inLexique COMMA_SOURCE_FILE_AT_LINE (1291)),  var_cas_listeDeTypes,  GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (1290)) ;
    ::routine_checkAssignmentTypesCompatibility (_inLexique,  var_cas_precedenteDeclaration.reader_mReturnedType (_inLexique COMMA_SOURCE_FILE_AT_LINE (1296)),  var_cas_returnedType,  GGS_location (_inLexique),  GGS_bool (true, false) COMMA_SOURCE_FILE_AT_LINE (1295)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1302)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteFonction ::constructor_new (_inLexique, var_cas_listeDeTypes, var_cas_returnedType COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1304)) ;
  }
  switch (select_semantics_parser_4 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_ioInstructionList ;
      var_cas_ioInstructionList = GGS_typeInstructionList ::constructor_emptyList () ;
      nt_semantic_instructions_list_ (_inLexique, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_localVariableMap, var_cas_ioInstructionList, var_cas_ioSemanticContext) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_function) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      GGS_typeEntityToGenerate  var_cas_ea ;
      var_cas_ea = GGS_typeFonctionAengendrer ::constructor_new (_inLexique, var_cas_routineName, var_cas_listeTypeEtNomsArguments, var_cas_returnedType, var_cas_returnedVar, var_cas_ioInstructionList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_ea) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1334)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1241_28_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_function) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_routineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_localVariableMap ;
  var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  nt_formal_input_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_localVariableMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  GGS_L_EXsignature  var_cas_returnedTypes ;
  var_cas_returnedTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  GGS_EXformalArgumentPassingMode var_cas_passingMode ;
  var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_returnedType ;
  GGS_lstring  var_cas_galgasTypeName ;
  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_returnedType, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
  GGS_lstring  var_cas_nomArgument ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_returnedVar ;
  var_cas_returnedVar = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1376)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1376)) COMMA_HERE) ;
  var_cas_localVariableMap.modifier_insertOutArgument (_inLexique, var_cas_nomArgument, var_cas_returnedType, var_cas_returnedVar COMMA_SOURCE_FILE_AT_LINE (1377)) ;
  var_cas_ioExternActionMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_signature, GGS_bool (true, false) COMMA_SOURCE_FILE_AT_LINE (1379)) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_routineName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1381)) COMMA_SOURCE_FILE_AT_LINE (1381))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  _temp_50971 = var_cas_ioComponentSemanticsEntitiesMap ;
    if (_temp_50971._isBuilt ()) {
      _temp_50971 (HERE)->method_searchKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1383)) ;
    }
    GGS_typeEntiteFonction  var_cas_precedenteDeclaration ;
    var_cas_precedenteDeclaration = GGS_typeEntiteFonction::_castFrom (_inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1384)) ;
    ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_precedenteDeclaration.reader_aListeArgumentsFormels (_inLexique COMMA_SOURCE_FILE_AT_LINE (1386)),  var_cas_listeDeTypes,  GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (1385)) ;
    ::routine_checkAssignmentTypesCompatibility (_inLexique,  var_cas_precedenteDeclaration.reader_mReturnedType (_inLexique COMMA_SOURCE_FILE_AT_LINE (1391)),  var_cas_returnedType,  GGS_location (_inLexique),  GGS_bool (true, false) COMMA_SOURCE_FILE_AT_LINE (1390)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1397)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteFonction ::constructor_new (_inLexique, var_cas_listeDeTypes, var_cas_returnedType COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1399)) ;
  }
  switch (select_semantics_parser_4 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      nt_semantic_instructions_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1410)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_function) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1241_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_function) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_input_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  nt_formal_argument_type_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_4 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      nt_semantic_instructions_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_function) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1420_19_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName,
                                GGS_string &var_cas_outSuperClassMessage,
                                GGS_bool &var_cas_outHasGeneratedInSeparateFileSetting) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClassName = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_outSuperClassMessage = GGS_string (true, "") ;
  var_cas_outHasGeneratedInSeparateFileSetting = GGS_bool (true, false) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1420_19_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_bool &var_cas_outHasGeneratedInSeparateFileSetting) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outMessageMap = GGS_classMessageMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClasses = GGS_stringset ::constructor_emptySet () ;
  var_cas_outAttributeList = GGS_typeListModel ::constructor_emptyList () ;
  var_cas_outHasGeneratedInSeparateFileSetting = GGS_bool (true, false) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1420_19_parse (galgas_scanner & /* _inLexique */) {
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1466_19_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName,
                                GGS_string &var_cas_outSuperClassMessage,
                                GGS_bool &var_cas_outHasGeneratedInSeparateFileSetting) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outSuperClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  _temp_54947 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (_temp_54947._isBuilt ()) {
    _temp_54947 (HERE)->method_searchKey (_inLexique, var_cas_outSuperClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1482)) ;
  }
  GGS_AC_galgasType  var_cas_typeUtilisateur ;
  var_cas_typeUtilisateur = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1484)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (1484)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_typeUtilisateur.getPtr (), true, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1485)) ;
  var_cas_tableDesMethodes = var_cas_classType.reader_mMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1486)) ;
  var_cas_listeTousAttributsSemantiques = var_cas_classType.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1487)) ;
  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1488)) ;
  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1489)) ;
  var_cas_tableAttributs = var_cas_classType.reader_mNonExternAttributesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1490)) ;
  var_cas_outSuperClassMessage = var_cas_classType.reader_mClassMessage (_inLexique COMMA_SOURCE_FILE_AT_LINE (1491)) ;
  var_cas_outHasGeneratedInSeparateFileSetting = var_cas_classType.reader_mHasGeneratedInSeparateFileSetting (_inLexique COMMA_SOURCE_FILE_AT_LINE (1492)) ;
  var_cas_tableDesClassesAncetres.modifier_insertKey (_inLexique, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1494)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1466_19_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_bool &var_cas_outHasGeneratedInSeparateFileSetting) {
  GGS_lstring  var_cas_superClassName ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_superClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  _temp_56547 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (_temp_56547._isBuilt ()) {
    _temp_56547 (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1514)) ;
  }
  GGS_AC_galgasType  var_cas_typeUtilisateur ;
  var_cas_typeUtilisateur = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1516)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (1516)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_typeUtilisateur.getPtr (), true, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1517)) ;
  var_cas_tableDesMethodes = var_cas_classType.reader_mMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1518)) ;
  var_cas_listeTousAttributsSemantiques = var_cas_classType.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1519)) ;
  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1520)) ;
  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1521)) ;
  var_cas_tableAttributs = var_cas_classType.reader_mNonExternAttributesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1522)) ;
  var_cas_outHasGeneratedInSeparateFileSetting = var_cas_classType.reader_mHasGeneratedInSeparateFileSetting (_inLexique COMMA_SOURCE_FILE_AT_LINE (1523)) ;
  var_cas_tableDesClassesAncetres.modifier_insertKey (_inLexique, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1526)) ;
  GGS_TypeModel  var_cas_type ;
  const GGS_ModelMap  _temp_57430 = var_cas_ioModelMap ;
  if (_temp_57430._isBuilt ()) {
    _temp_57430 (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (1529)) ;
  }
  { const GGS_TypeModel _var_57887 = var_cas_type ; // CAST instruction
    if (_var_57887.getPtr () != NULL) {
      macroValidPointer (_var_57887.getPtr ()) ;
      if (dynamic_cast <cPtr_ClassModel *> (_var_57887.getPtr ()) != NULL) {
        const GGS_ClassModel var_cas_model (_var_57887.getPtr ()) ;
        var_cas_outSuperClasses = var_cas_model.reader_mSuperClasses (_inLexique COMMA_SOURCE_FILE_AT_LINE (1532)) ;
        var_cas_outAttributeList = var_cas_model.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1533)) ;
        var_cas_outMessageMap = var_cas_model.reader_mMessageMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1534)) ;
      }else{
        var_cas_superClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '@"))._operator_concat (var_cas_superClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1536))))._operator_concat (GGS_string (true, "' type is not a class")) COMMA_SOURCE_FILE_AT_LINE (1538)) ;
        var_cas_outSuperClasses._drop () ;
        var_cas_outAttributeList._drop () ;
        var_cas_outMessageMap._drop () ;
      }
    }
  }
  var_cas_outSuperClasses._addAssign_operation (var_cas_superClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1539))) ;
  var_cas_outMessageMap = GGS_classMessageMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClasses = GGS_stringset ::constructor_emptySet () ;
  var_cas_outAttributeList = GGS_typeListModel ::constructor_emptyList () ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1466_19_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1553_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  nt_semantics_declaration_beginning_by_abstract_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1553_28_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  nt_semantics_declaration_beginning_by_abstract_importSemantics (_inLexique, var_cas_ioModelMap, var_cas_ioExternActionMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1553_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  nt_semantics_declaration_beginning_by_abstract_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_beginning_by_abstract'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_beginning_by_abstract_semantics_parser_1599_50_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  nt_class_declaration_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext, GGS_bool (true, true)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_beginning_by_abstract_semantics_parser_1599_50_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  nt_class_declaration_importSemantics (_inLexique, var_cas_ioModelMap, var_cas_ioExternActionMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext, GGS_bool (true, true)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_beginning_by_abstract_semantics_parser_1599_50_parse (galgas_scanner & _inLexique) {
  nt_class_declaration_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1641_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  nt_class_declaration_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext, GGS_bool (true, false)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1641_28_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  nt_class_declaration_importSemantics (_inLexique, var_cas_ioModelMap, var_cas_ioExternActionMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext, GGS_bool (true, false)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1641_28_parse (galgas_scanner & _inLexique) {
  nt_class_declaration_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'lazy_reader'               *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_lazy_reader_semantics_parser_1701_18_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                const GGS_typeTableMethodes  var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributsHerites,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_L_lazyAttributeList  &var_cas_ioLazyAttributeList) {
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap ;
  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  {
    GGS_typeSemanticAttributesMap::cEnumerator enumerator_64354 (var_cas_tableAttributsHerites, true) ;
    const GGS_typeSemanticAttributesMap::cElement * operand_64354 = NULL ;
    while (((operand_64354 = enumerator_64354.nextObject ()))) {
      macroValidPointer (operand_64354) ;
      GGS_typeCplusPlusName  var_cas_nomCpp ;
      var_cas_nomCpp = GGS_typeDirectName ::constructor_new (_inLexique, operand_64354->mKey.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1720)), operand_64354->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1720)) COMMA_HERE) ;
      var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_64354->mKey, operand_64354->mInfo.mAttributType, var_cas_nomCpp COMMA_SOURCE_FILE_AT_LINE (1721)) ;
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_lazy) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_computedAttributeTypeAndNameList ;
  var_cas_computedAttributeTypeAndNameList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  { bool syntaxRepeat_5 = true ;
    while (syntaxRepeat_5) {
        GGS_lstring  var_cas_attributeTypeName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_attributeTypeName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        GGS_lstring  var_cas_attributeName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_attributeName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        const GGS_M_semanticsEntitiesForUse  _temp_64863 = var_cas_ioComponentSemanticsEntitiesMap ;
        if (_temp_64863._isBuilt ()) {
          _temp_64863 (HERE)->method_searchKey (_inLexique, var_cas_attributeTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1730)) ;
        }
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_attributeTypeName COMMA_SOURCE_FILE_AT_LINE (1731)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (1731)) ;
        GGS_typeCplusPlusName  var_cas_nomCpp ;
        var_cas_nomCpp = GGS_typeDirectName ::constructor_new (_inLexique, var_cas_attributeName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1732)), var_cas_attributeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1732)) COMMA_HERE) ;
        var_cas_methodLocalVariablesMap.modifier_insertOutArgument (_inLexique, var_cas_attributeName, var_cas_t, var_cas_nomCpp COMMA_SOURCE_FILE_AT_LINE (1733)) ;
        var_cas_computedAttributeTypeAndNameList._addAssign_operation (var_cas_t, var_cas_attributeName) ;
      switch (select_repeat_semantics_parser_5 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_5 = false ;
          break ;
      }
    }
  }
  GGS_L_lazyAttributeList  var_cas_lazyAttributeListForSelfAndSuper ;
  var_cas_lazyAttributeListForSelfAndSuper = var_cas_ioLazyAttributeList ;
  var_cas_lazyAttributeListForSelfAndSuper._addAssign_operation (GGS_location (_inLexique), var_cas_computedAttributeTypeAndNameList, GGS_typeInstructionList ::constructor_emptyList ()) ;
  GGS_AC_galgasType  var_cas_typeDefinition ;
  var_cas_typeDefinition = GGS_typeGalgasClassType ::constructor_new (_inLexique, var_cas_inCurrentClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage, GGS_bool (true, false), var_cas_lazyAttributeListForSelfAndSuper COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "self"), GGS_location (_inLexique) COMMA_HERE), var_cas_typeDefinition, GGS_typeCppThisName ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (1756)) ;
  var_cas_typeDefinition = GGS_typeGalgasClassType ::constructor_new (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage, GGS_bool (true, false), var_cas_lazyAttributeListForSelfAndSuper COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "super"), GGS_location (_inLexique) COMMA_HERE), var_cas_typeDefinition, GGS_typeCppInheritedName ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (1770)) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  var_cas_componentSemanticsEntitiesMap = var_cas_ioComponentSemanticsEntitiesMap ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_typeDefinition COMMA_HERE) ;
  var_cas_componentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_inCurrentClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1774)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  var_cas_instructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_tableEnAvant, var_cas_componentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_instructionsList, var_cas_inSemanticContext) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_lazy) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioLazyAttributeList._addAssign_operation (GGS_location (_inLexique), var_cas_computedAttributeTypeAndNameList, var_cas_instructionsList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_lazy_reader_semantics_parser_1701_18_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_lazy) COMMA_HERE) ;
  { bool syntaxRepeat_5 = true ;
    while (syntaxRepeat_5) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_5 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_5 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_lazy) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'class_declaration'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_class_declaration_semantics_parser_1800_24_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext,
                                const GGS_bool var_cas_inIsAbstract) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_abstractClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_abstractClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_6 (_inLexique)) {
    case 1 : {
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1814)) COMMA_SOURCE_FILE_AT_LINE (1814)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1815)) COMMA_SOURCE_FILE_AT_LINE (1815))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType ::constructor_new (_inLexique, var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (1817)) ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_string var_cas_superClassMessage ;
      GGS_bool var_cas_hasGeneratedInSeparateFileSetting ;
      GGS_lstring  automatic_var_14 ;
      nt_parent_class_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap, automatic_var_14, var_cas_superClassMessage, var_cas_hasGeneratedInSeparateFileSetting) ;
      switch (select_semantics_parser_7 (_inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
          GGS_lstring  var_cas_optionString ;
          _inLexique._assignFromAttribute_tokenString (var_cas_optionString) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          if (((var_cas_optionString.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1844)))._operator_isNotEqual (GGS_string (true, "generatedInSeparateFile"))).isBuiltAndTrue ()) {
            var_cas_optionString.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "only the \"generatedInSeparateFile\" pragma is allowed here") COMMA_SOURCE_FILE_AT_LINE (1846)) ;
          }
          var_cas_hasGeneratedInSeparateFileSetting = GGS_bool (true, true) ;
          if (((var_cas_tableDesClassesAncetres.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (1848)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
            var_cas_optionString.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the \"generatedInSeparateFile\" pragma is allowed only for a base class") COMMA_SOURCE_FILE_AT_LINE (1850)) ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
      var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
      var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
      var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes ;
      var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      GGS_L_lazyAttributeList  var_cas_onceReaderListToImplement ;
      var_cas_onceReaderListToImplement = GGS_L_lazyAttributeList ::constructor_emptyList () ;
      GGS_string var_cas_classMessage ;
      var_cas_classMessage = GGS_string (true, "") ;
      { bool syntaxRepeat_8 = true ;
        while (syntaxRepeat_8) {
          switch (select_repeat_semantics_parser_8 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              switch (select_semantics_parser_9 (_inLexique)) {
                case 1 : {
                  GGS_lstring  var_cas_messageText ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (((var_cas_classMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1878)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the class message is already defined") COMMA_SOURCE_FILE_AT_LINE (1880)) ;
                  }else if (((var_cas_messageText.ggs_string ().reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1880)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the class message string should not be empty") COMMA_SOURCE_FILE_AT_LINE (1882)) ;
                  }else{
                    var_cas_classMessage = var_cas_messageText.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1883)) ;
                  }
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_messageName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_lstring  var_cas_messageText ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (((var_cas_inheritedMessageMap.reader_hasKey (_inLexique, var_cas_messageName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1892)) COMMA_SOURCE_FILE_AT_LINE (1892)))._operator_not ()).isBuiltAndTrue ()) {
                    var_cas_messageMapForHeirs.modifier_insertKey (_inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (1893)) ;
                  }
                  var_cas_tableMessagesClasseConcrete.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageText COMMA_SOURCE_FILE_AT_LINE (1895)) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_method_ (_inLexique, var_cas_inIsAbstract, var_cas_listeAttributsSemantiquesCourants, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            case 5 : {
              nt_overrided_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            case 6 : {
              nt_lazy_reader_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            default :
              syntaxRepeat_8 = false ;
              break ;
          }
        }
      }
      if ((((var_cas_superClassMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1963)))._operator_strictSup (GGS_uint (true, 0U)))._operator_and ((var_cas_classMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1963)))._operator_isEqual (GGS_uint (true, 0U)))).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this class should defined a class message, as it inherits from a class that does") COMMA_SOURCE_FILE_AT_LINE (1965)) ;
      }
      {
        GGS_typeClassInheritedMessagesMap::cEnumerator enumerator_73188 (var_cas_inheritedMessageMap, true) ;
        const GGS_typeClassInheritedMessagesMap::cElement * operand_73188 = NULL ;
        while (((operand_73188 = enumerator_73188.nextObject ()))) {
          macroValidPointer (operand_73188) ;
          if (((var_cas_tableMessagesClasseConcrete.reader_hasKey (_inLexique, operand_73188->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1968)) COMMA_SOURCE_FILE_AT_LINE (1968)))._operator_not ()).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the message '"))._operator_concat (operand_73188->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1969))))._operator_concat (GGS_string (true, "' is not defined")) COMMA_SOURCE_FILE_AT_LINE (1970)) ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasClassType ::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_classMessage, var_cas_hasGeneratedInSeparateFileSetting, var_cas_onceReaderListToImplement COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1986)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_classToImplement ::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_inIsAbstract, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesClassesAncetres, var_cas_tableMessagesClasseConcrete, var_cas_classMessage, var_cas_hasGeneratedInSeparateFileSetting, var_cas_onceReaderListToImplement COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_class_declaration_semantics_parser_1800_24_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext,
                                const GGS_bool var_cas_inIsAbstract) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_abstractClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_abstractClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_6 (_inLexique)) {
    case 1 : {
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2019)) COMMA_SOURCE_FILE_AT_LINE (2019)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2020)) COMMA_SOURCE_FILE_AT_LINE (2020))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType ::constructor_new (_inLexique, var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (2022)) ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_stringset  var_cas_superClasses ;
      GGS_typeListModel  var_cas_attributeList ;
      GGS_classMessageMap  var_cas_messageMap ;
      GGS_bool var_cas_hasGeneratedInSeparateFileSetting ;
      var_cas_hasGeneratedInSeparateFileSetting = GGS_bool (true, false) ;
      nt_parent_class_importSemantics (_inLexique, var_cas_ioModelMap, var_cas_superClasses, var_cas_attributeList, var_cas_messageMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap, var_cas_hasGeneratedInSeparateFileSetting) ;
      switch (select_semantics_parser_7 (_inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
          GGS_lstring  var_cas_optionString ;
          _inLexique._assignFromAttribute_tokenString (var_cas_optionString) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          if (((var_cas_optionString.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2053)))._operator_isNotEqual (GGS_string (true, "generatedInSeparateFile"))).isBuiltAndTrue ()) {
            var_cas_optionString.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "only the \"generatedInSeparateFile\" pragma is allowed here") COMMA_SOURCE_FILE_AT_LINE (2055)) ;
          }
          var_cas_hasGeneratedInSeparateFileSetting = GGS_bool (true, true) ;
          if (((var_cas_tableDesClassesAncetres.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (2057)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
            var_cas_optionString.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the \"generatedInSeparateFile\" pragma is allowed only for a base class") COMMA_SOURCE_FILE_AT_LINE (2059)) ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeList, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
      var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
      var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
      var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes ;
      var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
      var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList ::constructor_emptyList () ;
      GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
      var_cas_optionsComponentsMapForUse = GGS_M_optionComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_L_lazyAttributeList  var_cas_onceReaderListToImplement ;
      var_cas_onceReaderListToImplement = GGS_L_lazyAttributeList ::constructor_emptyList () ;
      GGS_string var_cas_classMessage ;
      var_cas_classMessage = GGS_string (true, "") ;
      { bool syntaxRepeat_8 = true ;
        while (syntaxRepeat_8) {
          switch (select_repeat_semantics_parser_8 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              switch (select_semantics_parser_9 (_inLexique)) {
                case 1 : {
                  GGS_lstring  var_cas_messageText ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (((var_cas_classMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2088)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the class message is already defined") COMMA_SOURCE_FILE_AT_LINE (2090)) ;
                  }else if (((var_cas_messageText.ggs_string ().reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2090)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the class message string should not be empty") COMMA_SOURCE_FILE_AT_LINE (2092)) ;
                  }else{
                    var_cas_classMessage = var_cas_messageText.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2093)) ;
                  }
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_messageName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_lstring  var_cas_messageText ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (((var_cas_inheritedMessageMap.reader_hasKey (_inLexique, var_cas_messageName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2102)) COMMA_SOURCE_FILE_AT_LINE (2102)))._operator_not ()).isBuiltAndTrue ()) {
                    var_cas_messageMapForHeirs.modifier_insertKey (_inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (2103)) ;
                  }
                  var_cas_tableMessagesClasseConcrete.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageText COMMA_SOURCE_FILE_AT_LINE (2105)) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_method_ (_inLexique, var_cas_inIsAbstract, var_cas_listeAttributsSemantiquesCourants, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            case 5 : {
              nt_overrided_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            case 6 : {
              nt_lazy_reader_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            default :
              syntaxRepeat_8 = false ;
              break ;
          }
        }
      }
      {
        GGS_typeClassInheritedMessagesMap::cEnumerator enumerator_80266 (var_cas_inheritedMessageMap, true) ;
        const GGS_typeClassInheritedMessagesMap::cElement * operand_80266 = NULL ;
        while (((operand_80266 = enumerator_80266.nextObject ()))) {
          macroValidPointer (operand_80266) ;
          if (((var_cas_tableMessagesClasseConcrete.reader_hasKey (_inLexique, operand_80266->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2173)) COMMA_SOURCE_FILE_AT_LINE (2173)))._operator_not ()).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the message '"))._operator_concat (operand_80266->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2174))))._operator_concat (GGS_string (true, "' is not defined")) COMMA_SOURCE_FILE_AT_LINE (2175)) ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasClassType ::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_classMessage, var_cas_hasGeneratedInSeparateFileSetting, var_cas_onceReaderListToImplement COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2191)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ClassModel ::constructor_new (_inLexique, GGS_bool (true, true), var_cas_superClasses, var_cas_attributeList, var_cas_messageMap COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (2194)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_class_declaration_semantics_parser_1800_24_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_6 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      nt_parent_class_parse (_inLexique) ;
      switch (select_semantics_parser_7 (_inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      { bool syntaxRepeat_8 = true ;
        while (syntaxRepeat_8) {
          switch (select_repeat_semantics_parser_8 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              switch (select_semantics_parser_9 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_method_parse (_inLexique) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_parse (_inLexique) ;
              } break ;
            case 5 : {
              nt_overrided_method_parse (_inLexique) ;
              } break ;
            case 6 : {
              nt_lazy_reader_parse (_inLexique) ;
              } break ;
            default :
              syntaxRepeat_8 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'abstract_method'             *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_abstract_method_semantics_parser_2202_22_ (galgas_scanner & _inLexique,
                                const GGS_bool var_cas_inIsAbstract,
                                GGS_typeListeAttributsSemantiques  &/* var_cas_listeAttributsSemantiquesCourants */,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  if (((var_cas_inIsAbstract)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a concrete class should not declare an abstract method") COMMA_SOURCE_FILE_AT_LINE (2215)) ;
  }
  GGS_lstring  var_cas_nomMethode ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  var_cas_tableDesMethodes.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (2230)) ;
  GGS_typeInstructionList  var_cas_listeInstructions ;
  var_cas_listeInstructions = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_tableMethodesAimplementer.modifier_insertAbstract (_inLexique, var_cas_nomMethode, var_cas_listeDeTypes, var_cas_listeTypeEtNomsArguments, var_cas_listeInstructions COMMA_SOURCE_FILE_AT_LINE (2232)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_abstract_method_semantics_parser_2202_22_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parse_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_method_semantics_parser_2238_19_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                const GGS_typeTableMethodes  var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributsHerites,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outMethodName,
                                GGS_typeInstructionList  &var_cas_outInstructionsList,
                                GGS_L_EXsignature  &var_cas_outMethodSignature,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_L_lazyAttributeList  var_cas_inLazyAttributeListToImplement) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outMethodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap ;
  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  {
    GGS_typeSemanticAttributesMap::cEnumerator enumerator_83760 (var_cas_tableAttributsHerites, true) ;
    const GGS_typeSemanticAttributesMap::cElement * operand_83760 = NULL ;
    while (((operand_83760 = enumerator_83760.nextObject ()))) {
      macroValidPointer (operand_83760) ;
      GGS_typeCplusPlusName  var_cas_nomCpp ;
      var_cas_nomCpp = GGS_typeDirectName ::constructor_new (_inLexique, operand_83760->mKey.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2263)), operand_83760->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2263)) COMMA_HERE) ;
      var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_83760->mKey, operand_83760->mInfo.mAttributType, var_cas_nomCpp COMMA_SOURCE_FILE_AT_LINE (2264)) ;
    }
  }
  GGS_AC_galgasType  var_cas_typeDefinition ;
  var_cas_typeDefinition = GGS_typeGalgasClassType ::constructor_new (_inLexique, var_cas_inCurrentClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage, GGS_bool (true, false), var_cas_inLazyAttributeListToImplement COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "self"), GGS_location (_inLexique) COMMA_HERE), var_cas_typeDefinition, GGS_typeCppThisName ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (2279)) ;
  var_cas_typeDefinition = GGS_typeGalgasClassType ::constructor_new (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage, GGS_bool (true, false), var_cas_inLazyAttributeListToImplement COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "super"), GGS_location (_inLexique) COMMA_HERE), var_cas_typeDefinition, GGS_typeCppInheritedName ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (2293)) ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_outMethodSignature, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  var_cas_componentSemanticsEntitiesMap = var_cas_ioComponentSemanticsEntitiesMap ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_typeDefinition COMMA_HERE) ;
  var_cas_componentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_inCurrentClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2308)) ;
  var_cas_outInstructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_tableEnAvant, var_cas_componentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_outInstructionsList, var_cas_inSemanticContext) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_method_semantics_parser_2238_19_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'non_abstract_method'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_non_abstract_method_semantics_parser_2323_26_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributs,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_L_lazyAttributeList  var_cas_inLazyAttributeListToImplement) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_method_ (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_inOptionsComponentsMapForUse, var_cas_inClassMessage, var_cas_inSemanticContext, var_cas_inLazyAttributeListToImplement) ;
  var_cas_tableDesMethodes.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (2365)) ;
  var_cas_tableMethodesAimplementer.modifier_insertNotAbstract (_inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList COMMA_SOURCE_FILE_AT_LINE (2366)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_non_abstract_method_semantics_parser_2323_26_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  nt_parse_method_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'overrided_method'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_overrided_method_semantics_parser_2374_23_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributs,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_L_lazyAttributeList  var_cas_inLazyAttributeListToImplement) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_method_ (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_inOptionsComponentsMapForUse, var_cas_inClassMessage, var_cas_inSemanticContext, var_cas_inLazyAttributeListToImplement) ;
  GGS_L_EXsignature  var_cas_listeDeTypesMethodeOriginale ;
  const GGS_typeTableMethodes  _temp_89323 = var_cas_tableDesMethodes ;
  if (_temp_89323._isBuilt ()) {
    _temp_89323 (HERE)->method_searchKey (_inLexique, var_cas_methodName, var_cas_listeDeTypesMethodeOriginale COMMA_SOURCE_FILE_AT_LINE (2419)) ;
  }
  ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesMethodeOriginale,  var_cas_methodSignature,  GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2420)) ;
  var_cas_tableMethodesAimplementer.modifier_insertNotAbstract (_inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList COMMA_SOURCE_FILE_AT_LINE (2426)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_overrided_method_semantics_parser_2374_23_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  nt_parse_method_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'formal_arguments_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_arguments_list_semantics_parser_2437_28_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_EXsignature  &var_cas_listeDeTypes,
                                GGS_typeVariablesMap  &var_cas_tableArgumentsMethode,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_L_signature  &var_cas_outSignatureForGrammar) {
  var_cas_listeDeTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  var_cas_listeTypeEtNomsArguments = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList () ;
  var_cas_outSignatureForGrammar = GGS_L_signature ::constructor_emptyList () ;
  { bool syntaxRepeat_10 = true ;
    while (syntaxRepeat_10) {
      switch (select_repeat_semantics_parser_10 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, true) ;
          switch (select_semantics_parser_11 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2467)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2467)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn, var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2469)) ;
              } break ;
            case 2 : {
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2472)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2472)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn, var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2474)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_12 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2493)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2493)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, true), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2495)) ;
              } break ;
            case 2 : {
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2499)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2499)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, true), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2501)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          switch (select_semantics_parser_13 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2520)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2520)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, false), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2522)) ;
              } break ;
            case 2 : {
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2525)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2525)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, false), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertInOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2527)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_typeCplusPlusName  var_cas_natureNom ;
          var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2544)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2544)) COMMA_HERE) ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, false) ;
          var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn, var_cas_nomArgument) ;
          var_cas_tableArgumentsMethode.modifier_insertOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2547)) ;
          } break ;
        default :
          syntaxRepeat_10 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_arguments_list_semantics_parser_2437_28_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_L_signature  &var_cas_outSignature) {
  var_cas_outSignature = GGS_L_signature ::constructor_emptyList () ;
  { bool syntaxRepeat_10 = true ;
    while (syntaxRepeat_10) {
      switch (select_repeat_semantics_parser_10 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_11 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_12 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_13 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_10 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_arguments_list_semantics_parser_2437_28_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_10 = true ;
    while (syntaxRepeat_10) {
      switch (select_repeat_semantics_parser_10 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_11 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_12 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_13 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_10 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'formal_input_arguments_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_input_arguments_list_semantics_parser_2604_34_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_EXsignature  &var_cas_listeDeTypes,
                                GGS_typeVariablesMap  &var_cas_tableArgumentsMethode,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_L_signature  &var_cas_outSignatureForGrammar) {
  var_cas_listeDeTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  var_cas_listeTypeEtNomsArguments = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList () ;
  var_cas_outSignatureForGrammar = GGS_L_signature ::constructor_emptyList () ;
  { bool syntaxRepeat_14 = true ;
    while (syntaxRepeat_14) {
      switch (select_repeat_semantics_parser_14 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, true) ;
          switch (select_semantics_parser_15 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2634)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2634)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn, var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2636)) ;
              } break ;
            case 2 : {
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2639)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2639)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn, var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2641)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_16 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2660)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2660)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, true), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2662)) ;
              } break ;
            case 2 : {
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2666)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2666)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, true), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2668)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_14 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_input_arguments_list_semantics_parser_2604_34_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_L_signature  &var_cas_outSignature) {
  var_cas_outSignature = GGS_L_signature ::constructor_emptyList () ;
  { bool syntaxRepeat_14 = true ;
    while (syntaxRepeat_14) {
      switch (select_repeat_semantics_parser_14 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_15 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_16 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_14 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_input_arguments_list_semantics_parser_2604_34_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_14 = true ;
    while (syntaxRepeat_14) {
      switch (select_repeat_semantics_parser_14 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_15 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_16 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_14 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'type_parsing'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_type_parsing_semantics_parser_2707_19_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_outTypeDefinition,
                                GGS_lstring  &var_cas_outTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2714)) COMMA_SOURCE_FILE_AT_LINE (2714))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  _temp_101368 = var_cas_ioComponentSemanticsEntitiesMap ;
    if (_temp_101368._isBuilt ()) {
      _temp_101368 (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2716)) ;
    }
    var_cas_outTypeDefinition = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (2717)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2717)) ;
  }else if ((var_cas_inTableEnAvant.reader_hasKey (_inLexique, var_cas_outTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2718)) COMMA_SOURCE_FILE_AT_LINE (2718))).isBuiltAndTrue ()) {
    const GGS_typeTableEnAvant  _temp_101578 = var_cas_inTableEnAvant ;
    if (_temp_101578._isBuilt ()) {
      _temp_101578 (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_outTypeDefinition COMMA_SOURCE_FILE_AT_LINE (2719)) ;
    }
  }else{
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '@"))._operator_concat (var_cas_outTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2721))))._operator_concat (GGS_string (true, "' type is not defined")) COMMA_SOURCE_FILE_AT_LINE (2722)) ;
    var_cas_outTypeDefinition._drop () ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_type_parsing_semantics_parser_2707_19_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2732_44_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_inTargetVarName,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_AC_galgasType  var_cas_targetVarType ;
  GGS_typeCplusPlusName  var_cas_targetVarCppName ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, var_cas_targetVarType, var_cas_targetVarCppName COMMA_SOURCE_FILE_AT_LINE (2755)) ;
  ::routine_checkAssignmentTypesCompatibility (_inLexique,  var_cas_targetVarType,  var_cas_sourceType,  GGS_location (_inLexique),  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (2757)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_assignmentInstruction ::constructor_new (_inLexique, var_cas_targetVarCppName, GGS_lstringlist ::constructor_emptyList (), var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2732_44_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2771_44_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_AC_galgasType  var_cas_targetType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetType, var_cas_nomCppVariableSource COMMA_SOURCE_FILE_AT_LINE (2782)) ;
  GGS_lstringlist  var_cas_structAttributeList ;
  var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_17 = true ;
    while (syntaxRepeat_17) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
        GGS_lstring  var_cas_structAttributeName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_structAttributeName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        var_cas_structAttributeList._addAssign_operation (var_cas_structAttributeName) ;
        GGS_typeGalgasStructType  var_cas_structType ;
        var_cas_structType = GGS_typeGalgasStructType::_castFrom (_inLexique, var_cas_targetType.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (2790)) ;
        GGS_bool var_cas_found ;
        var_cas_found = GGS_bool (true, false) ;
        {
          GGS_typeListeAttributsSemantiques::cEnumerator enumerator_104687 (var_cas_structType.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (2792)), true) ;
          const GGS_typeListeAttributsSemantiques::cElement * operand_104687 = NULL ;
          while (((operand_104687 = enumerator_104687.nextObject ()))
              && ((var_cas_found)._operator_not ().isBuiltAndTrue ())) {
            macroValidPointer (operand_104687) ;
            var_cas_found = (operand_104687->mAttributeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2793)))._operator_isEqual (var_cas_structAttributeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2793))) ;
            var_cas_targetType = operand_104687->mAttributType ;
          }
        }
        if (((var_cas_found)._operator_not ()).isBuiltAndTrue ()) {
          var_cas_structAttributeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '@"))._operator_concat (var_cas_structType.reader_mStructTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (2797))))._operator_concat (GGS_string (true, "' does not define a '")))._operator_concat (var_cas_structAttributeName))._operator_concat (GGS_string (true, "' attribute")) COMMA_SOURCE_FILE_AT_LINE (2798)) ;
        }
      switch (select_repeat_semantics_parser_17 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_17 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  ::routine_checkAssignmentTypesCompatibility (_inLexique,  var_cas_targetType,  var_cas_sourceType,  GGS_location (_inLexique),  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (2815)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_assignmentInstruction ::constructor_new (_inLexique, var_cas_nomCppVariableSource, var_cas_structAttributeList, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2771_44_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_17 = true ;
    while (syntaxRepeat_17) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_17 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_17 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_2827_65_ (galgas_scanner & _inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_typeCplusPlusName  var_cas_inTargetVarCppName,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_3D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_string var_cas_sourceExpressionConverter ;
  if (var_cas_inTargetType._isBuilt () && var_cas_sourceType._isBuilt ()) {
    cPtr_AC_galgasType * ptr_106900 = var_cas_inTargetType (HERE) ;
    cPtr_AC_galgasType * ptr_106913 = var_cas_sourceType (HERE) ;
    cPtr_typeGalgasListmapType * operand_106900 = dynamic_cast <cPtr_typeGalgasListmapType *> (ptr_106900) ;
    cPtr_typeGalgasListmapType * operand_106913 = dynamic_cast <cPtr_typeGalgasListmapType *> (ptr_106913) ;
    if ((operand_106900 != NULL) && (operand_106913 != NULL)) {
      if (((operand_106900->mListmapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2853)))._operator_isNotEqual (operand_106913->mListmapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2853)))).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "for '.=' operator, listmap type @"))._operator_concat (operand_106900->mListmapTypeName))._operator_concat (GGS_string (true, " of target object is not compatible with listmap type @")))._operator_concat (operand_106913->mListmapTypeName))._operator_concat (GGS_string (true, " of source expression")) COMMA_SOURCE_FILE_AT_LINE (2857)) ;
        var_cas_sourceExpressionConverter._drop () ;
      }else{
        var_cas_sourceExpressionConverter = GGS_string (true, "") ;
      }
    }else{
      cPtr_typeGalgasListType * operand_106900 = dynamic_cast <cPtr_typeGalgasListType *> (ptr_106900) ;
      cPtr_typeGalgasListType * operand_106913 = dynamic_cast <cPtr_typeGalgasListType *> (ptr_106913) ;
      if ((operand_106900 != NULL) && (operand_106913 != NULL)) {
        if (((operand_106900->mListTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2861)))._operator_isNotEqual (operand_106913->mListTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2861)))).isBuiltAndTrue ()) {
          GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "for '.=' operator, list type @"))._operator_concat (operand_106900->mListTypeName))._operator_concat (GGS_string (true, " of target object is not compatible with list type @")))._operator_concat (operand_106913->mListTypeName))._operator_concat (GGS_string (true, " of source expression")) COMMA_SOURCE_FILE_AT_LINE (2865)) ;
          var_cas_sourceExpressionConverter._drop () ;
        }else{
          var_cas_sourceExpressionConverter = GGS_string (true, "") ;
        }
      }else{
        cPtr_typeGalgasSortedListType * operand_106900 = dynamic_cast <cPtr_typeGalgasSortedListType *> (ptr_106900) ;
        cPtr_typeGalgasSortedListType * operand_106913 = dynamic_cast <cPtr_typeGalgasSortedListType *> (ptr_106913) ;
        if ((operand_106900 != NULL) && (operand_106913 != NULL)) {
          if (((operand_106900->mListTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2869)))._operator_isNotEqual (operand_106913->mListTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2869)))).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "for '.=' operator, sortedlist type @"))._operator_concat (operand_106900->mListTypeName))._operator_concat (GGS_string (true, " of target object is not compatible with sortedlist type @")))._operator_concat (operand_106913->mListTypeName))._operator_concat (GGS_string (true, " of source expression")) COMMA_SOURCE_FILE_AT_LINE (2873)) ;
            var_cas_sourceExpressionConverter._drop () ;
          }else{
            var_cas_sourceExpressionConverter = GGS_string (true, "") ;
          }
        }else{
          cPtr_typeGalgas_string * operand_106900 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_106900) ;
          cPtr_typeGalgas_string * operand_106913 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_106913) ;
          if ((operand_106900 != NULL) && (operand_106913 != NULL)) {
            var_cas_sourceExpressionConverter = GGS_string (true, "") ;
          }else{
            cPtr_typeGalgas_string * operand_106900 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_106900) ;
            cPtr_typeGalgas_lstring * operand_106913 = dynamic_cast <cPtr_typeGalgas_lstring *> (ptr_106913) ;
            if ((operand_106900 != NULL) && (operand_106913 != NULL)) {
              var_cas_sourceExpressionConverter = GGS_string (true, "ggs_string") ;
            }else{
              GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "for '.=' operator, "))._operator_concat (var_cas_inTargetType.reader_messageGalgasType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2881))))._operator_concat (GGS_string (true, " target object type is not compatible with ")))._operator_concat (var_cas_sourceType.reader_messageGalgasType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2882))))._operator_concat (GGS_string (true, " source expression type")) COMMA_SOURCE_FILE_AT_LINE (2884)) ;
              var_cas_sourceExpressionConverter._drop () ;
            }
          }
        }
      }
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_dotEqualInstruction ::constructor_new (_inLexique, var_cas_inTargetVarCppName, var_cas_inStructAttributeList, var_cas_sourceExpression, var_cas_sourceExpressionConverter COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_2827_65_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_3D) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'input_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_input_parameters_list_semantics_parser_2899_28_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_assignedVariables  &var_cas_listeAffectationParametresEffectifs,
                                GGS_typeCplusPlusNameList  &var_cas_outAllVariablesList,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  GGS_typeListeCibles  var_cas_listeCibles ;
  var_cas_listeCibles = GGS_typeListeCibles ::constructor_emptyList () ;
  { bool syntaxRepeat_18 = true ;
    while (syntaxRepeat_18) {
      switch (select_repeat_semantics_parser_18 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          switch (select_semantics_parser_19 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_nomVariableDest ;
              switch (select_semantics_parser_20 (_inLexique)) {
                case 1 : {
                  GGS_AC_galgasType  var_cas_definitionType ;
                  GGS_lstring  var_cas_typeName ;
                  nt_type_parsing_ (_inLexique, GGS_typeTableEnAvant ::constructor_emptyMap (_inLexique COMMA_HERE), var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomVariableDest) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_nomCppVariable ;
                  var_cas_nomCppVariable = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomVariableDest.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2923)), var_cas_nomVariableDest.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2923)) COMMA_HERE) ;
                  var_cas_ioVariablesMap.modifier_insertLocalVariable (_inLexique, var_cas_nomVariableDest, var_cas_definitionType, var_cas_nomCppVariable COMMA_SOURCE_FILE_AT_LINE (2924)) ;
                  var_cas_ioInstructionList._addAssign_operation (GGS_typeInstructionDeclarationVarLocale ::constructor_new (_inLexique, var_cas_nomCppVariable, var_cas_definitionType COMMA_HERE)) ;
                  } break ;
                case 2 : {
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomVariableDest) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              GGS_AC_galgasType  var_cas_typeVarDest ;
              GGS_typeCplusPlusName  var_cas_nomCppDest ;
              var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomVariableDest, var_cas_typeVarDest, var_cas_nomCppDest COMMA_SOURCE_FILE_AT_LINE (2931)) ;
              var_cas_listeCibles._addAssign_operation (GGS_typeEntiteDest ::constructor_new (_inLexique, var_cas_typeVarDest, var_cas_nomCppDest, GGS_location (_inLexique) COMMA_HERE)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              var_cas_listeCibles._addAssign_operation (GGS_typeJoker ::constructor_new (_inLexique COMMA_HERE)) ;
              } break ;
            case 3 : {
              GGS_luint  var_cas_jokerCountWithLocation ;
              _inLexique._assignFromAttribute_uint32value (var_cas_jokerCountWithLocation) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              GGS_uint  var_cas_jokerCount ;
              var_cas_jokerCount = var_cas_jokerCountWithLocation.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (2940)) ;
              GGS_uint _variant_110897 = var_cas_jokerCount._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (2941)) ;
              GGS_bool _condition_110897 (_variant_110897._isBuilt (), true) ;
              while (_condition_110897.isBuiltAndTrue ()) {
                _condition_110897 = (var_cas_jokerCount)._operator_strictSup (GGS_uint (true, 0U)) ;
                if (_condition_110897.isBuiltAndTrue ()) {
                  if (_variant_110897.uintValue () == 0) {
                    _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (2945)) ;
                    _condition_110897 = GGS_bool (true, false) ;
                  }else{
                    _variant_110897._decrement_operation (_inLexique COMMA_HERE) ;
                    var_cas_listeCibles._addAssign_operation (GGS_typeJoker ::constructor_new (_inLexique COMMA_HERE)) ;
                    var_cas_jokerCount._decrement_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (2944)) ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_18 = false ;
          break ;
      }
    }
  }
  GGS_bool var_cas_ellipsis ;
  switch (select_semantics_parser_21 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_2E_2E) COMMA_HERE) ;
      var_cas_ellipsis = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_ellipsis = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  if (((var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2956)))._operator_strictInf (var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2956)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "too much arguments: "))._operator_concat (var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2957)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2957))))._operator_concat (GGS_string (true, " expected, ")))._operator_concat (var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2958)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2958))))._operator_concat (GGS_string (true, " found")) COMMA_SOURCE_FILE_AT_LINE (2960)) ;
    var_cas_outAllVariablesList._drop () ;
    var_cas_listeAffectationParametresEffectifs._drop () ;
  }else if ((((var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2960)))._operator_strictSup (var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2960))))._operator_and ((var_cas_ellipsis)._operator_not ())).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "argument(s) missing: "))._operator_concat (var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2961)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2961))))._operator_concat (GGS_string (true, " expected, ")))._operator_concat (var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2962)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2962))))._operator_concat (GGS_string (true, " found")) COMMA_SOURCE_FILE_AT_LINE (2964)) ;
    var_cas_outAllVariablesList._drop () ;
    var_cas_listeAffectationParametresEffectifs._drop () ;
  }else{
    var_cas_listeAffectationParametresEffectifs = GGS_L_assignedVariables ::constructor_emptyList () ;
    var_cas_outAllVariablesList = GGS_typeCplusPlusNameList ::constructor_emptyList () ;
    {
      GGS_typeListeAttributsSemantiques::cEnumerator enumerator_111905 (var_cas_listeAttributsSemantiques, true) ;
      const GGS_typeListeAttributsSemantiques::cElement * operand_111905 = NULL ;
      GGS_typeListeCibles::cEnumerator enumerator_111987 (var_cas_listeCibles, true) ;
      const GGS_typeListeCibles::cElement * operand_111987 = NULL ;
      while (((operand_111905 = enumerator_111905.nextObject ()))
          && ((operand_111987 = enumerator_111987.nextObject ()))) {
        macroValidPointer (operand_111905) ;
        macroValidPointer (operand_111987) ;
        GGS_lstring  var_cas_nomAttributSource ;
        var_cas_nomAttributSource = operand_111905->mAttributeName ;
        const GGS_typeCible  _temp_112094 = operand_111987->aCible ;
        if (_temp_112094._isBuilt ()) {
          _temp_112094 (HERE)->method_verifierType (_inLexique, operand_111905->mAttributType, var_cas_nomAttributSource, var_cas_listeAffectationParametresEffectifs, var_cas_outAllVariablesList COMMA_SOURCE_FILE_AT_LINE (2970)) ;
        }
      }
    }
  }
  GGS_typeCplusPlusName  var_cas_nullName ;
  var_cas_nullName = GGS_typeNullName ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  if (var_cas_outAllVariablesList._isBuilt () &&
      var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2977))._isBuilt () &&
      var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2978))._isBuilt () &&
      var_cas_nullName._isBuilt ()) {
    ::routine_appendJokersIfNeeded (_inLexique,  var_cas_outAllVariablesList,  var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2977)),  var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2978)),  var_cas_nullName COMMA_SOURCE_FILE_AT_LINE (2975)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_input_parameters_list_semantics_parser_2899_28_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_18 = true ;
    while (syntaxRepeat_18) {
      switch (select_repeat_semantics_parser_18 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          switch (select_semantics_parser_19 (_inLexique)) {
            case 1 : {
              switch (select_semantics_parser_20 (_inLexique)) {
                case 1 : {
                  nt_type_parsing_parse (_inLexique) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_18 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_21 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_2E_2E) COMMA_HERE) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2995_44_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_AC_galgasType  var_cas_targetType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetType, var_cas_nomCppVariableSource COMMA_SOURCE_FILE_AT_LINE (3006)) ;
  GGS_lstringlist  var_cas_structAttributeList ;
  var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_22 = true ;
    while (syntaxRepeat_22) {
      switch (select_repeat_semantics_parser_22 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
          GGS_lstring  var_cas_structAttributeName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_structAttributeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_structAttributeList._addAssign_operation (var_cas_structAttributeName) ;
          GGS_typeGalgasStructType  var_cas_structType ;
          var_cas_structType = GGS_typeGalgasStructType::_castFrom (_inLexique, var_cas_targetType.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (3015)) ;
          GGS_bool var_cas_found ;
          var_cas_found = GGS_bool (true, false) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_114218 (var_cas_structType.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (3017)), true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_114218 = NULL ;
            while (((operand_114218 = enumerator_114218.nextObject ()))
                && ((var_cas_found)._operator_not ().isBuiltAndTrue ())) {
              macroValidPointer (operand_114218) ;
              var_cas_found = (operand_114218->mAttributeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3018)))._operator_isEqual (var_cas_structAttributeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3018))) ;
              var_cas_targetType = operand_114218->mAttributType ;
            }
          }
          if (((var_cas_found)._operator_not ()).isBuiltAndTrue ()) {
            var_cas_structAttributeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '@"))._operator_concat (var_cas_structType.reader_mStructTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (3022))))._operator_concat (GGS_string (true, "' does not define a '")))._operator_concat (var_cas_structAttributeName))._operator_concat (GGS_string (true, "' attribute")) COMMA_SOURCE_FILE_AT_LINE (3023)) ;
          }
          } break ;
        default :
          syntaxRepeat_22 = false ;
          break ;
      }
    }
  }
  nt_instruction_beginning_with_identifier_and_structure_access_ (_inLexique, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inSemanticContext, var_cas_nomCppVariableSource, var_cas_targetType, var_cas_structAttributeList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2995_44_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_22 = true ;
    while (syntaxRepeat_22) {
      switch (select_repeat_semantics_parser_22 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_22 = false ;
          break ;
      }
    }
  }
  nt_instruction_beginning_with_identifier_and_structure_access_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_3047_65_ (galgas_scanner & _inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_typeCplusPlusName  var_cas_inNomCppVariableSource,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  const GGS_AC_galgasType  _temp_116161 = var_cas_inTargetType ;
  if (_temp_116161._isBuilt ()) {
    _temp_116161 (HERE)->method_handleAddAssignOperatorCall (_inLexique, GGS_location (_inLexique), var_cas_formalParametersList COMMA_SOURCE_FILE_AT_LINE (3061)) ;
  }
  GGS_typeTypesList  var_cas_typeList ;
  var_cas_typeList = GGS_typeTypesList ::constructor_emptyList () ;
  GGS_typeExpressionList  var_cas_expressionList ;
  var_cas_expressionList = GGS_typeExpressionList ::constructor_emptyList () ;
  { bool syntaxRepeat_23 = true ;
    while (syntaxRepeat_23) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList._addAssign_operation (var_cas_resultType, GGS_location (_inLexique)) ;
        var_cas_expressionList._addAssign_operation (var_cas_expression) ;
      switch (select_repeat_semantics_parser_23 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_23 = false ;
          break ;
      }
    }
  }
  if (((var_cas_formalParametersList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (3082)))._operator_isNotEqual (var_cas_typeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (3082)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, (((var_cas_typeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (3083)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3083)))._operator_concat (GGS_string (true, " argument(s), while ")))._operator_concat (var_cas_formalParametersList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (3083)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3083))))._operator_concat (GGS_string (true, " are needed")) COMMA_SOURCE_FILE_AT_LINE (3084)) ;
  }else{
    {
      GGS_typeListeAttributsSemantiques::cEnumerator enumerator_116980 (var_cas_formalParametersList, true) ;
      const GGS_typeListeAttributsSemantiques::cElement * operand_116980 = NULL ;
      GGS_typeTypesList::cEnumerator enumerator_117050 (var_cas_typeList, true) ;
      const GGS_typeTypesList::cElement * operand_117050 = NULL ;
      while (((operand_116980 = enumerator_116980.nextObject ()))
          && ((operand_117050 = enumerator_117050.nextObject ()))) {
        macroValidPointer (operand_116980) ;
        macroValidPointer (operand_117050) ;
        ::routine_checkAssignmentTypesCompatibility (_inLexique,  operand_116980->mAttributType,  operand_117050->mType,  operand_117050->mEndOfExpressionLocation,  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (3087)) ;
      }
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeAppendInstruction ::constructor_new (_inLexique, var_cas_inNomCppVariableSource, var_cas_inStructAttributeList, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_3047_65_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
  { bool syntaxRepeat_23 = true ;
    while (syntaxRepeat_23) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        nt_expression_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_23 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_23 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_3107_65_ (galgas_scanner & _inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_typeCplusPlusName  var_cas_inNomCppVariableSource,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3D) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  const GGS_AC_galgasType  _temp_118579 = var_cas_inTargetType ;
  if (_temp_118579._isBuilt ()) {
    _temp_118579 (HERE)->method_handleMinusAssignOperatorCall (_inLexique, GGS_location (_inLexique), var_cas_formalParametersList COMMA_SOURCE_FILE_AT_LINE (3120)) ;
  }
  GGS_typeTypesList  var_cas_typeList ;
  var_cas_typeList = GGS_typeTypesList ::constructor_emptyList () ;
  GGS_typeExpressionList  var_cas_expressionList ;
  var_cas_expressionList = GGS_typeExpressionList ::constructor_emptyList () ;
  { bool syntaxRepeat_24 = true ;
    while (syntaxRepeat_24) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList._addAssign_operation (var_cas_resultType, GGS_location (_inLexique)) ;
        var_cas_expressionList._addAssign_operation (var_cas_expression) ;
      switch (select_repeat_semantics_parser_24 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_24 = false ;
          break ;
      }
    }
  }
  if (((var_cas_formalParametersList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (3141)))._operator_isNotEqual (var_cas_typeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (3141)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, (((var_cas_typeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (3142)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3142)))._operator_concat (GGS_string (true, " argument(s), while ")))._operator_concat (var_cas_formalParametersList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (3142)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3142))))._operator_concat (GGS_string (true, " are needed")) COMMA_SOURCE_FILE_AT_LINE (3143)) ;
  }else{
    {
      GGS_typeListeAttributsSemantiques::cEnumerator enumerator_119398 (var_cas_formalParametersList, true) ;
      const GGS_typeListeAttributsSemantiques::cElement * operand_119398 = NULL ;
      GGS_typeTypesList::cEnumerator enumerator_119468 (var_cas_typeList, true) ;
      const GGS_typeTypesList::cElement * operand_119468 = NULL ;
      while (((operand_119398 = enumerator_119398.nextObject ()))
          && ((operand_119468 = enumerator_119468.nextObject ()))) {
        macroValidPointer (operand_119398) ;
        macroValidPointer (operand_119468) ;
        ::routine_checkAssignmentTypesCompatibility (_inLexique,  operand_119398->mAttributType,  operand_119468->mType,  operand_119468->mEndOfExpressionLocation,  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (3146)) ;
      }
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeRemoveInstruction ::constructor_new (_inLexique, var_cas_inNomCppVariableSource, var_cas_inStructAttributeList, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_3107_65_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3D) COMMA_HERE) ;
  { bool syntaxRepeat_24 = true ;
    while (syntaxRepeat_24) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        nt_expression_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_24 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_24 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_3166_65_ (galgas_scanner & _inLexique,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */,
                                const GGS_typeCplusPlusName  var_cas_inNomCppVariableSource,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_2B) COMMA_HERE) ;
  const GGS_AC_galgasType  _temp_120967 = var_cas_inTargetType ;
  if (_temp_120967._isBuilt ()) {
    _temp_120967 (HERE)->method_handleIncrementOperatorCall (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3178)) ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeIncrementInstruction ::constructor_new (_inLexique, var_cas_inNomCppVariableSource, var_cas_inStructAttributeList, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_3166_65_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_2B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_3192_65_ (galgas_scanner & _inLexique,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */,
                                const GGS_typeCplusPlusName  var_cas_inNomCppVariableSource,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_2D) COMMA_HERE) ;
  const GGS_AC_galgasType  _temp_122277 = var_cas_inTargetType ;
  if (_temp_122277._isBuilt ()) {
    _temp_122277 (HERE)->method_handleDecrementOperatorCall (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3204)) ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeDecrementInstruction ::constructor_new (_inLexique, var_cas_inNomCppVariableSource, var_cas_inStructAttributeList, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_3192_65_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_2D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'actual_parameters_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_actual_parameters_list_semantics_parser_3214_29_ (galgas_scanner & _inLexique,
                                const GGS_L_EXsignature  var_cas_listeTypesParametresFormels,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_outExpressionList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap) ;
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique,  var_cas_listeTypesParametresFormels,  var_cas_listeTypesParametresEffectifs,  GGS_location (_inLexique),  var_cas_ioInstructionList,  var_cas_outExpressionList COMMA_SOURCE_FILE_AT_LINE (3233)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_actual_parameters_list_semantics_parser_3214_29_parse (galgas_scanner & _inLexique) {
  nt_parse_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'parse_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_parameters_list_semantics_parser_3247_28_ (galgas_scanner & _inLexique,
                                GGS_L_actualParametersSignature  &var_cas_listeTypesParametresEffectifs,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_outExpressionList = GGS_typeExpressionList ::constructor_emptyList () ;
  var_cas_listeTypesParametresEffectifs = GGS_L_actualParametersSignature ::constructor_emptyList () ;
  GGS_stringset  var_cas_exclusiveVariables ;
  var_cas_exclusiveVariables = GGS_stringset ::constructor_emptySet () ;
  { bool syntaxRepeat_25 = true ;
    while (syntaxRepeat_25) {
      switch (select_repeat_semantics_parser_25 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_expressionType ;
          GGS_typeExpression  var_cas_expressionValue ;
          nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expressionValue, var_cas_expressionType) ;
          GGS_EXactualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_EXactualParametersPassingMode::constructor_parameterOut (_inLexique COMMA_HERE) ;
          var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_expressionType, var_cas_parameterPassingMode) ;
          var_cas_outExpressionList._addAssign_operation (var_cas_expressionValue) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_EXactualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_EXactualParametersPassingMode::constructor_parameterIn (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_26 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              var_cas_listeTypesParametresEffectifs._addAssign_operation (GGS_typeGalgas_jokerInParameterList ::constructor_new (_inLexique COMMA_HERE), var_cas_parameterPassingMode) ;
              var_cas_outExpressionList._addAssign_operation (GGS_typeJokerInExpression ::constructor_new (_inLexique COMMA_HERE)) ;
              } break ;
            case 2 : {
              GGS_luint  var_cas_jokerCountWithLocation ;
              _inLexique._assignFromAttribute_uint32value (var_cas_jokerCountWithLocation) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              GGS_uint  var_cas_jokerCount ;
              var_cas_jokerCount = var_cas_jokerCountWithLocation.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (3284)) ;
              GGS_uint _variant_125659 = var_cas_jokerCount._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (3285)) ;
              GGS_bool _condition_125659 (_variant_125659._isBuilt (), true) ;
              while (_condition_125659.isBuiltAndTrue ()) {
                _condition_125659 = (var_cas_jokerCount)._operator_strictSup (GGS_uint (true, 0U)) ;
                if (_condition_125659.isBuiltAndTrue ()) {
                  if (_variant_125659.uintValue () == 0) {
                    _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (3290)) ;
                    _condition_125659 = GGS_bool (true, false) ;
                  }else{
                    _variant_125659._decrement_operation (_inLexique COMMA_HERE) ;
                    var_cas_listeTypesParametresEffectifs._addAssign_operation (GGS_typeGalgas_jokerInParameterList ::constructor_new (_inLexique COMMA_HERE), var_cas_parameterPassingMode) ;
                    var_cas_outExpressionList._addAssign_operation (GGS_typeJokerInExpression ::constructor_new (_inLexique COMMA_HERE)) ;
                    var_cas_jokerCount._decrement_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (3289)) ;
                  }
                }
              }
              } break ;
            case 3 : {
              GGS_AC_galgasType  var_cas_typeArgument ;
              GGS_typeCplusPlusName  var_cas_nomCppArgument ;
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument COMMA_SOURCE_FILE_AT_LINE (3296)) ;
              var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
              GGS_typeExpression  var_cas_e ;
              var_cas_e = GGS_typeVarInExpression ::constructor_new (_inLexique, var_cas_nomCppArgument, GGS_lstringlist ::constructor_emptyList () COMMA_HERE) ;
              var_cas_outExpressionList._addAssign_operation (var_cas_e) ;
              if ((var_cas_exclusiveVariables.reader_hasKey (_inLexique, var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3300)) COMMA_SOURCE_FILE_AT_LINE (3300))).isBuiltAndTrue ()) {
                var_cas_nomArgument.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this object is already named as input or output/input effectif argument of current instruction") COMMA_SOURCE_FILE_AT_LINE (3302)) ;
              }else{
                var_cas_exclusiveVariables._addAssign_operation (var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3303))) ;
              }
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_typeArgument ;
          GGS_typeCplusPlusName  var_cas_nomCppArgument ;
          GGS_lstring  var_cas_nomArgument ;
          _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument COMMA_SOURCE_FILE_AT_LINE (3312)) ;
          GGS_lstringlist  var_cas_structAttributeList ;
          var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList () ;
          { bool syntaxRepeat_27 = true ;
            while (syntaxRepeat_27) {
              switch (select_repeat_semantics_parser_27 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
                  GGS_lstring  var_cas_structAttributeName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_structAttributeName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeGalgasStructType  var_cas_structType ;
                  var_cas_structType = GGS_typeGalgasStructType::_castFrom (_inLexique, var_cas_typeArgument.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (3318)) ;
                  GGS_bool var_cas_found ;
                  var_cas_found = GGS_bool (true, false) ;
                  {
                    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_126951 (var_cas_structType.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (3320)), true) ;
                    const GGS_typeListeAttributsSemantiques::cElement * operand_126951 = NULL ;
                    while (((operand_126951 = enumerator_126951.nextObject ()))
                        && ((var_cas_found)._operator_not ().isBuiltAndTrue ())) {
                      macroValidPointer (operand_126951) ;
                      var_cas_found = (operand_126951->mAttributeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3321)))._operator_isEqual (var_cas_structAttributeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3321))) ;
                      var_cas_typeArgument = operand_126951->mAttributType ;
                    }
                  }
                  if (((var_cas_found)._operator_not ()).isBuiltAndTrue ()) {
                    var_cas_structAttributeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '@"))._operator_concat (var_cas_structType.reader_mStructTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (3325))))._operator_concat (GGS_string (true, "' does not define a '")))._operator_concat (var_cas_structAttributeName))._operator_concat (GGS_string (true, "' attribute")) COMMA_SOURCE_FILE_AT_LINE (3326)) ;
                  }
                  var_cas_structAttributeList._addAssign_operation (var_cas_structAttributeName) ;
                  } break ;
                default :
                  syntaxRepeat_27 = false ;
                  break ;
              }
            }
          }
          GGS_EXactualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_EXactualParametersPassingMode::constructor_parameterOutIn (_inLexique COMMA_HERE) ;
          var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
          GGS_typeExpression  var_cas_e ;
          var_cas_e = GGS_typeVarInExpression ::constructor_new (_inLexique, var_cas_nomCppArgument, var_cas_structAttributeList COMMA_HERE) ;
          var_cas_outExpressionList._addAssign_operation (var_cas_e) ;
          if ((var_cas_exclusiveVariables.reader_hasKey (_inLexique, var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3333)) COMMA_SOURCE_FILE_AT_LINE (3333))).isBuiltAndTrue ()) {
            var_cas_nomArgument.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this object is already named as input or output/input effectif argument of current instruction") COMMA_SOURCE_FILE_AT_LINE (3335)) ;
          }else{
            var_cas_exclusiveVariables._addAssign_operation (var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3336))) ;
          }
          } break ;
        default :
          syntaxRepeat_25 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_parameters_list_semantics_parser_3247_28_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_25 = true ;
    while (syntaxRepeat_25) {
      switch (select_repeat_semantics_parser_25 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          nt_expression_parse (_inLexique) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          switch (select_semantics_parser_26 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          { bool syntaxRepeat_27 = true ;
            while (syntaxRepeat_27) {
              switch (select_repeat_semantics_parser_27 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_27 = false ;
                  break ;
              }
            }
          }
          } break ;
        default :
          syntaxRepeat_25 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'semantic_instructions_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_semantics_parser_3345_33_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  var_cas_ioVariablesMap.prologue_verifyVariableUsing (_inLexique COMMA_SOURCE_FILE_AT_LINE (3353)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_verifyVariableUsing (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3353)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_semantics_parser_3345_33_parse (galgas_scanner & _inLexique) {
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3371_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_typeVarSource ;
  GGS_typeCplusPlusName  var_cas_sourceVarCppName ;
  GGS_lstring  var_cas_nomVarSource ;
  nt_read_access_ (_inLexique, var_cas_nomVarSource, var_cas_sourceVarCppName, var_cas_typeVarSource, var_cas_ioVariablesMap) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_typeVarSource.getPtr (), true, var_cas_nomVarSource COMMA_SOURCE_FILE_AT_LINE (3386)) ;
  GGS_lstring  var_cas_nomTypeSource ;
  var_cas_nomTypeSource = var_cas_classType.reader_mClassTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (3387)) ;
  GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits ;
  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (3388)) ;
  nt_extract_instruction_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceVarCppName, var_cas_nomTypeSource, var_cas_tableMessagesAbstraits, var_cas_ioInstructionList, var_cas_inSemanticContext) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3371_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
  nt_read_access_parse (_inLexique) ;
  nt_extract_instruction_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_3408_26_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "simple extract instruction is obsolete: use cast expression instead") COMMA_SOURCE_FILE_AT_LINE (3419)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  GGS_lstring  var_cas_nomClasse ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomClasse) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  _temp_131332 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (_temp_131332._isBuilt ()) {
    _temp_131332 (HERE)->method_searchKey (_inLexique, var_cas_nomClasse, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3426)) ;
  }
  GGS_AC_galgasType  var_cas_leType ;
  var_cas_leType = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_nomClasse COMMA_SOURCE_FILE_AT_LINE (3427)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (3427)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_leType.getPtr (), true, var_cas_nomClasse COMMA_SOURCE_FILE_AT_LINE (3428)) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  var_cas_listeAttributsSemantiques = var_cas_classType.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (3429)) ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (3430)) ;
  if (((var_cas_tableDesClassesAncetres.reader_hasKey (_inLexique, var_cas_nomTypeSource.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3432)) COMMA_SOURCE_FILE_AT_LINE (3432)))._operator_not ()).isBuiltAndTrue ()) {
    var_cas_nomClasse.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This class does not inherit from '@"))._operator_concat (var_cas_nomTypeSource.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3433))))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (3434)) ;
  }
  GGS_L_assignedVariables  var_cas_listeAffectationParametresEffectifs ;
  GGS_typeCplusPlusNameList  var_cas_allVariablesList ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  nt_input_parameters_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeAffectationParametresEffectifs, var_cas_allVariablesList, var_cas_listeAttributsSemantiques, var_cas_ioVariablesMap, var_cas_ioInstructionList) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  const GGS_AC_galgasType  _temp_132775 = var_cas_errorExpressionType ;
  if (_temp_132775._isBuilt ()) {
    _temp_132775 (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (3461)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_lstring  var_cas_messageName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  const GGS_typeClassInheritedMessagesMap  _temp_132878 = var_cas_tableMessagesAbstraits ;
  if (_temp_132878._isBuilt ()) {
    _temp_132878 (HERE)->method_searchKey (_inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (3465)) ;
  }
  var_cas_ioInstructionList._addAssign_operation (GGS_typeSimpleExtractInstruction ::constructor_new (_inLexique, var_cas_inSourceVarCppName, var_cas_nomClasse, var_cas_listeAffectationParametresEffectifs, var_cas_errorExpression, var_cas_messageName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_3408_26_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  nt_input_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_3478_26_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  /* var_cas_tableMessagesAbstraits */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_typeStructuredExtractCasesList  var_cas_casesList ;
  var_cas_casesList = GGS_typeStructuredExtractCasesList ::constructor_emptyList () ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "structured extract instruction is obsolete: use cast instruction instead") COMMA_SOURCE_FILE_AT_LINE (3491)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3493)) ;
  { bool syntaxRepeat_28 = true ;
    while (syntaxRepeat_28) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3495)) ;
        GGS_location  var_cas_indicatif1 ;
        var_cas_indicatif1 = GGS_location (_inLexique) ;
        GGS_lstring  var_cas_nomType1 ;
        _inLexique._assignFromAttribute_tokenString (var_cas_nomType1) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        const GGS_M_semanticsEntitiesForUse  _temp_134556 = var_cas_ioComponentSemanticsEntitiesMap ;
        if (_temp_134556._isBuilt ()) {
          _temp_134556 (HERE)->method_searchKey (_inLexique, var_cas_nomType1, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3502)) ;
        }
        GGS_AC_galgasType  var_cas_definitionClasse1 ;
        var_cas_definitionClasse1 = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_nomType1 COMMA_SOURCE_FILE_AT_LINE (3503)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (3503)) ;
        GGS_typeGalgasClassType  var_cas_classType1 ;
        var_cas_classType1 = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_definitionClasse1.getPtr (), true, var_cas_nomType1 COMMA_SOURCE_FILE_AT_LINE (3505)) ;
        GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 ;
        var_cas_listeAttributs1 = var_cas_classType1.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (3506)) ;
        GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 ;
        var_cas_tableDesClassesAncetresType1 = var_cas_classType1.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (3507)) ;
        if (((var_cas_tableDesClassesAncetresType1.reader_hasKey (_inLexique, var_cas_nomTypeSource.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3509)) COMMA_SOURCE_FILE_AT_LINE (3509)))._operator_not ()).isBuiltAndTrue ()) {
          var_cas_nomType1.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This class does not inherit from '@"))._operator_concat (var_cas_nomTypeSource.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3510))))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (3511)) ;
        }
        GGS_bool var_cas_noUsedParameter ;
        nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_indicatif1, GGS_localConstantBuildStyleEnum::constructor_listStyle (_inLexique COMMA_HERE), GGS_bool (true, false), var_cas_noUsedParameter) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_instructionsList ;
        var_cas_instructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
        nt_semantic_instructions_list_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inSemanticContext) ;
        var_cas_casesList._addAssign_operation (var_cas_nomType1, var_cas_indicatif1, var_cas_instructionsList, var_cas_noUsedParameter) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3495)) ;
      switch (select_repeat_semantics_parser_28 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_28 = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3539)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_elseInstructionList ;
  var_cas_elseInstructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseInstructionList, var_cas_inSemanticContext) ;
  var_cas_ioInstructionList._addAssign_operation (GGS_typeStructuredExtractInstructionWithElse ::constructor_new (_inLexique, var_cas_inSourceVarCppName, var_cas_casesList, var_cas_elseInstructionList COMMA_HERE)) ;
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3539)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3493)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_3478_26_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat_28 = true ;
    while (syntaxRepeat_28) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        nt_parse_effective_input_parameters_list_parse (_inLexique) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
        nt_semantic_instructions_list_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_28 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_28 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3565_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
  GGS_typeGalgasClassType  var_cas_sourceClassType ;
  var_cas_sourceClassType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_sourceExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3586)) ;
  GGS_lstring  var_cas_sourceExpressionTypeName ;
  var_cas_sourceExpressionTypeName = var_cas_sourceClassType.reader_mClassTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (3587)) ;
  GGS_string var_cas_sourceClassMessage ;
  var_cas_sourceClassMessage = var_cas_sourceClassType.reader_mClassMessage (_inLexique COMMA_SOURCE_FILE_AT_LINE (3588)) ;
  GGS_typeInstructionList  var_cas_elseBranchInstructionsList ;
  var_cas_elseBranchInstructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
  GGS_typeStructuredCastBranchList  var_cas_branchList ;
  var_cas_branchList = GGS_typeStructuredCastBranchList ::constructor_emptyList () ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3593)) ;
  { bool syntaxRepeat_29 = true ;
    while (syntaxRepeat_29) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3595)) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
        GGS_bool var_cas_checkForKindOfClass ;
        switch (select_semantics_parser_30 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E_3D) COMMA_HERE) ;
            var_cas_checkForKindOfClass = GGS_bool (true, true) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3D_3D) COMMA_HERE) ;
            var_cas_checkForKindOfClass = GGS_bool (true, false) ;
            } break ;
          default :
            break ;
        }
        GGS_lstring  var_cas_castedTypeName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_castedTypeName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        const GGS_M_semanticsEntitiesForUse  _temp_138718 = var_cas_ioComponentSemanticsEntitiesMap ;
        if (_temp_138718._isBuilt ()) {
          _temp_138718 (HERE)->method_searchKey (_inLexique, var_cas_castedTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3609)) ;
        }
        GGS_AC_galgasType  var_cas_typeDefinition ;
        var_cas_typeDefinition = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_castedTypeName COMMA_SOURCE_FILE_AT_LINE (3610)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (3610)) ;
        GGS_typeSuperClassesMap  var_cas_superClassMap ;
        var_cas_superClassMap = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_typeDefinition.getPtr (), true, var_cas_castedTypeName COMMA_SOURCE_FILE_AT_LINE (3613)).reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (3613)) ;
        GGS_string var_cas_sourceExpressionTypeNameString ;
        var_cas_sourceExpressionTypeNameString = var_cas_sourceExpressionTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3615)) ;
        if (((var_cas_checkForKindOfClass)._operator_not ()).isBuiltAndTrue ()) {
          if ((((var_cas_castedTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3617)))._operator_isNotEqual (var_cas_sourceExpressionTypeNameString))._operator_and ((var_cas_superClassMap.reader_hasKey (_inLexique, var_cas_sourceExpressionTypeNameString COMMA_SOURCE_FILE_AT_LINE (3617)))._operator_not ())).isBuiltAndTrue ()) {
            var_cas_castedTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This class is not '@"))._operator_concat (var_cas_sourceExpressionTypeNameString))._operator_concat (GGS_string (true, "' and does inherit from it")) COMMA_SOURCE_FILE_AT_LINE (3619)) ;
          }
        }else if (((var_cas_superClassMap.reader_hasKey (_inLexique, var_cas_sourceExpressionTypeNameString COMMA_SOURCE_FILE_AT_LINE (3620)))._operator_not ()).isBuiltAndTrue ()) {
          var_cas_castedTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This class does not inherit from '@"))._operator_concat (var_cas_sourceExpressionTypeNameString))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (3622)) ;
        }
        GGS_typeCplusPlusNameList  var_cas_localConstantCppNameList ;
        var_cas_localConstantCppNameList = GGS_typeCplusPlusNameList ::constructor_emptyList () ;
        switch (select_semantics_parser_31 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            GGS_lstring  var_cas_localConstantName ;
            _inLexique._assignFromAttribute_tokenString (var_cas_localConstantName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_localConstantCppName ;
            var_cas_localConstantCppName = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_localConstantName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (3629)), var_cas_localConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3629)) COMMA_HERE) ;
            var_cas_localConstantCppNameList._addAssign_operation (var_cas_localConstantCppName) ;
            var_cas_ioVariablesMap.modifier_insertConstInArgument (_inLexique, var_cas_localConstantName, var_cas_typeDefinition, var_cas_localConstantCppName COMMA_SOURCE_FILE_AT_LINE (3631)) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
            GGS_lstring  var_cas_localConstantName ;
            _inLexique._assignFromAttribute_tokenString (var_cas_localConstantName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_localConstantCppName ;
            var_cas_localConstantCppName = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_localConstantName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (3636)), var_cas_localConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3636)) COMMA_HERE) ;
            var_cas_localConstantCppNameList._addAssign_operation (var_cas_localConstantCppName) ;
            var_cas_ioVariablesMap.modifier_insertUnusedConstInArgument (_inLexique, var_cas_localConstantName, var_cas_typeDefinition, var_cas_localConstantCppName COMMA_SOURCE_FILE_AT_LINE (3638)) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_instructionsList ;
        var_cas_instructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
        nt_semantic_instructions_list_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inSemanticContext) ;
        var_cas_branchList._addAssign_operation (var_cas_castedTypeName, var_cas_checkForKindOfClass, var_cas_localConstantCppNameList, var_cas_instructionsList) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3595)) ;
      switch (select_repeat_semantics_parser_29 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_29 = false ;
          break ;
      }
    }
  }
  GGS_AC_elseOrDefaultForCastInstruction  var_cas_elseOrDefault ;
  var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3656)) ;
  switch (select_semantics_parser_32 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_default) COMMA_HERE) ;
      if (((var_cas_sourceClassMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (3659)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "for using the 'default' construct, the static class of source expression (@"))._operator_concat (var_cas_sourceExpressionTypeName))._operator_concat (GGS_string (true, ") should define a class message")) COMMA_SOURCE_FILE_AT_LINE (3662)) ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
      GGS_typeExpression  var_cas_errorLocationExpression ;
      GGS_AC_galgasType  var_cas_errorLocationExpressionType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorLocationExpression, var_cas_errorLocationExpressionType) ;
      const GGS_AC_galgasType  _temp_142067 = var_cas_errorLocationExpressionType ;
      if (_temp_142067._isBuilt ()) {
        _temp_142067 (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (3675)) ;
      }
      var_cas_elseOrDefault = GGS_C_defaultForCastInstruction ::constructor_new (_inLexique, var_cas_errorLocationExpression, GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_elseBranchInstructionsList ;
      var_cas_elseBranchInstructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseBranchInstructionsList, var_cas_inSemanticContext) ;
      var_cas_elseOrDefault = GGS_C_elseForCastInstruction ::constructor_new (_inLexique, var_cas_elseBranchInstructionsList COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3656)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3593)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeStructuredCastInstruction ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_sourceExpression, var_cas_sourceExpressionTypeName, var_cas_branchList, var_cas_elseOrDefault COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3565_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat_29 = true ;
    while (syntaxRepeat_29) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
        switch (select_semantics_parser_30 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E_3D) COMMA_HERE) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3D_3D) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        switch (select_semantics_parser_31 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
        nt_semantic_instructions_list_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_29 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_29 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_32 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_default) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3713_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_AC_galgasType  var_cas_definitionType ;
  GGS_lstring  var_cas_typeName ;
  nt_type_parsing_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
  GGS_lstring  var_cas_targetVarName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_targetVarName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_nomCppVariable ;
  var_cas_nomCppVariable = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_targetVarName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (3733)), var_cas_targetVarName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3733)) COMMA_HERE) ;
  var_cas_ioVariablesMap.modifier_insertLocalVariable (_inLexique, var_cas_targetVarName, var_cas_definitionType, var_cas_nomCppVariable COMMA_SOURCE_FILE_AT_LINE (3734)) ;
  nt_optional_assignment_ (_inLexique, var_cas_typeName, var_cas_targetVarName, var_cas_nomCppVariable, var_cas_definitionType, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3713_27_parse (galgas_scanner & _inLexique) {
  nt_type_parsing_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_optional_assignment_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3756_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
  { bool syntaxRepeat_33 = true ;
    while (syntaxRepeat_33) {
        GGS_lstring  var_cas_galgasVariableName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_galgasVariableName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        GGS_typeCplusPlusName  var_cas_nomCppVar ;
        GGS_AC_galgasType  automatic_var_15 ;
        var_cas_ioVariablesMap.modifier_searchForReadOnlyAccess (_inLexique, var_cas_galgasVariableName, automatic_var_15, var_cas_nomCppVar COMMA_SOURCE_FILE_AT_LINE (3769)) ;
        GGS_typeInstruction  var_cas_instruction ;
        var_cas_instruction = GGS_typeLogInstruction ::constructor_new (_inLexique, var_cas_galgasVariableName, var_cas_nomCppVar COMMA_HERE) ;
        var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
      switch (select_repeat_semantics_parser_33 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_33 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3756_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
  { bool syntaxRepeat_33 = true ;
    while (syntaxRepeat_33) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_33 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_33 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3784_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_drop) COMMA_HERE) ;
  { bool syntaxRepeat_34 = true ;
    while (syntaxRepeat_34) {
        GGS_lstring  var_cas_nom ;
        _inLexique._assignFromAttribute_tokenString (var_cas_nom) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        GGS_typeCplusPlusName  var_cas_nomCppVar ;
        GGS_AC_galgasType  automatic_var_16 ;
        var_cas_ioVariablesMap.modifier_searchForDestructiveReadAccess (_inLexique, var_cas_nom, automatic_var_16, var_cas_nomCppVar COMMA_SOURCE_FILE_AT_LINE (3797)) ;
        GGS_typeInstruction  var_cas_instruction ;
        var_cas_instruction = GGS_typeDropInstruction ::constructor_new (_inLexique, var_cas_nomCppVar COMMA_HERE) ;
        var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
      switch (select_repeat_semantics_parser_34 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_34 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3784_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_drop) COMMA_HERE) ;
  { bool syntaxRepeat_34 = true ;
    while (syntaxRepeat_34) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_34 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_34 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_3814_44_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_L_EXsignature  var_cas_signatureRoutine ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  _temp_147637 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (_temp_147637._isBuilt ()) {
    _temp_147637 (HERE)->method_searchKey (_inLexique, var_cas_nomVarDest, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3825)) ;
  }
  GGS_bool var_cas_isExternActionCall ;
  { const GGS_AC_semanticsEntity _var_148109 = var_cas_entite ; // CAST instruction
    if (_var_148109.getPtr () != NULL) {
      macroValidPointer (_var_148109.getPtr ()) ;
      if (dynamic_cast <cPtr_typeEntiteRoutine *> (_var_148109.getPtr ()) != NULL) {
        const GGS_typeEntiteRoutine var_cas_r (_var_148109.getPtr ()) ;
        var_cas_signatureRoutine = var_cas_r.reader_aListeArgumentsFormels (_inLexique COMMA_SOURCE_FILE_AT_LINE (3829)) ;
        var_cas_isExternActionCall = GGS_bool (true, false) ;
      }else if (dynamic_cast <cPtr_typeEntiteRoutineExterne *> (_var_148109.getPtr ()) != NULL) {
        const GGS_typeEntiteRoutineExterne var_cas_ae (_var_148109.getPtr ()) ;
        var_cas_signatureRoutine = var_cas_ae.reader_aSignature (_inLexique COMMA_SOURCE_FILE_AT_LINE (3832)) ;
        var_cas_isExternActionCall = GGS_bool (true, true) ;
      }else{
        var_cas_nomVarDest.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "'"))._operator_concat (var_cas_nomVarDest.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3836))))._operator_concat (GGS_string (true, "' should name a routine or an extern routine")) COMMA_SOURCE_FILE_AT_LINE (3839)) ;
        var_cas_signatureRoutine._drop () ;
        var_cas_isExternActionCall._drop () ;
      }
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_parameters_list_ (_inLexique, var_cas_signatureRoutine, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeRoutineCallInstruction ::constructor_new (_inLexique, var_cas_nomVarDest, var_cas_expressionsList, var_cas_signatureRoutine, var_cas_isExternActionCall COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_3814_44_parse (galgas_scanner & _inLexique) {
  nt_actual_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3874_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  switch (select_semantics_parser_35 (_inLexique)) {
    case 1 : {
      GGS_typeExpression  var_cas_expression ;
      GGS_AC_galgasType  var_cas_expressionType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expression, var_cas_expressionType) ;
      GGS_lstring  var_cas_methodName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      GGS_string var_cas_categoryMethodClassBaseName ;
      const GGS_AC_galgasType  _temp_150441 = var_cas_expressionType ;
      if (_temp_150441._isBuilt ()) {
        _temp_150441 (HERE)->method_handleMethodInstructionCall (_inLexique, var_cas_methodName, var_cas_inSemanticContext.reader_mCategoryMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (3903)), var_cas_methodSignature, var_cas_categoryMethodClassBaseName COMMA_SOURCE_FILE_AT_LINE (3901)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeMethodCallInstruction ::constructor_new (_inLexique, var_cas_expressionType, var_cas_expression, var_cas_methodName, var_cas_categoryMethodClassBaseName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
      GGS_lstring  var_cas_modifiedObjectName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_modifiedObjectName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_variableType ;
      GGS_typeCplusPlusName  var_cas_cppVariableName ;
      var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_modifiedObjectName, var_cas_variableType, var_cas_cppVariableName COMMA_SOURCE_FILE_AT_LINE (3932)) ;
      GGS_lstringlist  var_cas_structAttributeList ;
      var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList () ;
      { bool syntaxRepeat_36 = true ;
        while (syntaxRepeat_36) {
          switch (select_repeat_semantics_parser_36 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
              GGS_lstring  var_cas_structAttributeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_structAttributeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_structAttributeList._addAssign_operation (var_cas_structAttributeName) ;
              GGS_typeGalgasStructType  var_cas_structType ;
              var_cas_structType = GGS_typeGalgasStructType::_castFrom (_inLexique, var_cas_variableType.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (3941)) ;
              GGS_bool var_cas_found ;
              var_cas_found = GGS_bool (true, false) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_151761 (var_cas_structType.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (3943)), true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_151761 = NULL ;
                while (((operand_151761 = enumerator_151761.nextObject ()))
                    && ((var_cas_found)._operator_not ().isBuiltAndTrue ())) {
                  macroValidPointer (operand_151761) ;
                  var_cas_found = (operand_151761->mAttributeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3944)))._operator_isEqual (var_cas_structAttributeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3944))) ;
                  var_cas_variableType = operand_151761->mAttributType ;
                }
              }
              if (((var_cas_found)._operator_not ()).isBuiltAndTrue ()) {
                var_cas_structAttributeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '@"))._operator_concat (var_cas_structType.reader_mStructTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (3948))))._operator_concat (GGS_string (true, "' does not define a '")))._operator_concat (var_cas_structAttributeName))._operator_concat (GGS_string (true, "' attribute")) COMMA_SOURCE_FILE_AT_LINE (3949)) ;
              }
              } break ;
            default :
              syntaxRepeat_36 = false ;
              break ;
          }
        }
      }
      GGS_lstring  var_cas_modifierName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_modifierName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      const GGS_AC_galgasType  _temp_152354 = var_cas_variableType ;
      if (_temp_152354._isBuilt ()) {
        _temp_152354 (HERE)->method_handleModifierCall (_inLexique, var_cas_modifierName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (3955)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeModifierCallInstruction ::constructor_new (_inLexique, var_cas_cppVariableName, var_cas_structAttributeList, var_cas_modifierName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    case 3 : {
      GGS_lstring  var_cas_typeName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_lstring  var_cas_typeMethodName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_typeMethodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_typeMethodSignature ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      const GGS_M_semanticsEntitiesForUse  _temp_153150 = var_cas_ioComponentSemanticsEntitiesMap ;
      if (_temp_153150._isBuilt ()) {
        _temp_153150 (HERE)->method_searchKey (_inLexique, var_cas_typeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (3977)) ;
      }
      GGS_AC_galgasType  var_cas_type ;
      var_cas_type = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_theEntity.getPtr (), true, var_cas_typeName COMMA_SOURCE_FILE_AT_LINE (3978)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (3978)) ;
      const GGS_AC_galgasType  _temp_153305 = var_cas_type ;
      if (_temp_153305._isBuilt ()) {
        _temp_153305 (HERE)->method_handleClassMethodCall (_inLexique, var_cas_typeMethodName, var_cas_typeMethodSignature COMMA_SOURCE_FILE_AT_LINE (3979)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_typeMethodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeCallOfTypeMethodInstruction ::constructor_new (_inLexique, var_cas_typeName, var_cas_typeMethodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3874_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  switch (select_semantics_parser_35 (_inLexique)) {
    case 1 : {
      nt_expression_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      { bool syntaxRepeat_36 = true ;
        while (syntaxRepeat_36) {
          switch (select_repeat_semantics_parser_36 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_36 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4010_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_lstring  var_cas_nomVarDest ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomVarDest) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_instruction_beginning_with_identifier_ (_inLexique, var_cas_nomVarDest, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inSemanticContext) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4010_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_instruction_beginning_with_identifier_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4037_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  nt_warning_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_ioInstructionList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4037_27_parse (galgas_scanner & _inLexique) {
  nt_warning_instruction_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'warning_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_warning_instruction_semantics_parser_4056_26_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  const GGS_AC_galgasType  _temp_156586 = var_cas_errorExpressionType ;
  if (_temp_156586._isBuilt ()) {
    _temp_156586 (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (4075)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeExpression  var_cas_warningMessageExpression ;
  GGS_AC_galgasType  var_cas_warningMessageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_warningMessageExpression, var_cas_warningMessageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs ;
  var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_warningMessageExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4089)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeWarningInstruction ::constructor_new (_inLexique, var_cas_errorExpression, var_cas_warningMessageExpression, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_warning_instruction_semantics_parser_4056_26_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4103_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  nt_error_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_ioInstructionList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4103_27_parse (galgas_scanner & _inLexique) {
  nt_error_instruction_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'error_instruction'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_error_instruction_semantics_parser_4122_24_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorLocationExpression ;
  GGS_AC_galgasType  var_cas_errorLocationExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorLocationExpression, var_cas_errorLocationExpressionType) ;
  const GGS_AC_galgasType  _temp_158960 = var_cas_errorLocationExpressionType ;
  if (_temp_158960._isBuilt ()) {
    _temp_158960 (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (4141)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorMessageExpression ;
  GGS_AC_galgasType  var_cas_errorMessageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorMessageExpression, var_cas_errorMessageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs ;
  var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_errorMessageExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4155)) ;
  GGS_varToDropList  var_cas_variablesToDrop ;
  var_cas_variablesToDrop = GGS_varToDropList ::constructor_emptyList () ;
  switch (select_semantics_parser_37 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      { bool syntaxRepeat_38 = true ;
        while (syntaxRepeat_38) {
            GGS_lstring  var_cas_nomVariable ;
            _inLexique._assignFromAttribute_tokenString (var_cas_nomVariable) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_varCppName ;
            GGS_AC_galgasType  automatic_var_17 ;
            var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomVariable, automatic_var_17, var_cas_varCppName COMMA_SOURCE_FILE_AT_LINE (4165)) ;
            var_cas_variablesToDrop._addAssign_operation (var_cas_varCppName) ;
          switch (select_repeat_semantics_parser_38 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_38 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeErrorInstruction ::constructor_new (_inLexique, var_cas_errorLocationExpression, var_cas_errorMessageExpression, GGS_location (_inLexique), var_cas_variablesToDrop COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_error_instruction_semantics_parser_4122_24_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  switch (select_semantics_parser_37 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      { bool syntaxRepeat_38 = true ;
        while (syntaxRepeat_38) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_repeat_semantics_parser_38 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_38 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4188_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  GGS_location  var_cas_instructionLocation ;
  var_cas_instructionLocation = GGS_location (_inLexique) ;
  GGS_typeExpression  var_cas_messageExpression ;
  GGS_AC_galgasType  var_cas_messageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_messageExpression, var_cas_messageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs ;
  var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_messageExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4210)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeMessageInstruction ::constructor_new (_inLexique, var_cas_messageExpression, var_cas_instructionLocation COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4188_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4223_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  GGS_L_expression_instructionsList_list  var_cas_listeBranchesTest ;
  var_cas_listeBranchesTest = GGS_L_expression_instructionsList_list ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (4233)) ;
  { bool syntaxRepeat_39 = true ;
    while (syntaxRepeat_39) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4235)) ;
        GGS_typeExpression  var_cas_testBranche ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_testBranche, var_cas_resultType) ;
        GGS_typeGalgas_bool  var_cas_b ;
        var_cas_b = GGS_typeGalgas_bool::_castFrom (_inLexique, var_cas_resultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4246)) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_then) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_listeInstructionsBrancheTest ;
        var_cas_listeInstructionsBrancheTest = GGS_typeInstructionList ::constructor_emptyList () ;
        nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheTest, var_cas_inSemanticContext) ;
        var_cas_listeBranchesTest._addAssign_operation (var_cas_testBranche, var_cas_listeInstructionsBrancheTest) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4235)) ;
      switch (select_repeat_semantics_parser_39 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_elsif) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_39 = false ;
          break ;
      }
    }
  }
  GGS_typeInstructionList  var_cas_listeInstructionsBrancheAutre ;
  var_cas_listeInstructionsBrancheAutre = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4263)) ;
  switch (select_semantics_parser_40 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheAutre, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4263)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (4233)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_if_instruction ::constructor_new (_inLexique, var_cas_listeBranchesTest, var_cas_listeInstructionsBrancheAutre COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4223_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  { bool syntaxRepeat_39 = true ;
    while (syntaxRepeat_39) {
        nt_expression_parse (_inLexique) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_then) COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_39 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_elsif) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_39 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_40 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4294_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  GGS_typeExpression  var_cas_switchExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_switchExpression, var_cas_resultType) ;
  GGS_typeGalgas_enum  var_cas_e ;
  var_cas_e = GGS_typeGalgas_enum::_castFrom (_inLexique, var_cas_resultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4315)) ;
  GGS_lstring  var_cas_enumTypeName ;
  var_cas_enumTypeName = var_cas_e.reader_mEnumTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4316)) ;
  GGS_enumConstantMap  var_cas_enumConstantesMap ;
  var_cas_enumConstantesMap = var_cas_e.reader_mEnumConstantesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4317)) ;
  GGS_stringset  var_cas_allBranchConstantSet ;
  var_cas_allBranchConstantSet = GGS_stringset ::constructor_emptySet () ;
  GGS_L_switchBranchlist  var_cas_switchBranchlist ;
  var_cas_switchBranchlist = GGS_L_switchBranchlist ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (4321)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat_41 = true ;
    while (syntaxRepeat_41) {
        GGS_stringset  var_cas_branchConstantSet ;
        var_cas_branchConstantSet = GGS_stringset ::constructor_emptySet () ;
        { bool syntaxRepeat_42 = true ;
          while (syntaxRepeat_42) {
              GGS_lstring  var_cas_enumConstantName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_enumConstantName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_branchConstantSet._addAssign_operation (var_cas_enumConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4329))) ;
              GGS_bool automatic_var_18 ;
              const GGS_enumConstantMap  _temp_165622 = var_cas_enumConstantesMap ;
              if (_temp_165622._isBuilt ()) {
                _temp_165622 (HERE)->method_searchKey (_inLexique, var_cas_enumConstantName, automatic_var_18 COMMA_SOURCE_FILE_AT_LINE (4330)) ;
              }
              if ((var_cas_allBranchConstantSet.reader_hasKey (_inLexique, var_cas_enumConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4331)) COMMA_SOURCE_FILE_AT_LINE (4331))).isBuiltAndTrue ()) {
                var_cas_enumConstantName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this constant is already used in current switch instruction") COMMA_SOURCE_FILE_AT_LINE (4333)) ;
              }
            switch (select_repeat_semantics_parser_42 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_42 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
        var_cas_allBranchConstantSet = (var_cas_allBranchConstantSet)._operator_or (var_cas_branchConstantSet) ;
        var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4339)) ;
        GGS_typeInstructionList  var_cas_branchInstructionList ;
        var_cas_branchInstructionList = GGS_typeInstructionList ::constructor_emptyList () ;
        nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_branchInstructionList, var_cas_inSemanticContext) ;
        var_cas_switchBranchlist._addAssign_operation (var_cas_branchConstantSet, var_cas_branchInstructionList) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4339)) ;
      switch (select_repeat_semantics_parser_41 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_41 = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (4321)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  GGS_stringset  var_cas_missingConstants ;
  var_cas_missingConstants = var_cas_enumConstantesMap.reader_allKeys (_inLexique COMMA_SOURCE_FILE_AT_LINE (4357))._substract_operation (_inLexique, var_cas_allBranchConstantSet COMMA_SOURCE_FILE_AT_LINE (4357)) ;
  {
    GGS_stringset::cEnumerator enumerator_166639 (var_cas_missingConstants, true) ;
    while (enumerator_166639.hc ()) {
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (enumerator_166639._key (HERE)))._operator_concat (GGS_string (true, "' is not used in switch instruction")) COMMA_SOURCE_FILE_AT_LINE (4360)) ;
      enumerator_166639.next () ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_switch_instruction ::constructor_new (_inLexique, var_cas_switchExpression, var_cas_enumTypeName, var_cas_switchBranchlist COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4294_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat_41 = true ;
    while (syntaxRepeat_41) {
        { bool syntaxRepeat_42 = true ;
          while (syntaxRepeat_42) {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_repeat_semantics_parser_42 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_42 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_41 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_41 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4375_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  GGS_typeExpression  var_cas_variantExpression ;
  GGS_AC_galgasType  var_cas_variantResultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_variantExpression, var_cas_variantResultType) ;
  GGS_typeGalgas_uint  var_cas_ui ;
  var_cas_ui = GGS_typeGalgas_uint::_castFrom (_inLexique, var_cas_variantResultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4395)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList1 ;
  var_cas_instructionList1 = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (4399)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4400)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList1, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4400)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (4399)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
  GGS_typeExpression  var_cas_conditionalExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_conditionalExpression, var_cas_resultType) ;
  GGS_typeGalgas_bool  var_cas_b ;
  var_cas_b = GGS_typeGalgas_bool::_castFrom (_inLexique, var_cas_resultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4423)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList2 ;
  var_cas_instructionList2 = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (4427)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4428)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList2, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4428)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (4427)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_while_instruction ::constructor_new (_inLexique, var_cas_variantExpression, var_cas_instructionList1, var_cas_conditionalExpression, var_cas_instructionList2, GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4375_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4459_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
  GGS_lstring  var_cas_grammarName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_grammarName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_altName ;
  switch (select_semantics_parser_43 (_inLexique)) {
    case 1 : {
      var_cas_altName = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_label) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_altName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_bool var_cas_sourceIsFile ;
  GGS_typeExpression  var_cas_sourceExpression ;
  switch (select_semantics_parser_44 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
      var_cas_sourceIsFile = GGS_bool (true, true) ;
      GGS_AC_galgasType  var_cas_sourceExpressionType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
      GGS_typeGalgas_lstring  var_cas_gs ;
      var_cas_gs = GGS_typeGalgas_lstring::_castFrom (_inLexique, var_cas_sourceExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4494)) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
      var_cas_sourceIsFile = GGS_bool (true, false) ;
      GGS_AC_galgasType  var_cas_sourceExpressionType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
      GGS_typeGalgas_string  var_cas_gs ;
      var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_sourceExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4507)) ;
      } break ;
    default :
      break ;
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  const GGS_M_semanticsEntitiesForUse  _temp_171859 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (_temp_171859._isBuilt ()) {
    _temp_171859 (HERE)->method_searchKey (_inLexique, var_cas_grammarName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (4522)) ;
  }
  GGS_C_grammarForSemantics  var_cas_gfs ;
  var_cas_gfs = GGS_C_grammarForSemantics::_castFrom (_inLexique, var_cas_e.getPtr (), true, var_cas_grammarName COMMA_SOURCE_FILE_AT_LINE (4523)) ;
  GGS_M_nonterminalSymbolAlts  var_cas_startSymbolAltMap ;
  var_cas_startSymbolAltMap = var_cas_gfs.reader_mGrammarAltMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4524)) ;
  GGS_lstring  var_cas_lexiqueClassName ;
  var_cas_lexiqueClassName = var_cas_gfs.reader_mLexiqueClassName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4525)) ;
  GGS_L_EXsignature  var_cas_startSymbolSignature ;
  const GGS_M_nonterminalSymbolAlts  _temp_172172 = var_cas_startSymbolAltMap ;
  if (_temp_172172._isBuilt ()) {
    _temp_172172 (HERE)->method_searchKey (_inLexique, var_cas_altName, var_cas_startSymbolSignature COMMA_SOURCE_FILE_AT_LINE (4527)) ;
  }
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique,  var_cas_startSymbolSignature,  var_cas_listeTypesParametresEffectifs,  GGS_location (_inLexique),  var_cas_ioInstructionList,  var_cas_expressionsList COMMA_SOURCE_FILE_AT_LINE (4529)) ;
  GGS_typeCplusPlusName  var_cas_sentStringName ;
  switch (select_semantics_parser_45 (_inLexique)) {
    case 1 : {
      var_cas_sentStringName = GGS_typeNullName ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_send) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
      GGS_lstring  var_cas_sentVariableName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_sentVariableName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_targetType ;
      var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_sentVariableName, var_cas_targetType, var_cas_sentStringName COMMA_SOURCE_FILE_AT_LINE (4546)) ;
      GGS_typeGalgas_string  var_cas_gs ;
      var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_targetType.getPtr (), true, var_cas_sentVariableName COMMA_SOURCE_FILE_AT_LINE (4547)) ;
      } break ;
    default :
      break ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_grammarInstruction ::constructor_new (_inLexique, var_cas_sourceIsFile, var_cas_sourceExpression, var_cas_grammarName, var_cas_expressionsList, var_cas_altName, var_cas_lexiqueClassName, var_cas_sentStringName COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4459_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_43 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_label) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_parser_44 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  nt_parse_parameters_list_parse (_inLexique) ;
  switch (select_semantics_parser_45 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_send) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4570_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_send) COMMA_HERE) ;
  GGS_typeExpression  var_cas_expression ;
  GGS_AC_galgasType  var_cas_expressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expression, var_cas_expressionType) ;
  GGS_typeGalgas_string  var_cas_classType ;
  var_cas_classType = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_expressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4591)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeSendInstruction ::constructor_new (_inLexique, var_cas_expression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4570_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_send) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'constant_while_before_in_foreach_instruction'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_constant_while_before_in_foreach_instruction_semantics_parser_4606_51_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_typeCplusPlusName  &var_cas_outIndexVariable,
                                GGS_typeInstructionList  &var_cas_out_before_instructionList) {
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4616)) ;
  { bool syntaxRepeat_46 = true ;
    while (syntaxRepeat_46) {
        switch (select_semantics_parser_47 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        nt_expression_parse (_inLexique) ;
        switch (select_semantics_parser_48 (_inLexique)) {
          case 1 : {
            nt_parse_effective_input_parameters_list_parse (_inLexique) ;
            } break ;
          case 2 : {
            } break ;
          default :
            break ;
        }
      switch (select_repeat_semantics_parser_46 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_46 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_49 (_inLexique)) {
    case 1 : {
      var_cas_outIndexVariable = GGS_typeNullName ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      GGS_lstring  var_cas_indexVariableName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_indexVariableName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      var_cas_outIndexVariable = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_indexVariableName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (4642)), var_cas_indexVariableName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4642)) COMMA_HERE) ;
      var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (_inLexique, var_cas_indexVariableName, GGS_typeGalgas_uint ::constructor_new (_inLexique COMMA_HERE), var_cas_outIndexVariable COMMA_SOURCE_FILE_AT_LINE (4643)) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  var_cas_out_before_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  switch (select_semantics_parser_51 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_before) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_out_before_instructionList, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4616)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_constant_while_before_in_foreach_instruction_semantics_parser_4606_51_secondPhase (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_foreachEnumerationList  &var_cas_outForeachEnumerationList,
                                GGS_typeExpression  &var_cas_outWhileExpression,
                                GGS_typeInstructionList  &var_cas_out_do_instructionList) {
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4683)) ;
  var_cas_outForeachEnumerationList = GGS_foreachEnumerationList ::constructor_emptyList () ;
  { bool syntaxRepeat_46 = true ;
    while (syntaxRepeat_46) {
        GGS_location  var_cas_magicNumber ;
        var_cas_magicNumber = GGS_location (_inLexique) ;
        GGS_bool var_cas_ascending ;
        switch (select_semantics_parser_47 (_inLexique)) {
          case 1 : {
            var_cas_ascending = GGS_bool (true, true) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
            var_cas_ascending = GGS_bool (true, true) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
            var_cas_ascending = GGS_bool (true, false) ;
            } break ;
          default :
            break ;
        }
        GGS_typeExpression  var_cas_sourceExpression ;
        GGS_AC_galgasType  var_cas_sourceExpressionType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
        GGS_typeListeAttributsSemantiques  var_cas_formalEnumerationList ;
        GGS_localConstantBuildStyleEnum var_cas_localConstantBuildStyleEnum ;
        GGS_bool var_cas_iteratorNewStyle ;
        const GGS_AC_galgasType  _temp_178067 = var_cas_sourceExpressionType ;
        if (_temp_178067._isBuilt ()) {
          _temp_178067 (HERE)->method_acceptForeachInstruction (_inLexique, var_cas_magicNumber, var_cas_formalEnumerationList, var_cas_localConstantBuildStyleEnum, var_cas_iteratorNewStyle COMMA_SOURCE_FILE_AT_LINE (4714)) ;
        }
        GGS_string var_cas_typeName ;
        const GGS_AC_galgasType  _temp_178284 = var_cas_sourceExpressionType ;
        if (_temp_178284._isBuilt ()) {
          _temp_178284 (HERE)->method_getTypeName (_inLexique, var_cas_typeName COMMA_SOURCE_FILE_AT_LINE (4722)) ;
        }
        switch (select_semantics_parser_48 (_inLexique)) {
          case 1 : {
            GGS_bool automatic_var_19 ;
            nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_formalEnumerationList, var_cas_magicNumber, var_cas_localConstantBuildStyleEnum, var_cas_iteratorNewStyle, automatic_var_19) ;
            } break ;
          case 2 : {
            GGS_bool var_cas_mapStyle ;
            var_cas_mapStyle = (var_cas_localConstantBuildStyleEnum)._operator_isNotEqual (GGS_localConstantBuildStyleEnum::constructor_listStyle (_inLexique COMMA_HERE)) ;
            GGS_bool var_cas_firstOne ;
            var_cas_firstOne = GGS_bool (true, true) ;
            {
              GGS_typeListeAttributsSemantiques::cEnumerator enumerator_178757 (var_cas_formalEnumerationList, true) ;
              const GGS_typeListeAttributsSemantiques::cElement * operand_178757 = NULL ;
              while (((operand_178757 = enumerator_178757.nextObject ()))) {
                macroValidPointer (operand_178757) ;
                GGS_typeCplusPlusName  var_cas_cppName ;
                if ((((var_cas_localConstantBuildStyleEnum)._operator_isEqual (GGS_localConstantBuildStyleEnum::constructor_firstIsKeyOtherMapStyle (_inLexique COMMA_HERE)))._operator_and (var_cas_firstOne)).isBuiltAndTrue ()) {
                  var_cas_cppName = GGS_typeKeyName ::constructor_new (_inLexique, var_cas_magicNumber, var_cas_iteratorNewStyle COMMA_HERE) ;
                }else{
                  var_cas_cppName = GGS_typeOperandName ::constructor_new (_inLexique, var_cas_magicNumber, operand_178757->mAttributeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4741)), var_cas_mapStyle, var_cas_iteratorNewStyle COMMA_HERE) ;
                }
                var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_178757->mAttributeName, operand_178757->mAttributType, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (4743)) ;
                var_cas_firstOne = GGS_bool (true, false) ;
              }
            }
            } break ;
          default :
            break ;
        }
        var_cas_outForeachEnumerationList._addAssign_operation (var_cas_iteratorNewStyle, var_cas_sourceExpression, var_cas_magicNumber, var_cas_typeName, var_cas_ascending) ;
      switch (select_repeat_semantics_parser_46 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_46 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_49 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      GGS_lstring  var_cas_indexVariableName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_indexVariableName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_typeCplusPlusName  var_cas_indexVariable ;
      var_cas_indexVariable = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_indexVariableName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (4757)), var_cas_indexVariableName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4757)) COMMA_HERE) ;
      var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (_inLexique, var_cas_indexVariableName, GGS_typeGalgas_uint ::constructor_new (_inLexique COMMA_HERE), var_cas_indexVariable COMMA_SOURCE_FILE_AT_LINE (4758)) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      var_cas_outWhileExpression = GGS_typeTrueBool ::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_resultType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_outWhileExpression, var_cas_resultType) ;
      GGS_typeGalgas_bool  var_cas_b ;
      var_cas_b = GGS_typeGalgas_bool::_castFrom (_inLexique, var_cas_resultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4777)) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_parser_51 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_before) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  var_cas_out_do_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_out_do_instructionList, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4683)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_constant_while_before_in_foreach_instruction_semantics_parser_4606_51_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_46 = true ;
    while (syntaxRepeat_46) {
        switch (select_semantics_parser_47 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        nt_expression_parse (_inLexique) ;
        switch (select_semantics_parser_48 (_inLexique)) {
          case 1 : {
            nt_parse_effective_input_parameters_list_parse (_inLexique) ;
            } break ;
          case 2 : {
            } break ;
          default :
            break ;
        }
      switch (select_repeat_semantics_parser_46 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_46 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_49 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_parser_51 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_before) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4802_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (4812)) ;
  GGS_typeInstructionList  var_cas_before_instructionList ;
  GGS_typeExpression  var_cas_whileExpression ;
  GGS_foreachEnumerationList  var_cas_foreachEnumerationList ;
  GGS_typeInstructionList  var_cas_do_instructionList ;
  GGS_typeCplusPlusName  var_cas_indexVariable ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_182197 = _inLexique.parsingContext () ;
    nt_constant_while_before_in_foreach_instruction_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_inSemanticContext, var_cas_indexVariable, var_cas_before_instructionList) ;
  //--- Branch of parse/rewind instruction
    _inLexique.setParsingContext (context_182197) ;
    nt_constant_while_before_in_foreach_instruction_secondPhase (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_inSemanticContext, var_cas_foreachEnumerationList, var_cas_whileExpression, var_cas_do_instructionList) ;
  //--- End of parse/rewind instruction
  GGS_typeInstructionList  var_cas_between_instructionList ;
  var_cas_between_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4842)) ;
  switch (select_semantics_parser_52 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { const GGS_typeCplusPlusName _var_182650 = var_cas_indexVariable ; // CAST instruction
        if (_var_182650.getPtr () != NULL) {
          macroValidPointer (_var_182650.getPtr ()) ;
          if (typeid (cPtr_typeAutomaticName) == typeid (* (_var_182650.getPtr ()))) {
            const GGS_typeAutomaticName var_cas_a (_var_182650.getPtr ()) ;
            var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_a.reader_mName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4848)), var_cas_a.reader_mVariableLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (4848)) COMMA_HERE), GGS_typeGalgas_uint ::constructor_new (_inLexique COMMA_HERE), var_cas_indexVariable COMMA_SOURCE_FILE_AT_LINE (4847)) ;
          }else{
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_between) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_between_instructionList, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4842)) ;
  GGS_typeInstructionList  var_cas_after_instructionList ;
  var_cas_after_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4867)) ;
  switch (select_semantics_parser_53 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { const GGS_typeCplusPlusName _var_183417 = var_cas_indexVariable ; // CAST instruction
        if (_var_183417.getPtr () != NULL) {
          macroValidPointer (_var_183417.getPtr ()) ;
          if (typeid (cPtr_typeAutomaticName) == typeid (* (_var_183417.getPtr ()))) {
            const GGS_typeAutomaticName var_cas_a (_var_183417.getPtr ()) ;
            var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_a.reader_mName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4873)), var_cas_a.reader_mVariableLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (4873)) COMMA_HERE), GGS_typeGalgas_uint ::constructor_new (_inLexique COMMA_HERE), var_cas_indexVariable COMMA_SOURCE_FILE_AT_LINE (4872)) ;
          }else{
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_after) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_after_instructionList, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4867)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (4812)) ;
  var_cas_instruction = GGS_typeForeachInstruction ::constructor_new (_inLexique, var_cas_foreachEnumerationList, var_cas_indexVariable, var_cas_whileExpression, var_cas_before_instructionList, var_cas_do_instructionList, var_cas_between_instructionList, var_cas_after_instructionList COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4802_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_182197 = _inLexique.parsingContext () ;
    nt_constant_while_before_in_foreach_instruction_parse (_inLexique) ;
  //--- Branch of parse/rewind instruction
    _inLexique.setParsingContext (context_182197) ;
    nt_constant_while_before_in_foreach_instruction_parse (_inLexique) ;
  //--- End of parse/rewind instruction
  switch (select_semantics_parser_52 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_between) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_parser_53 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_after) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'parse_match_operand'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_operand_semantics_parser_4912_26_ (galgas_scanner & _inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  &var_cas_outCppName,
                                GGS_lstring  &var_cas_outBaseTypeName,
                                GGS_location  &var_cas_outVarLocation,
                                GGS_bool &var_cas_outIsEnumeration,
                                GGS_enumConstantMap  &var_cas_outEnumMessageMap) {
  GGS_lstring  var_cas_variableName ;
  GGS_AC_galgasType  var_cas_type ;
  nt_read_access_ (_inLexique, var_cas_variableName, var_cas_outCppName, var_cas_type, var_cas_ioVariablesMap) ;
  var_cas_outVarLocation = GGS_location (_inLexique) ;
  { const GGS_AC_galgasType _var_185470 = var_cas_type ; // CAST instruction
    if (_var_185470.getPtr () != NULL) {
      macroValidPointer (_var_185470.getPtr ()) ;
      if (dynamic_cast <cPtr_typeGalgasClassType *> (_var_185470.getPtr ()) != NULL) {
        const GGS_typeGalgasClassType var_cas_t (_var_185470.getPtr ()) ;
        var_cas_outBaseTypeName = var_cas_t.reader_mClassTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4931)) ;
        var_cas_outIsEnumeration = GGS_bool (true, false) ;
        var_cas_outEnumMessageMap = GGS_enumConstantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      }else if (dynamic_cast <cPtr_typeGalgas_enum *> (_var_185470.getPtr ()) != NULL) {
        const GGS_typeGalgas_enum var_cas_e (_var_185470.getPtr ()) ;
        var_cas_outBaseTypeName = var_cas_e.reader_mEnumTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4935)) ;
        var_cas_outIsEnumeration = GGS_bool (true, true) ;
        var_cas_outEnumMessageMap = var_cas_e.reader_mEnumConstantesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4937)) ;
      }else{
        GGS_string var_cas_actualTypeName ;
        const GGS_AC_galgasType  _temp_185234 = var_cas_type ;
        if (_temp_185234._isBuilt ()) {
          _temp_185234 (HERE)->method_getTypeName (_inLexique, var_cas_actualTypeName COMMA_SOURCE_FILE_AT_LINE (4940)) ;
        }
        var_cas_variableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the type of this variable is '@"))._operator_concat (var_cas_actualTypeName))._operator_concat (GGS_string (true, "' ; I was expected an enumeration type or an abstract type")) COMMA_SOURCE_FILE_AT_LINE (4944)) ;
        var_cas_outBaseTypeName._drop () ;
        var_cas_outIsEnumeration._drop () ;
        var_cas_outEnumMessageMap._drop () ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_operand_semantics_parser_4912_26_parse (galgas_scanner & _inLexique) {
  nt_read_access_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_4950_23_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  var_cas_inVarLocation,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  /* var_cas_inEnumMessageMap */,
                                GGS_lstring  &var_cas_outTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  _temp_186018 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (_temp_186018._isBuilt ()) {
    _temp_186018 (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (4963)) ;
  }
  GGS_AC_galgasType  var_cas_definitionClasse1 ;
  var_cas_definitionClasse1 = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (4964)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (4964)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_definitionClasse1.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (4966)) ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 ;
  var_cas_tableDesClassesAncetresType1 = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4967)) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 ;
  var_cas_listeAttributs1 = var_cas_classType.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (4968)) ;
  GGS_bool var_cas_isAbstract ;
  var_cas_isAbstract = var_cas_classType.reader_mClassIsAbstract (_inLexique COMMA_SOURCE_FILE_AT_LINE (4969)) ;
  if ((var_cas_isAbstract).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "an abstract class is not allowed here") COMMA_SOURCE_FILE_AT_LINE (4973)) ;
  }
  if ((var_cas_inIsEnumeration).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "a constant of '@"))._operator_concat (var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4976))))._operator_concat (GGS_string (true, "' enumeration type is expected here")) COMMA_SOURCE_FILE_AT_LINE (4977)) ;
  }else if (((var_cas_tableDesClassesAncetresType1.reader_hasKey (_inLexique, var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4977)) COMMA_SOURCE_FILE_AT_LINE (4977)))._operator_not ()).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This type does not inherit from '"))._operator_concat (var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4978))))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (4979)) ;
  }
  GGS_bool automatic_var_20 ;
  nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_inVarLocation, GGS_localConstantBuildStyleEnum::constructor_listStyle (_inLexique COMMA_HERE), GGS_bool (true, false), automatic_var_20) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_4950_23_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  nt_parse_effective_input_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_4993_23_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  /* var_cas_inVarLocation */,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  var_cas_inEnumMessageMap,
                                GGS_lstring  &var_cas_outEnumConstantName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outEnumConstantName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  if ((var_cas_inIsEnumeration).isBuiltAndTrue ()) {
    GGS_bool automatic_var_21 ;
    const GGS_enumConstantMap  _temp_187819 = var_cas_inEnumMessageMap ;
    if (_temp_187819._isBuilt ()) {
      _temp_187819 (HERE)->method_searchKey (_inLexique, var_cas_outEnumConstantName, automatic_var_21 COMMA_SOURCE_FILE_AT_LINE (5006)) ;
    }
  }else{
    var_cas_outEnumConstantName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "a class that inherit from '@"))._operator_concat (var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5008))))._operator_concat (GGS_string (true, "' abstract class is expected here")) COMMA_SOURCE_FILE_AT_LINE (5009)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_4993_23_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_5014_27_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_operand1_cppName ;
  GGS_lstring  var_cas_operand1_typeName ;
  GGS_location  var_cas_operand1_location ;
  GGS_bool var_cas_operand1_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand1_enumMessageMap ;
  nt_parse_match_operand_ (_inLexique, var_cas_ioVariablesMap, var_cas_operand1_cppName, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_operand2_cppName ;
  GGS_lstring  var_cas_operand2_typeName ;
  GGS_location  var_cas_operand2_location ;
  GGS_bool var_cas_operand2_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand2_enumMessageMap ;
  nt_parse_match_operand_ (_inLexique, var_cas_ioVariablesMap, var_cas_operand2_cppName, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_L_matchInstructionCasesList  var_cas_casesList ;
  var_cas_casesList = GGS_L_matchInstructionCasesList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (5055)) ;
  { bool syntaxRepeat_54 = true ;
    while (syntaxRepeat_54) {
      switch (select_repeat_semantics_parser_54 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (5059)) ;
          GGS_lstring  var_cas_case1_name ;
          nt_parse_match_case_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap, var_cas_case1_name) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
          GGS_lstring  var_cas_case2_name ;
          nt_parse_match_case_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap, var_cas_case2_name) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          GGS_typeInstructionList  var_cas_instructionsList ;
          var_cas_instructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
          nt_semantic_instructions_list_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inSemanticContext) ;
          var_cas_casesList._addAssign_operation (var_cas_case1_name, var_cas_case2_name, var_cas_instructionsList) ;
          var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (5059)) ;
          } break ;
        default :
          syntaxRepeat_54 = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (5099)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_elsePartInstructionsList ;
  var_cas_elsePartInstructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elsePartInstructionsList, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (5099)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (5055)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeMatchInstruction ::constructor_new (_inLexique, var_cas_operand1_location, var_cas_operand2_location, var_cas_operand1_cppName, var_cas_operand2_cppName, var_cas_operand1_typeName, var_cas_operand2_typeName, var_cas_operand1_isEnumeration, var_cas_operand2_isEnumeration, var_cas_casesList, var_cas_elsePartInstructionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_5014_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  nt_parse_match_operand_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
  nt_parse_match_operand_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat_54 = true ;
    while (syntaxRepeat_54) {
      switch (select_repeat_semantics_parser_54 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          nt_parse_match_case_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
          nt_parse_match_case_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          nt_semantic_instructions_list_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_54 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Implementation of production rule 'semantic_instructions_list_no_verif'   *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_no_verif_semantics_parser_5131_42_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  { bool syntaxRepeat_55 = true ;
    while (syntaxRepeat_55) {
      switch (select_repeat_semantics_parser_55 (_inLexique)) {
        case 2 : {
          nt_semantic_instruction_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inSemanticContext) ;
          } break ;
        default :
          syntaxRepeat_55 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_no_verif_semantics_parser_5131_42_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_55 = true ;
    while (syntaxRepeat_55) {
      switch (select_repeat_semantics_parser_55 (_inLexique)) {
        case 2 : {
          nt_semantic_instruction_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_55 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_5156_26_ (galgas_scanner & _inLexique,
                                const GGS_lstring  /* var_cas_inTypeName */,
                                const GGS_lstring  /* var_cas_inTargetVarName */,
                                const GGS_typeCplusPlusName  var_cas_inVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */) {
  var_cas_ioInstructionList._addAssign_operation (GGS_typeInstructionDeclarationVarLocale ::constructor_new (_inLexique, var_cas_inVariableCppName, var_cas_inVariableType COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_5156_26_parse (galgas_scanner & /* _inLexique */) {
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_5172_26_ (galgas_scanner & _inLexique,
                                const GGS_lstring  /* var_cas_inTypeName */,
                                const GGS_lstring  var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  ::routine_checkAssignmentTypesCompatibility (_inLexique,  var_cas_inVariableType,  var_cas_sourceType,  GGS_location (_inLexique),  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (5196)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_declarationInstructionWithAssignment ::constructor_new (_inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  GGS_AC_galgasType  automatic_var_22 ;
  GGS_typeCplusPlusName  automatic_var_23 ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, automatic_var_22, automatic_var_23 COMMA_SOURCE_FILE_AT_LINE (5201)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_5172_26_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_5206_26_ (galgas_scanner & _inLexique,
                                const GGS_lstring  /* var_cas_inTypeName */,
                                const GGS_lstring  var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  GGS_lstring  var_cas_constructorName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_constructorName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  GGS_bool var_cas_hasLexiqueAndLocationArguments ;
  const GGS_AC_galgasType  _temp_195222 = var_cas_inVariableType ;
  if (_temp_195222._isBuilt ()) {
    _temp_195222 (HERE)->method_handleConstructorCall (_inLexique, var_cas_constructorName, var_cas_listeAttributsSemantiques, var_cas_hasLexiqueAndLocationArguments COMMA_SOURCE_FILE_AT_LINE (5224)) ;
  }
  GGS_typeExpressionList  var_cas_expressionList ;
  nt_output_expression_list_ (_inLexique, var_cas_expressionList, var_cas_listeAttributsSemantiques, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_e ;
  var_cas_e = GGS_typeConstructorExpression ::constructor_new (_inLexique, var_cas_inVariableType, var_cas_constructorName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5239)), var_cas_hasLexiqueAndLocationArguments, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (GGS_C_declarationInstructionWithAssignment ::constructor_new (_inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_e COMMA_HERE)) ;
  GGS_AC_galgasType  automatic_var_24 ;
  GGS_typeCplusPlusName  automatic_var_25 ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, automatic_var_24, automatic_var_25 COMMA_SOURCE_FILE_AT_LINE (5245)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_5206_26_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_output_expression_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5254_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  GGS_lstring  var_cas_mapindexTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapindexTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_56 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5268)) COMMA_SOURCE_FILE_AT_LINE (5268)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5269)) COMMA_SOURCE_FILE_AT_LINE (5269))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapindexType ::constructor_new (_inLexique, var_cas_mapindexTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5271)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      GGS_lstring  var_cas_mapTypeName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      const GGS_M_semanticsEntitiesForUse  _temp_197366 = var_cas_ioComponentSemanticsEntitiesMap ;
      if (_temp_197366._isBuilt ()) {
        _temp_197366 (HERE)->method_searchKey (_inLexique, var_cas_mapTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (5278)) ;
      }
      GGS_AC_galgasType  var_cas_aType ;
      var_cas_aType = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_theEntity.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5279)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (5279)) ;
      GGS_typeGalgasMapType  var_cas_mapType ;
      var_cas_mapType = GGS_typeGalgasMapType::_castFrom (_inLexique, var_cas_aType.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5280)) ;
      GGS_typeListeAttributsSemantiques  var_cas_mapAttributesList ;
      var_cas_mapAttributesList = var_cas_mapType.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (5281)) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesSurcharger ;
      var_cas_tableMethodesSurcharger = var_cas_mapType.reader_aTableMethodesSurcharger (_inLexique COMMA_SOURCE_FILE_AT_LINE (5282)) ;
      GGS_mapModifierMap  var_cas_modifierMethodMap ;
      var_cas_modifierMethodMap = var_cas_mapType.reader_mModifierMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (5283)) ;
      GGS_mapMethodMap  var_cas_readerMethodMap ;
      var_cas_readerMethodMap = var_cas_mapType.reader_mReaderMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (5284)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_mapIndexSearchReaderMap  var_cas_mapIndexSearchReaderMap ;
      var_cas_mapIndexSearchReaderMap = GGS_mapIndexSearchReaderMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_57 = true ;
        while (syntaxRepeat_57) {
          switch (select_repeat_semantics_parser_57 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_searchReaderName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_searchReaderName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              GGS_lstring  var_cas_mapindexErrorMessage ;
              _inLexique._assignFromAttribute_tokenString (var_cas_mapindexErrorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              if (var_cas_mapindexErrorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (5297)) ;
              }
              var_cas_mapIndexSearchReaderMap.modifier_insertKey (_inLexique, var_cas_searchReaderName, var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (5298)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_57 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_t ;
      var_cas_t = GGS_typeGalgasMapindexType ::constructor_new (_inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap, var_cas_tableMethodesSurcharger, var_cas_modifierMethodMap, var_cas_readerMethodMap COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_t COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (5311)) ;
      GGS_typeEntityToGenerate  var_cas_e ;
      var_cas_e = GGS_C_mapindexToImplement ::constructor_new (_inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_e) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5254_28_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  GGS_lstring  var_cas_mapindexTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapindexTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_56 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5334)) COMMA_SOURCE_FILE_AT_LINE (5334)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5335)) COMMA_SOURCE_FILE_AT_LINE (5335))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapindexType ::constructor_new (_inLexique, var_cas_mapindexTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5337)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      GGS_lstring  var_cas_mapTypeName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      const GGS_M_semanticsEntitiesForUse  _temp_199891 = var_cas_ioComponentSemanticsEntitiesMap ;
      if (_temp_199891._isBuilt ()) {
        _temp_199891 (HERE)->method_searchKey (_inLexique, var_cas_mapTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (5344)) ;
      }
      GGS_AC_galgasType  var_cas_aType ;
      var_cas_aType = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_theEntity.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5345)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (5345)) ;
      GGS_typeGalgasMapType  var_cas_mapType ;
      var_cas_mapType = GGS_typeGalgasMapType::_castFrom (_inLexique, var_cas_aType.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5346)) ;
      GGS_typeListeAttributsSemantiques  var_cas_mapAttributesList ;
      var_cas_mapAttributesList = var_cas_mapType.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (5347)) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesSurcharger ;
      var_cas_tableMethodesSurcharger = var_cas_mapType.reader_aTableMethodesSurcharger (_inLexique COMMA_SOURCE_FILE_AT_LINE (5348)) ;
      GGS_mapModifierMap  var_cas_modifierMethodMap ;
      var_cas_modifierMethodMap = var_cas_mapType.reader_mModifierMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (5349)) ;
      GGS_mapMethodMap  var_cas_readerMethodMap ;
      var_cas_readerMethodMap = var_cas_mapType.reader_mReaderMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (5350)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_mapIndexSearchReaderMap  var_cas_mapIndexSearchReaderMap ;
      var_cas_mapIndexSearchReaderMap = GGS_mapIndexSearchReaderMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_57 = true ;
        while (syntaxRepeat_57) {
          switch (select_repeat_semantics_parser_57 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_searchReaderName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_searchReaderName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              GGS_lstring  var_cas_mapindexErrorMessage ;
              _inLexique._assignFromAttribute_tokenString (var_cas_mapindexErrorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              if (var_cas_mapindexErrorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (5363)) ;
              }
              var_cas_mapIndexSearchReaderMap.modifier_insertKey (_inLexique, var_cas_searchReaderName, var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (5364)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_57 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_t ;
      var_cas_t = GGS_typeGalgasMapindexType ::constructor_new (_inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap, var_cas_tableMethodesSurcharger, var_cas_modifierMethodMap, var_cas_readerMethodMap COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_t COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (5377)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5254_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_56 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat_57 = true ;
        while (syntaxRepeat_57) {
          switch (select_repeat_semantics_parser_57 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_57 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5387_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mapTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_58 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5401)) COMMA_SOURCE_FILE_AT_LINE (5401)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5402)) COMMA_SOURCE_FILE_AT_LINE (5402))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapType ::constructor_new (_inLexique, var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5404)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
      GGS_lstring  var_cas_cppClassName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_cppClassName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      var_cas_cppClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old style map definition") COMMA_SOURCE_FILE_AT_LINE (5411)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_59 = true ;
        while (syntaxRepeat_59) {
          switch (select_repeat_semantics_parser_59 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5424)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5431)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut ;
              var_cas_tableDebut = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin ;
              var_cas_tableFin = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_tableMethodesBloc.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin COMMA_SOURCE_FILE_AT_LINE (5466)) ;
              } break ;
            default :
              syntaxRepeat_59 = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_EXformalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_EXformalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring ::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint ::constructor_new (_inLexique COMMA_HERE) ;
      {
        GGS_insertOrSearchMethodList::cEnumerator enumerator_205397 (var_cas_insertMethodList, true) ;
        const GGS_insertOrSearchMethodList::cElement * operand_205397 = NULL ;
        while (((operand_205397 = enumerator_205397.nextObject ()))) {
          macroValidPointer (operand_205397) ;
          GGS_L_EXsignature  var_cas_methodSignature ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_205594 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_205594 = NULL ;
            while (((operand_205594 = enumerator_205594.nextObject ()))) {
              macroValidPointer (operand_205594) ;
              var_cas_methodSignature._addAssign_operation (operand_205594->mAttributType, var_cas_inPassingMode) ;
            }
          }
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_205397->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5494)) ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_206024 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_206024 = NULL ;
            while (((operand_206024 = enumerator_206024.nextObject ()))) {
              macroValidPointer (operand_206024) ;
              var_cas_methodSignature._addAssign_operation (operand_206024->mAttributType, var_cas_inPassingMode) ;
            }
          }
          GGS_lstring  var_cas_insertKeyAndGetIndexName ;
          var_cas_insertKeyAndGetIndexName = GGS_lstring ::constructor_new (_inLexique, (operand_205397->mMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5502)))._operator_concat (GGS_string (true, "GetIndex")), operand_205397->mMethodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (5502)) COMMA_HERE) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5503)) ;
        }
      }
      {
        GGS_insertOrSearchMethodList::cEnumerator enumerator_206373 (var_cas_searchMethodList, true) ;
        const GGS_insertOrSearchMethodList::cElement * operand_206373 = NULL ;
        while (((operand_206373 = enumerator_206373.nextObject ()))) {
          macroValidPointer (operand_206373) ;
          GGS_L_EXsignature  var_cas_methodSignature ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_206568 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_206568 = NULL ;
            while (((operand_206568 = enumerator_206568.nextObject ()))) {
              macroValidPointer (operand_206568) ;
              var_cas_methodSignature._addAssign_operation (operand_206568->mAttributType, var_cas_outPassingMode) ;
            }
          }
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_206373->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5512)) ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_206996 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_206996 = NULL ;
            while (((operand_206996 = enumerator_206996.nextObject ()))) {
              macroValidPointer (operand_206996) ;
              var_cas_methodSignature._addAssign_operation (operand_206996->mAttributType, var_cas_outPassingMode) ;
            }
          }
          GGS_lstring  var_cas_insertKeyAndGetIndexName ;
          var_cas_insertKeyAndGetIndexName = GGS_lstring ::constructor_new (_inLexique, (operand_206373->mMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5520)))._operator_concat (GGS_string (true, "GetIndex")), operand_206373->mMethodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (5520)) COMMA_HERE) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5521)) ;
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType ::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_mapMethodMap ::constructor_emptyMap (_inLexique COMMA_HERE) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5532)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_typeDefinitionTableAimplementer ::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_cppClassName, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_tableMethodesBloc COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 3 : {
      GGS_lstring  var_cas_enumTypeName ;
      GGS_lstring  var_cas_checkFinalStateMethod ;
      switch (select_semantics_parser_60 (_inLexique)) {
        case 1 : {
          var_cas_enumTypeName = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
          var_cas_checkFinalStateMethod = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
          _inLexique._assignFromAttribute_tokenString (var_cas_enumTypeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          _inLexique._assignFromAttribute_tokenString (var_cas_checkFinalStateMethod) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_insertOrSearchMethodList  var_cas_removeMethodList ;
      var_cas_removeMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_EXformalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_EXformalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring ::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint ::constructor_new (_inLexique COMMA_HERE) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_mapMethodMap  var_cas_mapReaderMethodMap ;
      var_cas_mapReaderMethodMap = GGS_mapMethodMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_61 = true ;
        while (syntaxRepeat_61) {
          switch (select_repeat_semantics_parser_61 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (5588)) ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_210362 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_210362 = NULL ;
                while (((operand_210362 = enumerator_210362.nextObject ()))) {
                  macroValidPointer (operand_210362) ;
                  var_cas_methodSignature._addAssign_operation (operand_210362->mAttributType, var_cas_outPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5596)) ;
              var_cas_removeMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5597)), GGS_bool (true, false), GGS_string (true, "")) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5599)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_210951 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_210951 = NULL ;
                  while (((operand_210951 = enumerator_210951.nextObject ()))) {
                    macroValidPointer (operand_210951) ;
                    var_cas_getIndexMethodSignature._addAssign_operation (operand_210951->mAttributType, var_cas_outPassingMode) ;
                  }
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5606)) ;
                var_cas_removeMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5607)), GGS_bool (true, true), GGS_string (true, "")) ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (5615)) ;
              }
              GGS_string var_cas_shadowErrorMessage ;
              switch (select_semantics_parser_62 (_inLexique)) {
                case 1 : {
                  var_cas_shadowErrorMessage = GGS_string (true, "") ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  GGS_lstring  var_cas_shadowErrorMessageString ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_shadowErrorMessageString) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (var_cas_shadowErrorMessageString._isBuilt ()) {
                    ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_shadowErrorMessageString COMMA_SOURCE_FILE_AT_LINE (5623)) ;
                  }
                  var_cas_shadowErrorMessage = var_cas_shadowErrorMessageString.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5624)) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_212047 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_212047 = NULL ;
                while (((operand_212047 = enumerator_212047.nextObject ()))) {
                  macroValidPointer (operand_212047) ;
                  var_cas_methodSignature._addAssign_operation (operand_212047->mAttributType, var_cas_inPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5633)) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5634)), GGS_bool (true, false), var_cas_shadowErrorMessage) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5636)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_212651 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_212651 = NULL ;
                  while (((operand_212651 = enumerator_212651.nextObject ()))) {
                    macroValidPointer (operand_212651) ;
                    var_cas_getIndexMethodSignature._addAssign_operation (operand_212651->mAttributType, var_cas_inPassingMode) ;
                  }
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5643)) ;
                var_cas_insertMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5644)), GGS_bool (true, true), var_cas_shadowErrorMessage) ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_K_escapeCharacters (_inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (5652)) ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_213433 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_213433 = NULL ;
                while (((operand_213433 = enumerator_213433.nextObject ()))) {
                  macroValidPointer (operand_213433) ;
                  var_cas_methodSignature._addAssign_operation (operand_213433->mAttributType, var_cas_outPassingMode) ;
                }
              }
              var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5660)) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5661)), GGS_bool (true, false), GGS_string (true, "")) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5663)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_214052 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_214052 = NULL ;
                  while (((operand_214052 = enumerator_214052.nextObject ()))) {
                    macroValidPointer (operand_214052) ;
                    var_cas_getIndexMethodSignature._addAssign_operation (operand_214052->mAttributType, var_cas_outPassingMode) ;
                  }
                }
                var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5670)) ;
                var_cas_searchMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5671)), GGS_bool (true, true), GGS_string (true, "")) ;
              }
              } break ;
            default :
              syntaxRepeat_61 = false ;
              break ;
          }
        }
      }
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_214468 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_214468 = NULL ;
        while (((operand_214468 = enumerator_214468.nextObject ()))) {
          macroValidPointer (operand_214468) ;
          GGS_string var_cas_modifierName ;
          var_cas_modifierName = ((GGS_string (true, "set"))._operator_concat (operand_214468->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter (_inLexique COMMA_SOURCE_FILE_AT_LINE (5676))))._operator_concat (GGS_string (true, "ForKey")) ;
          GGS_L_EXsignature  var_cas_modifierSignature ;
          var_cas_modifierSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_modifierSignature._addAssign_operation (operand_214468->mAttributType, var_cas_inPassingMode) ;
          var_cas_modifierSignature._addAssign_operation (GGS_typeGalgas_string ::constructor_new (_inLexique COMMA_HERE), var_cas_inPassingMode) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_modifierName, GGS_location (_inLexique) COMMA_HERE), var_cas_modifierSignature COMMA_SOURCE_FILE_AT_LINE (5680)) ;
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType ::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapReaderMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5691)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_mapToImplement ::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_enumTypeName, var_cas_checkFinalStateMethod, var_cas_listeTousAttributsSemantiques, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_removeMethodList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5387_28_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mapTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_58 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5719)) COMMA_SOURCE_FILE_AT_LINE (5719)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5719)) COMMA_SOURCE_FILE_AT_LINE (5719))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapType ::constructor_new (_inLexique, var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5721)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
      GGS_lstring  var_cas_cppClassName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_cppClassName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_59 = true ;
        while (syntaxRepeat_59) {
          switch (select_repeat_semantics_parser_59 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5740)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5747)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut ;
              var_cas_tableDebut = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin ;
              var_cas_tableFin = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_tableMethodesBloc.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin COMMA_SOURCE_FILE_AT_LINE (5782)) ;
              } break ;
            default :
              syntaxRepeat_59 = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_EXformalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_EXformalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring ::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint ::constructor_new (_inLexique COMMA_HERE) ;
      {
        GGS_insertOrSearchMethodList::cEnumerator enumerator_219235 (var_cas_insertMethodList, true) ;
        const GGS_insertOrSearchMethodList::cElement * operand_219235 = NULL ;
        while (((operand_219235 = enumerator_219235.nextObject ()))) {
          macroValidPointer (operand_219235) ;
          GGS_L_EXsignature  var_cas_methodSignature ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_219432 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_219432 = NULL ;
            while (((operand_219432 = enumerator_219432.nextObject ()))) {
              macroValidPointer (operand_219432) ;
              var_cas_methodSignature._addAssign_operation (operand_219432->mAttributType, var_cas_inPassingMode) ;
            }
          }
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_219235->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5810)) ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_219862 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_219862 = NULL ;
            while (((operand_219862 = enumerator_219862.nextObject ()))) {
              macroValidPointer (operand_219862) ;
              var_cas_methodSignature._addAssign_operation (operand_219862->mAttributType, var_cas_inPassingMode) ;
            }
          }
          GGS_lstring  var_cas_insertKeyAndGetIndexName ;
          var_cas_insertKeyAndGetIndexName = GGS_lstring ::constructor_new (_inLexique, (operand_219235->mMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5818)))._operator_concat (GGS_string (true, "GetIndex")), operand_219235->mMethodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (5818)) COMMA_HERE) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5819)) ;
        }
      }
      {
        GGS_insertOrSearchMethodList::cEnumerator enumerator_220211 (var_cas_searchMethodList, true) ;
        const GGS_insertOrSearchMethodList::cElement * operand_220211 = NULL ;
        while (((operand_220211 = enumerator_220211.nextObject ()))) {
          macroValidPointer (operand_220211) ;
          GGS_L_EXsignature  var_cas_methodSignature ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_220408 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_220408 = NULL ;
            while (((operand_220408 = enumerator_220408.nextObject ()))) {
              macroValidPointer (operand_220408) ;
              var_cas_methodSignature._addAssign_operation (operand_220408->mAttributType, var_cas_outPassingMode) ;
            }
          }
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_220211->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5828)) ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_220839 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_220839 = NULL ;
            while (((operand_220839 = enumerator_220839.nextObject ()))) {
              macroValidPointer (operand_220839) ;
              var_cas_methodSignature._addAssign_operation (operand_220839->mAttributType, var_cas_outPassingMode) ;
            }
          }
          GGS_lstring  var_cas_insertKeyAndGetIndexName ;
          var_cas_insertKeyAndGetIndexName = GGS_lstring ::constructor_new (_inLexique, (operand_220211->mMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5836)))._operator_concat (GGS_string (true, "GetIndex")), operand_220211->mMethodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (5836)) COMMA_HERE) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5837)) ;
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType ::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_mapMethodMap ::constructor_emptyMap (_inLexique COMMA_HERE) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5848)) ;
      GGS_TypeModel  var_cas_type ;
      var_cas_type = GGS_MapModel ::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (5850)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 3 : {
      switch (select_semantics_parser_60 (_inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_EXformalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_EXformalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring ::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint ::constructor_new (_inLexique COMMA_HERE) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_mapMethodMap  var_cas_mapReaderMethodMap ;
      var_cas_mapReaderMethodMap = GGS_mapMethodMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_61 = true ;
        while (syntaxRepeat_61) {
          switch (select_repeat_semantics_parser_61 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_26 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_26) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_223198 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_223198 = NULL ;
                while (((operand_223198 = enumerator_223198.nextObject ()))) {
                  macroValidPointer (operand_223198) ;
                  var_cas_methodSignature._addAssign_operation (operand_223198->mAttributType, var_cas_outPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5897)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5899)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_223743 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_223743 = NULL ;
                  while (((operand_223743 = enumerator_223743.nextObject ()))) {
                    macroValidPointer (operand_223743) ;
                    var_cas_getIndexMethodSignature._addAssign_operation (operand_223743->mAttributType, var_cas_outPassingMode) ;
                  }
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5906)) ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_27 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_27) ;
              switch (select_semantics_parser_62 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_224424 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_224424 = NULL ;
                while (((operand_224424 = enumerator_224424.nextObject ()))) {
                  macroValidPointer (operand_224424) ;
                  var_cas_methodSignature._addAssign_operation (operand_224424->mAttributType, var_cas_inPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5925)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5927)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_224968 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_224968 = NULL ;
                  while (((operand_224968 = enumerator_224968.nextObject ()))) {
                    macroValidPointer (operand_224968) ;
                    var_cas_getIndexMethodSignature._addAssign_operation (operand_224968->mAttributType, var_cas_inPassingMode) ;
                  }
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5934)) ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_28 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_28) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_225569 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_225569 = NULL ;
                while (((operand_225569 = enumerator_225569.nextObject ()))) {
                  macroValidPointer (operand_225569) ;
                  var_cas_methodSignature._addAssign_operation (operand_225569->mAttributType, var_cas_outPassingMode) ;
                }
              }
              var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5948)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5950)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_226154 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_226154 = NULL ;
                  while (((operand_226154 = enumerator_226154.nextObject ()))) {
                    macroValidPointer (operand_226154) ;
                    var_cas_getIndexMethodSignature._addAssign_operation (operand_226154->mAttributType, var_cas_outPassingMode) ;
                  }
                }
                var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5957)) ;
              }
              } break ;
            default :
              syntaxRepeat_61 = false ;
              break ;
          }
        }
      }
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_226488 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_226488 = NULL ;
        while (((operand_226488 = enumerator_226488.nextObject ()))) {
          macroValidPointer (operand_226488) ;
          GGS_string var_cas_modifierName ;
          var_cas_modifierName = ((GGS_string (true, "set"))._operator_concat (operand_226488->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter (_inLexique COMMA_SOURCE_FILE_AT_LINE (5962))))._operator_concat (GGS_string (true, "ForKey")) ;
          GGS_L_EXsignature  var_cas_modifierSignature ;
          var_cas_modifierSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_modifierSignature._addAssign_operation (operand_226488->mAttributType, var_cas_inPassingMode) ;
          var_cas_modifierSignature._addAssign_operation (GGS_typeGalgas_string ::constructor_new (_inLexique COMMA_HERE), var_cas_inPassingMode) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_modifierName, GGS_location (_inLexique) COMMA_HERE), var_cas_modifierSignature COMMA_SOURCE_FILE_AT_LINE (5966)) ;
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType ::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapReaderMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5977)) ;
      GGS_TypeModel  var_cas_type ;
      var_cas_type = GGS_MapModel ::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (5979)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5387_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_58 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      { bool syntaxRepeat_59 = true ;
        while (syntaxRepeat_59) {
          switch (select_repeat_semantics_parser_59 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              nt_ex_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              nt_ex_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_59 = false ;
              break ;
          }
        }
      }
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 3 : {
      switch (select_semantics_parser_60 (_inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      { bool syntaxRepeat_61 = true ;
        while (syntaxRepeat_61) {
          switch (select_repeat_semantics_parser_61 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
              nt_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              nt_map_method_parse (_inLexique) ;
              switch (select_semantics_parser_62 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              nt_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_61 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'ex_map_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_ex_map_method_semantics_parser_5986_20_ (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_nomMethode,
                                GGS_lstring  &var_cas_outMessage) {
  _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outMessage) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_ex_map_method_semantics_parser_5986_20_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'map_method'               *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_map_method_semantics_parser_5998_17_ (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_methodName,
                                GGS_lstring  &var_cas_getIndexMethodName,
                                GGS_lstring  &var_cas_outMessage) {
  _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_63 (_inLexique)) {
    case 1 : {
      var_cas_getIndexMethodName = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_getIndexMethodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outMessage) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_map_method_semantics_parser_5998_17_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_63 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_beginning_by_abstract'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_beginning_by_abstract_semantics_parser_6021_50_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind ;
  var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_abstractMethod (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  _inLexique._assignFromAttribute_tokenString (var_cas_className) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (_inLexique, ((var_cas_className.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6048)))._operator_concat (GGS_string (true, ":")))._operator_concat (var_cas_methodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6048))), var_cas_methodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (6048)) COMMA_HERE) ;
  var_cas_ioSemanticContext.mCategoryMethodMap.modifier_insertKey (_inLexique, var_cas_key, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6049)) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  const GGS_M_semanticsEntitiesForUse  _temp_229852 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (_temp_229852._isBuilt ()) {
    _temp_229852 (HERE)->method_searchKey (_inLexique, var_cas_className, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (6052)) ;
  }
  GGS_AC_galgasType  var_cas_type ;
  var_cas_type = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6053)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (6053)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_type.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6054)) ;
  GGS_string var_cas_baseClassName ;
  GGS_typeSuperClassesMap  var_cas_ancestorClassesMap ;
  var_cas_ancestorClassesMap = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (6057)) ;
  {
    GGS_typeSuperClassesMap::cEnumerator enumerator_230321 (var_cas_ancestorClassesMap, true) ;
    const GGS_typeSuperClassesMap::cElement * operand_230321 = NULL ;
    while (((operand_230321 = enumerator_230321.nextObject ()))) {
      macroValidPointer (operand_230321) ;
      GGS_string var_cas_keyClassMethod ;
      var_cas_keyClassMethod = ((operand_230321->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6060)))._operator_concat (GGS_string (true, ":")))._operator_concat (var_cas_methodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6060))) ;
      if ((var_cas_ioSemanticContext.reader_mCategoryMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (6061)).reader_hasKey (_inLexique, var_cas_keyClassMethod COMMA_SOURCE_FILE_AT_LINE (6061))).isBuiltAndTrue ()) {
        var_cas_methodName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "this method is already defined for super class @"))._operator_concat (operand_230321->mKey))._operator_concat (GGS_string (true, ": you should use the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (6064)) ;
      }
    }
  }
  var_cas_baseClassName = var_cas_className.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6066)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList ;
  var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_listeEntitesAengendrer._addAssign_operation (GGS_categoryMethodToImplement ::constructor_new (_inLexique, var_cas_categoryMethodKind, var_cas_baseClassName, var_cas_className, var_cas_methodName, var_cas_listeTypeEtNomsArguments, var_cas_instructionList, var_cas_methodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (6077)) COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_beginning_by_abstract_semantics_parser_6021_50_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind ;
  var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_abstractMethod (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  _inLexique._assignFromAttribute_tokenString (var_cas_className) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (_inLexique, ((var_cas_className.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6106)))._operator_concat (GGS_string (true, ":")))._operator_concat (var_cas_methodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6106))), var_cas_methodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (6106)) COMMA_HERE) ;
  if (((var_cas_ioSemanticContext.reader_mCategoryMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (6107)).reader_hasKey (_inLexique, var_cas_key.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6107)) COMMA_SOURCE_FILE_AT_LINE (6107)))._operator_not ()).isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mCategoryMethodMap.modifier_insertKey (_inLexique, var_cas_key, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6108)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_beginning_by_abstract_semantics_parser_6021_50_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6119_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind ;
  switch (select_semantics_parser_64 (_inLexique)) {
    case 1 : {
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_baseMethod (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_overridingMethod (_inLexique COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  _inLexique._assignFromAttribute_tokenString (var_cas_className) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap ;
  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (_inLexique, ((var_cas_className.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6152)))._operator_concat (GGS_string (true, ":")))._operator_concat (var_cas_methodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6152))), var_cas_methodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (6152)) COMMA_HERE) ;
  var_cas_ioSemanticContext.mCategoryMethodMap.modifier_insertKey (_inLexique, var_cas_key, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6153)) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  const GGS_M_semanticsEntitiesForUse  _temp_234177 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (_temp_234177._isBuilt ()) {
    _temp_234177 (HERE)->method_searchKey (_inLexique, var_cas_className, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (6156)) ;
  }
  GGS_AC_galgasType  var_cas_type ;
  var_cas_type = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6157)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (6157)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_type.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6158)) ;
  GGS_string var_cas_baseClassName ;
  GGS_typeSuperClassesMap  var_cas_ancestorClassesMap ;
  var_cas_ancestorClassesMap = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (6161)) ;
  if (((var_cas_categoryMethodKind)._operator_isEqual (GGS_categoryMethodKind::constructor_overridingMethod (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
    var_cas_baseClassName = GGS_string (true, "") ;
    GGS_bool var_cas_found ;
    var_cas_found = GGS_bool (true, false) ;
    {
      GGS_typeSuperClassesMap::cEnumerator enumerator_234771 (var_cas_ancestorClassesMap, true) ;
      const GGS_typeSuperClassesMap::cElement * operand_234771 = NULL ;
      while (((operand_234771 = enumerator_234771.nextObject ()))
          && ((var_cas_found)._operator_not ().isBuiltAndTrue ())) {
        macroValidPointer (operand_234771) ;
        GGS_string var_cas_keyClassMethod ;
        var_cas_keyClassMethod = ((operand_234771->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6166)))._operator_concat (GGS_string (true, ":")))._operator_concat (var_cas_methodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6166))) ;
        var_cas_baseClassName = operand_234771->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6167)) ;
        var_cas_found = var_cas_ioSemanticContext.reader_mCategoryMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (6168)).reader_hasKey (_inLexique, var_cas_keyClassMethod COMMA_SOURCE_FILE_AT_LINE (6168)) ;
        if ((var_cas_found).isBuiltAndTrue ()) {
          GGS_categoryMethodKind var_cas_categoryMethodKind ;
          GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
          const GGS_EXcategoryMethodMap  _temp_235171 = var_cas_ioSemanticContext.reader_mCategoryMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (6172)) ;
          if (_temp_235171._isBuilt ()) {
            _temp_235171 (HERE)->method_searchKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_keyClassMethod, GGS_location (_inLexique) COMMA_HERE), var_cas_categoryMethodKind, var_cas_listeDeTypesPrecedenteDeclaration COMMA_SOURCE_FILE_AT_LINE (6172)) ;
          }
          ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (6173)) ;
          var_cas_found = (var_cas_categoryMethodKind)._operator_isNotEqual (GGS_categoryMethodKind::constructor_overridingMethod (_inLexique COMMA_HERE)) ;
        }
      }
    }
    if (((var_cas_found)._operator_not ()).isBuiltAndTrue ()) {
      var_cas_methodName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "this overriden method is not defined in any super class of @"))._operator_concat (var_cas_className))._operator_concat (GGS_string (true, ": you should remove the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (6184)) ;
    }
  }else{
    {
      GGS_typeSuperClassesMap::cEnumerator enumerator_235789 (var_cas_ancestorClassesMap, true) ;
      const GGS_typeSuperClassesMap::cElement * operand_235789 = NULL ;
      while (((operand_235789 = enumerator_235789.nextObject ()))) {
        macroValidPointer (operand_235789) ;
        GGS_string var_cas_keyClassMethod ;
        var_cas_keyClassMethod = ((operand_235789->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6187)))._operator_concat (GGS_string (true, ":")))._operator_concat (var_cas_methodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6187))) ;
        if ((var_cas_ioSemanticContext.reader_mCategoryMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (6188)).reader_hasKey (_inLexique, var_cas_keyClassMethod COMMA_SOURCE_FILE_AT_LINE (6188))).isBuiltAndTrue ()) {
          var_cas_methodName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "this method is already defined for super class @"))._operator_concat (operand_235789->mKey))._operator_concat (GGS_string (true, ": you should use the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (6191)) ;
        }
      }
    }
    var_cas_baseClassName = var_cas_className.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6193)) ;
  }
  {
    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_236246 (var_cas_classType.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (6196)), true) ;
    const GGS_typeListeAttributsSemantiques::cElement * operand_236246 = NULL ;
    while (((operand_236246 = enumerator_236246.nextObject ()))) {
      macroValidPointer (operand_236246) ;
      GGS_typeCplusPlusName  var_cas_cppName ;
      var_cas_cppName = GGS_typeOperandName ::constructor_new (_inLexique, var_cas_methodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (6198)), operand_236246->mAttributeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6199)), GGS_bool (true, false), GGS_bool (true, false) COMMA_HERE) ;
      var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_236246->mAttributeName, operand_236246->mAttributType, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (6203)) ;
    }
  }
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "self"), GGS_location (_inLexique) COMMA_HERE), var_cas_classType, GGS_typeCppThisInCategoryName ::constructor_new (_inLexique, var_cas_methodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (6215)) COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (6215)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList ;
  var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_instructionList, var_cas_ioSemanticContext) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (GGS_categoryMethodToImplement ::constructor_new (_inLexique, var_cas_categoryMethodKind, var_cas_baseClassName, var_cas_className, var_cas_methodName, var_cas_listeTypeEtNomsArguments, var_cas_instructionList, var_cas_methodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (6237)) COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6119_28_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind ;
  switch (select_semantics_parser_64 (_inLexique)) {
    case 1 : {
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_baseMethod (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_overridingMethod (_inLexique COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  _inLexique._assignFromAttribute_tokenString (var_cas_className) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap ;
  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (_inLexique, ((var_cas_className.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6272)))._operator_concat (GGS_string (true, ":")))._operator_concat (var_cas_methodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6272))), var_cas_methodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (6272)) COMMA_HERE) ;
  if (((var_cas_ioSemanticContext.reader_mCategoryMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (6273)).reader_hasKey (_inLexique, var_cas_key.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6273)) COMMA_SOURCE_FILE_AT_LINE (6273)))._operator_not ()).isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mCategoryMethodMap.modifier_insertKey (_inLexique, var_cas_key, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6274)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6119_28_parse (galgas_scanner & _inLexique) {
  switch (select_semantics_parser_64 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6290_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_65 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6304)) COMMA_SOURCE_FILE_AT_LINE (6304)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6304)) COMMA_SOURCE_FILE_AT_LINE (6304))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType ::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (6306)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      GGS_L_EXsignature  var_cas_inputSignature ;
      var_cas_inputSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_241059 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_241059 = NULL ;
        while (((operand_241059 = enumerator_241059.nextObject ()))) {
          macroValidPointer (operand_241059) ;
          var_cas_extractSignature._addAssign_operation (operand_241059->mAttributType, GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
          var_cas_inputSignature._addAssign_operation (operand_241059->mAttributType, GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE)) ;
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasListType ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature, var_cas_inputSignature COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6338)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_listTypeToImplement ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6290_28_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_65 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6359)) COMMA_SOURCE_FILE_AT_LINE (6359)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6359)) COMMA_SOURCE_FILE_AT_LINE (6359))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType ::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (6361)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      GGS_L_EXsignature  var_cas_inputSignature ;
      var_cas_inputSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_243250 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_243250 = NULL ;
        while (((operand_243250 = enumerator_243250.nextObject ()))) {
          macroValidPointer (operand_243250) ;
          var_cas_extractSignature._addAssign_operation (operand_243250->mAttributType, GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
          var_cas_inputSignature._addAssign_operation (operand_243250->mAttributType, GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE)) ;
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasListType ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature, var_cas_inputSignature COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6393)) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ListModel ::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (6395)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6290_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_65 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6405_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_66 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6419)) COMMA_SOURCE_FILE_AT_LINE (6419)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6419)) COMMA_SOURCE_FILE_AT_LINE (6419))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedSortedListType ::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (6421)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_245809 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_245809 = NULL ;
        while (((operand_245809 = enumerator_245809.nextObject ()))) {
          macroValidPointer (operand_245809) ;
          var_cas_extractSignature._addAssign_operation (operand_245809->mAttributType, GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasSortedListType ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_EXsortDescriptorList  var_cas_sortDescriptorList ;
      var_cas_sortDescriptorList = GGS_EXsortDescriptorList ::constructor_emptyList () ;
      GGS_stringset  var_cas_usedSortedAttributes ;
      var_cas_usedSortedAttributes = GGS_stringset ::constructor_emptySet () ;
      { bool syntaxRepeat_67 = true ;
        while (syntaxRepeat_67) {
            GGS_lstring  var_cas_sortAttribute ;
            _inLexique._assignFromAttribute_tokenString (var_cas_sortAttribute) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            if ((var_cas_usedSortedAttributes.reader_hasKey (_inLexique, var_cas_sortAttribute.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6456)) COMMA_SOURCE_FILE_AT_LINE (6456))).isBuiltAndTrue ()) {
              var_cas_sortAttribute.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this attribute is already used in sort list") COMMA_SOURCE_FILE_AT_LINE (6458)) ;
            }else{
              GGS_AC_galgasType  var_cas_definitionType ;
              const GGS_typeSemanticAttributesMap  _temp_246626 = var_cas_tableAttributs ;
              if (_temp_246626._isBuilt ()) {
                _temp_246626 (HERE)->method_searchKey (_inLexique, var_cas_sortAttribute, var_cas_definitionType COMMA_SOURCE_FILE_AT_LINE (6460)) ;
              }
              const GGS_AC_galgasType  _temp_246724 = var_cas_definitionType ;
              if (_temp_246724._isBuilt ()) {
                _temp_246724 (HERE)->method_acceptToBeSortKeyInSortedListDefinition (_inLexique, var_cas_sortAttribute COMMA_SOURCE_FILE_AT_LINE (6461)) ;
              }
              var_cas_usedSortedAttributes._addAssign_operation (var_cas_sortAttribute.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6462))) ;
            }
            GGS_bool var_cas_ascendingOrder ;
            switch (select_semantics_parser_68 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
                var_cas_ascendingOrder = GGS_bool (true, true) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
                var_cas_ascendingOrder = GGS_bool (true, false) ;
                } break ;
              default :
                break ;
            }
            var_cas_sortDescriptorList._addAssign_operation (var_cas_sortAttribute, var_cas_ascendingOrder) ;
          switch (select_repeat_semantics_parser_67 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_67 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6478)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_sortedListTypeToImplement ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_sortDescriptorList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6405_28_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_66 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6500)) COMMA_SOURCE_FILE_AT_LINE (6500)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6500)) COMMA_SOURCE_FILE_AT_LINE (6500))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedSortedListType ::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (6502)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_248817 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_248817 = NULL ;
        while (((operand_248817 = enumerator_248817.nextObject ()))) {
          macroValidPointer (operand_248817) ;
          var_cas_extractSignature._addAssign_operation (operand_248817->mAttributType, GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasSortedListType ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat_67 = true ;
        while (syntaxRepeat_67) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_semantics_parser_68 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
          switch (select_repeat_semantics_parser_67 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_67 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6544)) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ListModel ::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (6546)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6405_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_66 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat_67 = true ;
        while (syntaxRepeat_67) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_semantics_parser_68 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
          switch (select_repeat_semantics_parser_67 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_67 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'attributes_definition_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_attributes_definition_list_semantics_parser_6556_33_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                GGS_typeListModel  &var_cas_outAttributeListModel,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeAttributsSemantiquesCourants,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_listeAttributsSemantiquesCourants = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  var_cas_outAttributeListModel = GGS_typeListModel ::constructor_emptyList () ;
  { bool syntaxRepeat_69 = true ;
    while (syntaxRepeat_69) {
      switch (select_repeat_semantics_parser_69 (_inLexique)) {
        case 2 : {
          GGS_AC_galgasType  var_cas_definitionType ;
          GGS_lstring  var_cas_typeName ;
          nt_type_parsing_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
          GGS_lstring  var_cas_attributeName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_attributeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_tableAttributs.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_definitionType COMMA_SOURCE_FILE_AT_LINE (6580)) ;
          var_cas_listeTousAttributsSemantiques._addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_listeAttributsSemantiquesCourants._addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_outAttributeListModel._addAssign_operation (var_cas_typeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_69 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_attributes_definition_list_semantics_parser_6556_33_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_69 = true ;
    while (syntaxRepeat_69) {
      switch (select_repeat_semantics_parser_69 (_inLexique)) {
        case 2 : {
          nt_type_parsing_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_69 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6594_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_listmap) COMMA_HERE) ;
  GGS_lstring  var_cas_listmapTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listmapTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  _temp_252250 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (_temp_252250._isBuilt ()) {
    _temp_252250 (HERE)->method_searchKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6611)) ;
  }
  GGS_AC_galgasType  var_cas_type ;
  var_cas_type = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_listTypeName COMMA_SOURCE_FILE_AT_LINE (6612)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (6612)) ;
  GGS_typeGalgasListType  var_cas_listType ;
  var_cas_listType = GGS_typeGalgasListType::_castFrom (_inLexique, var_cas_type.getPtr (), true, var_cas_listTypeName COMMA_SOURCE_FILE_AT_LINE (6613)) ;
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasListmapType ::constructor_new (_inLexique, var_cas_listmapTypeName, var_cas_listTypeName, var_cas_listType, var_cas_listType.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (6619)) COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listmapTypeName, GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (6621)) ;
  GGS_typeEntityToGenerate  var_cas_def ;
  var_cas_def = GGS_typeGalgasListmapToImplement ::constructor_new (_inLexique, var_cas_listmapTypeName, var_cas_listTypeName, var_cas_listType.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (6625)) COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6594_28_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_listmap) COMMA_HERE) ;
  GGS_lstring  var_cas_listmapTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listmapTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  _temp_253531 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (_temp_253531._isBuilt ()) {
    _temp_253531 (HERE)->method_searchKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6645)) ;
  }
  GGS_AC_galgasType  var_cas_type ;
  var_cas_type = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_listTypeName COMMA_SOURCE_FILE_AT_LINE (6646)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (6646)) ;
  GGS_typeGalgasListType  var_cas_listType ;
  var_cas_listType = GGS_typeGalgasListType::_castFrom (_inLexique, var_cas_type.getPtr (), true, var_cas_listTypeName COMMA_SOURCE_FILE_AT_LINE (6647)) ;
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasListmapType ::constructor_new (_inLexique, var_cas_listmapTypeName, var_cas_listTypeName, var_cas_listType, var_cas_listType.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (6653)) COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listmapTypeName, GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (6655)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6594_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_listmap) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6664_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_struct) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
  GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListModel  var_cas_attributeListModel ;
  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
  nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasStructType ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6697)) ;
  GGS_typeEntityToGenerate  var_cas_def ;
  var_cas_def = GGS_C_structToImplement ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6664_28_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_struct) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeListModel  var_cas_attributeListModel ;
  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
  GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
  GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasStructType ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6736)) ;
  GGS_TypeModel  var_cas_t ;
  var_cas_t = GGS_ListModel ::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (6738)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6664_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_struct) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  nt_attributes_definition_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "recursivelyEnumerateDirectories"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivelyEnumerateDirectories (C_Compiler & _inLexique,
                                const GGS_string  var_cas_inAbsoluteSourcePath,
                                const GGS_string  var_cas_inPathInWrapper,
                                const GGS_wrapperExtensionMap   var_cas_inExtensionMap,
                                GGS_wrapperFileSortedList  & var_cas_outWrapperFileSortedList,
                                GGS_wrapperDirectorySortedList  & var_cas_outWrapperDirectorySortedList,
                                GGS_uint  & var_cas_ioWrapperFileIndex,
                                GGS_uint  & var_cas_ioWrapperDirectoryIndex,
                                GGS_M_regularFiles  & var_cas_ioRegularFileMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_recursivelyEnumerateDirectories at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_uint  var_cas_currentDirectoryIndex ;
  var_cas_currentDirectoryIndex = var_cas_ioWrapperDirectoryIndex ;
  var_cas_ioWrapperDirectoryIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (6758)) ;
  GGS_stringlist  var_cas_files ;
  var_cas_files = var_cas_inAbsoluteSourcePath.reader_regularFiles (_inLexique, GGS_bool (true, false) COMMA_SOURCE_FILE_AT_LINE (6760)) ;
  var_cas_outWrapperFileSortedList = GGS_wrapperFileSortedList ::constructor_emptySortedList () ;
  {
    GGS_stringlist::cEnumerator enumerator_258267 (var_cas_files, true) ;
    const GGS_stringlist::cElement * operand_258267 = NULL ;
    while (((operand_258267 = enumerator_258267.nextObject ()))) {
      macroValidPointer (operand_258267) ;
      if ((var_cas_inExtensionMap.reader_hasKey (_inLexique, operand_258267->mValue.reader_pathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (6763)) COMMA_SOURCE_FILE_AT_LINE (6763))).isBuiltAndTrue ()) {
        GGS_string var_cas_absoluteFilePath ;
        var_cas_absoluteFilePath = ((var_cas_inAbsoluteSourcePath)._operator_concat (GGS_string (true, "/")))._operator_concat (operand_258267->mValue) ;
        var_cas_outWrapperFileSortedList._addAssign_operation (operand_258267->mValue, var_cas_absoluteFilePath, var_cas_currentDirectoryIndex, var_cas_ioWrapperFileIndex) ;
        var_cas_ioRegularFileMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, (var_cas_inPathInWrapper)._operator_concat (operand_258267->mValue), GGS_location (_inLexique) COMMA_HERE), var_cas_currentDirectoryIndex, var_cas_ioWrapperFileIndex COMMA_SOURCE_FILE_AT_LINE (6772)) ;
        var_cas_ioWrapperFileIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (6777)) ;
      }
    }
  }
  GGS_stringlist  var_cas_directories ;
  var_cas_directories = var_cas_inAbsoluteSourcePath.reader_directories (_inLexique, GGS_bool (true, false) COMMA_SOURCE_FILE_AT_LINE (6781)) ;
  var_cas_outWrapperDirectorySortedList = GGS_wrapperDirectorySortedList ::constructor_emptySortedList () ;
  {
    GGS_stringlist::cEnumerator enumerator_259021 (var_cas_directories, true) ;
    const GGS_stringlist::cElement * operand_259021 = NULL ;
    while (((operand_259021 = enumerator_259021.nextObject ()))) {
      macroValidPointer (operand_259021) ;
      GGS_wrapperFileSortedList  var_cas_internalWrapperFileSortedList ;
      GGS_wrapperDirectorySortedList  var_cas_internalWrapperDirectorySortedList ;
      GGS_uint  var_cas_theDirectoryIndex ;
      var_cas_theDirectoryIndex = var_cas_ioWrapperDirectoryIndex ;
      ::routine_recursivelyEnumerateDirectories (_inLexique,  ((var_cas_inAbsoluteSourcePath)._operator_concat (GGS_string (true, "/")))._operator_concat (operand_259021->mValue),  ((var_cas_inPathInWrapper)._operator_concat (operand_259021->mValue))._operator_concat (GGS_string (true, "/")),  var_cas_inExtensionMap,  var_cas_internalWrapperFileSortedList,  var_cas_internalWrapperDirectorySortedList,  var_cas_ioWrapperFileIndex,  var_cas_ioWrapperDirectoryIndex,  var_cas_ioRegularFileMap COMMA_SOURCE_FILE_AT_LINE (6787)) ;
      var_cas_outWrapperDirectorySortedList._addAssign_operation (operand_259021->mValue, var_cas_internalWrapperFileSortedList, var_cas_internalWrapperDirectorySortedList, var_cas_theDirectoryIndex) ;
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_recursivelyEnumerateDirectories\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6808_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_filewrapper) COMMA_HERE) ;
  GGS_lstring  var_cas_wrapperName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_wrapperName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  GGS_lstring  var_cas_sourcePath ;
  _inLexique._assignFromAttribute_tokenString (var_cas_sourcePath) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_wrapperExtensionMap  var_cas_extensionMap ;
  var_cas_extensionMap = GGS_wrapperExtensionMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_70 = true ;
    while (syntaxRepeat_70) {
        GGS_lstring  var_cas_extension ;
        _inLexique._assignFromAttribute_tokenString (var_cas_extension) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
        var_cas_extensionMap.modifier_insertKey (_inLexique, var_cas_extension COMMA_SOURCE_FILE_AT_LINE (6828)) ;
      switch (select_repeat_semantics_parser_70 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_70 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_M_regularFiles  var_cas_regularFileMap ;
  var_cas_regularFileMap = GGS_M_regularFiles ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_string var_cas_absoluteSourcePath ;
  if (((var_cas_sourcePath.ggs_string ().reader_firstCharacterOrNul (_inLexique COMMA_SOURCE_FILE_AT_LINE (6836)))._operator_isEqual (GGS_char (true, '/'))).isBuiltAndTrue ()) {
    var_cas_absoluteSourcePath = var_cas_sourcePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6837)) ;
  }else{
    var_cas_absoluteSourcePath = ((GGS_string::constructor_stringWithSourceFilePath (_inLexique COMMA_HERE).reader_stringByDeletingLastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (6839)))._operator_concat (GGS_string (true, "/")))._operator_concat (var_cas_sourcePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6839))) ;
  }
  if (((var_cas_absoluteSourcePath.reader_directoryExists (_inLexique COMMA_SOURCE_FILE_AT_LINE (6841)))._operator_not ()).isBuiltAndTrue ()) {
    var_cas_sourcePath.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "The '"))._operator_concat (var_cas_absoluteSourcePath))._operator_concat (GGS_string (true, "' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (6843)) ;
  }else{
    GGS_wrapperFileSortedList  var_cas_wrapperFileSortedList ;
    GGS_wrapperDirectorySortedList  var_cas_wrapperDirectorySortedList ;
    GGS_uint  var_cas_wrapperFileIndex ;
    var_cas_wrapperFileIndex = GGS_uint (true, 0U) ;
    GGS_uint  var_cas_wrapperDirectoryIndex ;
    var_cas_wrapperDirectoryIndex = GGS_uint (true, 0U) ;
    ::routine_recursivelyEnumerateDirectories (_inLexique,  var_cas_absoluteSourcePath,  GGS_string (true, "/"),  var_cas_extensionMap,  var_cas_wrapperFileSortedList,  var_cas_wrapperDirectorySortedList,  var_cas_wrapperFileIndex,  var_cas_wrapperDirectoryIndex,  var_cas_regularFileMap COMMA_SOURCE_FILE_AT_LINE (6849)) ;
    GGS_typeEntityToGenerate  var_cas_w ;
    var_cas_w = GGS_C_wrapperToImplement ::constructor_new (_inLexique, var_cas_wrapperName, var_cas_sourcePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6862)), var_cas_extensionMap, var_cas_wrapperFileSortedList, var_cas_wrapperDirectorySortedList COMMA_HERE) ;
    var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_w) ;
  }
  GGS_filewrapperTemplateMap  var_cas_templateMap ;
  var_cas_templateMap = GGS_filewrapperTemplateMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_71 = true ;
    while (syntaxRepeat_71) {
      switch (select_repeat_semantics_parser_71 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_template) COMMA_HERE) ;
          GGS_lstring  var_cas_templateName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_templateName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_lstring  var_cas_templatePath ;
          _inLexique._assignFromAttribute_tokenString (var_cas_templatePath) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
          GGS_lstring  var_cas_templateAbsolutePath ;
          var_cas_templateAbsolutePath = GGS_lstring ::constructor_new (_inLexique, ((var_cas_absoluteSourcePath)._operator_concat (GGS_string (true, "/")))._operator_concat (var_cas_templatePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6882))), var_cas_templatePath.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (6883)) COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_templateArgumentTypesList ;
          var_cas_templateArgumentTypesList = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList () ;
          GGS_typeListeAttributsSemantiques  var_cas_formalAttributeList ;
          var_cas_formalAttributeList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
          GGS_typeVariablesMap  var_cas_templateVariableMap ;
          var_cas_templateVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_72 = true ;
            while (syntaxRepeat_72) {
              switch (select_repeat_semantics_parser_72 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  var_cas_formalAttributeList._addAssign_operation (var_cas_type_semantique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE)) ;
                  GGS_bool var_cas_parameterIsUsed ;
                  switch (select_semantics_parser_73 (_inLexique)) {
                    case 1 : {
                      var_cas_parameterIsUsed = GGS_bool (true, true) ;
                      } break ;
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                      var_cas_parameterIsUsed = GGS_bool (true, false) ;
                      } break ;
                    default :
                      break ;
                  }
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_cppName ;
                  var_cas_cppName = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_parameterName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (6910)), var_cas_parameterName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6910)) COMMA_HERE) ;
                  var_cas_templateArgumentTypesList._addAssign_operation (var_cas_type_semantique, GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE), var_cas_cppName, GGS_bool (true, true), var_cas_parameterName) ;
                  if ((var_cas_parameterIsUsed).isBuiltAndTrue ()) {
                    var_cas_templateVariableMap.modifier_insertConstInArgument (_inLexique, var_cas_parameterName, var_cas_type_semantique, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (6913)) ;
                  }else{
                    var_cas_templateVariableMap.modifier_insertUnusedConstInArgument (_inLexique, var_cas_parameterName, var_cas_type_semantique, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (6915)) ;
                  }
                  } break ;
                default :
                  syntaxRepeat_72 = false ;
                  break ;
              }
            }
          }
          var_cas_templateMap.modifier_insertKey (_inLexique, var_cas_templateName, var_cas_formalAttributeList COMMA_SOURCE_FILE_AT_LINE (6918)) ;
          GGS_templateInstructionList  var_cas_templateInstructionList ;
          galgasTemplateGrammar::_performSourceFileParsing_ (_inLexique,
                                          NULL,
                                          var_cas_templateAbsolutePath,
                                          var_cas_templateVariableMap,
                                          var_cas_ioComponentSemanticsEntitiesMap,
                                          var_cas_templateInstructionList
                                          COMMA_SOURCE_FILE_AT_LINE (6920)) ;
          var_cas_listeEntitesAengendrer._addAssign_operation (GGS_C_filewrapperTemplateToImplement ::constructor_new (_inLexique, var_cas_wrapperName, var_cas_templateName, var_cas_templateArgumentTypesList, var_cas_templateInstructionList COMMA_HERE)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_71 = false ;
          break ;
      }
    }
  }
  var_cas_ioSemanticContext.mFilewrappers.modifier_insertKey (_inLexique, var_cas_wrapperName, var_cas_regularFileMap, var_cas_templateMap COMMA_SOURCE_FILE_AT_LINE (6934)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6808_28_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_filewrapper) COMMA_HERE) ;
  GGS_lstring  var_cas_wrapperName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_wrapperName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  GGS_lstring  var_cas_sourcePath ;
  _inLexique._assignFromAttribute_tokenString (var_cas_sourcePath) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_wrapperExtensionMap  var_cas_extensionMap ;
  var_cas_extensionMap = GGS_wrapperExtensionMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_70 = true ;
    while (syntaxRepeat_70) {
        GGS_lstring  var_cas_extension ;
        _inLexique._assignFromAttribute_tokenString (var_cas_extension) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
        var_cas_extensionMap.modifier_insertKey (_inLexique, var_cas_extension COMMA_SOURCE_FILE_AT_LINE (6956)) ;
      switch (select_repeat_semantics_parser_70 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_70 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_M_regularFiles  var_cas_regularFileMap ;
  var_cas_regularFileMap = GGS_M_regularFiles ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  if (((var_cas_ioSemanticContext.reader_mFilewrappers (_inLexique COMMA_SOURCE_FILE_AT_LINE (6962)).reader_hasKey (_inLexique, var_cas_wrapperName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6962)) COMMA_SOURCE_FILE_AT_LINE (6962)))._operator_not ()).isBuiltAndTrue ()) {
    GGS_string var_cas_absoluteSourcePath ;
    if (((var_cas_sourcePath.ggs_string ().reader_firstCharacterOrNul (_inLexique COMMA_SOURCE_FILE_AT_LINE (6965)))._operator_isEqual (GGS_char (true, '/'))).isBuiltAndTrue ()) {
      var_cas_absoluteSourcePath = var_cas_sourcePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6966)) ;
    }else{
      var_cas_absoluteSourcePath = ((GGS_string::constructor_stringWithSourceFilePath (_inLexique COMMA_HERE).reader_stringByDeletingLastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (6968)))._operator_concat (GGS_string (true, "/")))._operator_concat (var_cas_sourcePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6968))) ;
    }
    if (((var_cas_absoluteSourcePath.reader_directoryExists (_inLexique COMMA_SOURCE_FILE_AT_LINE (6970)))._operator_not ()).isBuiltAndTrue ()) {
      var_cas_sourcePath.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "The '"))._operator_concat (var_cas_absoluteSourcePath))._operator_concat (GGS_string (true, "' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (6972)) ;
    }else{
      GGS_wrapperFileSortedList  var_cas_wrapperFileSortedList ;
      GGS_wrapperDirectorySortedList  var_cas_wrapperDirectorySortedList ;
      GGS_uint  var_cas_wrapperFileIndex ;
      var_cas_wrapperFileIndex = GGS_uint (true, 0U) ;
      GGS_uint  var_cas_wrapperDirectoryIndex ;
      var_cas_wrapperDirectoryIndex = GGS_uint (true, 0U) ;
      ::routine_recursivelyEnumerateDirectories (_inLexique,  var_cas_absoluteSourcePath,  GGS_string (true, "/"),  var_cas_extensionMap,  var_cas_wrapperFileSortedList,  var_cas_wrapperDirectorySortedList,  var_cas_wrapperFileIndex,  var_cas_wrapperDirectoryIndex,  var_cas_regularFileMap COMMA_SOURCE_FILE_AT_LINE (6978)) ;
    }
  }
  GGS_filewrapperTemplateMap  var_cas_templateMap ;
  var_cas_templateMap = GGS_filewrapperTemplateMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_71 = true ;
    while (syntaxRepeat_71) {
      switch (select_repeat_semantics_parser_71 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_template) COMMA_HERE) ;
          GGS_lstring  var_cas_templateName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_templateName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_lstring  var_cas_templatePath ;
          _inLexique._assignFromAttribute_tokenString (var_cas_templatePath) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_templateArgumentTypesList ;
          var_cas_templateArgumentTypesList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
          GGS_typeListeAttributsSemantiques  var_cas_formalAttributeList ;
          var_cas_formalAttributeList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
          { bool syntaxRepeat_72 = true ;
            while (syntaxRepeat_72) {
              switch (select_repeat_semantics_parser_72 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  var_cas_formalAttributeList._addAssign_operation (var_cas_type_semantique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE)) ;
                  switch (select_semantics_parser_73 (_inLexique)) {
                    case 1 : {
                      } break ;
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                      } break ;
                    default :
                      break ;
                  }
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  var_cas_templateArgumentTypesList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  var_cas_templateMap.modifier_insertKey (_inLexique, var_cas_templateName, var_cas_formalAttributeList COMMA_SOURCE_FILE_AT_LINE (7021)) ;
                  } break ;
                default :
                  syntaxRepeat_72 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_71 = false ;
          break ;
      }
    }
  }
  if (((var_cas_ioSemanticContext.reader_mFilewrappers (_inLexique COMMA_SOURCE_FILE_AT_LINE (7026)).reader_hasKey (_inLexique, var_cas_wrapperName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7026)) COMMA_SOURCE_FILE_AT_LINE (7026)))._operator_not ()).isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mFilewrappers.modifier_insertKey (_inLexique, var_cas_wrapperName, var_cas_regularFileMap, var_cas_templateMap COMMA_SOURCE_FILE_AT_LINE (7027)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6808_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_filewrapper) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_70 = true ;
    while (syntaxRepeat_70) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_70 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_70 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_71 = true ;
    while (syntaxRepeat_71) {
      switch (select_repeat_semantics_parser_71 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_template) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
          { bool syntaxRepeat_72 = true ;
            while (syntaxRepeat_72) {
              switch (select_repeat_semantics_parser_72 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  nt_formal_argument_type_parse (_inLexique) ;
                  switch (select_semantics_parser_73 (_inLexique)) {
                    case 1 : {
                      } break ;
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                      } break ;
                    default :
                      break ;
                  }
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_72 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_71 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_7038_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  nt_semantics_declaration_begining_by_extern_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_7038_28_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  nt_semantics_declaration_begining_by_extern_importSemantics (_inLexique, var_cas_ioModelMap, var_cas_ioExternActionMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_7038_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  nt_semantics_declaration_begining_by_extern_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_begining_by_extern'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_7082_47_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  GGS_lstring  var_cas_externTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_externTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_modifiersMap ;
  var_cas_modifiersMap = GGS_typeTableMethodes ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap ;
  var_cas_readersInInstructionMap = GGS_typeTableMethodes ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall ;
  var_cas_acceptAddAssignOperatorCall = GGS_bool (true, false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList ;
  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  GGS_M_externTypeConstructorMap  var_cas_constructorsMap ;
  var_cas_constructorsMap = GGS_M_externTypeConstructorMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_74 = true ;
    while (syntaxRepeat_74) {
      switch (select_repeat_semantics_parser_74 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
          GGS_lstring  var_cas_constructorName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_constructorName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList ;
          var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
          { bool syntaxRepeat_75 = true ;
            while (syntaxRepeat_75) {
              switch (select_repeat_semantics_parser_75 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  var_cas_constructorArgumentTypesList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  } break ;
                default :
                  syntaxRepeat_75 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_constructorsMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList COMMA_SOURCE_FILE_AT_LINE (7123)) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          GGS_lstring  var_cas_methodName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
          var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_L_signature  var_cas_signatureForGrammarComponent ;
          nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_readersInInstructionMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (7143)) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          switch (select_semantics_parser_76 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_methodName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
              var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              var_cas_modifiersMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (7163)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
              GGS_location  var_cas_errorLocation ;
              var_cas_errorLocation = GGS_location (_inLexique) ;
              { bool syntaxRepeat_77 = true ;
                while (syntaxRepeat_77) {
                  switch (select_repeat_semantics_parser_77 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                      var_cas_addAssignOperatorCallTypeList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      } break ;
                    default :
                      syntaxRepeat_77 = false ;
                      break ;
                  }
                }
              }
              if ((var_cas_acceptAddAssignOperatorCall).isBuiltAndTrue ()) {
                var_cas_errorLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'+=' operator is already defined") COMMA_SOURCE_FILE_AT_LINE (7184)) ;
              }else{
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true, true) ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_74 = false ;
          break ;
      }
    }
  }
  GGS_typeEntityToGenerate  var_cas_t ;
  var_cas_t = GGS_typeExternTypeToGenerate ::constructor_new (_inLexique, var_cas_externTypeName, var_cas_constructorsMap, var_cas_modifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_t) ;
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasExternType ::constructor_new (_inLexique, var_cas_externTypeName, var_cas_constructorsMap, var_cas_modifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (7210)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_7082_47_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  GGS_lstring  var_cas_externTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_externTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_EXmodifiersMap ;
  var_cas_EXmodifiersMap = GGS_typeTableMethodes ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap ;
  var_cas_readersInInstructionMap = GGS_typeTableMethodes ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall ;
  var_cas_acceptAddAssignOperatorCall = GGS_bool (true, false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList ;
  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  GGS_M_externTypeConstructorMap  var_cas_EXconstructorsMap ;
  var_cas_EXconstructorsMap = GGS_M_externTypeConstructorMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_constructorMap  var_cas_constructorMap ;
  var_cas_constructorMap = GGS_constructorMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_readerMap  var_cas_readerMap ;
  var_cas_readerMap = GGS_readerMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_modifierMap  var_cas_modifierMap ;
  var_cas_modifierMap = GGS_modifierMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListModel  var_cas_addAssignFormalInputArgumentList ;
  var_cas_addAssignFormalInputArgumentList = GGS_typeListModel ::constructor_emptyList () ;
  { bool syntaxRepeat_74 = true ;
    while (syntaxRepeat_74) {
      switch (select_repeat_semantics_parser_74 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
          GGS_lstring  var_cas_constructorName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_constructorName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList ;
          var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
          GGS_typeListModel  var_cas_formalInputArgumentList ;
          var_cas_formalInputArgumentList = GGS_typeListModel ::constructor_emptyList () ;
          { bool syntaxRepeat_75 = true ;
            while (syntaxRepeat_75) {
              switch (select_repeat_semantics_parser_75 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  var_cas_constructorArgumentTypesList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  var_cas_formalInputArgumentList._addAssign_operation (var_cas_galgasTypeName) ;
                  } break ;
                default :
                  syntaxRepeat_75 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_EXconstructorsMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList COMMA_SOURCE_FILE_AT_LINE (7259)) ;
          var_cas_constructorMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_formalInputArgumentList COMMA_SOURCE_FILE_AT_LINE (7260)) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          GGS_lstring  var_cas_readerName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_readerName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
          var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_L_signature  var_cas_signature ;
          nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_readersInInstructionMap.modifier_insertKey (_inLexique, var_cas_readerName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (7280)) ;
          var_cas_readerMap.modifier_insertKey (_inLexique, var_cas_readerName, var_cas_signature COMMA_SOURCE_FILE_AT_LINE (7281)) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          switch (select_semantics_parser_76 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_modifierName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_modifierName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
              var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_L_signature  var_cas_signature ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
              var_cas_EXmodifiersMap.modifier_insertKey (_inLexique, var_cas_modifierName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (7301)) ;
              var_cas_modifierMap.modifier_insertKey (_inLexique, var_cas_modifierName, var_cas_signature COMMA_SOURCE_FILE_AT_LINE (7302)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
              if (((var_cas_addAssignFormalInputArgumentList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (7305)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'+=' operator is already defined") COMMA_SOURCE_FILE_AT_LINE (7307)) ;
              }else{
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true, true) ;
              }
              { bool syntaxRepeat_77 = true ;
                while (syntaxRepeat_77) {
                  switch (select_repeat_semantics_parser_77 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                      var_cas_addAssignOperatorCallTypeList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      var_cas_addAssignFormalInputArgumentList._addAssign_operation (var_cas_galgasTypeName) ;
                      } break ;
                    default :
                      syntaxRepeat_77 = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_74 = false ;
          break ;
      }
    }
  }
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasExternType ::constructor_new (_inLexique, var_cas_externTypeName, var_cas_EXconstructorsMap, var_cas_EXmodifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (7339)) ;
  GGS_TypeModel  var_cas_t ;
  var_cas_t = GGS_ExternTypeModel ::constructor_new (_inLexique, var_cas_constructorMap, var_cas_readerMap, var_cas_modifierMap, var_cas_addAssignFormalInputArgumentList COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (7341)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_7082_47_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_74 = true ;
    while (syntaxRepeat_74) {
      switch (select_repeat_semantics_parser_74 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          { bool syntaxRepeat_75 = true ;
            while (syntaxRepeat_75) {
              switch (select_repeat_semantics_parser_75 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  nt_formal_argument_type_parse (_inLexique) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_75 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          nt_formal_arguments_list_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          switch (select_semantics_parser_76 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
              { bool syntaxRepeat_77 = true ;
                while (syntaxRepeat_77) {
                  switch (select_repeat_semantics_parser_77 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                      nt_formal_argument_type_parse (_inLexique) ;
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_77 = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_74 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_7349_27_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                const GGS_typeTableEnAvant  var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7356)) COMMA_SOURCE_FILE_AT_LINE (7356))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  _temp_278779 = var_cas_inComponentSemanticsEntitiesMap ;
    if (_temp_278779._isBuilt ()) {
      _temp_278779 (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7358)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (7359)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (7359)) ;
  }else{
    const GGS_typeTableEnAvant  _temp_278971 = var_cas_tableEnAvant ;
    if (_temp_278971._isBuilt ()) {
      _temp_278971 (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (7361)) ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_7349_27_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_7349_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_7371_27_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                const GGS_typeTableEnAvant  var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7379)) COMMA_SOURCE_FILE_AT_LINE (7379))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  _temp_279612 = var_cas_inComponentSemanticsEntitiesMap ;
    if (_temp_279612._isBuilt ()) {
      _temp_279612 (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7381)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (7382)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (7382)) ;
  }else{
    const GGS_typeTableEnAvant  _temp_279804 = var_cas_tableEnAvant ;
    if (_temp_279804._isBuilt ()) {
      _temp_279804 (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (7384)) ;
    }
    GGS_typeGalgasUndefinedListType  var_cas_x ;
    var_cas_x = GGS_typeGalgasUndefinedListType::_castFrom (_inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (7385)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_7371_27_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_7371_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_7396_27_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                const GGS_typeTableEnAvant  var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7404)) COMMA_SOURCE_FILE_AT_LINE (7404))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  _temp_280582 = var_cas_inComponentSemanticsEntitiesMap ;
    if (_temp_280582._isBuilt ()) {
      _temp_280582 (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7406)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (7407)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (7407)) ;
  }else{
    const GGS_typeTableEnAvant  _temp_280774 = var_cas_tableEnAvant ;
    if (_temp_280774._isBuilt ()) {
      _temp_280774 (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (7409)) ;
    }
    GGS_typeGalgasUndefinedMapType  var_cas_x ;
    var_cas_x = GGS_typeGalgasUndefinedMapType::_castFrom (_inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (7410)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_7396_27_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_7396_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_7421_27_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                const GGS_typeTableEnAvant  var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7430)) COMMA_SOURCE_FILE_AT_LINE (7430))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  _temp_281567 = var_cas_inComponentSemanticsEntitiesMap ;
    if (_temp_281567._isBuilt ()) {
      _temp_281567 (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7432)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (7433)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (7433)) ;
  }else{
    const GGS_typeTableEnAvant  _temp_281759 = var_cas_tableEnAvant ;
    if (_temp_281759._isBuilt ()) {
      _temp_281759 (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (7435)) ;
    }
    GGS_typeGalgasUndefinedClassType  var_cas_x ;
    var_cas_x = GGS_typeGalgasUndefinedClassType::_castFrom (_inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (7436)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_7421_27_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_7421_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_begining_by_extern'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_7452_47_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_nomAction ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomAction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  automatic_var_29 ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, automatic_var_29) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteRoutineExterne ::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_nomAction, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7476)) ;
  GGS_typeEntityToGenerate  var_cas_ea ;
  var_cas_ea = GGS_typeRoutineExterneAengendrer ::constructor_new (_inLexique, var_cas_nomAction, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_ea) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_7452_47_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_actionName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteRoutineExterne ::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7505)) ;
  var_cas_ioExternActionMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_signature, GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (7506)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_7452_47_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_begining_by_extern'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_7516_47_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_function) COMMA_HERE) ;
  GGS_lstring  var_cas_nomAction ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomAction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  automatic_var_30 ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, automatic_var_30) ;
  GGS_L_EXsignature  var_cas_returnedTypes ;
  var_cas_returnedTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  {
    GGS_typeListeTypesEtNomsArgMethode::cEnumerator enumerator_285906 (var_cas_listeTypeEtNomsArguments, true) ;
    const GGS_typeListeTypesEtNomsArgMethode::cElement * operand_285906 = NULL ;
    while (((operand_285906 = enumerator_285906.nextObject ()))) {
      macroValidPointer (operand_285906) ;
      if (((operand_285906->mFormalArgumentPassingMode)._operator_isEqual (GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        operand_285906->mParameterName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "for a function only input parameters (\?) and constant input parameters (\?\?) can be used.") COMMA_SOURCE_FILE_AT_LINE (7545)) ;
      }else if (((operand_285906->mFormalArgumentPassingMode)._operator_isEqual (GGS_EXformalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        operand_285906->mParameterName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "for a function only input parameters (\?) and constant input parameters (\?\?) can be used.") COMMA_SOURCE_FILE_AT_LINE (7547)) ;
      }
    }
  }
  GGS_EXformalArgumentPassingMode var_cas_passingMode ;
  var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_returnedType ;
  GGS_lstring  var_cas_galgasTypeName ;
  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_returnedType, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
  GGS_lstring  var_cas_nomArgument ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_natureNom ;
  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (7561)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7561)) COMMA_HERE) ;
  var_cas_tableArgumentsMethode.modifier_insertOutArgument (_inLexique, var_cas_nomArgument, var_cas_returnedType, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (7562)) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteFonctionExterne ::constructor_new (_inLexique, var_cas_listeDeTypes, var_cas_returnedType COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_nomAction, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7565)) ;
  GGS_typeEntityToGenerate  var_cas_ea ;
  var_cas_ea = GGS_typeFonctionExterneAengendrer ::constructor_new (_inLexique, var_cas_nomAction, var_cas_listeDeTypes, var_cas_returnedType COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_ea) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_7516_47_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_function) COMMA_HERE) ;
  GGS_lstring  var_cas_actionName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  GGS_L_EXsignature  var_cas_returnedTypes ;
  var_cas_returnedTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  {
    GGS_typeListeTypesEtNomsArgMethode::cEnumerator enumerator_288165 (var_cas_listeTypeEtNomsArguments, true) ;
    const GGS_typeListeTypesEtNomsArgMethode::cElement * operand_288165 = NULL ;
    while (((operand_288165 = enumerator_288165.nextObject ()))) {
      macroValidPointer (operand_288165) ;
      if (((operand_288165->mFormalArgumentPassingMode)._operator_isEqual (GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        operand_288165->mParameterName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "for a function only input parameters (\?) and constant input parameters (\?\?) can be used.") COMMA_SOURCE_FILE_AT_LINE (7599)) ;
      }else if (((operand_288165->mFormalArgumentPassingMode)._operator_isEqual (GGS_EXformalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        operand_288165->mParameterName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "for a function only input parameters (\?) and constant input parameters (\?\?) can be used.") COMMA_SOURCE_FILE_AT_LINE (7601)) ;
      }
    }
  }
  GGS_EXformalArgumentPassingMode var_cas_passingMode ;
  var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_returnedType ;
  GGS_lstring  var_cas_galgasTypeName ;
  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_returnedType, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
  GGS_lstring  var_cas_nomArgument ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_natureNom ;
  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (7615)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7615)) COMMA_HERE) ;
  var_cas_tableArgumentsMethode.modifier_insertOutArgument (_inLexique, var_cas_nomArgument, var_cas_returnedType, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (7616)) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteFonctionExterne ::constructor_new (_inLexique, var_cas_listeDeTypes, var_cas_returnedType COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7619)) ;
  var_cas_ioExternActionMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_signature, GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (7620)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_7516_47_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_function) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  nt_formal_argument_type_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_7630_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  GGS_lstring  var_cas_enumTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_enumTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_enumConstantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_enumConstantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_78 = true ;
    while (syntaxRepeat_78) {
        GGS_bool var_cas_hasConstructor ;
        switch (select_semantics_parser_79 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
            var_cas_hasConstructor = GGS_bool (true, true) ;
            } break ;
          case 2 : {
            var_cas_hasConstructor = GGS_bool (true, false) ;
            } break ;
          default :
            break ;
        }
        { bool syntaxRepeat_80 = true ;
          while (syntaxRepeat_80) {
              GGS_lstring  var_cas_constantName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_constantName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_constantMap.modifier_insertKey (_inLexique, var_cas_constantName, var_cas_hasConstructor COMMA_SOURCE_FILE_AT_LINE (7657)) ;
            switch (select_repeat_semantics_parser_80 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_80 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_78 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_78 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeEnumMessageMap  var_cas_enumMessageMap ;
  var_cas_enumMessageMap = GGS_typeEnumMessageMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumModifierMap  var_cas_modifierMap ;
  var_cas_modifierMap = GGS_enumModifierMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumMethodMap  var_cas_methodMap ;
  var_cas_methodMap = GGS_enumMethodMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumOperatorMap  var_cas_operatorMap ;
  var_cas_operatorMap = GGS_enumOperatorMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_81 = true ;
    while (syntaxRepeat_81) {
      switch (select_repeat_semantics_parser_81 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_operator) COMMA_HERE) ;
          GGS_lstring  var_cas_operatorName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_operatorName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_signature ;
          var_cas_signature = GGS_L_EXsignature ::constructor_emptyList () ;
          GGS_typeVariablesMap  var_cas_localVariableMap ;
          var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_argumentList ;
          var_cas_argumentList = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList () ;
          switch (select_semantics_parser_82 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              GGS_lstring  var_cas_typeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              if (((var_cas_typeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7684)))._operator_isNotEqual (GGS_string (true, "location"))).isBuiltAndTrue ()) {
                var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the type should be '@location'") COMMA_SOURCE_FILE_AT_LINE (7686)) ;
              }
              GGS_AC_galgasType  var_cas_type_semantique ;
              var_cas_type_semantique = GGS_typeGalgas_location ::constructor_new (_inLexique COMMA_HERE) ;
              GGS_EXformalArgumentPassingMode var_cas_argumentConstantIn ;
              var_cas_argumentConstantIn = GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
              switch (select_semantics_parser_83 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (7693)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7693)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true), var_cas_nomArgument) ;
                  var_cas_localVariableMap.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (7695)) ;
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (7699)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7699)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true), var_cas_nomArgument) ;
                  var_cas_localVariableMap.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (7701)) ;
                  } break ;
                default :
                  break ;
              }
              var_cas_signature._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_enumOperatorDefinitionList  var_cas_enumOperatorDefinitionList ;
          var_cas_enumOperatorDefinitionList = GGS_enumOperatorDefinitionList ::constructor_emptyList () ;
          { bool syntaxRepeat_84 = true ;
            while (syntaxRepeat_84) {
                GGS_lstring  var_cas_leftConstant ;
                _inLexique._assignFromAttribute_tokenString (var_cas_leftConstant) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_luint  var_cas_leftConstantIndex ;
                GGS_bool automatic_var_31 ;
                const GGS_enumConstantMap  _temp_292695 = var_cas_constantMap ;
                if (_temp_292695._isBuilt ()) {
                  _temp_292695 (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_leftConstant, var_cas_leftConstantIndex, automatic_var_31 COMMA_SOURCE_FILE_AT_LINE (7711)) ;
                }
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                GGS_lstring  var_cas_rightConstant ;
                _inLexique._assignFromAttribute_tokenString (var_cas_rightConstant) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_luint  var_cas_rightConstantIndex ;
                GGS_bool automatic_var_32 ;
                const GGS_enumConstantMap  _temp_292888 = var_cas_constantMap ;
                if (_temp_292888._isBuilt ()) {
                  _temp_292888 (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_rightConstant, var_cas_rightConstantIndex, automatic_var_32 COMMA_SOURCE_FILE_AT_LINE (7716)) ;
                }
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                GGS_lstring  var_cas_targetConstant ;
                _inLexique._assignFromAttribute_tokenString (var_cas_targetConstant) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_luint  var_cas_targetConstantIndex ;
                GGS_bool automatic_var_33 ;
                const GGS_enumConstantMap  _temp_293087 = var_cas_constantMap ;
                if (_temp_293087._isBuilt ()) {
                  _temp_293087 (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_targetConstant, var_cas_targetConstantIndex, automatic_var_33 COMMA_SOURCE_FILE_AT_LINE (7721)) ;
                }
                GGS_typeInstructionList  var_cas_instructionList ;
                var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
                switch (select_semantics_parser_85 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioSemanticContext, var_cas_localVariableMap, var_cas_instructionList) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioSemanticContext, var_cas_localVariableMap, var_cas_instructionList) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_enumOperatorDefinitionList._addAssign_operation (var_cas_leftConstant, var_cas_leftConstantIndex, var_cas_rightConstant, var_cas_rightConstantIndex, var_cas_targetConstant, var_cas_targetConstantIndex, var_cas_instructionList) ;
              switch (select_repeat_semantics_parser_84 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_84 = false ;
                  break ;
              }
            }
          }
          var_cas_operatorMap.modifier_insertKey (_inLexique, var_cas_operatorName, var_cas_enumOperatorDefinitionList, var_cas_signature, var_cas_argumentList COMMA_SOURCE_FILE_AT_LINE (7753)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          GGS_lstring  var_cas_actionName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_signature ;
          var_cas_signature = GGS_L_EXsignature ::constructor_emptyList () ;
          GGS_typeVariablesMap  var_cas_localVariableMap ;
          var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_argumentList ;
          var_cas_argumentList = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList () ;
          switch (select_semantics_parser_86 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              GGS_lstring  var_cas_typeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              if (((var_cas_typeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7767)))._operator_isNotEqual (GGS_string (true, "location"))).isBuiltAndTrue ()) {
                var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the type should be '@location'") COMMA_SOURCE_FILE_AT_LINE (7769)) ;
              }
              GGS_AC_galgasType  var_cas_type_semantique ;
              var_cas_type_semantique = GGS_typeGalgas_location ::constructor_new (_inLexique COMMA_HERE) ;
              GGS_EXformalArgumentPassingMode var_cas_argumentConstantIn ;
              var_cas_argumentConstantIn = GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
              switch (select_semantics_parser_87 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (7776)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7776)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true), var_cas_nomArgument) ;
                  var_cas_localVariableMap.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (7778)) ;
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (7782)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7782)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true), var_cas_nomArgument) ;
                  var_cas_localVariableMap.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (7784)) ;
                  } break ;
                default :
                  break ;
              }
              var_cas_signature._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_enumUsedConstantMap  var_cas_definedSourceMap ;
          var_cas_definedSourceMap = GGS_enumUsedConstantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_enumModifierDefinitionList  var_cas_enumActionDefinitionList ;
          var_cas_enumActionDefinitionList = GGS_enumModifierDefinitionList ::constructor_emptyList () ;
          { bool syntaxRepeat_88 = true ;
            while (syntaxRepeat_88) {
                GGS_lstring  var_cas_sourceName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_sourceName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_34 ;
                const GGS_enumConstantMap  _temp_295734 = var_cas_constantMap ;
                if (_temp_295734._isBuilt ()) {
                  _temp_295734 (HERE)->method_searchKey (_inLexique, var_cas_sourceName, automatic_var_34 COMMA_SOURCE_FILE_AT_LINE (7794)) ;
                }
                var_cas_definedSourceMap.modifier_insertKey (_inLexique, var_cas_sourceName COMMA_SOURCE_FILE_AT_LINE (7795)) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                GGS_lstring  var_cas_targetName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_targetName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_35 ;
                const GGS_enumConstantMap  _temp_295907 = var_cas_constantMap ;
                if (_temp_295907._isBuilt ()) {
                  _temp_295907 (HERE)->method_searchKey (_inLexique, var_cas_targetName, automatic_var_35 COMMA_SOURCE_FILE_AT_LINE (7799)) ;
                }
                GGS_typeInstructionList  var_cas_instructionList ;
                var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
                switch (select_semantics_parser_89 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioSemanticContext, var_cas_localVariableMap, var_cas_instructionList) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioSemanticContext, var_cas_localVariableMap, var_cas_instructionList) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_enumActionDefinitionList._addAssign_operation (var_cas_sourceName, var_cas_targetName, var_cas_instructionList) ;
              switch (select_repeat_semantics_parser_88 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_88 = false ;
                  break ;
              }
            }
          }
          {
            GGS_enumConstantMap::cEnumerator enumerator_296640 (var_cas_constantMap, true) ;
            const GGS_enumConstantMap::cElement * operand_296640 = NULL ;
            while (((operand_296640 = enumerator_296640.nextObject ()))) {
              macroValidPointer (operand_296640) ;
              if (((var_cas_definedSourceMap.reader_hasKey (_inLexique, operand_296640->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7825)) COMMA_SOURCE_FILE_AT_LINE (7825)))._operator_not ()).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "The '"))._operator_concat (operand_296640->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7826))))._operator_concat (GGS_string (true, "' is not handled")) COMMA_SOURCE_FILE_AT_LINE (7827)) ;
              }
            }
          }
          var_cas_modifierMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_enumActionDefinitionList, var_cas_signature, var_cas_argumentList COMMA_SOURCE_FILE_AT_LINE (7830)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          GGS_lstring  var_cas_actionName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_signature ;
          var_cas_signature = GGS_L_EXsignature ::constructor_emptyList () ;
          GGS_typeVariablesMap  var_cas_localVariableMap ;
          var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_argumentList ;
          var_cas_argumentList = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList () ;
          switch (select_semantics_parser_90 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              GGS_lstring  var_cas_typeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              if (((var_cas_typeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7844)))._operator_isNotEqual (GGS_string (true, "location"))).isBuiltAndTrue ()) {
                var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the type should be '@location'") COMMA_SOURCE_FILE_AT_LINE (7846)) ;
              }
              GGS_AC_galgasType  var_cas_type_semantique ;
              var_cas_type_semantique = GGS_typeGalgas_location ::constructor_new (_inLexique COMMA_HERE) ;
              GGS_EXformalArgumentPassingMode var_cas_argumentConstantIn ;
              var_cas_argumentConstantIn = GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
              switch (select_semantics_parser_91 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (7853)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7853)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true), var_cas_nomArgument) ;
                  var_cas_localVariableMap.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (7855)) ;
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (7859)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7859)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true), var_cas_nomArgument) ;
                  var_cas_localVariableMap.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (7861)) ;
                  } break ;
                default :
                  break ;
              }
              var_cas_signature._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_enumUsedConstantMap  var_cas_definedSourceMap ;
          var_cas_definedSourceMap = GGS_enumUsedConstantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_enumMethodDefinitionList  var_cas_enumActionDefinitionList ;
          var_cas_enumActionDefinitionList = GGS_enumMethodDefinitionList ::constructor_emptyList () ;
          { bool syntaxRepeat_92 = true ;
            while (syntaxRepeat_92) {
                GGS_lstring  var_cas_sourceName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_sourceName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_36 ;
                const GGS_enumConstantMap  _temp_298675 = var_cas_constantMap ;
                if (_temp_298675._isBuilt ()) {
                  _temp_298675 (HERE)->method_searchKey (_inLexique, var_cas_sourceName, automatic_var_36 COMMA_SOURCE_FILE_AT_LINE (7871)) ;
                }
                var_cas_definedSourceMap.modifier_insertKey (_inLexique, var_cas_sourceName COMMA_SOURCE_FILE_AT_LINE (7872)) ;
                GGS_typeInstructionList  var_cas_instructionList ;
                var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
                switch (select_semantics_parser_93 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioSemanticContext, var_cas_localVariableMap, var_cas_instructionList) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioSemanticContext, var_cas_localVariableMap, var_cas_instructionList) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_enumActionDefinitionList._addAssign_operation (var_cas_sourceName, var_cas_instructionList) ;
              switch (select_repeat_semantics_parser_92 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_92 = false ;
                  break ;
              }
            }
          }
          {
            GGS_enumConstantMap::cEnumerator enumerator_299447 (var_cas_constantMap, true) ;
            const GGS_enumConstantMap::cElement * operand_299447 = NULL ;
            while (((operand_299447 = enumerator_299447.nextObject ()))) {
              macroValidPointer (operand_299447) ;
              if (((var_cas_definedSourceMap.reader_hasKey (_inLexique, operand_299447->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7898)) COMMA_SOURCE_FILE_AT_LINE (7898)))._operator_not ()).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "The '"))._operator_concat (operand_299447->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7899))))._operator_concat (GGS_string (true, "' is not handled")) COMMA_SOURCE_FILE_AT_LINE (7900)) ;
              }
            }
          }
          var_cas_methodMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_enumActionDefinitionList, var_cas_signature, var_cas_argumentList COMMA_SOURCE_FILE_AT_LINE (7903)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
          GGS_lstring  var_cas_messageName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          GGS_typeEnumCstMessageStringMap  var_cas_cstMessageStringMap ;
          var_cas_cstMessageStringMap = GGS_typeEnumCstMessageStringMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_94 = true ;
            while (syntaxRepeat_94) {
                GGS_lstring  var_cas_cstName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_cstName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                GGS_lstring  var_cas_cstString ;
                _inLexique._assignFromAttribute_tokenString (var_cas_cstString) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                var_cas_cstMessageStringMap.modifier_insertKey (_inLexique, var_cas_cstName, var_cas_cstString COMMA_SOURCE_FILE_AT_LINE (7917)) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              switch (select_repeat_semantics_parser_94 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_94 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          GGS_lstringlist  var_cas_messageStringList ;
          var_cas_messageStringList = GGS_lstringlist ::constructor_emptyList () ;
          {
            GGS_enumConstantMap::cEnumerator enumerator_300322 (var_cas_constantMap, true) ;
            const GGS_enumConstantMap::cElement * operand_300322 = NULL ;
            while (((operand_300322 = enumerator_300322.nextObject ()))) {
              macroValidPointer (operand_300322) ;
              GGS_lstring  var_cas_name ;
              var_cas_name = GGS_lstring ::constructor_new (_inLexique, operand_300322->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7927)), GGS_location (_inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_cstString ;
              const GGS_typeEnumCstMessageStringMap  _temp_300484 = var_cas_cstMessageStringMap ;
              if (_temp_300484._isBuilt ()) {
                _temp_300484 (HERE)->method_searchKey (_inLexique, var_cas_name, var_cas_cstString COMMA_SOURCE_FILE_AT_LINE (7929)) ;
              }
              var_cas_messageStringList._addAssign_operation (var_cas_cstString) ;
            }
          }
          var_cas_enumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageStringList COMMA_SOURCE_FILE_AT_LINE (7933)) ;
          } break ;
        default :
          syntaxRepeat_81 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_typeEntityToGenerate  var_cas_e ;
  var_cas_e = GGS_enumGalgasType ::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap, var_cas_modifierMap, var_cas_methodMap, var_cas_operatorMap COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_e) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_enum ::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap, var_cas_modifierMap, var_cas_methodMap, var_cas_operatorMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_ee ;
  var_cas_ee = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_ee COMMA_SOURCE_FILE_AT_LINE (7957)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_7630_28_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  GGS_lstring  var_cas_enumTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_enumTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_enumConstantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_enumConstantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_78 = true ;
    while (syntaxRepeat_78) {
        GGS_bool var_cas_hasConstructor ;
        switch (select_semantics_parser_79 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
            var_cas_hasConstructor = GGS_bool (true, true) ;
            } break ;
          case 2 : {
            var_cas_hasConstructor = GGS_bool (true, false) ;
            } break ;
          default :
            break ;
        }
        { bool syntaxRepeat_80 = true ;
          while (syntaxRepeat_80) {
              GGS_lstring  var_cas_constantName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_constantName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_constantMap.modifier_insertKey (_inLexique, var_cas_constantName, var_cas_hasConstructor COMMA_SOURCE_FILE_AT_LINE (7985)) ;
            switch (select_repeat_semantics_parser_80 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_80 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_78 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_78 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeEnumMessageMap  var_cas_exEnumMessageMap ;
  var_cas_exEnumMessageMap = GGS_typeEnumMessageMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumModifierMap  var_cas_modifierMap ;
  var_cas_modifierMap = GGS_enumModifierMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumMethodMap  var_cas_methodMap ;
  var_cas_methodMap = GGS_enumMethodMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumMessageMap  var_cas_enumMessageMap ;
  var_cas_enumMessageMap = GGS_enumMessageMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumOperatorMap  var_cas_operatorMap ;
  var_cas_operatorMap = GGS_enumOperatorMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_81 = true ;
    while (syntaxRepeat_81) {
      switch (select_repeat_semantics_parser_81 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_operator) COMMA_HERE) ;
          GGS_lstring  var_cas_operatorName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_operatorName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_signature ;
          var_cas_signature = GGS_L_EXsignature ::constructor_emptyList () ;
          GGS_typeVariablesMap  var_cas_localVariableMap ;
          var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_argumentList ;
          var_cas_argumentList = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList () ;
          switch (select_semantics_parser_82 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              GGS_lstring  var_cas_typeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              if (((var_cas_typeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (8013)))._operator_isNotEqual (GGS_string (true, "location"))).isBuiltAndTrue ()) {
                var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the type should be '@location'") COMMA_SOURCE_FILE_AT_LINE (8015)) ;
              }
              GGS_AC_galgasType  var_cas_type_semantique ;
              var_cas_type_semantique = GGS_typeGalgas_location ::constructor_new (_inLexique COMMA_HERE) ;
              GGS_EXformalArgumentPassingMode var_cas_argumentConstantIn ;
              var_cas_argumentConstantIn = GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
              switch (select_semantics_parser_83 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (8022)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (8022)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true), var_cas_nomArgument) ;
                  var_cas_localVariableMap.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (8024)) ;
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (8028)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (8028)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true), var_cas_nomArgument) ;
                  var_cas_localVariableMap.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (8030)) ;
                  } break ;
                default :
                  break ;
              }
              var_cas_signature._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_enumOperatorDefinitionList  var_cas_enumOperatorDefinitionList ;
          var_cas_enumOperatorDefinitionList = GGS_enumOperatorDefinitionList ::constructor_emptyList () ;
          { bool syntaxRepeat_84 = true ;
            while (syntaxRepeat_84) {
                GGS_lstring  var_cas_leftConstant ;
                _inLexique._assignFromAttribute_tokenString (var_cas_leftConstant) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_luint  var_cas_leftConstantIndex ;
                GGS_bool automatic_var_37 ;
                const GGS_enumConstantMap  _temp_304203 = var_cas_constantMap ;
                if (_temp_304203._isBuilt ()) {
                  _temp_304203 (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_leftConstant, var_cas_leftConstantIndex, automatic_var_37 COMMA_SOURCE_FILE_AT_LINE (8040)) ;
                }
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                GGS_lstring  var_cas_rightConstant ;
                _inLexique._assignFromAttribute_tokenString (var_cas_rightConstant) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_luint  var_cas_rightConstantIndex ;
                GGS_bool automatic_var_38 ;
                const GGS_enumConstantMap  _temp_304396 = var_cas_constantMap ;
                if (_temp_304396._isBuilt ()) {
                  _temp_304396 (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_rightConstant, var_cas_rightConstantIndex, automatic_var_38 COMMA_SOURCE_FILE_AT_LINE (8045)) ;
                }
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                GGS_lstring  var_cas_targetConstant ;
                _inLexique._assignFromAttribute_tokenString (var_cas_targetConstant) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_luint  var_cas_targetConstantIndex ;
                GGS_bool automatic_var_39 ;
                const GGS_enumConstantMap  _temp_304595 = var_cas_constantMap ;
                if (_temp_304595._isBuilt ()) {
                  _temp_304595 (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_targetConstant, var_cas_targetConstantIndex, automatic_var_39 COMMA_SOURCE_FILE_AT_LINE (8050)) ;
                }
                GGS_typeInstructionList  var_cas_instructionList ;
                var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
                switch (select_semantics_parser_85 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_parse (_inLexique) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_parse (_inLexique) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_enumOperatorDefinitionList._addAssign_operation (var_cas_leftConstant, var_cas_leftConstantIndex, var_cas_rightConstant, var_cas_rightConstantIndex, var_cas_targetConstant, var_cas_targetConstantIndex, var_cas_instructionList) ;
              switch (select_repeat_semantics_parser_84 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_84 = false ;
                  break ;
              }
            }
          }
          var_cas_operatorMap.modifier_insertKey (_inLexique, var_cas_operatorName, var_cas_enumOperatorDefinitionList, var_cas_signature, var_cas_argumentList COMMA_SOURCE_FILE_AT_LINE (8070)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          GGS_lstring  var_cas_actionName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_signature ;
          var_cas_signature = GGS_L_EXsignature ::constructor_emptyList () ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_argumentList ;
          var_cas_argumentList = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList () ;
          switch (select_semantics_parser_86 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              var_cas_signature._addAssign_operation (GGS_typeGalgas_location ::constructor_new (_inLexique COMMA_HERE), GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              GGS_lstring  var_cas_typeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              switch (select_semantics_parser_87 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_enumUsedConstantMap  var_cas_definedSourceMap ;
          var_cas_definedSourceMap = GGS_enumUsedConstantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_enumModifierDefinitionList  var_cas_enumActionDefinitionList ;
          var_cas_enumActionDefinitionList = GGS_enumModifierDefinitionList ::constructor_emptyList () ;
          { bool syntaxRepeat_88 = true ;
            while (syntaxRepeat_88) {
                GGS_lstring  var_cas_sourceName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_sourceName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_40 ;
                const GGS_enumConstantMap  _temp_305937 = var_cas_constantMap ;
                if (_temp_305937._isBuilt ()) {
                  _temp_305937 (HERE)->method_searchKey (_inLexique, var_cas_sourceName, automatic_var_40 COMMA_SOURCE_FILE_AT_LINE (8097)) ;
                }
                var_cas_definedSourceMap.modifier_insertKey (_inLexique, var_cas_sourceName COMMA_SOURCE_FILE_AT_LINE (8098)) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                GGS_lstring  var_cas_targetName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_targetName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_41 ;
                const GGS_enumConstantMap  _temp_306110 = var_cas_constantMap ;
                if (_temp_306110._isBuilt ()) {
                  _temp_306110 (HERE)->method_searchKey (_inLexique, var_cas_targetName, automatic_var_41 COMMA_SOURCE_FILE_AT_LINE (8102)) ;
                }
                switch (select_semantics_parser_89 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_parse (_inLexique) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_parse (_inLexique) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_enumActionDefinitionList._addAssign_operation (var_cas_sourceName, var_cas_targetName, GGS_typeInstructionList ::constructor_emptyList ()) ;
              switch (select_repeat_semantics_parser_88 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_88 = false ;
                  break ;
              }
            }
          }
          var_cas_modifierMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_enumActionDefinitionList, var_cas_signature, var_cas_argumentList COMMA_SOURCE_FILE_AT_LINE (8114)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          GGS_lstring  var_cas_actionName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_signature ;
          var_cas_signature = GGS_L_EXsignature ::constructor_emptyList () ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_argumentList ;
          var_cas_argumentList = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList () ;
          switch (select_semantics_parser_90 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              var_cas_signature._addAssign_operation (GGS_typeGalgas_location ::constructor_new (_inLexique COMMA_HERE), GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              GGS_lstring  var_cas_typeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              switch (select_semantics_parser_91 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_enumUsedConstantMap  var_cas_definedSourceMap ;
          var_cas_definedSourceMap = GGS_enumUsedConstantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_enumMethodDefinitionList  var_cas_enumActionDefinitionList ;
          var_cas_enumActionDefinitionList = GGS_enumMethodDefinitionList ::constructor_emptyList () ;
          { bool syntaxRepeat_92 = true ;
            while (syntaxRepeat_92) {
                GGS_lstring  var_cas_sourceName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_sourceName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_42 ;
                const GGS_enumConstantMap  _temp_307261 = var_cas_constantMap ;
                if (_temp_307261._isBuilt ()) {
                  _temp_307261 (HERE)->method_searchKey (_inLexique, var_cas_sourceName, automatic_var_42 COMMA_SOURCE_FILE_AT_LINE (8141)) ;
                }
                var_cas_definedSourceMap.modifier_insertKey (_inLexique, var_cas_sourceName COMMA_SOURCE_FILE_AT_LINE (8142)) ;
                switch (select_semantics_parser_93 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_parse (_inLexique) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_parse (_inLexique) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_enumActionDefinitionList._addAssign_operation (var_cas_sourceName, GGS_typeInstructionList ::constructor_emptyList ()) ;
              switch (select_repeat_semantics_parser_92 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_92 = false ;
                  break ;
              }
            }
          }
          var_cas_methodMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_enumActionDefinitionList, var_cas_signature, var_cas_argumentList COMMA_SOURCE_FILE_AT_LINE (8154)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
          GGS_lstring  var_cas_messageName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_enumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (8161)) ;
          GGS_lstringlist  var_cas_messageStringList ;
          var_cas_messageStringList = GGS_lstringlist ::constructor_emptyList () ;
          var_cas_exEnumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageStringList COMMA_SOURCE_FILE_AT_LINE (8163)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          { bool syntaxRepeat_94 = true ;
            while (syntaxRepeat_94) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              switch (select_repeat_semantics_parser_94 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_94 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_81 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_enum ::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_exEnumMessageMap, var_cas_modifierMap, var_cas_methodMap, var_cas_operatorMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (8187)) ;
  GGS_TypeModel  var_cas_type ;
  var_cas_type = GGS_EnumModel ::constructor_new (_inLexique, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (8189)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_7630_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_78 = true ;
    while (syntaxRepeat_78) {
        switch (select_semantics_parser_79 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
            } break ;
          case 2 : {
            } break ;
          default :
            break ;
        }
        { bool syntaxRepeat_80 = true ;
          while (syntaxRepeat_80) {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_repeat_semantics_parser_80 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_80 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_78 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_78 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_81 = true ;
    while (syntaxRepeat_81) {
      switch (select_repeat_semantics_parser_81 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_operator) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_semantics_parser_82 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              switch (select_semantics_parser_83 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          { bool syntaxRepeat_84 = true ;
            while (syntaxRepeat_84) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                switch (select_semantics_parser_85 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_parse (_inLexique) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_parse (_inLexique) ;
                    } break ;
                  default :
                    break ;
                }
              switch (select_repeat_semantics_parser_84 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_84 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_semantics_parser_86 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              switch (select_semantics_parser_87 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          { bool syntaxRepeat_88 = true ;
            while (syntaxRepeat_88) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                switch (select_semantics_parser_89 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_parse (_inLexique) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_parse (_inLexique) ;
                    } break ;
                  default :
                    break ;
                }
              switch (select_repeat_semantics_parser_88 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_88 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_semantics_parser_90 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              switch (select_semantics_parser_91 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          { bool syntaxRepeat_92 = true ;
            while (syntaxRepeat_92) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                switch (select_semantics_parser_93 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_parse (_inLexique) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_parse (_inLexique) ;
                    } break ;
                  default :
                    break ;
                }
              switch (select_repeat_semantics_parser_92 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_92 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          { bool syntaxRepeat_94 = true ;
            while (syntaxRepeat_94) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              switch (select_repeat_semantics_parser_94 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_94 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_81 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

