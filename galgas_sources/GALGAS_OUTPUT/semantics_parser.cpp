//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semantics_parser.cpp'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       may 9th, 2010, at 18h48'41"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semantics_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semantics_parser.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "galgasTemplateGrammar.h"
#include "galgas_LL1_grammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_galgas_5F_component_i0_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_lexiqueComponents  &var_cas_ioLexiqueMapForUse,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  GGS_lstring  var_cas_componentName ;
  inLexique.assignFromAttribute_tokenString (var_cas_componentName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  const GGS_bool cond_20860 = (GGS_string::constructor_stringWithSourceFilePath (inLexique COMMA_SOURCE_FILE_AT_LINE (570)).reader_pathExtension ()).operator_isNotEqual (GGS_string ("gSemantics")) ;
  if (cond_20860.isBuiltAndTrue ()) {
    var_cas_componentName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("In GALGAS 1.9.11 and later, use '.gSemantics' for extension of a semantics file name") COMMA_SOURCE_FILE_AT_LINE (571)) ;
  }
  const GGS_string var_cas_basename = GGS_string::constructor_stringWithSourceFilePath (inLexique COMMA_SOURCE_FILE_AT_LINE (573)).reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  const GGS_bool cond_21193 = (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (574))).operator_isNotEqual (var_cas_basename) ;
  if (cond_21193.isBuiltAndTrue ()) {
    var_cas_componentName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the component name ('")).operator_concat (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (575)))).operator_concat (GGS_string ("') should be the same as the source file base name ('"))).operator_concat (var_cas_basename)).operator_concat (GGS_string ("')")) COMMA_SOURCE_FILE_AT_LINE (578)) ;
  }
  GGS_string var_cas_defLexique = GGS_string ("") ;
  GGS_ModelMap  var_cas_modelMap = GGS_ModelMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (582)) ;
  GGS_ActionMap  var_cas_actionMap = GGS_ActionMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (583)) ;
  GGS_stringset  var_cas_inclusionsForHeaderFile ;
  GGS_stringset  var_cas_inclusionsForImplementationFile ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (586)) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentEntitiesMap ;
  GGS_stringset  var_cas_classNamesSet = GGS_stringset ::constructor_emptySet () ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant = GGS_typeTableEnAvant ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (589)) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  GGS_stringset  var_cas_includedGrammarComponents ;
  nt_import_5F_headers_5F_semantics_5F_and_5F_grammars_ (inLexique, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_includedGrammarComponents, var_cas_ioLexiqueMapForUse, var_cas_ioSemanticsComponentsMap, var_cas_ioGrammarComponentsMap, var_cas_ioOptionsComponentsMap, var_cas_inclusionsForImplementationFile, var_cas_inclusionsForHeaderFile, var_cas_optionsComponentsMapForUse, var_cas_modelMap, var_cas_actionMap, var_cas_componentEntitiesMap, var_cas_tableEnAvant, var_cas_ioSemanticContext) ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_23807 = inLexique.parsingContext () ;
    GGS_typeTableRoutinesAimplementer  var_cas_UNUSED_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (616)) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_UNUSED_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (617)) ;
    GGS_typeTableEnAvant  var_cas_UNUSED_tableEnAvant = var_cas_tableEnAvant ;
    GGS_M_semanticsEntitiesForUse  var_cas_UNUSED_componentSemanticsEntitiesMap = var_cas_componentEntitiesMap ;
    GGS_EXsemanticContext var_cas_UNUSED_semanticContext = GGS_EXsemanticContext::constructor_new (GGS_M_filewrappers ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (621)), GGS_stringset ::constructor_emptySet (), GGS_EXcategoryMethodMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (623)), GGS_EXcategoryReaderMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (624)), GGS_EXcategoryTemplateMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (625))) ;
    { bool syntaxRepeat_0 = true ;
      while (syntaxRepeat_0) {
        switch (select_semantics_5F_parser_0 (inLexique)) {
          case 2 : {
            nt_semantics_5F_declaration_importSemantics (inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_UNUSED_componentSemanticsEntitiesMap, var_cas_UNUSED_tableNomRoutinesDeclarees, var_cas_UNUSED_tableEnAvant, var_cas_UNUSED_tableRoutinesAimplementer, var_cas_UNUSED_semanticContext) ;
            } break ;
          default :
            syntaxRepeat_0 = false ;
            break ;
        }
      }
    }
  //--- Branch of parse/rewind instruction
    inLexique.setParsingContext (context_23807) ;
    GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (641)) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (642)) ;
    GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList ::constructor_emptyList () ;
    { bool syntaxRepeat_0 = true ;
      while (syntaxRepeat_0) {
        switch (select_semantics_5F_parser_0 (inLexique)) {
          case 2 : {
            nt_semantics_5F_declaration_ (inLexique, var_cas_componentEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_optionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext) ;
            } break ;
          default :
            syntaxRepeat_0 = false ;
            break ;
        }
      }
    }
  //--- End of parse/rewind instruction
  const GGS_bool cond_24250 = (var_cas_ioSemanticsComponentsMap.reader_hasKey (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (658)))).operator_not () ;
  if (cond_24250.isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap = GGS_M_optionComponents ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (659)) ;
    var_cas_ioSemanticsComponentsMap.modifier_insertKey (inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentEntitiesMap COMMA_SOURCE_FILE_AT_LINE (660)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  {
    GGS_typeTableNomRoutinesDeclarees::cEnumerator enumerator_24393 (var_cas_tableNomRoutinesDeclarees, true) ;
    const GGS_typeTableNomRoutinesDeclarees::cElement * operand_24393 = NULL ;
    while (((operand_24393 = enumerator_24393.nextObject ()))) {
      macroValidPointer (operand_24393) ;
      const GGS_bool cond_24581 = (var_cas_tableRoutinesAimplementer.reader_hasKey (operand_24393->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (677)))).operator_not () ;
      if (cond_24581.isBuiltAndTrue ()) {
        operand_24393->mKey.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the routine '")).operator_concat (operand_24393->mKey)).operator_concat (GGS_string ("' is not implemented in the component")) COMMA_SOURCE_FILE_AT_LINE (680)) ;
      }
    }
  }
  {
    GGS_typeTableEnAvant::cEnumerator enumerator_24681 (var_cas_tableEnAvant, true) ;
    const GGS_typeTableEnAvant::cElement * operand_24681 = NULL ;
    while (((operand_24681 = enumerator_24681.nextObject ()))) {
      macroValidPointer (operand_24681) ;
      const GGS_bool cond_24870 = (var_cas_componentEntitiesMap.reader_hasKey (operand_24681->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (684)))).operator_not () ;
      if (cond_24870.isBuiltAndTrue ()) {
        operand_24681->mKey.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '@")).operator_concat (operand_24681->mKey)).operator_concat (GGS_string ("' forward type is not implemented in the component")) COMMA_SOURCE_FILE_AT_LINE (687)) ;
      }
    }
  }
  if (var_cas_componentName.isBuilt () &&
      var_cas_inclusionsForHeaderFile.isBuilt () &&
      var_cas_defLexique.isBuilt () &&
      var_cas_listeEntitesAengendrer.isBuilt () &&
      var_cas_inclusionsForImplementationFile.isBuilt ()) {
    ::routine_generateSemanticsComponent (inLexique,  var_cas_componentName,  var_cas_inclusionsForHeaderFile,  var_cas_defLexique,  var_cas_listeEntitesAengendrer,  var_cas_inclusionsForImplementationFile COMMA_SOURCE_FILE_AT_LINE (690)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_galgas_5F_component_i0_importGrammarForSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_import_5F_headers_5F_semantics_5F_and_5F_grammars_parse (inLexique) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_semantics_5F_parser_0 (inLexique)) {
        case 2 : {
          nt_semantics_5F_declaration_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_galgas_5F_component_i0_importLexique (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_import_5F_headers_5F_semantics_5F_and_5F_grammars_parse (inLexique) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_semantics_5F_parser_0 (inLexique)) {
        case 2 : {
          nt_semantics_5F_declaration_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_galgas_5F_component_i0_importOptions (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_import_5F_headers_5F_semantics_5F_and_5F_grammars_parse (inLexique) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_semantics_5F_parser_0 (inLexique)) {
        case 2 : {
          nt_semantics_5F_declaration_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_galgas_5F_component_i0_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext,
                                GGS_stringset  &var_cas_ioImportedSemanticsComponentNameSet) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  GGS_lstring  var_cas_componentName ;
  inLexique.assignFromAttribute_tokenString (var_cas_componentName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  ::routine_enterBuiltinTypes (inLexique,  var_cas_componentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (722)) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents = GGS_stringset ::constructor_emptySet () ;
  GGS_ModelMap  var_cas_modelMap ;
  GGS_ActionMap  var_cas_actionMap ;
  nt_import_5F_headers_5F_semantics_5F_and_5F_grammars_importSemantics (inLexique, var_cas_ioSemanticsComponentsMap, var_cas_includedSemanticsComponents, var_cas_includedOptionComponents, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_ioSemanticContext, var_cas_ioImportedSemanticsComponentNameSet) ;
  GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (739)) ;
  GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (740)) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant = GGS_typeTableEnAvant ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (741)) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_semantics_5F_parser_0 (inLexique)) {
        case 2 : {
          nt_semantics_5F_declaration_importSemantics (inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  const GGS_bool cond_27145 = (var_cas_ioSemanticsComponentsMap.reader_hasKey (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (755)))).operator_not () ;
  if (cond_27145.isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap = GGS_M_optionComponents ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (756)) ;
    var_cas_ioSemanticsComponentsMap.modifier_insertKey (inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (757)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_galgas_5F_component_i0_importSyntax (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_import_5F_headers_5F_semantics_5F_and_5F_grammars_parse (inLexique) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_semantics_5F_parser_0 (inLexique)) {
        case 2 : {
          nt_semantics_5F_declaration_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "parse_semantics_component_for_importing"     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_parse_semantics_component_for_importing (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inFileName,
                                GGS_M_semanticsComponents  & var_cas_ioSemanticsMapForUse,
                                GGS_EXsemanticContext & var_cas_ioSemanticContext,
                                GGS_stringset  & var_cas_ioImportedSemanticsComponentNameSet
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_parse_semantics_component_for_importing at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  const GGS_string _depExtension = GGS_string ("") ;
  const GGS_string _depPath = GGS_string ("") ;
  if (_depExtension.isBuilt () && _depPath.isBuilt ()) {
    C_Grammar_galgas_5F_LL_31__5F_grammar::_performSourceFileParsing_importSemantics (inLexique,
                                  _depExtension.string (),
                                  _depPath.string (),
                                  NULL,
                                  var_cas_inFileName,
                                  var_cas_ioSemanticsMapForUse,
                                  var_cas_ioSemanticContext,
                                  var_cas_ioImportedSemanticsComponentNameSet
                                  COMMA_SOURCE_FILE_AT_LINE (829)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_parse_semantics_component_for_importing\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'import_headers_semantics_and_grammars'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_import_5F_headers_5F_semantics_5F_and_5F_grammars_i1_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_stringset  &var_cas_outImportedSemanticsComponentNameSet,
                                GGS_stringset  &var_cas_outIncludedMetamodelComponents,
                                GGS_stringset  &var_cas_outImportedOptionComponents,
                                GGS_stringset  &var_cas_outImportedGrammarComponents,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_stringset  &var_cas_outInclusionsForImplementationFile,
                                GGS_stringset  &var_cas_outInclusionsForHeaderFile,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  var_cas_outActionMap = GGS_ActionMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (861)) ;
  var_cas_outInclusionsForHeaderFile = GGS_stringset ::constructor_emptySet () ;
  var_cas_outInclusionsForImplementationFile = GGS_stringset ::constructor_emptySet () ;
  var_cas_outImportedSemanticsComponentNameSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_outIncludedMetamodelComponents = GGS_stringset ::constructor_emptySet () ;
  var_cas_outImportedOptionComponents = GGS_stringset ::constructor_emptySet () ;
  var_cas_outImportedGrammarComponents = GGS_stringset ::constructor_emptySet () ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (868)) ;
  var_cas_ioOptionsComponentsMapForUse = GGS_M_optionComponents ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (869)) ;
  var_cas_outModelMap = GGS_ModelMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (871)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("char"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (873)), GGS_CharModel ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (873)) COMMA_SOURCE_FILE_AT_LINE (873)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("string"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (875)), GGS_StringModel ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (875)) COMMA_SOURCE_FILE_AT_LINE (875)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("uint"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (877)), GGS_UIntModel ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (877)) COMMA_SOURCE_FILE_AT_LINE (877)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("sint"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (879)), GGS_SIntModel ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (879)) COMMA_SOURCE_FILE_AT_LINE (879)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("uint64"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (881)), GGS_UInt64Model ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (881)) COMMA_SOURCE_FILE_AT_LINE (881)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("sint64"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (883)), GGS_SInt64Model ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (883)) COMMA_SOURCE_FILE_AT_LINE (883)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("bool"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (885)), GGS_BoolModel ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (885)) COMMA_SOURCE_FILE_AT_LINE (885)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("double"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (887)), GGS_DoubleModel ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (887)) COMMA_SOURCE_FILE_AT_LINE (887)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lchar"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (889)), GGS_LCharModel ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (889)) COMMA_SOURCE_FILE_AT_LINE (889)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lstring"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (891)), GGS_LStringModel ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (891)) COMMA_SOURCE_FILE_AT_LINE (891)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("luint"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (893)), GGS_LUIntModel ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (893)) COMMA_SOURCE_FILE_AT_LINE (893)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lsint"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (895)), GGS_LSIntModel ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (895)) COMMA_SOURCE_FILE_AT_LINE (895)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("luint64"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (897)), GGS_LUInt64Model ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (897)) COMMA_SOURCE_FILE_AT_LINE (897)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lsint64"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (899)), GGS_LSInt64Model ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (899)) COMMA_SOURCE_FILE_AT_LINE (899)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lbool"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (901)), GGS_LBoolModel ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (901)) COMMA_SOURCE_FILE_AT_LINE (901)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("ldouble"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (903)), GGS_LDoubleModel ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (903)) COMMA_SOURCE_FILE_AT_LINE (903)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("location"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (905)), GGS_LocationModel ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (905)) COMMA_SOURCE_FILE_AT_LINE (905)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("stringset"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (907)), GGS_StringsetModel ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (907)) COMMA_SOURCE_FILE_AT_LINE (907)) ;
  ::routine_enterBuiltinTypes (inLexique,  var_cas_ioComponentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (909)) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents = GGS_stringset ::constructor_emptySet () ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents = GGS_stringset ::constructor_emptySet () ;
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
      switch (select_semantics_5F_parser_1 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_import) COMMA_HERE) ;
          switch (select_semantics_5F_parser_2 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_option) COMMA_HERE) ;
              GGS_lstring  var_cas_optionComponentName ;
              inLexique.assignFromAttribute_tokenString (var_cas_optionComponentName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForHeaderFile.addAssign_operation (var_cas_optionComponentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (922))) ;
              var_cas_outImportedOptionComponents.addAssign_operation (var_cas_optionComponentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (923))) ;
              GGS_M_cli_options  var_cas_boolOptionsMap ;
              GGS_M_cli_options  var_cas_uintOptionsMap ;
              GGS_M_cli_options  var_cas_stringOptionsMap ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              GGS_lstring  var_cas_fileName ;
              inLexique.assignFromAttribute_tokenString (var_cas_fileName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              GGS_M_optionComponents  var_cas_importedOptionComponentsMap = GGS_M_optionComponents ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (930)) ;
              nt_parse_5F_option_5F_component_5F_for_5F_importing_ (inLexique, var_cas_fileName, var_cas_importedOptionComponentsMap) ;
              if (var_cas_importedOptionComponentsMap.isBuilt ()) {
                var_cas_importedOptionComponentsMap (HERE)->method_searchKey (inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap COMMA_SOURCE_FILE_AT_LINE (935)) ;
              }
              var_cas_ioOptionsComponentsMapForUse.modifier_insertKey (inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap COMMA_SOURCE_FILE_AT_LINE (936)) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) COMMA_HERE) ;
              GGS_lstring  var_cas_grammarComponentName ;
              inLexique.assignFromAttribute_tokenString (var_cas_grammarComponentName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForImplementationFile.addAssign_operation ((var_cas_grammarComponentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (941))).operator_concat (GGS_string (".h"))) ;
              var_cas_outImportedGrammarComponents.addAssign_operation (var_cas_grammarComponentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (942))) ;
              GGS_M_grammarComponents  var_cas_grammarComponentsMap ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              GGS_lstring  var_cas_sourceFile ;
              inLexique.assignFromAttribute_tokenString (var_cas_sourceFile) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              var_cas_grammarComponentsMap = GGS_M_grammarComponents ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (947)) ;
              nt_parse_5F_grammar_5F_component_5F_for_5F_importing_ (inLexique, var_cas_sourceFile, var_cas_grammarComponentsMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioSemanticContext) ;
              GGS_nonterminalSymbolLabelMapForGrammarAnalysis  var_cas_nonterminalSymbolParametersMap ;
              GGS_lstring  var_cas_lexiqueClassName ;
              GGS_M_optionComponents  automatic_var_34269_0 ;
              if (var_cas_grammarComponentsMap.isBuilt ()) {
                var_cas_grammarComponentsMap (HERE)->method_searchKey (inLexique, var_cas_grammarComponentName, var_cas_nonterminalSymbolParametersMap, var_cas_lexiqueClassName, automatic_var_34269_0 COMMA_SOURCE_FILE_AT_LINE (956)) ;
              }
              GGS_M_nonterminalSymbolAlts  var_cas_grammarAltMap = GGS_M_nonterminalSymbolAlts ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (957)) ;
              {
                GGS_nonterminalSymbolLabelMapForGrammarAnalysis::cEnumerator enumerator_34374 (var_cas_nonterminalSymbolParametersMap, true) ;
                const GGS_nonterminalSymbolLabelMapForGrammarAnalysis::cElement * operand_34374 = NULL ;
                while (((operand_34374 = enumerator_34374.nextObject ()))) {
                  macroValidPointer (operand_34374) ;
                  GGS_L_EXsignature  var_cas_formalParametersList = GGS_L_EXsignature ::constructor_emptyList () ;
                  {
                    GGS_signatureForGrammarAnalysis::cEnumerator enumerator_34473 (operand_34374->mInfo.mFormalParametersList, true) ;
                    const GGS_signatureForGrammarAnalysis::cElement * operand_34473 = NULL ;
                    while (((operand_34473 = enumerator_34473.nextObject ()))) {
                      macroValidPointer (operand_34473) ;
                      GGS_AC_semanticsEntity  var_cas_e ;
                      if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
                        var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, operand_34473->mGalgasTypeNameForGrammarAnalysis, var_cas_e COMMA_SOURCE_FILE_AT_LINE (962)) ;
                      }
                      GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_e.getPtr (), true, operand_34473->mGalgasTypeNameForGrammarAnalysis COMMA_SOURCE_FILE_AT_LINE (963)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (963)) ;
                      var_cas_formalParametersList.addAssign_operation (var_cas_type, operand_34473->mFormalArgumentPassingModeForGrammarAnalysis) ;
                    }
                  }
                  var_cas_grammarAltMap.modifier_insertKey (inLexique, operand_34374->mKey, var_cas_formalParametersList COMMA_SOURCE_FILE_AT_LINE (966)) ;
                }
              }
              GGS_AC_semanticsEntity  var_cas_e = GGS_C_grammarForSemantics ::constructor_new (inLexique, var_cas_grammarAltMap, var_cas_lexiqueClassName COMMA_SOURCE_FILE_AT_LINE (968)) ;
              var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_grammarComponentName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (969)) ;
              GGS_lstring  var_cas_path = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (970)) ;
              GGS_lstring  var_cas_extension = GGS_lstring ::constructor_new (inLexique, GGS_string ("h"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (971)) ;
              GGS_lstring  var_cas_fileNameWithPath ;
              if (var_cas_path.isBuilt () &&
                  var_cas_grammarComponentName.isBuilt () &&
                  var_cas_extension.isBuilt ()) {
                ::routine_buildFileNameWithPath (inLexique,  var_cas_fileNameWithPath,  var_cas_path,  var_cas_grammarComponentName,  var_cas_extension COMMA_SOURCE_FILE_AT_LINE (973)) ;
              }
              var_cas_outInclusionsForImplementationFile.addAssign_operation (var_cas_fileNameWithPath.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (974))) ;
              {
                GGS_M_grammarComponents::cEnumerator enumerator_35431 (var_cas_grammarComponentsMap, true) ;
                const GGS_M_grammarComponents::cElement * operand_35431 = NULL ;
                while (((operand_35431 = enumerator_35431.nextObject ()))) {
                  macroValidPointer (operand_35431) ;
                  const GGS_bool cond_35687 = (var_cas_ioGrammarComponentsMap.reader_hasKey (operand_35431->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (976)))).operator_not () ;
                  if (cond_35687.isBuiltAndTrue ()) {
                    var_cas_ioGrammarComponentsMap.modifier_insertKey (inLexique, operand_35431->mKey, operand_35431->mInfo.mNonterminalSymbolParametersMap, operand_35431->mInfo.mLexiqueName, operand_35431->mInfo.mOptionsMap COMMA_SOURCE_FILE_AT_LINE (977)) ;
                  }
                }
              }
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
              GGS_lstring  var_cas_componentName ;
              inLexique.assignFromAttribute_tokenString (var_cas_componentName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForHeaderFile.addAssign_operation (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (989))) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              GGS_lstring  var_cas_sourceFile ;
              inLexique.assignFromAttribute_tokenString (var_cas_sourceFile) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              const GGS_bool cond_37211 = (var_cas_outImportedSemanticsComponentNameSet.reader_hasKey (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (993)))).operator_not () ;
              if (cond_37211.isBuiltAndTrue ()) {
                var_cas_outImportedSemanticsComponentNameSet.addAssign_operation (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (994))) ;
                ::routine_parse_semantics_component_for_importing (inLexique,  var_cas_sourceFile,  var_cas_ioSemanticsComponentsMap,  var_cas_ioSemanticContext,  var_cas_outImportedSemanticsComponentNameSet COMMA_SOURCE_FILE_AT_LINE (996)) ;
                GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
                GGS_M_optionComponents  var_cas_importedOptionsComponentsMap ;
                GGS_ModelMap  automatic_var_36584_0 ;
                GGS_ActionMap  automatic_var_36584_1 ;
                GGS_stringset  automatic_var_36584_2 ;
                GGS_stringset  automatic_var_36584_3 ;
                GGS_stringset  automatic_var_36584_4 ;
                if (var_cas_ioSemanticsComponentsMap.isBuilt ()) {
                  var_cas_ioSemanticsComponentsMap (HERE)->method_searchKey (inLexique, var_cas_componentName, automatic_var_36584_0, automatic_var_36584_1, automatic_var_36584_2, automatic_var_36584_3, automatic_var_36584_4, var_cas_importedOptionsComponentsMap, var_cas_importedEntities COMMA_SOURCE_FILE_AT_LINE (1004)) ;
                }
                {
                  GGS_M_semanticsEntitiesForUse::cEnumerator enumerator_36619 (var_cas_importedEntities, true) ;
                  const GGS_M_semanticsEntitiesForUse::cElement * operand_36619 = NULL ;
                  while (((operand_36619 = enumerator_36619.nextObject ()))) {
                    macroValidPointer (operand_36619) ;
                    const GGS_bool cond_36792 = (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (operand_36619->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1006)))).operator_not () ;
                    if (cond_36792.isBuiltAndTrue ()) {
                      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, operand_36619->mKey, operand_36619->mInfo.aDefEntite COMMA_SOURCE_FILE_AT_LINE (1007)) ;
                    }
                  }
                }
                {
                  GGS_M_optionComponents::cEnumerator enumerator_36994 (var_cas_importedOptionsComponentsMap, true) ;
                  const GGS_M_optionComponents::cElement * operand_36994 = NULL ;
                  while (((operand_36994 = enumerator_36994.nextObject ()))) {
                    macroValidPointer (operand_36994) ;
                    const GGS_bool cond_37174 = (var_cas_ioOptionsComponentsMapForUse.reader_hasKey (operand_36994->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1013)))).operator_not () ;
                    if (cond_37174.isBuiltAndTrue ()) {
                      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_36994->mKey)).operator_concat (GGS_string ("' option component must have been imported")) COMMA_SOURCE_FILE_AT_LINE (1015)) ;
                    }
                  }
                }
              }
              ::routine_importSemanticsComponent (inLexique,  var_cas_ioSemanticsComponentsMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName COMMA_SOURCE_FILE_AT_LINE (1019)) ;
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_import_5F_headers_5F_semantics_5F_and_5F_grammars_i1_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_stringset  &var_cas_outIncludedSemanticsComponents,
                                GGS_stringset  &var_cas_outIncludedOptionComponents,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext,
                                GGS_stringset  &var_cas_ioImportedSemanticsComponentNameSet) {
  var_cas_outActionMap = GGS_ActionMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1042)) ;
  var_cas_outModelMap = GGS_ModelMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1043)) ;
  var_cas_outIncludedSemanticsComponents = GGS_stringset ::constructor_emptySet () ;
  var_cas_outIncludedOptionComponents = GGS_stringset ::constructor_emptySet () ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents = GGS_stringset ::constructor_emptySet () ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents = GGS_stringset ::constructor_emptySet () ;
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
      switch (select_semantics_5F_parser_1 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_import) COMMA_HERE) ;
          switch (select_semantics_5F_parser_2 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_option) COMMA_HERE) ;
              GGS_lstring  var_cas_optionComponentName ;
              inLexique.assignFromAttribute_tokenString (var_cas_optionComponentName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              var_cas_outIncludedOptionComponents.addAssign_operation (var_cas_optionComponentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1057))) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              nt_parse_5F_option_5F_component_5F_for_5F_importing_parse (inLexique) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              nt_parse_5F_grammar_5F_component_5F_for_5F_importing_parse (inLexique) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
              GGS_lstring  var_cas_componentName ;
              inLexique.assignFromAttribute_tokenString (var_cas_componentName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              var_cas_outIncludedSemanticsComponents.addAssign_operation (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1071))) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              GGS_lstring  var_cas_sourceFile ;
              inLexique.assignFromAttribute_tokenString (var_cas_sourceFile) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              ::routine_parse_semantics_component_for_importing (inLexique,  var_cas_sourceFile,  var_cas_ioSemanticsComponentsMap,  var_cas_ioSemanticContext,  var_cas_ioImportedSemanticsComponentNameSet COMMA_SOURCE_FILE_AT_LINE (1075)) ;
              GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
              GGS_ModelMap  automatic_var_39347_0 ;
              GGS_ActionMap  automatic_var_39347_1 ;
              GGS_stringset  automatic_var_39347_2 ;
              GGS_stringset  automatic_var_39347_3 ;
              GGS_stringset  automatic_var_39347_4 ;
              GGS_M_optionComponents  automatic_var_39347_5 ;
              if (var_cas_ioSemanticsComponentsMap.isBuilt ()) {
                var_cas_ioSemanticsComponentsMap (HERE)->method_searchKey (inLexique, var_cas_componentName, automatic_var_39347_0, automatic_var_39347_1, automatic_var_39347_2, automatic_var_39347_3, automatic_var_39347_4, automatic_var_39347_5, var_cas_importedEntities COMMA_SOURCE_FILE_AT_LINE (1082)) ;
              }
              {
                GGS_M_semanticsEntitiesForUse::cEnumerator enumerator_39380 (var_cas_importedEntities, true) ;
                const GGS_M_semanticsEntitiesForUse::cElement * operand_39380 = NULL ;
                while (((operand_39380 = enumerator_39380.nextObject ()))) {
                  macroValidPointer (operand_39380) ;
                  const GGS_bool cond_39547 = (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (operand_39380->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1084)))).operator_not () ;
                  if (cond_39547.isBuiltAndTrue ()) {
                    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, operand_39380->mKey, operand_39380->mInfo.aDefEntite COMMA_SOURCE_FILE_AT_LINE (1085)) ;
                  }
                }
              }
              ::routine_importSemanticsComponent (inLexique,  var_cas_ioSemanticsComponentsMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName COMMA_SOURCE_FILE_AT_LINE (1089)) ;
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_import_5F_headers_5F_semantics_5F_and_5F_grammars_i1_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
      switch (select_semantics_5F_parser_1 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_import) COMMA_HERE) ;
          switch (select_semantics_5F_parser_2 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_option) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              nt_parse_5F_option_5F_component_5F_for_5F_importing_parse (inLexique) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              nt_parse_5F_grammar_5F_component_5F_for_5F_importing_parse (inLexique) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i2_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  inLexique.assignFromAttribute_tokenString (var_cas_routineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1123)) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  automatic_var_41207_0 ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_localVariableMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, automatic_var_41207_0) ;
  const GGS_bool cond_41754 = var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_routineName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1135))) ;
  if (cond_41754.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1137)) ;
    }
    GGS_typeEntiteRoutine  var_cas_precedenteDeclaration = GGS_typeEntiteRoutine::castFrom (inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1138)) ;
    ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_precedenteDeclaration.reader_aListeArgumentsFormels (inLexique COMMA_SOURCE_FILE_AT_LINE (1140)),  var_cas_listeDeTypes,  GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1139)) ;
  }else if (cond_41754.isBuiltAndFalse ()) {
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1145)) ;
    GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteRoutine ::constructor_new (inLexique, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (1146)) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1147)) ;
  }
  switch (select_semantics_5F_parser_3 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_ioInstructionList = GGS_typeInstructionList ::constructor_emptyList () ;
      nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_localVariableMap, var_cas_ioInstructionList, var_cas_ioSemanticContext) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      GGS_typeEntityToGenerate  var_cas_ea = GGS_typeRoutineAengendrer ::constructor_new (inLexique, var_cas_routineName, var_cas_listeTypeEtNomsArguments, var_cas_ioInstructionList COMMA_SOURCE_FILE_AT_LINE (1169)) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_ea) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1175)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i2_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  inLexique.assignFromAttribute_tokenString (var_cas_routineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1192)) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signature ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_localVariableMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  const GGS_bool cond_43969 = (var_cas_ioExternActionMap.reader_hasKey (var_cas_routineName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1204)))).operator_not () ;
  if (cond_43969.isBuiltAndTrue ()) {
    var_cas_ioExternActionMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_signature, GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1205)) ;
  }
  const GGS_bool cond_44400 = var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_routineName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1207))) ;
  if (cond_44400.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1209)) ;
    }
    GGS_typeEntiteRoutine  var_cas_precedenteDeclaration = GGS_typeEntiteRoutine::castFrom (inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1210)) ;
    ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_precedenteDeclaration.reader_aListeArgumentsFormels (inLexique COMMA_SOURCE_FILE_AT_LINE (1212)),  var_cas_listeDeTypes,  GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1211)) ;
  }else if (cond_44400.isBuiltAndFalse ()) {
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1217)) ;
    GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteRoutine ::constructor_new (inLexique, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (1218)) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1219)) ;
  }
  switch (select_semantics_5F_parser_3 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1230)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i2_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_arguments_5F_list_parse (inLexique) ;
  switch (select_semantics_5F_parser_3 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i3_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  inLexique.assignFromAttribute_tokenString (var_cas_routineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1257)) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  automatic_var_46317_0 ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_localVariableMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, automatic_var_46317_0) ;
  GGS_L_EXsignature  var_cas_returnedTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (1271)) ;
  GGS_AC_galgasType  var_cas_returnedType ;
  GGS_lstring  var_cas_galgasTypeName ;
  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_returnedType, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
  GGS_lstring  var_cas_nomArgument ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_returnedVar = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1282)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1282)) COMMA_SOURCE_FILE_AT_LINE (1282)) ;
  GGS_bool var_cas_modeIn = GGS_bool (false) ;
  var_cas_localVariableMap.modifier_insertOutArgument (inLexique, var_cas_nomArgument, var_cas_returnedType, var_cas_returnedVar COMMA_SOURCE_FILE_AT_LINE (1284)) ;
  const GGS_bool cond_47692 = var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_routineName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1287))) ;
  if (cond_47692.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1289)) ;
    }
    GGS_typeEntiteFonction  var_cas_precedenteDeclaration = GGS_typeEntiteFonction::castFrom (inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1290)) ;
    ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_precedenteDeclaration.reader_aListeArgumentsFormels (inLexique COMMA_SOURCE_FILE_AT_LINE (1292)),  var_cas_listeDeTypes,  GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1291)) ;
    ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_precedenteDeclaration.reader_mReturnedType (inLexique COMMA_SOURCE_FILE_AT_LINE (1297)),  var_cas_returnedType,  GGS_location (inLexique),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1296)) ;
  }else if (cond_47692.isBuiltAndFalse ()) {
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1303)) ;
    GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteFonction ::constructor_new (inLexique, var_cas_listeDeTypes, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (1304)) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1305)) ;
  }
  switch (select_semantics_5F_parser_4 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_ioInstructionList = GGS_typeInstructionList ::constructor_emptyList () ;
      nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_localVariableMap, var_cas_ioInstructionList, var_cas_ioSemanticContext) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      GGS_typeEntityToGenerate  var_cas_ea = GGS_typeFonctionAengendrer ::constructor_new (inLexique, var_cas_routineName, var_cas_listeTypeEtNomsArguments, var_cas_returnedType, var_cas_returnedVar, var_cas_ioInstructionList COMMA_SOURCE_FILE_AT_LINE (1327)) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_ea) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1335)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i3_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  inLexique.assignFromAttribute_tokenString (var_cas_routineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1352)) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signature ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_localVariableMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  GGS_L_EXsignature  var_cas_returnedTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (1366)) ;
  GGS_AC_galgasType  var_cas_returnedType ;
  GGS_lstring  var_cas_galgasTypeName ;
  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_returnedType, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
  GGS_lstring  var_cas_nomArgument ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_returnedVar = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1377)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1377)) COMMA_SOURCE_FILE_AT_LINE (1377)) ;
  var_cas_localVariableMap.modifier_insertOutArgument (inLexique, var_cas_nomArgument, var_cas_returnedType, var_cas_returnedVar COMMA_SOURCE_FILE_AT_LINE (1378)) ;
  const GGS_bool cond_51087 = var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_routineName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1381))) ;
  if (cond_51087.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1383)) ;
    }
    GGS_typeEntiteFonction  var_cas_precedenteDeclaration = GGS_typeEntiteFonction::castFrom (inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1384)) ;
    ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_precedenteDeclaration.reader_aListeArgumentsFormels (inLexique COMMA_SOURCE_FILE_AT_LINE (1386)),  var_cas_listeDeTypes,  GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1385)) ;
    ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_precedenteDeclaration.reader_mReturnedType (inLexique COMMA_SOURCE_FILE_AT_LINE (1391)),  var_cas_returnedType,  GGS_location (inLexique),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1390)) ;
  }else if (cond_51087.isBuiltAndFalse ()) {
    var_cas_ioExternActionMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_signature, GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1397)) ;
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1398)) ;
    GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteFonction ::constructor_new (inLexique, var_cas_listeDeTypes, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (1399)) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1400)) ;
  }
  switch (select_semantics_5F_parser_4 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1411)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i3_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_input_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  nt_formal_5F_argument_5F_type_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  switch (select_semantics_5F_parser_4 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i4_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  inLexique.assignFromAttribute_tokenString (var_cas_routineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  const GGS_L_EXsignature  var_cas_listeDeTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  GGS_typeVariablesMap  var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1438)) ;
  GGS_L_EXsignature  var_cas_returnedTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (1443)) ;
  GGS_AC_galgasType  var_cas_returnedType ;
  GGS_lstring  var_cas_galgasTypeName ;
  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_returnedType, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
  GGS_lstring  var_cas_nomArgument ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_returnedVar = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1454)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1454)) COMMA_SOURCE_FILE_AT_LINE (1454)) ;
  GGS_bool var_cas_modeIn = GGS_bool (false) ;
  var_cas_localVariableMap.modifier_insertOutArgument (inLexique, var_cas_nomArgument, var_cas_returnedType, var_cas_returnedVar COMMA_SOURCE_FILE_AT_LINE (1456)) ;
  const GGS_bool cond_54247 = var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_routineName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1459))) ;
  if (cond_54247.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1461)) ;
    }
    GGS_typeEntiteFonction  var_cas_precedenteDeclaration = GGS_typeEntiteFonction::castFrom (inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1462)) ;
    ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_precedenteDeclaration.reader_aListeArgumentsFormels (inLexique COMMA_SOURCE_FILE_AT_LINE (1464)),  var_cas_listeDeTypes,  GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1463)) ;
    ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_precedenteDeclaration.reader_mReturnedType (inLexique COMMA_SOURCE_FILE_AT_LINE (1469)),  var_cas_returnedType,  GGS_location (inLexique),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1468)) ;
  }else if (cond_54247.isBuiltAndFalse ()) {
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1475)) ;
    GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteFonction ::constructor_new (inLexique, var_cas_listeDeTypes, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (1476)) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1477)) ;
  }
  switch (select_semantics_5F_parser_5 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
      nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_localVariableMap, var_cas_instructionList, var_cas_ioSemanticContext) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      GGS_typeEntityToGenerate  var_cas_ea = GGS_typeOnceFunctionToGenerate ::constructor_new (inLexique, var_cas_routineName, var_cas_returnedType, var_cas_returnedVar, var_cas_instructionList COMMA_SOURCE_FILE_AT_LINE (1499)) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_ea) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1506)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i4_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  inLexique.assignFromAttribute_tokenString (var_cas_routineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  const GGS_L_EXsignature  var_cas_listeDeTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  GGS_typeVariablesMap  var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1523)) ;
  const GGS_signatureForGrammarAnalysis  var_cas_signature = GGS_signatureForGrammarAnalysis ::constructor_emptyList () ;
  GGS_L_EXsignature  var_cas_returnedTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (1528)) ;
  GGS_AC_galgasType  var_cas_returnedType ;
  GGS_lstring  var_cas_galgasTypeName ;
  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_returnedType, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
  GGS_lstring  var_cas_nomArgument ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_returnedVar = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1539)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1539)) COMMA_SOURCE_FILE_AT_LINE (1539)) ;
  var_cas_localVariableMap.modifier_insertOutArgument (inLexique, var_cas_nomArgument, var_cas_returnedType, var_cas_returnedVar COMMA_SOURCE_FILE_AT_LINE (1540)) ;
  const GGS_bool cond_57397 = var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_routineName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1543))) ;
  if (cond_57397.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1545)) ;
    }
    GGS_typeEntiteFonction  var_cas_precedenteDeclaration = GGS_typeEntiteFonction::castFrom (inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1546)) ;
    ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_precedenteDeclaration.reader_aListeArgumentsFormels (inLexique COMMA_SOURCE_FILE_AT_LINE (1548)),  var_cas_listeDeTypes,  GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1547)) ;
    ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_precedenteDeclaration.reader_mReturnedType (inLexique COMMA_SOURCE_FILE_AT_LINE (1553)),  var_cas_returnedType,  GGS_location (inLexique),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1552)) ;
  }else if (cond_57397.isBuiltAndFalse ()) {
    var_cas_ioExternActionMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_signature, GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1559)) ;
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1560)) ;
    GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteFonction ::constructor_new (inLexique, var_cas_listeDeTypes, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (1561)) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1562)) ;
  }
  switch (select_semantics_5F_parser_5 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1573)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i4_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  nt_formal_5F_argument_5F_type_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  switch (select_semantics_5F_parser_5 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parent_5F_class_i5_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName,
                                GGS_string &var_cas_outSuperClassMessage,
                                GGS_bool &var_cas_outHasGeneratedInSeparateFileSetting) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1595)) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1596)) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1597)) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1598)) ;
  var_cas_outSuperClassName = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1599)) ;
  var_cas_outSuperClassMessage = GGS_string ("") ;
  var_cas_outHasGeneratedInSeparateFileSetting = GGS_bool (false) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parent_5F_class_i5_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_bool &var_cas_outHasGeneratedInSeparateFileSetting) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1616)) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1617)) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1618)) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1619)) ;
  var_cas_outMessageMap = GGS_classMessageMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1621)) ;
  var_cas_outSuperClasses = GGS_stringset ::constructor_emptySet () ;
  var_cas_outAttributeList = GGS_typeListModel ::constructor_emptyList () ;
  var_cas_outHasGeneratedInSeparateFileSetting = GGS_bool (false) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parent_5F_class_i5_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parent_5F_class_i6_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName,
                                GGS_string &var_cas_outSuperClassMessage,
                                GGS_bool &var_cas_outHasGeneratedInSeparateFileSetting) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extends) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outSuperClassName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_outSuperClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1645)) ;
  }
  GGS_AC_galgasType  var_cas_typeUtilisateur = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1647)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (1647)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_typeUtilisateur.getPtr (), true, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1648)) ;
  var_cas_tableDesMethodes = var_cas_classType.reader_mMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1649)) ;
  var_cas_listeTousAttributsSemantiques = var_cas_classType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (1650)) ;
  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1651)) ;
  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1652)) ;
  var_cas_tableAttributs = var_cas_classType.reader_mNonExternAttributesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1653)) ;
  var_cas_outSuperClassMessage = var_cas_classType.reader_mClassMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (1654)) ;
  var_cas_outHasGeneratedInSeparateFileSetting = var_cas_classType.reader_mHasGeneratedInSeparateFileSetting (inLexique COMMA_SOURCE_FILE_AT_LINE (1655)) ;
  var_cas_tableDesClassesAncetres.modifier_insertKey (inLexique, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1657)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parent_5F_class_i6_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_bool &var_cas_outHasGeneratedInSeparateFileSetting) {
  GGS_lstring  var_cas_superClassName ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extends) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_superClassName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_superClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1677)) ;
  }
  GGS_AC_galgasType  var_cas_typeUtilisateur = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1679)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (1679)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_typeUtilisateur.getPtr (), true, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1680)) ;
  var_cas_tableDesMethodes = var_cas_classType.reader_mMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1681)) ;
  var_cas_listeTousAttributsSemantiques = var_cas_classType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (1682)) ;
  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1683)) ;
  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1684)) ;
  var_cas_tableAttributs = var_cas_classType.reader_mNonExternAttributesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1685)) ;
  var_cas_outHasGeneratedInSeparateFileSetting = var_cas_classType.reader_mHasGeneratedInSeparateFileSetting (inLexique COMMA_SOURCE_FILE_AT_LINE (1686)) ;
  var_cas_tableDesClassesAncetres.modifier_insertKey (inLexique, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1689)) ;
  GGS_TypeModel  var_cas_type ;
  if (var_cas_ioModelMap.isBuilt ()) {
    var_cas_ioModelMap (HERE)->method_searchKey (inLexique, var_cas_superClassName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (1692)) ;
  }
  { const GGS_TypeModel _var_63967 = var_cas_type ; // CAST instruction
    if (_var_63967.getPtr () != NULL) {
      macroValidPointer (_var_63967.getPtr ()) ;
      if (dynamic_cast <cPtr_ClassModel *> (_var_63967.getPtr ()) != NULL) {
        const GGS_ClassModel var_cas_model (_var_63967.getPtr ()) ;
        var_cas_outSuperClasses = var_cas_model.reader_mSuperClasses (inLexique COMMA_SOURCE_FILE_AT_LINE (1695)) ;
        var_cas_outAttributeList = var_cas_model.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (1696)) ;
        var_cas_outMessageMap = var_cas_model.reader_mMessageMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1697)) ;
      }else{
        var_cas_superClassName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '@")).operator_concat (var_cas_superClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1699)))).operator_concat (GGS_string ("' type is not a class")) COMMA_SOURCE_FILE_AT_LINE (1701)) ;
        var_cas_outSuperClasses.drop () ;
        var_cas_outAttributeList.drop () ;
        var_cas_outMessageMap.drop () ;
      }
    }
  }
  var_cas_outSuperClasses.addAssign_operation (var_cas_superClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1702))) ;
  var_cas_outMessageMap = GGS_classMessageMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1704)) ;
  var_cas_outSuperClasses = GGS_stringset ::constructor_emptySet () ;
  var_cas_outAttributeList = GGS_typeListModel ::constructor_emptyList () ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parent_5F_class_i6_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extends) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i7_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  nt_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i7_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  nt_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_importSemantics (inLexique, var_cas_ioModelMap, var_cas_ioExternActionMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i7_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  nt_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_beginning_by_abstract'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i8_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  nt_class_5F_declaration_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext, GGS_bool (true)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i8_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  nt_class_5F_declaration_importSemantics (inLexique, var_cas_ioModelMap, var_cas_ioExternActionMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext, GGS_bool (true)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i8_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_class_5F_declaration_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i9_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  nt_class_5F_declaration_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext, GGS_bool (false)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i9_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  nt_class_5F_declaration_importSemantics (inLexique, var_cas_ioModelMap, var_cas_ioExternActionMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext, GGS_bool (false)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i9_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_class_5F_declaration_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'once_reader'               *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_once_5F_reader_i10_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                const GGS_typeTableMethodes  var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributsHerites,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_L_lazyAttributeList  &var_cas_ioLazyAttributeList) {
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1881)) ;
  {
    GGS_typeSemanticAttributesMap::cEnumerator enumerator_70434 (var_cas_tableAttributsHerites, true) ;
    const GGS_typeSemanticAttributesMap::cElement * operand_70434 = NULL ;
    while (((operand_70434 = enumerator_70434.nextObject ()))) {
      macroValidPointer (operand_70434) ;
      GGS_typeCplusPlusName  var_cas_nomCpp = GGS_typeDirectName ::constructor_new (inLexique, operand_70434->mKey.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1883)), operand_70434->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1883)) COMMA_SOURCE_FILE_AT_LINE (1883)) ;
      var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, operand_70434->mKey, operand_70434->mInfo.mAttributType, var_cas_nomCpp COMMA_SOURCE_FILE_AT_LINE (1884)) ;
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_computedAttributeTypeAndNameList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  { bool syntaxRepeat_6 = true ;
    while (syntaxRepeat_6) {
        GGS_lstring  var_cas_attributeTypeName ;
        inLexique.assignFromAttribute_tokenString (var_cas_attributeTypeName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
        GGS_lstring  var_cas_attributeName ;
        inLexique.assignFromAttribute_tokenString (var_cas_attributeName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
          var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_attributeTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1893)) ;
        }
        GGS_AC_galgasType  var_cas_t = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_attributeTypeName COMMA_SOURCE_FILE_AT_LINE (1894)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (1894)) ;
        GGS_typeCplusPlusName  var_cas_nomCpp = GGS_typeDirectName ::constructor_new (inLexique, var_cas_attributeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1895)), var_cas_attributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1895)) COMMA_SOURCE_FILE_AT_LINE (1895)) ;
        var_cas_methodLocalVariablesMap.modifier_insertOutArgument (inLexique, var_cas_attributeName, var_cas_t, var_cas_nomCpp COMMA_SOURCE_FILE_AT_LINE (1896)) ;
        var_cas_computedAttributeTypeAndNameList.addAssign_operation (var_cas_t, var_cas_attributeName) ;
      switch (select_semantics_5F_parser_6 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_6 = false ;
          break ;
      }
    }
  }
  GGS_L_lazyAttributeList  var_cas_lazyAttributeListForSelfAndSuper = var_cas_ioLazyAttributeList ;
  var_cas_lazyAttributeListForSelfAndSuper.addAssign_operation (GGS_location (inLexique), var_cas_computedAttributeTypeAndNameList, GGS_typeInstructionList ::constructor_emptyList ()) ;
  GGS_AC_galgasType  var_cas_typeDefinition = GGS_typeGalgasClassType ::constructor_new (inLexique, var_cas_inCurrentClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage, GGS_bool (false), var_cas_lazyAttributeListForSelfAndSuper COMMA_SOURCE_FILE_AT_LINE (1907)) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("self"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1919)), var_cas_typeDefinition, GGS_typeCppStarThisName ::constructor_new (inLexique, GGS_location (inLexique), var_cas_inCurrentClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1919)) COMMA_SOURCE_FILE_AT_LINE (1919)) COMMA_SOURCE_FILE_AT_LINE (1919)) ;
  var_cas_typeDefinition = GGS_typeGalgasClassType ::constructor_new (inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage, GGS_bool (false), var_cas_lazyAttributeListForSelfAndSuper COMMA_SOURCE_FILE_AT_LINE (1921)) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("super"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1933)), var_cas_typeDefinition, GGS_typeCppInheritedName ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1933)) COMMA_SOURCE_FILE_AT_LINE (1933)) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap = var_cas_ioComponentSemanticsEntitiesMap ;
  GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_typeDefinition COMMA_SOURCE_FILE_AT_LINE (1936)) ;
  var_cas_componentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_inCurrentClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1937)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_componentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_instructionsList, var_cas_inSemanticContext) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioLazyAttributeList.addAssign_operation (GGS_location (inLexique), var_cas_computedAttributeTypeAndNameList, var_cas_instructionsList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_once_5F_reader_i10_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
  { bool syntaxRepeat_6 = true ;
    while (syntaxRepeat_6) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      switch (select_semantics_5F_parser_6 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_6 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'class_declaration'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_class_5F_declaration_i11_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext,
                                const GGS_bool var_cas_inIsAbstract) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
  GGS_lstring  var_cas_abstractClassName ;
  inLexique.assignFromAttribute_tokenString (var_cas_abstractClassName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_7 (inLexique)) {
    case 1 : {
      const GGS_bool cond_74270 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_abstractClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1977)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_abstractClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1978))))).operator_not () ;
      if (cond_74270.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedClassType ::constructor_new (inLexique, var_cas_abstractClassName COMMA_SOURCE_FILE_AT_LINE (1979)) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (1980)) ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_string var_cas_superClassMessage ;
      GGS_bool var_cas_hasGeneratedInSeparateFileSetting ;
      GGS_lstring  automatic_var_74973_0 ;
      nt_parent_5F_class_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap, automatic_var_74973_0, var_cas_superClassMessage, var_cas_hasGeneratedInSeparateFileSetting) ;
      switch (select_semantics_5F_parser_8 (inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_feature) COMMA_HERE) ;
          GGS_lstring  var_cas_optionString ;
          inLexique.assignFromAttribute_tokenString (var_cas_optionString) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          const GGS_bool cond_75220 = (var_cas_optionString.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2007))).operator_isNotEqual (GGS_string ("generatedInSeparateFile")) ;
          if (cond_75220.isBuiltAndTrue ()) {
            var_cas_optionString.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("only the \"generatedInSeparateFile\" pragma is allowed here") COMMA_SOURCE_FILE_AT_LINE (2009)) ;
          }
          var_cas_hasGeneratedInSeparateFileSetting = GGS_bool (true) ;
          const GGS_bool cond_75438 = (var_cas_tableDesClassesAncetres.reader_count ()).operator_strictSup (GGS_uint (0U)) ;
          if (cond_75438.isBuiltAndTrue ()) {
            var_cas_optionString.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the \"generatedInSeparateFile\" pragma is allowed only for a base class") COMMA_SOURCE_FILE_AT_LINE (2013)) ;
          }
          } break ;
        default :
          break ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (2028)) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (2029)) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (2030)) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      GGS_L_lazyAttributeList  var_cas_onceReaderListToImplement = GGS_L_lazyAttributeList ::constructor_emptyList () ;
      GGS_string var_cas_classMessage = GGS_string ("") ;
      { bool syntaxRepeat_9 = true ;
        while (syntaxRepeat_9) {
          switch (select_semantics_5F_parser_9 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
              switch (select_semantics_5F_parser_10 (inLexique)) {
                case 1 : {
                  GGS_lstring  var_cas_messageText ;
                  inLexique.assignFromAttribute_tokenString (var_cas_messageText) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  const GGS_bool cond_76509 = (var_cas_classMessage.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
                  if (cond_76509.isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the class message is already defined") COMMA_SOURCE_FILE_AT_LINE (2042)) ;
                  }else if (cond_76509.isBuiltAndFalse ()) {
                    const GGS_bool cond_76632 = (var_cas_messageText.ggs_string ().reader_length ()).operator_isEqual (GGS_uint (0U)) ;
                    if (cond_76632.isBuiltAndTrue ()) {
                      var_cas_messageText.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the class message string should not be empty") COMMA_SOURCE_FILE_AT_LINE (2044)) ;
                    }else if (cond_76632.isBuiltAndFalse ()) {
                      var_cas_classMessage = var_cas_messageText.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2045)) ;
                    }
                  }
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_messageName ;
                  inLexique.assignFromAttribute_tokenString (var_cas_messageName) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  GGS_lstring  var_cas_messageText ;
                  inLexique.assignFromAttribute_tokenString (var_cas_messageText) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  const GGS_bool cond_77079 = (var_cas_inheritedMessageMap.reader_hasKey (var_cas_messageName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2054)))).operator_not () ;
                  if (cond_77079.isBuiltAndTrue ()) {
                    var_cas_messageMapForHeirs.modifier_insertKey (inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (2055)) ;
                  }
                  var_cas_tableMessagesClasseConcrete.modifier_insertKey (inLexique, var_cas_messageName, var_cas_messageText COMMA_SOURCE_FILE_AT_LINE (2057)) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_5F_method_ (inLexique, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_5F_abstract_5F_method_ (inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            case 5 : {
              nt_overrided_5F_method_ (inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            case 6 : {
              nt_once_5F_reader_ (inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            default :
              syntaxRepeat_9 = false ;
              break ;
          }
        }
      }
      const GGS_bool cond_79096 = ((var_cas_superClassMessage.reader_length ()).operator_strictSup (GGS_uint (0U))).operator_and ((var_cas_classMessage.reader_length ()).operator_isEqual (GGS_uint (0U))) ;
      if (cond_79096.isBuiltAndTrue ()) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this class should defined a class message, as it inherits from a class that does") COMMA_SOURCE_FILE_AT_LINE (2125)) ;
      }
      {
        GGS_typeClassInheritedMessagesMap::cEnumerator enumerator_79187 (var_cas_inheritedMessageMap, true) ;
        const GGS_typeClassInheritedMessagesMap::cElement * operand_79187 = NULL ;
        while (((operand_79187 = enumerator_79187.nextObject ()))) {
          macroValidPointer (operand_79187) ;
          const GGS_bool cond_79337 = (var_cas_tableMessagesClasseConcrete.reader_hasKey (operand_79187->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2128)))).operator_not () ;
          if (cond_79337.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the message '")).operator_concat (operand_79187->mKey)).operator_concat (GGS_string ("' is not defined")) COMMA_SOURCE_FILE_AT_LINE (2130)) ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasClassType ::constructor_new (inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_classMessage, var_cas_hasGeneratedInSeparateFileSetting, var_cas_onceReaderListToImplement COMMA_SOURCE_FILE_AT_LINE (2133)) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_SOURCE_FILE_AT_LINE (2145)) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_abstractClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2146)) ;
      GGS_typeListeAttributsSemantiques  var_cas_setterAttributeModifierToImplementList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_80038 (var_cas_listeAttributsSemantiquesCourants, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_80038 = NULL ;
        while (((operand_80038 = enumerator_80038.nextObject ()))) {
          macroValidPointer (operand_80038) ;
          GGS_bool var_cas_hasSetter ;
          GGS_AC_galgasType  automatic_var_80131_0 ;
          GGS_bool automatic_var_80131_1 ;
          if (var_cas_tableAttributs.isBuilt ()) {
            var_cas_tableAttributs (HERE)->method_searchKey (inLexique, operand_80038->mAttributeName, automatic_var_80131_0, var_cas_hasSetter, automatic_var_80131_1 COMMA_SOURCE_FILE_AT_LINE (2151)) ;
          }
          const GGS_bool cond_80278 = var_cas_hasSetter ;
          if (cond_80278.isBuiltAndTrue ()) {
            var_cas_setterAttributeModifierToImplementList.addAssign_operation (operand_80038->mAttributType, operand_80038->mAttributeName) ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_getterAttributeReaderToImplementList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_80448 (var_cas_listeAttributsSemantiquesCourants, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_80448 = NULL ;
        while (((operand_80448 = enumerator_80448.nextObject ()))) {
          macroValidPointer (operand_80448) ;
          GGS_bool var_cas_hasGetter ;
          GGS_AC_galgasType  automatic_var_80541_0 ;
          GGS_bool automatic_var_80541_1 ;
          if (var_cas_tableAttributs.isBuilt ()) {
            var_cas_tableAttributs (HERE)->method_searchKey (inLexique, operand_80448->mAttributeName, automatic_var_80541_0, automatic_var_80541_1, var_cas_hasGetter COMMA_SOURCE_FILE_AT_LINE (2163)) ;
          }
          const GGS_bool cond_80686 = var_cas_hasGetter ;
          if (cond_80686.isBuiltAndTrue ()) {
            var_cas_getterAttributeReaderToImplementList.addAssign_operation (operand_80448->mAttributType, operand_80448->mAttributeName) ;
          }
        }
      }
      GGS_typeEntityToGenerate  var_cas_def = GGS_C_classToImplement ::constructor_new (inLexique, var_cas_abstractClassName, var_cas_inIsAbstract, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesClassesAncetres, var_cas_tableMessagesClasseConcrete, var_cas_classMessage, var_cas_hasGeneratedInSeparateFileSetting, var_cas_onceReaderListToImplement, var_cas_setterAttributeModifierToImplementList, var_cas_getterAttributeReaderToImplementList COMMA_SOURCE_FILE_AT_LINE (2172)) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_class_5F_declaration_i11_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext,
                                const GGS_bool var_cas_inIsAbstract) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
  GGS_lstring  var_cas_abstractClassName ;
  inLexique.assignFromAttribute_tokenString (var_cas_abstractClassName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_7 (inLexique)) {
    case 1 : {
      const GGS_bool cond_82148 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_abstractClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2205)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_abstractClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2206))))).operator_not () ;
      if (cond_82148.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedClassType ::constructor_new (inLexique, var_cas_abstractClassName COMMA_SOURCE_FILE_AT_LINE (2207)) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (2208)) ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_stringset  var_cas_superClasses ;
      GGS_typeListModel  var_cas_attributeList ;
      GGS_classMessageMap  var_cas_messageMap ;
      GGS_bool var_cas_hasGeneratedInSeparateFileSetting = GGS_bool (false) ;
      nt_parent_5F_class_importSemantics (inLexique, var_cas_ioModelMap, var_cas_superClasses, var_cas_attributeList, var_cas_messageMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap, var_cas_hasGeneratedInSeparateFileSetting) ;
      switch (select_semantics_5F_parser_8 (inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_feature) COMMA_HERE) ;
          GGS_lstring  var_cas_optionString ;
          inLexique.assignFromAttribute_tokenString (var_cas_optionString) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          const GGS_bool cond_83234 = (var_cas_optionString.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2239))).operator_isNotEqual (GGS_string ("generatedInSeparateFile")) ;
          if (cond_83234.isBuiltAndTrue ()) {
            var_cas_optionString.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("only the \"generatedInSeparateFile\" pragma is allowed here") COMMA_SOURCE_FILE_AT_LINE (2241)) ;
          }
          var_cas_hasGeneratedInSeparateFileSetting = GGS_bool (true) ;
          const GGS_bool cond_83452 = (var_cas_tableDesClassesAncetres.reader_count ()).operator_strictSup (GGS_uint (0U)) ;
          if (cond_83452.isBuiltAndTrue ()) {
            var_cas_optionString.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the \"generatedInSeparateFile\" pragma is allowed only for a base class") COMMA_SOURCE_FILE_AT_LINE (2245)) ;
          }
          } break ;
        default :
          break ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeList, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (2259)) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (2260)) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (2261)) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList ::constructor_emptyList () ;
      GGS_M_optionComponents  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (2264)) ;
      GGS_L_lazyAttributeList  var_cas_onceReaderListToImplement = GGS_L_lazyAttributeList ::constructor_emptyList () ;
      GGS_string var_cas_classMessage = GGS_string ("") ;
      { bool syntaxRepeat_9 = true ;
        while (syntaxRepeat_9) {
          switch (select_semantics_5F_parser_9 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
              switch (select_semantics_5F_parser_10 (inLexique)) {
                case 1 : {
                  GGS_lstring  var_cas_messageText ;
                  inLexique.assignFromAttribute_tokenString (var_cas_messageText) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  const GGS_bool cond_84599 = (var_cas_classMessage.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
                  if (cond_84599.isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the class message is already defined") COMMA_SOURCE_FILE_AT_LINE (2275)) ;
                  }else if (cond_84599.isBuiltAndFalse ()) {
                    const GGS_bool cond_84722 = (var_cas_messageText.ggs_string ().reader_length ()).operator_isEqual (GGS_uint (0U)) ;
                    if (cond_84722.isBuiltAndTrue ()) {
                      var_cas_messageText.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the class message string should not be empty") COMMA_SOURCE_FILE_AT_LINE (2277)) ;
                    }else if (cond_84722.isBuiltAndFalse ()) {
                      var_cas_classMessage = var_cas_messageText.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2278)) ;
                    }
                  }
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_messageName ;
                  inLexique.assignFromAttribute_tokenString (var_cas_messageName) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  GGS_lstring  var_cas_messageText ;
                  inLexique.assignFromAttribute_tokenString (var_cas_messageText) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  const GGS_bool cond_85169 = (var_cas_inheritedMessageMap.reader_hasKey (var_cas_messageName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2287)))).operator_not () ;
                  if (cond_85169.isBuiltAndTrue ()) {
                    var_cas_messageMapForHeirs.modifier_insertKey (inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (2288)) ;
                  }
                  var_cas_tableMessagesClasseConcrete.modifier_insertKey (inLexique, var_cas_messageName, var_cas_messageText COMMA_SOURCE_FILE_AT_LINE (2290)) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_5F_method_ (inLexique, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_5F_abstract_5F_method_ (inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            case 5 : {
              nt_overrided_5F_method_ (inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            case 6 : {
              nt_once_5F_reader_ (inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            default :
              syntaxRepeat_9 = false ;
              break ;
          }
        }
      }
      {
        GGS_typeClassInheritedMessagesMap::cEnumerator enumerator_87027 (var_cas_inheritedMessageMap, true) ;
        const GGS_typeClassInheritedMessagesMap::cElement * operand_87027 = NULL ;
        while (((operand_87027 = enumerator_87027.nextObject ()))) {
          macroValidPointer (operand_87027) ;
          const GGS_bool cond_87178 = (var_cas_tableMessagesClasseConcrete.reader_hasKey (operand_87027->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2356)))).operator_not () ;
          if (cond_87178.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the message '")).operator_concat (operand_87027->mKey)).operator_concat (GGS_string ("' is not defined")) COMMA_SOURCE_FILE_AT_LINE (2358)) ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasClassType ::constructor_new (inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_classMessage, var_cas_hasGeneratedInSeparateFileSetting, var_cas_onceReaderListToImplement COMMA_SOURCE_FILE_AT_LINE (2361)) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_SOURCE_FILE_AT_LINE (2373)) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_abstractClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2374)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      GGS_TypeModel  var_cas_t = GGS_ClassModel ::constructor_new (inLexique, GGS_bool (true), var_cas_superClasses, var_cas_attributeList, var_cas_messageMap COMMA_SOURCE_FILE_AT_LINE (2376)) ;
      var_cas_ioModelMap.modifier_insertKey (inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (2377)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_class_5F_declaration_i11_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_7 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      nt_parent_5F_class_parse (inLexique) ;
      switch (select_semantics_5F_parser_8 (inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_feature) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      nt_attributes_5F_definition_5F_list_parse (inLexique) ;
      { bool syntaxRepeat_9 = true ;
        while (syntaxRepeat_9) {
          switch (select_semantics_5F_parser_9 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
              switch (select_semantics_5F_parser_10 (inLexique)) {
                case 1 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_5F_method_parse (inLexique) ;
              } break ;
            case 4 : {
              nt_non_5F_abstract_5F_method_parse (inLexique) ;
              } break ;
            case 5 : {
              nt_overrided_5F_method_parse (inLexique) ;
              } break ;
            case 6 : {
              nt_once_5F_reader_parse (inLexique) ;
              } break ;
            default :
              syntaxRepeat_9 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'abstract_method'             *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_abstract_5F_method_i12_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_bool var_cas_inIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  const GGS_bool cond_88523 = (var_cas_inIsAbstract).operator_not () ;
  if (cond_88523.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("a concrete class should not declare an abstract method") COMMA_SOURCE_FILE_AT_LINE (2396)) ;
  }
  GGS_lstring  var_cas_nomMethode ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomMethode) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (2400)) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  var_cas_tableDesMethodes.modifier_insertKey (inLexique, var_cas_nomMethode, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (2411)) ;
  GGS_typeInstructionList  var_cas_listeInstructions = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_tableMethodesAimplementer.modifier_insertAbstract (inLexique, var_cas_nomMethode, var_cas_listeDeTypes, var_cas_listeTypeEtNomsArguments, var_cas_listeInstructions COMMA_SOURCE_FILE_AT_LINE (2413)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_abstract_5F_method_i12_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parse_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_method_i13_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                const GGS_typeTableMethodes  var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributsHerites,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outMethodName,
                                GGS_typeInstructionList  &var_cas_outInstructionsList,
                                GGS_L_EXsignature  &var_cas_outMethodSignature,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_L_lazyAttributeList  var_cas_inLazyAttributeListToImplement) {
  inLexique.assignFromAttribute_tokenString (var_cas_outMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (2442)) ;
  {
    GGS_typeSemanticAttributesMap::cEnumerator enumerator_90332 (var_cas_tableAttributsHerites, true) ;
    const GGS_typeSemanticAttributesMap::cElement * operand_90332 = NULL ;
    while (((operand_90332 = enumerator_90332.nextObject ()))) {
      macroValidPointer (operand_90332) ;
      GGS_typeCplusPlusName  var_cas_nomCpp = GGS_typeDirectName ::constructor_new (inLexique, operand_90332->mKey.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2444)), operand_90332->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2444)) COMMA_SOURCE_FILE_AT_LINE (2444)) ;
      var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, operand_90332->mKey, operand_90332->mInfo.mAttributType, var_cas_nomCpp COMMA_SOURCE_FILE_AT_LINE (2445)) ;
    }
  }
  GGS_AC_galgasType  var_cas_typeDefinition = GGS_typeGalgasClassType ::constructor_new (inLexique, var_cas_inCurrentClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage, GGS_bool (false), var_cas_inLazyAttributeListToImplement COMMA_SOURCE_FILE_AT_LINE (2448)) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("self"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (2460)), var_cas_typeDefinition, GGS_typeCppStarThisName ::constructor_new (inLexique, GGS_location (inLexique), var_cas_inCurrentClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2460)) COMMA_SOURCE_FILE_AT_LINE (2460)) COMMA_SOURCE_FILE_AT_LINE (2460)) ;
  var_cas_typeDefinition = GGS_typeGalgasClassType ::constructor_new (inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage, GGS_bool (false), var_cas_inLazyAttributeListToImplement COMMA_SOURCE_FILE_AT_LINE (2462)) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("super"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (2474)), var_cas_typeDefinition, GGS_typeCppInheritedName ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (2474)) COMMA_SOURCE_FILE_AT_LINE (2474)) ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_outMethodSignature, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap = var_cas_ioComponentSemanticsEntitiesMap ;
  GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_typeDefinition COMMA_SOURCE_FILE_AT_LINE (2488)) ;
  var_cas_componentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_inCurrentClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2489)) ;
  var_cas_outInstructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_componentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_outInstructionsList, var_cas_inSemanticContext) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_method_i13_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'non_abstract_method'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_non_5F_abstract_5F_method_i14_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributs,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_L_lazyAttributeList  var_cas_inLazyAttributeListToImplement) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_5F_method_ (inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_inOptionsComponentsMapForUse, var_cas_inClassMessage, var_cas_inSemanticContext, var_cas_inLazyAttributeListToImplement) ;
  var_cas_tableDesMethodes.modifier_insertKey (inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (2546)) ;
  var_cas_tableMethodesAimplementer.modifier_insertNotAbstract (inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList COMMA_SOURCE_FILE_AT_LINE (2547)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_non_5F_abstract_5F_method_i14_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  nt_parse_5F_method_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'overrided_method'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_overrided_5F_method_i15_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributs,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_L_lazyAttributeList  var_cas_inLazyAttributeListToImplement) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_5F_method_ (inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_inOptionsComponentsMapForUse, var_cas_inClassMessage, var_cas_inSemanticContext, var_cas_inLazyAttributeListToImplement) ;
  GGS_L_EXsignature  var_cas_listeDeTypesMethodeOriginale ;
  if (var_cas_tableDesMethodes.isBuilt ()) {
    var_cas_tableDesMethodes (HERE)->method_searchKey (inLexique, var_cas_methodName, var_cas_listeDeTypesMethodeOriginale COMMA_SOURCE_FILE_AT_LINE (2600)) ;
  }
  ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_listeDeTypesMethodeOriginale,  var_cas_methodSignature,  GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (2601)) ;
  var_cas_tableMethodesAimplementer.modifier_insertNotAbstract (inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList COMMA_SOURCE_FILE_AT_LINE (2607)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_overrided_5F_method_i15_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  nt_parse_5F_method_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'formal_arguments_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_arguments_5F_list_i16_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_EXsignature  &var_cas_listeDeTypes,
                                GGS_typeVariablesMap  &var_cas_tableArgumentsMethode,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_signatureForGrammarAnalysis  &var_cas_outSignatureForGrammar) {
  var_cas_listeDeTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  var_cas_listeTypeEtNomsArguments = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList () ;
  var_cas_outSignatureForGrammar = GGS_signatureForGrammarAnalysis ::constructor_emptyList () ;
  { bool syntaxRepeat_11 = true ;
    while (syntaxRepeat_11) {
      switch (select_semantics_5F_parser_11 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__3F_) COMMA_HERE) ;
          GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (2632)) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes.addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          GGS_bool var_cas_modeIn = GGS_bool (true) ;
          switch (select_semantics_5F_parser_12 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2648)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2648)) COMMA_SOURCE_FILE_AT_LINE (2648)) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn, var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedConstInArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2650)) ;
              } break ;
            case 2 : {
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2653)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2653)) COMMA_SOURCE_FILE_AT_LINE (2653)) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn, var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertConstInArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2655)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (2659)) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes.addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_5F_parser_13 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              GGS_lstring  var_cas_nomArgument ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2674)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2674)) COMMA_SOURCE_FILE_AT_LINE (2674)) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2676)) ;
              } break ;
            case 2 : {
              GGS_lstring  var_cas_nomArgument ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2680)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2680)) COMMA_SOURCE_FILE_AT_LINE (2680)) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertInArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2682)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__21_) COMMA_HERE) ;
          GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (2686)) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes.addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          switch (select_semantics_5F_parser_14 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2701)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2701)) COMMA_SOURCE_FILE_AT_LINE (2701)) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (false), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInOutArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2703)) ;
              } break ;
            case 2 : {
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2706)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2706)) COMMA_SOURCE_FILE_AT_LINE (2706)) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (false), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertInOutArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2708)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
          GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (2712)) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes.addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2725)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2725)) COMMA_SOURCE_FILE_AT_LINE (2725)) ;
          GGS_bool var_cas_modeIn = GGS_bool (false) ;
          var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn, var_cas_nomArgument) ;
          var_cas_tableArgumentsMethode.modifier_insertOutArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2728)) ;
          } break ;
        default :
          syntaxRepeat_11 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_arguments_5F_list_i16_importGrammarForSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_signatureForGrammarAnalysis  &var_cas_outSignature) {
  var_cas_outSignature = GGS_signatureForGrammarAnalysis ::constructor_emptyList () ;
  { bool syntaxRepeat_11 = true ;
    while (syntaxRepeat_11) {
      switch (select_semantics_5F_parser_11 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__3F_) COMMA_HERE) ;
          GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (2737)) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_importGrammarForSemantics (inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_5F_parser_12 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (2749)) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_importGrammarForSemantics (inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_5F_parser_13 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__21_) COMMA_HERE) ;
          GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (2761)) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_importGrammarForSemantics (inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_5F_parser_14 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
          GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (2773)) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_importGrammarForSemantics (inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_11 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_arguments_5F_list_i16_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_11 = true ;
    while (syntaxRepeat_11) {
      switch (select_semantics_5F_parser_11 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__3F_) COMMA_HERE) ;
          nt_formal_5F_argument_5F_type_parse (inLexique) ;
          switch (select_semantics_5F_parser_12 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          nt_formal_5F_argument_5F_type_parse (inLexique) ;
          switch (select_semantics_5F_parser_13 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__21_) COMMA_HERE) ;
          nt_formal_5F_argument_5F_type_parse (inLexique) ;
          switch (select_semantics_5F_parser_14 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
          nt_formal_5F_argument_5F_type_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_11 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'formal_input_arguments_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_input_5F_arguments_5F_list_i17_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_EXsignature  &var_cas_listeDeTypes,
                                GGS_typeVariablesMap  &var_cas_tableArgumentsMethode,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_signatureForGrammarAnalysis  &var_cas_outSignatureForGrammar) {
  var_cas_listeDeTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  var_cas_listeTypeEtNomsArguments = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList () ;
  var_cas_outSignatureForGrammar = GGS_signatureForGrammarAnalysis ::constructor_emptyList () ;
  { bool syntaxRepeat_15 = true ;
    while (syntaxRepeat_15) {
      switch (select_semantics_5F_parser_15 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__3F_) COMMA_HERE) ;
          GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (2799)) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes.addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          GGS_bool var_cas_modeIn = GGS_bool (true) ;
          switch (select_semantics_5F_parser_16 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2815)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2815)) COMMA_SOURCE_FILE_AT_LINE (2815)) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn, var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedConstInArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2817)) ;
              } break ;
            case 2 : {
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2820)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2820)) COMMA_SOURCE_FILE_AT_LINE (2820)) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn, var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertConstInArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2822)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (2826)) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes.addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_5F_parser_17 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              GGS_lstring  var_cas_nomArgument ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2841)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2841)) COMMA_SOURCE_FILE_AT_LINE (2841)) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2843)) ;
              } break ;
            case 2 : {
              GGS_lstring  var_cas_nomArgument ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2847)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2847)) COMMA_SOURCE_FILE_AT_LINE (2847)) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertInArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2849)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_15 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_input_5F_arguments_5F_list_i17_importGrammarForSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_signatureForGrammarAnalysis  &var_cas_outSignature) {
  var_cas_outSignature = GGS_signatureForGrammarAnalysis ::constructor_emptyList () ;
  { bool syntaxRepeat_15 = true ;
    while (syntaxRepeat_15) {
      switch (select_semantics_5F_parser_15 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__3F_) COMMA_HERE) ;
          GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (2859)) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_importGrammarForSemantics (inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_5F_parser_16 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (2871)) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_importGrammarForSemantics (inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_5F_parser_17 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_15 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_input_5F_arguments_5F_list_i17_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_15 = true ;
    while (syntaxRepeat_15) {
      switch (select_semantics_5F_parser_15 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__3F_) COMMA_HERE) ;
          nt_formal_5F_argument_5F_type_parse (inLexique) ;
          switch (select_semantics_5F_parser_16 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          nt_formal_5F_argument_5F_type_parse (inLexique) ;
          switch (select_semantics_5F_parser_17 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_15 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'type_parsing'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_type_5F_parsing_i18_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_outTypeDefinition,
                                GGS_lstring  &var_cas_outTypeName) {
  inLexique.assignFromAttribute_tokenString (var_cas_outTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  const GGS_bool cond_108241 = var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_outTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2895))) ;
  if (cond_108241.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_outTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2897)) ;
    }
    var_cas_outTypeDefinition = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (2898)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (2898)) ;
  }else if (cond_108241.isBuiltAndFalse ()) {
    const GGS_bool cond_108365 = var_cas_inTableEnAvant.reader_hasKey (var_cas_outTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2899))) ;
    if (cond_108365.isBuiltAndTrue ()) {
      if (var_cas_inTableEnAvant.isBuilt ()) {
        var_cas_inTableEnAvant (HERE)->method_searchKey (inLexique, var_cas_outTypeName, var_cas_outTypeDefinition COMMA_SOURCE_FILE_AT_LINE (2900)) ;
      }
    }else if (cond_108365.isBuiltAndFalse ()) {
      var_cas_outTypeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '@")).operator_concat (var_cas_outTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2902)))).operator_concat (GGS_string ("' type is not defined")) COMMA_SOURCE_FILE_AT_LINE (2903)) ;
      var_cas_outTypeDefinition.drop () ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_type_5F_parsing_i18_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_i19_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  var_cas_inTargetVarName,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_AC_galgasType  var_cas_targetVarType ;
  GGS_typeCplusPlusName  var_cas_targetVarCppName ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (inLexique, var_cas_inTargetVarName, var_cas_targetVarType, var_cas_targetVarCppName COMMA_SOURCE_FILE_AT_LINE (2936)) ;
  ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_targetVarType,  var_cas_sourceType,  GGS_location (inLexique),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (2938)) ;
  GGS_typeInstruction  var_cas_instruction = GGS_C_assignmentInstruction ::constructor_new (inLexique, var_cas_targetVarCppName, GGS_lstringlist ::constructor_emptyList (), var_cas_sourceExpression COMMA_SOURCE_FILE_AT_LINE (2940)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_i19_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_i20_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_AC_galgasType  var_cas_targetType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (inLexique, var_cas_nomVarDest, var_cas_targetType, var_cas_nomCppVariableSource COMMA_SOURCE_FILE_AT_LINE (2963)) ;
  GGS_lstringlist  var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_18 = true ;
    while (syntaxRepeat_18) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
        GGS_lstring  var_cas_structAttributeName ;
        inLexique.assignFromAttribute_tokenString (var_cas_structAttributeName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
        var_cas_structAttributeList.addAssign_operation (var_cas_structAttributeName) ;
        GGS_typeGalgasStructType  var_cas_structType = GGS_typeGalgasStructType::castFrom (inLexique, var_cas_targetType.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (2971)) ;
        GGS_bool var_cas_found = GGS_bool (false) ;
        {
          GGS_typeListeAttributsSemantiques::cEnumerator enumerator_111431 (var_cas_structType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (2973)), true) ;
          const GGS_typeListeAttributsSemantiques::cElement * operand_111431 = NULL ;
          while (((operand_111431 = enumerator_111431.nextObject ()))
              && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
            macroValidPointer (operand_111431) ;
            var_cas_found = (operand_111431->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2974))).operator_isEqual (var_cas_structAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2974))) ;
            var_cas_targetType = operand_111431->mAttributType ;
          }
        }
        const GGS_bool cond_111772 = (var_cas_found).operator_not () ;
        if (cond_111772.isBuiltAndTrue ()) {
          var_cas_structAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '@")).operator_concat (var_cas_structType.reader_mStructTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (2978)))).operator_concat (GGS_string ("' does not define a '"))).operator_concat (var_cas_structAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (2979)) ;
        }
      switch (select_semantics_5F_parser_18 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_18 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_targetType,  var_cas_sourceType,  GGS_location (inLexique),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (2996)) ;
  GGS_typeInstruction  var_cas_instruction = GGS_C_assignmentInstruction ::constructor_new (inLexique, var_cas_nomCppVariableSource, var_cas_structAttributeList, var_cas_sourceExpression COMMA_SOURCE_FILE_AT_LINE (2998)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_i20_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_18 = true ;
    while (syntaxRepeat_18) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      switch (select_semantics_5F_parser_18 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_18 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i21_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_typeCplusPlusName  var_cas_inTargetVarCppName,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E__3D_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_string var_cas_sourceExpressionConverter ;
  if (var_cas_inTargetType.isBuilt () && var_cas_sourceType.isBuilt ()) {
    cPtr_AC_galgasType * ptr_113589 = var_cas_inTargetType (HERE) ;
    cPtr_AC_galgasType * ptr_113602 = var_cas_sourceType (HERE) ;
    cPtr_typeGalgasListmapType * operand_113589 = dynamic_cast <cPtr_typeGalgasListmapType *> (ptr_113589) ;
    cPtr_typeGalgasListmapType * operand_113602 = dynamic_cast <cPtr_typeGalgasListmapType *> (ptr_113602) ;
    if ((operand_113589 != NULL) && (operand_113602 != NULL)) {
      const GGS_bool cond_113984 = (operand_113589->mListmapTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3034))).operator_isNotEqual (operand_113602->mListmapTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3034))) ;
      if (cond_113984.isBuiltAndTrue ()) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("for '.=' operator, listmap type @")).operator_concat (operand_113589->mListmapTypeName)).operator_concat (GGS_string (" of target object is not compatible with listmap type @"))).operator_concat (operand_113602->mListmapTypeName)).operator_concat (GGS_string (" of source expression")) COMMA_SOURCE_FILE_AT_LINE (3038)) ;
        var_cas_sourceExpressionConverter.drop () ;
      }else if (cond_113984.isBuiltAndFalse ()) {
        var_cas_sourceExpressionConverter = GGS_string ("") ;
      }
    }else{
      cPtr_typeGalgasListType * operand_113589 = dynamic_cast <cPtr_typeGalgasListType *> (ptr_113589) ;
      cPtr_typeGalgasListType * operand_113602 = dynamic_cast <cPtr_typeGalgasListType *> (ptr_113602) ;
      if ((operand_113589 != NULL) && (operand_113602 != NULL)) {
        const GGS_bool cond_114407 = (operand_113589->mListTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3042))).operator_isNotEqual (operand_113602->mListTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3042))) ;
        if (cond_114407.isBuiltAndTrue ()) {
          GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("for '.=' operator, list type @")).operator_concat (operand_113589->mListTypeName)).operator_concat (GGS_string (" of target object is not compatible with list type @"))).operator_concat (operand_113602->mListTypeName)).operator_concat (GGS_string (" of source expression")) COMMA_SOURCE_FILE_AT_LINE (3046)) ;
          var_cas_sourceExpressionConverter.drop () ;
        }else if (cond_114407.isBuiltAndFalse ()) {
          var_cas_sourceExpressionConverter = GGS_string ("") ;
        }
      }else{
        cPtr_typeGalgasSortedListType * operand_113589 = dynamic_cast <cPtr_typeGalgasSortedListType *> (ptr_113589) ;
        cPtr_typeGalgasSortedListType * operand_113602 = dynamic_cast <cPtr_typeGalgasSortedListType *> (ptr_113602) ;
        if ((operand_113589 != NULL) && (operand_113602 != NULL)) {
          const GGS_bool cond_114854 = (operand_113589->mListTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3050))).operator_isNotEqual (operand_113602->mListTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3050))) ;
          if (cond_114854.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("for '.=' operator, sortedlist type @")).operator_concat (operand_113589->mListTypeName)).operator_concat (GGS_string (" of target object is not compatible with sortedlist type @"))).operator_concat (operand_113602->mListTypeName)).operator_concat (GGS_string (" of source expression")) COMMA_SOURCE_FILE_AT_LINE (3054)) ;
            var_cas_sourceExpressionConverter.drop () ;
          }else if (cond_114854.isBuiltAndFalse ()) {
            var_cas_sourceExpressionConverter = GGS_string ("") ;
          }
        }else{
          cPtr_typeGalgas_string * operand_113589 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_113589) ;
          cPtr_typeGalgas_string * operand_113602 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_113602) ;
          if ((operand_113589 != NULL) && (operand_113602 != NULL)) {
            var_cas_sourceExpressionConverter = GGS_string ("") ;
          }else{
            cPtr_typeGalgas_string * operand_113589 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_113589) ;
            cPtr_typeGalgas_lstring * operand_113602 = dynamic_cast <cPtr_typeGalgas_lstring *> (ptr_113602) ;
            if ((operand_113589 != NULL) && (operand_113602 != NULL)) {
              var_cas_sourceExpressionConverter = GGS_string ("ggs_string") ;
            }else{
              GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("for '.=' operator, ")).operator_concat (var_cas_inTargetType.reader_messageGalgasType (inLexique COMMA_SOURCE_FILE_AT_LINE (3062)))).operator_concat (GGS_string (" target object type is not compatible with "))).operator_concat (var_cas_sourceType.reader_messageGalgasType (inLexique COMMA_SOURCE_FILE_AT_LINE (3063)))).operator_concat (GGS_string (" source expression type")) COMMA_SOURCE_FILE_AT_LINE (3065)) ;
              var_cas_sourceExpressionConverter.drop () ;
            }
          }
        }
      }
    }
  }
  GGS_typeInstruction  var_cas_instruction = GGS_C_dotEqualInstruction ::constructor_new (inLexique, var_cas_inTargetVarCppName, var_cas_inStructAttributeList, var_cas_sourceExpression, var_cas_sourceExpressionConverter COMMA_SOURCE_FILE_AT_LINE (3067)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i21_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E__3D_) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'input_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_input_5F_parameters_5F_list_i22_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_assignedVariables  &var_cas_listeAffectationParametresEffectifs,
                                GGS_typeCplusPlusNameList  &var_cas_outAllVariablesList,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  GGS_typeListeCibles  var_cas_listeCibles = GGS_typeListeCibles ::constructor_emptyList () ;
  { bool syntaxRepeat_19 = true ;
    while (syntaxRepeat_19) {
      switch (select_semantics_5F_parser_19 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          switch (select_semantics_5F_parser_20 (inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_nomVariableDest ;
              switch (select_semantics_5F_parser_21 (inLexique)) {
                case 1 : {
                  GGS_AC_galgasType  var_cas_definitionType ;
                  GGS_lstring  var_cas_typeName ;
                  nt_type_5F_parsing_ (inLexique, GGS_typeTableEnAvant ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (3098)), var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
                  inLexique.assignFromAttribute_tokenString (var_cas_nomVariableDest) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_nomCppVariable = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomVariableDest.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (3104)), var_cas_nomVariableDest.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3104)) COMMA_SOURCE_FILE_AT_LINE (3104)) ;
                  var_cas_ioVariablesMap.modifier_insertLocalVariable (inLexique, var_cas_nomVariableDest, var_cas_definitionType, var_cas_nomCppVariable COMMA_SOURCE_FILE_AT_LINE (3105)) ;
                  var_cas_ioInstructionList.addAssign_operation (GGS_typeInstructionDeclarationVarLocale ::constructor_new (inLexique, var_cas_nomCppVariable, var_cas_definitionType COMMA_SOURCE_FILE_AT_LINE (3106))) ;
                  } break ;
                case 2 : {
                  inLexique.assignFromAttribute_tokenString (var_cas_nomVariableDest) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              GGS_AC_galgasType  var_cas_typeVarDest ;
              GGS_typeCplusPlusName  var_cas_nomCppDest ;
              var_cas_ioVariablesMap.modifier_searchForWriteAccess (inLexique, var_cas_nomVariableDest, var_cas_typeVarDest, var_cas_nomCppDest COMMA_SOURCE_FILE_AT_LINE (3112)) ;
              var_cas_listeCibles.addAssign_operation (GGS_typeEntiteDest ::constructor_new (inLexique, var_cas_typeVarDest, var_cas_nomCppDest, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3113))) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2A_) COMMA_HERE) ;
              var_cas_listeCibles.addAssign_operation (GGS_typeJoker ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (3116))) ;
              } break ;
            case 3 : {
              GGS_luint  var_cas_jokerCountWithLocation ;
              inLexique.assignFromAttribute_uint_33__32_value (var_cas_jokerCountWithLocation) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unsigned_5F_literal_5F_integer) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2A_) COMMA_HERE) ;
              GGS_uint  var_cas_jokerCount = var_cas_jokerCountWithLocation.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (3121)) ;
              GGS_uint _variant_117582 = var_cas_jokerCount.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (3122)) ;
              GGS_bool _condition_117582 (_variant_117582.isBuilt (), true) ;
              while (_condition_117582.isBuiltAndTrue ()) {
                _condition_117582 = (var_cas_jokerCount).operator_strictSup (GGS_uint (0U)) ;
                if (_condition_117582.isBuiltAndTrue ()) {
                  if (_variant_117582.uintValue () == 0) {
                    inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (3126)) ;
                    _condition_117582 = GGS_bool (false) ;
                  }else{
                    _variant_117582.decrement_operation (inLexique COMMA_HERE) ;
                    var_cas_listeCibles.addAssign_operation (GGS_typeJoker ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (3124))) ;
                    var_cas_jokerCount.decrement_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (3125)) ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_19 = false ;
          break ;
      }
    }
  }
  GGS_bool var_cas_ellipsis ;
  switch (select_semantics_5F_parser_22 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E__2E__2E_) COMMA_HERE) ;
      var_cas_ellipsis = GGS_bool (true) ;
      } break ;
    case 2 : {
      var_cas_ellipsis = GGS_bool (false) ;
      } break ;
    default :
      break ;
  }
  const GGS_bool cond_118102 = (var_cas_listeAttributsSemantiques.reader_length ()).operator_strictInf (var_cas_listeCibles.reader_length ()) ;
  if (cond_118102.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("too much arguments: ")).operator_concat (var_cas_listeAttributsSemantiques.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3138)))).operator_concat (GGS_string (" expected, "))).operator_concat (var_cas_listeCibles.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3139)))).operator_concat (GGS_string (" found")) COMMA_SOURCE_FILE_AT_LINE (3141)) ;
    var_cas_outAllVariablesList.drop () ;
    var_cas_listeAffectationParametresEffectifs.drop () ;
  }else if (cond_118102.isBuiltAndFalse ()) {
    const GGS_bool cond_118408 = ((var_cas_listeAttributsSemantiques.reader_length ()).operator_strictSup (var_cas_listeCibles.reader_length ())).operator_and ((var_cas_ellipsis).operator_not ()) ;
    if (cond_118408.isBuiltAndTrue ()) {
      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("argument(s) missing: ")).operator_concat (var_cas_listeAttributsSemantiques.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3142)))).operator_concat (GGS_string (" expected, "))).operator_concat (var_cas_listeCibles.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3143)))).operator_concat (GGS_string (" found")) COMMA_SOURCE_FILE_AT_LINE (3145)) ;
      var_cas_outAllVariablesList.drop () ;
      var_cas_listeAffectationParametresEffectifs.drop () ;
    }else if (cond_118408.isBuiltAndFalse ()) {
      var_cas_listeAffectationParametresEffectifs = GGS_L_assignedVariables ::constructor_emptyList () ;
      var_cas_outAllVariablesList = GGS_typeCplusPlusNameList ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_118588 (var_cas_listeAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_118588 = NULL ;
        GGS_typeListeCibles::cEnumerator enumerator_118601 (var_cas_listeCibles, true) ;
        const GGS_typeListeCibles::cElement * operand_118601 = NULL ;
        while (((operand_118588 = enumerator_118588.nextObject ()))
            && ((operand_118601 = enumerator_118601.nextObject ()))) {
          macroValidPointer (operand_118588) ;
          macroValidPointer (operand_118601) ;
          GGS_lstring  var_cas_nomAttributSource = operand_118588->mAttributeName ;
          if (operand_118601->aCible.isBuilt ()) {
            operand_118601->aCible (HERE)->method_verifierType (inLexique, operand_118588->mAttributType, var_cas_nomAttributSource, var_cas_listeAffectationParametresEffectifs, var_cas_outAllVariablesList COMMA_SOURCE_FILE_AT_LINE (3150)) ;
          }
        }
      }
    }
  }
  GGS_typeCplusPlusName  var_cas_nullName = GGS_typeNullName ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3154)) ;
  if (var_cas_outAllVariablesList.isBuilt () &&
      var_cas_listeCibles.reader_length ().isBuilt () &&
      var_cas_listeAttributsSemantiques.reader_length ().isBuilt () &&
      var_cas_nullName.isBuilt ()) {
    ::routine_appendJokersIfNeeded (inLexique,  var_cas_outAllVariablesList,  var_cas_listeCibles.reader_length (),  var_cas_listeAttributsSemantiques.reader_length (),  var_cas_nullName COMMA_SOURCE_FILE_AT_LINE (3155)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_input_5F_parameters_5F_list_i22_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_19 = true ;
    while (syntaxRepeat_19) {
      switch (select_semantics_5F_parser_19 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          switch (select_semantics_5F_parser_20 (inLexique)) {
            case 1 : {
              switch (select_semantics_5F_parser_21 (inLexique)) {
                case 1 : {
                  nt_type_5F_parsing_parse (inLexique) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2A_) COMMA_HERE) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unsigned_5F_literal_5F_integer) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2A_) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_19 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_5F_parser_22 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E__2E__2E_) COMMA_HERE) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_i23_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_AC_galgasType  var_cas_targetType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (inLexique, var_cas_nomVarDest, var_cas_targetType, var_cas_nomCppVariableSource COMMA_SOURCE_FILE_AT_LINE (3186)) ;
  GGS_lstringlist  var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_23 = true ;
    while (syntaxRepeat_23) {
      switch (select_semantics_5F_parser_23 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
          GGS_lstring  var_cas_structAttributeName ;
          inLexique.assignFromAttribute_tokenString (var_cas_structAttributeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          var_cas_structAttributeList.addAssign_operation (var_cas_structAttributeName) ;
          GGS_typeGalgasStructType  var_cas_structType = GGS_typeGalgasStructType::castFrom (inLexique, var_cas_targetType.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (3195)) ;
          GGS_bool var_cas_found = GGS_bool (false) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_120807 (var_cas_structType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (3197)), true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_120807 = NULL ;
            while (((operand_120807 = enumerator_120807.nextObject ()))
                && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
              macroValidPointer (operand_120807) ;
              var_cas_found = (operand_120807->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3198))).operator_isEqual (var_cas_structAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3198))) ;
              var_cas_targetType = operand_120807->mAttributType ;
            }
          }
          const GGS_bool cond_121148 = (var_cas_found).operator_not () ;
          if (cond_121148.isBuiltAndTrue ()) {
            var_cas_structAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '@")).operator_concat (var_cas_structType.reader_mStructTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (3202)))).operator_concat (GGS_string ("' does not define a '"))).operator_concat (var_cas_structAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (3203)) ;
          }
          } break ;
        default :
          syntaxRepeat_23 = false ;
          break ;
      }
    }
  }
  nt_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_ (inLexique, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inSemanticContext, var_cas_nomCppVariableSource, var_cas_targetType, var_cas_structAttributeList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_i23_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_23 = true ;
    while (syntaxRepeat_23) {
      switch (select_semantics_5F_parser_23 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_23 = false ;
          break ;
      }
    }
  }
  nt_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i24_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_typeCplusPlusName  var_cas_inNomCppVariableSource,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2B__3D_) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  if (var_cas_inTargetType.isBuilt ()) {
    var_cas_inTargetType (HERE)->method_handleAddAssignOperatorCall (inLexique, GGS_location (inLexique), var_cas_formalParametersList COMMA_SOURCE_FILE_AT_LINE (3241)) ;
  }
  GGS_typeTypesList  var_cas_typeList = GGS_typeTypesList ::constructor_emptyList () ;
  GGS_typeExpressionList  var_cas_expressionList = GGS_typeExpressionList ::constructor_emptyList () ;
  { bool syntaxRepeat_24 = true ;
    while (syntaxRepeat_24) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList.addAssign_operation (var_cas_resultType, GGS_location (inLexique)) ;
        var_cas_expressionList.addAssign_operation (var_cas_expression) ;
      switch (select_semantics_5F_parser_24 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_24 = false ;
          break ;
      }
    }
  }
  const GGS_bool cond_123481 = (var_cas_formalParametersList.reader_length ()).operator_isNotEqual (var_cas_typeList.reader_length ()) ;
  if (cond_123481.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, (((var_cas_typeList.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3263))).operator_concat (GGS_string (" argument(s), while "))).operator_concat (var_cas_formalParametersList.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3263)))).operator_concat (GGS_string (" are needed")) COMMA_SOURCE_FILE_AT_LINE (3264)) ;
  }else if (cond_123481.isBuiltAndFalse ()) {
    {
      GGS_typeListeAttributsSemantiques::cEnumerator enumerator_123514 (var_cas_formalParametersList, true) ;
      const GGS_typeListeAttributsSemantiques::cElement * operand_123514 = NULL ;
      GGS_typeTypesList::cEnumerator enumerator_123524 (var_cas_typeList, true) ;
      const GGS_typeTypesList::cElement * operand_123524 = NULL ;
      while (((operand_123514 = enumerator_123514.nextObject ()))
          && ((operand_123524 = enumerator_123524.nextObject ()))) {
        macroValidPointer (operand_123514) ;
        macroValidPointer (operand_123524) ;
        ::routine_checkAssignmentTypesCompatibility (inLexique,  operand_123514->mAttributType,  operand_123524->mType,  operand_123524->mEndOfExpressionLocation,  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (3266)) ;
      }
    }
  }
  GGS_typeInstruction  var_cas_instruction = GGS_typeAppendInstruction ::constructor_new (inLexique, var_cas_inNomCppVariableSource, var_cas_inStructAttributeList, var_cas_expressionList COMMA_SOURCE_FILE_AT_LINE (3274)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i24_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2B__3D_) COMMA_HERE) ;
  { bool syntaxRepeat_24 = true ;
    while (syntaxRepeat_24) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
        nt_expression_parse (inLexique) ;
      switch (select_semantics_5F_parser_24 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_24 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i25_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */,
                                const GGS_typeCplusPlusName  var_cas_inNomCppVariableSource,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2B__2B_) COMMA_HERE) ;
  if (var_cas_inTargetType.isBuilt ()) {
    var_cas_inTargetType (HERE)->method_handleIncrementOperatorCall (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3298)) ;
  }
  GGS_typeInstruction  var_cas_instruction = GGS_typeIncrementInstruction ::constructor_new (inLexique, var_cas_inNomCppVariableSource, var_cas_inStructAttributeList, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3300)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i25_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2B__2B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i26_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */,
                                const GGS_typeCplusPlusName  var_cas_inNomCppVariableSource,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__2D_) COMMA_HERE) ;
  if (var_cas_inTargetType.isBuilt ()) {
    var_cas_inTargetType (HERE)->method_handleDecrementOperatorCall (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3324)) ;
  }
  GGS_typeInstruction  var_cas_instruction = GGS_typeDecrementInstruction ::constructor_new (inLexique, var_cas_inNomCppVariableSource, var_cas_inStructAttributeList, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3326)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i26_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__2D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'actual_parameters_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_actual_5F_parameters_5F_list_i27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_L_EXsignature  var_cas_listeTypesParametresFormels,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  GGS_bool automatic_var_127353_0 ;
  nt_parse_5F_parameters_5F_list_ (inLexique, var_cas_listeTypesParametresEffectifs, var_cas_outExpressionList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, automatic_var_127353_0) ;
  ::routine_verifierCompatibiliteArgEffectifsSignature (inLexique,  var_cas_listeTypesParametresFormels,  var_cas_listeTypesParametresEffectifs,  GGS_location (inLexique),  var_cas_ioInstructionList,  var_cas_outExpressionList COMMA_SOURCE_FILE_AT_LINE (3354)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_actual_5F_parameters_5F_list_i27_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_parse_5F_parameters_5F_list_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'parse_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_parameters_5F_list_i28_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_L_actualParametersSignature  &var_cas_listeTypesParametresEffectifs,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_bool &var_cas_outHasInputParameter) {
  var_cas_outExpressionList = GGS_typeExpressionList ::constructor_emptyList () ;
  var_cas_listeTypesParametresEffectifs = GGS_L_actualParametersSignature ::constructor_emptyList () ;
  GGS_stringset  var_cas_exclusiveVariables = GGS_stringset ::constructor_emptySet () ;
  var_cas_outHasInputParameter = GGS_bool (false) ;
  { bool syntaxRepeat_25 = true ;
    while (syntaxRepeat_25) {
      switch (select_semantics_5F_parser_25 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_expressionType ;
          GGS_typeExpression  var_cas_expressionValue ;
          nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expressionValue, var_cas_expressionType) ;
          GGS_EXactualParametersPassingMode var_cas_parameterPassingMode = GGS_EXactualParametersPassingMode::constructor_parameterOut (inLexique COMMA_SOURCE_FILE_AT_LINE (3393)) ;
          var_cas_listeTypesParametresEffectifs.addAssign_operation (var_cas_expressionType, var_cas_parameterPassingMode) ;
          var_cas_outExpressionList.addAssign_operation (var_cas_expressionValue) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          GGS_EXactualParametersPassingMode var_cas_parameterPassingMode = GGS_EXactualParametersPassingMode::constructor_parameterIn (inLexique COMMA_SOURCE_FILE_AT_LINE (3398)) ;
          switch (select_semantics_5F_parser_26 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2A_) COMMA_HERE) ;
              var_cas_listeTypesParametresEffectifs.addAssign_operation (GGS_typeGalgas_jokerInParameterList ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (3401)), var_cas_parameterPassingMode) ;
              var_cas_outExpressionList.addAssign_operation (GGS_typeJokerInExpression ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (3402))) ;
              } break ;
            case 2 : {
              GGS_luint  var_cas_jokerCountWithLocation ;
              inLexique.assignFromAttribute_uint_33__32_value (var_cas_jokerCountWithLocation) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unsigned_5F_literal_5F_integer) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2A_) COMMA_HERE) ;
              GGS_uint  var_cas_jokerCount = var_cas_jokerCountWithLocation.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (3407)) ;
              GGS_uint _variant_129735 = var_cas_jokerCount.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (3408)) ;
              GGS_bool _condition_129735 (_variant_129735.isBuilt (), true) ;
              while (_condition_129735.isBuiltAndTrue ()) {
                _condition_129735 = (var_cas_jokerCount).operator_strictSup (GGS_uint (0U)) ;
                if (_condition_129735.isBuiltAndTrue ()) {
                  if (_variant_129735.uintValue () == 0) {
                    inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (3413)) ;
                    _condition_129735 = GGS_bool (false) ;
                  }else{
                    _variant_129735.decrement_operation (inLexique COMMA_HERE) ;
                    var_cas_listeTypesParametresEffectifs.addAssign_operation (GGS_typeGalgas_jokerInParameterList ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (3410)), var_cas_parameterPassingMode) ;
                    var_cas_outExpressionList.addAssign_operation (GGS_typeJokerInExpression ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (3411))) ;
                    var_cas_jokerCount.decrement_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (3412)) ;
                  }
                }
              }
              } break ;
            case 3 : {
              GGS_AC_galgasType  var_cas_typeArgument ;
              GGS_typeCplusPlusName  var_cas_nomCppArgument ;
              GGS_lstring  var_cas_nomArgument ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              var_cas_ioVariablesMap.modifier_searchForWriteAccess (inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument COMMA_SOURCE_FILE_AT_LINE (3419)) ;
              var_cas_listeTypesParametresEffectifs.addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
              GGS_typeExpression  var_cas_e = GGS_typeVarInExpression ::constructor_new (inLexique, var_cas_nomCppArgument, GGS_lstringlist ::constructor_emptyList () COMMA_SOURCE_FILE_AT_LINE (3421)) ;
              var_cas_outExpressionList.addAssign_operation (var_cas_e) ;
              const GGS_bool cond_130390 = var_cas_exclusiveVariables.reader_hasKey (var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3423))) ;
              if (cond_130390.isBuiltAndTrue ()) {
                var_cas_nomArgument.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this object is already named as input or output/input effectif argument of current instruction") COMMA_SOURCE_FILE_AT_LINE (3425)) ;
              }else if (cond_130390.isBuiltAndFalse ()) {
                var_cas_exclusiveVariables.addAssign_operation (var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3426))) ;
              }
              var_cas_outHasInputParameter = GGS_bool (true) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21__3F_) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_typeArgument ;
          GGS_typeCplusPlusName  var_cas_nomCppArgument ;
          GGS_lstring  var_cas_nomArgument ;
          inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument COMMA_SOURCE_FILE_AT_LINE (3436)) ;
          GGS_lstringlist  var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList () ;
          { bool syntaxRepeat_27 = true ;
            while (syntaxRepeat_27) {
              switch (select_semantics_5F_parser_27 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
                  GGS_lstring  var_cas_structAttributeName ;
                  inLexique.assignFromAttribute_tokenString (var_cas_structAttributeName) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  GGS_typeGalgasStructType  var_cas_structType = GGS_typeGalgasStructType::castFrom (inLexique, var_cas_typeArgument.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (3442)) ;
                  GGS_bool var_cas_found = GGS_bool (false) ;
                  {
                    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_131065 (var_cas_structType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (3444)), true) ;
                    const GGS_typeListeAttributsSemantiques::cElement * operand_131065 = NULL ;
                    while (((operand_131065 = enumerator_131065.nextObject ()))
                        && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
                      macroValidPointer (operand_131065) ;
                      var_cas_found = (operand_131065->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3445))).operator_isEqual (var_cas_structAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3445))) ;
                      var_cas_typeArgument = operand_131065->mAttributType ;
                    }
                  }
                  const GGS_bool cond_131420 = (var_cas_found).operator_not () ;
                  if (cond_131420.isBuiltAndTrue ()) {
                    var_cas_structAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '@")).operator_concat (var_cas_structType.reader_mStructTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (3449)))).operator_concat (GGS_string ("' does not define a '"))).operator_concat (var_cas_structAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (3450)) ;
                  }
                  var_cas_structAttributeList.addAssign_operation (var_cas_structAttributeName) ;
                  } break ;
                default :
                  syntaxRepeat_27 = false ;
                  break ;
              }
            }
          }
          GGS_EXactualParametersPassingMode var_cas_parameterPassingMode = GGS_EXactualParametersPassingMode::constructor_parameterOutIn (inLexique COMMA_SOURCE_FILE_AT_LINE (3453)) ;
          var_cas_listeTypesParametresEffectifs.addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
          GGS_typeExpression  var_cas_e = GGS_typeVarInExpression ::constructor_new (inLexique, var_cas_nomCppArgument, var_cas_structAttributeList COMMA_SOURCE_FILE_AT_LINE (3455)) ;
          var_cas_outExpressionList.addAssign_operation (var_cas_e) ;
          const GGS_bool cond_131994 = var_cas_exclusiveVariables.reader_hasKey (var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3457))) ;
          if (cond_131994.isBuiltAndTrue ()) {
            var_cas_nomArgument.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this object is already named as input or output/input effectif argument of current instruction") COMMA_SOURCE_FILE_AT_LINE (3459)) ;
          }else if (cond_131994.isBuiltAndFalse ()) {
            var_cas_exclusiveVariables.addAssign_operation (var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3460))) ;
          }
          } break ;
        default :
          syntaxRepeat_25 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_parameters_5F_list_i28_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_25 = true ;
    while (syntaxRepeat_25) {
      switch (select_semantics_5F_parser_25 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
          nt_expression_parse (inLexique) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          switch (select_semantics_5F_parser_26 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2A_) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unsigned_5F_literal_5F_integer) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2A_) COMMA_HERE) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21__3F_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          { bool syntaxRepeat_27 = true ;
            while (syntaxRepeat_27) {
              switch (select_semantics_5F_parser_27 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_27 = false ;
                  break ;
              }
            }
          }
          } break ;
        default :
          syntaxRepeat_25 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'semantic_instructions_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instructions_5F_list_i29_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  var_cas_ioVariablesMap.prologue_verifyVariableUsing (inLexique COMMA_SOURCE_FILE_AT_LINE (3477)) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_verifyVariableUsing (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3477)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instructions_5F_list_i29_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i30_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extract) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_typeVarSource ;
  GGS_typeCplusPlusName  var_cas_sourceVarCppName ;
  GGS_lstring  var_cas_nomVarSource ;
  nt_read_5F_access_ (inLexique, var_cas_nomVarSource, var_cas_sourceVarCppName, var_cas_typeVarSource, var_cas_ioVariablesMap) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_typeVarSource.getPtr (), true, var_cas_nomVarSource COMMA_SOURCE_FILE_AT_LINE (3510)) ;
  GGS_lstring  var_cas_nomTypeSource = var_cas_classType.reader_mClassTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (3511)) ;
  GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (3512)) ;
  nt_extract_5F_instruction_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceVarCppName, var_cas_nomTypeSource, var_cas_tableMessagesAbstraits, var_cas_ioInstructionList, var_cas_inSemanticContext) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i30_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extract) COMMA_HERE) ;
  nt_read_5F_access_parse (inLexique) ;
  nt_extract_5F_instruction_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_extract_5F_instruction_i31_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  /* var_cas_tableMessagesAbstraits */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_typeStructuredExtractCasesList  var_cas_casesList = GGS_typeStructuredExtractCasesList ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("structured extract instruction is obsolete: use cast instruction instead") COMMA_SOURCE_FILE_AT_LINE (3545)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (3547)) ;
  { bool syntaxRepeat_28 = true ;
    while (syntaxRepeat_28) {
        var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (3549)) ;
        GGS_location  var_cas_indicatif1 = GGS_location (inLexique) ;
        GGS_lstring  var_cas_nomType1 ;
        inLexique.assignFromAttribute_tokenString (var_cas_nomType1) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
          var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_nomType1, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3556)) ;
        }
        GGS_AC_galgasType  var_cas_definitionClasse1 = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_nomType1 COMMA_SOURCE_FILE_AT_LINE (3557)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (3557)) ;
        GGS_typeGalgasClassType  var_cas_classType1 = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_definitionClasse1.getPtr (), true, var_cas_nomType1 COMMA_SOURCE_FILE_AT_LINE (3559)) ;
        GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 = var_cas_classType1.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (3560)) ;
        GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 = var_cas_classType1.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (3561)) ;
        const GGS_bool cond_136416 = (var_cas_tableDesClassesAncetresType1.reader_hasKey (var_cas_nomTypeSource.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3563)))).operator_not () ;
        if (cond_136416.isBuiltAndTrue ()) {
          var_cas_nomType1.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("This class does not inherit from '@")).operator_concat (var_cas_nomTypeSource.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3564)))).operator_concat (GGS_string ("'")) COMMA_SOURCE_FILE_AT_LINE (3565)) ;
        }
        GGS_bool var_cas_noUsedParameter ;
        nt_parse_5F_effective_5F_input_5F_parameters_5F_list_ (inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_indicatif1, GGS_localConstantBuildStyleEnum::constructor_listStyle (inLexique COMMA_SOURCE_FILE_AT_LINE (3572)), GGS_bool (false), var_cas_noUsedParameter) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_instructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
        nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inSemanticContext) ;
        var_cas_casesList.addAssign_operation (var_cas_nomType1, var_cas_indicatif1, var_cas_instructionsList, var_cas_noUsedParameter) ;
        var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3549)) ;
      switch (select_semantics_5F_parser_28 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_28 = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (3593)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_elseInstructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseInstructionList, var_cas_inSemanticContext) ;
  var_cas_ioInstructionList.addAssign_operation (GGS_typeStructuredExtractInstructionWithElse ::constructor_new (inLexique, var_cas_inSourceVarCppName, var_cas_casesList, var_cas_elseInstructionList COMMA_SOURCE_FILE_AT_LINE (3604))) ;
  var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3593)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (3547)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extract) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_extract_5F_instruction_i31_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
  { bool syntaxRepeat_28 = true ;
    while (syntaxRepeat_28) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
        nt_parse_5F_effective_5F_input_5F_parameters_5F_list_parse (inLexique) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
        nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
      switch (select_semantics_5F_parser_28 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_28 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extract) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i32_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_cast) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceExpressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
  GGS_typeGalgasClassType  var_cas_sourceClassType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_sourceExpressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3640)) ;
  GGS_lstring  var_cas_sourceExpressionTypeName = var_cas_sourceClassType.reader_mClassTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (3641)) ;
  GGS_string var_cas_sourceClassMessage = var_cas_sourceClassType.reader_mClassMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (3642)) ;
  GGS_typeStructuredCastBranchList  var_cas_branchList = GGS_typeStructuredCastBranchList ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (3646)) ;
  { bool syntaxRepeat_29 = true ;
    while (syntaxRepeat_29) {
        var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (3648)) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
        GGS_bool var_cas_checkForKindOfClass ;
        switch (select_semantics_5F_parser_30 (inLexique)) {
          case 1 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E__3D_) COMMA_HERE) ;
            var_cas_checkForKindOfClass = GGS_bool (true) ;
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3D__3D_) COMMA_HERE) ;
            var_cas_checkForKindOfClass = GGS_bool (false) ;
            } break ;
          default :
            break ;
        }
        GGS_lstring  var_cas_castedTypeName ;
        inLexique.assignFromAttribute_tokenString (var_cas_castedTypeName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
          var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_castedTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3662)) ;
        }
        GGS_AC_galgasType  var_cas_typeDefinition = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_castedTypeName COMMA_SOURCE_FILE_AT_LINE (3663)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (3663)) ;
        GGS_typeSuperClassesMap  var_cas_superClassMap = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_typeDefinition.getPtr (), true, var_cas_castedTypeName COMMA_SOURCE_FILE_AT_LINE (3666)).reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (3666)) ;
        GGS_string var_cas_sourceExpressionTypeNameString = var_cas_sourceExpressionTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3668)) ;
        const GGS_bool cond_140566 = (var_cas_checkForKindOfClass).operator_not () ;
        if (cond_140566.isBuiltAndTrue ()) {
          const GGS_bool cond_140547 = ((var_cas_castedTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3670))).operator_isNotEqual (var_cas_sourceExpressionTypeNameString)).operator_and ((var_cas_superClassMap.reader_hasKey (var_cas_sourceExpressionTypeNameString)).operator_not ()) ;
          if (cond_140547.isBuiltAndTrue ()) {
            var_cas_castedTypeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("This class is not '@")).operator_concat (var_cas_sourceExpressionTypeNameString)).operator_concat (GGS_string ("' and does inherit from it")) COMMA_SOURCE_FILE_AT_LINE (3672)) ;
          }
        }else if (cond_140566.isBuiltAndFalse ()) {
          const GGS_bool cond_140754 = (var_cas_superClassMap.reader_hasKey (var_cas_sourceExpressionTypeNameString)).operator_not () ;
          if (cond_140754.isBuiltAndTrue ()) {
            var_cas_castedTypeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("This class does not inherit from '@")).operator_concat (var_cas_sourceExpressionTypeNameString)).operator_concat (GGS_string ("'")) COMMA_SOURCE_FILE_AT_LINE (3675)) ;
          }
        }
        GGS_typeCplusPlusNameList  var_cas_localConstantCppNameList = GGS_typeCplusPlusNameList ::constructor_emptyList () ;
        switch (select_semantics_5F_parser_31 (inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            GGS_lstring  var_cas_localConstantName ;
            inLexique.assignFromAttribute_tokenString (var_cas_localConstantName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_localConstantCppName = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_localConstantName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (3682)), var_cas_localConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3682)) COMMA_SOURCE_FILE_AT_LINE (3682)) ;
            var_cas_localConstantCppNameList.addAssign_operation (var_cas_localConstantCppName) ;
            var_cas_ioVariablesMap.modifier_insertConstInArgument (inLexique, var_cas_localConstantName, var_cas_typeDefinition, var_cas_localConstantCppName COMMA_SOURCE_FILE_AT_LINE (3684)) ;
            } break ;
          case 3 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
            GGS_lstring  var_cas_localConstantName ;
            inLexique.assignFromAttribute_tokenString (var_cas_localConstantName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_localConstantCppName = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_localConstantName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (3689)), var_cas_localConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3689)) COMMA_SOURCE_FILE_AT_LINE (3689)) ;
            var_cas_localConstantCppNameList.addAssign_operation (var_cas_localConstantCppName) ;
            var_cas_ioVariablesMap.modifier_insertUnusedConstInArgument (inLexique, var_cas_localConstantName, var_cas_typeDefinition, var_cas_localConstantCppName COMMA_SOURCE_FILE_AT_LINE (3691)) ;
            } break ;
          default :
            break ;
        }
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_instructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
        nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inSemanticContext) ;
        var_cas_branchList.addAssign_operation (var_cas_castedTypeName, var_cas_checkForKindOfClass, var_cas_localConstantCppNameList, var_cas_instructionsList) ;
        var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3648)) ;
      switch (select_semantics_5F_parser_29 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_29 = false ;
          break ;
      }
    }
  }
  GGS_AC_elseOrDefaultForCastInstruction  var_cas_elseOrDefault ;
  var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (3709)) ;
  switch (select_semantics_5F_parser_32 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_default) COMMA_HERE) ;
      const GGS_bool cond_142607 = (var_cas_sourceClassMessage.reader_length ()).operator_isEqual (GGS_uint (0U)) ;
      if (cond_142607.isBuiltAndTrue ()) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("for using the 'default' construct, the static class of source expression (@")).operator_concat (var_cas_sourceExpressionTypeName)).operator_concat (GGS_string (") should define a class message")) COMMA_SOURCE_FILE_AT_LINE (3715)) ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
      GGS_typeExpression  var_cas_errorLocationExpression ;
      GGS_AC_galgasType  var_cas_errorLocationExpressionType ;
      nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorLocationExpression, var_cas_errorLocationExpressionType) ;
      if (var_cas_errorLocationExpressionType.isBuilt ()) {
        var_cas_errorLocationExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (inLexique COMMA_SOURCE_FILE_AT_LINE (3728)) ;
      }
      var_cas_elseOrDefault = GGS_C_defaultForCastInstruction ::constructor_new (inLexique, var_cas_errorLocationExpression, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3729)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_elseBranchInstructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseBranchInstructionsList, var_cas_inSemanticContext) ;
      var_cas_elseOrDefault = GGS_C_elseForCastInstruction ::constructor_new (inLexique, var_cas_elseBranchInstructionsList COMMA_SOURCE_FILE_AT_LINE (3741)) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3709)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (3646)) ;
  GGS_typeInstruction  var_cas_instruction = GGS_typeStructuredCastInstruction ::constructor_new (inLexique, GGS_location (inLexique), var_cas_sourceExpression, var_cas_sourceExpressionTypeName, var_cas_branchList, var_cas_elseOrDefault COMMA_SOURCE_FILE_AT_LINE (3746)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_cast) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i32_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_cast) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  { bool syntaxRepeat_29 = true ;
    while (syntaxRepeat_29) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
        switch (select_semantics_5F_parser_30 (inLexique)) {
          case 1 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E__3D_) COMMA_HERE) ;
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3D__3D_) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
        switch (select_semantics_5F_parser_31 (inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            } break ;
          case 3 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
        nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
      switch (select_semantics_5F_parser_29 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_29 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_5F_parser_32 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_default) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
      nt_expression_parse (inLexique) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_cast) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i33_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_AC_galgasType  var_cas_definitionType ;
  GGS_lstring  var_cas_typeName ;
  nt_type_5F_parsing_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
  GGS_lstring  var_cas_targetVarName ;
  inLexique.assignFromAttribute_tokenString (var_cas_targetVarName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_nomCppVariable = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_targetVarName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (3786)), var_cas_targetVarName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3786)) COMMA_SOURCE_FILE_AT_LINE (3786)) ;
  var_cas_ioVariablesMap.modifier_insertLocalVariable (inLexique, var_cas_targetVarName, var_cas_definitionType, var_cas_nomCppVariable COMMA_SOURCE_FILE_AT_LINE (3787)) ;
  nt_optional_5F_assignment_ (inLexique, var_cas_typeName, var_cas_targetVarName, var_cas_nomCppVariable, var_cas_definitionType, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i33_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_type_5F_parsing_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_optional_5F_assignment_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i34_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_log) COMMA_HERE) ;
  { bool syntaxRepeat_33 = true ;
    while (syntaxRepeat_33) {
        switch (select_semantics_5F_parser_34 (inLexique)) {
          case 1 : {
            GGS_lstring  var_cas_galgasVariableName ;
            inLexique.assignFromAttribute_tokenString (var_cas_galgasVariableName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_nomCppVar ;
            GGS_AC_galgasType  automatic_var_146449_0 ;
            var_cas_ioVariablesMap.modifier_searchForReadOnlyAccess (inLexique, var_cas_galgasVariableName, automatic_var_146449_0, var_cas_nomCppVar COMMA_SOURCE_FILE_AT_LINE (3823)) ;
            var_cas_ioInstructionList.addAssign_operation (GGS_typeLogInstruction ::constructor_new (inLexique, var_cas_galgasVariableName, GGS_typeVarInExpression ::constructor_new (inLexique, var_cas_nomCppVar, GGS_lstringlist ::constructor_emptyList () COMMA_SOURCE_FILE_AT_LINE (3826)) COMMA_SOURCE_FILE_AT_LINE (3824))) ;
            } break ;
          case 2 : {
            GGS_lstring  var_cas_logMessage ;
            inLexique.assignFromAttribute_tokenString (var_cas_logMessage) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
            GGS_typeExpression  var_cas_logExpression ;
            GGS_AC_galgasType  automatic_var_146911_0 ;
            nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_logExpression, automatic_var_146911_0) ;
            var_cas_ioInstructionList.addAssign_operation (GGS_typeLogInstruction ::constructor_new (inLexique, var_cas_logMessage, var_cas_logExpression COMMA_SOURCE_FILE_AT_LINE (3840))) ;
            } break ;
          default :
            break ;
        }
      switch (select_semantics_5F_parser_33 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_33 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i34_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_log) COMMA_HERE) ;
  { bool syntaxRepeat_33 = true ;
    while (syntaxRepeat_33) {
        switch (select_semantics_5F_parser_34 (inLexique)) {
          case 1 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
            nt_expression_parse (inLexique) ;
            } break ;
          default :
            break ;
        }
      switch (select_semantics_5F_parser_33 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_33 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i35_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_drop) COMMA_HERE) ;
  { bool syntaxRepeat_35 = true ;
    while (syntaxRepeat_35) {
        GGS_lstring  var_cas_nom ;
        inLexique.assignFromAttribute_tokenString (var_cas_nom) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
        GGS_typeCplusPlusName  var_cas_nomCppVar ;
        GGS_AC_galgasType  automatic_var_147982_0 ;
        var_cas_ioVariablesMap.modifier_searchForDestructiveReadAccess (inLexique, var_cas_nom, automatic_var_147982_0, var_cas_nomCppVar COMMA_SOURCE_FILE_AT_LINE (3870)) ;
        GGS_typeInstruction  var_cas_instruction = GGS_typeDropInstruction ::constructor_new (inLexique, var_cas_nomCppVar COMMA_SOURCE_FILE_AT_LINE (3871)) ;
        var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
      switch (select_semantics_5F_parser_35 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_35 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i35_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_drop) COMMA_HERE) ;
  { bool syntaxRepeat_35 = true ;
    while (syntaxRepeat_35) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      switch (select_semantics_5F_parser_35 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_35 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_i36_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_L_EXsignature  var_cas_signatureRoutine ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_nomVarDest, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3898)) ;
  }
  GGS_bool var_cas_isExternActionCall ;
  { const GGS_AC_semanticsEntity _var_149642 = var_cas_entite ; // CAST instruction
    if (_var_149642.getPtr () != NULL) {
      macroValidPointer (_var_149642.getPtr ()) ;
      if (dynamic_cast <cPtr_typeEntiteRoutine *> (_var_149642.getPtr ()) != NULL) {
        const GGS_typeEntiteRoutine var_cas_r (_var_149642.getPtr ()) ;
        var_cas_signatureRoutine = var_cas_r.reader_aListeArgumentsFormels (inLexique COMMA_SOURCE_FILE_AT_LINE (3902)) ;
        var_cas_isExternActionCall = GGS_bool (false) ;
      }else if (dynamic_cast <cPtr_typeEntiteRoutineExterne *> (_var_149642.getPtr ()) != NULL) {
        const GGS_typeEntiteRoutineExterne var_cas_ae (_var_149642.getPtr ()) ;
        var_cas_signatureRoutine = var_cas_ae.reader_aSignature (inLexique COMMA_SOURCE_FILE_AT_LINE (3905)) ;
        var_cas_isExternActionCall = GGS_bool (true) ;
      }else{
        var_cas_nomVarDest.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("'")).operator_concat (var_cas_nomVarDest.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3909)))).operator_concat (GGS_string ("' should name a routine or an extern routine")) COMMA_SOURCE_FILE_AT_LINE (3912)) ;
        var_cas_signatureRoutine.drop () ;
        var_cas_isExternActionCall.drop () ;
      }
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_5F_parameters_5F_list_ (inLexique, var_cas_signatureRoutine, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
  GGS_typeInstruction  var_cas_instruction = GGS_typeRoutineCallInstruction ::constructor_new (inLexique, var_cas_nomVarDest, var_cas_expressionsList, var_cas_signatureRoutine, var_cas_isExternActionCall COMMA_SOURCE_FILE_AT_LINE (3925)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_i36_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_actual_5F_parameters_5F_list_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i37_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  switch (select_semantics_5F_parser_36 (inLexique)) {
    case 1 : {
      GGS_typeExpression  var_cas_expression ;
      GGS_AC_galgasType  var_cas_expressionType ;
      nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expression, var_cas_expressionType) ;
      GGS_lstring  var_cas_methodName ;
      inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      GGS_string var_cas_categoryMethodClassBaseName ;
      if (var_cas_expressionType.isBuilt ()) {
        var_cas_expressionType (HERE)->method_handleMethodInstructionCall (inLexique, var_cas_methodName, var_cas_inSemanticContext.reader_mCategoryMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (3976)), var_cas_methodSignature, var_cas_categoryMethodClassBaseName COMMA_SOURCE_FILE_AT_LINE (3974)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_5F_parameters_5F_list_ (inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeMethodCallInstruction ::constructor_new (inLexique, var_cas_expressionType, var_cas_expression, var_cas_methodName, var_cas_categoryMethodClassBaseName, var_cas_expressionsList COMMA_SOURCE_FILE_AT_LINE (3992)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21__3F_) COMMA_HERE) ;
      GGS_lstring  var_cas_modifiedObjectName ;
      inLexique.assignFromAttribute_tokenString (var_cas_modifiedObjectName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_variableType ;
      GGS_typeCplusPlusName  var_cas_cppVariableName ;
      var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (inLexique, var_cas_modifiedObjectName, var_cas_variableType, var_cas_cppVariableName COMMA_SOURCE_FILE_AT_LINE (4005)) ;
      GGS_lstringlist  var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList () ;
      { bool syntaxRepeat_37 = true ;
        while (syntaxRepeat_37) {
          switch (select_semantics_5F_parser_37 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
              GGS_lstring  var_cas_structAttributeName ;
              inLexique.assignFromAttribute_tokenString (var_cas_structAttributeName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              var_cas_structAttributeList.addAssign_operation (var_cas_structAttributeName) ;
              GGS_typeGalgasStructType  var_cas_structType = GGS_typeGalgasStructType::castFrom (inLexique, var_cas_variableType.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (4014)) ;
              GGS_bool var_cas_found = GGS_bool (false) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_153295 (var_cas_structType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (4016)), true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_153295 = NULL ;
                while (((operand_153295 = enumerator_153295.nextObject ()))
                    && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
                  macroValidPointer (operand_153295) ;
                  var_cas_found = (operand_153295->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4017))).operator_isEqual (var_cas_structAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4017))) ;
                  var_cas_variableType = operand_153295->mAttributType ;
                }
              }
              const GGS_bool cond_153650 = (var_cas_found).operator_not () ;
              if (cond_153650.isBuiltAndTrue ()) {
                var_cas_structAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '@")).operator_concat (var_cas_structType.reader_mStructTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (4021)))).operator_concat (GGS_string ("' does not define a '"))).operator_concat (var_cas_structAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (4022)) ;
              }
              } break ;
            default :
              syntaxRepeat_37 = false ;
              break ;
          }
        }
      }
      GGS_lstring  var_cas_modifierName ;
      inLexique.assignFromAttribute_tokenString (var_cas_modifierName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      if (var_cas_variableType.isBuilt ()) {
        var_cas_variableType (HERE)->method_handleModifierCall (inLexique, var_cas_modifierName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (4028)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_5F_parameters_5F_list_ (inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeModifierCallInstruction ::constructor_new (inLexique, var_cas_cppVariableName, var_cas_structAttributeList, var_cas_modifierName, var_cas_expressionsList COMMA_SOURCE_FILE_AT_LINE (4041)) ;
      } break ;
    case 3 : {
      GGS_lstring  var_cas_typeName ;
      inLexique.assignFromAttribute_tokenString (var_cas_typeName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
      GGS_lstring  var_cas_typeMethodName ;
      inLexique.assignFromAttribute_tokenString (var_cas_typeMethodName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_typeMethodSignature ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
        var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_typeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (4050)) ;
      }
      GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_typeName COMMA_SOURCE_FILE_AT_LINE (4051)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (4051)) ;
      if (var_cas_type.isBuilt ()) {
        var_cas_type (HERE)->method_handleClassMethodCall (inLexique, var_cas_typeMethodName, var_cas_typeMethodSignature COMMA_SOURCE_FILE_AT_LINE (4052)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_5F_parameters_5F_list_ (inLexique, var_cas_typeMethodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeCallOfTypeMethodInstruction ::constructor_new (inLexique, var_cas_typeName, var_cas_typeMethodName, var_cas_expressionsList COMMA_SOURCE_FILE_AT_LINE (4065)) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i37_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
  switch (select_semantics_5F_parser_36 (inLexique)) {
    case 1 : {
      nt_expression_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      nt_actual_5F_parameters_5F_list_parse (inLexique) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21__3F_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      { bool syntaxRepeat_37 = true ;
        while (syntaxRepeat_37) {
          switch (select_semantics_5F_parser_37 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_37 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      nt_actual_5F_parameters_5F_list_parse (inLexique) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      nt_actual_5F_parameters_5F_list_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i38_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_const) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_targetVarType ;
  GGS_lstring  var_cas_targetTypeName ;
  nt_type_5F_parsing_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_targetVarType, var_cas_targetTypeName) ;
  GGS_lstring  var_cas_targetVarName ;
  inLexique.assignFromAttribute_tokenString (var_cas_targetVarName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  switch (select_semantics_5F_parser_38 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_sourceExpressionType ;
      nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
      ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_targetVarType,  var_cas_sourceExpressionType,  GGS_location (inLexique),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (4120)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
      GGS_lstring  var_cas_constructorName ;
      inLexique.assignFromAttribute_tokenString (var_cas_constructorName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
      GGS_bool var_cas_hasLexiqueAndLocationArguments ;
      GGS_AC_galgasType  var_cas_returnedType ;
      if (var_cas_targetVarType.isBuilt ()) {
        var_cas_targetVarType (HERE)->method_handleConstructorInvocation (inLexique, var_cas_constructorName, var_cas_listeAttributsSemantiques, var_cas_hasLexiqueAndLocationArguments, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (4130)) ;
      }
      const GGS_bool cond_157658 = (var_cas_targetVarType).operator_isNotEqual (var_cas_returnedType) ;
      if (cond_157658.isBuiltAndTrue ()) {
        GGS_string var_cas_typeName ;
        if (var_cas_returnedType.isBuilt ()) {
          var_cas_returnedType (HERE)->method_getTypeName (inLexique, var_cas_typeName COMMA_SOURCE_FILE_AT_LINE (4133)) ;
        }
        var_cas_constructorName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this constructor returns an other type: '@")).operator_concat (var_cas_typeName)).operator_concat (GGS_string ("'")) COMMA_SOURCE_FILE_AT_LINE (4135)) ;
      }
      GGS_typeExpressionList  var_cas_expressionList ;
      nt_output_5F_expression_5F_list_ (inLexique, var_cas_expressionList, var_cas_listeAttributsSemantiques, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
      var_cas_sourceExpression = GGS_typeConstructorExpression ::constructor_new (inLexique, var_cas_targetVarType, var_cas_constructorName, var_cas_hasLexiqueAndLocationArguments, var_cas_expressionList COMMA_SOURCE_FILE_AT_LINE (4148)) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_targetVarCppName = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_targetVarName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (4157)), var_cas_targetVarName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4157)) COMMA_SOURCE_FILE_AT_LINE (4157)) ;
  var_cas_ioVariablesMap.modifier_insertConstInArgument (inLexique, var_cas_targetVarName, var_cas_targetVarType, var_cas_targetVarCppName COMMA_SOURCE_FILE_AT_LINE (4158)) ;
  var_cas_ioInstructionList.addAssign_operation (GGS_C_constantDeclarationInstruction ::constructor_new (inLexique, var_cas_targetVarType, var_cas_targetVarCppName, var_cas_sourceExpression COMMA_SOURCE_FILE_AT_LINE (4160))) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i38_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_const) COMMA_HERE) ;
  nt_type_5F_parsing_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  switch (select_semantics_5F_parser_38 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
      nt_expression_parse (inLexique) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      nt_output_5F_expression_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i39_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_lstring  var_cas_nomVarDest ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomVarDest) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_instruction_5F_beginning_5F_with_5F_identifier_ (inLexique, var_cas_nomVarDest, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inSemanticContext) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i39_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_instruction_5F_beginning_5F_with_5F_identifier_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i40_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  nt_warning_5F_instruction_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_ioInstructionList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i40_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_warning_5F_instruction_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'warning_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_warning_5F_instruction_i41_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_warning) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  if (var_cas_errorExpressionType.isBuilt ()) {
    var_cas_errorExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (inLexique COMMA_SOURCE_FILE_AT_LINE (4239)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_warningMessageExpression ;
  GGS_AC_galgasType  var_cas_warningMessageExpressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_warningMessageExpression, var_cas_warningMessageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs = GGS_typeGalgas_string::castFrom (inLexique, var_cas_warningMessageExpressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4253)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeWarningInstruction ::constructor_new (inLexique, var_cas_errorExpression, var_cas_warningMessageExpression, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4256)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_warning_5F_instruction_i41_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_warning) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i42_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  nt_error_5F_instruction_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_ioInstructionList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i42_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_error_5F_instruction_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'error_instruction'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_error_5F_instruction_i43_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorLocationExpression ;
  GGS_AC_galgasType  var_cas_errorLocationExpressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorLocationExpression, var_cas_errorLocationExpressionType) ;
  if (var_cas_errorLocationExpressionType.isBuilt ()) {
    var_cas_errorLocationExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (inLexique COMMA_SOURCE_FILE_AT_LINE (4305)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorMessageExpression ;
  GGS_AC_galgasType  var_cas_errorMessageExpressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorMessageExpression, var_cas_errorMessageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs = GGS_typeGalgas_string::castFrom (inLexique, var_cas_errorMessageExpressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4319)) ;
  GGS_varToDropList  var_cas_variablesToDrop = GGS_varToDropList ::constructor_emptyList () ;
  switch (select_semantics_5F_parser_39 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      { bool syntaxRepeat_40 = true ;
        while (syntaxRepeat_40) {
            GGS_lstring  var_cas_nomVariable ;
            inLexique.assignFromAttribute_tokenString (var_cas_nomVariable) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_varCppName ;
            GGS_AC_galgasType  automatic_var_164409_0 ;
            var_cas_ioVariablesMap.modifier_searchForWriteAccess (inLexique, var_cas_nomVariable, automatic_var_164409_0, var_cas_varCppName COMMA_SOURCE_FILE_AT_LINE (4329)) ;
            var_cas_variablesToDrop.addAssign_operation (var_cas_varCppName) ;
          switch (select_semantics_5F_parser_40 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_40 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction = GGS_typeErrorInstruction ::constructor_new (inLexique, var_cas_errorLocationExpression, var_cas_errorMessageExpression, GGS_location (inLexique), var_cas_variablesToDrop COMMA_SOURCE_FILE_AT_LINE (4337)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_error_5F_instruction_i43_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  switch (select_semantics_5F_parser_39 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      { bool syntaxRepeat_40 = true ;
        while (syntaxRepeat_40) {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          switch (select_semantics_5F_parser_40 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_40 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i44_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
  GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_typeExpression  var_cas_messageExpression ;
  GGS_AC_galgasType  var_cas_messageExpressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_messageExpression, var_cas_messageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs = GGS_typeGalgas_string::castFrom (inLexique, var_cas_messageExpressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4374)) ;
  GGS_typeInstruction  var_cas_instruction = GGS_typeMessageInstruction ::constructor_new (inLexique, var_cas_messageExpression, var_cas_instructionLocation COMMA_SOURCE_FILE_AT_LINE (4376)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i44_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i45_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_if) COMMA_HERE) ;
  GGS_L_expression_instructionsList_list  var_cas_listeBranchesTest = GGS_L_expression_instructionsList_list ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (4397)) ;
  { bool syntaxRepeat_41 = true ;
    while (syntaxRepeat_41) {
        var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (4399)) ;
        GGS_typeExpression  var_cas_testBranche ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_testBranche, var_cas_resultType) ;
        GGS_typeGalgas_bool  var_cas_b = GGS_typeGalgas_bool::castFrom (inLexique, var_cas_resultType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4410)) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_then) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_listeInstructionsBrancheTest = GGS_typeInstructionList ::constructor_emptyList () ;
        nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheTest, var_cas_inSemanticContext) ;
        var_cas_listeBranchesTest.addAssign_operation (var_cas_testBranche, var_cas_listeInstructionsBrancheTest, GGS_location (inLexique)) ;
        var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4399)) ;
      switch (select_semantics_5F_parser_41 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_elsif) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_41 = false ;
          break ;
      }
    }
  }
  GGS_typeInstructionList  var_cas_listeInstructionsBrancheAutre = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (4427)) ;
  switch (select_semantics_5F_parser_42 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheAutre, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4427)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_if) COMMA_HERE) ;
  var_cas_ioVariablesMap.epilogue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (4397)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_if_instruction ::constructor_new (inLexique, var_cas_listeBranchesTest, var_cas_listeInstructionsBrancheAutre COMMA_SOURCE_FILE_AT_LINE (4446)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i45_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_if) COMMA_HERE) ;
  { bool syntaxRepeat_41 = true ;
    while (syntaxRepeat_41) {
        nt_expression_parse (inLexique) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_then) COMMA_HERE) ;
        nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      switch (select_semantics_5F_parser_41 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_elsif) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_41 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_5F_parser_42 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_if) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i46_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_switch) COMMA_HERE) ;
  GGS_typeExpression  var_cas_switchExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_switchExpression, var_cas_resultType) ;
  GGS_typeGalgas_enum  var_cas_e = GGS_typeGalgas_enum::castFrom (inLexique, var_cas_resultType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4479)) ;
  GGS_lstring  var_cas_enumTypeName = var_cas_e.reader_mEnumTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (4480)) ;
  GGS_enumConstantMap  var_cas_enumConstantesMap = var_cas_e.reader_mEnumConstantesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (4481)) ;
  GGS_stringset  var_cas_allBranchConstantSet = GGS_stringset ::constructor_emptySet () ;
  GGS_L_switchBranchlist  var_cas_switchBranchlist = GGS_L_switchBranchlist ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (4485)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
  { bool syntaxRepeat_43 = true ;
    while (syntaxRepeat_43) {
        GGS_stringset  var_cas_branchConstantSet = GGS_stringset ::constructor_emptySet () ;
        { bool syntaxRepeat_44 = true ;
          while (syntaxRepeat_44) {
              GGS_lstring  var_cas_enumConstantName ;
              inLexique.assignFromAttribute_tokenString (var_cas_enumConstantName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              var_cas_branchConstantSet.addAssign_operation (var_cas_enumConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4493))) ;
              GGS_uint  automatic_var_170346_0 ;
              if (var_cas_enumConstantesMap.isBuilt ()) {
                var_cas_enumConstantesMap (HERE)->method_searchKey (inLexique, var_cas_enumConstantName, automatic_var_170346_0 COMMA_SOURCE_FILE_AT_LINE (4494)) ;
              }
              const GGS_bool cond_170531 = var_cas_allBranchConstantSet.reader_hasKey (var_cas_enumConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4495))) ;
              if (cond_170531.isBuiltAndTrue ()) {
                var_cas_enumConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this constant is already used in current switch instruction") COMMA_SOURCE_FILE_AT_LINE (4497)) ;
              }
            switch (select_semantics_5F_parser_44 (inLexique)) {
              case 2 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_44 = false ;
                break ;
            }
          }
        }
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
        var_cas_allBranchConstantSet = (var_cas_allBranchConstantSet).operator_or (var_cas_branchConstantSet) ;
        var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (4503)) ;
        GGS_typeInstructionList  var_cas_branchInstructionList = GGS_typeInstructionList ::constructor_emptyList () ;
        nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_branchInstructionList, var_cas_inSemanticContext) ;
        var_cas_switchBranchlist.addAssign_operation (var_cas_branchConstantSet, var_cas_branchInstructionList) ;
        var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4503)) ;
      switch (select_semantics_5F_parser_43 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_43 = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.epilogue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (4485)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  GGS_stringset  var_cas_missingConstants = var_cas_enumConstantesMap.reader_allKeys (inLexique COMMA_SOURCE_FILE_AT_LINE (4521)).substract_operation (inLexique, var_cas_allBranchConstantSet COMMA_SOURCE_FILE_AT_LINE (4521)) ;
  {
    GGS_stringset::cEnumerator enumerator_171341 (var_cas_missingConstants, true) ;
    while (enumerator_171341.hasCurrentObject ()) {
      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (enumerator_171341._key (HERE))).operator_concat (GGS_string ("' is not used in switch instruction")) COMMA_SOURCE_FILE_AT_LINE (4524)) ;
      enumerator_171341.next () ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_switch_instruction ::constructor_new (inLexique, var_cas_switchExpression, var_cas_enumTypeName, var_cas_switchBranchlist COMMA_SOURCE_FILE_AT_LINE (4527)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_switch) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i46_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_switch) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
  { bool syntaxRepeat_43 = true ;
    while (syntaxRepeat_43) {
        { bool syntaxRepeat_44 = true ;
          while (syntaxRepeat_44) {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            switch (select_semantics_5F_parser_44 (inLexique)) {
              case 2 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_44 = false ;
                break ;
            }
          }
        }
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
        nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      switch (select_semantics_5F_parser_43 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_43 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_switch) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i47_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_loop) COMMA_HERE) ;
  GGS_typeExpression  var_cas_variantExpression ;
  GGS_AC_galgasType  var_cas_variantResultType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_variantExpression, var_cas_variantResultType) ;
  GGS_typeGalgas_uint  var_cas_ui = GGS_typeGalgas_uint::castFrom (inLexique, var_cas_variantResultType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4560)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList1 = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_repeatBlock (inLexique COMMA_SOURCE_FILE_AT_LINE (4564)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (inLexique COMMA_SOURCE_FILE_AT_LINE (4565)) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList1, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4565)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (inLexique COMMA_SOURCE_FILE_AT_LINE (4564)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_while) COMMA_HERE) ;
  GGS_typeExpression  var_cas_conditionalExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_conditionalExpression, var_cas_resultType) ;
  GGS_typeGalgas_bool  var_cas_b = GGS_typeGalgas_bool::castFrom (inLexique, var_cas_resultType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4588)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList2 = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_repeatBlock (inLexique COMMA_SOURCE_FILE_AT_LINE (4592)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (inLexique COMMA_SOURCE_FILE_AT_LINE (4593)) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList2, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4593)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (inLexique COMMA_SOURCE_FILE_AT_LINE (4592)) ;
  GGS_typeInstruction  var_cas_instruction = GGS_C_while_instruction ::constructor_new (inLexique, var_cas_variantExpression, var_cas_instructionList1, var_cas_conditionalExpression, var_cas_instructionList2, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4605)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_loop) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i47_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_loop) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_while) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_loop) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i48_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) COMMA_HERE) ;
  GGS_lstring  var_cas_grammarName ;
  inLexique.assignFromAttribute_tokenString (var_cas_grammarName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_altName ;
  switch (select_semantics_5F_parser_45 (inLexique)) {
    case 1 : {
      var_cas_altName = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4639)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_label) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_altName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_bool var_cas_sourceIsFile ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_typeExpression  var_cas_depFileExpression ;
  GGS_typeExpression  var_cas_depFilePath ;
  GGS_bool var_cas_hasDependancyFile = GGS_bool (false) ;
  GGS_location  var_cas_dependancyFileDefinitionLocation = GGS_location (inLexique) ;
  switch (select_semantics_5F_parser_46 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
      var_cas_sourceIsFile = GGS_bool (true) ;
      GGS_AC_galgasType  var_cas_sourceExpressionType ;
      nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
      GGS_typeGalgas_lstring  var_cas_gs = GGS_typeGalgas_lstring::castFrom (inLexique, var_cas_sourceExpressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4663)) ;
      switch (select_semantics_5F_parser_47 (inLexique)) {
        case 1 : {
          var_cas_depFileExpression = GGS_typeLiteralStringExpression ::constructor_new (inLexique, GGS_stringlist ::constructor_listWithValue (GGS_string ("")) COMMA_SOURCE_FILE_AT_LINE (4665)) ;
          var_cas_depFilePath = GGS_typeLiteralStringExpression ::constructor_new (inLexique, GGS_stringlist ::constructor_listWithValue (GGS_string ("")) COMMA_SOURCE_FILE_AT_LINE (4666)) ;
          } break ;
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_dependency) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_depFileExpressionType ;
          nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_depFileExpression, var_cas_depFileExpressionType) ;
          var_cas_dependancyFileDefinitionLocation = GGS_location (inLexique) ;
          GGS_typeGalgas_string  var_cas_gss = GGS_typeGalgas_string::castFrom (inLexique, var_cas_depFileExpressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4679)) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
          nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_depFilePath, var_cas_depFileExpressionType) ;
          var_cas_gss = GGS_typeGalgas_string::castFrom (inLexique, var_cas_depFileExpressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4689)) ;
          var_cas_hasDependancyFile = GGS_bool (true) ;
          } break ;
        default :
          break ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_on) COMMA_HERE) ;
      var_cas_sourceIsFile = GGS_bool (false) ;
      GGS_AC_galgasType  var_cas_sourceExpressionType ;
      nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
      GGS_typeGalgas_string  var_cas_gs = GGS_typeGalgas_string::castFrom (inLexique, var_cas_sourceExpressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4704)) ;
      var_cas_depFileExpression = GGS_typeLiteralStringExpression ::constructor_new (inLexique, GGS_stringlist ::constructor_listWithValue (GGS_string ("")) COMMA_SOURCE_FILE_AT_LINE (4705)) ;
      var_cas_depFilePath = GGS_typeLiteralStringExpression ::constructor_new (inLexique, GGS_stringlist ::constructor_listWithValue (GGS_string ("")) COMMA_SOURCE_FILE_AT_LINE (4706)) ;
      } break ;
    default :
      break ;
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  GGS_bool var_cas_hasInputParameter ;
  nt_parse_5F_parameters_5F_list_ (inLexique, var_cas_listeTypesParametresEffectifs, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_hasInputParameter) ;
  const GGS_bool cond_178152 = (var_cas_hasDependancyFile).operator_and (var_cas_hasInputParameter) ;
  if (cond_178152.isBuiltAndTrue ()) {
    var_cas_dependancyFileDefinitionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("a dependancy file reference requires there is no input parameter") COMMA_SOURCE_FILE_AT_LINE (4724)) ;
  }
  GGS_AC_semanticsEntity  var_cas_e ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_grammarName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (4727)) ;
  }
  GGS_C_grammarForSemantics  var_cas_gfs = GGS_C_grammarForSemantics::castFrom (inLexique, var_cas_e.getPtr (), true, var_cas_grammarName COMMA_SOURCE_FILE_AT_LINE (4728)) ;
  GGS_M_nonterminalSymbolAlts  var_cas_startSymbolAltMap = var_cas_gfs.reader_mGrammarAltMap (inLexique COMMA_SOURCE_FILE_AT_LINE (4729)) ;
  GGS_lstring  var_cas_lexiqueClassName = var_cas_gfs.reader_mLexiqueClassName (inLexique COMMA_SOURCE_FILE_AT_LINE (4730)) ;
  GGS_L_EXsignature  var_cas_startSymbolSignature ;
  if (var_cas_startSymbolAltMap.isBuilt ()) {
    var_cas_startSymbolAltMap (HERE)->method_searchKey (inLexique, var_cas_altName, var_cas_startSymbolSignature COMMA_SOURCE_FILE_AT_LINE (4732)) ;
  }
  ::routine_verifierCompatibiliteArgEffectifsSignature (inLexique,  var_cas_startSymbolSignature,  var_cas_listeTypesParametresEffectifs,  GGS_location (inLexique),  var_cas_ioInstructionList,  var_cas_expressionsList COMMA_SOURCE_FILE_AT_LINE (4734)) ;
  GGS_typeCplusPlusName  var_cas_sentStringName ;
  switch (select_semantics_5F_parser_48 (inLexique)) {
    case 1 : {
      var_cas_sentStringName = GGS_typeNullName ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4744)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_send) COMMA_HERE) ;
      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("using 'send'") COMMA_SOURCE_FILE_AT_LINE (4747)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
      GGS_lstring  var_cas_sentVariableName ;
      inLexique.assignFromAttribute_tokenString (var_cas_sentVariableName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_targetType ;
      var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (inLexique, var_cas_sentVariableName, var_cas_targetType, var_cas_sentStringName COMMA_SOURCE_FILE_AT_LINE (4752)) ;
      GGS_typeGalgas_string  var_cas_gs = GGS_typeGalgas_string::castFrom (inLexique, var_cas_targetType.getPtr (), true, var_cas_sentVariableName COMMA_SOURCE_FILE_AT_LINE (4753)) ;
      } break ;
    default :
      break ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_grammarInstruction ::constructor_new (inLexique, var_cas_sourceIsFile, var_cas_sourceExpression, var_cas_grammarName, var_cas_expressionsList, var_cas_altName, var_cas_lexiqueClassName, var_cas_sentStringName, var_cas_depFileExpression, var_cas_depFilePath COMMA_SOURCE_FILE_AT_LINE (4757)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i48_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  switch (select_semantics_5F_parser_45 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_label) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_5F_parser_46 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
      nt_expression_parse (inLexique) ;
      switch (select_semantics_5F_parser_47 (inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_dependency) COMMA_HERE) ;
          nt_expression_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
          nt_expression_parse (inLexique) ;
          } break ;
        default :
          break ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_on) COMMA_HERE) ;
      nt_expression_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  nt_parse_5F_parameters_5F_list_parse (inLexique) ;
  switch (select_semantics_5F_parser_48 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_send) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i49_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_send) COMMA_HERE) ;
  GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("using 'send'") COMMA_SOURCE_FILE_AT_LINE (4787)) ;
  GGS_typeExpression  var_cas_expression ;
  GGS_AC_galgasType  var_cas_expressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expression, var_cas_expressionType) ;
  GGS_typeGalgas_string  var_cas_classType = GGS_typeGalgas_string::castFrom (inLexique, var_cas_expressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4800)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction = GGS_typeSendInstruction ::constructor_new (inLexique, var_cas_expression COMMA_SOURCE_FILE_AT_LINE (4803)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i49_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_send) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i50_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_with) COMMA_HERE) ;
  GGS_bool var_cas_readWriteAccess ;
  switch (select_semantics_5F_parser_49 (inLexique)) {
    case 1 : {
      var_cas_readWriteAccess = GGS_bool (false) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21__3F_) COMMA_HERE) ;
      var_cas_readWriteAccess = GGS_bool (true) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  var_cas_nomVarDest ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomVarDest) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_location  var_cas_instructionLocation = var_cas_nomVarDest.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (4832)) ;
  GGS_AC_galgasType  var_cas_targetType ;
  GGS_typeCplusPlusName  var_cas_accessedVariableCppName ;
  GGS_string var_cas_errorMessageName ;
  const GGS_bool cond_182181 = var_cas_readWriteAccess ;
  if (cond_182181.isBuiltAndTrue ()) {
    var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (inLexique, var_cas_nomVarDest, var_cas_targetType, var_cas_accessedVariableCppName COMMA_SOURCE_FILE_AT_LINE (4838)) ;
  }else if (cond_182181.isBuiltAndFalse ()) {
    var_cas_ioVariablesMap.modifier_searchForReadOnlyAccess (inLexique, var_cas_nomVarDest, var_cas_targetType, var_cas_accessedVariableCppName COMMA_SOURCE_FILE_AT_LINE (4840)) ;
  }
  GGS_lstringlist  var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_50 = true ;
    while (syntaxRepeat_50) {
      switch (select_semantics_5F_parser_50 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
          GGS_lstring  var_cas_structAttributeName ;
          inLexique.assignFromAttribute_tokenString (var_cas_structAttributeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          var_cas_structAttributeList.addAssign_operation (var_cas_structAttributeName) ;
          var_cas_instructionLocation = var_cas_structAttributeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (4850)) ;
          GGS_typeGalgasStructType  var_cas_structType = GGS_typeGalgasStructType::castFrom (inLexique, var_cas_targetType.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (4851)) ;
          GGS_bool var_cas_found = GGS_bool (false) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_182736 (var_cas_structType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (4853)), true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_182736 = NULL ;
            while (((operand_182736 = enumerator_182736.nextObject ()))
                && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
              macroValidPointer (operand_182736) ;
              var_cas_found = (operand_182736->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4854))).operator_isEqual (var_cas_structAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4854))) ;
              var_cas_targetType = operand_182736->mAttributType ;
            }
          }
          const GGS_bool cond_183077 = (var_cas_found).operator_not () ;
          if (cond_183077.isBuiltAndTrue ()) {
            var_cas_structAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '@")).operator_concat (var_cas_structType.reader_mStructTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (4858)))).operator_concat (GGS_string ("' does not define a '"))).operator_concat (var_cas_structAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (4859)) ;
          }
          } break ;
        default :
          syntaxRepeat_50 = false ;
          break ;
      }
    }
  }
  GGS_lstring  var_cas_searchMethodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_searchMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_keyExpression ;
  GGS_AC_galgasType  var_cas_keyExpressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_keyExpression, var_cas_keyExpressionType) ;
  GGS_typeListeAttributsSemantiques  var_cas_attributeList ;
  GGS_string var_cas_mapTypeName ;
  if (var_cas_targetType.isBuilt ()) {
    var_cas_targetType (HERE)->method_check_with_InstructionAccess (inLexique, var_cas_instructionLocation, var_cas_searchMethodName, var_cas_keyExpressionType, var_cas_mapTypeName, var_cas_errorMessageName, var_cas_attributeList COMMA_SOURCE_FILE_AT_LINE (4878)) ;
  }
  GGS_string var_cas_prefixString = GGS_string ("") ;
  switch (select_semantics_5F_parser_51 (inLexique)) {
    case 1 : {
      var_cas_prefixString = GGS_string ("") ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_prefixedby) COMMA_HERE) ;
      GGS_lstring  var_cas_thePrefix ;
      inLexique.assignFromAttribute_tokenString (var_cas_thePrefix) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      var_cas_prefixString = var_cas_thePrefix.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4893)) ;
      } break ;
    default :
      break ;
  }
  GGS_typeInstructionList  var_cas_doBranchInstructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  GGS_typeInstructionList  var_cas_elseBranchInstructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (4898)) ;
  var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (4899)) ;
  var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, (var_cas_prefixString).operator_concat (GGS_string ("lkey")), var_cas_instructionLocation COMMA_SOURCE_FILE_AT_LINE (4902)), GGS_typeGalgas_lstring ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (4903)), GGS_typeKeyName ::constructor_new (inLexique, var_cas_instructionLocation, GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (4904)) COMMA_SOURCE_FILE_AT_LINE (4901)) ;
  {
    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_184474 (var_cas_attributeList, true) ;
    const GGS_typeListeAttributsSemantiques::cElement * operand_184474 = NULL ;
    while (((operand_184474 = enumerator_184474.nextObject ()))) {
      macroValidPointer (operand_184474) ;
      const GGS_bool cond_184810 = var_cas_readWriteAccess ;
      if (cond_184810.isBuiltAndTrue ()) {
        var_cas_ioVariablesMap.modifier_insertWithInstructionLocalVariable (inLexique, GGS_lstring ::constructor_new (inLexique, (var_cas_prefixString).operator_concat (operand_184474->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4910))), var_cas_instructionLocation COMMA_SOURCE_FILE_AT_LINE (4910)), operand_184474->mAttributType, GGS_typeOperandName ::constructor_new (inLexique, var_cas_instructionLocation, operand_184474->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4912)), GGS_bool (true), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (4912)) COMMA_SOURCE_FILE_AT_LINE (4909)) ;
      }else if (cond_184810.isBuiltAndFalse ()) {
        var_cas_ioVariablesMap.modifier_insertUsedConstInArgumentNoShadow (inLexique, GGS_lstring ::constructor_new (inLexique, (var_cas_prefixString).operator_concat (operand_184474->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4916))), var_cas_instructionLocation COMMA_SOURCE_FILE_AT_LINE (4916)), operand_184474->mAttributType, GGS_typeOperandName ::constructor_new (inLexique, var_cas_instructionLocation, operand_184474->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4918)), GGS_bool (true), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (4918)) COMMA_SOURCE_FILE_AT_LINE (4915)) ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_doBranchInstructionList, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4899)) ;
  var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (4933)) ;
  switch (select_semantics_5F_parser_52 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseBranchInstructionList, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4933)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (4898)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_with) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction = GGS_typeWithInstruction ::constructor_new (inLexique, var_cas_mapTypeName, var_cas_accessedVariableCppName, var_cas_structAttributeList, var_cas_errorMessageName, var_cas_keyExpression, var_cas_doBranchInstructionList, var_cas_elseBranchInstructionList, var_cas_instructionLocation, var_cas_readWriteAccess COMMA_SOURCE_FILE_AT_LINE (4952)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i50_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_with) COMMA_HERE) ;
  switch (select_semantics_5F_parser_49 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21__3F_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  { bool syntaxRepeat_50 = true ;
    while (syntaxRepeat_50) {
      switch (select_semantics_5F_parser_50 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_50 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  switch (select_semantics_5F_parser_51 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_prefixedby) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
  switch (select_semantics_5F_parser_52 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_with) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'constant_while_before_in_foreach_instruction'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_constant_5F_while_5F_before_5F_in_5F_foreach_5F_instruction_i51_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_typeCplusPlusName  &var_cas_outIndexVariable,
                                GGS_typeInstructionList  &var_cas_out_before_instructionList) {
  var_cas_ioVariablesMap.prologue_repeatPart (inLexique COMMA_SOURCE_FILE_AT_LINE (4982)) ;
  { bool syntaxRepeat_53 = true ;
    while (syntaxRepeat_53) {
        switch (select_semantics_5F_parser_54 (inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3C_) COMMA_HERE) ;
            } break ;
          case 3 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E_) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        nt_expression_parse (inLexique) ;
        switch (select_semantics_5F_parser_55 (inLexique)) {
          case 1 : {
            nt_parse_5F_effective_5F_input_5F_parameters_5F_list_parse (inLexique) ;
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_prefixedby) COMMA_HERE) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            } break ;
          case 3 : {
            } break ;
          default :
            break ;
        }
      switch (select_semantics_5F_parser_53 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_53 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_5F_parser_56 (inLexique)) {
    case 1 : {
      var_cas_outIndexVariable = GGS_typeNullName ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5006)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_index) COMMA_HERE) ;
      GGS_lstring  var_cas_indexVariableName ;
      inLexique.assignFromAttribute_tokenString (var_cas_indexVariableName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      var_cas_outIndexVariable = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_indexVariableName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (5011)), var_cas_indexVariableName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5011)) COMMA_SOURCE_FILE_AT_LINE (5011)) ;
      var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (inLexique, var_cas_indexVariableName, GGS_typeGalgas_uint ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (5014)), var_cas_outIndexVariable COMMA_SOURCE_FILE_AT_LINE (5012)) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_5F_parser_57 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_while) COMMA_HERE) ;
      nt_expression_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  var_cas_out_before_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  switch (select_semantics_5F_parser_58 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_before) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_out_before_instructionList, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_repeatPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4982)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_constant_5F_while_5F_before_5F_in_5F_foreach_5F_instruction_i51_secondPhase (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_foreachEnumerationList  &var_cas_outForeachEnumerationList,
                                GGS_typeExpression  &var_cas_outWhileExpression,
                                GGS_typeInstructionList  &var_cas_out_do_instructionList) {
  var_cas_ioVariablesMap.prologue_repeatPart (inLexique COMMA_SOURCE_FILE_AT_LINE (5052)) ;
  var_cas_outForeachEnumerationList = GGS_foreachEnumerationList ::constructor_emptyList () ;
  { bool syntaxRepeat_53 = true ;
    while (syntaxRepeat_53) {
        const GGS_location  var_cas_magicNumber = GGS_location (inLexique) ;
        GGS_bool var_cas_ascending ;
        switch (select_semantics_5F_parser_54 (inLexique)) {
          case 1 : {
            var_cas_ascending = GGS_bool (true) ;
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3C_) COMMA_HERE) ;
            var_cas_ascending = GGS_bool (true) ;
            } break ;
          case 3 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E_) COMMA_HERE) ;
            var_cas_ascending = GGS_bool (false) ;
            } break ;
          default :
            break ;
        }
        GGS_typeExpression  var_cas_sourceExpression ;
        GGS_AC_galgasType  var_cas_sourceExpressionType ;
        nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
        GGS_typeListeAttributsSemantiques  var_cas_formalEnumerationList ;
        GGS_localConstantBuildStyleEnum var_cas_localConstantBuildStyleEnum ;
        GGS_bool var_cas_iteratorNewStyle ;
        if (var_cas_sourceExpressionType.isBuilt ()) {
          var_cas_sourceExpressionType (HERE)->method_acceptForeachInstruction (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_magicNumber, var_cas_formalEnumerationList, var_cas_localConstantBuildStyleEnum, var_cas_iteratorNewStyle COMMA_SOURCE_FILE_AT_LINE (5083)) ;
        }
        GGS_string var_cas_typeName ;
        if (var_cas_sourceExpressionType.isBuilt ()) {
          var_cas_sourceExpressionType (HERE)->method_getTypeName (inLexique, var_cas_typeName COMMA_SOURCE_FILE_AT_LINE (5092)) ;
        }
        switch (select_semantics_5F_parser_55 (inLexique)) {
          case 1 : {
            GGS_bool automatic_var_190428_0 ;
            nt_parse_5F_effective_5F_input_5F_parameters_5F_list_ (inLexique, var_cas_ioVariablesMap, var_cas_formalEnumerationList, var_cas_magicNumber, var_cas_localConstantBuildStyleEnum, var_cas_iteratorNewStyle, automatic_var_190428_0) ;
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_prefixedby) COMMA_HERE) ;
            GGS_lstring  var_cas_prefix ;
            inLexique.assignFromAttribute_tokenString (var_cas_prefix) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            GGS_bool var_cas_mapStyle = (var_cas_localConstantBuildStyleEnum).operator_isNotEqual (GGS_localConstantBuildStyleEnum::constructor_listStyle (inLexique COMMA_SOURCE_FILE_AT_LINE (5106))) ;
            GGS_bool var_cas_firstOne = GGS_bool (true) ;
            {
              GGS_typeListeAttributsSemantiques::cEnumerator enumerator_190672 (var_cas_formalEnumerationList, true) ;
              const GGS_typeListeAttributsSemantiques::cElement * operand_190672 = NULL ;
              while (((operand_190672 = enumerator_190672.nextObject ()))) {
                macroValidPointer (operand_190672) ;
                GGS_typeCplusPlusName  var_cas_cppName ;
                const GGS_bool cond_190921 = ((var_cas_localConstantBuildStyleEnum).operator_isEqual (GGS_localConstantBuildStyleEnum::constructor_firstIsKeyOtherMapStyle (inLexique COMMA_SOURCE_FILE_AT_LINE (5110)))).operator_and (var_cas_firstOne) ;
                if (cond_190921.isBuiltAndTrue ()) {
                  var_cas_cppName = GGS_typeKeyName ::constructor_new (inLexique, var_cas_magicNumber, var_cas_iteratorNewStyle COMMA_SOURCE_FILE_AT_LINE (5111)) ;
                }else if (cond_190921.isBuiltAndFalse ()) {
                  var_cas_cppName = GGS_typeOperandName ::constructor_new (inLexique, var_cas_magicNumber, operand_190672->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5113)), var_cas_mapStyle, var_cas_iteratorNewStyle COMMA_SOURCE_FILE_AT_LINE (5113)) ;
                }
                var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, (var_cas_prefix.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5115))).operator_concat (operand_190672->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5115))), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5115)), operand_190672->mAttributType, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (5115)) ;
                var_cas_firstOne = GGS_bool (false) ;
              }
            }
            } break ;
          case 3 : {
            GGS_bool var_cas_mapStyle = (var_cas_localConstantBuildStyleEnum).operator_isNotEqual (GGS_localConstantBuildStyleEnum::constructor_listStyle (inLexique COMMA_SOURCE_FILE_AT_LINE (5119))) ;
            GGS_bool var_cas_firstOne = GGS_bool (true) ;
            {
              GGS_typeListeAttributsSemantiques::cEnumerator enumerator_191432 (var_cas_formalEnumerationList, true) ;
              const GGS_typeListeAttributsSemantiques::cElement * operand_191432 = NULL ;
              while (((operand_191432 = enumerator_191432.nextObject ()))) {
                macroValidPointer (operand_191432) ;
                GGS_typeCplusPlusName  var_cas_cppName ;
                const GGS_bool cond_191681 = ((var_cas_localConstantBuildStyleEnum).operator_isEqual (GGS_localConstantBuildStyleEnum::constructor_firstIsKeyOtherMapStyle (inLexique COMMA_SOURCE_FILE_AT_LINE (5123)))).operator_and (var_cas_firstOne) ;
                if (cond_191681.isBuiltAndTrue ()) {
                  var_cas_cppName = GGS_typeKeyName ::constructor_new (inLexique, var_cas_magicNumber, var_cas_iteratorNewStyle COMMA_SOURCE_FILE_AT_LINE (5124)) ;
                }else if (cond_191681.isBuiltAndFalse ()) {
                  var_cas_cppName = GGS_typeOperandName ::constructor_new (inLexique, var_cas_magicNumber, operand_191432->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5126)), var_cas_mapStyle, var_cas_iteratorNewStyle COMMA_SOURCE_FILE_AT_LINE (5126)) ;
                }
                var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, operand_191432->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5128)), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5128)), operand_191432->mAttributType, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (5128)) ;
                var_cas_firstOne = GGS_bool (false) ;
              }
            }
            } break ;
          default :
            break ;
        }
        var_cas_outForeachEnumerationList.addAssign_operation (var_cas_iteratorNewStyle, var_cas_sourceExpression, var_cas_magicNumber, var_cas_typeName, var_cas_ascending) ;
      switch (select_semantics_5F_parser_53 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_53 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_5F_parser_56 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_index) COMMA_HERE) ;
      GGS_lstring  var_cas_indexVariableName ;
      inLexique.assignFromAttribute_tokenString (var_cas_indexVariableName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      GGS_typeCplusPlusName  var_cas_indexVariable = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_indexVariableName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (5142)), var_cas_indexVariableName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5142)) COMMA_SOURCE_FILE_AT_LINE (5142)) ;
      var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (inLexique, var_cas_indexVariableName, GGS_typeGalgas_uint ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (5145)), var_cas_indexVariable COMMA_SOURCE_FILE_AT_LINE (5143)) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_5F_parser_57 (inLexique)) {
    case 1 : {
      var_cas_outWhileExpression = GGS_typeTrueBool ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (5150)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_while) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_resultType ;
      nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_outWhileExpression, var_cas_resultType) ;
      GGS_typeGalgas_bool  var_cas_b = GGS_typeGalgas_bool::castFrom (inLexique, var_cas_resultType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5162)) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_5F_parser_58 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_before) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
  var_cas_out_do_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_out_do_instructionList, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5052)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_constant_5F_while_5F_before_5F_in_5F_foreach_5F_instruction_i51_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_53 = true ;
    while (syntaxRepeat_53) {
        switch (select_semantics_5F_parser_54 (inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3C_) COMMA_HERE) ;
            } break ;
          case 3 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E_) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        nt_expression_parse (inLexique) ;
        switch (select_semantics_5F_parser_55 (inLexique)) {
          case 1 : {
            nt_parse_5F_effective_5F_input_5F_parameters_5F_list_parse (inLexique) ;
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_prefixedby) COMMA_HERE) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            } break ;
          case 3 : {
            } break ;
          default :
            break ;
        }
      switch (select_semantics_5F_parser_53 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_53 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_5F_parser_56 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_index) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_5F_parser_57 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_while) COMMA_HERE) ;
      nt_expression_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_5F_parser_58 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_before) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i52_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_foreach) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_ioVariablesMap.prologue_repeatBlock (inLexique COMMA_SOURCE_FILE_AT_LINE (5197)) ;
  GGS_typeInstructionList  var_cas_before_instructionList ;
  GGS_typeExpression  var_cas_whileExpression ;
  GGS_foreachEnumerationList  var_cas_foreachEnumerationList ;
  GGS_typeInstructionList  var_cas_do_instructionList ;
  GGS_typeCplusPlusName  var_cas_indexVariable ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_194873 = inLexique.parsingContext () ;
    nt_constant_5F_while_5F_before_5F_in_5F_foreach_5F_instruction_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_inSemanticContext, var_cas_indexVariable, var_cas_before_instructionList) ;
  //--- Branch of parse/rewind instruction
    inLexique.setParsingContext (context_194873) ;
    nt_constant_5F_while_5F_before_5F_in_5F_foreach_5F_instruction_secondPhase (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_inSemanticContext, var_cas_foreachEnumerationList, var_cas_whileExpression, var_cas_do_instructionList) ;
  //--- End of parse/rewind instruction
  GGS_typeInstructionList  var_cas_between_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_repeatPart (inLexique COMMA_SOURCE_FILE_AT_LINE (5227)) ;
  switch (select_semantics_5F_parser_59 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { const GGS_typeCplusPlusName _var_195326 = var_cas_indexVariable ; // CAST instruction
        if (_var_195326.getPtr () != NULL) {
          macroValidPointer (_var_195326.getPtr ()) ;
          if (typeid (cPtr_typeAutomaticName) == typeid (* (_var_195326.getPtr ()))) {
            const GGS_typeAutomaticName var_cas_a (_var_195326.getPtr ()) ;
            var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_a.reader_mName (inLexique COMMA_SOURCE_FILE_AT_LINE (5233)), var_cas_a.reader_mVariableLocation (inLexique COMMA_SOURCE_FILE_AT_LINE (5233)) COMMA_SOURCE_FILE_AT_LINE (5233)), GGS_typeGalgas_uint ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (5234)), var_cas_indexVariable COMMA_SOURCE_FILE_AT_LINE (5232)) ;
          }else{
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_between) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_between_instructionList, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_repeatPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5227)) ;
  GGS_typeInstructionList  var_cas_after_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_repeatPart (inLexique COMMA_SOURCE_FILE_AT_LINE (5252)) ;
  switch (select_semantics_5F_parser_60 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { const GGS_typeCplusPlusName _var_196093 = var_cas_indexVariable ; // CAST instruction
        if (_var_196093.getPtr () != NULL) {
          macroValidPointer (_var_196093.getPtr ()) ;
          if (typeid (cPtr_typeAutomaticName) == typeid (* (_var_196093.getPtr ()))) {
            const GGS_typeAutomaticName var_cas_a (_var_196093.getPtr ()) ;
            var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_a.reader_mName (inLexique COMMA_SOURCE_FILE_AT_LINE (5258)), var_cas_a.reader_mVariableLocation (inLexique COMMA_SOURCE_FILE_AT_LINE (5258)) COMMA_SOURCE_FILE_AT_LINE (5258)), GGS_typeGalgas_uint ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (5259)), var_cas_indexVariable COMMA_SOURCE_FILE_AT_LINE (5257)) ;
          }else{
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_after) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_after_instructionList, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_repeatPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5252)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (inLexique COMMA_SOURCE_FILE_AT_LINE (5197)) ;
  var_cas_instruction = GGS_typeForeachInstruction ::constructor_new (inLexique, var_cas_foreachEnumerationList, var_cas_indexVariable, var_cas_whileExpression, var_cas_before_instructionList, var_cas_do_instructionList, var_cas_between_instructionList, var_cas_after_instructionList COMMA_SOURCE_FILE_AT_LINE (5276)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_foreach) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i52_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_foreach) COMMA_HERE) ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_194873 = inLexique.parsingContext () ;
    nt_constant_5F_while_5F_before_5F_in_5F_foreach_5F_instruction_parse (inLexique) ;
  //--- Branch of parse/rewind instruction
    inLexique.setParsingContext (context_194873) ;
    nt_constant_5F_while_5F_before_5F_in_5F_foreach_5F_instruction_parse (inLexique) ;
  //--- End of parse/rewind instruction
  switch (select_semantics_5F_parser_59 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_between) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_5F_parser_60 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_after) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_foreach) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'parse_match_operand'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_match_5F_operand_i53_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  &var_cas_outCppName,
                                GGS_lstring  &var_cas_outBaseTypeName,
                                GGS_location  &var_cas_outVarLocation,
                                GGS_bool &var_cas_outIsEnumeration,
                                GGS_enumConstantMap  &var_cas_outEnumMessageMap) {
  GGS_lstring  var_cas_variableName ;
  GGS_AC_galgasType  var_cas_type ;
  nt_read_5F_access_ (inLexique, var_cas_variableName, var_cas_outCppName, var_cas_type, var_cas_ioVariablesMap) ;
  var_cas_outVarLocation = GGS_location (inLexique) ;
  { const GGS_AC_galgasType _var_198145 = var_cas_type ; // CAST instruction
    if (_var_198145.getPtr () != NULL) {
      macroValidPointer (_var_198145.getPtr ()) ;
      if (dynamic_cast <cPtr_typeGalgasClassType *> (_var_198145.getPtr ()) != NULL) {
        const GGS_typeGalgasClassType var_cas_t (_var_198145.getPtr ()) ;
        var_cas_outBaseTypeName = var_cas_t.reader_mClassTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (5316)) ;
        var_cas_outIsEnumeration = GGS_bool (false) ;
        var_cas_outEnumMessageMap = GGS_enumConstantMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5318)) ;
      }else if (dynamic_cast <cPtr_typeGalgas_enum *> (_var_198145.getPtr ()) != NULL) {
        const GGS_typeGalgas_enum var_cas_e (_var_198145.getPtr ()) ;
        var_cas_outBaseTypeName = var_cas_e.reader_mEnumTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (5320)) ;
        var_cas_outIsEnumeration = GGS_bool (true) ;
        var_cas_outEnumMessageMap = var_cas_e.reader_mEnumConstantesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5322)) ;
      }else{
        GGS_string var_cas_actualTypeName ;
        if (var_cas_type.isBuilt ()) {
          var_cas_type (HERE)->method_getTypeName (inLexique, var_cas_actualTypeName COMMA_SOURCE_FILE_AT_LINE (5325)) ;
        }
        var_cas_variableName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the type of this variable is '@")).operator_concat (var_cas_actualTypeName)).operator_concat (GGS_string ("' ; I was expected an enumeration type or an abstract type")) COMMA_SOURCE_FILE_AT_LINE (5329)) ;
        var_cas_outBaseTypeName.drop () ;
        var_cas_outIsEnumeration.drop () ;
        var_cas_outEnumMessageMap.drop () ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_match_5F_operand_i53_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_read_5F_access_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_match_5F_case_i54_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  var_cas_inVarLocation,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  /* var_cas_inEnumMessageMap */,
                                GGS_lstring  &var_cas_outTypeName) {
  inLexique.assignFromAttribute_tokenString (var_cas_outTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_outTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5348)) ;
  }
  GGS_AC_galgasType  var_cas_definitionClasse1 = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (5349)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (5349)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_definitionClasse1.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (5351)) ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5352)) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 = var_cas_classType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (5353)) ;
  GGS_bool var_cas_isAbstract = var_cas_classType.reader_mClassIsAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (5354)) ;
  const GGS_bool cond_199367 = var_cas_isAbstract ;
  if (cond_199367.isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("an abstract class is not allowed here") COMMA_SOURCE_FILE_AT_LINE (5358)) ;
  }
  const GGS_bool cond_199559 = var_cas_inIsEnumeration ;
  if (cond_199559.isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("a constant of '@")).operator_concat (var_cas_inTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5361)))).operator_concat (GGS_string ("' enumeration type is expected here")) COMMA_SOURCE_FILE_AT_LINE (5362)) ;
  }else if (cond_199559.isBuiltAndFalse ()) {
    const GGS_bool cond_199723 = (var_cas_tableDesClassesAncetresType1.reader_hasKey (var_cas_inTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5362)))).operator_not () ;
    if (cond_199723.isBuiltAndTrue ()) {
      var_cas_outTypeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("This type does not inherit from '")).operator_concat (var_cas_inTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5363)))).operator_concat (GGS_string ("'")) COMMA_SOURCE_FILE_AT_LINE (5364)) ;
    }
  }
  GGS_bool automatic_var_199943_0 ;
  nt_parse_5F_effective_5F_input_5F_parameters_5F_list_ (inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_inVarLocation, GGS_localConstantBuildStyleEnum::constructor_listStyle (inLexique COMMA_SOURCE_FILE_AT_LINE (5370)), GGS_bool (false), automatic_var_199943_0) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_match_5F_case_i54_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  nt_parse_5F_effective_5F_input_5F_parameters_5F_list_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_match_5F_case_i55_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  /* var_cas_inVarLocation */,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  var_cas_inEnumMessageMap,
                                GGS_lstring  &var_cas_outEnumConstantName) {
  inLexique.assignFromAttribute_tokenString (var_cas_outEnumConstantName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  const GGS_bool cond_200528 = var_cas_inIsEnumeration ;
  if (cond_200528.isBuiltAndTrue ()) {
    GGS_uint  automatic_var_200519_0 ;
    if (var_cas_inEnumMessageMap.isBuilt ()) {
      var_cas_inEnumMessageMap (HERE)->method_searchKey (inLexique, var_cas_outEnumConstantName, automatic_var_200519_0 COMMA_SOURCE_FILE_AT_LINE (5391)) ;
    }
  }else if (cond_200528.isBuiltAndFalse ()) {
    var_cas_outEnumConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("a class that inherit from '@")).operator_concat (var_cas_inTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5393)))).operator_concat (GGS_string ("' abstract class is expected here")) COMMA_SOURCE_FILE_AT_LINE (5394)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_match_5F_case_i55_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i56_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_match) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_operand1_cppName ;
  GGS_lstring  var_cas_operand1_typeName ;
  GGS_location  var_cas_operand1_location ;
  GGS_bool var_cas_operand1_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand1_enumMessageMap ;
  nt_parse_5F_match_5F_operand_ (inLexique, var_cas_ioVariablesMap, var_cas_operand1_cppName, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3A_) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_operand2_cppName ;
  GGS_lstring  var_cas_operand2_typeName ;
  GGS_location  var_cas_operand2_location ;
  GGS_bool var_cas_operand2_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand2_enumMessageMap ;
  nt_parse_5F_match_5F_operand_ (inLexique, var_cas_ioVariablesMap, var_cas_operand2_cppName, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_L_matchInstructionCasesList  var_cas_casesList = GGS_L_matchInstructionCasesList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (5440)) ;
  { bool syntaxRepeat_61 = true ;
    while (syntaxRepeat_61) {
      switch (select_semantics_5F_parser_61 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
          var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (5444)) ;
          GGS_lstring  var_cas_case1_name ;
          nt_parse_5F_match_5F_case_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap, var_cas_case1_name) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3A_) COMMA_HERE) ;
          GGS_lstring  var_cas_case2_name ;
          nt_parse_5F_match_5F_case_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap, var_cas_case2_name) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
          GGS_typeInstructionList  var_cas_instructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
          nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inSemanticContext) ;
          var_cas_casesList.addAssign_operation (var_cas_case1_name, var_cas_case2_name, var_cas_instructionsList) ;
          var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5444)) ;
          } break ;
        default :
          syntaxRepeat_61 = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (5484)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_elsePartInstructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elsePartInstructionsList, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5484)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (5440)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_match) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction = GGS_typeMatchInstruction ::constructor_new (inLexique, var_cas_operand1_location, var_cas_operand2_location, var_cas_operand1_cppName, var_cas_operand2_cppName, var_cas_operand1_typeName, var_cas_operand2_typeName, var_cas_operand1_isEnumeration, var_cas_operand2_isEnumeration, var_cas_casesList, var_cas_elsePartInstructionsList COMMA_SOURCE_FILE_AT_LINE (5501)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i56_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_match) COMMA_HERE) ;
  nt_parse_5F_match_5F_operand_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3A_) COMMA_HERE) ;
  nt_parse_5F_match_5F_operand_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  { bool syntaxRepeat_61 = true ;
    while (syntaxRepeat_61) {
      switch (select_semantics_5F_parser_61 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
          nt_parse_5F_match_5F_case_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3A_) COMMA_HERE) ;
          nt_parse_5F_match_5F_case_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
          nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_61 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_match) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Implementation of production rule 'semantic_instructions_list_no_verif'   *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instructions_5F_list_5F_no_5F_verif_i57_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  { bool syntaxRepeat_62 = true ;
    while (syntaxRepeat_62) {
      switch (select_semantics_5F_parser_62 (inLexique)) {
        case 2 : {
          nt_semantic_5F_instruction_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inSemanticContext) ;
          } break ;
        default :
          syntaxRepeat_62 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instructions_5F_list_5F_no_5F_verif_i57_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_62 = true ;
    while (syntaxRepeat_62) {
      switch (select_semantics_5F_parser_62 (inLexique)) {
        case 2 : {
          nt_semantic_5F_instruction_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_62 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_optional_5F_assignment_i58_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_lstring  /* var_cas_inTypeName */,
                                const GGS_lstring  /* var_cas_inTargetVarName */,
                                const GGS_typeCplusPlusName  var_cas_inVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */) {
  var_cas_ioInstructionList.addAssign_operation (GGS_typeInstructionDeclarationVarLocale ::constructor_new (inLexique, var_cas_inVariableCppName, var_cas_inVariableType COMMA_SOURCE_FILE_AT_LINE (5552))) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_optional_5F_assignment_i58_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_optional_5F_assignment_i59_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_lstring  /* var_cas_inTypeName */,
                                const GGS_lstring  var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_inVariableType,  var_cas_sourceType,  GGS_location (inLexique),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (5581)) ;
  GGS_typeInstruction  var_cas_instruction = GGS_C_declarationInstructionWithAssignment ::constructor_new (inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_sourceExpression COMMA_SOURCE_FILE_AT_LINE (5583)) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  GGS_AC_galgasType  automatic_var_207126_0 ;
  GGS_typeCplusPlusName  automatic_var_207126_1 ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (inLexique, var_cas_inTargetVarName, automatic_var_207126_0, automatic_var_207126_1 COMMA_SOURCE_FILE_AT_LINE (5586)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_optional_5F_assignment_i59_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_optional_5F_assignment_i60_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_lstring  /* var_cas_inTypeName */,
                                const GGS_lstring  var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
  GGS_lstring  var_cas_constructorName ;
  inLexique.assignFromAttribute_tokenString (var_cas_constructorName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  GGS_bool var_cas_hasLexiqueAndLocationArguments ;
  GGS_AC_galgasType  var_cas_returnedType ;
  if (var_cas_inVariableType.isBuilt ()) {
    var_cas_inVariableType (HERE)->method_handleConstructorInvocation (inLexique, var_cas_constructorName, var_cas_listeAttributsSemantiques, var_cas_hasLexiqueAndLocationArguments, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (5610)) ;
  }
  const GGS_bool cond_208281 = (var_cas_inVariableType).operator_isNotEqual (var_cas_returnedType) ;
  if (cond_208281.isBuiltAndTrue ()) {
    GGS_string var_cas_typeName ;
    if (var_cas_returnedType.isBuilt ()) {
      var_cas_returnedType (HERE)->method_getTypeName (inLexique, var_cas_typeName COMMA_SOURCE_FILE_AT_LINE (5613)) ;
    }
    var_cas_constructorName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this constructor returns an other type: '@")).operator_concat (var_cas_typeName)).operator_concat (GGS_string ("'")) COMMA_SOURCE_FILE_AT_LINE (5615)) ;
  }
  GGS_typeExpressionList  var_cas_expressionList ;
  nt_output_5F_expression_5F_list_ (inLexique, var_cas_expressionList, var_cas_listeAttributsSemantiques, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_e = GGS_typeConstructorExpression ::constructor_new (inLexique, var_cas_inVariableType, var_cas_constructorName, var_cas_hasLexiqueAndLocationArguments, var_cas_expressionList COMMA_SOURCE_FILE_AT_LINE (5628)) ;
  var_cas_ioInstructionList.addAssign_operation (GGS_C_declarationInstructionWithAssignment ::constructor_new (inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (5634))) ;
  GGS_AC_galgasType  automatic_var_208953_0 ;
  GGS_typeCplusPlusName  automatic_var_208953_1 ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (inLexique, var_cas_inTargetVarName, automatic_var_208953_0, automatic_var_208953_1 COMMA_SOURCE_FILE_AT_LINE (5636)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_optional_5F_assignment_i60_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_output_5F_expression_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i61_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_mapproxy) COMMA_HERE) ;
  GGS_lstring  var_cas_mapindexTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mapindexTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_63 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      const GGS_bool cond_210180 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_mapindexTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5659)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_mapindexTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5660))))).operator_not () ;
      if (cond_210180.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedMapindexType ::constructor_new (inLexique, var_cas_mapindexTypeName COMMA_SOURCE_FILE_AT_LINE (5661)) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_mapindexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5662)) ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
      GGS_lstring  var_cas_mapTypeName ;
      inLexique.assignFromAttribute_tokenString (var_cas_mapTypeName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
        var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_mapTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (5669)) ;
      }
      GGS_AC_galgasType  var_cas_aType = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5670)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (5670)) ;
      GGS_typeGalgasMapType  var_cas_mapType = GGS_typeGalgasMapType::castFrom (inLexique, var_cas_aType.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5671)) ;
      GGS_typeListeAttributsSemantiques  var_cas_mapAttributesList = var_cas_mapType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (5672)) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesSurcharger = var_cas_mapType.reader_aTableMethodesSurcharger (inLexique COMMA_SOURCE_FILE_AT_LINE (5673)) ;
      GGS_mapModifierMap  var_cas_modifierMethodMap = var_cas_mapType.reader_mModifierMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5674)) ;
      GGS_EXmapMethodMap  var_cas_readerMethodMap = var_cas_mapType.reader_mReaderMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5675)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_t = GGS_typeGalgasMapindexType ::constructor_new (inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapType, var_cas_mapAttributesList, var_cas_tableMethodesSurcharger, var_cas_modifierMethodMap, var_cas_readerMethodMap COMMA_SOURCE_FILE_AT_LINE (5678)) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_mapindexTypeName, GGS_typeEntiteType ::constructor_new (inLexique, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5687)) COMMA_SOURCE_FILE_AT_LINE (5687)) ;
      GGS_typeEntityToGenerate  var_cas_e = GGS_C_mapindexToImplement ::constructor_new (inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_readerMethodMap COMMA_SOURCE_FILE_AT_LINE (5688)) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_e) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i61_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_mapproxy) COMMA_HERE) ;
  GGS_lstring  var_cas_mapindexTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mapindexTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_63 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      const GGS_bool cond_212204 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_mapindexTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5710)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_mapindexTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5711))))).operator_not () ;
      if (cond_212204.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedMapindexType ::constructor_new (inLexique, var_cas_mapindexTypeName COMMA_SOURCE_FILE_AT_LINE (5712)) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_mapindexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5713)) ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
      GGS_lstring  var_cas_mapTypeName ;
      inLexique.assignFromAttribute_tokenString (var_cas_mapTypeName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
        var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_mapTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (5720)) ;
      }
      GGS_AC_galgasType  var_cas_aType = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5721)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (5721)) ;
      GGS_typeGalgasMapType  var_cas_mapType = GGS_typeGalgasMapType::castFrom (inLexique, var_cas_aType.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5722)) ;
      GGS_typeListeAttributsSemantiques  var_cas_mapAttributesList = var_cas_mapType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (5723)) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesSurcharger = var_cas_mapType.reader_aTableMethodesSurcharger (inLexique COMMA_SOURCE_FILE_AT_LINE (5724)) ;
      GGS_mapModifierMap  var_cas_modifierMethodMap = var_cas_mapType.reader_mModifierMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5725)) ;
      GGS_EXmapMethodMap  var_cas_readerMethodMap = var_cas_mapType.reader_mReaderMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5726)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_t = GGS_typeGalgasMapindexType ::constructor_new (inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapType, var_cas_mapAttributesList, var_cas_tableMethodesSurcharger, var_cas_modifierMethodMap, var_cas_readerMethodMap COMMA_SOURCE_FILE_AT_LINE (5729)) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_mapindexTypeName, GGS_typeEntiteType ::constructor_new (inLexique, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5738)) COMMA_SOURCE_FILE_AT_LINE (5738)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i61_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_mapproxy) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_63 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i62_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mapTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mapTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_64 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      const GGS_bool cond_214448 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_mapTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5762)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_mapTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5763))))).operator_not () ;
      if (cond_214448.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedMapType ::constructor_new (inLexique, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5764)) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_mapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5765)) ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
      GGS_lstring  var_cas_cppClassName ;
      inLexique.assignFromAttribute_tokenString (var_cas_cppClassName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      var_cas_cppClassName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("old style map definition") COMMA_SOURCE_FILE_AT_LINE (5772)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5777)) ;
      { bool syntaxRepeat_65 = true ;
        while (syntaxRepeat_65) {
          switch (select_semantics_5F_parser_65 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_5F_map_5F_method_ (inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              var_cas_insertMethodList.addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5785)), GGS_bool (true), GGS_string (""), GGS_uint (0U)) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_5F_map_5F_method_ (inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              var_cas_searchMethodList.addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5792)), GGS_bool (true), GGS_string (""), GGS_uint (0U)) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_block) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomMethode) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5799)) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
              GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
              nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5814)) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
              nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              var_cas_tableMethodesBloc.modifier_insertKey (inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin COMMA_SOURCE_FILE_AT_LINE (5827)) ;
              } break ;
            default :
              syntaxRepeat_65 = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5832)) ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap = GGS_mapModifierMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5843)) ;
      GGS_formalArgumentPassingModeAST var_cas_inPassingMode = GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (5844)) ;
      GGS_formalArgumentPassingModeAST var_cas_outPassingMode = GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (5845)) ;
      GGS_AC_galgasType  var_cas_lstringType = GGS_typeGalgas_lstring ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (5846)) ;
      GGS_AC_galgasType  var_cas_luintType = GGS_typeGalgas_luint ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (5847)) ;
      {
        GGS_insertOrSearchMethodList::cEnumerator enumerator_217403 (var_cas_insertMethodList, true) ;
        const GGS_insertOrSearchMethodList::cElement * operand_217403 = NULL ;
        while (((operand_217403 = enumerator_217403.nextObject ()))) {
          macroValidPointer (operand_217403) ;
          GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_217580 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_217580 = NULL ;
            while (((operand_217580 = enumerator_217580.nextObject ()))) {
              macroValidPointer (operand_217580) ;
              var_cas_methodSignature.addAssign_operation (operand_217580->mAttributType, var_cas_inPassingMode) ;
            }
          }
          var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, operand_217403->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5855)) ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          var_cas_methodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_217982 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_217982 = NULL ;
            while (((operand_217982 = enumerator_217982.nextObject ()))) {
              macroValidPointer (operand_217982) ;
              var_cas_methodSignature.addAssign_operation (operand_217982->mAttributType, var_cas_inPassingMode) ;
            }
          }
          GGS_lstring  var_cas_insertKeyAndGetIndexName = GGS_lstring ::constructor_new (inLexique, (operand_217403->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5863))).operator_concat (GGS_string ("GetIndex")), operand_217403->mMethodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (5863)) COMMA_SOURCE_FILE_AT_LINE (5863)) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5864)) ;
        }
      }
      {
        GGS_insertOrSearchMethodList::cEnumerator enumerator_218310 (var_cas_searchMethodList, true) ;
        const GGS_insertOrSearchMethodList::cElement * operand_218310 = NULL ;
        while (((operand_218310 = enumerator_218310.nextObject ()))) {
          macroValidPointer (operand_218310) ;
          GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_218485 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_218485 = NULL ;
            while (((operand_218485 = enumerator_218485.nextObject ()))) {
              macroValidPointer (operand_218485) ;
              var_cas_methodSignature.addAssign_operation (operand_218485->mAttributType, var_cas_outPassingMode) ;
            }
          }
          var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, operand_218310->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5873)) ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          var_cas_methodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_218885 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_218885 = NULL ;
            while (((operand_218885 = enumerator_218885.nextObject ()))) {
              macroValidPointer (operand_218885) ;
              var_cas_methodSignature.addAssign_operation (operand_218885->mAttributType, var_cas_outPassingMode) ;
            }
          }
          GGS_lstring  var_cas_insertKeyAndGetIndexName = GGS_lstring ::constructor_new (inLexique, (operand_218310->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5881))).operator_concat (GGS_string ("GetIndex")), operand_218310->mMethodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (5881)) COMMA_SOURCE_FILE_AT_LINE (5881)) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5882)) ;
        }
      }
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasMapType ::constructor_new (inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_EXmapMethodMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5890)), GGS_mapStateList ::constructor_emptyList () COMMA_SOURCE_FILE_AT_LINE (5885)) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_SOURCE_FILE_AT_LINE (5893)) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5894)) ;
      GGS_typeEntityToGenerate  var_cas_def = GGS_typeDefinitionTableAimplementer ::constructor_new (inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_cppClassName, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_tableMethodesBloc COMMA_SOURCE_FILE_AT_LINE (5896)) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5909)) ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapStateList  var_cas_mapStateList = GGS_mapStateList ::constructor_emptyList () ;
      { bool syntaxRepeat_66 = true ;
        while (syntaxRepeat_66) {
          switch (select_semantics_5F_parser_66 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_state) COMMA_HERE) ;
              GGS_lstring  var_cas_stateName ;
              inLexique.assignFromAttribute_tokenString (var_cas_stateName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_mapAutomatonMessageKind var_cas_stateMessageKind ;
              GGS_lstring  var_cas_stateMessage ;
              switch (select_semantics_5F_parser_67 (inLexique)) {
                case 1 : {
                  var_cas_stateMessageKind = GGS_mapAutomatonMessageKind::constructor_noMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (5928)) ;
                  var_cas_stateMessage = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5929)) ;
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_warning) COMMA_HERE) ;
                  inLexique.assignFromAttribute_tokenString (var_cas_stateMessage) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  if (var_cas_stateMessage.isBuilt ()) {
                    ::routine_check_K_escapeCharacters (inLexique,  var_cas_stateMessage COMMA_SOURCE_FILE_AT_LINE (5933)) ;
                  }
                  var_cas_stateMessageKind = GGS_mapAutomatonMessageKind::constructor_warningMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (5934)) ;
                  } break ;
                case 3 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
                  inLexique.assignFromAttribute_tokenString (var_cas_stateMessage) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  if (var_cas_stateMessage.isBuilt ()) {
                    ::routine_check_K_escapeCharacters (inLexique,  var_cas_stateMessage COMMA_SOURCE_FILE_AT_LINE (5938)) ;
                  }
                  var_cas_stateMessageKind = GGS_mapAutomatonMessageKind::constructor_errorMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (5939)) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
              GGS_mapStateTransitionList  var_cas_transitionList = GGS_mapStateTransitionList ::constructor_emptyList () ;
              { bool syntaxRepeat_68 = true ;
                while (syntaxRepeat_68) {
                  switch (select_semantics_5F_parser_68 (inLexique)) {
                    case 2 : {
                      GGS_lstring  var_cas_actionName ;
                      inLexique.assignFromAttribute_tokenString (var_cas_actionName) ;
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
                      GGS_lstring  var_cas_targetStateName ;
                      inLexique.assignFromAttribute_tokenString (var_cas_targetStateName) ;
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                      GGS_mapAutomatonMessageKind var_cas_transitionMessageKind ;
                      GGS_lstring  var_cas_transitionMessage ;
                      switch (select_semantics_5F_parser_69 (inLexique)) {
                        case 1 : {
                          var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_noMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (5951)) ;
                          var_cas_transitionMessage = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5952)) ;
                          } break ;
                        case 2 : {
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_warning) COMMA_HERE) ;
                          inLexique.assignFromAttribute_tokenString (var_cas_transitionMessage) ;
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                          if (var_cas_transitionMessage.isBuilt ()) {
                            ::routine_check_K_escapeCharacters (inLexique,  var_cas_transitionMessage COMMA_SOURCE_FILE_AT_LINE (5956)) ;
                          }
                          var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_warningMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (5957)) ;
                          } break ;
                        case 3 : {
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
                          inLexique.assignFromAttribute_tokenString (var_cas_transitionMessage) ;
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                          if (var_cas_transitionMessage.isBuilt ()) {
                            ::routine_check_K_escapeCharacters (inLexique,  var_cas_transitionMessage COMMA_SOURCE_FILE_AT_LINE (5961)) ;
                          }
                          var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_errorMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (5962)) ;
                          } break ;
                        default :
                          break ;
                      }
                      var_cas_transitionList.addAssign_operation (var_cas_actionName, var_cas_targetStateName, var_cas_transitionMessageKind, var_cas_transitionMessage) ;
                      } break ;
                    default :
                      syntaxRepeat_68 = false ;
                      break ;
                  }
                }
              }
              var_cas_mapStateList.addAssign_operation (var_cas_stateName, var_cas_stateMessageKind, var_cas_stateMessage, var_cas_transitionList) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_66 = false ;
              break ;
          }
        }
      }
      GGS_mapAutomatonStateMap  var_cas_mapAutomatonStateMap = GGS_mapAutomatonStateMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5980)) ;
      {
        GGS_mapStateList::cEnumerator enumerator_222925 (var_cas_mapStateList, true) ;
        const GGS_mapStateList::cElement * operand_222925 = NULL ;
        while (((operand_222925 = enumerator_222925.nextObject ()))) {
          macroValidPointer (operand_222925) ;
          var_cas_mapAutomatonStateMap.modifier_insertKey (inLexique, operand_222925->mStateName, var_cas_mapAutomatonStateMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (5982)) ;
        }
      }
      {
        GGS_mapStateList::cEnumerator enumerator_223056 (var_cas_mapStateList, true) ;
        const GGS_mapStateList::cElement * operand_223056 = NULL ;
        while (((operand_223056 = enumerator_223056.nextObject ()))) {
          macroValidPointer (operand_223056) ;
          {
            GGS_mapStateTransitionList::cEnumerator enumerator_223089 (operand_223056->mTransitionList, true) ;
            const GGS_mapStateTransitionList::cElement * operand_223089 = NULL ;
            while (((operand_223089 = enumerator_223089.nextObject ()))) {
              macroValidPointer (operand_223089) ;
              GGS_uint  automatic_var_223154_0 ;
              if (var_cas_mapAutomatonStateMap.isBuilt ()) {
                var_cas_mapAutomatonStateMap (HERE)->method_searchKey (inLexique, operand_223089->mTargetStateName, automatic_var_223154_0 COMMA_SOURCE_FILE_AT_LINE (5986)) ;
              }
            }
          }
        }
      }
      GGS_insertOrSearchMethodList  var_cas_insertMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_insertOrSearchMethodList  var_cas_removeMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5993)) ;
      GGS_stringset  var_cas_initialStateSet = GGS_stringset ::constructor_emptySet () ;
      GGS_formalArgumentPassingModeAST var_cas_inPassingMode = GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (5996)) ;
      GGS_formalArgumentPassingModeAST var_cas_outPassingMode = GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (5997)) ;
      GGS_AC_galgasType  var_cas_lstringType = GGS_typeGalgas_lstring ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (5998)) ;
      GGS_AC_galgasType  var_cas_luintType = GGS_typeGalgas_luint ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (5999)) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap = GGS_mapModifierMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6000)) ;
      GGS_EXmapMethodMap  var_cas_mapSearchMethodMap = GGS_EXmapMethodMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6001)) ;
      GGS_bool var_cas_hasInsertOrReplaceMethod = GGS_bool (false) ;
      GGS_mapAutomatonActionMap  var_cas_mapAutomatonActionMap = GGS_mapAutomatonActionMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6003)) ;
      { bool syntaxRepeat_70 = true ;
        while (syntaxRepeat_70) {
          switch (select_semantics_5F_parser_70 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_or) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_replace) COMMA_HERE) ;
              const GGS_bool cond_224278 = (var_cas_mapStateList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
              if (cond_224278.isBuiltAndTrue ()) {
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("as map state automaton is defined, the 'insertOrReplace' modifier cannot be used") COMMA_SOURCE_FILE_AT_LINE (6011)) ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              var_cas_hasInsertOrReplaceMethod = GGS_bool (true) ;
              GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_224533 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_224533 = NULL ;
                while (((operand_224533 = enumerator_224533.nextObject ()))) {
                  macroValidPointer (operand_224533) ;
                  var_cas_methodSignature.addAssign_operation (operand_224533->mAttributType, var_cas_inPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("insertOrReplace"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (6020)), var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6020)) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_remove) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_5F_method_ (inLexique, var_cas_methodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage.isBuilt ()) {
                ::routine_check_KL_escapeCharacters (inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (6026)) ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_225087 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_225087 = NULL ;
                while (((operand_225087 = enumerator_225087.nextObject ()))) {
                  macroValidPointer (operand_225087) ;
                  var_cas_methodSignature.addAssign_operation (operand_225087->mAttributType, var_cas_outPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6034)) ;
              var_cas_removeMethodList.addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6035)), GGS_bool (false), GGS_string (""), GGS_uint (0U)) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_uint  var_cas_initialAutomatonState ;
              switch (select_semantics_5F_parser_71 (inLexique)) {
                case 1 : {
                  const GGS_bool cond_225622 = (var_cas_mapStateList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
                  if (cond_225622.isBuiltAndTrue ()) {
                    var_cas_methodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("as map state automaton is defined, an insert method should name a state as key initial state") COMMA_SOURCE_FILE_AT_LINE (6043)) ;
                  }
                  var_cas_initialAutomatonState = GGS_uint (0U) ;
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_state) COMMA_HERE) ;
                  GGS_lstring  var_cas_insertStateName ;
                  inLexique.assignFromAttribute_tokenString (var_cas_insertStateName) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  if (var_cas_mapAutomatonStateMap.isBuilt ()) {
                    var_cas_mapAutomatonStateMap (HERE)->method_searchKey (inLexique, var_cas_insertStateName, var_cas_initialAutomatonState COMMA_SOURCE_FILE_AT_LINE (6048)) ;
                  }
                  var_cas_initialStateSet.addAssign_operation (var_cas_insertStateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6049))) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
              GGS_lstring  var_cas_errorMessage ;
              inLexique.assignFromAttribute_tokenString (var_cas_errorMessage) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              if (var_cas_errorMessage.isBuilt ()) {
                ::routine_check_KL_escapeCharacters (inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (6054)) ;
              }
              GGS_string var_cas_shadowErrorMessage ;
              switch (select_semantics_5F_parser_72 (inLexique)) {
                case 1 : {
                  var_cas_shadowErrorMessage = GGS_string ("") ;
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                  GGS_lstring  var_cas_shadowErrorMessageString ;
                  inLexique.assignFromAttribute_tokenString (var_cas_shadowErrorMessageString) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  if (var_cas_shadowErrorMessageString.isBuilt ()) {
                    ::routine_check_KL_escapeCharacters (inLexique,  var_cas_shadowErrorMessageString COMMA_SOURCE_FILE_AT_LINE (6062)) ;
                  }
                  var_cas_shadowErrorMessage = var_cas_shadowErrorMessageString.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6063)) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_226564 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_226564 = NULL ;
                while (((operand_226564 = enumerator_226564.nextObject ()))) {
                  macroValidPointer (operand_226564) ;
                  var_cas_methodSignature.addAssign_operation (operand_226564->mAttributType, var_cas_inPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6072)) ;
              var_cas_insertMethodList.addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6073)), GGS_bool (false), var_cas_shadowErrorMessage, var_cas_initialAutomatonState) ;
              } break ;
            case 5 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_errorMessage ;
              inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_uint  var_cas_actionIndex ;
              switch (select_semantics_5F_parser_73 (inLexique)) {
                case 1 : {
                  const GGS_bool cond_227163 = (var_cas_mapStateList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
                  if (cond_227163.isBuiltAndTrue ()) {
                    var_cas_methodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("as map state automaton is defined, a search method should name an automaton action") COMMA_SOURCE_FILE_AT_LINE (6083)) ;
                  }
                  var_cas_actionIndex = GGS_uint (0U) ;
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
                  GGS_lstring  var_cas_actionName ;
                  inLexique.assignFromAttribute_tokenString (var_cas_actionName) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  const GGS_bool cond_227496 = (var_cas_mapAutomatonActionMap.reader_hasKey (var_cas_actionName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6088)))).operator_not () ;
                  if (cond_227496.isBuiltAndTrue ()) {
                    var_cas_actionIndex = var_cas_mapAutomatonActionMap.reader_count () ;
                    var_cas_mapAutomatonActionMap.modifier_insertKey (inLexique, var_cas_actionName, var_cas_mapAutomatonActionMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (6090)) ;
                  }else if (cond_227496.isBuiltAndFalse ()) {
                    if (var_cas_mapAutomatonActionMap.isBuilt ()) {
                      var_cas_mapAutomatonActionMap (HERE)->method_searchKey (inLexique, var_cas_actionName, var_cas_actionIndex COMMA_SOURCE_FILE_AT_LINE (6092)) ;
                    }
                  }
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
              inLexique.assignFromAttribute_tokenString (var_cas_errorMessage) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              if (var_cas_errorMessage.isBuilt ()) {
                ::routine_check_K_escapeCharacters (inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (6098)) ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_227932 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_227932 = NULL ;
                while (((operand_227932 = enumerator_227932.nextObject ()))) {
                  macroValidPointer (operand_227932) ;
                  var_cas_methodSignature.addAssign_operation (operand_227932->mAttributType, var_cas_outPassingMode) ;
                }
              }
              const GGS_bool cond_228146 = (var_cas_mapStateList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
              if (cond_228146.isBuiltAndTrue ()) {
                var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6107)) ;
              }else if (cond_228146.isBuiltAndFalse ()) {
                var_cas_mapSearchMethodMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6109)) ;
              }
              var_cas_searchMethodList.addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6111)), GGS_bool (false), GGS_string (""), var_cas_actionIndex) ;
              } break ;
            default :
              syntaxRepeat_70 = false ;
              break ;
          }
        }
      }
      {
        GGS_typeSemanticAttributesMap::cEnumerator enumerator_228400 (var_cas_tableAttributs, true) ;
        const GGS_typeSemanticAttributesMap::cElement * operand_228400 = NULL ;
        while (((operand_228400 = enumerator_228400.nextObject ()))) {
          macroValidPointer (operand_228400) ;
          const GGS_bool cond_228832 = operand_228400->mInfo.mHasSetter ;
          if (cond_228832.isBuiltAndTrue ()) {
            GGS_string var_cas_modifierName = ((GGS_string ("set")).operator_concat (operand_228400->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6116)).reader_stringByCapitalizingFirstCharacter ())).operator_concat (GGS_string ("ForKey")) ;
            GGS_L_EXsignature  var_cas_modifierSignature = GGS_L_EXsignature ::constructor_emptyList () ;
            var_cas_modifierSignature.addAssign_operation (operand_228400->mInfo.mAttributType, var_cas_inPassingMode) ;
            var_cas_modifierSignature.addAssign_operation (GGS_typeGalgas_string ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (6119)), var_cas_inPassingMode) ;
            var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_modifierName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (6120)), var_cas_modifierSignature COMMA_SOURCE_FILE_AT_LINE (6120)) ;
          }
        }
      }
      const GGS_bool cond_229093 = (var_cas_mapStateList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
      if (cond_229093.isBuiltAndTrue ()) {
        var_cas_mapSearchMethodMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("checkAutomatonStates"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (6126)), GGS_L_EXsignature ::constructor_listWithValue (GGS_typeGalgas_location ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (6127)), var_cas_inPassingMode) COMMA_SOURCE_FILE_AT_LINE (6125)) ;
      }
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasMapType ::constructor_new (inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapSearchMethodMap, var_cas_mapStateList COMMA_SOURCE_FILE_AT_LINE (6131)) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_SOURCE_FILE_AT_LINE (6139)) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6140)) ;
      const GGS_stringset  var_cas_allActions = var_cas_mapAutomatonActionMap.reader_allKeys (inLexique COMMA_SOURCE_FILE_AT_LINE (6142)) ;
      GGS_mapStateSortedList  var_cas_mapStateSortedList = GGS_mapStateSortedList ::constructor_emptySortedList () ;
      {
        GGS_mapStateList::cEnumerator enumerator_229700 (var_cas_mapStateList, true) ;
        const GGS_mapStateList::cElement * operand_229700 = NULL ;
        while (((operand_229700 = enumerator_229700.nextObject ()))) {
          macroValidPointer (operand_229700) ;
          GGS_stringset  var_cas_actionsForCurrentState = GGS_stringset ::constructor_emptySet () ;
          GGS_mapStateTransitionSortedList  var_cas_mapStateTransitionSortedList = GGS_mapStateTransitionSortedList ::constructor_emptySortedList () ;
          {
            GGS_mapStateTransitionList::cEnumerator enumerator_229871 (operand_229700->mTransitionList, true) ;
            const GGS_mapStateTransitionList::cElement * operand_229871 = NULL ;
            while (((operand_229871 = enumerator_229871.nextObject ()))) {
              macroValidPointer (operand_229871) ;
              GGS_uint  var_cas_actionIndex ;
              if (var_cas_mapAutomatonActionMap.isBuilt ()) {
                var_cas_mapAutomatonActionMap (HERE)->method_searchKey (inLexique, operand_229871->mActionName, var_cas_actionIndex COMMA_SOURCE_FILE_AT_LINE (6149)) ;
              }
              const GGS_bool cond_230152 = var_cas_actionsForCurrentState.reader_hasKey (operand_229871->mActionName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6150))) ;
              if (cond_230152.isBuiltAndTrue ()) {
                operand_229871->mActionName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_229871->mActionName)).operator_concat (GGS_string ("' action is already used for this state")) COMMA_SOURCE_FILE_AT_LINE (6152)) ;
              }
              var_cas_actionsForCurrentState.addAssign_operation (operand_229871->mActionName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6153))) ;
              GGS_uint  var_cas_targetStateIndex ;
              if (var_cas_mapAutomatonStateMap.isBuilt ()) {
                var_cas_mapAutomatonStateMap (HERE)->method_searchKey (inLexique, operand_229871->mTargetStateName, var_cas_targetStateIndex COMMA_SOURCE_FILE_AT_LINE (6155)) ;
              }
              var_cas_mapStateTransitionSortedList.addAssign_operation (var_cas_actionIndex, operand_229871->mActionName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6158)), var_cas_targetStateIndex, operand_229871->mTargetStateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6160)), operand_229871->mTransitionMessageKind, operand_229871->mTransitionMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6162))) ;
            }
          }
          GGS_uint  var_cas_stateIndex ;
          if (var_cas_mapAutomatonStateMap.isBuilt ()) {
            var_cas_mapAutomatonStateMap (HERE)->method_searchKey (inLexique, operand_229700->mStateName, var_cas_stateIndex COMMA_SOURCE_FILE_AT_LINE (6166)) ;
          }
          var_cas_mapStateSortedList.addAssign_operation (var_cas_stateIndex, operand_229700->mStateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6169)), operand_229700->mStateMessageKind, operand_229700->mStateMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6171)), var_cas_mapStateTransitionSortedList) ;
          GGS_stringset  var_cas_missingActions = var_cas_allActions.substract_operation (inLexique, var_cas_actionsForCurrentState COMMA_SOURCE_FILE_AT_LINE (6174)) ;
          const GGS_bool cond_231236 = (var_cas_missingActions.reader_count ()).operator_strictSup (GGS_uint (0U)) ;
          if (cond_231236.isBuiltAndTrue ()) {
            GGS_string var_cas_s = GGS_string ("") ;
            {
              GGS_stringset::cEnumerator enumerator_231033 (var_cas_missingActions, true) ;
              if (enumerator_231033 .hasCurrentObject ()) {
                bool _foreach_loop_231033 ;
                do{
                  var_cas_s.appendCString ("'") ;
                  var_cas_s.dotAssign_operation (enumerator_231033._key (HERE)) ;
                  var_cas_s.appendCString ("'") ;
                  enumerator_231033.next () ;
                  _foreach_loop_231033 = (enumerator_231033 .hasCurrentObject ()) ;
                  if (_foreach_loop_231033) {
                    var_cas_s.appendCString (", ") ;
                  }
                }while (_foreach_loop_231033) ;
              }
            }
            operand_229700->mStateName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, (GGS_string ("the following actions are not named in a transition from this state: ")).operator_concat (var_cas_s) COMMA_SOURCE_FILE_AT_LINE (6182)) ;
          }
        }
      }
      GGS_stringset  var_cas_accessibleStates = var_cas_initialStateSet ;
      GGS_bool var_cas_progress = GGS_bool (true) ;
      GGS_uint _variant_231856 = var_cas_mapStateList.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (6187)) ;
      GGS_bool _condition_231856 (_variant_231856.isBuilt (), true) ;
      while (_condition_231856.isBuiltAndTrue ()) {
        _condition_231856 = var_cas_progress ;
        if (_condition_231856.isBuiltAndTrue ()) {
          if (_variant_231856.uintValue () == 0) {
            inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (6199)) ;
            _condition_231856 = GGS_bool (false) ;
          }else{
            _variant_231856.decrement_operation (inLexique COMMA_HERE) ;
            var_cas_progress = GGS_bool (false) ;
            {
              GGS_mapStateList::cEnumerator enumerator_231490 (var_cas_mapStateList, true) ;
              const GGS_mapStateList::cElement * operand_231490 = NULL ;
              while (((operand_231490 = enumerator_231490.nextObject ()))) {
                macroValidPointer (operand_231490) ;
                const GGS_bool cond_231823 = var_cas_accessibleStates.reader_hasKey (operand_231490->mStateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6190))) ;
                if (cond_231823.isBuiltAndTrue ()) {
                  {
                    GGS_mapStateTransitionList::cEnumerator enumerator_231590 (operand_231490->mTransitionList, true) ;
                    const GGS_mapStateTransitionList::cElement * operand_231590 = NULL ;
                    while (((operand_231590 = enumerator_231590.nextObject ()))) {
                      macroValidPointer (operand_231590) ;
                      const GGS_bool cond_231782 = (var_cas_accessibleStates.reader_hasKey (operand_231590->mTargetStateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6192)))).operator_not () ;
                      if (cond_231782.isBuiltAndTrue ()) {
                        var_cas_accessibleStates.addAssign_operation (operand_231590->mTargetStateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6193))) ;
                        var_cas_progress = GGS_bool (true) ;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      const GGS_stringset  var_cas_uselessStates = var_cas_mapAutomatonStateMap.reader_allKeys (inLexique COMMA_SOURCE_FILE_AT_LINE (6200)).substract_operation (inLexique, var_cas_accessibleStates COMMA_SOURCE_FILE_AT_LINE (6200)) ;
      const GGS_bool cond_232211 = (var_cas_uselessStates.reader_count ()).operator_strictSup (GGS_uint (0U)) ;
      if (cond_232211.isBuiltAndTrue ()) {
        GGS_string var_cas_s = GGS_string ("") ;
        {
          GGS_stringset::cEnumerator enumerator_232043 (var_cas_uselessStates, true) ;
          if (enumerator_232043 .hasCurrentObject ()) {
            bool _foreach_loop_232043 ;
            do{
              var_cas_s.appendCString ("'") ;
              var_cas_s.dotAssign_operation (enumerator_232043._key (HERE)) ;
              var_cas_s.appendCString ("'") ;
              enumerator_232043.next () ;
              _foreach_loop_232043 = (enumerator_232043 .hasCurrentObject ()) ;
              if (_foreach_loop_232043) {
                var_cas_s.appendCString (", ") ;
              }
            }while (_foreach_loop_232043) ;
          }
        }
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, (GGS_string ("the following map automaton states are useless: ")).operator_concat (var_cas_s) COMMA_SOURCE_FILE_AT_LINE (6207)) ;
      }
      { bool syntaxRepeat_74 = true ;
        while (syntaxRepeat_74) {
          switch (select_semantics_5F_parser_74 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
              GGS_lstring  var_cas_overrideName ;
              inLexique.assignFromAttribute_tokenString (var_cas_overrideName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
              GGS_stringset  var_cas_handledStates = GGS_stringset ::constructor_emptySet () ;
              { bool syntaxRepeat_75 = true ;
                while (syntaxRepeat_75) {
                    GGS_lstring  var_cas_startStateName ;
                    inLexique.assignFromAttribute_tokenString (var_cas_startStateName) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                    GGS_uint  automatic_var_232534_0 ;
                    if (var_cas_mapAutomatonStateMap.isBuilt ()) {
                      var_cas_mapAutomatonStateMap (HERE)->method_searchKey (inLexique, var_cas_startStateName, automatic_var_232534_0 COMMA_SOURCE_FILE_AT_LINE (6218)) ;
                    }
                    const GGS_bool cond_232677 = var_cas_handledStates.reader_hasKey (var_cas_startStateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6219))) ;
                    if (cond_232677.isBuiltAndTrue ()) {
                      var_cas_startStateName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this state is already named") COMMA_SOURCE_FILE_AT_LINE (6221)) ;
                    }
                    var_cas_handledStates.addAssign_operation (var_cas_startStateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6222))) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
                    { bool syntaxRepeat_76 = true ;
                      while (syntaxRepeat_76) {
                          GGS_lstring  var_cas_currentStateName ;
                          inLexique.assignFromAttribute_tokenString (var_cas_currentStateName) ;
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                          GGS_uint  automatic_var_232880_0 ;
                          if (var_cas_mapAutomatonStateMap.isBuilt ()) {
                            var_cas_mapAutomatonStateMap (HERE)->method_searchKey (inLexique, var_cas_currentStateName, automatic_var_232880_0 COMMA_SOURCE_FILE_AT_LINE (6226)) ;
                          }
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
                          GGS_lstring  var_cas_finalStateName ;
                          inLexique.assignFromAttribute_tokenString (var_cas_finalStateName) ;
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                          GGS_uint  automatic_var_233012_0 ;
                          if (var_cas_mapAutomatonStateMap.isBuilt ()) {
                            var_cas_mapAutomatonStateMap (HERE)->method_searchKey (inLexique, var_cas_finalStateName, automatic_var_233012_0 COMMA_SOURCE_FILE_AT_LINE (6229)) ;
                          }
                          GGS_mapAutomatonMessageKind var_cas_transitionMessageKind ;
                          GGS_lstring  var_cas_transitionMessage ;
                          switch (select_semantics_5F_parser_77 (inLexique)) {
                            case 1 : {
                              var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_noMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6233)) ;
                              var_cas_transitionMessage = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (6234)) ;
                              } break ;
                            case 2 : {
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_warning) COMMA_HERE) ;
                              inLexique.assignFromAttribute_tokenString (var_cas_transitionMessage) ;
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                              if (var_cas_transitionMessage.isBuilt ()) {
                                ::routine_check_K_escapeCharacters (inLexique,  var_cas_transitionMessage COMMA_SOURCE_FILE_AT_LINE (6238)) ;
                              }
                              var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_warningMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6239)) ;
                              } break ;
                            case 3 : {
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
                              inLexique.assignFromAttribute_tokenString (var_cas_transitionMessage) ;
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                              if (var_cas_transitionMessage.isBuilt ()) {
                                ::routine_check_K_escapeCharacters (inLexique,  var_cas_transitionMessage COMMA_SOURCE_FILE_AT_LINE (6243)) ;
                              }
                              var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_errorMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6244)) ;
                              } break ;
                            default :
                              break ;
                          }
                        switch (select_semantics_5F_parser_76 (inLexique)) {
                          case 2 : {
                            } break ;
                          default :
                            syntaxRepeat_76 = false ;
                            break ;
                        }
                      }
                    }
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
                  switch (select_semantics_5F_parser_75 (inLexique)) {
                    case 2 : {
                      } break ;
                    default :
                      syntaxRepeat_75 = false ;
                      break ;
                  }
                }
              }
              GGS_stringset  var_cas_missingStates = var_cas_mapAutomatonStateMap.reader_allKeys (inLexique COMMA_SOURCE_FILE_AT_LINE (6251)).substract_operation (inLexique, var_cas_handledStates COMMA_SOURCE_FILE_AT_LINE (6251)) ;
              const GGS_bool cond_234125 = (var_cas_missingStates.reader_count ()).operator_strictSup (GGS_uint (0U)) ;
              if (cond_234125.isBuiltAndTrue ()) {
                GGS_string var_cas_s = GGS_string ("") ;
                {
                  GGS_stringset::cEnumerator enumerator_233997 (var_cas_missingStates, true) ;
                  while (enumerator_233997.hasCurrentObject ()) {
                    var_cas_s.appendCString (" ") ;
                    var_cas_s.dotAssign_operation (enumerator_233997._key (HERE)) ;
                    enumerator_233997.next () ;
                  }
                }
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, (GGS_string ("the following states should be named:")).operator_concat (var_cas_s) COMMA_SOURCE_FILE_AT_LINE (6258)) ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
              { bool syntaxRepeat_78 = true ;
                while (syntaxRepeat_78) {
                    GGS_lstring  var_cas_currentStateName ;
                    inLexique.assignFromAttribute_tokenString (var_cas_currentStateName) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
                    { bool syntaxRepeat_79 = true ;
                      while (syntaxRepeat_79) {
                          GGS_lstring  var_cas_finalStateName ;
                          inLexique.assignFromAttribute_tokenString (var_cas_finalStateName) ;
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                          GGS_mapAutomatonMessageKind var_cas_transitionMessageKind ;
                          GGS_lstring  var_cas_transitionMessage ;
                          switch (select_semantics_5F_parser_80 (inLexique)) {
                            case 1 : {
                              var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_noMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6269)) ;
                              var_cas_transitionMessage = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (6270)) ;
                              } break ;
                            case 2 : {
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_warning) COMMA_HERE) ;
                              inLexique.assignFromAttribute_tokenString (var_cas_transitionMessage) ;
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                              if (var_cas_transitionMessage.isBuilt ()) {
                                ::routine_check_K_escapeCharacters (inLexique,  var_cas_transitionMessage COMMA_SOURCE_FILE_AT_LINE (6274)) ;
                              }
                              var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_warningMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6275)) ;
                              } break ;
                            case 3 : {
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
                              inLexique.assignFromAttribute_tokenString (var_cas_transitionMessage) ;
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                              if (var_cas_transitionMessage.isBuilt ()) {
                                ::routine_check_K_escapeCharacters (inLexique,  var_cas_transitionMessage COMMA_SOURCE_FILE_AT_LINE (6279)) ;
                              }
                              var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_errorMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6280)) ;
                              } break ;
                            default :
                              break ;
                          }
                        switch (select_semantics_5F_parser_79 (inLexique)) {
                          case 2 : {
                            } break ;
                          default :
                            syntaxRepeat_79 = false ;
                            break ;
                        }
                      }
                    }
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
                  switch (select_semantics_5F_parser_78 (inLexique)) {
                    case 2 : {
                      } break ;
                    default :
                      syntaxRepeat_78 = false ;
                      break ;
                  }
                }
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_74 = false ;
              break ;
          }
        }
      }
      GGS_typeEntityToGenerate  var_cas_def = GGS_C_mapToImplement ::constructor_new (inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableAttributs, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_removeMethodList, var_cas_hasInsertOrReplaceMethod, var_cas_mapStateSortedList, var_cas_mapAutomatonActionMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (6290)) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i62_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mapTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mapTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_64 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      const GGS_bool cond_236298 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_mapTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6318)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_mapTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6318))))).operator_not () ;
      if (cond_236298.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedMapType ::constructor_new (inLexique, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (6319)) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_mapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (6320)) ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
      GGS_lstring  var_cas_cppClassName ;
      inLexique.assignFromAttribute_tokenString (var_cas_cppClassName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6331)) ;
      { bool syntaxRepeat_65 = true ;
        while (syntaxRepeat_65) {
          switch (select_semantics_5F_parser_65 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_5F_map_5F_method_ (inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              var_cas_insertMethodList.addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6339)), GGS_bool (true), GGS_string (""), GGS_uint (0U)) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_5F_map_5F_method_ (inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              var_cas_searchMethodList.addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6346)), GGS_bool (true), GGS_string (""), GGS_uint (0U)) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_block) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomMethode) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6353)) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
              GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
              nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6368)) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
              nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              var_cas_tableMethodesBloc.modifier_insertKey (inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin COMMA_SOURCE_FILE_AT_LINE (6381)) ;
              } break ;
            default :
              syntaxRepeat_65 = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6386)) ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap = GGS_mapModifierMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6397)) ;
      const GGS_formalArgumentPassingModeAST var_cas_inPassingMode = GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (6398)) ;
      const GGS_formalArgumentPassingModeAST var_cas_outPassingMode = GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (6399)) ;
      const GGS_AC_galgasType  var_cas_lstringType = GGS_typeGalgas_lstring ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (6400)) ;
      const GGS_AC_galgasType  var_cas_luintType = GGS_typeGalgas_luint ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (6401)) ;
      {
        GGS_insertOrSearchMethodList::cEnumerator enumerator_239230 (var_cas_insertMethodList, true) ;
        const GGS_insertOrSearchMethodList::cElement * operand_239230 = NULL ;
        while (((operand_239230 = enumerator_239230.nextObject ()))) {
          macroValidPointer (operand_239230) ;
          GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_239407 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_239407 = NULL ;
            while (((operand_239407 = enumerator_239407.nextObject ()))) {
              macroValidPointer (operand_239407) ;
              var_cas_methodSignature.addAssign_operation (operand_239407->mAttributType, var_cas_inPassingMode) ;
            }
          }
          var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, operand_239230->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6409)) ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          var_cas_methodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_239809 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_239809 = NULL ;
            while (((operand_239809 = enumerator_239809.nextObject ()))) {
              macroValidPointer (operand_239809) ;
              var_cas_methodSignature.addAssign_operation (operand_239809->mAttributType, var_cas_inPassingMode) ;
            }
          }
          GGS_lstring  var_cas_insertKeyAndGetIndexName = GGS_lstring ::constructor_new (inLexique, (operand_239230->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6417))).operator_concat (GGS_string ("GetIndex")), operand_239230->mMethodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6417)) COMMA_SOURCE_FILE_AT_LINE (6417)) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6418)) ;
        }
      }
      {
        GGS_insertOrSearchMethodList::cEnumerator enumerator_240137 (var_cas_searchMethodList, true) ;
        const GGS_insertOrSearchMethodList::cElement * operand_240137 = NULL ;
        while (((operand_240137 = enumerator_240137.nextObject ()))) {
          macroValidPointer (operand_240137) ;
          GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_240314 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_240314 = NULL ;
            while (((operand_240314 = enumerator_240314.nextObject ()))) {
              macroValidPointer (operand_240314) ;
              var_cas_methodSignature.addAssign_operation (operand_240314->mAttributType, var_cas_outPassingMode) ;
            }
          }
          var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, operand_240137->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6427)) ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          var_cas_methodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_240717 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_240717 = NULL ;
            while (((operand_240717 = enumerator_240717.nextObject ()))) {
              macroValidPointer (operand_240717) ;
              var_cas_methodSignature.addAssign_operation (operand_240717->mAttributType, var_cas_outPassingMode) ;
            }
          }
          GGS_lstring  var_cas_insertKeyAndGetIndexName = GGS_lstring ::constructor_new (inLexique, (operand_240137->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6435))).operator_concat (GGS_string ("GetIndex")), operand_240137->mMethodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6435)) COMMA_SOURCE_FILE_AT_LINE (6435)) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6436)) ;
        }
      }
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasMapType ::constructor_new (inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_EXmapMethodMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6444)), GGS_mapStateList ::constructor_emptyList () COMMA_SOURCE_FILE_AT_LINE (6439)) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_SOURCE_FILE_AT_LINE (6447)) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6448)) ;
      GGS_TypeModel  var_cas_type = GGS_MapModel ::constructor_new (inLexique, var_cas_attributeListModel COMMA_SOURCE_FILE_AT_LINE (6449)) ;
      var_cas_ioModelMap.modifier_insertKey (inLexique, var_cas_mapTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (6450)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6457)) ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapStateList  var_cas_mapStateList = GGS_mapStateList ::constructor_emptyList () ;
      { bool syntaxRepeat_66 = true ;
        while (syntaxRepeat_66) {
          switch (select_semantics_5F_parser_66 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_state) COMMA_HERE) ;
              GGS_lstring  var_cas_stateName ;
              inLexique.assignFromAttribute_tokenString (var_cas_stateName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_mapAutomatonMessageKind var_cas_stateMessageKind ;
              GGS_lstring  var_cas_stateMessage ;
              switch (select_semantics_5F_parser_67 (inLexique)) {
                case 1 : {
                  var_cas_stateMessageKind = GGS_mapAutomatonMessageKind::constructor_noMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6476)) ;
                  var_cas_stateMessage = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (6477)) ;
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_warning) COMMA_HERE) ;
                  inLexique.assignFromAttribute_tokenString (var_cas_stateMessage) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  if (var_cas_stateMessage.isBuilt ()) {
                    ::routine_check_K_escapeCharacters (inLexique,  var_cas_stateMessage COMMA_SOURCE_FILE_AT_LINE (6481)) ;
                  }
                  var_cas_stateMessageKind = GGS_mapAutomatonMessageKind::constructor_warningMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6482)) ;
                  } break ;
                case 3 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
                  inLexique.assignFromAttribute_tokenString (var_cas_stateMessage) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  if (var_cas_stateMessage.isBuilt ()) {
                    ::routine_check_K_escapeCharacters (inLexique,  var_cas_stateMessage COMMA_SOURCE_FILE_AT_LINE (6486)) ;
                  }
                  var_cas_stateMessageKind = GGS_mapAutomatonMessageKind::constructor_errorMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6487)) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
              GGS_mapStateTransitionList  var_cas_transitionList = GGS_mapStateTransitionList ::constructor_emptyList () ;
              { bool syntaxRepeat_68 = true ;
                while (syntaxRepeat_68) {
                  switch (select_semantics_5F_parser_68 (inLexique)) {
                    case 2 : {
                      GGS_lstring  var_cas_actionName ;
                      inLexique.assignFromAttribute_tokenString (var_cas_actionName) ;
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
                      GGS_lstring  var_cas_targetStateName ;
                      inLexique.assignFromAttribute_tokenString (var_cas_targetStateName) ;
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                      GGS_mapAutomatonMessageKind var_cas_transitionMessageKind ;
                      GGS_lstring  var_cas_transitionMessage ;
                      switch (select_semantics_5F_parser_69 (inLexique)) {
                        case 1 : {
                          var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_noMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6499)) ;
                          var_cas_transitionMessage = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (6500)) ;
                          } break ;
                        case 2 : {
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_warning) COMMA_HERE) ;
                          inLexique.assignFromAttribute_tokenString (var_cas_transitionMessage) ;
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                          var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_warningMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6504)) ;
                          } break ;
                        case 3 : {
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
                          inLexique.assignFromAttribute_tokenString (var_cas_transitionMessage) ;
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                          var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_errorMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6508)) ;
                          } break ;
                        default :
                          break ;
                      }
                      var_cas_transitionList.addAssign_operation (var_cas_actionName, var_cas_targetStateName, var_cas_transitionMessageKind, var_cas_transitionMessage) ;
                      } break ;
                    default :
                      syntaxRepeat_68 = false ;
                      break ;
                  }
                }
              }
              var_cas_mapStateList.addAssign_operation (var_cas_stateName, var_cas_stateMessageKind, var_cas_stateMessage, var_cas_transitionList) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_66 = false ;
              break ;
          }
        }
      }
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6526)) ;
      const GGS_formalArgumentPassingModeAST var_cas_inPassingMode = GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (6528)) ;
      const GGS_formalArgumentPassingModeAST var_cas_outPassingMode = GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (6529)) ;
      const GGS_AC_galgasType  var_cas_lstringType = GGS_typeGalgas_lstring ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (6530)) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap = GGS_mapModifierMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6531)) ;
      GGS_EXmapMethodMap  var_cas_mapSearchMethodMap = GGS_EXmapMethodMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6532)) ;
      GGS_bool var_cas_hasInsertOrReplaceMethod = GGS_bool (false) ;
      { bool syntaxRepeat_70 = true ;
        while (syntaxRepeat_70) {
          switch (select_semantics_5F_parser_70 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_or) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_replace) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              var_cas_hasInsertOrReplaceMethod = GGS_bool (true) ;
              GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_244799 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_244799 = NULL ;
                while (((operand_244799 = enumerator_244799.nextObject ()))) {
                  macroValidPointer (operand_244799) ;
                  var_cas_methodSignature.addAssign_operation (operand_244799->mAttributType, var_cas_inPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("insertOrReplace"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (6547)), var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6547)) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_remove) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  automatic_var_245079_0 ;
              nt_map_5F_method_ (inLexique, var_cas_methodName, automatic_var_245079_0) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_245286 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_245286 = NULL ;
                while (((operand_245286 = enumerator_245286.nextObject ()))) {
                  macroValidPointer (operand_245286) ;
                  var_cas_methodSignature.addAssign_operation (operand_245286->mAttributType, var_cas_outPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6559)) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              switch (select_semantics_5F_parser_71 (inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_state) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              switch (select_semantics_5F_parser_72 (inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_245977 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_245977 = NULL ;
                while (((operand_245977 = enumerator_245977.nextObject ()))) {
                  macroValidPointer (operand_245977) ;
                  var_cas_methodSignature.addAssign_operation (operand_245977->mAttributType, var_cas_inPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6584)) ;
              } break ;
            case 5 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              switch (select_semantics_5F_parser_73 (inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_246583 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_246583 = NULL ;
                while (((operand_246583 = enumerator_246583.nextObject ()))) {
                  macroValidPointer (operand_246583) ;
                  var_cas_methodSignature.addAssign_operation (operand_246583->mAttributType, var_cas_outPassingMode) ;
                }
              }
              const GGS_bool cond_246797 = (var_cas_mapStateList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
              if (cond_246797.isBuiltAndTrue ()) {
                var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6605)) ;
              }else if (cond_246797.isBuiltAndFalse ()) {
                var_cas_mapSearchMethodMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6607)) ;
              }
              } break ;
            default :
              syntaxRepeat_70 = false ;
              break ;
          }
        }
      }
      {
        GGS_typeSemanticAttributesMap::cEnumerator enumerator_246964 (var_cas_tableAttributs, true) ;
        const GGS_typeSemanticAttributesMap::cElement * operand_246964 = NULL ;
        while (((operand_246964 = enumerator_246964.nextObject ()))) {
          macroValidPointer (operand_246964) ;
          const GGS_bool cond_247396 = operand_246964->mInfo.mHasSetter ;
          if (cond_247396.isBuiltAndTrue ()) {
            GGS_string var_cas_modifierName = ((GGS_string ("set")).operator_concat (operand_246964->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6613)).reader_stringByCapitalizingFirstCharacter ())).operator_concat (GGS_string ("ForKey")) ;
            GGS_L_EXsignature  var_cas_modifierSignature = GGS_L_EXsignature ::constructor_emptyList () ;
            var_cas_modifierSignature.addAssign_operation (operand_246964->mInfo.mAttributType, var_cas_inPassingMode) ;
            var_cas_modifierSignature.addAssign_operation (GGS_typeGalgas_string ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (6616)), var_cas_inPassingMode) ;
            var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_modifierName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (6617)), var_cas_modifierSignature COMMA_SOURCE_FILE_AT_LINE (6617)) ;
          }
        }
      }
      const GGS_bool cond_247657 = (var_cas_mapStateList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
      if (cond_247657.isBuiltAndTrue ()) {
        var_cas_mapSearchMethodMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("checkAutomatonStates"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (6623)), GGS_L_EXsignature ::constructor_listWithValue (GGS_typeGalgas_location ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (6624)), var_cas_inPassingMode) COMMA_SOURCE_FILE_AT_LINE (6622)) ;
      }
      { bool syntaxRepeat_74 = true ;
        while (syntaxRepeat_74) {
          switch (select_semantics_5F_parser_74 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
              GGS_lstring  var_cas_overrideName ;
              inLexique.assignFromAttribute_tokenString (var_cas_overrideName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
              { bool syntaxRepeat_75 = true ;
                while (syntaxRepeat_75) {
                    GGS_lstring  var_cas_startStateName ;
                    inLexique.assignFromAttribute_tokenString (var_cas_startStateName) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
                    { bool syntaxRepeat_76 = true ;
                      while (syntaxRepeat_76) {
                          GGS_lstring  var_cas_currentStateName ;
                          inLexique.assignFromAttribute_tokenString (var_cas_currentStateName) ;
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
                          GGS_lstring  var_cas_finalStateName ;
                          inLexique.assignFromAttribute_tokenString (var_cas_finalStateName) ;
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                          GGS_mapAutomatonMessageKind var_cas_transitionMessageKind ;
                          GGS_lstring  var_cas_transitionMessage ;
                          switch (select_semantics_5F_parser_77 (inLexique)) {
                            case 1 : {
                              var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_noMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6643)) ;
                              var_cas_transitionMessage = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (6644)) ;
                              } break ;
                            case 2 : {
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_warning) COMMA_HERE) ;
                              inLexique.assignFromAttribute_tokenString (var_cas_transitionMessage) ;
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                              if (var_cas_transitionMessage.isBuilt ()) {
                                ::routine_check_K_escapeCharacters (inLexique,  var_cas_transitionMessage COMMA_SOURCE_FILE_AT_LINE (6648)) ;
                              }
                              var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_warningMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6649)) ;
                              } break ;
                            case 3 : {
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
                              inLexique.assignFromAttribute_tokenString (var_cas_transitionMessage) ;
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                              if (var_cas_transitionMessage.isBuilt ()) {
                                ::routine_check_K_escapeCharacters (inLexique,  var_cas_transitionMessage COMMA_SOURCE_FILE_AT_LINE (6653)) ;
                              }
                              var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_errorMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6654)) ;
                              } break ;
                            default :
                              break ;
                          }
                        switch (select_semantics_5F_parser_76 (inLexique)) {
                          case 2 : {
                            } break ;
                          default :
                            syntaxRepeat_76 = false ;
                            break ;
                        }
                      }
                    }
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
                  switch (select_semantics_5F_parser_75 (inLexique)) {
                    case 2 : {
                      } break ;
                    default :
                      syntaxRepeat_75 = false ;
                      break ;
                  }
                }
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
              { bool syntaxRepeat_78 = true ;
                while (syntaxRepeat_78) {
                    GGS_lstring  var_cas_currentStateName ;
                    inLexique.assignFromAttribute_tokenString (var_cas_currentStateName) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
                    { bool syntaxRepeat_79 = true ;
                      while (syntaxRepeat_79) {
                          GGS_lstring  var_cas_finalStateName ;
                          inLexique.assignFromAttribute_tokenString (var_cas_finalStateName) ;
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                          GGS_mapAutomatonMessageKind var_cas_transitionMessageKind ;
                          GGS_lstring  var_cas_transitionMessage ;
                          switch (select_semantics_5F_parser_80 (inLexique)) {
                            case 1 : {
                              var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_noMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6671)) ;
                              var_cas_transitionMessage = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (6672)) ;
                              } break ;
                            case 2 : {
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_warning) COMMA_HERE) ;
                              inLexique.assignFromAttribute_tokenString (var_cas_transitionMessage) ;
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                              if (var_cas_transitionMessage.isBuilt ()) {
                                ::routine_check_K_escapeCharacters (inLexique,  var_cas_transitionMessage COMMA_SOURCE_FILE_AT_LINE (6676)) ;
                              }
                              var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_warningMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6677)) ;
                              } break ;
                            case 3 : {
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
                              inLexique.assignFromAttribute_tokenString (var_cas_transitionMessage) ;
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                              if (var_cas_transitionMessage.isBuilt ()) {
                                ::routine_check_K_escapeCharacters (inLexique,  var_cas_transitionMessage COMMA_SOURCE_FILE_AT_LINE (6681)) ;
                              }
                              var_cas_transitionMessageKind = GGS_mapAutomatonMessageKind::constructor_errorMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (6682)) ;
                              } break ;
                            default :
                              break ;
                          }
                        switch (select_semantics_5F_parser_79 (inLexique)) {
                          case 2 : {
                            } break ;
                          default :
                            syntaxRepeat_79 = false ;
                            break ;
                        }
                      }
                    }
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
                  switch (select_semantics_5F_parser_78 (inLexique)) {
                    case 2 : {
                      } break ;
                    default :
                      syntaxRepeat_78 = false ;
                      break ;
                  }
                }
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_74 = false ;
              break ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasMapType ::constructor_new (inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapSearchMethodMap, var_cas_mapStateList COMMA_SOURCE_FILE_AT_LINE (6692)) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_SOURCE_FILE_AT_LINE (6700)) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6701)) ;
      GGS_TypeModel  var_cas_type = GGS_MapModel ::constructor_new (inLexique, var_cas_attributeListModel COMMA_SOURCE_FILE_AT_LINE (6702)) ;
      var_cas_ioModelMap.modifier_insertKey (inLexique, var_cas_mapTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (6703)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i62_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_map) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_64 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      { bool syntaxRepeat_65 = true ;
        while (syntaxRepeat_65) {
          switch (select_semantics_5F_parser_65 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
              nt_ex_5F_map_5F_method_parse (inLexique) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
              nt_ex_5F_map_5F_method_parse (inLexique) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_block) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
              nt_formal_5F_arguments_5F_list_parse (inLexique) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
              nt_formal_5F_arguments_5F_list_parse (inLexique) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_65 = false ;
              break ;
          }
        }
      }
      nt_attributes_5F_definition_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      nt_attributes_5F_definition_5F_list_parse (inLexique) ;
      { bool syntaxRepeat_66 = true ;
        while (syntaxRepeat_66) {
          switch (select_semantics_5F_parser_66 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_state) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              switch (select_semantics_5F_parser_67 (inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_warning) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  } break ;
                case 3 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
              { bool syntaxRepeat_68 = true ;
                while (syntaxRepeat_68) {
                  switch (select_semantics_5F_parser_68 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                      switch (select_semantics_5F_parser_69 (inLexique)) {
                        case 1 : {
                          } break ;
                        case 2 : {
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_warning) COMMA_HERE) ;
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                          } break ;
                        case 3 : {
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                          } break ;
                        default :
                          break ;
                      }
                      } break ;
                    default :
                      syntaxRepeat_68 = false ;
                      break ;
                  }
                }
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_66 = false ;
              break ;
          }
        }
      }
      { bool syntaxRepeat_70 = true ;
        while (syntaxRepeat_70) {
          switch (select_semantics_5F_parser_70 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_or) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_replace) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_remove) COMMA_HERE) ;
              nt_map_5F_method_parse (inLexique) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              switch (select_semantics_5F_parser_71 (inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_state) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              switch (select_semantics_5F_parser_72 (inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 5 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              switch (select_semantics_5F_parser_73 (inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_70 = false ;
              break ;
          }
        }
      }
      { bool syntaxRepeat_74 = true ;
        while (syntaxRepeat_74) {
          switch (select_semantics_5F_parser_74 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
              { bool syntaxRepeat_75 = true ;
                while (syntaxRepeat_75) {
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
                    { bool syntaxRepeat_76 = true ;
                      while (syntaxRepeat_76) {
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                          switch (select_semantics_5F_parser_77 (inLexique)) {
                            case 1 : {
                              } break ;
                            case 2 : {
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_warning) COMMA_HERE) ;
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                              } break ;
                            case 3 : {
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                              } break ;
                            default :
                              break ;
                          }
                        switch (select_semantics_5F_parser_76 (inLexique)) {
                          case 2 : {
                            } break ;
                          default :
                            syntaxRepeat_76 = false ;
                            break ;
                        }
                      }
                    }
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
                  switch (select_semantics_5F_parser_75 (inLexique)) {
                    case 2 : {
                      } break ;
                    default :
                      syntaxRepeat_75 = false ;
                      break ;
                  }
                }
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
              { bool syntaxRepeat_78 = true ;
                while (syntaxRepeat_78) {
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
                    { bool syntaxRepeat_79 = true ;
                      while (syntaxRepeat_79) {
                          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                          switch (select_semantics_5F_parser_80 (inLexique)) {
                            case 1 : {
                              } break ;
                            case 2 : {
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_warning) COMMA_HERE) ;
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                              } break ;
                            case 3 : {
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
                              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                              } break ;
                            default :
                              break ;
                          }
                        switch (select_semantics_5F_parser_79 (inLexique)) {
                          case 2 : {
                            } break ;
                          default :
                            syntaxRepeat_79 = false ;
                            break ;
                        }
                      }
                    }
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
                  switch (select_semantics_5F_parser_78 (inLexique)) {
                    case 2 : {
                      } break ;
                    default :
                      syntaxRepeat_78 = false ;
                      break ;
                  }
                }
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_74 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'ex_map_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_ex_5F_map_5F_method_i63_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  &var_cas_nomMethode,
                                GGS_lstring  &var_cas_outMessage) {
  inLexique.assignFromAttribute_tokenString (var_cas_nomMethode) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outMessage) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_ex_5F_map_5F_method_i63_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'map_method'               *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_map_5F_method_i64_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  &var_cas_methodName,
                                GGS_lstring  &var_cas_outMessage) {
  inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outMessage) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_map_5F_method_i64_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_beginning_by_abstract'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i65_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_abstractMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (6747)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6752)) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  const GGS_lstring  var_cas_kKey = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6764))).operator_concat (GGS_string (":"))).operator_concat (var_cas_methodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6764))), var_cas_methodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6764)) COMMA_SOURCE_FILE_AT_LINE (6764)) ;
  var_cas_ioSemanticContext.mCategoryMethodMap.modifier_insertKey (inLexique, var_cas_kKey, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6765)) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_className, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (6768)) ;
  }
  GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6769)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (6769)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6770)) ;
  GGS_string var_cas_baseClassName ;
  GGS_typeSuperClassesMap  var_cas_ancestorClassesMap = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6773)) ;
  {
    GGS_typeSuperClassesMap::cEnumerator enumerator_253132 (var_cas_ancestorClassesMap, true) ;
    const GGS_typeSuperClassesMap::cElement * operand_253132 = NULL ;
    while (((operand_253132 = enumerator_253132.nextObject ()))) {
      macroValidPointer (operand_253132) ;
      GGS_string var_cas_keyClassMethod = ((operand_253132->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6776))).operator_concat (GGS_string (":"))).operator_concat (var_cas_methodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6776))) ;
      const GGS_bool cond_253429 = var_cas_ioSemanticContext.reader_mCategoryMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6777)).reader_hasKey (var_cas_keyClassMethod) ;
      if (cond_253429.isBuiltAndTrue ()) {
        var_cas_methodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this method is already defined for super class @")).operator_concat (operand_253132->mKey)).operator_concat (GGS_string (": you should use the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (6780)) ;
      }
    }
  }
  var_cas_baseClassName = var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6782)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_listeEntitesAengendrer.addAssign_operation (GGS_categoryMethodToImplement ::constructor_new (inLexique, var_cas_categoryMethodKind, var_cas_baseClassName, var_cas_className, var_cas_methodName, var_cas_listeTypeEtNomsArguments, var_cas_instructionList, var_cas_methodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6793)) COMMA_SOURCE_FILE_AT_LINE (6786))) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i65_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_abstractMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (6804)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6810)) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_lstring  var_cas_key = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6821))).operator_concat (GGS_string (":"))).operator_concat (var_cas_methodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6821))), var_cas_methodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6821)) COMMA_SOURCE_FILE_AT_LINE (6821)) ;
  const GGS_bool cond_255064 = (var_cas_ioSemanticContext.reader_mCategoryMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6822)).reader_hasKey (var_cas_key.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6822)))).operator_not () ;
  if (cond_255064.isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mCategoryMethodMap.modifier_insertKey (inLexique, var_cas_key, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6823)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i65_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i66_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind ;
  switch (select_semantics_5F_parser_81 (inLexique)) {
    case 1 : {
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_baseMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (6845)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (6848)) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6854)) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  const GGS_lstring  var_cas_kKey = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6866))).operator_concat (GGS_string (":"))).operator_concat (var_cas_methodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6866))), var_cas_methodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6866)) COMMA_SOURCE_FILE_AT_LINE (6866)) ;
  var_cas_ioSemanticContext.mCategoryMethodMap.modifier_insertKey (inLexique, var_cas_kKey, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6867)) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_className, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (6870)) ;
  }
  GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6871)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (6871)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6872)) ;
  GGS_string var_cas_baseClassName ;
  GGS_typeSuperClassesMap  var_cas_ancestorClassesMap = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6875)) ;
  const GGS_bool cond_258568 = (var_cas_categoryMethodKind).operator_isEqual (GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (6876))) ;
  if (cond_258568.isBuiltAndTrue ()) {
    var_cas_baseClassName = GGS_string ("") ;
    GGS_bool var_cas_found = GGS_bool (false) ;
    {
      GGS_typeSuperClassesMap::cEnumerator enumerator_257610 (var_cas_ancestorClassesMap, true) ;
      const GGS_typeSuperClassesMap::cElement * operand_257610 = NULL ;
      while (((operand_257610 = enumerator_257610.nextObject ()))
          && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
        macroValidPointer (operand_257610) ;
        GGS_string var_cas_keyClassMethod = ((operand_257610->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6880))).operator_concat (GGS_string (":"))).operator_concat (var_cas_methodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6880))) ;
        var_cas_baseClassName = operand_257610->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6881)) ;
        var_cas_found = var_cas_ioSemanticContext.reader_mCategoryMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6882)).reader_hasKey (var_cas_keyClassMethod) ;
        const GGS_bool cond_258348 = var_cas_found ;
        if (cond_258348.isBuiltAndTrue ()) {
          GGS_categoryMethodKind var_cas_localCategoryMethodKind ;
          GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
          const GGS_EXcategoryMethodMap  temp_258017 = var_cas_ioSemanticContext.reader_mCategoryMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6886)) ;
          if (temp_258017.isBuilt ()) {
            temp_258017 (HERE)->method_searchKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_keyClassMethod, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (6886)), var_cas_localCategoryMethodKind, var_cas_listeDeTypesPrecedenteDeclaration COMMA_SOURCE_FILE_AT_LINE (6886)) ;
          }
          ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (6887)) ;
          var_cas_found = (var_cas_localCategoryMethodKind).operator_isNotEqual (GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (6892))) ;
        }
      }
    }
    const GGS_bool cond_258556 = (var_cas_found).operator_not () ;
    if (cond_258556.isBuiltAndTrue ()) {
      var_cas_methodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this overriden method is not defined in any super class of @")).operator_concat (var_cas_className)).operator_concat (GGS_string (": you should remove the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (6898)) ;
    }
  }else if (cond_258568.isBuiltAndFalse ()) {
    {
      GGS_typeSuperClassesMap::cEnumerator enumerator_258645 (var_cas_ancestorClassesMap, true) ;
      const GGS_typeSuperClassesMap::cElement * operand_258645 = NULL ;
      while (((operand_258645 = enumerator_258645.nextObject ()))) {
        macroValidPointer (operand_258645) ;
        GGS_string var_cas_keyClassMethod = ((operand_258645->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6901))).operator_concat (GGS_string (":"))).operator_concat (var_cas_methodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6901))) ;
        const GGS_bool cond_258951 = var_cas_ioSemanticContext.reader_mCategoryMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6902)).reader_hasKey (var_cas_keyClassMethod) ;
        if (cond_258951.isBuiltAndTrue ()) {
          var_cas_methodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this method is already defined for super class @")).operator_concat (operand_258645->mKey)).operator_concat (GGS_string (": you should use the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (6905)) ;
        }
      }
    }
    var_cas_baseClassName = var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6907)) ;
  }
  {
    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_259104 (var_cas_classType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (6910)), true) ;
    const GGS_typeListeAttributsSemantiques::cElement * operand_259104 = NULL ;
    while (((operand_259104 = enumerator_259104.nextObject ()))) {
      macroValidPointer (operand_259104) ;
      GGS_typeCplusPlusName  var_cas_cppName = GGS_typeOperandName ::constructor_new (inLexique, var_cas_methodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6912)), operand_259104->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6913)), GGS_bool (false), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (6911)) ;
      var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, operand_259104->mAttributeName, operand_259104->mAttributType, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (6917)) ;
    }
  }
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("self"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (6920)), var_cas_classType, GGS_typeCppThisInCategoryName ::constructor_new (inLexique, var_cas_methodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6920)) COMMA_SOURCE_FILE_AT_LINE (6920)) COMMA_SOURCE_FILE_AT_LINE (6920)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_instructionList, var_cas_ioSemanticContext) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (GGS_categoryMethodToImplement ::constructor_new (inLexique, var_cas_categoryMethodKind, var_cas_baseClassName, var_cas_className, var_cas_methodName, var_cas_listeTypeEtNomsArguments, var_cas_instructionList, var_cas_methodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6942)) COMMA_SOURCE_FILE_AT_LINE (6935))) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i66_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind ;
  switch (select_semantics_5F_parser_81 (inLexique)) {
    case 1 : {
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_baseMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (6955)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (6958)) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6965)) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_lstring  var_cas_key = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6976))).operator_concat (GGS_string (":"))).operator_concat (var_cas_methodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6976))), var_cas_methodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6976)) COMMA_SOURCE_FILE_AT_LINE (6976)) ;
  const GGS_bool cond_261622 = (var_cas_ioSemanticContext.reader_mCategoryMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6977)).reader_hasKey (var_cas_key.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6977)))).operator_not () ;
  if (cond_261622.isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mCategoryMethodMap.modifier_insertKey (inLexique, var_cas_key, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6978)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i66_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  switch (select_semantics_5F_parser_81 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_beginning_by_abstract'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i67_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_abstractMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (7003)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_readerName ;
  inLexique.assignFromAttribute_tokenString (var_cas_readerName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7008)) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_returnedTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_returnedTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_returnedVariableName ;
  inLexique.assignFromAttribute_tokenString (var_cas_returnedVariableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_returnedCppVarName = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_returnedVariableName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7024)), var_cas_returnedVariableName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7024)) COMMA_SOURCE_FILE_AT_LINE (7024)) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_returnedTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (7026)) ;
  }
  GGS_AC_galgasType  var_cas_returnedType = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7027)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (7027)) ;
  const GGS_lstring  var_cas_kKey = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7029))).operator_concat (GGS_string (":"))).operator_concat (var_cas_readerName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7029))), var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7029)) COMMA_SOURCE_FILE_AT_LINE (7029)) ;
  var_cas_ioSemanticContext.mCategoryReaderMap.modifier_insertKey (inLexique, var_cas_kKey, var_cas_categoryMethodKind, var_cas_listeDeTypes, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (7030)) ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_className, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (7032)) ;
  }
  GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7033)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (7033)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7034)) ;
  GGS_string var_cas_baseClassName ;
  GGS_typeSuperClassesMap  var_cas_ancestorClassesMap = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7037)) ;
  {
    GGS_typeSuperClassesMap::cEnumerator enumerator_264569 (var_cas_ancestorClassesMap, true) ;
    const GGS_typeSuperClassesMap::cElement * operand_264569 = NULL ;
    while (((operand_264569 = enumerator_264569.nextObject ()))) {
      macroValidPointer (operand_264569) ;
      GGS_string var_cas_keyClassMethod = ((operand_264569->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7040))).operator_concat (GGS_string (":"))).operator_concat (var_cas_readerName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7040))) ;
      const GGS_bool cond_264866 = var_cas_ioSemanticContext.reader_mCategoryReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7041)).reader_hasKey (var_cas_keyClassMethod) ;
      if (cond_264866.isBuiltAndTrue ()) {
        var_cas_readerName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this reader is already defined for super class @")).operator_concat (operand_264569->mKey)).operator_concat (GGS_string (": you should use the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (7044)) ;
      }
    }
  }
  var_cas_baseClassName = var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7046)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_listeEntitesAengendrer.addAssign_operation (GGS_categoryReaderToImplement ::constructor_new (inLexique, var_cas_categoryMethodKind, var_cas_baseClassName, var_cas_className, var_cas_readerName, var_cas_listeTypeEtNomsArguments, var_cas_instructionList, var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7057)), var_cas_returnedType, var_cas_returnedCppVarName COMMA_SOURCE_FILE_AT_LINE (7050))) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i67_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_abstractMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (7070)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_readerName ;
  inLexique.assignFromAttribute_tokenString (var_cas_readerName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7076)) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_returnedTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_returnedTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_returnedTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (7092)) ;
  }
  GGS_AC_galgasType  var_cas_returnedType = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7093)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (7093)) ;
  GGS_lstring  var_cas_key = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7095))).operator_concat (GGS_string (":"))).operator_concat (var_cas_readerName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7095))), var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7095)) COMMA_SOURCE_FILE_AT_LINE (7095)) ;
  const GGS_bool cond_266985 = (var_cas_ioSemanticContext.reader_mCategoryReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7096)).reader_hasKey (var_cas_key.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7096)))).operator_not () ;
  if (cond_266985.isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mCategoryReaderMap.modifier_insertKey (inLexique, var_cas_key, var_cas_categoryMethodKind, var_cas_listeDeTypes, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (7097)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i67_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_input_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i68_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind ;
  switch (select_semantics_5F_parser_82 (inLexique)) {
    case 1 : {
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_baseMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (7119)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (7122)) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_readerName ;
  inLexique.assignFromAttribute_tokenString (var_cas_readerName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7128)) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_returnedTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_returnedTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_returnedTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (7144)) ;
  }
  GGS_AC_galgasType  var_cas_returnedType = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7145)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (7145)) ;
  GGS_lstring  var_cas_returnedVariableName ;
  inLexique.assignFromAttribute_tokenString (var_cas_returnedVariableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_returnedCppVarName = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_returnedVariableName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7148)), var_cas_returnedVariableName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7148)) COMMA_SOURCE_FILE_AT_LINE (7148)) ;
  var_cas_methodLocalVariablesMap.modifier_insertOutArgument (inLexique, var_cas_returnedVariableName, var_cas_returnedType, var_cas_returnedCppVarName COMMA_SOURCE_FILE_AT_LINE (7149)) ;
  const GGS_lstring  var_cas_kKey = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7151))).operator_concat (GGS_string (":"))).operator_concat (var_cas_readerName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7151))), var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7151)) COMMA_SOURCE_FILE_AT_LINE (7151)) ;
  var_cas_ioSemanticContext.mCategoryReaderMap.modifier_insertKey (inLexique, var_cas_kKey, var_cas_categoryMethodKind, var_cas_listeDeTypes, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (7152)) ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_className, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (7154)) ;
  }
  GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7155)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (7155)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7156)) ;
  GGS_string var_cas_baseClassName ;
  GGS_typeSuperClassesMap  var_cas_ancestorClassesMap = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7159)) ;
  const GGS_bool cond_271573 = (var_cas_categoryMethodKind).operator_isEqual (GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (7160))) ;
  if (cond_271573.isBuiltAndTrue ()) {
    var_cas_baseClassName = GGS_string ("") ;
    GGS_bool var_cas_found = GGS_bool (false) ;
    {
      GGS_typeSuperClassesMap::cEnumerator enumerator_270272 (var_cas_ancestorClassesMap, true) ;
      const GGS_typeSuperClassesMap::cElement * operand_270272 = NULL ;
      while (((operand_270272 = enumerator_270272.nextObject ()))
          && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
        macroValidPointer (operand_270272) ;
        GGS_string var_cas_keyClassMethod = ((operand_270272->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7164))).operator_concat (GGS_string (":"))).operator_concat (var_cas_readerName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7164))) ;
        var_cas_baseClassName = operand_270272->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7165)) ;
        var_cas_found = var_cas_ioSemanticContext.reader_mCategoryReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7166)).reader_hasKey (var_cas_keyClassMethod) ;
        const GGS_bool cond_271353 = var_cas_found ;
        if (cond_271353.isBuiltAndTrue ()) {
          GGS_categoryMethodKind var_cas_localCategoryMethodKind ;
          GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
          GGS_AC_galgasType  var_cas_returnedTypePreviousDeclaration ;
          const GGS_EXcategoryReaderMap  temp_270736 = var_cas_ioSemanticContext.reader_mCategoryReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7171)) ;
          if (temp_270736.isBuilt ()) {
            temp_270736 (HERE)->method_searchKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_keyClassMethod, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (7172)), var_cas_localCategoryMethodKind, var_cas_listeDeTypesPrecedenteDeclaration, var_cas_returnedTypePreviousDeclaration COMMA_SOURCE_FILE_AT_LINE (7171)) ;
          }
          ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7180)) COMMA_SOURCE_FILE_AT_LINE (7177)) ;
          ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_returnedType,  var_cas_returnedTypePreviousDeclaration,  var_cas_returnedVariableName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7185)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (7182)) ;
          var_cas_found = (var_cas_localCategoryMethodKind).operator_isNotEqual (GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (7188))) ;
        }
      }
    }
    const GGS_bool cond_271561 = (var_cas_found).operator_not () ;
    if (cond_271561.isBuiltAndTrue ()) {
      var_cas_readerName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this overriden reader is not defined in any super class of @")).operator_concat (var_cas_className)).operator_concat (GGS_string (": you should remove the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (7194)) ;
    }
  }else if (cond_271573.isBuiltAndFalse ()) {
    {
      GGS_typeSuperClassesMap::cEnumerator enumerator_271650 (var_cas_ancestorClassesMap, true) ;
      const GGS_typeSuperClassesMap::cElement * operand_271650 = NULL ;
      while (((operand_271650 = enumerator_271650.nextObject ()))) {
        macroValidPointer (operand_271650) ;
        GGS_string var_cas_keyClassMethod = ((operand_271650->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7197))).operator_concat (GGS_string (":"))).operator_concat (var_cas_readerName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7197))) ;
        const GGS_bool cond_271956 = var_cas_ioSemanticContext.reader_mCategoryReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7198)).reader_hasKey (var_cas_keyClassMethod) ;
        if (cond_271956.isBuiltAndTrue ()) {
          var_cas_readerName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this reader is already defined for super class @")).operator_concat (operand_271650->mKey)).operator_concat (GGS_string (": you should use the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (7201)) ;
        }
      }
    }
    var_cas_baseClassName = var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7203)) ;
  }
  {
    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_272109 (var_cas_classType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (7206)), true) ;
    const GGS_typeListeAttributsSemantiques::cElement * operand_272109 = NULL ;
    while (((operand_272109 = enumerator_272109.nextObject ()))) {
      macroValidPointer (operand_272109) ;
      GGS_typeCplusPlusName  var_cas_cppName = GGS_typeOperandName ::constructor_new (inLexique, var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7208)), operand_272109->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7209)), GGS_bool (false), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (7207)) ;
      var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, operand_272109->mAttributeName, operand_272109->mAttributType, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (7213)) ;
    }
  }
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("self"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (7216)), var_cas_classType, GGS_typeCppThisInCategoryName ::constructor_new (inLexique, var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7216)) COMMA_SOURCE_FILE_AT_LINE (7216)) COMMA_SOURCE_FILE_AT_LINE (7216)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_instructionList, var_cas_ioSemanticContext) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (GGS_categoryReaderToImplement ::constructor_new (inLexique, var_cas_categoryMethodKind, var_cas_baseClassName, var_cas_className, var_cas_readerName, var_cas_listeTypeEtNomsArguments, var_cas_instructionList, var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7238)), var_cas_returnedType, var_cas_returnedCppVarName COMMA_SOURCE_FILE_AT_LINE (7231))) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i68_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind ;
  switch (select_semantics_5F_parser_82 (inLexique)) {
    case 1 : {
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_baseMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (7253)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (7256)) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_readerName ;
  inLexique.assignFromAttribute_tokenString (var_cas_readerName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7263)) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_returnedTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_returnedTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_returnedTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (7279)) ;
  }
  GGS_AC_galgasType  var_cas_returnedType = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7280)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (7280)) ;
  GGS_lstring  var_cas_key = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7282))).operator_concat (GGS_string (":"))).operator_concat (var_cas_readerName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7282))), var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7282)) COMMA_SOURCE_FILE_AT_LINE (7282)) ;
  const GGS_bool cond_275110 = (var_cas_ioSemanticContext.reader_mCategoryReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7283)).reader_hasKey (var_cas_key.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7283)))).operator_not () ;
  if (cond_275110.isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mCategoryReaderMap.modifier_insertKey (inLexique, var_cas_key, var_cas_categoryMethodKind, var_cas_listeDeTypes, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (7284)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i68_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  switch (select_semantics_5F_parser_82 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_input_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_beginning_by_abstract'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i69_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_abstractMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (7309)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_templateName ;
  inLexique.assignFromAttribute_tokenString (var_cas_templateName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7314)) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_lstring  var_cas_kKey = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7327))).operator_concat (GGS_string (":"))).operator_concat (var_cas_templateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7327))), var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7327)) COMMA_SOURCE_FILE_AT_LINE (7327)) ;
  var_cas_ioSemanticContext.mCategoryTemplateMap.modifier_insertKey (inLexique, var_cas_kKey, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (7328)) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_className, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (7331)) ;
  }
  GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7332)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (7332)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7333)) ;
  GGS_string var_cas_baseClassName ;
  GGS_typeSuperClassesMap  var_cas_ancestorClassesMap = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7336)) ;
  {
    GGS_typeSuperClassesMap::cEnumerator enumerator_277566 (var_cas_ancestorClassesMap, true) ;
    const GGS_typeSuperClassesMap::cElement * operand_277566 = NULL ;
    while (((operand_277566 = enumerator_277566.nextObject ()))) {
      macroValidPointer (operand_277566) ;
      GGS_string var_cas_keyClassMethod = ((operand_277566->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7339))).operator_concat (GGS_string (":"))).operator_concat (var_cas_templateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7339))) ;
      const GGS_bool cond_277871 = var_cas_ioSemanticContext.reader_mCategoryTemplateMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7340)).reader_hasKey (var_cas_keyClassMethod) ;
      if (cond_277871.isBuiltAndTrue ()) {
        var_cas_templateName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this template is already defined for super class @")).operator_concat (operand_277566->mKey)).operator_concat (GGS_string (": you should use the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (7343)) ;
      }
    }
  }
  var_cas_baseClassName = var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7345)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (GGS_categoryTemplateToImplement ::constructor_new (inLexique, var_cas_categoryMethodKind, var_cas_baseClassName, var_cas_className, var_cas_templateName, var_cas_listeTypeEtNomsArguments, GGS_templateInstructionList ::constructor_emptyList (), var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7355)), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (7348))) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i69_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_abstractMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (7367)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_templateName ;
  inLexique.assignFromAttribute_tokenString (var_cas_templateName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7373)) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_lstring  var_cas_key = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7385))).operator_concat (GGS_string (":"))).operator_concat (var_cas_templateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7385))), var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7385)) COMMA_SOURCE_FILE_AT_LINE (7385)) ;
  const GGS_bool cond_279576 = (var_cas_ioSemanticContext.reader_mCategoryTemplateMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7386)).reader_hasKey (var_cas_key.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7386)))).operator_not () ;
  if (cond_279576.isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mCategoryTemplateMap.modifier_insertKey (inLexique, var_cas_key, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (7387)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i69_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_input_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i70_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind ;
  switch (select_semantics_5F_parser_83 (inLexique)) {
    case 1 : {
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_baseMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (7409)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (7412)) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_templateName ;
  inLexique.assignFromAttribute_tokenString (var_cas_templateName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  var_cas_templateName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("obsolete construct") COMMA_SOURCE_FILE_AT_LINE (7417)) ;
  GGS_typeVariablesMap  var_cas_variableMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7419)) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_variableMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_templateVariableMap  var_cas_categoryTemplateVariableMap = GGS_templateVariableMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7431)) ;
  const GGS_lstring  var_cas_kKey = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7433))).operator_concat (GGS_string (":"))).operator_concat (var_cas_templateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7433))), var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7433)) COMMA_SOURCE_FILE_AT_LINE (7433)) ;
  var_cas_ioSemanticContext.mCategoryTemplateMap.modifier_insertKey (inLexique, var_cas_kKey, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (7434)) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_className, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (7437)) ;
  }
  GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7438)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (7438)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7439)) ;
  GGS_string var_cas_baseClassName ;
  GGS_typeSuperClassesMap  var_cas_ancestorClassesMap = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7442)) ;
  const GGS_bool cond_283318 = (var_cas_categoryMethodKind).operator_isEqual (GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (7443))) ;
  if (cond_283318.isBuiltAndTrue ()) {
    var_cas_baseClassName = GGS_string ("") ;
    GGS_bool var_cas_found = GGS_bool (false) ;
    {
      GGS_typeSuperClassesMap::cEnumerator enumerator_282289 (var_cas_ancestorClassesMap, true) ;
      const GGS_typeSuperClassesMap::cElement * operand_282289 = NULL ;
      while (((operand_282289 = enumerator_282289.nextObject ()))
          && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
        macroValidPointer (operand_282289) ;
        GGS_string var_cas_keyClassMethod = ((operand_282289->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7447))).operator_concat (GGS_string (":"))).operator_concat (var_cas_templateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7447))) ;
        var_cas_baseClassName = operand_282289->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7448)) ;
        var_cas_found = var_cas_ioSemanticContext.reader_mCategoryTemplateMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7449)).reader_hasKey (var_cas_keyClassMethod) ;
        const GGS_bool cond_283094 = var_cas_found ;
        if (cond_283094.isBuiltAndTrue ()) {
          GGS_categoryMethodKind var_cas_localCategoryMethodKind ;
          GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
          const GGS_EXcategoryTemplateMap  temp_282702 = var_cas_ioSemanticContext.reader_mCategoryTemplateMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7453)) ;
          if (temp_282702.isBuilt ()) {
            temp_282702 (HERE)->method_searchKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_keyClassMethod, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (7454)), var_cas_localCategoryMethodKind, var_cas_listeDeTypesPrecedenteDeclaration COMMA_SOURCE_FILE_AT_LINE (7453)) ;
          }
          ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7461)) COMMA_SOURCE_FILE_AT_LINE (7458)) ;
          var_cas_found = (var_cas_localCategoryMethodKind).operator_isNotEqual (GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (7463))) ;
        }
      }
    }
    const GGS_bool cond_283306 = (var_cas_found).operator_not () ;
    if (cond_283306.isBuiltAndTrue ()) {
      var_cas_templateName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this overriden template is not defined in any super class of @")).operator_concat (var_cas_className)).operator_concat (GGS_string (": you should remove the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (7469)) ;
    }
  }else if (cond_283318.isBuiltAndFalse ()) {
    {
      GGS_typeSuperClassesMap::cEnumerator enumerator_283395 (var_cas_ancestorClassesMap, true) ;
      const GGS_typeSuperClassesMap::cElement * operand_283395 = NULL ;
      while (((operand_283395 = enumerator_283395.nextObject ()))) {
        macroValidPointer (operand_283395) ;
        GGS_string var_cas_keyClassMethod = ((operand_283395->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7472))).operator_concat (GGS_string (":"))).operator_concat (var_cas_templateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7472))) ;
        const GGS_bool cond_283709 = var_cas_ioSemanticContext.reader_mCategoryTemplateMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7473)).reader_hasKey (var_cas_keyClassMethod) ;
        if (cond_283709.isBuiltAndTrue ()) {
          var_cas_templateName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this template is already defined for super class @")).operator_concat (operand_283395->mKey)).operator_concat (GGS_string (": you should use the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (7476)) ;
        }
      }
    }
    var_cas_baseClassName = var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7478)) ;
  }
  {
    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_283862 (var_cas_classType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (7481)), true) ;
    const GGS_typeListeAttributsSemantiques::cElement * operand_283862 = NULL ;
    while (((operand_283862 = enumerator_283862.nextObject ()))) {
      macroValidPointer (operand_283862) ;
      GGS_typeCplusPlusName  var_cas_cppName = GGS_typeOperandName ::constructor_new (inLexique, var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7483)), operand_283862->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7484)), GGS_bool (false), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (7482)) ;
      var_cas_categoryTemplateVariableMap.modifier_insertKey (inLexique, operand_283862->mAttributeName, operand_283862->mAttributType, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (7488)) ;
    }
  }
  var_cas_categoryTemplateVariableMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("self"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (7491)), var_cas_classType, GGS_typeCppThisInCategoryName ::constructor_new (inLexique, var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7491)) COMMA_SOURCE_FILE_AT_LINE (7491)) COMMA_SOURCE_FILE_AT_LINE (7491)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_string var_cas_templateString = GGS_string ("") ;
  { bool syntaxRepeat_84 = true ;
    while (syntaxRepeat_84) {
        GGS_lstring  var_cas_s ;
        inLexique.assignFromAttribute_tokenString (var_cas_s) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
        var_cas_templateString.dotAssign_operation (var_cas_s.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7497))) ;
      switch (select_semantics_5F_parser_84 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_84 = false ;
          break ;
      }
    }
  }
  GGS_templateInstructionList  var_cas_templateInstructionList ;
  GGS_bool var_cas_usesColumnMarker ;
  C_Grammar_galgasTemplateGrammar::_performSourceStringParsing_ (inLexique,
                                  NULL,
                                  var_cas_templateString,
                                  var_cas_categoryTemplateVariableMap,
                                  var_cas_ioSemanticContext,
                                  var_cas_ioComponentSemanticsEntitiesMap,
                                  var_cas_inOptionsComponentsMapForUse,
                                  var_cas_templateInstructionList,
                                  var_cas_usesColumnMarker
                                  COMMA_SOURCE_FILE_AT_LINE (7502)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (GGS_categoryTemplateToImplement ::constructor_new (inLexique, var_cas_categoryMethodKind, var_cas_baseClassName, var_cas_className, var_cas_templateName, var_cas_listeTypeEtNomsArguments, var_cas_templateInstructionList, var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7520)), var_cas_usesColumnMarker COMMA_SOURCE_FILE_AT_LINE (7513))) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i70_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind ;
  switch (select_semantics_5F_parser_83 (inLexique)) {
    case 1 : {
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_baseMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (7534)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (7537)) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_templateName ;
  inLexique.assignFromAttribute_tokenString (var_cas_templateName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7544)) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_lstring  var_cas_key = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7556))).operator_concat (GGS_string (":"))).operator_concat (var_cas_templateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7556))), var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7556)) COMMA_SOURCE_FILE_AT_LINE (7556)) ;
  const GGS_bool cond_286676 = (var_cas_ioSemanticContext.reader_mCategoryTemplateMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7557)).reader_hasKey (var_cas_key.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7557)))).operator_not () ;
  if (cond_286676.isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mCategoryTemplateMap.modifier_insertKey (inLexique, var_cas_key, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (7558)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  { bool syntaxRepeat_84 = true ;
    while (syntaxRepeat_84) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
      switch (select_semantics_5F_parser_84 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_84 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i70_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  switch (select_semantics_5F_parser_83 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_input_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  { bool syntaxRepeat_84 = true ;
    while (syntaxRepeat_84) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
      switch (select_semantics_5F_parser_84 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_84 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i71_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_list) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_85 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      const GGS_bool cond_287984 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_listTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7591)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_listTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7591))))).operator_not () ;
      if (cond_287984.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedListType ::constructor_new (inLexique, var_cas_listTypeName COMMA_SOURCE_FILE_AT_LINE (7592)) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (7593)) ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7600)) ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      GGS_L_EXsignature  var_cas_inputSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_288676 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_288676 = NULL ;
        while (((operand_288676 = enumerator_288676.nextObject ()))) {
          macroValidPointer (operand_288676) ;
          var_cas_extractSignature.addAssign_operation (operand_288676->mAttributType, GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (7613))) ;
          var_cas_inputSignature.addAssign_operation (operand_288676->mAttributType, GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (7614))) ;
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasListType ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature, var_cas_inputSignature COMMA_SOURCE_FILE_AT_LINE (7618)) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_SOURCE_FILE_AT_LINE (7624)) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7625)) ;
      GGS_typeEntityToGenerate  var_cas_def = GGS_C_listTypeToImplement ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_SOURCE_FILE_AT_LINE (7626)) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i71_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_list) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_85 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      const GGS_bool cond_290123 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_listTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7646)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_listTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7646))))).operator_not () ;
      if (cond_290123.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedListType ::constructor_new (inLexique, var_cas_listTypeName COMMA_SOURCE_FILE_AT_LINE (7647)) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (7648)) ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7656)) ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      GGS_L_EXsignature  var_cas_inputSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_290815 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_290815 = NULL ;
        while (((operand_290815 = enumerator_290815.nextObject ()))) {
          macroValidPointer (operand_290815) ;
          var_cas_extractSignature.addAssign_operation (operand_290815->mAttributType, GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (7668))) ;
          var_cas_inputSignature.addAssign_operation (operand_290815->mAttributType, GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (7669))) ;
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasListType ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature, var_cas_inputSignature COMMA_SOURCE_FILE_AT_LINE (7673)) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_SOURCE_FILE_AT_LINE (7679)) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7680)) ;
      GGS_TypeModel  var_cas_t = GGS_ListModel ::constructor_new (inLexique, var_cas_attributeListModel COMMA_SOURCE_FILE_AT_LINE (7681)) ;
      var_cas_ioModelMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (7682)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i71_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_list) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_85 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      nt_attributes_5F_definition_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i72_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_sortedlist) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_86 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      const GGS_bool cond_292679 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_listTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7706)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_listTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7706))))).operator_not () ;
      if (cond_292679.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedSortedListType ::constructor_new (inLexique, var_cas_listTypeName COMMA_SOURCE_FILE_AT_LINE (7707)) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (7708)) ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7715)) ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_293323 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_293323 = NULL ;
        while (((operand_293323 = enumerator_293323.nextObject ()))) {
          macroValidPointer (operand_293323) ;
          var_cas_extractSignature.addAssign_operation (operand_293323->mAttributType, GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (7727))) ;
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasSortedListType ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature COMMA_SOURCE_FILE_AT_LINE (7731)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_EXsortDescriptorList  var_cas_sortDescriptorList = GGS_EXsortDescriptorList ::constructor_emptyList () ;
      GGS_stringset  var_cas_usedSortedAttributes = GGS_stringset ::constructor_emptySet () ;
      { bool syntaxRepeat_87 = true ;
        while (syntaxRepeat_87) {
            GGS_lstring  var_cas_sortAttribute ;
            inLexique.assignFromAttribute_tokenString (var_cas_sortAttribute) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            const GGS_bool cond_294014 = var_cas_usedSortedAttributes.reader_hasKey (var_cas_sortAttribute.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7743))) ;
            if (cond_294014.isBuiltAndTrue ()) {
              var_cas_sortAttribute.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this attribute is already used in sort list") COMMA_SOURCE_FILE_AT_LINE (7745)) ;
            }else if (cond_294014.isBuiltAndFalse ()) {
              GGS_AC_galgasType  var_cas_definitionType ;
              GGS_bool automatic_var_294126_0 ;
              GGS_bool automatic_var_294126_1 ;
              if (var_cas_tableAttributs.isBuilt ()) {
                var_cas_tableAttributs (HERE)->method_searchKey (inLexique, var_cas_sortAttribute, var_cas_definitionType, automatic_var_294126_0, automatic_var_294126_1 COMMA_SOURCE_FILE_AT_LINE (7747)) ;
              }
              if (var_cas_definitionType.isBuilt ()) {
                var_cas_definitionType (HERE)->method_acceptToBeSortKeyInSortedListDefinition (inLexique, var_cas_sortAttribute COMMA_SOURCE_FILE_AT_LINE (7748)) ;
              }
              var_cas_usedSortedAttributes.addAssign_operation (var_cas_sortAttribute.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7749))) ;
            }
            GGS_bool var_cas_ascendingOrder ;
            switch (select_semantics_5F_parser_88 (inLexique)) {
              case 1 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3C_) COMMA_HERE) ;
                var_cas_ascendingOrder = GGS_bool (true) ;
                } break ;
              case 2 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E_) COMMA_HERE) ;
                var_cas_ascendingOrder = GGS_bool (false) ;
                } break ;
              default :
                break ;
            }
            var_cas_sortDescriptorList.addAssign_operation (var_cas_sortAttribute, var_cas_ascendingOrder) ;
          switch (select_semantics_5F_parser_87 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_87 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_SOURCE_FILE_AT_LINE (7764)) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7765)) ;
      GGS_typeEntityToGenerate  var_cas_def = GGS_C_sortedListTypeToImplement ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_sortDescriptorList COMMA_SOURCE_FILE_AT_LINE (7766)) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i72_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_sortedlist) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_86 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      const GGS_bool cond_295641 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_listTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7787)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_listTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7787))))).operator_not () ;
      if (cond_295641.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedSortedListType ::constructor_new (inLexique, var_cas_listTypeName COMMA_SOURCE_FILE_AT_LINE (7788)) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (7789)) ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7797)) ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_296285 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_296285 = NULL ;
        while (((operand_296285 = enumerator_296285.nextObject ()))) {
          macroValidPointer (operand_296285) ;
          var_cas_extractSignature.addAssign_operation (operand_296285->mAttributType, GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (7808))) ;
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasSortedListType ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature COMMA_SOURCE_FILE_AT_LINE (7812)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      { bool syntaxRepeat_87 = true ;
        while (syntaxRepeat_87) {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            switch (select_semantics_5F_parser_88 (inLexique)) {
              case 1 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3C_) COMMA_HERE) ;
                } break ;
              case 2 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E_) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
          switch (select_semantics_5F_parser_87 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_87 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_SOURCE_FILE_AT_LINE (7830)) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7831)) ;
      GGS_TypeModel  var_cas_t = GGS_ListModel ::constructor_new (inLexique, var_cas_attributeListModel COMMA_SOURCE_FILE_AT_LINE (7832)) ;
      var_cas_ioModelMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (7833)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i72_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_sortedlist) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_86 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      nt_attributes_5F_definition_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      { bool syntaxRepeat_87 = true ;
        while (syntaxRepeat_87) {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            switch (select_semantics_5F_parser_88 (inLexique)) {
              case 1 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3C_) COMMA_HERE) ;
                } break ;
              case 2 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E_) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
          switch (select_semantics_5F_parser_87 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_87 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'attributes_definition_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_attributes_5F_definition_5F_list_i73_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                GGS_typeListModel  &var_cas_outAttributeListModel,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeAttributsSemantiquesCourants,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_listeAttributsSemantiquesCourants = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  var_cas_outAttributeListModel = GGS_typeListModel ::constructor_emptyList () ;
  { bool syntaxRepeat_89 = true ;
    while (syntaxRepeat_89) {
      switch (select_semantics_5F_parser_89 (inLexique)) {
        case 2 : {
          GGS_AC_galgasType  var_cas_definitionType ;
          GGS_lstring  var_cas_typeName ;
          nt_type_5F_parsing_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
          GGS_lstring  var_cas_attributeName ;
          inLexique.assignFromAttribute_tokenString (var_cas_attributeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_bool var_cas_hasSetter = GGS_bool (false) ;
          GGS_bool var_cas_hasGetter = GGS_bool (true) ;
          switch (select_semantics_5F_parser_90 (inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_feature) COMMA_HERE) ;
              { bool syntaxRepeat_91 = true ;
                while (syntaxRepeat_91) {
                    GGS_lstring  var_cas_directiveName ;
                    inLexique.assignFromAttribute_tokenString (var_cas_directiveName) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                    const GGS_bool cond_298723 = (var_cas_directiveName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7875))).operator_isEqual (GGS_string ("nogetter")) ;
                    if (cond_298723.isBuiltAndTrue ()) {
                      const GGS_bool cond_298673 = (var_cas_hasGetter).operator_not () ;
                      if (cond_298673.isBuiltAndTrue ()) {
                        var_cas_directiveName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the 'nogetter' feature is already set") COMMA_SOURCE_FILE_AT_LINE (7878)) ;
                      }
                      var_cas_hasGetter = GGS_bool (false) ;
                    }else if (cond_298723.isBuiltAndFalse ()) {
                      const GGS_bool cond_298925 = (var_cas_directiveName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7880))).operator_isEqual (GGS_string ("setter")) ;
                      if (cond_298925.isBuiltAndTrue ()) {
                        const GGS_bool cond_298877 = var_cas_hasSetter ;
                        if (cond_298877.isBuiltAndTrue ()) {
                          var_cas_directiveName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the 'setter' feature is already set") COMMA_SOURCE_FILE_AT_LINE (7883)) ;
                        }
                        var_cas_hasSetter = GGS_bool (true) ;
                      }else if (cond_298925.isBuiltAndFalse ()) {
                        var_cas_directiveName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("only 'setter' or 'nogetter' feature names are allowed here") COMMA_SOURCE_FILE_AT_LINE (7887)) ;
                      }
                    }
                  switch (select_semantics_5F_parser_91 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_91 = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          var_cas_tableAttributs.modifier_insertKey (inLexique, var_cas_attributeName, var_cas_definitionType, var_cas_hasSetter, var_cas_hasGetter COMMA_SOURCE_FILE_AT_LINE (7892)) ;
          var_cas_listeTousAttributsSemantiques.addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_listeAttributsSemantiquesCourants.addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_outAttributeListModel.addAssign_operation (var_cas_typeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_89 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_attributes_5F_definition_5F_list_i73_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_89 = true ;
    while (syntaxRepeat_89) {
      switch (select_semantics_5F_parser_89 (inLexique)) {
        case 2 : {
          nt_type_5F_parsing_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          switch (select_semantics_5F_parser_90 (inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_feature) COMMA_HERE) ;
              { bool syntaxRepeat_91 = true ;
                while (syntaxRepeat_91) {
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  switch (select_semantics_5F_parser_91 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_91 = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_89 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i74_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_listmap) COMMA_HERE) ;
  GGS_lstring  var_cas_listmapTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listmapTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7923)) ;
  }
  GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_listTypeName COMMA_SOURCE_FILE_AT_LINE (7924)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (7924)) ;
  GGS_typeGalgasListType  var_cas_listType = GGS_typeGalgasListType::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_listTypeName COMMA_SOURCE_FILE_AT_LINE (7925)) ;
  GGS_AC_galgasType  var_cas_c = GGS_typeGalgasListmapType ::constructor_new (inLexique, var_cas_listmapTypeName, var_cas_listTypeName, var_cas_listType, var_cas_listType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (7931)) COMMA_SOURCE_FILE_AT_LINE (7927)) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_listmapTypeName, GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_SOURCE_FILE_AT_LINE (7933)) COMMA_SOURCE_FILE_AT_LINE (7933)) ;
  GGS_typeEntityToGenerate  var_cas_def = GGS_typeGalgasListmapToImplement ::constructor_new (inLexique, var_cas_listmapTypeName, var_cas_listTypeName, var_cas_listType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (7937)) COMMA_SOURCE_FILE_AT_LINE (7934)) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i74_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_listmap) COMMA_HERE) ;
  GGS_lstring  var_cas_listmapTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listmapTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap.isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7957)) ;
  }
  GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_listTypeName COMMA_SOURCE_FILE_AT_LINE (7958)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (7958)) ;
  GGS_typeGalgasListType  var_cas_listType = GGS_typeGalgasListType::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_listTypeName COMMA_SOURCE_FILE_AT_LINE (7959)) ;
  GGS_AC_galgasType  var_cas_c = GGS_typeGalgasListmapType ::constructor_new (inLexique, var_cas_listmapTypeName, var_cas_listTypeName, var_cas_listType, var_cas_listType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (7965)) COMMA_SOURCE_FILE_AT_LINE (7961)) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_listmapTypeName, GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_SOURCE_FILE_AT_LINE (7967)) COMMA_SOURCE_FILE_AT_LINE (7967)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i74_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_listmap) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i75_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_struct) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
  GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7992)) ;
  GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
  nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_c = GGS_typeGalgasStructType ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_SOURCE_FILE_AT_LINE (8004)) ;
  GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_SOURCE_FILE_AT_LINE (8008)) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8009)) ;
  GGS_typeEntityToGenerate  var_cas_def = GGS_C_structToImplement ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_SOURCE_FILE_AT_LINE (8010)) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i75_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_struct) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
  GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
  GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8032)) ;
  nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_c = GGS_typeGalgasStructType ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_SOURCE_FILE_AT_LINE (8043)) ;
  GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_SOURCE_FILE_AT_LINE (8047)) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8048)) ;
  GGS_TypeModel  var_cas_t = GGS_ListModel ::constructor_new (inLexique, var_cas_attributeListModel COMMA_SOURCE_FILE_AT_LINE (8049)) ;
  var_cas_ioModelMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (8050)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i75_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_struct) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  nt_attributes_5F_definition_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "recursivelyEnumerateDirectories"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivelyEnumerateDirectories (C_Compiler & inLexique,
                                const GGS_string  var_cas_inAbsoluteSourcePath,
                                const GGS_string  var_cas_inPathInWrapper,
                                const GGS_wrapperExtensionMap   var_cas_inExtensionMap,
                                GGS_wrapperFileSortedList  & var_cas_outWrapperFileSortedList,
                                GGS_wrapperDirectorySortedList  & var_cas_outWrapperDirectorySortedList,
                                GGS_uint  & var_cas_ioWrapperFileIndex,
                                GGS_uint  & var_cas_ioWrapperDirectoryIndex,
                                GGS_M_regularFiles  & var_cas_ioRegularFileMap
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_recursivelyEnumerateDirectories at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_uint  var_cas_currentDirectoryIndex = var_cas_ioWrapperDirectoryIndex ;
  var_cas_ioWrapperDirectoryIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (8070)) ;
  GGS_stringlist  var_cas_files = var_cas_inAbsoluteSourcePath.reader_regularFiles (GGS_bool (false)) ;
  var_cas_outWrapperFileSortedList = GGS_wrapperFileSortedList ::constructor_emptySortedList () ;
  {
    GGS_stringlist::cEnumerator enumerator_306472 (var_cas_files, true) ;
    const GGS_stringlist::cElement * operand_306472 = NULL ;
    while (((operand_306472 = enumerator_306472.nextObject ()))) {
      macroValidPointer (operand_306472) ;
      const GGS_bool cond_306979 = var_cas_inExtensionMap.reader_hasKey (operand_306472->mValue.reader_pathExtension ()) ;
      if (cond_306979.isBuiltAndTrue ()) {
        GGS_string var_cas_absoluteFilePath = ((var_cas_inAbsoluteSourcePath).operator_concat (GGS_string ("/"))).operator_concat (operand_306472->mValue) ;
        var_cas_outWrapperFileSortedList.addAssign_operation (operand_306472->mValue, var_cas_absoluteFilePath, var_cas_currentDirectoryIndex, var_cas_ioWrapperFileIndex) ;
        var_cas_ioRegularFileMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, (var_cas_inPathInWrapper).operator_concat (operand_306472->mValue), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (8085)), var_cas_currentDirectoryIndex, var_cas_ioWrapperFileIndex COMMA_SOURCE_FILE_AT_LINE (8084)) ;
        var_cas_ioWrapperFileIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (8089)) ;
      }
    }
  }
  GGS_stringlist  var_cas_directories = var_cas_inAbsoluteSourcePath.reader_directories (GGS_bool (false)) ;
  var_cas_outWrapperDirectorySortedList = GGS_wrapperDirectorySortedList ::constructor_emptySortedList () ;
  {
    GGS_stringlist::cEnumerator enumerator_307214 (var_cas_directories, true) ;
    const GGS_stringlist::cElement * operand_307214 = NULL ;
    while (((operand_307214 = enumerator_307214.nextObject ()))) {
      macroValidPointer (operand_307214) ;
      GGS_wrapperFileSortedList  var_cas_internalWrapperFileSortedList ;
      GGS_wrapperDirectorySortedList  var_cas_internalWrapperDirectorySortedList ;
      GGS_uint  var_cas_theDirectoryIndex = var_cas_ioWrapperDirectoryIndex ;
      ::routine_recursivelyEnumerateDirectories (inLexique,  ((var_cas_inAbsoluteSourcePath).operator_concat (GGS_string ("/"))).operator_concat (operand_307214->mValue),  ((var_cas_inPathInWrapper).operator_concat (operand_307214->mValue)).operator_concat (GGS_string ("/")),  var_cas_inExtensionMap,  var_cas_internalWrapperFileSortedList,  var_cas_internalWrapperDirectorySortedList,  var_cas_ioWrapperFileIndex,  var_cas_ioWrapperDirectoryIndex,  var_cas_ioRegularFileMap COMMA_SOURCE_FILE_AT_LINE (8099)) ;
      var_cas_outWrapperDirectorySortedList.addAssign_operation (operand_307214->mValue, var_cas_internalWrapperFileSortedList, var_cas_internalWrapperDirectorySortedList, var_cas_theDirectoryIndex) ;
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_recursivelyEnumerateDirectories\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i76_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_filewrapper) COMMA_HERE) ;
  GGS_lstring  var_cas_wrapperName ;
  inLexique.assignFromAttribute_tokenString (var_cas_wrapperName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
  GGS_lstring  var_cas_sourcePath ;
  inLexique.assignFromAttribute_tokenString (var_cas_sourcePath) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_wrapperExtensionMap  var_cas_extensionMap = GGS_wrapperExtensionMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8136)) ;
  switch (select_semantics_5F_parser_92 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_93 = true ;
        while (syntaxRepeat_93) {
            GGS_lstring  var_cas_extension ;
            inLexique.assignFromAttribute_tokenString (var_cas_extension) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
            var_cas_extensionMap.modifier_insertKey (inLexique, var_cas_extension COMMA_SOURCE_FILE_AT_LINE (8142)) ;
          switch (select_semantics_5F_parser_93 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_93 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_M_regularFiles  var_cas_regularFileMap = GGS_M_regularFiles ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8149)) ;
  GGS_string var_cas_absoluteSourcePath ;
  const GGS_bool cond_308997 = (var_cas_sourcePath.ggs_string ().reader_firstCharacterOrNul ()).operator_isEqual (GGS_char (TO_UNICODE ('/'))) ;
  if (cond_308997.isBuiltAndTrue ()) {
    var_cas_absoluteSourcePath = var_cas_sourcePath.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8152)) ;
  }else if (cond_308997.isBuiltAndFalse ()) {
    var_cas_absoluteSourcePath = ((GGS_string::constructor_stringWithSourceFilePath (inLexique COMMA_SOURCE_FILE_AT_LINE (8154)).reader_stringByDeletingLastPathComponent ()).operator_concat (GGS_string ("/"))).operator_concat (var_cas_sourcePath.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8154))) ;
  }
  const GGS_bool cond_309277 = (var_cas_absoluteSourcePath.reader_directoryExists ()).operator_not () ;
  if (cond_309277.isBuiltAndTrue ()) {
    var_cas_sourcePath.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("The '")).operator_concat (var_cas_absoluteSourcePath)).operator_concat (GGS_string ("' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (8158)) ;
  }else if (cond_309277.isBuiltAndFalse ()) {
    GGS_wrapperFileSortedList  var_cas_wrapperFileSortedList ;
    GGS_wrapperDirectorySortedList  var_cas_wrapperDirectorySortedList ;
    GGS_uint  var_cas_wrapperFileIndex = GGS_uint (0U) ;
    GGS_uint  var_cas_wrapperDirectoryIndex = GGS_uint (0U) ;
    ::routine_recursivelyEnumerateDirectories (inLexique,  var_cas_absoluteSourcePath,  GGS_string ("/"),  var_cas_extensionMap,  var_cas_wrapperFileSortedList,  var_cas_wrapperDirectorySortedList,  var_cas_wrapperFileIndex,  var_cas_wrapperDirectoryIndex,  var_cas_regularFileMap COMMA_SOURCE_FILE_AT_LINE (8164)) ;
    GGS_typeEntityToGenerate  var_cas_w = GGS_C_wrapperToImplement ::constructor_new (inLexique, var_cas_wrapperName, var_cas_sourcePath.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8177)), var_cas_extensionMap, var_cas_wrapperFileSortedList, var_cas_wrapperDirectorySortedList COMMA_SOURCE_FILE_AT_LINE (8175)) ;
    var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_w) ;
  }
  GGS_filewrapperTemplateMapEX  var_cas_templateMap = GGS_filewrapperTemplateMapEX ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8185)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_94 = true ;
    while (syntaxRepeat_94) {
      switch (select_semantics_5F_parser_94 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
          GGS_lstring  var_cas_templateName ;
          inLexique.assignFromAttribute_tokenString (var_cas_templateName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_lstring  var_cas_templatePath ;
          inLexique.assignFromAttribute_tokenString (var_cas_templatePath) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
          GGS_lstring  var_cas_templateAbsolutePath = GGS_lstring ::constructor_new (inLexique, ((var_cas_absoluteSourcePath).operator_concat (GGS_string ("/"))).operator_concat (var_cas_templatePath.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8197))), var_cas_templatePath.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (8198)) COMMA_SOURCE_FILE_AT_LINE (8196)) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_templateArgumentTypesList = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList () ;
          GGS_typeListeAttributsSemantiques  var_cas_formalAttributeList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
          GGS_templateVariableMap  var_cas_templateVariableMap = GGS_templateVariableMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8203)) ;
          { bool syntaxRepeat_95 = true ;
            while (syntaxRepeat_95) {
              switch (select_semantics_5F_parser_95 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  var_cas_formalAttributeList.addAssign_operation (var_cas_type_semantique, GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (8215))) ;
                  GGS_bool var_cas_parameterIsUsed ;
                  switch (select_semantics_5F_parser_96 (inLexique)) {
                    case 1 : {
                      var_cas_parameterIsUsed = GGS_bool (true) ;
                      } break ;
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
                      var_cas_parameterIsUsed = GGS_bool (false) ;
                      } break ;
                    default :
                      break ;
                  }
                  GGS_lstring  var_cas_parameterName ;
                  inLexique.assignFromAttribute_tokenString (var_cas_parameterName) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_cppName = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_parameterName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (8225)), var_cas_parameterName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8225)) COMMA_SOURCE_FILE_AT_LINE (8225)) ;
                  var_cas_templateArgumentTypesList.addAssign_operation (var_cas_type_semantique, GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (8226)), var_cas_cppName, GGS_bool (true), var_cas_parameterName) ;
                  const GGS_bool cond_311599 = var_cas_parameterIsUsed ;
                  if (cond_311599.isBuiltAndTrue ()) {
                    var_cas_templateVariableMap.modifier_insertKey (inLexique, var_cas_parameterName, var_cas_type_semantique, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (8228)) ;
                  }else if (cond_311599.isBuiltAndFalse ()) {
                    var_cas_templateVariableMap.modifier_insertKey (inLexique, var_cas_parameterName, var_cas_type_semantique, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (8230)) ;
                  }
                  } break ;
                default :
                  syntaxRepeat_95 = false ;
                  break ;
              }
            }
          }
          var_cas_templateMap.modifier_insertKey (inLexique, var_cas_templateName, var_cas_formalAttributeList COMMA_SOURCE_FILE_AT_LINE (8233)) ;
          GGS_templateInstructionList  var_cas_templateInstructionList ;
          GGS_bool var_cas_usesColumnMarker ;
          const GGS_string _depExtension = GGS_string ("") ;
          const GGS_string _depPath = GGS_string ("") ;
          if (_depExtension.isBuilt () && _depPath.isBuilt ()) {
            C_Grammar_galgasTemplateGrammar::_performSourceFileParsing_ (inLexique,
                                          _depExtension.string (),
                                          _depPath.string (),
                                          NULL,
                                          var_cas_templateAbsolutePath,
                                          var_cas_templateVariableMap,
                                          var_cas_ioSemanticContext,
                                          var_cas_ioComponentSemanticsEntitiesMap,
                                          var_cas_inOptionsComponentsMapForUse,
                                          var_cas_templateInstructionList,
                                          var_cas_usesColumnMarker
                                          COMMA_SOURCE_FILE_AT_LINE (8236)) ;
          }
          var_cas_listeEntitesAengendrer.addAssign_operation (GGS_C_filewrapperTemplateToImplement ::constructor_new (inLexique, var_cas_wrapperName, var_cas_templateName, var_cas_templateArgumentTypesList, var_cas_templateInstructionList, var_cas_usesColumnMarker COMMA_SOURCE_FILE_AT_LINE (8244))) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_94 = false ;
          break ;
      }
    }
  }
  var_cas_ioSemanticContext.mFilewrappers.modifier_insertKey (inLexique, var_cas_wrapperName, var_cas_regularFileMap, var_cas_templateMap COMMA_SOURCE_FILE_AT_LINE (8254)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i76_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_filewrapper) COMMA_HERE) ;
  GGS_lstring  var_cas_wrapperName ;
  inLexique.assignFromAttribute_tokenString (var_cas_wrapperName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
  GGS_lstring  var_cas_sourcePath ;
  inLexique.assignFromAttribute_tokenString (var_cas_sourcePath) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_wrapperExtensionMap  var_cas_extensionMap = GGS_wrapperExtensionMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8272)) ;
  switch (select_semantics_5F_parser_92 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_93 = true ;
        while (syntaxRepeat_93) {
            GGS_lstring  var_cas_extension ;
            inLexique.assignFromAttribute_tokenString (var_cas_extension) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
            var_cas_extensionMap.modifier_insertKey (inLexique, var_cas_extension COMMA_SOURCE_FILE_AT_LINE (8278)) ;
          switch (select_semantics_5F_parser_93 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_93 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_M_regularFiles  var_cas_regularFileMap = GGS_M_regularFiles ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8284)) ;
  const GGS_bool cond_314320 = (var_cas_ioSemanticContext.reader_mFilewrappers (inLexique COMMA_SOURCE_FILE_AT_LINE (8285)).reader_hasKey (var_cas_wrapperName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8285)))).operator_not () ;
  if (cond_314320.isBuiltAndTrue ()) {
    GGS_string var_cas_absoluteSourcePath ;
    const GGS_bool cond_313532 = (var_cas_sourcePath.ggs_string ().reader_firstCharacterOrNul ()).operator_isEqual (GGS_char (TO_UNICODE ('/'))) ;
    if (cond_313532.isBuiltAndTrue ()) {
      var_cas_absoluteSourcePath = var_cas_sourcePath.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8289)) ;
    }else if (cond_313532.isBuiltAndFalse ()) {
      var_cas_absoluteSourcePath = ((GGS_string::constructor_stringWithSourceFilePath (inLexique COMMA_SOURCE_FILE_AT_LINE (8291)).reader_stringByDeletingLastPathComponent ()).operator_concat (GGS_string ("/"))).operator_concat (var_cas_sourcePath.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8291))) ;
    }
    const GGS_bool cond_313822 = (var_cas_absoluteSourcePath.reader_directoryExists ()).operator_not () ;
    if (cond_313822.isBuiltAndTrue ()) {
      var_cas_sourcePath.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("The '")).operator_concat (var_cas_absoluteSourcePath)).operator_concat (GGS_string ("' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (8295)) ;
    }else if (cond_313822.isBuiltAndFalse ()) {
      GGS_wrapperFileSortedList  var_cas_wrapperFileSortedList ;
      GGS_wrapperDirectorySortedList  var_cas_wrapperDirectorySortedList ;
      GGS_uint  var_cas_wrapperFileIndex = GGS_uint (0U) ;
      GGS_uint  var_cas_wrapperDirectoryIndex = GGS_uint (0U) ;
      ::routine_recursivelyEnumerateDirectories (inLexique,  var_cas_absoluteSourcePath,  GGS_string ("/"),  var_cas_extensionMap,  var_cas_wrapperFileSortedList,  var_cas_wrapperDirectorySortedList,  var_cas_wrapperFileIndex,  var_cas_wrapperDirectoryIndex,  var_cas_regularFileMap COMMA_SOURCE_FILE_AT_LINE (8301)) ;
    }
  }
  GGS_filewrapperTemplateMapEX  var_cas_templateMap = GGS_filewrapperTemplateMapEX ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8314)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_94 = true ;
    while (syntaxRepeat_94) {
      switch (select_semantics_5F_parser_94 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
          GGS_lstring  var_cas_templateName ;
          inLexique.assignFromAttribute_tokenString (var_cas_templateName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_lstring  var_cas_templatePath ;
          inLexique.assignFromAttribute_tokenString (var_cas_templatePath) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_formalAttributeList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
          { bool syntaxRepeat_95 = true ;
            while (syntaxRepeat_95) {
              switch (select_semantics_5F_parser_95 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  var_cas_formalAttributeList.addAssign_operation (var_cas_type_semantique, GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (8335))) ;
                  switch (select_semantics_5F_parser_96 (inLexique)) {
                    case 1 : {
                      } break ;
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
                      } break ;
                    default :
                      break ;
                  }
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_95 = false ;
                  break ;
              }
            }
          }
          var_cas_templateMap.modifier_insertKey (inLexique, var_cas_templateName, var_cas_formalAttributeList COMMA_SOURCE_FILE_AT_LINE (8342)) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_94 = false ;
          break ;
      }
    }
  }
  const GGS_bool cond_315379 = (var_cas_ioSemanticContext.reader_mFilewrappers (inLexique COMMA_SOURCE_FILE_AT_LINE (8346)).reader_hasKey (var_cas_wrapperName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8346)))).operator_not () ;
  if (cond_315379.isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mFilewrappers.modifier_insertKey (inLexique, var_cas_wrapperName, var_cas_regularFileMap, var_cas_templateMap COMMA_SOURCE_FILE_AT_LINE (8347)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i76_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_filewrapper) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  switch (select_semantics_5F_parser_92 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_93 = true ;
        while (syntaxRepeat_93) {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
          switch (select_semantics_5F_parser_93 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_93 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_94 = true ;
    while (syntaxRepeat_94) {
      switch (select_semantics_5F_parser_94 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
          { bool syntaxRepeat_95 = true ;
            while (syntaxRepeat_95) {
              switch (select_semantics_5F_parser_95 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                  nt_formal_5F_argument_5F_type_parse (inLexique) ;
                  switch (select_semantics_5F_parser_96 (inLexique)) {
                    case 1 : {
                      } break ;
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
                      } break ;
                    default :
                      break ;
                  }
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_95 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_94 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i77_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extern) COMMA_HERE) ;
  nt_semantics_5F_declaration_5F_begining_5F_by_5F_extern_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i77_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extern) COMMA_HERE) ;
  nt_semantics_5F_declaration_5F_begining_5F_by_5F_extern_importSemantics (inLexique, var_cas_ioModelMap, var_cas_ioExternActionMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i77_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extern) COMMA_HERE) ;
  nt_semantics_5F_declaration_5F_begining_5F_by_5F_extern_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_begining_by_extern'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i78_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  GGS_lstring  var_cas_externTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_externTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_modifiersMap = GGS_typeTableMethodes ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8415)) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap = GGS_typeTableMethodes ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8416)) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall = GGS_bool (false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  GGS_M_externTypeConstructorMap  var_cas_constructorsMap = GGS_M_externTypeConstructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8419)) ;
  { bool syntaxRepeat_97 = true ;
    while (syntaxRepeat_97) {
      switch (select_semantics_5F_parser_97 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_constructor) COMMA_HERE) ;
          GGS_lstring  var_cas_constructorName ;
          inLexique.assignFromAttribute_tokenString (var_cas_constructorName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
          { bool syntaxRepeat_98 = true ;
            while (syntaxRepeat_98) {
              switch (select_semantics_5F_parser_98 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  inLexique.assignFromAttribute_tokenString (var_cas_parameterName) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  var_cas_constructorArgumentTypesList.addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  } break ;
                default :
                  syntaxRepeat_98 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          var_cas_constructorsMap.modifier_insertKey (inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList COMMA_SOURCE_FILE_AT_LINE (8443)) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
          GGS_lstring  var_cas_methodName ;
          inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8452)) ;
          GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
          nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          var_cas_readersInInstructionMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (8463)) ;
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_modifier) COMMA_HERE) ;
          switch (select_semantics_5F_parser_99 (inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_methodName ;
              inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8473)) ;
              GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
              nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              var_cas_modifiersMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (8483)) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2B__3D_) COMMA_HERE) ;
              GGS_location  var_cas_errorLocation = GGS_location (inLexique) ;
              { bool syntaxRepeat_100 = true ;
                while (syntaxRepeat_100) {
                  switch (select_semantics_5F_parser_100 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      inLexique.assignFromAttribute_tokenString (var_cas_parameterName) ;
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                      var_cas_addAssignOperatorCallTypeList.addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      } break ;
                    default :
                      syntaxRepeat_100 = false ;
                      break ;
                  }
                }
              }
              const GGS_bool cond_320989 = var_cas_acceptAddAssignOperatorCall ;
              if (cond_320989.isBuiltAndTrue ()) {
                var_cas_errorLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("'+=' operator is already defined") COMMA_SOURCE_FILE_AT_LINE (8504)) ;
              }else if (cond_320989.isBuiltAndFalse ()) {
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true) ;
              }
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_97 = false ;
          break ;
      }
    }
  }
  GGS_typeEntityToGenerate  var_cas_t = GGS_typeExternTypeToGenerate ::constructor_new (inLexique, var_cas_externTypeName, var_cas_constructorsMap, var_cas_modifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_SOURCE_FILE_AT_LINE (8511)) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_t) ;
  GGS_AC_galgasType  var_cas_c = GGS_typeGalgasExternType ::constructor_new (inLexique, var_cas_externTypeName, var_cas_constructorsMap, var_cas_modifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_SOURCE_FILE_AT_LINE (8521)) ;
  GGS_AC_semanticsEntity  var_cas_e = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_SOURCE_FILE_AT_LINE (8529)) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_externTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (8530)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i78_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  GGS_lstring  var_cas_externTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_externTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_EXmodifiersMap = GGS_typeTableMethodes ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8545)) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap = GGS_typeTableMethodes ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8546)) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall = GGS_bool (false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  GGS_M_externTypeConstructorMap  var_cas_EXconstructorsMap = GGS_M_externTypeConstructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8549)) ;
  GGS_externTypeConstructorMap  var_cas_constructorMap = GGS_externTypeConstructorMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8550)) ;
  GGS_externTypeReaderMap  var_cas_readerMap = GGS_externTypeReaderMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8551)) ;
  GGS_externTypeModifierMap  var_cas_modifierMap = GGS_externTypeModifierMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8552)) ;
  GGS_typeListModel  var_cas_addAssignFormalInputArgumentList = GGS_typeListModel ::constructor_emptyList () ;
  { bool syntaxRepeat_97 = true ;
    while (syntaxRepeat_97) {
      switch (select_semantics_5F_parser_97 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_constructor) COMMA_HERE) ;
          GGS_lstring  var_cas_constructorName ;
          inLexique.assignFromAttribute_tokenString (var_cas_constructorName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
          GGS_typeListModel  var_cas_formalInputArgumentList = GGS_typeListModel ::constructor_emptyList () ;
          { bool syntaxRepeat_98 = true ;
            while (syntaxRepeat_98) {
              switch (select_semantics_5F_parser_98 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  inLexique.assignFromAttribute_tokenString (var_cas_parameterName) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  var_cas_constructorArgumentTypesList.addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  var_cas_formalInputArgumentList.addAssign_operation (var_cas_galgasTypeName) ;
                  } break ;
                default :
                  syntaxRepeat_98 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          var_cas_EXconstructorsMap.modifier_insertKey (inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList COMMA_SOURCE_FILE_AT_LINE (8579)) ;
          var_cas_constructorMap.modifier_insertKey (inLexique, var_cas_constructorName, var_cas_formalInputArgumentList COMMA_SOURCE_FILE_AT_LINE (8580)) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
          GGS_lstring  var_cas_readerName ;
          inLexique.assignFromAttribute_tokenString (var_cas_readerName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8589)) ;
          GGS_signatureForGrammarAnalysis  var_cas_signature ;
          nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          var_cas_readersInInstructionMap.modifier_insertKey (inLexique, var_cas_readerName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (8600)) ;
          var_cas_readerMap.modifier_insertKey (inLexique, var_cas_readerName, var_cas_signature COMMA_SOURCE_FILE_AT_LINE (8601)) ;
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_modifier) COMMA_HERE) ;
          switch (select_semantics_5F_parser_99 (inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_modifierName ;
              inLexique.assignFromAttribute_tokenString (var_cas_modifierName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8611)) ;
              GGS_signatureForGrammarAnalysis  var_cas_signature ;
              nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
              var_cas_EXmodifiersMap.modifier_insertKey (inLexique, var_cas_modifierName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (8621)) ;
              var_cas_modifierMap.modifier_insertKey (inLexique, var_cas_modifierName, var_cas_signature COMMA_SOURCE_FILE_AT_LINE (8622)) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2B__3D_) COMMA_HERE) ;
              const GGS_bool cond_325246 = (var_cas_addAssignFormalInputArgumentList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
              if (cond_325246.isBuiltAndTrue ()) {
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("'+=' operator is already defined") COMMA_SOURCE_FILE_AT_LINE (8627)) ;
              }else if (cond_325246.isBuiltAndFalse ()) {
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true) ;
              }
              { bool syntaxRepeat_100 = true ;
                while (syntaxRepeat_100) {
                  switch (select_semantics_5F_parser_100 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      inLexique.assignFromAttribute_tokenString (var_cas_parameterName) ;
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                      var_cas_addAssignOperatorCallTypeList.addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      var_cas_addAssignFormalInputArgumentList.addAssign_operation (var_cas_galgasTypeName) ;
                      } break ;
                    default :
                      syntaxRepeat_100 = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_97 = false ;
          break ;
      }
    }
  }
  GGS_AC_galgasType  var_cas_c = GGS_typeGalgasExternType ::constructor_new (inLexique, var_cas_externTypeName, var_cas_EXconstructorsMap, var_cas_EXmodifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_SOURCE_FILE_AT_LINE (8650)) ;
  GGS_AC_semanticsEntity  var_cas_e = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_SOURCE_FILE_AT_LINE (8658)) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_externTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (8659)) ;
  GGS_TypeModel  var_cas_t = GGS_ExternTypeModel ::constructor_new (inLexique, var_cas_constructorMap, var_cas_readerMap, var_cas_modifierMap, var_cas_addAssignFormalInputArgumentList COMMA_SOURCE_FILE_AT_LINE (8660)) ;
  var_cas_ioModelMap.modifier_insertKey (inLexique, var_cas_externTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (8661)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i78_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_97 = true ;
    while (syntaxRepeat_97) {
      switch (select_semantics_5F_parser_97 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_constructor) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          { bool syntaxRepeat_98 = true ;
            while (syntaxRepeat_98) {
              switch (select_semantics_5F_parser_98 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                  nt_formal_5F_argument_5F_type_parse (inLexique) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_98 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          nt_formal_5F_arguments_5F_list_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_modifier) COMMA_HERE) ;
          switch (select_semantics_5F_parser_99 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              nt_formal_5F_arguments_5F_list_parse (inLexique) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2B__3D_) COMMA_HERE) ;
              { bool syntaxRepeat_100 = true ;
                while (syntaxRepeat_100) {
                  switch (select_semantics_5F_parser_100 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                      nt_formal_5F_argument_5F_type_parse (inLexique) ;
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_100 = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_97 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i79_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                const GGS_typeTableEnAvant  var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  inLexique.assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  const GGS_bool cond_327178 = var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (var_cas_outGalgasTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8676))) ;
  if (cond_327178.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_inComponentSemanticsEntitiesMap.isBuilt ()) {
      var_cas_inComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8678)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (8679)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (8679)) ;
  }else if (cond_327178.isBuiltAndFalse ()) {
    if (var_cas_tableEnAvant.isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (8681)) ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i79_importGrammarForSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  inLexique.assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i79_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i80_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                const GGS_typeTableEnAvant  var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_list) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  const GGS_bool cond_328011 = var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (var_cas_outGalgasTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8699))) ;
  if (cond_328011.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_inComponentSemanticsEntitiesMap.isBuilt ()) {
      var_cas_inComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8701)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (8702)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (8702)) ;
  }else if (cond_328011.isBuiltAndFalse ()) {
    if (var_cas_tableEnAvant.isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (8704)) ;
    }
    GGS_typeGalgasUndefinedListType  var_cas_x = GGS_typeGalgasUndefinedListType::castFrom (inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (8705)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i80_importGrammarForSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_list) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i80_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_list) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i81_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                const GGS_typeTableEnAvant  var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_map) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  const GGS_bool cond_328981 = var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (var_cas_outGalgasTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8724))) ;
  if (cond_328981.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_inComponentSemanticsEntitiesMap.isBuilt ()) {
      var_cas_inComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8726)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (8727)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (8727)) ;
  }else if (cond_328981.isBuiltAndFalse ()) {
    if (var_cas_tableEnAvant.isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (8729)) ;
    }
    GGS_typeGalgasUndefinedMapType  var_cas_x = GGS_typeGalgasUndefinedMapType::castFrom (inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (8730)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i81_importGrammarForSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_map) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i81_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_map) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i82_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                const GGS_typeTableEnAvant  var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  const GGS_bool cond_329966 = var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (var_cas_outGalgasTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8750))) ;
  if (cond_329966.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_inComponentSemanticsEntitiesMap.isBuilt ()) {
      var_cas_inComponentSemanticsEntitiesMap (HERE)->method_searchKey (inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8752)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (8753)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (8753)) ;
  }else if (cond_329966.isBuiltAndFalse ()) {
    if (var_cas_tableEnAvant.isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (8755)) ;
    }
    GGS_typeGalgasUndefinedClassType  var_cas_x = GGS_typeGalgasUndefinedClassType::castFrom (inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (8756)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i82_importGrammarForSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i82_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_begining_by_extern'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i83_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_nomAction ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomAction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8784)) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  automatic_var_331512_0 ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, automatic_var_331512_0) ;
  GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteRoutineExterne ::constructor_new (inLexique, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (8795)) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_nomAction, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8796)) ;
  GGS_typeEntityToGenerate  var_cas_ea = GGS_typeRoutineExterneAengendrer ::constructor_new (inLexique, var_cas_nomAction, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (8797)) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_ea) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i83_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_actionName ;
  inLexique.assignFromAttribute_tokenString (var_cas_actionName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8812)) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signature ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteRoutineExterne ::constructor_new (inLexique, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (8824)) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_actionName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8825)) ;
  var_cas_ioExternActionMap.modifier_insertKey (inLexique, var_cas_actionName, var_cas_signature, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (8826)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i83_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_begining_by_extern'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i84_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
  GGS_lstring  var_cas_nomAction ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomAction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8848)) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  automatic_var_333974_0 ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, automatic_var_333974_0) ;
  GGS_L_EXsignature  var_cas_returnedTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  {
    GGS_typeListeTypesEtNomsArgMethode::cEnumerator enumerator_334183 (var_cas_listeTypeEtNomsArguments, true) ;
    const GGS_typeListeTypesEtNomsArgMethode::cElement * operand_334183 = NULL ;
    while (((operand_334183 = enumerator_334183.nextObject ()))) {
      macroValidPointer (operand_334183) ;
      const GGS_bool cond_334402 = (operand_334183->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (8863))) ;
      if (cond_334402.isBuiltAndTrue ()) {
        operand_334183->mParameterName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("for a function only input parameters (\?) and constant input parameters (\?\?) can be used.") COMMA_SOURCE_FILE_AT_LINE (8865)) ;
      }else if (cond_334402.isBuiltAndFalse ()) {
        const GGS_bool cond_334611 = (operand_334183->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (8865))) ;
        if (cond_334611.isBuiltAndTrue ()) {
          operand_334183->mParameterName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("for a function only input parameters (\?) and constant input parameters (\?\?) can be used.") COMMA_SOURCE_FILE_AT_LINE (8867)) ;
        }
      }
    }
  }
  GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (8870)) ;
  GGS_AC_galgasType  var_cas_returnedType ;
  GGS_lstring  var_cas_galgasTypeName ;
  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_returnedType, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
  GGS_lstring  var_cas_nomArgument ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (8881)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8881)) COMMA_SOURCE_FILE_AT_LINE (8881)) ;
  var_cas_tableArgumentsMethode.modifier_insertOutArgument (inLexique, var_cas_nomArgument, var_cas_returnedType, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (8882)) ;
  GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteFonctionExterne ::constructor_new (inLexique, var_cas_listeDeTypes, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (8884)) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_nomAction, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8885)) ;
  GGS_typeEntityToGenerate  var_cas_ea = GGS_typeFonctionExterneAengendrer ::constructor_new (inLexique, var_cas_nomAction, var_cas_listeDeTypes, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (8886)) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_ea) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i84_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
  GGS_lstring  var_cas_actionName ;
  inLexique.assignFromAttribute_tokenString (var_cas_actionName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8901)) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signature ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  GGS_L_EXsignature  var_cas_returnedTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  {
    GGS_typeListeTypesEtNomsArgMethode::cEnumerator enumerator_336462 (var_cas_listeTypeEtNomsArguments, true) ;
    const GGS_typeListeTypesEtNomsArgMethode::cElement * operand_336462 = NULL ;
    while (((operand_336462 = enumerator_336462.nextObject ()))) {
      macroValidPointer (operand_336462) ;
      const GGS_bool cond_336681 = (operand_336462->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (8917))) ;
      if (cond_336681.isBuiltAndTrue ()) {
        operand_336462->mParameterName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("for a function only input parameters (\?) and constant input parameters (\?\?) can be used.") COMMA_SOURCE_FILE_AT_LINE (8919)) ;
      }else if (cond_336681.isBuiltAndFalse ()) {
        const GGS_bool cond_336890 = (operand_336462->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (8919))) ;
        if (cond_336890.isBuiltAndTrue ()) {
          operand_336462->mParameterName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("for a function only input parameters (\?) and constant input parameters (\?\?) can be used.") COMMA_SOURCE_FILE_AT_LINE (8921)) ;
        }
      }
    }
  }
  GGS_formalArgumentPassingModeAST var_cas_passingMode = GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (8924)) ;
  GGS_AC_galgasType  var_cas_returnedType ;
  GGS_lstring  var_cas_galgasTypeName ;
  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_returnedType, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
  GGS_lstring  var_cas_nomArgument ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (8935)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8935)) COMMA_SOURCE_FILE_AT_LINE (8935)) ;
  var_cas_tableArgumentsMethode.modifier_insertOutArgument (inLexique, var_cas_nomArgument, var_cas_returnedType, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (8936)) ;
  GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteFonctionExterne ::constructor_new (inLexique, var_cas_listeDeTypes, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (8938)) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_actionName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8939)) ;
  var_cas_ioExternActionMap.modifier_insertKey (inLexique, var_cas_actionName, var_cas_signature, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (8940)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i84_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  nt_formal_5F_argument_5F_type_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i85_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_enum) COMMA_HERE) ;
  GGS_lstring  var_cas_enumTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_enumTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_enumConstantMap  var_cas_constantMap = GGS_enumConstantMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8965)) ;
  switch (select_semantics_5F_parser_101 (inLexique)) {
    case 1 : {
      { bool syntaxRepeat_102 = true ;
        while (syntaxRepeat_102) {
            GGS_lstring  var_cas_constantName ;
            inLexique.assignFromAttribute_tokenString (var_cas_constantName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            var_cas_constantMap.modifier_insertKey (inLexique, var_cas_constantName, var_cas_constantMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (8970)) ;
          switch (select_semantics_5F_parser_102 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_102 = false ;
              break ;
          }
        }
      }
      } break ;
    case 2 : {
      { bool syntaxRepeat_103 = true ;
        while (syntaxRepeat_103) {
          switch (select_semantics_5F_parser_103 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_constructor) COMMA_HERE) ;
              { bool syntaxRepeat_104 = true ;
                while (syntaxRepeat_104) {
                    GGS_lstring  var_cas_constantName ;
                    inLexique.assignFromAttribute_tokenString (var_cas_constantName) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                    var_cas_constantMap.modifier_insertKey (inLexique, var_cas_constantName, var_cas_constantMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (8980)) ;
                  switch (select_semantics_5F_parser_104 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_104 = false ;
                      break ;
                  }
                }
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_103 = false ;
              break ;
          }
        }
      }
      GGS_string var_cas_s = GGS_string ("") ;
      {
        GGS_enumConstantMap::cEnumerator enumerator_339186 (var_cas_constantMap, true) ;
        const GGS_enumConstantMap::cElement * operand_339186 = enumerator_339186.nextObject () ;
        if ((operand_339186 != NULL)) {
          bool _foreach_loop_339186 ;
          do{
            macroValidPointer (operand_339186) ;
            var_cas_s.dotAssign_operation (operand_339186->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8988))) ;
            operand_339186 = enumerator_339186.nextObject () ;
            _foreach_loop_339186 = ((operand_339186 != NULL)) ;
            if (_foreach_loop_339186) {
              var_cas_s.appendCString (", ") ;
            }
          }while (_foreach_loop_339186) ;
        }
      }
      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, ((GGS_string ("Old style declaration: now write '... {")).operator_concat (var_cas_s)).operator_concat (GGS_string ("} ...")) COMMA_SOURCE_FILE_AT_LINE (8991)) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_typeEnumMessageMap  var_cas_enumMessageMap = GGS_typeEnumMessageMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (8996)) ;
  { bool syntaxRepeat_105 = true ;
    while (syntaxRepeat_105) {
      switch (select_semantics_5F_parser_105 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
          GGS_lstring  var_cas_messageName ;
          inLexique.assignFromAttribute_tokenString (var_cas_messageName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
          GGS_typeEnumCstMessageStringMap  var_cas_cstMessageStringMap = GGS_typeEnumCstMessageStringMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (9003)) ;
          { bool syntaxRepeat_106 = true ;
            while (syntaxRepeat_106) {
                GGS_lstring  var_cas_cstName ;
                inLexique.assignFromAttribute_tokenString (var_cas_cstName) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
                GGS_lstring  var_cas_cstString ;
                inLexique.assignFromAttribute_tokenString (var_cas_cstString) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                var_cas_cstMessageStringMap.modifier_insertKey (inLexique, var_cas_cstName, var_cas_cstString COMMA_SOURCE_FILE_AT_LINE (9010)) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              switch (select_semantics_5F_parser_106 (inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_106 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          GGS_lstringlist  var_cas_messageStringList = GGS_lstringlist ::constructor_emptyList () ;
          {
            GGS_enumConstantMap::cEnumerator enumerator_340006 (var_cas_constantMap, true) ;
            const GGS_enumConstantMap::cElement * operand_340006 = NULL ;
            while (((operand_340006 = enumerator_340006.nextObject ()))) {
              macroValidPointer (operand_340006) ;
              GGS_lstring  var_cas_name = GGS_lstring ::constructor_new (inLexique, operand_340006->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (9020)), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (9020)) ;
              GGS_lstring  var_cas_cstString ;
              if (var_cas_cstMessageStringMap.isBuilt ()) {
                var_cas_cstMessageStringMap (HERE)->method_searchKey (inLexique, var_cas_name, var_cas_cstString COMMA_SOURCE_FILE_AT_LINE (9022)) ;
              }
              var_cas_messageStringList.addAssign_operation (var_cas_cstString) ;
            }
          }
          var_cas_enumMessageMap.modifier_insertKey (inLexique, var_cas_messageName, var_cas_messageStringList COMMA_SOURCE_FILE_AT_LINE (9026)) ;
          } break ;
        default :
          syntaxRepeat_105 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_typeEntityToGenerate  var_cas_e = GGS_enumGalgasType ::constructor_new (inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap COMMA_SOURCE_FILE_AT_LINE (9031)) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_e) ;
  GGS_AC_galgasType  var_cas_t = GGS_typeGalgas_enum ::constructor_new (inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap COMMA_SOURCE_FILE_AT_LINE (9038)) ;
  GGS_AC_semanticsEntity  var_cas_ee = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_t COMMA_SOURCE_FILE_AT_LINE (9043)) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_enumTypeName, var_cas_ee COMMA_SOURCE_FILE_AT_LINE (9044)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i85_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_enum) COMMA_HERE) ;
  GGS_lstring  var_cas_enumTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_enumTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_enumConstantMap  var_cas_constantMap = GGS_enumConstantMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (9060)) ;
  switch (select_semantics_5F_parser_101 (inLexique)) {
    case 1 : {
      { bool syntaxRepeat_102 = true ;
        while (syntaxRepeat_102) {
            GGS_lstring  var_cas_constantName ;
            inLexique.assignFromAttribute_tokenString (var_cas_constantName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            var_cas_constantMap.modifier_insertKey (inLexique, var_cas_constantName, var_cas_constantMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (9065)) ;
          switch (select_semantics_5F_parser_102 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_102 = false ;
              break ;
          }
        }
      }
      } break ;
    case 2 : {
      { bool syntaxRepeat_103 = true ;
        while (syntaxRepeat_103) {
          switch (select_semantics_5F_parser_103 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_constructor) COMMA_HERE) ;
              { bool syntaxRepeat_104 = true ;
                while (syntaxRepeat_104) {
                    GGS_lstring  var_cas_constantName ;
                    inLexique.assignFromAttribute_tokenString (var_cas_constantName) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                    var_cas_constantMap.modifier_insertKey (inLexique, var_cas_constantName, var_cas_constantMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (9075)) ;
                  switch (select_semantics_5F_parser_104 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_104 = false ;
                      break ;
                  }
                }
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_103 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_typeEnumMessageMap  var_cas_exEnumMessageMap = GGS_typeEnumMessageMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (9085)) ;
  GGS_EXenumMessageMap  var_cas_enumMessageMap = GGS_EXenumMessageMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (9086)) ;
  { bool syntaxRepeat_105 = true ;
    while (syntaxRepeat_105) {
      switch (select_semantics_5F_parser_105 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
          GGS_lstring  var_cas_messageName ;
          inLexique.assignFromAttribute_tokenString (var_cas_messageName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          var_cas_enumMessageMap.modifier_insertKey (inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (9093)) ;
          GGS_lstringlist  var_cas_messageStringList = GGS_lstringlist ::constructor_emptyList () ;
          var_cas_exEnumMessageMap.modifier_insertKey (inLexique, var_cas_messageName, var_cas_messageStringList COMMA_SOURCE_FILE_AT_LINE (9095)) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
          { bool syntaxRepeat_106 = true ;
            while (syntaxRepeat_106) {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              switch (select_semantics_5F_parser_106 (inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_106 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_105 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_t = GGS_typeGalgas_enum ::constructor_new (inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_exEnumMessageMap COMMA_SOURCE_FILE_AT_LINE (9110)) ;
  GGS_AC_semanticsEntity  var_cas_e = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_t COMMA_SOURCE_FILE_AT_LINE (9115)) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_enumTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (9116)) ;
  GGS_TypeModel  var_cas_type = GGS_EnumModel ::constructor_new (inLexique, var_cas_constantMap, var_cas_enumMessageMap COMMA_SOURCE_FILE_AT_LINE (9117)) ;
  var_cas_ioModelMap.modifier_insertKey (inLexique, var_cas_enumTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (9118)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i85_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_enum) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  switch (select_semantics_5F_parser_101 (inLexique)) {
    case 1 : {
      { bool syntaxRepeat_102 = true ;
        while (syntaxRepeat_102) {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          switch (select_semantics_5F_parser_102 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_102 = false ;
              break ;
          }
        }
      }
      } break ;
    case 2 : {
      { bool syntaxRepeat_103 = true ;
        while (syntaxRepeat_103) {
          switch (select_semantics_5F_parser_103 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_constructor) COMMA_HERE) ;
              { bool syntaxRepeat_104 = true ;
                while (syntaxRepeat_104) {
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  switch (select_semantics_5F_parser_104 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_104 = false ;
                      break ;
                  }
                }
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_103 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_105 = true ;
    while (syntaxRepeat_105) {
      switch (select_semantics_5F_parser_105 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
          { bool syntaxRepeat_106 = true ;
            while (syntaxRepeat_106) {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              switch (select_semantics_5F_parser_106 (inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_106 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_105 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

