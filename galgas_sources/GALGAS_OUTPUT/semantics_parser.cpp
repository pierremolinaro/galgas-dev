//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semantics_parser.cpp'                         *
//                Generated by version 1.4.3 (LL(1) grammar)                 *
//                     october 8th, 2006, at 20h20'49"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "semantics_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "semantics_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_460_24_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  GGS_lstring  var_cas_componentName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_componentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_string var_cas_defLexique ;
  var_cas_defLexique = GGS_string (true, "") ;
  GGS_ModelMap  var_cas_modelMap ;
  var_cas_modelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_ActionMap  var_cas_actionMap ;
  var_cas_actionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_inclusionsForHeaderFile ;
  GGS_stringset  var_cas_inclusionsForImplementationFile ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentEntitiesMap ;
  GGS_stringset  var_cas_classNamesSet ;
  var_cas_classNamesSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  GGS_stringset  var_cas_includedGrammarComponents ;
  nt_import_headers_semantics_and_grammars_ (_inLexique, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_includedGrammarComponents, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap, var_cas_ioGrammarComponentsMap, var_cas_ioOptionsComponentsMap, var_cas_inclusionsForImplementationFile, var_cas_inclusionsForHeaderFile, var_cas_optionsComponentsMapForUse, var_cas_modelMap, var_cas_actionMap, var_cas_componentEntitiesMap, var_cas_tableEnAvant) ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_19424 = _inLexique.parsingContext () ;
    GGS_typeTableRoutinesAimplementer  var_cas_UNUSED_tableRoutinesAimplementer ;
    var_cas_UNUSED_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_UNUSED_tableNomRoutinesDeclarees ;
    var_cas_UNUSED_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableEnAvant  var_cas_UNUSED_tableEnAvant ;
    var_cas_UNUSED_tableEnAvant = var_cas_tableEnAvant ;
    GGS_M_semanticsEntitiesForUse  var_cas_UNUSED_componentSemanticsEntitiesMap ;
    var_cas_UNUSED_componentSemanticsEntitiesMap = var_cas_componentEntitiesMap ;
    { bool syntaxRepeat = true ;
      while (syntaxRepeat) {
        switch (select_repeat_semantics_parser_0 (_inLexique)) {
          case 2 : {
            nt_semantics_declaration_importSemantics (_inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_UNUSED_componentSemanticsEntitiesMap, var_cas_UNUSED_tableNomRoutinesDeclarees, var_cas_UNUSED_tableEnAvant, var_cas_UNUSED_tableRoutinesAimplementer) ;
            } break ;
          default :
            syntaxRepeat = false ;
            break ;
        }
      }
    }
  //--- Branch of parse/rewind instruction
    _inLexique.setParsingContext (context_19424) ;
    GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer ;
    var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees ;
    var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
    var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
    { bool syntaxRepeat = true ;
      while (syntaxRepeat) {
        switch (select_repeat_semantics_parser_0 (_inLexique)) {
          case 2 : {
            nt_semantics_declaration_ (_inLexique, var_cas_componentEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_optionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer) ;
            } break ;
          default :
            syntaxRepeat = false ;
            break ;
        }
      }
    }
  //--- End of parse/rewind instruction
  if (((! (var_cas_ioSemanticsComponentsMap.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (545)) SOURCE_FILE_AT_LINE (545))))).isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap ;
    var_cas_optionsComponentsMap = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
    var_cas_ioSemanticsComponentsMap.method_insertKey (_inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentEntitiesMap SOURCE_FILE_AT_LINE (548)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeTableNomRoutinesDeclarees::element_type * operand_20016 = var_cas_tableNomRoutinesDeclarees.firstObject () ;
  while ((operand_20016 != NULL)) {
    macroValidPointer (operand_20016) ;
    if (((! (var_cas_tableRoutinesAimplementer.reader_hasKey (_inLexique, operand_20016->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (564)) SOURCE_FILE_AT_LINE (564))))).isBuiltAndTrue ()) {
      operand_20016->mKey.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the routine '")) + (operand_20016->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (565))))) + (GGS_string (true, "' is not implemented within the component"))) SOURCE_FILE_AT_LINE (567)) ;
    }
    operand_20016 = operand_20016->nextObject () ;
  }
  if (var_cas_componentName._isBuilt () &&
      var_cas_inclusionsForHeaderFile._isBuilt () &&
      var_cas_defLexique._isBuilt () &&
      var_cas_listeEntitesAengendrer._isBuilt () &&
      var_cas_inclusionsForImplementationFile._isBuilt ()) {
    ::routine_generateSemanticsComponent (_inLexique,  var_cas_componentName,  var_cas_inclusionsForHeaderFile,  var_cas_defLexique,  var_cas_listeEntitesAengendrer,  var_cas_inclusionsForImplementationFile SOURCE_FILE_AT_LINE (571)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_460_24_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_460_24_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  GGS_lstring  var_cas_componentName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_componentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  ::routine_enterBuiltinTypes (_inLexique,  var_cas_componentSemanticsEntitiesMap SOURCE_FILE_AT_LINE (602)) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  var_cas_includedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_ModelMap  var_cas_modelMap ;
  GGS_ActionMap  var_cas_actionMap ;
  nt_import_headers_semantics_and_grammars_importSemantics (_inLexique, var_cas_ioSemanticsComponentsMap, var_cas_includedSemanticsComponents, var_cas_includedOptionComponents, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
  GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer ;
  var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees ;
  var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_importSemantics (_inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (((! (var_cas_ioSemanticsComponentsMap.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (635)) SOURCE_FILE_AT_LINE (635))))).isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap ;
    var_cas_optionsComponentsMap = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
    var_cas_ioSemanticsComponentsMap.method_insertKey (_inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentSemanticsEntitiesMap SOURCE_FILE_AT_LINE (638)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_460_24_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_460_24_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_460_24_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'import_headers_semantics_and_grammars'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_703_45_ (galgas_scanner & _inLexique,
                                GGS_stringset  &var_cas_outImportedSemanticsComponents,
                                GGS_stringset  &var_cas_outIncludedMetamodelComponents,
                                GGS_stringset  &var_cas_outImportedOptionComponents,
                                GGS_stringset  &var_cas_outImportedGrammarComponents,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_stringset  &var_cas_outInclusionsForImplementationFile,
                                GGS_stringset  &var_cas_outInclusionsForHeaderFile,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant) {
  var_cas_outActionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outInclusionsForHeaderFile = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outInclusionsForImplementationFile = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outIncludedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedOptionComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedGrammarComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_ioOptionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "char"), GGS_location (_inLexique) COMMA_HERE), GGS_CharModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (734)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "string"), GGS_location (_inLexique) COMMA_HERE), GGS_StringModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (736)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "uint"), GGS_location (_inLexique) COMMA_HERE), GGS_UIntModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (738)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "sint"), GGS_location (_inLexique) COMMA_HERE), GGS_SIntModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (740)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "uint64"), GGS_location (_inLexique) COMMA_HERE), GGS_UInt64Model::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (742)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "sint64"), GGS_location (_inLexique) COMMA_HERE), GGS_SInt64Model::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (744)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "bool"), GGS_location (_inLexique) COMMA_HERE), GGS_BoolModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (746)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "double"), GGS_location (_inLexique) COMMA_HERE), GGS_DoubleModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (748)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lchar"), GGS_location (_inLexique) COMMA_HERE), GGS_LCharModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (750)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lstring"), GGS_location (_inLexique) COMMA_HERE), GGS_LStringModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (752)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "luint"), GGS_location (_inLexique) COMMA_HERE), GGS_LUIntModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (754)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lsint"), GGS_location (_inLexique) COMMA_HERE), GGS_LSIntModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (756)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "luint64"), GGS_location (_inLexique) COMMA_HERE), GGS_LUInt64Model::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (758)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lsint64"), GGS_location (_inLexique) COMMA_HERE), GGS_LSInt64Model::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (760)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lbool"), GGS_location (_inLexique) COMMA_HERE), GGS_LBoolModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (762)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "ldouble"), GGS_location (_inLexique) COMMA_HERE), GGS_LDoubleModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (764)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "location"), GGS_location (_inLexique) COMMA_HERE), GGS_LocationModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (766)) ;
  var_cas_outModelMap.method_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "stringset"), GGS_location (_inLexique) COMMA_HERE), GGS_StringsetModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (768)) ;
  ::routine_enterBuiltinTypes (_inLexique,  var_cas_ioComponentSemanticsEntitiesMap SOURCE_FILE_AT_LINE (770)) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents ;
  var_cas_alreadyImportedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents ;
  var_cas_alreadyImportedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
              GGS_lstring  var_cas_optionComponentName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_optionComponentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              var_cas_outImportedOptionComponents._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (781))) ;
              GGS_M_cli_options  var_cas_boolOptionsMap ;
              GGS_M_cli_options  var_cas_uintOptionsMap ;
              GGS_M_cli_options  var_cas_stringOptionsMap ;
              switch (select_semantics_parser_3 (_inLexique)) {
                case 1 : {
                  if (var_cas_ioOptionsComponentsMap._isBuilt ()) {
                    var_cas_ioOptionsComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (786)) ;
                  }
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_fileName ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_fileName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  GGS_M_optionComponents  var_cas_importedOptionComponentsMap ;
                  var_cas_importedOptionComponentsMap = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
                  nt_parse_option_component_for_importing_ (_inLexique, var_cas_fileName, var_cas_importedOptionComponentsMap) ;
                  if (var_cas_importedOptionComponentsMap._isBuilt ()) {
                    var_cas_importedOptionComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (796)) ;
                  }
                  } break ;
                default :
                  break ;
              }
              var_cas_ioOptionsComponentsMapForUse.method_insertKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (798)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
              GGS_lstring  var_cas_grammarComponentName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_grammarComponentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              var_cas_outImportedGrammarComponents._addAssign_operation (var_cas_grammarComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (803))) ;
              GGS_M_grammarComponents  var_cas_grammarComponentsMap ;
              switch (select_semantics_parser_4 (_inLexique)) {
                case 1 : {
                  var_cas_grammarComponentsMap = var_cas_ioGrammarComponentsMap ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_sourceFile.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  var_cas_grammarComponentsMap = GGS_M_grammarComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
                  nt_parse_grammar_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_grammarComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              GGS_M_nonterminalSymbolAltsForGrammar  var_cas_nonterminalSymbolParametersMap ;
              GGS_lstring  var_cas_28916 ;
              GGS_M_optionComponents  var_cas_28919 ;
              if (var_cas_grammarComponentsMap._isBuilt ()) {
                var_cas_grammarComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_grammarComponentName, var_cas_nonterminalSymbolParametersMap, var_cas_28916, var_cas_28919 SOURCE_FILE_AT_LINE (820)) ;
              }
              GGS_M_nonterminalSymbolAlts  var_cas_grammarAltMap ;
              var_cas_grammarAltMap = GGS_M_nonterminalSymbolAlts::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_M_nonterminalSymbolAltsForGrammar::element_type * operand_29025 = var_cas_nonterminalSymbolParametersMap.firstObject () ;
              while ((operand_29025 != NULL)) {
                macroValidPointer (operand_29025) ;
                GGS_L_EXsignature  var_cas_formalParametersList ;
                var_cas_formalParametersList = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                GGS_L_signature::element_type * operand_29184 = operand_29025->mInfo.mFormalParametersList.firstObject () ;
                while ((operand_29184 != NULL)) {
                  macroValidPointer (operand_29184) ;
                  GGS_AC_semanticsEntity  var_cas_e ;
                  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
                    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, operand_29184->mGalgasTypeName, var_cas_e SOURCE_FILE_AT_LINE (826)) ;
                  }
                  GGS_AC_galgasType  var_cas_type ;
                  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_e.getPtr ()) ;
                    if (ptrExtraire_ == NULL) {
                      var_cas_type._drop_operation () ;
                      if (var_cas_e.getPtr () != NULL) {
                        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
                        C_String message2_ ;
                        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
                        message2_ << var_cas_e (HERE)->message_messageTypeEntite () ;
                        operand_29184->mGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (828)) ;
                      }
                    }else{
                      macroValidPointer (ptrExtraire_) ;
                      var_cas_type = ptrExtraire_->aDefType ;
                    }
                  }
                  var_cas_formalParametersList._addAssign_operation (var_cas_type, operand_29184->mFormalArgumentPassingMode) ;
                  operand_29184 = operand_29184->nextObject () ;
                }
                var_cas_grammarAltMap.method_insertKey (_inLexique, operand_29025->mKey, var_cas_formalParametersList, operand_29025->mInfo.mReturnedEntityTypeName SOURCE_FILE_AT_LINE (831)) ;
                operand_29025 = operand_29025->nextObject () ;
              }
              GGS_AC_semanticsEntity  var_cas_e ;
              var_cas_e = GGS_C_grammarForSemantics::constructor_new (_inLexique, var_cas_grammarAltMap COMMA_HERE) ;
              var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_grammarComponentName, var_cas_e SOURCE_FILE_AT_LINE (834)) ;
              GGS_lstring  var_cas_path ;
              var_cas_path = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_extension ;
              var_cas_extension = GGS_lstring::constructor_new (_inLexique, GGS_string (true, "h"), GGS_location (_inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_fileNameWithPath ;
              if (var_cas_path._isBuilt () &&
                  var_cas_grammarComponentName._isBuilt () &&
                  var_cas_extension._isBuilt ()) {
                ::routine_buildFileNameWithPath (_inLexique,  var_cas_fileNameWithPath,  var_cas_path,  var_cas_grammarComponentName,  var_cas_extension SOURCE_FILE_AT_LINE (838)) ;
              }
              var_cas_outInclusionsForImplementationFile._addAssign_operation (var_cas_fileNameWithPath.reader_string (_inLexique SOURCE_FILE_AT_LINE (839))) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
              GGS_lstring  var_cas_componentName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_componentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              switch (select_semantics_parser_5 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_sourceFile.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              if (((! (var_cas_outImportedSemanticsComponents.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (856)) SOURCE_FILE_AT_LINE (856))))).isBuiltAndTrue ()) {
                GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
                GGS_M_optionComponents  var_cas_importedOptionsComponentsMap ;
                GGS_ModelMap  var_cas_30781 ;
                GGS_ActionMap  var_cas_30784 ;
                GGS_stringset  var_cas_30787 ;
                GGS_stringset  var_cas_30790 ;
                GGS_stringset  var_cas_30793 ;
                if (var_cas_ioSemanticsComponentsMap._isBuilt ()) {
                  var_cas_ioSemanticsComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_componentName, var_cas_30781, var_cas_30784, var_cas_30787, var_cas_30790, var_cas_30793, var_cas_importedOptionsComponentsMap, var_cas_importedEntities SOURCE_FILE_AT_LINE (859)) ;
                }
                GGS_M_semanticsEntitiesForUse::element_type * operand_30877 = var_cas_importedEntities.firstObject () ;
                while ((operand_30877 != NULL)) {
                  macroValidPointer (operand_30877) ;
                  if (((! (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, operand_30877->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (861)) SOURCE_FILE_AT_LINE (861))))).isBuiltAndTrue ()) {
                    var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, operand_30877->mKey, operand_30877->mInfo.aDefEntite SOURCE_FILE_AT_LINE (862)) ;
                  }
                  operand_30877 = operand_30877->nextObject () ;
                }
                var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (865))) ;
                GGS_M_optionComponents::element_type * operand_31324 = var_cas_importedOptionsComponentsMap.firstObject () ;
                while ((operand_31324 != NULL)) {
                  macroValidPointer (operand_31324) ;
                  if (((! (var_cas_ioOptionsComponentsMapForUse.reader_hasKey (_inLexique, operand_31324->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (868)) SOURCE_FILE_AT_LINE (868))))).isBuiltAndTrue ()) {
                    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '")) + (operand_31324->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (869))))) + (GGS_string (true, "' option component must have been imported"))) SOURCE_FILE_AT_LINE (870)) ;
                  }
                  operand_31324 = operand_31324->nextObject () ;
                }
              }
              ::routine_importSemanticsComponent (_inLexique,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName SOURCE_FILE_AT_LINE (875)) ;
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (884))) ;
              var_cas_outImportedSemanticsComponents._addAssign_operation (var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (885))) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
              GGS_lstring  var_cas_metamodelComponentName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_metamodelComponentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              switch (select_semantics_parser_6 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_sourceFile.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              if (((! (var_cas_outIncludedMetamodelComponents.reader_hasKey (_inLexique, var_cas_metamodelComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (902)) SOURCE_FILE_AT_LINE (902))))).isBuiltAndTrue ()) {
                GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
                GGS_lstring  var_cas_32703 ;
                GGS_entityToImplementMap  var_cas_32724 ;
                GGS_stringset  var_cas_32727 ;
                if (var_cas_ioMetamodelComponentMap._isBuilt ()) {
                  var_cas_ioMetamodelComponentMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelComponentName, var_cas_32703, var_cas_importedEntities, var_cas_32724, var_cas_32727 SOURCE_FILE_AT_LINE (904)) ;
                }
                GGS_M_semanticsEntitiesForUse::element_type * operand_32763 = var_cas_importedEntities.firstObject () ;
                while ((operand_32763 != NULL)) {
                  macroValidPointer (operand_32763) ;
                  if (((! (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, operand_32763->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (906)) SOURCE_FILE_AT_LINE (906))))).isBuiltAndTrue ()) {
                    var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, operand_32763->mKey, operand_32763->mInfo.aDefEntite SOURCE_FILE_AT_LINE (907)) ;
                  }
                  operand_32763 = operand_32763->nextObject () ;
                }
                var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (910))) ;
              }
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (913))) ;
              var_cas_outIncludedMetamodelComponents._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (914))) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_703_45_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_stringset  &var_cas_outIncludedSemanticsComponents,
                                GGS_stringset  &var_cas_outIncludedOptionComponents,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  var_cas_outActionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outIncludedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outIncludedOptionComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents ;
  var_cas_alreadyImportedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents ;
  var_cas_alreadyImportedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
              GGS_lstring  var_cas_optionComponentName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_optionComponentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              var_cas_outIncludedOptionComponents._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (944))) ;
              switch (select_semantics_parser_3 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_option_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_semantics_parser_4 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_grammar_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
              GGS_lstring  var_cas_componentName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_componentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              var_cas_outIncludedSemanticsComponents._addAssign_operation (var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (964))) ;
              switch (select_semantics_parser_5 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_sourceFile.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
              GGS_ModelMap  var_cas_35242 ;
              GGS_ActionMap  var_cas_35245 ;
              GGS_stringset  var_cas_35248 ;
              GGS_stringset  var_cas_35251 ;
              GGS_stringset  var_cas_35254 ;
              GGS_M_optionComponents  var_cas_35257 ;
              if (var_cas_ioSemanticsComponentsMap._isBuilt ()) {
                var_cas_ioSemanticsComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_componentName, var_cas_35242, var_cas_35245, var_cas_35248, var_cas_35251, var_cas_35254, var_cas_35257, var_cas_importedEntities SOURCE_FILE_AT_LINE (978)) ;
              }
              GGS_M_semanticsEntitiesForUse::element_type * operand_35309 = var_cas_importedEntities.firstObject () ;
              while ((operand_35309 != NULL)) {
                macroValidPointer (operand_35309) ;
                if (((! (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, operand_35309->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (980)) SOURCE_FILE_AT_LINE (980))))).isBuiltAndTrue ()) {
                  var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, operand_35309->mKey, operand_35309->mInfo.aDefEntite SOURCE_FILE_AT_LINE (981)) ;
                }
                operand_35309 = operand_35309->nextObject () ;
              }
              ::routine_importSemanticsComponent (_inLexique,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName SOURCE_FILE_AT_LINE (986)) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
              GGS_lstring  var_cas_metamodelComponentName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_metamodelComponentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              switch (select_semantics_parser_6 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_sourceFile.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
              GGS_lstring  var_cas_36421 ;
              GGS_entityToImplementMap  var_cas_36442 ;
              GGS_stringset  var_cas_36445 ;
              if (var_cas_ioMetamodelComponentMap._isBuilt ()) {
                var_cas_ioMetamodelComponentMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelComponentName, var_cas_36421, var_cas_importedEntities, var_cas_36442, var_cas_36445 SOURCE_FILE_AT_LINE (1011)) ;
              }
              GGS_M_semanticsEntitiesForUse::element_type * operand_36479 = var_cas_importedEntities.firstObject () ;
              while ((operand_36479 != NULL)) {
                macroValidPointer (operand_36479) ;
                if (((! (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, operand_36479->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1013)) SOURCE_FILE_AT_LINE (1013))))).isBuiltAndTrue ()) {
                  var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, operand_36479->mKey, operand_36479->mInfo.aDefEntite SOURCE_FILE_AT_LINE (1014)) ;
                }
                operand_36479 = operand_36479->nextObject () ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_703_45_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_semantics_parser_3 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_option_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_semantics_parser_4 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_grammar_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_semantics_parser_5 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_semantics_parser_6 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1028_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
  GGS_lstring  var_cas_routineName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_routineName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_routineName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1055)) SOURCE_FILE_AT_LINE (1055))).isBuiltAndTrue ()) {
    GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_routineName, var_cas_entite SOURCE_FILE_AT_LINE (1058)) ;
    }
    { cPtr_typeEntiteRoutine * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteRoutine *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_listeDeTypesPrecedenteDeclaration._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteRoutine::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_routineName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1059)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_listeDeTypesPrecedenteDeclaration = ptrExtraire_->aListeArgumentsFormels ;
      }
    }
    ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  GGS_location (_inLexique) SOURCE_FILE_AT_LINE (1061)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.method_insertKey (_inLexique, var_cas_routineName SOURCE_FILE_AT_LINE (1066)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteRoutine::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_routineName, var_cas_entite SOURCE_FILE_AT_LINE (1068)) ;
  }
  switch (select_semantics_parser_7 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      GGS_typeInstructionList  var_cas_ioInstructionList ;
      var_cas_ioInstructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_entityPropertyMap  var_cas_propertyMap ;
      var_cas_propertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_mapAsConstraintPropertyMap  var_cas_mapAsConstraintPropertyMap ;
      var_cas_mapAsConstraintPropertyMap = GGS_mapAsConstraintPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_stringset  var_cas_constraintPropertyDefinitionSet ;
      var_cas_constraintPropertyDefinitionSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
      GGS_callInstructionSharedPropertySignatureMap  var_cas_callInstructionSharedPropertySignatureMap ;
      var_cas_callInstructionSharedPropertySignatureMap = GGS_callInstructionSharedPropertySignatureMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_semantic_instructions_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_tableArgumentsMethode, var_cas_ioInstructionList, GGS_string (true, ""), var_cas_propertyMap, var_cas_mapAsConstraintPropertyMap, var_cas_constraintPropertyDefinitionSet, var_cas_callInstructionSharedPropertySignatureMap) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      GGS_typeEntityToGenerate  var_cas_ea ;
      var_cas_ea = GGS_typeRoutineAengendrer::constructor_new (_inLexique, var_cas_routineName, var_cas_listeTypeEtNomsArguments, var_cas_ioInstructionList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_ea) ;
      var_cas_tableRoutinesAimplementer.method_insertKey (_inLexique, var_cas_routineName SOURCE_FILE_AT_LINE (1102)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1028_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
  GGS_lstring  var_cas_routineName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_routineName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  var_cas_ioExternActionMap.method_insertKey (_inLexique, var_cas_routineName, var_cas_signature, GGS_bool (true, false) SOURCE_FILE_AT_LINE (1130)) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_routineName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1133)) SOURCE_FILE_AT_LINE (1133))).isBuiltAndTrue ()) {
    GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_routineName, var_cas_entite SOURCE_FILE_AT_LINE (1136)) ;
    }
    { cPtr_typeEntiteRoutine * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteRoutine *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_listeDeTypesPrecedenteDeclaration._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteRoutine::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_routineName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1137)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_listeDeTypesPrecedenteDeclaration = ptrExtraire_->aListeArgumentsFormels ;
      }
    }
    ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  GGS_location (_inLexique) SOURCE_FILE_AT_LINE (1139)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.method_insertKey (_inLexique, var_cas_routineName SOURCE_FILE_AT_LINE (1144)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteRoutine::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_routineName, var_cas_entite SOURCE_FILE_AT_LINE (1146)) ;
  }
  switch (select_semantics_parser_7 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      GGS_typeInstructionList  var_cas_ioInstructionList ;
      var_cas_ioInstructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
      var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_entityPropertyMap  var_cas_propertyMap ;
      var_cas_propertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_mapAsConstraintPropertyMap  var_cas_mapAsConstraintPropertyMap ;
      var_cas_mapAsConstraintPropertyMap = GGS_mapAsConstraintPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_stringset  var_cas_constraintPropertyDefinitionSet ;
      var_cas_constraintPropertyDefinitionSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
      GGS_callInstructionSharedPropertySignatureMap  var_cas_callInstructionSharedPropertySignatureMap ;
      var_cas_callInstructionSharedPropertySignatureMap = GGS_callInstructionSharedPropertySignatureMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_semantic_instructions_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_optionsComponentsMapForUse, var_cas_tableArgumentsMethode, var_cas_ioInstructionList, GGS_string (true, ""), var_cas_propertyMap, var_cas_mapAsConstraintPropertyMap, var_cas_constraintPropertyDefinitionSet, var_cas_callInstructionSharedPropertySignatureMap) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      var_cas_tableRoutinesAimplementer.method_insertKey (_inLexique, var_cas_routineName SOURCE_FILE_AT_LINE (1176)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1028_29_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  switch (select_semantics_parser_7 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      nt_semantic_instructions_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1186_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  GGS_bool var_cas_isAbstract ;
  switch (select_semantics_parser_8 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract_5F_5F) ;
      var_cas_isAbstract = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_isAbstract = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class_5F_5F) ;
  GGS_lstring  var_cas_className ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_className.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_9 (_inLexique)) {
    case 1 : {
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_className.reader_string (_inLexique SOURCE_FILE_AT_LINE (1207)) SOURCE_FILE_AT_LINE (1207))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_className.reader_string (_inLexique SOURCE_FILE_AT_LINE (1208)) SOURCE_FILE_AT_LINE (1208))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType::constructor_new (_inLexique, var_cas_className COMMA_HERE) ;
        var_cas_tableEnAvant.method_insertKey (_inLexique, var_cas_className, var_cas_t SOURCE_FILE_AT_LINE (1210)) ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      GGS_typeSuperClassesMap  var_cas_superClassesMap ;
      switch (select_semantics_parser_10 (_inLexique)) {
        case 1 : {
          var_cas_superClassesMap = GGS_typeSuperClassesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          } break ;
        case 2 : {
          GGS_lstring  var_cas_superClassName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_superClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_AC_semanticsEntity  var_cas_semanticsEntity ;
          if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
            var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_semanticsEntity SOURCE_FILE_AT_LINE (1223)) ;
          }
          GGS_AC_galgasType  var_cas_userType ;
          { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_semanticsEntity.getPtr ()) ;
            if (ptrExtraire_ == NULL) {
              var_cas_userType._drop_operation () ;
              if (var_cas_semanticsEntity.getPtr () != NULL) {
                TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
                C_String message2_ ;
                message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
                message2_ << var_cas_semanticsEntity (HERE)->message_messageTypeEntite () ;
                var_cas_superClassName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1225)) ;
              }
            }else{
              macroValidPointer (ptrExtraire_) ;
              var_cas_userType = ptrExtraire_->aDefType ;
            }
          }
          { cPtr_typeGalgasNewClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasNewClassType *> (var_cas_userType.getPtr ()) ;
            if (ptrExtraire_ == NULL) {
              var_cas_superClassesMap._drop_operation () ;
              if (var_cas_userType.getPtr () != NULL) {
                TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
                C_String message2_ ;
                message1_ (0 COMMA_HERE) << cPtr_typeGalgasNewClassType::static_string_message_messageGalgasType () ;
                message2_ << var_cas_userType (HERE)->message_messageGalgasType () ;
                var_cas_superClassName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1227)) ;
              }
            }else{
              macroValidPointer (ptrExtraire_) ;
              var_cas_superClassesMap = ptrExtraire_->mSuperClassMap ;
            }
          }
          var_cas_superClassesMap.method_insertKey (_inLexique, var_cas_superClassName SOURCE_FILE_AT_LINE (1229)) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasNewClassType::constructor_new (_inLexique, var_cas_className, var_cas_superClassesMap COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_className, GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) SOURCE_FILE_AT_LINE (1238)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_classToImplement::constructor_new (_inLexique, var_cas_className, var_cas_superClassesMap COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1186_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  GGS_bool var_cas_isAbstract ;
  switch (select_semantics_parser_8 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract_5F_5F) ;
      var_cas_isAbstract = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_isAbstract = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class_5F_5F) ;
  GGS_lstring  var_cas_className ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_className.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_9 (_inLexique)) {
    case 1 : {
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_className.reader_string (_inLexique SOURCE_FILE_AT_LINE (1267)) SOURCE_FILE_AT_LINE (1267))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_className.reader_string (_inLexique SOURCE_FILE_AT_LINE (1268)) SOURCE_FILE_AT_LINE (1268))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType::constructor_new (_inLexique, var_cas_className COMMA_HERE) ;
        var_cas_tableEnAvant.method_insertKey (_inLexique, var_cas_className, var_cas_t SOURCE_FILE_AT_LINE (1270)) ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      GGS_typeSuperClassesMap  var_cas_superClassesMap ;
      switch (select_semantics_parser_10 (_inLexique)) {
        case 1 : {
          var_cas_superClassesMap = GGS_typeSuperClassesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          } break ;
        case 2 : {
          GGS_lstring  var_cas_superClassName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_superClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_AC_semanticsEntity  var_cas_semanticsEntity ;
          if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
            var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_semanticsEntity SOURCE_FILE_AT_LINE (1283)) ;
          }
          GGS_AC_galgasType  var_cas_userType ;
          { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_semanticsEntity.getPtr ()) ;
            if (ptrExtraire_ == NULL) {
              var_cas_userType._drop_operation () ;
              if (var_cas_semanticsEntity.getPtr () != NULL) {
                TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
                C_String message2_ ;
                message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
                message2_ << var_cas_semanticsEntity (HERE)->message_messageTypeEntite () ;
                var_cas_superClassName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1285)) ;
              }
            }else{
              macroValidPointer (ptrExtraire_) ;
              var_cas_userType = ptrExtraire_->aDefType ;
            }
          }
          { cPtr_typeGalgasNewClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasNewClassType *> (var_cas_userType.getPtr ()) ;
            if (ptrExtraire_ == NULL) {
              var_cas_superClassesMap._drop_operation () ;
              if (var_cas_userType.getPtr () != NULL) {
                TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
                C_String message2_ ;
                message1_ (0 COMMA_HERE) << cPtr_typeGalgasNewClassType::static_string_message_messageGalgasType () ;
                message2_ << var_cas_userType (HERE)->message_messageGalgasType () ;
                var_cas_superClassName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1287)) ;
              }
            }else{
              macroValidPointer (ptrExtraire_) ;
              var_cas_superClassesMap = ptrExtraire_->mSuperClassMap ;
            }
          }
          var_cas_superClassesMap.method_insertKey (_inLexique, var_cas_superClassName SOURCE_FILE_AT_LINE (1289)) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1186_29_parse (galgas_scanner & _inLexique) {
  switch (select_semantics_parser_8 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract_5F_5F) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class_5F_5F) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  switch (select_semantics_parser_9 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      switch (select_semantics_parser_10 (_inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1300_20_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClassName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1300_20_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outMessageMap = GGS_classMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClasses = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outAttributeList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1300_20_parse (galgas_scanner & /* _inLexique */) {
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1340_20_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outSuperClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_AC_galgasType  var_cas_typeUtilisateur ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outSuperClassName, var_cas_entite SOURCE_FILE_AT_LINE (1355)) ;
  }
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_typeUtilisateur._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_outSuperClassName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1356)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_typeUtilisateur = ptrExtraire_->aDefType ;
    }
  }
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_typeUtilisateur.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_tableDesMethodes._drop_operation () ;
      var_cas_listeTousAttributsSemantiques._drop_operation () ;
      var_cas_tableDesClassesAncetres._drop_operation () ;
      var_cas_tableMessagesAbstraits._drop_operation () ;
      var_cas_tableAttributs._drop_operation () ;
      if (var_cas_typeUtilisateur.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_typeUtilisateur (HERE)->message_messageGalgasType () ;
        var_cas_outSuperClassName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1364)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_tableDesMethodes = ptrExtraire_->mReaderMap ;
      var_cas_listeTousAttributsSemantiques = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetres = ptrExtraire_->mAncestorClassesMap ;
      var_cas_tableMessagesAbstraits = ptrExtraire_->mMessagesMap ;
      var_cas_tableAttributs = ptrExtraire_->mNonExternAttributesMap ;
    }
  }
  var_cas_tableDesClassesAncetres.method_insertKey (_inLexique, var_cas_outSuperClassName SOURCE_FILE_AT_LINE (1366)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1340_20_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits) {
  GGS_lstring  var_cas_superClassName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_superClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_AC_galgasType  var_cas_typeUtilisateur ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_entite SOURCE_FILE_AT_LINE (1386)) ;
  }
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_typeUtilisateur._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_superClassName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1387)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_typeUtilisateur = ptrExtraire_->aDefType ;
    }
  }
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_typeUtilisateur.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_tableDesMethodes._drop_operation () ;
      var_cas_listeTousAttributsSemantiques._drop_operation () ;
      var_cas_tableDesClassesAncetres._drop_operation () ;
      var_cas_tableMessagesAbstraits._drop_operation () ;
      var_cas_tableAttributs._drop_operation () ;
      if (var_cas_typeUtilisateur.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_typeUtilisateur (HERE)->message_messageGalgasType () ;
        var_cas_superClassName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1395)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_tableDesMethodes = ptrExtraire_->mReaderMap ;
      var_cas_listeTousAttributsSemantiques = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetres = ptrExtraire_->mAncestorClassesMap ;
      var_cas_tableMessagesAbstraits = ptrExtraire_->mMessagesMap ;
      var_cas_tableAttributs = ptrExtraire_->mNonExternAttributesMap ;
    }
  }
  var_cas_tableDesClassesAncetres.method_insertKey (_inLexique, var_cas_superClassName SOURCE_FILE_AT_LINE (1397)) ;
  GGS_TypeModel  var_cas_type ;
  if (var_cas_ioModelMap._isBuilt ()) {
    var_cas_ioModelMap (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_type SOURCE_FILE_AT_LINE (1400)) ;
  }
  if (var_cas_type._isBuilt ()) {
    if (dynamic_cast <cPtr_ClassModel *> (var_cas_type.getPtr ()) != NULL) {
      cPtr_ClassModel * operand_52361 = dynamic_cast <cPtr_ClassModel *> (var_cas_type.getPtr ()) ;
      macroValidPointer (operand_52361) ; 
      var_cas_outSuperClasses = operand_52361->mSuperClasses ;
      var_cas_outAttributeList = operand_52361->mAttributeList ;
      var_cas_outMessageMap = operand_52361->mMessageMap ;
    }else{ // Else part
      var_cas_superClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '@")) + (var_cas_superClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1407))))) + (GGS_string (true, "' type is not a class"))) SOURCE_FILE_AT_LINE (1409)) ;
      var_cas_outSuperClasses._drop_operation () ;
      var_cas_outAttributeList._drop_operation () ;
      var_cas_outMessageMap._drop_operation () ;
    }
  }
  var_cas_outSuperClasses._addAssign_operation (var_cas_superClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1410))) ;
  var_cas_outMessageMap = GGS_classMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClasses = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outAttributeList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1340_20_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1424_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_abstractClassName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_abstractClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_11 (_inLexique)) {
    case 1 : {
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1438)) SOURCE_FILE_AT_LINE (1438))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1439)) SOURCE_FILE_AT_LINE (1439))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType::constructor_new (_inLexique, var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.method_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t SOURCE_FILE_AT_LINE (1441)) ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_lstring  var_cas_54700 ;
      nt_parent_class_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap, var_cas_54700) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeAttributsExternesCourants ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_bool var_cas_estAbstraite ;
      var_cas_estAbstraite = GGS_bool (true, true) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
      var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
      var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
      var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes ;
      var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_12 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
              GGS_lstring  var_cas_messageName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_messageName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_lstring  var_cas_messageText ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
              var_cas_messageText.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              if (((! (var_cas_inheritedMessageMap.reader_hasKey (_inLexique, var_cas_messageName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1488)) SOURCE_FILE_AT_LINE (1488))))).isBuiltAndTrue ()) {
                var_cas_messageMapForHeirs.method_insertKey (_inLexique, var_cas_messageName SOURCE_FILE_AT_LINE (1489)) ;
              }
              var_cas_tableMessagesClasseConcrete.method_insertKey (_inLexique, var_cas_messageName, var_cas_messageText SOURCE_FILE_AT_LINE (1491)) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 3 : {
              nt_abstract_method_ (_inLexique, var_cas_listeAttributsSemantiquesCourants, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_ioOptionsComponentsMapForUse) ;
              } break ;
            case 5 : {
              nt_overrided_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_ioOptionsComponentsMapForUse) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeClassInheritedMessagesMap::element_type * operand_57395 = var_cas_inheritedMessageMap.firstObject () ;
      while ((operand_57395 != NULL)) {
        macroValidPointer (operand_57395) ;
        if (((! (var_cas_tableMessagesClasseConcrete.reader_hasKey (_inLexique, operand_57395->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1537)) SOURCE_FILE_AT_LINE (1537))))).isBuiltAndTrue ()) {
          GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the message '")) + (operand_57395->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1538))))) + (GGS_string (true, "' is not defined"))) SOURCE_FILE_AT_LINE (1539)) ;
        }
        operand_57395 = operand_57395->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_abstractClassName, var_cas_entite SOURCE_FILE_AT_LINE (1551)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_typeDefClasseAbstraiteAimplementer::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_listeAttributsSemantiquesCourants, var_cas_listeAttributsExternesCourants, var_cas_tableDesClassesAncetres, var_cas_tableMessagesClasseConcrete COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1424_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_abstractClassName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_abstractClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_11 (_inLexique)) {
    case 1 : {
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1579)) SOURCE_FILE_AT_LINE (1579))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1580)) SOURCE_FILE_AT_LINE (1580))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType::constructor_new (_inLexique, var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.method_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t SOURCE_FILE_AT_LINE (1582)) ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_stringset  var_cas_superClasses ;
      GGS_typeListModel  var_cas_attributeList ;
      GGS_classMessageMap  var_cas_messageMap ;
      nt_parent_class_importSemantics (_inLexique, var_cas_ioModelMap, var_cas_superClasses, var_cas_attributeList, var_cas_messageMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeAttributsExternesCourants ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeList, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_bool var_cas_estAbstraite ;
      var_cas_estAbstraite = GGS_bool (true, true) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
      var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
      var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
      var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes ;
      var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
      var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
      var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_12 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
              GGS_lstring  var_cas_messageName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_messageName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_lstring  var_cas_messageText ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
              var_cas_messageText.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              if (((! (var_cas_inheritedMessageMap.reader_hasKey (_inLexique, var_cas_messageName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1637)) SOURCE_FILE_AT_LINE (1637))))).isBuiltAndTrue ()) {
                var_cas_messageMapForHeirs.method_insertKey (_inLexique, var_cas_messageName SOURCE_FILE_AT_LINE (1638)) ;
              }
              var_cas_tableMessagesClasseConcrete.method_insertKey (_inLexique, var_cas_messageName, var_cas_messageText SOURCE_FILE_AT_LINE (1640)) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 3 : {
              nt_abstract_method_ (_inLexique, var_cas_listeAttributsSemantiquesCourants, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse) ;
              } break ;
            case 5 : {
              nt_overrided_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeClassInheritedMessagesMap::element_type * operand_63370 = var_cas_inheritedMessageMap.firstObject () ;
      while ((operand_63370 != NULL)) {
        macroValidPointer (operand_63370) ;
        if (((! (var_cas_tableMessagesClasseConcrete.reader_hasKey (_inLexique, operand_63370->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1687)) SOURCE_FILE_AT_LINE (1687))))).isBuiltAndTrue ()) {
          GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the message '")) + (operand_63370->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1688))))) + (GGS_string (true, "' is not defined"))) SOURCE_FILE_AT_LINE (1689)) ;
        }
        operand_63370 = operand_63370->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_abstractClassName, var_cas_entite SOURCE_FILE_AT_LINE (1701)) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ClassModel::constructor_new (_inLexique, GGS_bool (true, true), var_cas_superClasses, var_cas_attributeList, var_cas_messageMap COMMA_HERE) ;
      var_cas_ioModelMap.method_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t SOURCE_FILE_AT_LINE (1704)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1424_29_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  switch (select_semantics_parser_11 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      nt_parent_class_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_12 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 3 : {
              nt_abstract_method_parse (_inLexique) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_parse (_inLexique) ;
              } break ;
            case 5 : {
              nt_overrided_method_parse (_inLexique) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1714_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_concreteClassName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_concreteClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if ((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_concreteClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1727)) SOURCE_FILE_AT_LINE (1727))).isBuiltAndTrue ()) {
    var_cas_concreteClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a non abstract class cannot be predeclared") SOURCE_FILE_AT_LINE (1728)) ;
  }
  GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
  GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
  GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
  GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
  GGS_lstring  var_cas_66038 ;
  nt_parent_class_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap, var_cas_66038) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
  GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
  GGS_typeListModel  var_cas_attributeListModel ;
  var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
  GGS_bool var_cas_estAbstraite ;
  var_cas_estAbstraite = GGS_bool (true, false) ;
  GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
  var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
  var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
  var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_tableDesMethodes ;
  var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_13 (_inLexique)) {
        case 2 : {
          nt_overrided_method_ (_inLexique, var_cas_concreteClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_ioOptionsComponentsMapForUse) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          GGS_lstring  var_cas_messageName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_messageName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_lstring  var_cas_messageText ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_messageText.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          if (((! (var_cas_inheritedMessageMap.reader_hasKey (_inLexique, var_cas_messageName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1792)) SOURCE_FILE_AT_LINE (1792))))).isBuiltAndTrue ()) {
            var_cas_messageMapForHeirs.method_insertKey (_inLexique, var_cas_messageName SOURCE_FILE_AT_LINE (1793)) ;
          }
          var_cas_tableMessagesClasseConcrete.method_insertKey (_inLexique, var_cas_messageName, var_cas_messageText SOURCE_FILE_AT_LINE (1795)) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 4 : {
          nt_non_abstract_method_ (_inLexique, var_cas_concreteClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_ioOptionsComponentsMapForUse) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeClassInheritedMessagesMap::element_type * operand_68518 = var_cas_inheritedMessageMap.firstObject () ;
  while ((operand_68518 != NULL)) {
    macroValidPointer (operand_68518) ;
    if (((! (var_cas_tableMessagesClasseConcrete.reader_hasKey (_inLexique, operand_68518->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1817)) SOURCE_FILE_AT_LINE (1817))))).isBuiltAndTrue ()) {
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the message '")) + (operand_68518->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1818))))) + (GGS_string (true, "' is not defined"))) SOURCE_FILE_AT_LINE (1819)) ;
    }
    operand_68518 = operand_68518->nextObject () ;
  }
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_concreteClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_concreteClassName, GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) SOURCE_FILE_AT_LINE (1830)) ;
  GGS_typeEntityToGenerate  var_cas_def ;
  var_cas_def = GGS_typeDefClasseNonAbstraiteAimplementer::constructor_new (_inLexique, var_cas_concreteClassName, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_tableDesClassesAncetres, var_cas_tableMessagesClasseConcrete COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1714_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_concreteClassName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_concreteClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if ((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_concreteClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1856)) SOURCE_FILE_AT_LINE (1856))).isBuiltAndTrue ()) {
    var_cas_concreteClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a non abstract class cannot be predeclared") SOURCE_FILE_AT_LINE (1857)) ;
  }
  GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
  GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
  GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
  GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
  GGS_lstring  var_cas_superClassName ;
  nt_parent_class_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap, var_cas_superClassName) ;
  GGS_typeListModel  var_cas_attributeList ;
  var_cas_attributeList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_classMessageMap  var_cas_messageMap ;
  var_cas_messageMap = GGS_classMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_superClasses ;
  var_cas_superClasses = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  if (((var_cas_superClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1889))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
    GGS_TypeModel  var_cas_type ;
    if (var_cas_ioModelMap._isBuilt ()) {
      var_cas_ioModelMap (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_type SOURCE_FILE_AT_LINE (1891)) ;
    }
    if (var_cas_type._isBuilt ()) {
      if (dynamic_cast <cPtr_ClassModel *> (var_cas_type.getPtr ()) != NULL) {
        cPtr_ClassModel * operand_71696 = dynamic_cast <cPtr_ClassModel *> (var_cas_type.getPtr ()) ;
        macroValidPointer (operand_71696) ; 
        var_cas_superClasses = operand_71696->mSuperClasses ;
        var_cas_attributeList = operand_71696->mAttributeList ;
        var_cas_messageMap = operand_71696->mMessageMap ;
      }else{ // Else part
        var_cas_superClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '@")) + (var_cas_superClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1898))))) + (GGS_string (true, "' type is not a class"))) SOURCE_FILE_AT_LINE (1900)) ;
        var_cas_superClasses._drop_operation () ;
        var_cas_attributeList._drop_operation () ;
        var_cas_messageMap._drop_operation () ;
      }
    }
    var_cas_superClasses._addAssign_operation (var_cas_superClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1901))) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
  GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
  GGS_typeListModel  var_cas_attributeListModel ;
  var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
  GGS_bool var_cas_estAbstraite ;
  var_cas_estAbstraite = GGS_bool (true, false) ;
  GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
  var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
  var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
  var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_tableDesMethodes ;
  var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_13 (_inLexique)) {
        case 2 : {
          GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
          var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
          nt_overrided_method_ (_inLexique, var_cas_concreteClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          GGS_lstring  var_cas_messageName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_messageName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_lstring  var_cas_messageText ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_messageText.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          if (((! (var_cas_inheritedMessageMap.reader_hasKey (_inLexique, var_cas_messageName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1969)) SOURCE_FILE_AT_LINE (1969))))).isBuiltAndTrue ()) {
            var_cas_messageMapForHeirs.method_insertKey (_inLexique, var_cas_messageName SOURCE_FILE_AT_LINE (1970)) ;
          }
          var_cas_tableMessagesClasseConcrete.method_insertKey (_inLexique, var_cas_messageName, var_cas_messageText SOURCE_FILE_AT_LINE (1972)) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 4 : {
          GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
          var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
          nt_non_abstract_method_ (_inLexique, var_cas_concreteClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeClassInheritedMessagesMap::element_type * operand_75719 = var_cas_inheritedMessageMap.firstObject () ;
  while ((operand_75719 != NULL)) {
    macroValidPointer (operand_75719) ;
    if (((! (var_cas_tableMessagesClasseConcrete.reader_hasKey (_inLexique, operand_75719->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1995)) SOURCE_FILE_AT_LINE (1995))))).isBuiltAndTrue ()) {
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the message '")) + (operand_75719->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1996))))) + (GGS_string (true, "' is not defined"))) SOURCE_FILE_AT_LINE (1997)) ;
    }
    operand_75719 = operand_75719->nextObject () ;
  }
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_concreteClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_concreteClassName, GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) SOURCE_FILE_AT_LINE (2008)) ;
  GGS_TypeModel  var_cas_t ;
  var_cas_t = GGS_ClassModel::constructor_new (_inLexique, GGS_bool (true, false), var_cas_superClasses, var_cas_attributeList, var_cas_messageMap COMMA_HERE) ;
  var_cas_ioModelMap.method_insertKey (_inLexique, var_cas_concreteClassName, var_cas_t SOURCE_FILE_AT_LINE (2010)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1714_29_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  nt_parent_class_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  nt_attributes_definition_list_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_13 (_inLexique)) {
        case 2 : {
          nt_overrided_method_parse (_inLexique) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 4 : {
          nt_non_abstract_method_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'abstract_method'             *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_abstract_method_semantics_parser_2018_23_ (galgas_scanner & _inLexique,
                                GGS_typeListeAttributsSemantiques  &/* var_cas_listeAttributsSemantiquesCourants */,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  GGS_lstring  var_cas_nomMethode ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomMethode.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  var_cas_tableDesMethodes.method_insertKey (_inLexique, var_cas_nomMethode, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (2042)) ;
  GGS_typeInstructionList  var_cas_listeInstructions ;
  var_cas_listeInstructions = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableMethodesAimplementer.method_insertAbstract (_inLexique, var_cas_nomMethode, var_cas_listeDeTypes, var_cas_listeTypeEtNomsArguments, var_cas_listeInstructions SOURCE_FILE_AT_LINE (2044)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_abstract_method_semantics_parser_2018_23_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parse_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_method_semantics_parser_2050_20_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  &var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeAttributsSemantiquesCourants,
                                const GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  &var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  &var_cas_tableAttributsHerites,
                                const GGS_bool &var_cas_inClassIsAbstract,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outMethodName,
                                GGS_typeInstructionList  &var_cas_outInstructionsList,
                                GGS_L_EXsignature  &var_cas_outMethodSignature,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_outMethodName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap ;
  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeSemanticAttributesMap::element_type * operand_79035 = var_cas_tableAttributsHerites.firstObject () ;
  while ((operand_79035 != NULL)) {
    macroValidPointer (operand_79035) ;
    GGS_typeCplusPlusName  var_cas_nomCpp ;
    var_cas_nomCpp = GGS_typeDirectName::constructor_new (_inLexique, operand_79035->mKey COMMA_HERE) ;
    var_cas_methodLocalVariablesMap.method_insertUsedConstInArgument (_inLexique, operand_79035->mKey, operand_79035->mInfo.mAttributType, var_cas_nomCpp SOURCE_FILE_AT_LINE (2075)) ;
    operand_79035 = operand_79035->nextObject () ;
  }
  GGS_lstring  var_cas_me_Constant ;
  var_cas_me_Constant = GGS_lstring::constructor_new (_inLexique, GGS_string (true, "self"), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_me_constantCppName ;
  var_cas_me_constantCppName = GGS_typeCppThisName::constructor_new (_inLexique COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_typeDefinition ;
  var_cas_typeDefinition = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_inCurrentClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.method_insertUsedConstInArgument (_inLexique, var_cas_me_Constant, var_cas_typeDefinition, var_cas_me_constantCppName SOURCE_FILE_AT_LINE (2088)) ;
  GGS_lstring  var_cas_super_Constant ;
  var_cas_super_Constant = GGS_lstring::constructor_new (_inLexique, GGS_string (true, "super"), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_super_constantCppName ;
  var_cas_super_constantCppName = GGS_typeCppInheritedName::constructor_new (_inLexique COMMA_HERE) ;
  var_cas_typeDefinition = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.method_insertUsedConstInArgument (_inLexique, var_cas_super_Constant, var_cas_typeDefinition, var_cas_super_constantCppName SOURCE_FILE_AT_LINE (2100)) ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_outMethodSignature, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_typeListeAttributsSemantiques::element_type * operand_80762 = var_cas_listeAttributsSemantiquesCourants.firstObject () ;
  while ((operand_80762 != NULL)) {
    macroValidPointer (operand_80762) ;
    operand_80762 = operand_80762->nextObject () ;
  }
  var_cas_outInstructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_entityPropertyMap  var_cas_propertyMap ;
  var_cas_propertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_mapAsConstraintPropertyMap  var_cas_mapAsConstraintPropertyMap ;
  var_cas_mapAsConstraintPropertyMap = GGS_mapAsConstraintPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_constraintPropertyDefinitionSet ;
  var_cas_constraintPropertyDefinitionSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_callInstructionSharedPropertySignatureMap  var_cas_callInstructionSharedPropertySignatureMap ;
  var_cas_callInstructionSharedPropertySignatureMap = GGS_callInstructionSharedPropertySignatureMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_outInstructionsList, GGS_string (true, ""), var_cas_propertyMap, var_cas_mapAsConstraintPropertyMap, var_cas_constraintPropertyDefinitionSet, var_cas_callInstructionSharedPropertySignatureMap) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_method_semantics_parser_2050_20_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'non_abstract_method'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_non_abstract_method_semantics_parser_2139_27_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  &var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeAttributsSemantiquesCourants,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  &var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                const GGS_bool &var_cas_inClassIsAbstract,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_method_ (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_ioOptionsComponentsMapForUse) ;
  var_cas_tableDesMethodes.method_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (2179)) ;
  var_cas_tableMethodesAimplementer.method_insertNotAbstract (_inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList SOURCE_FILE_AT_LINE (2180)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_non_abstract_method_semantics_parser_2139_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  nt_parse_method_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'overrided_method'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_overrided_method_semantics_parser_2188_24_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  &var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeAttributsSemantiquesCourants,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  &var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                const GGS_bool &var_cas_inClassIsAbstract,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_override) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_method_ (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_ioOptionsComponentsMapForUse) ;
  GGS_L_EXsignature  var_cas_listeDeTypesMethodeOriginale ;
  if (var_cas_tableDesMethodes._isBuilt ()) {
    var_cas_tableDesMethodes (HERE)->method_searchKey (_inLexique, var_cas_methodName, var_cas_listeDeTypesMethodeOriginale SOURCE_FILE_AT_LINE (2231)) ;
  }
  ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesMethodeOriginale,  var_cas_methodSignature,  GGS_location (_inLexique) SOURCE_FILE_AT_LINE (2233)) ;
  var_cas_tableMethodesAimplementer.method_insertNotAbstract (_inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList SOURCE_FILE_AT_LINE (2238)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_overrided_method_semantics_parser_2188_24_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_override) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  nt_parse_method_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'formal_arguments_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_arguments_list_semantics_parser_2249_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_EXsignature  &var_cas_listeDeTypes,
                                GGS_typeVariablesMap  &var_cas_tableArgumentsMethode,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_L_signature  &var_cas_outSignatureForGrammar) {
  var_cas_listeDeTypes = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_listeTypeEtNomsArguments = GGS_typeListeTypesEtNomsArgMethode::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_outSignatureForGrammar = GGS_L_signature::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_14 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_3F) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, true) ;
          switch (select_semantics_parser_15 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
              var_cas_tableArgumentsMethode.method_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (2281)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
              var_cas_tableArgumentsMethode.method_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (2286)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_16 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              GGS_lstring  var_cas_nomArgument ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, true)) ;
              var_cas_tableArgumentsMethode.method_insertUnusedInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (2307)) ;
              } break ;
            case 2 : {
              GGS_lstring  var_cas_nomArgument ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, true)) ;
              var_cas_tableArgumentsMethode.method_insertInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (2313)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_21) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          switch (select_semantics_parser_17 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, false)) ;
              var_cas_tableArgumentsMethode.method_insertUnusedInOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (2334)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, false)) ;
              var_cas_tableArgumentsMethode.method_insertInOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (2339)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_typeCplusPlusName  var_cas_natureNom ;
          var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, false) ;
          var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
          var_cas_tableArgumentsMethode.method_insertOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (2359)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_arguments_list_semantics_parser_2249_29_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_L_signature  &var_cas_outSignature) {
  var_cas_outSignature = GGS_L_signature::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_14 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_3F) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_15 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_16 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_21) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_17 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_arguments_list_semantics_parser_2249_29_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_14 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_3F) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_15 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_16 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_21) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_17 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
          nt_formal_argument_type_parse (_inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'type_parsing'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_type_parsing_semantics_parser_2416_20_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_definitionType,
                                GGS_lstring  &var_cas_outTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_entite SOURCE_FILE_AT_LINE (2423)) ;
  }
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_definitionType._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_outTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (2424)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_definitionType = ptrExtraire_->aDefType ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_type_parsing_semantics_parser_2416_20_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2433_45_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_inTargetVarName,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3D) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_AC_galgasType  var_cas_targetVarType ;
  GGS_typeCplusPlusName  var_cas_targetVarCppName ;
  var_cas_ioVariablesMap.method_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, var_cas_targetVarType, var_cas_targetVarCppName SOURCE_FILE_AT_LINE (2454)) ;
  ::routine_checkAssignmentTypesCompatibility (_inLexique,  var_cas_targetVarType,  var_cas_sourceType,  GGS_location (_inLexique),  GGS_bool (true, true) SOURCE_FILE_AT_LINE (2456)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_assignmentInstruction::constructor_new (_inLexique, var_cas_targetVarCppName, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2433_45_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3D) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'input_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_input_parameters_list_semantics_parser_2466_29_ (galgas_scanner & _inLexique,
                                GGS_L_assignedVariables  &var_cas_listeAffectationParametresEffectifs,
                                GGS_typeCplusPlusNameList  &var_cas_outAllVariablesList,
                                GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap) {
  GGS_typeListeCibles  var_cas_listeCibles ;
  var_cas_listeCibles = GGS_typeListeCibles::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_18 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          GGS_typeCible  var_cas_typeEntiteDestination ;
          nt_target_entity_ (_inLexique, var_cas_typeEntiteDestination, var_cas_ioVariablesMap) ;
          var_cas_listeCibles._addAssign_operation (var_cas_typeEntiteDestination) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_bool var_cas_ellipsis ;
  switch (select_semantics_parser_19 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E_2E_2E) ;
      var_cas_ellipsis = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_ellipsis = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  if (((var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2488))) < (var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2488)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "too much arguments: ")) + (var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2489)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2489))))) + (GGS_string (true, " expected, ")))) + (var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2490)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2490))))) + (GGS_string (true, " found"))) SOURCE_FILE_AT_LINE (2492)) ;
    var_cas_outAllVariablesList._drop_operation () ;
    var_cas_listeAffectationParametresEffectifs._drop_operation () ;
  }else if (((((var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2492))) > (var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2492)))) & ((! (var_cas_ellipsis))))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "argument(s) missing: ")) + (var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2493)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2493))))) + (GGS_string (true, " expected, ")))) + (var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2494)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2494))))) + (GGS_string (true, " found"))) SOURCE_FILE_AT_LINE (2496)) ;
    var_cas_outAllVariablesList._drop_operation () ;
    var_cas_listeAffectationParametresEffectifs._drop_operation () ;
  }else{
    var_cas_listeAffectationParametresEffectifs = GGS_L_assignedVariables::constructor_emptyList (_inLexique COMMA_HERE) ;
    var_cas_outAllVariablesList = GGS_typeCplusPlusNameList::constructor_emptyList (_inLexique COMMA_HERE) ;
    GGS_typeListeAttributsSemantiques::element_type * operand_95678 = var_cas_listeAttributsSemantiques.firstObject () ;
    GGS_typeListeCibles::element_type * operand_95764 = var_cas_listeCibles.firstObject () ;
    while ((operand_95678 != NULL)
        && (operand_95764 != NULL)) {
      macroValidPointer (operand_95678) ;
      macroValidPointer (operand_95764) ;
      GGS_lstring  var_cas_nomAttributSource ;
      var_cas_nomAttributSource = operand_95678->aNomAttribut ;
      if (operand_95764->aCible._isBuilt ()) {
        operand_95764->aCible (HERE)->method_verifierType (_inLexique, operand_95678->mAttributType, var_cas_nomAttributSource, var_cas_listeAffectationParametresEffectifs, var_cas_outAllVariablesList SOURCE_FILE_AT_LINE (2502)) ;
      }
      operand_95678 = operand_95678->nextObject () ;
      operand_95764 = operand_95764->nextObject () ;
    }
  }
  GGS_typeCplusPlusName  var_cas_nullName ;
  var_cas_nullName = GGS_typeNullName::constructor_new (_inLexique COMMA_HERE) ;
  if (var_cas_outAllVariablesList._isBuilt () &&
      var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2509))._isBuilt () &&
      var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2510))._isBuilt () &&
      var_cas_nullName._isBuilt ()) {
    ::routine_appendJokersIfNeeded (_inLexique,  var_cas_outAllVariablesList,  var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2509)),  var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2510)),  var_cas_nullName SOURCE_FILE_AT_LINE (2508)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_input_parameters_list_semantics_parser_2466_29_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_18 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          nt_target_entity_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_19 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E_2E_2E) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'target_entity'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_target_entity_semantics_parser_2517_21_ (galgas_scanner & _inLexique,
                                GGS_typeCible  &var_cas_typeEntiteDestination,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap) {
  GGS_lstring  var_cas_nomVariableDest ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomVariableDest.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_AC_galgasType  var_cas_typeVarDest ;
  GGS_typeCplusPlusName  var_cas_nomCppDest ;
  var_cas_ioVariablesMap.method_searchForWriteAccess (_inLexique, var_cas_nomVariableDest, var_cas_typeVarDest, var_cas_nomCppDest SOURCE_FILE_AT_LINE (2525)) ;
  var_cas_typeEntiteDestination = GGS_typeEntiteDest::constructor_new (_inLexique, var_cas_typeVarDest, var_cas_nomCppDest, GGS_location (_inLexique) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_target_entity_semantics_parser_2517_21_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'target_entity'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_target_entity_semantics_parser_2531_21_ (galgas_scanner & _inLexique,
                                GGS_typeCible  &var_cas_typeEntiteDestination,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
  var_cas_typeEntiteDestination = GGS_typeJoker::constructor_new (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_target_entity_semantics_parser_2531_21_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2547_45_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_3D) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.method_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource SOURCE_FILE_AT_LINE (2558)) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleAddAssignOperatorCall (_inLexique, GGS_location (_inLexique), var_cas_formalParametersList SOURCE_FILE_AT_LINE (2561)) ;
  }
  GGS_typeTypesList  var_cas_typeList ;
  var_cas_typeList = GGS_typeTypesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeExpressionList  var_cas_expressionList ;
  var_cas_expressionList = GGS_typeExpressionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList._addAssign_operation (var_cas_resultType, GGS_location (_inLexique)) ;
        var_cas_expressionList._addAssign_operation (var_cas_expression) ;
      switch (select_repeat_semantics_parser_20 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (((var_cas_formalParametersList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2581))) != (var_cas_typeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2581)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((var_cas_typeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2582)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2582))) + (GGS_string (true, " argument(s), while ")))) + (var_cas_formalParametersList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2582)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2582))))) + (GGS_string (true, " are needed"))) SOURCE_FILE_AT_LINE (2583)) ;
  }else{
    GGS_typeListeAttributsSemantiques::element_type * operand_98973 = var_cas_formalParametersList.firstObject () ;
    GGS_typeTypesList::element_type * operand_99047 = var_cas_typeList.firstObject () ;
    while ((operand_98973 != NULL)
        && (operand_99047 != NULL)) {
      macroValidPointer (operand_98973) ;
      macroValidPointer (operand_99047) ;
      ::routine_checkAssignmentTypesCompatibility (_inLexique,  operand_98973->mAttributType,  operand_99047->mType,  operand_99047->mEndOfExpressionLocation,  GGS_bool (true, true) SOURCE_FILE_AT_LINE (2587)) ;
      operand_98973 = operand_98973->nextObject () ;
      operand_99047 = operand_99047->nextObject () ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeAppendInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2547_45_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_3D) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
        nt_expression_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_20 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2606_45_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3D) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.method_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource SOURCE_FILE_AT_LINE (2617)) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleMinusAssignOperatorCall (_inLexique, GGS_location (_inLexique), var_cas_formalParametersList SOURCE_FILE_AT_LINE (2620)) ;
  }
  GGS_typeTypesList  var_cas_typeList ;
  var_cas_typeList = GGS_typeTypesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeExpressionList  var_cas_expressionList ;
  var_cas_expressionList = GGS_typeExpressionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList._addAssign_operation (var_cas_resultType, GGS_location (_inLexique)) ;
        var_cas_expressionList._addAssign_operation (var_cas_expression) ;
      switch (select_repeat_semantics_parser_21 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (((var_cas_formalParametersList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2640))) != (var_cas_typeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2640)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((var_cas_typeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2641)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2641))) + (GGS_string (true, " argument(s), while ")))) + (var_cas_formalParametersList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2641)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2641))))) + (GGS_string (true, " are needed"))) SOURCE_FILE_AT_LINE (2642)) ;
  }else{
    GGS_typeListeAttributsSemantiques::element_type * operand_101430 = var_cas_formalParametersList.firstObject () ;
    GGS_typeTypesList::element_type * operand_101504 = var_cas_typeList.firstObject () ;
    while ((operand_101430 != NULL)
        && (operand_101504 != NULL)) {
      macroValidPointer (operand_101430) ;
      macroValidPointer (operand_101504) ;
      ::routine_checkAssignmentTypesCompatibility (_inLexique,  operand_101430->mAttributType,  operand_101504->mType,  operand_101504->mEndOfExpressionLocation,  GGS_bool (true, true) SOURCE_FILE_AT_LINE (2646)) ;
      operand_101430 = operand_101430->nextObject () ;
      operand_101504 = operand_101504->nextObject () ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeRemoveInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2606_45_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3D) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
        nt_expression_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_21 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2665_45_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_2B) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.method_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource SOURCE_FILE_AT_LINE (2676)) ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleIncrementOperatorCall (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (2678)) ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeIncrementInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2665_45_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_2B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2692_45_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_2D) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.method_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource SOURCE_FILE_AT_LINE (2703)) ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleDecrementOperatorCall (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (2705)) ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeDecrementInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2692_45_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_2D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'actual_parameters_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_actual_parameters_list_semantics_parser_2715_30_ (galgas_scanner & _inLexique,
                                const GGS_L_EXsignature  &var_cas_listeTypesParametresFormels,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_outExpressionList, var_cas_ioVariablesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique,  var_cas_listeTypesParametresFormels,  var_cas_listeTypesParametresEffectifs,  GGS_location (_inLexique),  var_cas_ioInstructionList,  var_cas_outExpressionList SOURCE_FILE_AT_LINE (2733)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_actual_parameters_list_semantics_parser_2715_30_parse (galgas_scanner & _inLexique) {
  nt_parse_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'parse_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_parameters_list_semantics_parser_2746_29_ (galgas_scanner & _inLexique,
                                GGS_L_actualParametersSignature  &var_cas_listeTypesParametresEffectifs,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_outExpressionList = GGS_typeExpressionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_listeTypesParametresEffectifs = GGS_L_actualParametersSignature::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_exclusiveVariables ;
  var_cas_exclusiveVariables = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_22 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
          GGS_AC_galgasType  var_cas_expressionType ;
          GGS_typeExpression  var_cas_expressionValue ;
          nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_expressionValue, var_cas_expressionType) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterOut (_inLexique COMMA_HERE) ;
          var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_expressionType, var_cas_parameterPassingMode) ;
          var_cas_outExpressionList._addAssign_operation (var_cas_expressionValue) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterIn (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_23 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
              GGS_AC_galgasType  var_cas_typeArgument ;
              var_cas_typeArgument = GGS_typeGalgas_jokerInParameterList::constructor_new (_inLexique COMMA_HERE) ;
              var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
              GGS_typeExpression  var_cas_e ;
              var_cas_e = GGS_typeJokerInExpression::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
              var_cas_outExpressionList._addAssign_operation (var_cas_e) ;
              } break ;
            case 2 : {
              GGS_AC_galgasType  var_cas_typeArgument ;
              GGS_typeCplusPlusName  var_cas_nomCppArgument ;
              GGS_lstring  var_cas_nomArgument ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              var_cas_ioVariablesMap.method_searchForWriteAccess (_inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument SOURCE_FILE_AT_LINE (2784)) ;
              var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
              GGS_typeExpression  var_cas_e ;
              var_cas_e = GGS_typeVarInExpression::constructor_new (_inLexique, var_cas_nomCppArgument COMMA_HERE) ;
              var_cas_outExpressionList._addAssign_operation (var_cas_e) ;
              if ((var_cas_exclusiveVariables.reader_hasKey (_inLexique, var_cas_nomArgument.reader_string (_inLexique SOURCE_FILE_AT_LINE (2788)) SOURCE_FILE_AT_LINE (2788))).isBuiltAndTrue ()) {
                var_cas_nomArgument.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this object is already named as input or output/input effectif argument of current instruction") SOURCE_FILE_AT_LINE (2790)) ;
              }else{
                var_cas_exclusiveVariables._addAssign_operation (var_cas_nomArgument.reader_string (_inLexique SOURCE_FILE_AT_LINE (2791))) ;
              }
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21_3F) ;
          GGS_AC_galgasType  var_cas_typeArgument ;
          GGS_typeCplusPlusName  var_cas_nomCppArgument ;
          GGS_lstring  var_cas_nomArgument ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          var_cas_ioVariablesMap.method_searchForReadWriteAccess (_inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument SOURCE_FILE_AT_LINE (2800)) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterOutIn (_inLexique COMMA_HERE) ;
          var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
          GGS_typeExpression  var_cas_e ;
          var_cas_e = GGS_typeVarInExpression::constructor_new (_inLexique, var_cas_nomCppArgument COMMA_HERE) ;
          var_cas_outExpressionList._addAssign_operation (var_cas_e) ;
          if ((var_cas_exclusiveVariables.reader_hasKey (_inLexique, var_cas_nomArgument.reader_string (_inLexique SOURCE_FILE_AT_LINE (2805)) SOURCE_FILE_AT_LINE (2805))).isBuiltAndTrue ()) {
            var_cas_nomArgument.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this object is already named as input or output/input effectif argument of current instruction") SOURCE_FILE_AT_LINE (2807)) ;
          }else{
            var_cas_exclusiveVariables._addAssign_operation (var_cas_nomArgument.reader_string (_inLexique SOURCE_FILE_AT_LINE (2808))) ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_parameters_list_semantics_parser_2746_29_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_22 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
          nt_expression_parse (_inLexique) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          switch (select_semantics_parser_23 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21_3F) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'semantic_instructions_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instructions_list_semantics_parser_2817_34_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string var_cas_inConstraintCurrentPassName,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_mapAsConstraintPropertyMap  &var_cas_ioMapAsConstraintPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  var_cas_ioVariablesMap.prologue_verifyVariableUsing (_inLexique SOURCE_FILE_AT_LINE (2829)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inConstraintCurrentPassName, var_cas_ioPropertyMap, var_cas_ioMapAsConstraintPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
  var_cas_ioVariablesMap.epilogue_verifyVariableUsing (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (2829)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_semantics_parser_2817_34_parse (galgas_scanner & _inLexique) {
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2851_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string var_cas_inConstraintCurrentPassName,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_mapAsConstraintPropertyMap  &var_cas_ioMapAsConstraintPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_call) ;
  GGS_lstring  var_cas_calledPropertyName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_calledPropertyName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_metamodelPropertyKind var_cas_kind ;
  GGS_lstring  var_cas_typeName ;
  if (var_cas_ioPropertyMap._isBuilt ()) {
    var_cas_ioPropertyMap (HERE)->method_searchKey (_inLexique, var_cas_calledPropertyName, var_cas_kind, var_cas_typeName SOURCE_FILE_AT_LINE (2869)) ;
  }
  if ((var_cas_ioConstraintPropertyDefinitionSet.reader_hasKey (_inLexique, var_cas_calledPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2870)) SOURCE_FILE_AT_LINE (2870))).isBuiltAndTrue ()) {
    var_cas_calledPropertyName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this property has been already initialized") SOURCE_FILE_AT_LINE (2872)) ;
  }else{
    var_cas_ioConstraintPropertyDefinitionSet._addAssign_operation (var_cas_calledPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2873))) ;
  }
  GGS_L_lstringList  var_cas_parameterList ;
  var_cas_parameterList = GGS_L_lstringList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_sharedPropertyList  var_cas_parameterTypeList ;
  var_cas_parameterTypeList = GGS_sharedPropertyList::constructor_emptyList (_inLexique COMMA_HERE) ;
  switch (select_semantics_parser_24 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_propertyArgumentName ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_propertyArgumentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            GGS_lstring  var_cas_propertyTypeName ;
            GGS_lstring  var_cas_111895 ;
            GGS_uint  var_cas_111898 ;
            GGS_string var_cas_111901 ;
            GGS_bool var_cas_111904 ;
            if (var_cas_ioMapAsConstraintPropertyMap._isBuilt ()) {
              var_cas_ioMapAsConstraintPropertyMap (HERE)->method_searchKey (_inLexique, var_cas_propertyArgumentName, var_cas_propertyTypeName, var_cas_111895, var_cas_111898, var_cas_111901, var_cas_111904 SOURCE_FILE_AT_LINE (2885)) ;
            }
            var_cas_parameterList._addAssign_operation (var_cas_propertyArgumentName) ;
            var_cas_parameterTypeList._addAssign_operation (var_cas_propertyTypeName, var_cas_propertyArgumentName) ;
          switch (select_repeat_semantics_parser_25 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
  if ((var_cas_ioCallInstructionSharedPropertySignatureMap.reader_hasKey (_inLexique, var_cas_calledPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2894)) SOURCE_FILE_AT_LINE (2894))).isBuiltAndTrue ()) {
    GGS_sharedPropertyList  var_cas_previousParameterTypeList ;
    GGS_location  var_cas_previousParameterTypeListLocation ;
    if (var_cas_ioCallInstructionSharedPropertySignatureMap._isBuilt ()) {
      var_cas_ioCallInstructionSharedPropertySignatureMap (HERE)->method_searchKey (_inLexique, var_cas_calledPropertyName, var_cas_previousParameterTypeList, var_cas_previousParameterTypeListLocation SOURCE_FILE_AT_LINE (2897)) ;
    }
    if (((var_cas_previousParameterTypeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2898))) == (var_cas_parameterTypeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2898)))).isBuiltAndTrue ()) {
      GGS_sharedPropertyList::element_type * operand_112573 = var_cas_previousParameterTypeList.firstObject () ;
      GGS_sharedPropertyList::element_type * operand_112641 = var_cas_parameterTypeList.firstObject () ;
      while ((operand_112573 != NULL)
          && (operand_112641 != NULL)) {
        macroValidPointer (operand_112573) ;
        macroValidPointer (operand_112641) ;
        if (((operand_112573->mSharedPropertyTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2901))) != (operand_112641->mSharedPropertyTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2901)))).isBuiltAndTrue ()) {
          operand_112641->mSharedPropertyName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "this shared property has '@")) + (operand_112641->mSharedPropertyTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2902))))) + (GGS_string (true, "' type, while a previous call has named an attribute of type '@")))) + (operand_112573->mSharedPropertyTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2903))))) + (GGS_string (true, "'"))) SOURCE_FILE_AT_LINE (2904)) ;
        }
        operand_112573 = operand_112573->nextObject () ;
        operand_112641 = operand_112641->nextObject () ;
      }
    }else{
      var_cas_previousParameterTypeListLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "this instruction names ")) + (var_cas_parameterTypeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2907)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2907))))) + (GGS_string (true, " shared parameter(s), while a previous call has named ")))) + (var_cas_previousParameterTypeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2908)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2908))))) + (GGS_string (true, " parameter(s)"))) SOURCE_FILE_AT_LINE (2910)) ;
    }
  }else{
    var_cas_ioCallInstructionSharedPropertySignatureMap.method_insertKey (_inLexique, var_cas_calledPropertyName, var_cas_parameterTypeList, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (2912)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_callInstruction::constructor_new (_inLexique, var_cas_inConstraintCurrentPassName, var_cas_calledPropertyName, var_cas_kind, var_cas_typeName, var_cas_parameterList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2851_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_call) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  switch (select_semantics_parser_24 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_repeat_semantics_parser_25 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2932_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string var_cas_inConstraintCurrentPassName,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_mapAsConstraintPropertyMap  &var_cas_ioMapAsConstraintPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extract) ;
  GGS_AC_galgasType  var_cas_typeVarSource ;
  GGS_typeCplusPlusName  var_cas_sourceVarCppName ;
  GGS_lstring  var_cas_nomVarSource ;
  nt_read_access_ (_inLexique, var_cas_nomVarSource, var_cas_sourceVarCppName, var_cas_typeVarSource, var_cas_ioVariablesMap) ;
  GGS_lstring  var_cas_nomTypeSource ;
  GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits ;
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_typeVarSource.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_nomTypeSource._drop_operation () ;
      var_cas_tableMessagesAbstraits._drop_operation () ;
      if (var_cas_typeVarSource.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_typeVarSource (HERE)->message_messageGalgasType () ;
        var_cas_nomVarSource.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (2955)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_nomTypeSource = ptrExtraire_->mClassTypeName ;
      var_cas_tableMessagesAbstraits = ptrExtraire_->mMessagesMap ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  nt_extract_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceVarCppName, var_cas_nomTypeSource, var_cas_tableMessagesAbstraits, var_cas_instruction, var_cas_inConstraintCurrentPassName, var_cas_ioPropertyMap, var_cas_ioMapAsConstraintPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2932_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extract) ;
  nt_read_access_parse (_inLexique) ;
  nt_extract_instruction_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_extract_instruction_semantics_parser_2981_27_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits,
                                GGS_typeInstruction  &var_cas_outInstruction,
                                GGS_string /* var_cas_inConstraintCurrentPassName */,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_mapAsConstraintPropertyMap  &/* var_cas_ioMapAsConstraintPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
  GGS_lstring  var_cas_nomClasse ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_nomClasse.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_AC_galgasType  var_cas_leType ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomClasse, var_cas_entite SOURCE_FILE_AT_LINE (3003)) ;
  }
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_leType._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_nomClasse.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3004)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_leType = ptrExtraire_->aDefType ;
    }
  }
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_leType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_listeAttributsSemantiques._drop_operation () ;
      var_cas_tableDesClassesAncetres._drop_operation () ;
      if (var_cas_leType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_leType (HERE)->message_messageGalgasType () ;
        var_cas_nomClasse.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3015)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_listeAttributsSemantiques = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetres = ptrExtraire_->mAncestorClassesMap ;
    }
  }
  if (((! (var_cas_tableDesClassesAncetres.reader_hasKey (_inLexique, var_cas_nomTypeSource.reader_string (_inLexique SOURCE_FILE_AT_LINE (3017)) SOURCE_FILE_AT_LINE (3017))))).isBuiltAndTrue ()) {
    var_cas_nomClasse.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "This class does not inherit from '@")) + (var_cas_nomTypeSource.reader_string (_inLexique SOURCE_FILE_AT_LINE (3018))))) + (GGS_string (true, "'"))) SOURCE_FILE_AT_LINE (3019)) ;
  }
  GGS_L_assignedVariables  var_cas_listeAffectationParametresEffectifs ;
  GGS_typeCplusPlusNameList  var_cas_allVariablesList ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
  nt_input_parameters_list_ (_inLexique, var_cas_listeAffectationParametresEffectifs, var_cas_allVariablesList, var_cas_listeAttributsSemantiques, var_cas_ioVariablesMap) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  if (var_cas_errorExpressionType._isBuilt ()) {
    var_cas_errorExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique SOURCE_FILE_AT_LINE (3043)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_lstring  var_cas_messageName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_messageName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if (var_cas_tableMessagesAbstraits._isBuilt ()) {
    var_cas_tableMessagesAbstraits (HERE)->method_searchKey (_inLexique, var_cas_messageName SOURCE_FILE_AT_LINE (3047)) ;
  }
  var_cas_outInstruction = GGS_typeSimpleExtractInstruction::constructor_new (_inLexique, var_cas_inSourceVarCppName, var_cas_nomClasse, var_cas_listeAffectationParametresEffectifs, var_cas_errorExpression, var_cas_messageName COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_2981_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
  nt_input_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_extract_instruction_semantics_parser_3060_27_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  /* var_cas_tableMessagesAbstraits */,
                                GGS_typeInstruction  &var_cas_outInstruction,
                                GGS_string var_cas_inConstraintCurrentPassName,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_mapAsConstraintPropertyMap  &var_cas_ioMapAsConstraintPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  GGS_typeStructuredExtractCasesList  var_cas_casesList ;
  var_cas_casesList = GGS_typeStructuredExtractCasesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique SOURCE_FILE_AT_LINE (3078)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (3080)) ;
        GGS_location  var_cas_indicatif1 ;
        var_cas_indicatif1 = GGS_location (_inLexique) ;
        GGS_lstring  var_cas_nomType1 ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
        var_cas_nomType1.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
        GGS_AC_galgasType  var_cas_definitionClasse1 ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
          var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomType1, var_cas_entite SOURCE_FILE_AT_LINE (3088)) ;
        }
        { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
          if (ptrExtraire_ == NULL) {
            var_cas_definitionClasse1._drop_operation () ;
            if (var_cas_entite.getPtr () != NULL) {
              TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
              C_String message2_ ;
              message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
              message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
              var_cas_nomType1.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3089)) ;
            }
          }else{
            macroValidPointer (ptrExtraire_) ;
            var_cas_definitionClasse1 = ptrExtraire_->aDefType ;
          }
        }
        GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 ;
        GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 ;
        { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_definitionClasse1.getPtr ()) ;
          if (ptrExtraire_ == NULL) {
            var_cas_listeAttributs1._drop_operation () ;
            var_cas_tableDesClassesAncetresType1._drop_operation () ;
            if (var_cas_definitionClasse1.getPtr () != NULL) {
              TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
              C_String message2_ ;
              message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
              message2_ << var_cas_definitionClasse1 (HERE)->message_messageGalgasType () ;
              var_cas_nomType1.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3101)) ;
            }
          }else{
            macroValidPointer (ptrExtraire_) ;
            var_cas_listeAttributs1 = ptrExtraire_->mNonExternAttributesList ;
            var_cas_tableDesClassesAncetresType1 = ptrExtraire_->mAncestorClassesMap ;
          }
        }
        if (((! (var_cas_tableDesClassesAncetresType1.reader_hasKey (_inLexique, var_cas_nomTypeSource.reader_string (_inLexique SOURCE_FILE_AT_LINE (3103)) SOURCE_FILE_AT_LINE (3103))))).isBuiltAndTrue ()) {
          var_cas_nomType1.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "This class does not inherit from '@")) + (var_cas_nomTypeSource.reader_string (_inLexique SOURCE_FILE_AT_LINE (3104))))) + (GGS_string (true, "'"))) SOURCE_FILE_AT_LINE (3105)) ;
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
        GGS_L_nameWithType  var_cas_elementsList ;
        var_cas_elementsList = GGS_L_nameWithType::constructor_emptyList (_inLexique COMMA_HERE) ;
        GGS_bool var_cas_noUsedParameter ;
        var_cas_noUsedParameter = GGS_bool (true, true) ;
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
            switch (select_repeat_semantics_parser_27 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_3F) ;
                GGS_lstring  var_cas_typeName ;
                GGS_lstring  var_cas_constantName ;
                switch (select_semantics_parser_28 (_inLexique)) {
                  case 1 : {
                    var_cas_noUsedParameter = GGS_bool (true, false) ;
                    _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
                    var_cas_typeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                    _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                    var_cas_constantName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                    } break ;
                  case 2 : {
                    _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
                    var_cas_typeName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
                    var_cas_constantName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_elementsList._addAssign_operation (var_cas_typeName, var_cas_constantName) ;
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        GGS_bool var_cas_ellipsisFound ;
        switch (select_semantics_parser_29 (_inLexique)) {
          case 1 : {
            var_cas_ellipsisFound = GGS_bool (true, false) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E_2E_2E) ;
            var_cas_ellipsisFound = GGS_bool (true, true) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
        ::routine_buildMapWithLocalConstants (_inLexique,  var_cas_elementsList,  var_cas_listeAttributs1,  var_cas_ioVariablesMap,  var_cas_indicatif1,  GGS_localConstantBuildStyleEnum::constructor_listStyle (_inLexique COMMA_HERE),  var_cas_ellipsisFound SOURCE_FILE_AT_LINE (3136)) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
        GGS_typeInstructionList  var_cas_instructionsList ;
        var_cas_instructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inConstraintCurrentPassName, var_cas_ioPropertyMap, var_cas_ioMapAsConstraintPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
        var_cas_casesList._addAssign_operation (var_cas_nomType1, var_cas_indicatif1, var_cas_instructionsList, var_cas_noUsedParameter) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3080)) ;
      switch (select_repeat_semantics_parser_26 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (3164)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
  GGS_typeInstructionList  var_cas_elseInstructionList ;
  var_cas_elseInstructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseInstructionList, var_cas_inConstraintCurrentPassName, var_cas_ioPropertyMap, var_cas_ioMapAsConstraintPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
  var_cas_outInstruction = GGS_typeStructuredExtractInstructionWithElse::constructor_new (_inLexique, var_cas_inSourceVarCppName, var_cas_casesList, var_cas_elseInstructionList COMMA_HERE) ;
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3164)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique SOURCE_FILE_AT_LINE (3078)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extract) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_3060_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
            switch (select_repeat_semantics_parser_27 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_3F) ;
                switch (select_semantics_parser_28 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
                    _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                    } break ;
                  case 2 : {
                    _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
                    } break ;
                  default :
                    break ;
                }
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        switch (select_semantics_parser_29 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E_2E_2E) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
        nt_semantic_instructions_list_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_26 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extract) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3194_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string /* var_cas_inConstraintCurrentPassName */,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_mapAsConstraintPropertyMap  &/* var_cas_ioMapAsConstraintPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  GGS_AC_galgasType  var_cas_definitionType ;
  GGS_lstring  var_cas_typeName ;
  nt_type_parsing_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
  GGS_lstring  var_cas_nomVariable ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomVariable.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_typeCplusPlusName  var_cas_nomCppVariable ;
  var_cas_nomCppVariable = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomVariable COMMA_HERE) ;
  var_cas_ioVariablesMap.method_insertLocalVariable (_inLexique, var_cas_nomVariable, var_cas_definitionType, var_cas_nomCppVariable SOURCE_FILE_AT_LINE (3214)) ;
  nt_optional_assignment_ (_inLexique, var_cas_typeName, var_cas_nomVariable, var_cas_nomCppVariable, var_cas_definitionType, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_ioOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3194_28_parse (galgas_scanner & _inLexique) {
  nt_type_parsing_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_optional_assignment_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3235_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string /* var_cas_inConstraintCurrentPassName */,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_mapAsConstraintPropertyMap  &/* var_cas_ioMapAsConstraintPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_drop) ;
  nt_drop_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioVariablesMap, var_cas_ioInstructionList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3235_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_drop) ;
  nt_drop_instruction_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'drop_instruction'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_drop_instruction_semantics_parser_3258_24_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_nom ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        var_cas_nom.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
        GGS_typeCplusPlusName  var_cas_nomCppVar ;
        GGS_AC_galgasType  var_cas_126961 ;
        var_cas_ioVariablesMap.method_searchForDestructiveReadAccess (_inLexique, var_cas_nom, var_cas_126961, var_cas_nomCppVar SOURCE_FILE_AT_LINE (3268)) ;
        GGS_typeInstruction  var_cas_instruction ;
        var_cas_instruction = GGS_typeDropInstruction::constructor_new (_inLexique, var_cas_nomCppVar COMMA_HERE) ;
        var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
      switch (select_repeat_semantics_parser_30 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_drop_instruction_semantics_parser_3258_24_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      switch (select_repeat_semantics_parser_30 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_3285_45_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  GGS_L_EXsignature  var_cas_signatureRoutine ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomVarDest, var_cas_entite SOURCE_FILE_AT_LINE (3295)) ;
  }
  { cPtr_typeEntiteRoutine * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteRoutine *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_signatureRoutine._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteRoutine::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_nomVarDest.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3296)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_signatureRoutine = ptrExtraire_->aListeArgumentsFormels ;
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_parameters_list_ (_inLexique, var_cas_signatureRoutine, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeRoutineCallInstruction::constructor_new (_inLexique, var_cas_nomVarDest, var_cas_expressionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_3285_45_parse (galgas_scanner & _inLexique) {
  nt_actual_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3320_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string /* var_cas_inConstraintCurrentPassName */,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_mapAsConstraintPropertyMap  &/* var_cas_ioMapAsConstraintPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_action) ;
  GGS_lstring  var_cas_nomAction ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomAction.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomAction, var_cas_entite SOURCE_FILE_AT_LINE (3338)) ;
  }
  GGS_L_EXsignature  var_cas_listeTypesParametresFormels ;
  { cPtr_typeEntiteActionExterne * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteActionExterne *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_listeTypesParametresFormels._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteActionExterne::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_nomAction.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3340)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_listeTypesParametresFormels = ptrExtraire_->aSignature ;
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_parameters_list_ (_inLexique, var_cas_listeTypesParametresFormels, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeInstructionAppelActionExterne::constructor_new (_inLexique, var_cas_nomAction, var_cas_expressionsList, var_cas_listeTypesParametresFormels COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3320_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_action) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_actual_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3371_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string /* var_cas_inConstraintCurrentPassName */,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_mapAsConstraintPropertyMap  &/* var_cas_ioMapAsConstraintPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
  GGS_typeInstruction  var_cas_instruction ;
  switch (select_semantics_parser_31 (_inLexique)) {
    case 1 : {
      GGS_lstring  var_cas_readObjectName ;
      GGS_AC_galgasType  var_cas_variableType ;
      GGS_typeCplusPlusName  var_cas_cppVariableName ;
      nt_read_access_ (_inLexique, var_cas_readObjectName, var_cas_cppVariableName, var_cas_variableType, var_cas_ioVariablesMap) ;
      GGS_lstring  var_cas_methodName ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_methodName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      if (var_cas_variableType._isBuilt ()) {
        var_cas_variableType (HERE)->method_handleReaderInstructionCall (_inLexique, var_cas_readObjectName, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (3394)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeReaderCallInstruction::constructor_new (_inLexique, var_cas_cppVariableName, var_cas_methodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21_3F) ;
      GGS_lstring  var_cas_modifiedObjectName ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_modifiedObjectName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      GGS_AC_galgasType  var_cas_variableType ;
      GGS_typeCplusPlusName  var_cas_cppVariableName ;
      var_cas_ioVariablesMap.method_searchForReadWriteAccess (_inLexique, var_cas_modifiedObjectName, var_cas_variableType, var_cas_cppVariableName SOURCE_FILE_AT_LINE (3413)) ;
      GGS_lstring  var_cas_methodName ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_methodName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      if (var_cas_variableType._isBuilt ()) {
        var_cas_variableType (HERE)->method_handleModifierCall (_inLexique, var_cas_modifiedObjectName, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (3418)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeModifierCallInstruction::constructor_new (_inLexique, var_cas_cppVariableName, var_cas_methodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3371_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
  switch (select_semantics_parser_31 (_inLexique)) {
    case 1 : {
      nt_read_access_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21_3F) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3444_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string /* var_cas_inConstraintCurrentPassName */,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_mapAsConstraintPropertyMap  &/* var_cas_ioMapAsConstraintPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  GGS_lstring  var_cas_nomVarDest ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomVarDest.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  nt_instruction_beginning_with_identifier_ (_inLexique, var_cas_nomVarDest, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_ioOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3444_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_instruction_beginning_with_identifier_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3474_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string /* var_cas_inConstraintCurrentPassName */,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_mapAsConstraintPropertyMap  &/* var_cas_ioMapAsConstraintPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_warning) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  if (var_cas_errorExpressionType._isBuilt ()) {
    var_cas_errorExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique SOURCE_FILE_AT_LINE (3497)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_typeExpression  var_cas_warningMessageExpression ;
  GGS_AC_galgasType  var_cas_warningMessageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_warningMessageExpression, var_cas_warningMessageExpressionType) ;
  { cPtr_typeGalgas_string * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_string *> (var_cas_warningMessageExpressionType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_warningMessageExpressionType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_string::static_string_message_messageGalgasType () ;
        message2_ << var_cas_warningMessageExpressionType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3510)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeWarningInstruction::constructor_new (_inLexique, var_cas_errorExpression, var_cas_warningMessageExpression, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3474_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_warning) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3524_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string /* var_cas_inConstraintCurrentPassName */,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_mapAsConstraintPropertyMap  &/* var_cas_ioMapAsConstraintPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  GGS_typeExpression  var_cas_errorLocationExpression ;
  GGS_AC_galgasType  var_cas_errorLocationExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorLocationExpression, var_cas_errorLocationExpressionType) ;
  if (var_cas_errorLocationExpressionType._isBuilt ()) {
    var_cas_errorLocationExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique SOURCE_FILE_AT_LINE (3547)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_typeExpression  var_cas_errorMessageExpression ;
  GGS_AC_galgasType  var_cas_errorMessageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorMessageExpression, var_cas_errorMessageExpressionType) ;
  { cPtr_typeGalgas_string * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_string *> (var_cas_errorMessageExpressionType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_errorMessageExpressionType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_string::static_string_message_messageGalgasType () ;
        message2_ << var_cas_errorMessageExpressionType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3560)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  GGS_varToDropList  var_cas_variablesToDrop ;
  var_cas_variablesToDrop = GGS_varToDropList::constructor_emptyList (_inLexique COMMA_HERE) ;
  switch (select_semantics_parser_32 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_nomVariable ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_nomVariable.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            GGS_typeCplusPlusName  var_cas_varCppName ;
            GGS_AC_galgasType  var_cas_139439 ;
            var_cas_ioVariablesMap.method_searchForWriteAccess (_inLexique, var_cas_nomVariable, var_cas_139439, var_cas_varCppName SOURCE_FILE_AT_LINE (3570)) ;
            var_cas_variablesToDrop._addAssign_operation (var_cas_varCppName) ;
          switch (select_repeat_semantics_parser_33 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeErrorInstruction::constructor_new (_inLexique, var_cas_errorLocationExpression, var_cas_errorMessageExpression, GGS_location (_inLexique), var_cas_variablesToDrop COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3524_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_expression_parse (_inLexique) ;
  switch (select_semantics_parser_32 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_repeat_semantics_parser_33 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3593_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string /* var_cas_inConstraintCurrentPassName */,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_mapAsConstraintPropertyMap  &/* var_cas_ioMapAsConstraintPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  GGS_location  var_cas_instructionLocation ;
  var_cas_instructionLocation = GGS_location (_inLexique) ;
  GGS_typeExpression  var_cas_messageExpression ;
  GGS_AC_galgasType  var_cas_messageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_messageExpression, var_cas_messageExpressionType) ;
  { cPtr_typeGalgas_string * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_string *> (var_cas_messageExpressionType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_messageExpressionType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_string::static_string_message_messageGalgasType () ;
        message2_ << var_cas_messageExpressionType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3618)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeMessageInstruction::constructor_new (_inLexique, var_cas_messageExpression, var_cas_instructionLocation COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3593_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3631_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string var_cas_inConstraintCurrentPassName,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_mapAsConstraintPropertyMap  &var_cas_ioMapAsConstraintPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_if) ;
  GGS_stringset  var_cas_startConstraintPropertyDefinitionSet ;
  var_cas_startConstraintPropertyDefinitionSet = var_cas_ioConstraintPropertyDefinitionSet ;
  GGS_bool var_cas_firstBranch ;
  var_cas_firstBranch = GGS_bool (true, true) ;
  GGS_L_expression_instructionsList_list  var_cas_listeBranchesTest ;
  var_cas_listeBranchesTest = GGS_L_expression_instructionsList_list::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique SOURCE_FILE_AT_LINE (3647)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (3649)) ;
        GGS_typeExpression  var_cas_testBranche ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_testBranche, var_cas_resultType) ;
        { cPtr_typeGalgas_bool * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_bool *> (var_cas_resultType.getPtr ()) ;
          if (ptrExtraire_ == NULL) {
            if (var_cas_resultType.getPtr () != NULL) {
              TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
              C_String message2_ ;
              message1_ (0 COMMA_HERE) << cPtr_typeGalgas_bool::static_string_message_messageGalgasType () ;
              message2_ << var_cas_resultType (HERE)->message_messageGalgasType () ;
              GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3659)) ;
            }
          }else{
            macroValidPointer (ptrExtraire_) ;
          }
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_then) ;
        GGS_typeInstructionList  var_cas_listeInstructionsBrancheTest ;
        var_cas_listeInstructionsBrancheTest = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
        GGS_stringset  var_cas_constraintPropertyDefinitionSet ;
        var_cas_constraintPropertyDefinitionSet = var_cas_startConstraintPropertyDefinitionSet ;
        nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheTest, var_cas_inConstraintCurrentPassName, var_cas_ioPropertyMap, var_cas_ioMapAsConstraintPropertyMap, var_cas_constraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
        if ((var_cas_firstBranch).isBuiltAndTrue ()) {
          var_cas_ioConstraintPropertyDefinitionSet = var_cas_constraintPropertyDefinitionSet ;
          var_cas_firstBranch = GGS_bool (true, false) ;
        }else if (((var_cas_ioConstraintPropertyDefinitionSet) != (var_cas_constraintPropertyDefinitionSet)).isBuiltAndTrue ()) {
          ::routine_displayConstraintDefinitionErrors (_inLexique,  var_cas_ioConstraintPropertyDefinitionSet,  var_cas_constraintPropertyDefinitionSet SOURCE_FILE_AT_LINE (3679)) ;
        }
        var_cas_listeBranchesTest._addAssign_operation (var_cas_testBranche, var_cas_listeInstructionsBrancheTest) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3649)) ;
      switch (select_repeat_semantics_parser_34 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_elsif) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeInstructionList  var_cas_listeInstructionsBrancheAutre ;
  var_cas_listeInstructionsBrancheAutre = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (3687)) ;
  switch (select_semantics_parser_35 (_inLexique)) {
    case 1 : {
      if (((var_cas_ioConstraintPropertyDefinitionSet) != (var_cas_startConstraintPropertyDefinitionSet)).isBuiltAndTrue ()) {
        ::routine_displayConstraintDefinitionErrorsNoElse (_inLexique,  var_cas_ioConstraintPropertyDefinitionSet,  var_cas_startConstraintPropertyDefinitionSet SOURCE_FILE_AT_LINE (3690)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
      GGS_stringset  var_cas_constraintPropertyDefinitionSet ;
      var_cas_constraintPropertyDefinitionSet = var_cas_startConstraintPropertyDefinitionSet ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheAutre, var_cas_inConstraintCurrentPassName, var_cas_ioPropertyMap, var_cas_ioMapAsConstraintPropertyMap, var_cas_constraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
      if (((var_cas_ioConstraintPropertyDefinitionSet) != (var_cas_constraintPropertyDefinitionSet)).isBuiltAndTrue ()) {
        ::routine_displayConstraintDefinitionErrors (_inLexique,  var_cas_ioConstraintPropertyDefinitionSet,  var_cas_constraintPropertyDefinitionSet SOURCE_FILE_AT_LINE (3708)) ;
      }
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3687)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_if) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique SOURCE_FILE_AT_LINE (3647)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_if_instruction::constructor_new (_inLexique, var_cas_listeBranchesTest, var_cas_listeInstructionsBrancheAutre COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3631_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_if) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        nt_expression_parse (_inLexique) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_then) ;
        nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_34 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_elsif) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_35 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_if) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3728_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string var_cas_inConstraintCurrentPassName,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_mapAsConstraintPropertyMap  &var_cas_ioMapAsConstraintPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_loop) ;
  GGS_typeExpression  var_cas_variantExpression ;
  GGS_AC_galgasType  var_cas_variantResultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_variantExpression, var_cas_variantResultType) ;
  { cPtr_typeGalgas_uint * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_uint *> (var_cas_variantResultType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_variantResultType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_uint::static_string_message_messageGalgasType () ;
        message2_ << var_cas_variantResultType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3751)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_typeInstructionList  var_cas_instructionList1 ;
  var_cas_instructionList1 = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3755)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique SOURCE_FILE_AT_LINE (3756)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList1, var_cas_inConstraintCurrentPassName, var_cas_ioPropertyMap, var_cas_ioMapAsConstraintPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3756)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3755)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_while) ;
  GGS_typeExpression  var_cas_conditionalExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_conditionalExpression, var_cas_resultType) ;
  { cPtr_typeGalgas_bool * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_bool *> (var_cas_resultType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_resultType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_bool::static_string_message_messageGalgasType () ;
        message2_ << var_cas_resultType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3783)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_do) ;
  GGS_typeInstructionList  var_cas_instructionList2 ;
  var_cas_instructionList2 = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3787)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique SOURCE_FILE_AT_LINE (3788)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList2, var_cas_inConstraintCurrentPassName, var_cas_ioPropertyMap, var_cas_ioMapAsConstraintPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3788)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3787)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_while_instruction::constructor_new (_inLexique, var_cas_variantExpression, var_cas_instructionList1, var_cas_conditionalExpression, var_cas_instructionList2, GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_loop) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3728_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_loop) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_while) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_do) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_loop) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3823_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string /* var_cas_inConstraintCurrentPassName */,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_mapAsConstraintPropertyMap  &/* var_cas_ioMapAsConstraintPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
  GGS_lstring  var_cas_grammarName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_grammarName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_lstring  var_cas_altName ;
  switch (select_semantics_parser_36 (_inLexique)) {
    case 1 : {
      var_cas_altName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_label) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_altName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  GGS_lstring  var_cas_nomFichierSource ;
  GGS_typeCplusPlusName  var_cas_nomCppFichierSource ;
  GGS_AC_galgasType  var_cas_typeNomFichierSource ;
  nt_read_access_ (_inLexique, var_cas_nomFichierSource, var_cas_nomCppFichierSource, var_cas_typeNomFichierSource, var_cas_ioVariablesMap) ;
  { cPtr_typeGalgas_lstring * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_lstring *> (var_cas_typeNomFichierSource.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_typeNomFichierSource.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_lstring::static_string_message_messageGalgasType () ;
        message2_ << var_cas_typeNomFichierSource (HERE)->message_messageGalgasType () ;
        var_cas_nomFichierSource.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3853)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_grammarName, var_cas_e SOURCE_FILE_AT_LINE (3866)) ;
  }
  GGS_M_nonterminalSymbolAlts  var_cas_startSymbolAltMap ;
  { cPtr_C_grammarForSemantics * ptrExtraire_ = dynamic_cast <cPtr_C_grammarForSemantics *> (var_cas_e.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_startSymbolAltMap._drop_operation () ;
      if (var_cas_e.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_C_grammarForSemantics::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_e (HERE)->message_messageTypeEntite () ;
        var_cas_grammarName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3868)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_startSymbolAltMap = ptrExtraire_->mGrammarAltMap ;
    }
  }
  GGS_L_EXsignature  var_cas_startSymbolSignature ;
  GGS_lstring  var_cas_returnedEntity ;
  if (var_cas_startSymbolAltMap._isBuilt ()) {
    var_cas_startSymbolAltMap (HERE)->method_searchKey (_inLexique, var_cas_altName, var_cas_startSymbolSignature, var_cas_returnedEntity SOURCE_FILE_AT_LINE (3871)) ;
  }
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique,  var_cas_startSymbolSignature,  var_cas_listeTypesParametresEffectifs,  GGS_location (_inLexique),  var_cas_ioInstructionList,  var_cas_expressionsList SOURCE_FILE_AT_LINE (3873)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_grammarInstruction::constructor_new (_inLexique, var_cas_nomCppFichierSource, var_cas_grammarName, var_cas_expressionsList, var_cas_altName COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3823_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  switch (select_semantics_parser_36 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_label) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  nt_read_access_parse (_inLexique) ;
  nt_parse_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3896_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string var_cas_inConstraintCurrentPassName,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_mapAsConstraintPropertyMap  &var_cas_ioMapAsConstraintPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_foreach) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3910)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique SOURCE_FILE_AT_LINE (3911)) ;
  GGS_foreachEnumerationList  var_cas_foreachEnumerationList ;
  var_cas_foreachEnumerationList = GGS_foreachEnumerationList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_enumeratedVariableName ;
        GGS_typeCplusPlusName  var_cas_enumeratedVariableCPPName ;
        GGS_AC_galgasType  var_cas_enumeratedVariableType ;
        nt_read_access_ (_inLexique, var_cas_enumeratedVariableName, var_cas_enumeratedVariableCPPName, var_cas_enumeratedVariableType, var_cas_ioVariablesMap) ;
        var_cas_ioVariablesMap.method_insertUsedConstInArgument (_inLexique, var_cas_enumeratedVariableName, var_cas_enumeratedVariableType, var_cas_enumeratedVariableCPPName SOURCE_FILE_AT_LINE (3926)) ;
        GGS_typeListeAttributsSemantiques  var_cas_formalEnumerationList ;
        GGS_localConstantBuildStyleEnum var_cas_localConstantBuildStyleEnum ;
        if (var_cas_enumeratedVariableType._isBuilt ()) {
          var_cas_enumeratedVariableType (HERE)->method_acceptForeachInstruction (_inLexique, var_cas_enumeratedVariableName, var_cas_formalEnumerationList, var_cas_localConstantBuildStyleEnum SOURCE_FILE_AT_LINE (3930)) ;
        }
        GGS_string var_cas_typeName ;
        if (var_cas_enumeratedVariableType._isBuilt ()) {
          var_cas_enumeratedVariableType (HERE)->method_getTypeName (_inLexique, var_cas_typeName SOURCE_FILE_AT_LINE (3933)) ;
        }
        GGS_location  var_cas_magicNumber ;
        var_cas_magicNumber = GGS_location (_inLexique) ;
        nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_formalEnumerationList, var_cas_magicNumber, var_cas_localConstantBuildStyleEnum) ;
        var_cas_foreachEnumerationList._addAssign_operation (var_cas_enumeratedVariableCPPName, var_cas_magicNumber, var_cas_typeName) ;
      switch (select_repeat_semantics_parser_37 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeExpression  var_cas_whileExpression ;
  switch (select_semantics_parser_38 (_inLexique)) {
    case 1 : {
      var_cas_whileExpression = GGS_typeTrueBool::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_while) ;
      GGS_AC_galgasType  var_cas_resultType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_whileExpression, var_cas_resultType) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_typeInstructionList  var_cas_instructionList ;
  var_cas_instructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList, var_cas_inConstraintCurrentPassName, var_cas_ioPropertyMap, var_cas_ioMapAsConstraintPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3911)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3910)) ;
  var_cas_instruction = GGS_typeForeachInstruction::constructor_new (_inLexique, var_cas_foreachEnumerationList, var_cas_whileExpression, var_cas_instructionList COMMA_HERE) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_foreach) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3896_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_foreach) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        nt_read_access_parse (_inLexique) ;
        nt_parse_effective_input_parameters_list_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_37 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_38 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_while) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_foreach) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'parse_match_operand'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_operand_semantics_parser_3996_27_ (galgas_scanner & _inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  &var_cas_outCppName,
                                GGS_lstring  &var_cas_outBaseTypeName,
                                GGS_location  &var_cas_outVarLocation,
                                GGS_bool &var_cas_outIsEnumeration,
                                GGS_enumConstantMap  &var_cas_outEnumMessageMap) {
  GGS_lstring  var_cas_variableName ;
  GGS_AC_galgasType  var_cas_type ;
  nt_read_access_ (_inLexique, var_cas_variableName, var_cas_outCppName, var_cas_type, var_cas_ioVariablesMap) ;
  var_cas_outVarLocation = GGS_location (_inLexique) ;
  if (var_cas_type._isBuilt ()) {
    if (dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_type.getPtr ()) != NULL) {
      cPtr_typeGalgasClassType * operand_156234 = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_type.getPtr ()) ;
      macroValidPointer (operand_156234) ; 
      var_cas_outBaseTypeName = operand_156234->mClassTypeName ;
      var_cas_outIsEnumeration = GGS_bool (true, false) ;
      var_cas_outEnumMessageMap = GGS_enumConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
    }else if (dynamic_cast <cPtr_typeGalgas_enum *> (var_cas_type.getPtr ()) != NULL) {
      cPtr_typeGalgas_enum * operand_156440 = dynamic_cast <cPtr_typeGalgas_enum *> (var_cas_type.getPtr ()) ;
      macroValidPointer (operand_156440) ; 
      var_cas_outBaseTypeName = operand_156440->mEnumTypeName ;
      var_cas_outIsEnumeration = GGS_bool (true, true) ;
      var_cas_outEnumMessageMap = operand_156440->mEnumConstantesMap ;
    }else{ // Else part
      GGS_string var_cas_actualTypeName ;
      if (var_cas_type._isBuilt ()) {
        var_cas_type (HERE)->method_getTypeName (_inLexique, var_cas_actualTypeName SOURCE_FILE_AT_LINE (4024)) ;
      }
      var_cas_variableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the type of this variable is '@")) + (var_cas_actualTypeName))) + (GGS_string (true, "' ; I was expected an enumeration type or an abstract type"))) SOURCE_FILE_AT_LINE (4028)) ;
      var_cas_outBaseTypeName._drop_operation () ;
      var_cas_outIsEnumeration._drop_operation () ;
      var_cas_outEnumMessageMap._drop_operation () ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_operand_semantics_parser_3996_27_parse (galgas_scanner & _inLexique) {
  nt_read_access_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_case_semantics_parser_4034_24_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  var_cas_inVarLocation,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  /* var_cas_inEnumMessageMap */,
                                GGS_lstring  &var_cas_outTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_AC_galgasType  var_cas_definitionClasse1 ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4048)) ;
  }
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_definitionClasse1._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_outTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (4049)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_definitionClasse1 = ptrExtraire_->aDefType ;
    }
  }
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 ;
  GGS_bool var_cas_isAbstract ;
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_definitionClasse1.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_listeAttributs1._drop_operation () ;
      var_cas_tableDesClassesAncetresType1._drop_operation () ;
      var_cas_isAbstract._drop_operation () ;
      if (var_cas_definitionClasse1.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_definitionClasse1 (HERE)->message_messageGalgasType () ;
        var_cas_outTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (4062)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_listeAttributs1 = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetresType1 = ptrExtraire_->mAncestorClassesMap ;
      var_cas_isAbstract = ptrExtraire_->mClassIsAbstract ;
    }
  }
  if ((var_cas_isAbstract).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "an abstract class is not allowed here") SOURCE_FILE_AT_LINE (4066)) ;
  }
  if ((var_cas_inIsEnumeration).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "a constant of '@")) + (var_cas_inTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4069))))) + (GGS_string (true, "' enumeration type is expected here"))) SOURCE_FILE_AT_LINE (4070)) ;
  }else if (((! (var_cas_tableDesClassesAncetresType1.reader_hasKey (_inLexique, var_cas_inTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4070)) SOURCE_FILE_AT_LINE (4070))))).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "This type does not inherit from '")) + (var_cas_inTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4071))))) + (GGS_string (true, "'"))) SOURCE_FILE_AT_LINE (4072)) ;
  }
  nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_inVarLocation, GGS_localConstantBuildStyleEnum::constructor_listStyle (_inLexique COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_4034_24_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  nt_parse_effective_input_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_case_semantics_parser_4084_24_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  /* var_cas_inVarLocation */,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  var_cas_inEnumMessageMap,
                                GGS_lstring  &var_cas_outEnumConstantName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_outEnumConstantName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if ((var_cas_inIsEnumeration).isBuiltAndTrue ()) {
    if (var_cas_inEnumMessageMap._isBuilt ()) {
      var_cas_inEnumMessageMap (HERE)->method_searchKey (_inLexique, var_cas_outEnumConstantName SOURCE_FILE_AT_LINE (4097)) ;
    }
  }else{
    var_cas_outEnumConstantName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "a class that inherit from '@")) + (var_cas_inTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4099))))) + (GGS_string (true, "' abstract class is expected here"))) SOURCE_FILE_AT_LINE (4100)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_4084_24_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_4105_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string var_cas_inConstraintCurrentPassName,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_mapAsConstraintPropertyMap  &var_cas_ioMapAsConstraintPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_match) ;
  GGS_typeCplusPlusName  var_cas_operand1_cppName ;
  GGS_lstring  var_cas_operand1_typeName ;
  GGS_location  var_cas_operand1_location ;
  GGS_bool var_cas_operand1_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand1_enumMessageMap ;
  nt_parse_match_operand_ (_inLexique, var_cas_ioVariablesMap, var_cas_operand1_cppName, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3A) ;
  GGS_typeCplusPlusName  var_cas_operand2_cppName ;
  GGS_lstring  var_cas_operand2_typeName ;
  GGS_location  var_cas_operand2_location ;
  GGS_bool var_cas_operand2_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand2_enumMessageMap ;
  nt_parse_match_operand_ (_inLexique, var_cas_ioVariablesMap, var_cas_operand2_cppName, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_L_matchInstructionCasesList  var_cas_casesList ;
  var_cas_casesList = GGS_L_matchInstructionCasesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique SOURCE_FILE_AT_LINE (4150)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_39 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (4154)) ;
          GGS_lstring  var_cas_case1_name ;
          nt_parse_match_case_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap, var_cas_case1_name) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3A) ;
          GGS_lstring  var_cas_case2_name ;
          nt_parse_match_case_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap, var_cas_case2_name) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          GGS_typeInstructionList  var_cas_instructionsList ;
          var_cas_instructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
          nt_semantic_instructions_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inConstraintCurrentPassName, var_cas_ioPropertyMap, var_cas_ioMapAsConstraintPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
          var_cas_casesList._addAssign_operation (var_cas_case1_name, var_cas_case2_name, var_cas_instructionsList) ;
          var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (4154)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (4198)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
  GGS_typeInstructionList  var_cas_elsePartInstructionsList ;
  var_cas_elsePartInstructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elsePartInstructionsList, var_cas_inConstraintCurrentPassName, var_cas_ioPropertyMap, var_cas_ioMapAsConstraintPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (4198)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique SOURCE_FILE_AT_LINE (4150)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_match) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeMatchInstruction::constructor_new (_inLexique, var_cas_operand1_location, var_cas_operand2_location, var_cas_operand1_cppName, var_cas_operand2_cppName, var_cas_operand1_typeName, var_cas_operand2_typeName, var_cas_operand1_isEnumeration, var_cas_operand2_isEnumeration, var_cas_casesList, var_cas_elsePartInstructionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4105_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_match) ;
  nt_parse_match_operand_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3A) ;
  nt_parse_match_operand_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_39 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          nt_parse_match_case_parse (_inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3A) ;
          nt_parse_match_case_parse (_inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          nt_semantic_instructions_list_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_match) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Implementation of production rule 'semantic_instructions_list_no_verif'   *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instructions_list_no_verif_semantics_parser_4234_43_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_string var_cas_inConstraintCurrentPassName,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_mapAsConstraintPropertyMap  &var_cas_ioMapAsConstraintPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_40 (_inLexique)) {
        case 2 : {
          nt_semantic_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inConstraintCurrentPassName, var_cas_ioPropertyMap, var_cas_ioMapAsConstraintPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_no_verif_semantics_parser_4234_43_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_40 (_inLexique)) {
        case 2 : {
          nt_semantic_instruction_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_4267_27_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &/* var_cas_inTypeName */,
                                const GGS_lstring  &/* var_cas_nomVarDest */,
                                const GGS_typeCplusPlusName  &var_cas_inVariableCppName,
                                const GGS_AC_galgasType  &var_cas_inVariableType,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */) {
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeInstructionDeclarationVarLocale::constructor_new (_inLexique, var_cas_inVariableCppName, var_cas_inVariableType COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_4267_27_parse (galgas_scanner & /* _inLexique */) {
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_4283_27_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &/* var_cas_inTypeName */,
                                const GGS_lstring  &var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  &var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  &var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3D) ;
  GGS_AC_galgasType  var_cas_166395 ;
  GGS_typeCplusPlusName  var_cas_166398 ;
  var_cas_ioVariablesMap.method_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, var_cas_166395, var_cas_166398 SOURCE_FILE_AT_LINE (4295)) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  ::routine_checkAssignmentTypesCompatibility (_inLexique,  var_cas_inVariableType,  var_cas_sourceType,  GGS_location (_inLexique),  GGS_bool (true, true) SOURCE_FILE_AT_LINE (4307)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_declarationInstructionWithAssignment::constructor_new (_inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_4283_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3D) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_4315_27_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &var_cas_inTypeName,
                                const GGS_lstring  &var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  &var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  &var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  GGS_AC_galgasType  var_cas_167511 ;
  GGS_typeCplusPlusName  var_cas_167514 ;
  var_cas_ioVariablesMap.method_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, var_cas_167511, var_cas_167514 SOURCE_FILE_AT_LINE (4326)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
  GGS_lstring  var_cas_constructorName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_constructorName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  if (var_cas_inVariableType._isBuilt ()) {
    var_cas_inVariableType (HERE)->method_handleConstructorCall (_inLexique, var_cas_constructorName, var_cas_listeAttributsSemantiques SOURCE_FILE_AT_LINE (4332)) ;
  }
  GGS_typeExpressionList  var_cas_expressionList ;
  nt_output_expression_list_ (_inLexique, var_cas_expressionList, var_cas_listeAttributsSemantiques, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
  GGS_typeExpression  var_cas_e ;
  var_cas_e = GGS_typeConstructorExpression::constructor_new (_inLexique, var_cas_inTypeName, var_cas_constructorName, var_cas_expressionList COMMA_HERE) ;
  GGS_typeInstruction  var_cas_i ;
  var_cas_i = GGS_C_declarationInstructionWithAssignment::constructor_new (_inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_e COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_i) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_4315_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_output_expression_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4355_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  GGS_lstring  var_cas_mapTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_mapTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_41 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4368)) SOURCE_FILE_AT_LINE (4368))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4369)) SOURCE_FILE_AT_LINE (4369))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapType::constructor_new (_inLexique, var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.method_insertKey (_inLexique, var_cas_mapTypeName, var_cas_t SOURCE_FILE_AT_LINE (4371)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
      GGS_lstring  var_cas_cppClassName ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_cppClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      var_cas_cppClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old style map definition") SOURCE_FILE_AT_LINE (4378)) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_42 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4391)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4398)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_block) ;
              GGS_lstring  var_cas_nomMethode ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomMethode.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut ;
              var_cas_tableDebut = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin ;
              var_cas_tableFin = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              var_cas_tableMethodesBloc.method_insertKey (_inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin SOURCE_FILE_AT_LINE (4433)) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapMethodMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList::element_type * operand_172424 = var_cas_insertMethodList.firstObject () ;
      while ((operand_172424 != NULL)) {
        macroValidPointer (operand_172424) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_172622 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_172622 != NULL)) {
          macroValidPointer (operand_172622) ;
          var_cas_methodSignature._addAssign_operation (operand_172622->mAttributType, var_cas_inPassingMode) ;
          operand_172622 = operand_172622->nextObject () ;
        }
        var_cas_mapModifierMethodMap.method_insertKey (_inLexique, operand_172424->mMethodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4462)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_173053 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_173053 != NULL)) {
          macroValidPointer (operand_173053) ;
          var_cas_methodSignature._addAssign_operation (operand_173053->mAttributType, var_cas_inPassingMode) ;
          operand_173053 = operand_173053->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, ((operand_172424->mMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4470))) + (GGS_string (true, "GetIndex"))), operand_172424->mMethodName.reader_location (_inLexique SOURCE_FILE_AT_LINE (4470)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.method_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4471)) ;
        operand_172424 = operand_172424->nextObject () ;
      }
      GGS_insertOrSearchMethodList::element_type * operand_173403 = var_cas_searchMethodList.firstObject () ;
      while ((operand_173403 != NULL)) {
        macroValidPointer (operand_173403) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_173599 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_173599 != NULL)) {
          macroValidPointer (operand_173599) ;
          var_cas_methodSignature._addAssign_operation (operand_173599->mAttributType, var_cas_outPassingMode) ;
          operand_173599 = operand_173599->nextObject () ;
        }
        var_cas_mapModifierMethodMap.method_insertKey (_inLexique, operand_173403->mMethodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4480)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_174028 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_174028 != NULL)) {
          macroValidPointer (operand_174028) ;
          var_cas_methodSignature._addAssign_operation (operand_174028->mAttributType, var_cas_outPassingMode) ;
          operand_174028 = operand_174028->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, ((operand_173403->mMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4488))) + (GGS_string (true, "GetIndex"))), operand_173403->mMethodName.reader_location (_inLexique SOURCE_FILE_AT_LINE (4488)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.method_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4489)) ;
        operand_173403 = operand_173403->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4500)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_typeDefinitionTableAimplementer::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_listeTypeeAttributsExternesCourants, var_cas_cppClassName, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_tableMethodesBloc COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_mapMethodMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_mapMethodMap  var_cas_mapReaderMethodMap ;
      var_cas_mapReaderMethodMap = GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_43 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_errorMessage SOURCE_FILE_AT_LINE (4545)) ;
              }
              GGS_string var_cas_shadowErrorMessage ;
              switch (select_semantics_parser_44 (_inLexique)) {
                case 1 : {
                  var_cas_shadowErrorMessage = GGS_string (true, "") ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  GGS_lstring  var_cas_shadowErrorMessageString ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_shadowErrorMessageString.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  if (var_cas_shadowErrorMessageString._isBuilt ()) {
                    ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_shadowErrorMessageString SOURCE_FILE_AT_LINE (4553)) ;
                  }
                  var_cas_shadowErrorMessage = var_cas_shadowErrorMessageString.reader_string (_inLexique SOURCE_FILE_AT_LINE (4554)) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_177559 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_177559 != NULL)) {
                macroValidPointer (operand_177559) ;
                var_cas_methodSignature._addAssign_operation (operand_177559->mAttributType, var_cas_inPassingMode) ;
                operand_177559 = operand_177559->nextObject () ;
              }
              var_cas_mapModifierMethodMap.method_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4563)) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4564)), GGS_bool (true, false), var_cas_shadowErrorMessage) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4566))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_178164 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_178164 != NULL)) {
                  macroValidPointer (operand_178164) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_178164->mAttributType, var_cas_inPassingMode) ;
                  operand_178164 = operand_178164->nextObject () ;
                }
                var_cas_mapModifierMethodMap.method_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4573)) ;
                var_cas_insertMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4574)), GGS_bool (true, true), var_cas_shadowErrorMessage) ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_K_escapeCharacters (_inLexique,  var_cas_errorMessage SOURCE_FILE_AT_LINE (4582)) ;
              }
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_178954 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_178954 != NULL)) {
                macroValidPointer (operand_178954) ;
                var_cas_methodSignature._addAssign_operation (operand_178954->mAttributType, var_cas_outPassingMode) ;
                operand_178954 = operand_178954->nextObject () ;
              }
              var_cas_mapReaderMethodMap.method_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4590)) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4591)), GGS_bool (true, false), GGS_string (true, "")) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4593))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_179574 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_179574 != NULL)) {
                  macroValidPointer (operand_179574) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_179574->mAttributType, var_cas_outPassingMode) ;
                  operand_179574 = operand_179574->nextObject () ;
                }
                var_cas_mapReaderMethodMap.method_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4600)) ;
                var_cas_searchMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4601)), GGS_bool (true, true), GGS_string (true, "")) ;
              }
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapReaderMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4613)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_mapToImplement::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_listeTypeeAttributsExternesCourants, var_cas_insertMethodList, var_cas_searchMethodList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4355_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  GGS_lstring  var_cas_mapTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_mapTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_41 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4636)) SOURCE_FILE_AT_LINE (4636))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4636)) SOURCE_FILE_AT_LINE (4636))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapType::constructor_new (_inLexique, var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.method_insertKey (_inLexique, var_cas_mapTypeName, var_cas_t SOURCE_FILE_AT_LINE (4638)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
      GGS_lstring  var_cas_cppClassName ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_cppClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_42 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4657)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4664)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_block) ;
              GGS_lstring  var_cas_nomMethode ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomMethode.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut ;
              var_cas_tableDebut = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin ;
              var_cas_tableFin = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              var_cas_tableMethodesBloc.method_insertKey (_inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin SOURCE_FILE_AT_LINE (4699)) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapMethodMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList::element_type * operand_184462 = var_cas_insertMethodList.firstObject () ;
      while ((operand_184462 != NULL)) {
        macroValidPointer (operand_184462) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_184660 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_184660 != NULL)) {
          macroValidPointer (operand_184660) ;
          var_cas_methodSignature._addAssign_operation (operand_184660->mAttributType, var_cas_inPassingMode) ;
          operand_184660 = operand_184660->nextObject () ;
        }
        var_cas_mapModifierMethodMap.method_insertKey (_inLexique, operand_184462->mMethodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4728)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_185091 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_185091 != NULL)) {
          macroValidPointer (operand_185091) ;
          var_cas_methodSignature._addAssign_operation (operand_185091->mAttributType, var_cas_inPassingMode) ;
          operand_185091 = operand_185091->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, ((operand_184462->mMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4736))) + (GGS_string (true, "GetIndex"))), operand_184462->mMethodName.reader_location (_inLexique SOURCE_FILE_AT_LINE (4736)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.method_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4737)) ;
        operand_184462 = operand_184462->nextObject () ;
      }
      GGS_insertOrSearchMethodList::element_type * operand_185441 = var_cas_searchMethodList.firstObject () ;
      while ((operand_185441 != NULL)) {
        macroValidPointer (operand_185441) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_185639 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_185639 != NULL)) {
          macroValidPointer (operand_185639) ;
          var_cas_methodSignature._addAssign_operation (operand_185639->mAttributType, var_cas_outPassingMode) ;
          operand_185639 = operand_185639->nextObject () ;
        }
        var_cas_mapModifierMethodMap.method_insertKey (_inLexique, operand_185441->mMethodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4746)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_186071 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_186071 != NULL)) {
          macroValidPointer (operand_186071) ;
          var_cas_methodSignature._addAssign_operation (operand_186071->mAttributType, var_cas_outPassingMode) ;
          operand_186071 = operand_186071->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, ((operand_185441->mMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4754))) + (GGS_string (true, "GetIndex"))), operand_185441->mMethodName.reader_location (_inLexique SOURCE_FILE_AT_LINE (4754)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.method_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4755)) ;
        operand_185441 = operand_185441->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4766)) ;
      GGS_TypeModel  var_cas_type ;
      var_cas_type = GGS_MapModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.method_insertKey (_inLexique, var_cas_mapTypeName, var_cas_type SOURCE_FILE_AT_LINE (4768)) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_mapMethodMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_mapMethodMap  var_cas_mapReaderMethodMap ;
      var_cas_mapReaderMethodMap = GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_43 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_188177 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_188177) ;
              switch (select_semantics_parser_44 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_188472 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_188472 != NULL)) {
                macroValidPointer (operand_188472) ;
                var_cas_methodSignature._addAssign_operation (operand_188472->mAttributType, var_cas_inPassingMode) ;
                operand_188472 = operand_188472->nextObject () ;
              }
              var_cas_mapModifierMethodMap.method_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4813)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4815))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_189017 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_189017 != NULL)) {
                  macroValidPointer (operand_189017) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_189017->mAttributType, var_cas_inPassingMode) ;
                  operand_189017 = operand_189017->nextObject () ;
                }
                var_cas_mapModifierMethodMap.method_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4822)) ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_189404 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_189404) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_189619 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_189619 != NULL)) {
                macroValidPointer (operand_189619) ;
                var_cas_methodSignature._addAssign_operation (operand_189619->mAttributType, var_cas_outPassingMode) ;
                operand_189619 = operand_189619->nextObject () ;
              }
              var_cas_mapReaderMethodMap.method_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4836)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4838))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_190205 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_190205 != NULL)) {
                  macroValidPointer (operand_190205) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_190205->mAttributType, var_cas_outPassingMode) ;
                  operand_190205 = operand_190205->nextObject () ;
                }
                var_cas_mapReaderMethodMap.method_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4845)) ;
              }
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapReaderMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4857)) ;
      GGS_TypeModel  var_cas_type ;
      var_cas_type = GGS_MapModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.method_insertKey (_inLexique, var_cas_mapTypeName, var_cas_type SOURCE_FILE_AT_LINE (4859)) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_4355_29_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  switch (select_semantics_parser_41 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_42 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              nt_ex_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              nt_ex_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_block) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_43 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              nt_map_method_parse (_inLexique) ;
              switch (select_semantics_parser_44 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              nt_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'ex_map_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_ex_map_method_semantics_parser_4866_21_ (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_nomMethode,
                                GGS_lstring  &var_cas_outMessage) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomMethode.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_outMessage.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_ex_map_method_semantics_parser_4866_21_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'map_method'               *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_map_method_semantics_parser_4878_18_ (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_methodName,
                                GGS_lstring  &var_cas_getIndexMethodName,
                                GGS_lstring  &var_cas_outMessage) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_methodName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_45 (_inLexique)) {
    case 1 : {
      var_cas_getIndexMethodName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_getIndexMethodName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_outMessage.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_map_method_semantics_parser_4878_18_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  switch (select_semantics_parser_45 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'message_pattern'             *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_message_pattern_semantics_parser_4897_23_ (galgas_scanner & _inLexique,
                                GGS_L_stringList  &var_cas_outMessageList) {
  var_cas_outMessageList = GGS_L_stringList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_semantics_parser_47 (_inLexique)) {
          case 1 : {
            GGS_lstring  var_cas_messageText ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
            var_cas_messageText.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            if (((var_cas_messageText.reader_string (_inLexique SOURCE_FILE_AT_LINE (4905))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
              var_cas_outMessageList._addAssign_operation (var_cas_messageText.reader_string (_inLexique SOURCE_FILE_AT_LINE (4906))) ;
            }
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
            var_cas_outMessageList._addAssign_operation (GGS_string (true, "")) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_semantics_parser_46 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_message_pattern_semantics_parser_4897_23_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_semantics_parser_47 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_semantics_parser_46 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4923_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_listTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_48 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4936)) SOURCE_FILE_AT_LINE (4936))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4936)) SOURCE_FILE_AT_LINE (4936))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.method_insertKey (_inLexique, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (4938)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4960)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_listTypeToImplement::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_listeTypeeAttributsExternesCourants COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4923_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_listTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_48 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4977)) SOURCE_FILE_AT_LINE (4977))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4977)) SOURCE_FILE_AT_LINE (4977))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.method_insertKey (_inLexique, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (4979)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5001)) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ListModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.method_insertKey (_inLexique, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (5003)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_4923_29_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  switch (select_semantics_parser_48 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'attributes_definition_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_attributes_definition_list_semantics_parser_5013_34_ (galgas_scanner & _inLexique,
                                GGS_typeListModel  &var_cas_outAttributeListModel,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeAttributsSemantiquesCourants,
                                GGS_L_nameWithType  &var_cas_listeTypeeAttributsExternesCourants,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_listeTypeeAttributsExternesCourants = GGS_L_nameWithType::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_listeAttributsSemantiquesCourants = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_outAttributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_49 (_inLexique)) {
        case 2 : {
          GGS_AC_galgasType  var_cas_definitionType ;
          GGS_lstring  var_cas_typeName ;
          nt_type_parsing_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
          GGS_lstring  var_cas_attributeName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_attributeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          var_cas_tableAttributs.method_insertKey (_inLexique, var_cas_attributeName, var_cas_definitionType SOURCE_FILE_AT_LINE (5037)) ;
          var_cas_listeTousAttributsSemantiques._addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_listeAttributsSemantiquesCourants._addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_outAttributeListModel._addAssign_operation (var_cas_typeName) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_attributes_definition_list_semantics_parser_5013_34_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_49 (_inLexique)) {
        case 2 : {
          nt_type_parsing_parse (_inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5051_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extern) ;
  GGS_lstring  var_cas_externTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_externTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_cppClassName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_cppClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  GGS_lstring  var_cas_path ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_path.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_typeTableMethodes  var_cas_modifiersMap ;
  var_cas_modifiersMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap ;
  var_cas_readersInInstructionMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall ;
  var_cas_acceptAddAssignOperatorCall = GGS_bool (true, false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList ;
  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_externTypeConstructorMap  var_cas_constructorsMap ;
  var_cas_constructorsMap = GGS_M_externTypeConstructorMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_50 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constructor) ;
          GGS_lstring  var_cas_constructorName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_constructorName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList ;
          var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semantics_parser_51 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                  var_cas_parameterName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  var_cas_constructorArgumentTypesList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          var_cas_constructorsMap.method_insertKey (_inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList SOURCE_FILE_AT_LINE (5100)) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
          GGS_lstring  var_cas_methodName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_methodName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
          var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_L_signature  var_cas_signatureForGrammarComponent ;
          nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          var_cas_readersInInstructionMap.method_insertKey (_inLexique, var_cas_methodName, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (5120)) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_modifier) ;
          switch (select_semantics_parser_52 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_methodName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_methodName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
              var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              var_cas_modifiersMap.method_insertKey (_inLexique, var_cas_methodName, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (5140)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_3D) ;
              GGS_location  var_cas_errorLocation ;
              var_cas_errorLocation = GGS_location (_inLexique) ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                  switch (select_repeat_semantics_parser_53 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                      var_cas_parameterName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                      var_cas_addAssignOperatorCallTypeList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              if ((var_cas_acceptAddAssignOperatorCall).isBuiltAndTrue ()) {
                var_cas_errorLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'+=' operator is already defined") SOURCE_FILE_AT_LINE (5161)) ;
              }else{
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true, true) ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeEntityToGenerate  var_cas_t ;
  var_cas_t = GGS_typeExternTypeToGenerate::constructor_new (_inLexique, var_cas_externTypeName, var_cas_cppClassName, var_cas_path COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_t) ;
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasExternType::constructor_new (_inLexique, var_cas_externTypeName, var_cas_cppClassName, var_cas_constructorsMap, var_cas_modifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_externTypeName, var_cas_e SOURCE_FILE_AT_LINE (5179)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5051_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extern) ;
  GGS_lstring  var_cas_externTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_externTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_cppClassName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_cppClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_typeTableMethodes  var_cas_EXmodifiersMap ;
  var_cas_EXmodifiersMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap ;
  var_cas_readersInInstructionMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall ;
  var_cas_acceptAddAssignOperatorCall = GGS_bool (true, false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList ;
  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_externTypeConstructorMap  var_cas_EXconstructorsMap ;
  var_cas_EXconstructorsMap = GGS_M_externTypeConstructorMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_constructorMap  var_cas_constructorMap ;
  var_cas_constructorMap = GGS_constructorMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_readerMap  var_cas_readerMap ;
  var_cas_readerMap = GGS_readerMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_modifierMap  var_cas_modifierMap ;
  var_cas_modifierMap = GGS_modifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListModel  var_cas_addAssignFormalInputArgumentList ;
  var_cas_addAssignFormalInputArgumentList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_50 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constructor) ;
          GGS_lstring  var_cas_constructorName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_constructorName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList ;
          var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeListModel  var_cas_formalInputArgumentList ;
          var_cas_formalInputArgumentList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semantics_parser_51 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                  var_cas_parameterName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  var_cas_constructorArgumentTypesList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  var_cas_formalInputArgumentList._addAssign_operation (var_cas_galgasTypeName) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          var_cas_EXconstructorsMap.method_insertKey (_inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList SOURCE_FILE_AT_LINE (5235)) ;
          var_cas_constructorMap.method_insertKey (_inLexique, var_cas_constructorName, var_cas_formalInputArgumentList SOURCE_FILE_AT_LINE (5236)) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
          GGS_lstring  var_cas_readerName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_readerName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
          var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_L_signature  var_cas_signature ;
          nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          var_cas_readersInInstructionMap.method_insertKey (_inLexique, var_cas_readerName, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (5256)) ;
          var_cas_readerMap.method_insertKey (_inLexique, var_cas_readerName, var_cas_signature SOURCE_FILE_AT_LINE (5257)) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_modifier) ;
          switch (select_semantics_parser_52 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_modifierName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_modifierName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
              var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_L_signature  var_cas_signature ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
              var_cas_EXmodifiersMap.method_insertKey (_inLexique, var_cas_modifierName, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (5277)) ;
              var_cas_modifierMap.method_insertKey (_inLexique, var_cas_modifierName, var_cas_signature SOURCE_FILE_AT_LINE (5278)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_3D) ;
              if (((var_cas_addAssignFormalInputArgumentList.reader_length (_inLexique SOURCE_FILE_AT_LINE (5281))) > (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'+=' operator is already defined") SOURCE_FILE_AT_LINE (5283)) ;
              }else{
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true, true) ;
              }
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                  switch (select_repeat_semantics_parser_53 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                      var_cas_parameterName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                      var_cas_addAssignOperatorCallTypeList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      var_cas_addAssignFormalInputArgumentList._addAssign_operation (var_cas_galgasTypeName) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasExternType::constructor_new (_inLexique, var_cas_externTypeName, var_cas_cppClassName, var_cas_EXconstructorsMap, var_cas_EXmodifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_externTypeName, var_cas_e SOURCE_FILE_AT_LINE (5314)) ;
  GGS_TypeModel  var_cas_t ;
  var_cas_t = GGS_ExternTypeModel::constructor_new (_inLexique, var_cas_constructorMap, var_cas_readerMap, var_cas_modifierMap, var_cas_addAssignFormalInputArgumentList COMMA_HERE) ;
  var_cas_ioModelMap.method_insertKey (_inLexique, var_cas_externTypeName, var_cas_t SOURCE_FILE_AT_LINE (5316)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5051_29_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extern) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_50 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constructor) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semantics_parser_51 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                  nt_formal_argument_type_parse (_inLexique) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          nt_formal_arguments_list_parse (_inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_modifier) ;
          switch (select_semantics_parser_52 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_3D) ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                  switch (select_repeat_semantics_parser_53 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                      nt_formal_argument_type_parse (_inLexique) ;
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5324_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5331)) SOURCE_FILE_AT_LINE (5331))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5333)) ;
    }
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_type_semantique._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5334)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_type_semantique = ptrExtraire_->aDefType ;
      }
    }
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique SOURCE_FILE_AT_LINE (5336)) ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5324_28_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_5324_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5346_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5354)) SOURCE_FILE_AT_LINE (5354))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5356)) ;
    }
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_type_semantique._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5357)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_type_semantique = ptrExtraire_->aDefType ;
      }
    }
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique SOURCE_FILE_AT_LINE (5359)) ;
    }
    { cPtr_typeGalgasUndefinedListType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasUndefinedListType *> (var_cas_type_semantique.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        if (var_cas_type_semantique.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeGalgasUndefinedListType::static_string_message_messageGalgasType () ;
          message2_ << var_cas_type_semantique (HERE)->message_messageGalgasType () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5360)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5346_28_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_5346_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5371_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5379)) SOURCE_FILE_AT_LINE (5379))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5381)) ;
    }
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_type_semantique._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5382)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_type_semantique = ptrExtraire_->aDefType ;
      }
    }
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique SOURCE_FILE_AT_LINE (5384)) ;
    }
    { cPtr_typeGalgasUndefinedMapType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasUndefinedMapType *> (var_cas_type_semantique.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        if (var_cas_type_semantique.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeGalgasUndefinedMapType::static_string_message_messageGalgasType () ;
          message2_ << var_cas_type_semantique (HERE)->message_messageGalgasType () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5385)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5371_28_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_5371_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5396_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_outGalgasTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5405)) SOURCE_FILE_AT_LINE (5405))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5407)) ;
    }
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_type_semantique._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5408)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_type_semantique = ptrExtraire_->aDefType ;
      }
    }
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique SOURCE_FILE_AT_LINE (5410)) ;
    }
    { cPtr_typeGalgasUndefinedClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasUndefinedClassType *> (var_cas_type_semantique.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        if (var_cas_type_semantique.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeGalgasUndefinedClassType::static_string_message_messageGalgasType () ;
          message2_ << var_cas_type_semantique (HERE)->message_messageGalgasType () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5411)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5396_28_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_outGalgasTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_5396_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5427_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_action) ;
  GGS_lstring  var_cas_nomAction ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomAction.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteActionExterne::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_nomAction, var_cas_entite SOURCE_FILE_AT_LINE (5451)) ;
  GGS_typeEntityToGenerate  var_cas_ea ;
  var_cas_ea = GGS_typeActionExterneAengendrer::constructor_new (_inLexique, var_cas_nomAction, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_ea) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5427_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_action) ;
  GGS_lstring  var_cas_actionName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_actionName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteActionExterne::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_actionName, var_cas_entite SOURCE_FILE_AT_LINE (5479)) ;
  var_cas_ioExternActionMap.method_insertKey (_inLexique, var_cas_actionName, var_cas_signature, GGS_bool (true, true) SOURCE_FILE_AT_LINE (5480)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5427_29_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_action) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5490_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_enum) ;
  GGS_lstring  var_cas_enumTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_enumTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_enumConstantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_enumConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeEnumMessageMap  var_cas_enumMessageMap ;
  var_cas_enumMessageMap = GGS_typeEnumMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_constantName ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        var_cas_constantName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
        var_cas_constantMap.method_insertKey (_inLexique, var_cas_constantName SOURCE_FILE_AT_LINE (5510)) ;
      switch (select_repeat_semantics_parser_54 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_55 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          GGS_lstring  var_cas_messageName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_messageName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          GGS_typeEnumCstMessageStringMap  var_cas_cstMessageStringMap ;
          var_cas_cstMessageStringMap = GGS_typeEnumCstMessageStringMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                GGS_lstring  var_cas_cstName ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                var_cas_cstName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
                GGS_lstring  var_cas_cstString ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                var_cas_cstString.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                var_cas_cstMessageStringMap.method_insertKey (_inLexique, var_cas_cstName, var_cas_cstString SOURCE_FILE_AT_LINE (5529)) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              switch (select_repeat_semantics_parser_56 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
          GGS_L_lstringList  var_cas_messageStringList ;
          var_cas_messageStringList = GGS_L_lstringList::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_enumConstantMap::element_type * operand_215883 = var_cas_constantMap.firstObject () ;
          while ((operand_215883 != NULL)) {
            macroValidPointer (operand_215883) ;
            GGS_lstring  var_cas_name ;
            var_cas_name = GGS_lstring::constructor_new (_inLexique, operand_215883->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (5537)), GGS_location (_inLexique) COMMA_HERE) ;
            GGS_lstring  var_cas_cstString ;
            if (var_cas_cstMessageStringMap._isBuilt ()) {
              var_cas_cstMessageStringMap (HERE)->method_searchKey (_inLexique, var_cas_name, var_cas_cstString SOURCE_FILE_AT_LINE (5539)) ;
            }
            var_cas_messageStringList._addAssign_operation (var_cas_cstString) ;
            operand_215883 = operand_215883->nextObject () ;
          }
          var_cas_enumMessageMap.method_insertKey (_inLexique, var_cas_messageName, var_cas_messageStringList SOURCE_FILE_AT_LINE (5543)) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  GGS_typeEntityToGenerate  var_cas_e ;
  var_cas_e = GGS_enumGalgasType::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_e) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_enum::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_ee ;
  var_cas_ee = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_enumTypeName, var_cas_ee SOURCE_FILE_AT_LINE (5555)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5490_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_enum) ;
  GGS_lstring  var_cas_enumTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_enumTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_enumConstantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_enumConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_constantName ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        var_cas_constantName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
        var_cas_constantMap.method_insertKey (_inLexique, var_cas_constantName SOURCE_FILE_AT_LINE (5574)) ;
      switch (select_repeat_semantics_parser_54 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeEnumMessageMap  var_cas_exEnumMessageMap ;
  var_cas_exEnumMessageMap = GGS_typeEnumMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumMessageMap  var_cas_enumMessageMap ;
  var_cas_enumMessageMap = GGS_enumMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_55 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          GGS_lstring  var_cas_messageName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_messageName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          var_cas_enumMessageMap.method_insertKey (_inLexique, var_cas_messageName SOURCE_FILE_AT_LINE (5588)) ;
          GGS_L_lstringList  var_cas_messageStringList ;
          var_cas_messageStringList = GGS_L_lstringList::constructor_emptyList (_inLexique COMMA_HERE) ;
          var_cas_exEnumMessageMap.method_insertKey (_inLexique, var_cas_messageName, var_cas_messageStringList SOURCE_FILE_AT_LINE (5590)) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              switch (select_repeat_semantics_parser_56 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_enum::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_exEnumMessageMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.method_insertKey (_inLexique, var_cas_enumTypeName, var_cas_e SOURCE_FILE_AT_LINE (5607)) ;
  GGS_TypeModel  var_cas_type ;
  var_cas_type = GGS_EnumModel::constructor_new (_inLexique, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  var_cas_ioModelMap.method_insertKey (_inLexique, var_cas_enumTypeName, var_cas_type SOURCE_FILE_AT_LINE (5609)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5490_29_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_enum) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      switch (select_repeat_semantics_parser_54 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_55 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              switch (select_repeat_semantics_parser_56 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*

