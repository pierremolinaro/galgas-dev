//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semantics_parser.cpp'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 16th, 2007, at 21h1'59"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "semantics_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "semantics_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_445_6_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &var_cas_ioLexiqueMapForUse,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &var_cas_ioTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  GGS_lstring  var_cas_componentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_string var_cas_defLexique ;
  var_cas_defLexique = GGS_string (true, "") ;
  GGS_ModelMap  var_cas_modelMap ;
  var_cas_modelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_ActionMap  var_cas_actionMap ;
  var_cas_actionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_inclusionsForHeaderFile ;
  GGS_stringset  var_cas_inclusionsForImplementationFile ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentEntitiesMap ;
  GGS_stringset  var_cas_classNamesSet ;
  var_cas_classNamesSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  GGS_stringset  var_cas_includedGrammarComponents ;
  GGS_entityToImplementMap  var_cas_allMetamodelClassMap ;
  nt_import_headers_semantics_and_grammars_ (_inLexique, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_includedGrammarComponents, var_cas_ioLexiqueMapForUse, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap, var_cas_ioGrammarComponentsMap, var_cas_ioOptionsComponentsMap, var_cas_inclusionsForImplementationFile, var_cas_inclusionsForHeaderFile, var_cas_optionsComponentsMapForUse, var_cas_modelMap, var_cas_actionMap, var_cas_componentEntitiesMap, var_cas_tableEnAvant, var_cas_allMetamodelClassMap) ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_19504 = _inLexique.parsingContext () ;
    GGS_typeTableRoutinesAimplementer  var_cas_UNUSED_tableRoutinesAimplementer ;
    var_cas_UNUSED_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_UNUSED_tableNomRoutinesDeclarees ;
    var_cas_UNUSED_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableEnAvant  var_cas_UNUSED_tableEnAvant ;
    var_cas_UNUSED_tableEnAvant = var_cas_tableEnAvant ;
    GGS_M_semanticsEntitiesForUse  var_cas_UNUSED_componentSemanticsEntitiesMap ;
    var_cas_UNUSED_componentSemanticsEntitiesMap = var_cas_componentEntitiesMap ;
    { bool syntaxRepeat = true ;
      while (syntaxRepeat) {
        switch (select_repeat_semantics_parser_0 (_inLexique)) {
          case 2 : {
            nt_semantics_declaration_importSemantics (_inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_UNUSED_componentSemanticsEntitiesMap, var_cas_UNUSED_tableNomRoutinesDeclarees, var_cas_UNUSED_tableEnAvant, var_cas_UNUSED_tableRoutinesAimplementer, var_cas_ioTreewalkingComponentMap) ;
            } break ;
          default :
            syntaxRepeat = false ;
            break ;
        }
      }
    }
  //--- Branch of parse/rewind instruction
    _inLexique.setParsingContext (context_19504) ;
    GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer ;
    var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees ;
    var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
    var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
    GGS_treewalkingRoutineHeaderMap  var_cas_treewalkingRoutineHeaderMap ;
    var_cas_treewalkingRoutineHeaderMap = GGS_treewalkingRoutineHeaderMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
    { bool syntaxRepeat = true ;
      while (syntaxRepeat) {
        switch (select_repeat_semantics_parser_0 (_inLexique)) {
          case 2 : {
            nt_semantics_declaration_ (_inLexique, var_cas_componentEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_optionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioTreewalkingComponentMap) ;
            } break ;
          default :
            syntaxRepeat = false ;
            break ;
        }
      }
    }
  //--- End of parse/rewind instruction
  if (((! (var_cas_ioSemanticsComponentsMap.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (535)) SOURCE_FILE_AT_LINE (535))))).isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap ;
    var_cas_optionsComponentsMap = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
    var_cas_ioSemanticsComponentsMap.modifier_insertKey (_inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentEntitiesMap SOURCE_FILE_AT_LINE (537)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeTableNomRoutinesDeclarees::element_type * operand_20096 = var_cas_tableNomRoutinesDeclarees.firstObject () ;
  while ((operand_20096 != NULL)) {
    macroValidPointer (operand_20096) ;
    if (((! (var_cas_tableRoutinesAimplementer.reader_hasKey (_inLexique, operand_20096->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (554)) SOURCE_FILE_AT_LINE (554))))).isBuiltAndTrue ()) {
      operand_20096->mKey.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the routine '")) + (operand_20096->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (555))))) + (GGS_string (true, "' is not implemented within the component"))) SOURCE_FILE_AT_LINE (557)) ;
    }
    operand_20096 = operand_20096->nextObject () ;
  }
  if (var_cas_componentName._isBuilt () &&
      var_cas_inclusionsForHeaderFile._isBuilt () &&
      var_cas_defLexique._isBuilt () &&
      var_cas_listeEntitesAengendrer._isBuilt () &&
      var_cas_inclusionsForImplementationFile._isBuilt ()) {
    ::routine_generateSemanticsComponent (_inLexique,  var_cas_componentName,  var_cas_inclusionsForHeaderFile,  var_cas_defLexique,  var_cas_listeEntitesAengendrer,  var_cas_inclusionsForImplementationFile SOURCE_FILE_AT_LINE (560)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_445_6_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_treewalkingComponents  &/* var_cas_ioTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_445_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &var_cas_ioTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  GGS_lstring  var_cas_componentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  ::routine_enterBuiltinTypes (_inLexique, var_cas_componentSemanticsEntitiesMap SOURCE_FILE_AT_LINE (593)) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  var_cas_includedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_ModelMap  var_cas_modelMap ;
  GGS_ActionMap  var_cas_actionMap ;
  nt_import_headers_semantics_and_grammars_importSemantics (_inLexique, var_cas_ioSemanticsComponentsMap, var_cas_includedSemanticsComponents, var_cas_includedOptionComponents, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap) ;
  GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer ;
  var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees ;
  var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_importSemantics (_inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioTreewalkingComponentMap) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (((! (var_cas_ioSemanticsComponentsMap.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (626)) SOURCE_FILE_AT_LINE (626))))).isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap ;
    var_cas_optionsComponentsMap = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
    var_cas_ioSemanticsComponentsMap.modifier_insertKey (_inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentSemanticsEntitiesMap SOURCE_FILE_AT_LINE (628)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_445_6_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_445_6_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_treewalkingComponents  &/* var_cas_ioTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_445_6_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'import_headers_semantics_and_grammars'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_695_6_ (galgas_scanner & _inLexique,
                                GGS_stringset  &var_cas_outImportedSemanticsComponents,
                                GGS_stringset  &var_cas_outIncludedMetamodelComponents,
                                GGS_stringset  &var_cas_outImportedOptionComponents,
                                GGS_stringset  &var_cas_outImportedGrammarComponents,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &var_cas_ioTreewalkingComponentMap,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_stringset  &var_cas_outInclusionsForImplementationFile,
                                GGS_stringset  &var_cas_outInclusionsForHeaderFile,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_entityToImplementMap  &var_cas_outAllMetamodelClassMap) {
  var_cas_outAllMetamodelClassMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outActionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outInclusionsForHeaderFile = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outInclusionsForImplementationFile = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outIncludedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedOptionComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedGrammarComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_ioOptionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "char"), GGS_location (_inLexique) COMMA_HERE), GGS_CharModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (729)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "string"), GGS_location (_inLexique) COMMA_HERE), GGS_StringModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (731)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "uint"), GGS_location (_inLexique) COMMA_HERE), GGS_UIntModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (733)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "sint"), GGS_location (_inLexique) COMMA_HERE), GGS_SIntModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (735)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "uint64"), GGS_location (_inLexique) COMMA_HERE), GGS_UInt64Model::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (737)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "sint64"), GGS_location (_inLexique) COMMA_HERE), GGS_SInt64Model::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (739)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "bool"), GGS_location (_inLexique) COMMA_HERE), GGS_BoolModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (741)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "double"), GGS_location (_inLexique) COMMA_HERE), GGS_DoubleModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (743)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lchar"), GGS_location (_inLexique) COMMA_HERE), GGS_LCharModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (745)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lstring"), GGS_location (_inLexique) COMMA_HERE), GGS_LStringModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (747)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "luint"), GGS_location (_inLexique) COMMA_HERE), GGS_LUIntModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (749)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lsint"), GGS_location (_inLexique) COMMA_HERE), GGS_LSIntModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (751)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "luint64"), GGS_location (_inLexique) COMMA_HERE), GGS_LUInt64Model::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (753)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lsint64"), GGS_location (_inLexique) COMMA_HERE), GGS_LSInt64Model::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (755)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lbool"), GGS_location (_inLexique) COMMA_HERE), GGS_LBoolModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (757)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "ldouble"), GGS_location (_inLexique) COMMA_HERE), GGS_LDoubleModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (759)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "location"), GGS_location (_inLexique) COMMA_HERE), GGS_LocationModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (761)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "stringset"), GGS_location (_inLexique) COMMA_HERE), GGS_StringsetModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (763)) ;
  ::routine_enterBuiltinTypes (_inLexique, var_cas_ioComponentSemanticsEntitiesMap SOURCE_FILE_AT_LINE (764)) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents ;
  var_cas_alreadyImportedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents ;
  var_cas_alreadyImportedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
              GGS_lstring  var_cas_treewalkingComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_treewalkingComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForImplementationFile._addAssign_operation (((var_cas_treewalkingComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (776))) + (GGS_string (true, ".h")))) ;
              switch (select_semantics_parser_3 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_fileName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_fileName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_fileName, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              GGS_lstring  var_cas_optionComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_optionComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outImportedOptionComponents._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (793))) ;
              GGS_M_cli_options  var_cas_boolOptionsMap ;
              GGS_M_cli_options  var_cas_uintOptionsMap ;
              GGS_M_cli_options  var_cas_stringOptionsMap ;
              switch (select_semantics_parser_4 (_inLexique)) {
                case 1 : {
                  if (var_cas_ioOptionsComponentsMap._isBuilt ()) {
                    var_cas_ioOptionsComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (798)) ;
                  }
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_fileName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_fileName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  GGS_M_optionComponents  var_cas_importedOptionComponentsMap ;
                  var_cas_importedOptionComponentsMap = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
                  nt_parse_option_component_for_importing_ (_inLexique, var_cas_fileName, var_cas_importedOptionComponentsMap) ;
                  if (var_cas_importedOptionComponentsMap._isBuilt ()) {
                    var_cas_importedOptionComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (808)) ;
                  }
                  } break ;
                default :
                  break ;
              }
              var_cas_ioOptionsComponentsMapForUse.modifier_insertKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (810)) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              GGS_lstring  var_cas_grammarComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_grammarComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outImportedGrammarComponents._addAssign_operation (var_cas_grammarComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (815))) ;
              GGS_M_grammarComponents  var_cas_grammarComponentsMap ;
              switch (select_semantics_parser_5 (_inLexique)) {
                case 1 : {
                  var_cas_grammarComponentsMap = var_cas_ioGrammarComponentsMap ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  var_cas_grammarComponentsMap = GGS_M_grammarComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
                  nt_parse_grammar_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_grammarComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioTreewalkingComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              GGS_M_nonterminalSymbolAltsForGrammar  var_cas_nonterminalSymbolParametersMap ;
              GGS_lstring  var_cas_lexiqueClassName ;
              GGS_M_optionComponents  automatic_var_0 ;
              if (var_cas_grammarComponentsMap._isBuilt ()) {
                var_cas_grammarComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_grammarComponentName, var_cas_nonterminalSymbolParametersMap, var_cas_lexiqueClassName, automatic_var_0 SOURCE_FILE_AT_LINE (834)) ;
              }
              GGS_M_nonterminalSymbolAlts  var_cas_grammarAltMap ;
              var_cas_grammarAltMap = GGS_M_nonterminalSymbolAlts::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_M_nonterminalSymbolAltsForGrammar::element_type * operand_30034 = var_cas_nonterminalSymbolParametersMap.firstObject () ;
              while ((operand_30034 != NULL)) {
                macroValidPointer (operand_30034) ;
                GGS_L_EXsignature  var_cas_formalParametersList ;
                var_cas_formalParametersList = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                GGS_L_signature::element_type * operand_30187 = operand_30034->mInfo.mFormalParametersList.firstObject () ;
                while ((operand_30187 != NULL)) {
                  macroValidPointer (operand_30187) ;
                  GGS_AC_semanticsEntity  var_cas_e ;
                  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
                    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, operand_30187->mGalgasTypeName, var_cas_e SOURCE_FILE_AT_LINE (840)) ;
                  }
                  GGS_AC_galgasType  var_cas_type ;
                  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_e.getPtr ()) ;
                    if (ptrExtraire_ == NULL) {
                      var_cas_type._drop_operation () ;
                      if (var_cas_e.getPtr () != NULL) {
                        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
                        C_String message2_ ;
                        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
                        message2_ << var_cas_e (HERE)->message_messageTypeEntite () ;
                        operand_30187->mGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (842)) ;
                      }
                    }else{
                      macroValidPointer (ptrExtraire_) ;
                      var_cas_type = ptrExtraire_->aDefType ;
                    }
                  }
                  var_cas_formalParametersList._addAssign_operation (var_cas_type, operand_30187->mFormalArgumentPassingMode) ;
                  operand_30187 = operand_30187->nextObject () ;
                }
                var_cas_grammarAltMap.modifier_insertKey (_inLexique, operand_30034->mKey, var_cas_formalParametersList, operand_30034->mInfo.mReturnedEntityTypeName SOURCE_FILE_AT_LINE (845)) ;
                operand_30034 = operand_30034->nextObject () ;
              }
              GGS_AC_semanticsEntity  var_cas_e ;
              var_cas_e = GGS_C_grammarForSemantics::constructor_new (_inLexique, var_cas_grammarAltMap, var_cas_lexiqueClassName COMMA_HERE) ;
              var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_grammarComponentName, var_cas_e SOURCE_FILE_AT_LINE (848)) ;
              GGS_lstring  var_cas_path ;
              var_cas_path = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_extension ;
              var_cas_extension = GGS_lstring::constructor_new (_inLexique, GGS_string (true, "h"), GGS_location (_inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_fileNameWithPath ;
              if (var_cas_path._isBuilt () &&
                  var_cas_grammarComponentName._isBuilt () &&
                  var_cas_extension._isBuilt ()) {
                ::routine_buildFileNameWithPath (_inLexique,  var_cas_fileNameWithPath,  var_cas_path,  var_cas_grammarComponentName,  var_cas_extension SOURCE_FILE_AT_LINE (852)) ;
              }
              var_cas_outInclusionsForImplementationFile._addAssign_operation (var_cas_fileNameWithPath.reader_string (_inLexique SOURCE_FILE_AT_LINE (853))) ;
              GGS_M_grammarComponents::element_type * operand_31164 = var_cas_grammarComponentsMap.firstObject () ;
              while ((operand_31164 != NULL)) {
                macroValidPointer (operand_31164) ;
                if (((! (var_cas_ioGrammarComponentsMap.reader_hasKey (_inLexique, operand_31164->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (858)) SOURCE_FILE_AT_LINE (858))))).isBuiltAndTrue ()) {
                  var_cas_ioGrammarComponentsMap.modifier_insertKey (_inLexique, operand_31164->mKey, operand_31164->mInfo.mNonterminalSymbolParametersMap, operand_31164->mInfo.mLexiqueName, operand_31164->mInfo.mOptionsMap SOURCE_FILE_AT_LINE (859)) ;
                }
                operand_31164 = operand_31164->nextObject () ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              GGS_lstring  var_cas_componentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_6 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              if (((! (var_cas_outImportedSemanticsComponents.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (883)) SOURCE_FILE_AT_LINE (883))))).isBuiltAndTrue ()) {
                GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
                GGS_M_optionComponents  var_cas_importedOptionsComponentsMap ;
                GGS_ModelMap  automatic_var_1 ;
                GGS_ActionMap  automatic_var_2 ;
                GGS_stringset  automatic_var_3 ;
                GGS_stringset  automatic_var_4 ;
                GGS_stringset  automatic_var_5 ;
                if (var_cas_ioSemanticsComponentsMap._isBuilt ()) {
                  var_cas_ioSemanticsComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_componentName, automatic_var_1, automatic_var_2, automatic_var_3, automatic_var_4, automatic_var_5, var_cas_importedOptionsComponentsMap, var_cas_importedEntities SOURCE_FILE_AT_LINE (886)) ;
                }
                GGS_M_semanticsEntitiesForUse::element_type * operand_32444 = var_cas_importedEntities.firstObject () ;
                while ((operand_32444 != NULL)) {
                  macroValidPointer (operand_32444) ;
                  if (((! (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, operand_32444->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (888)) SOURCE_FILE_AT_LINE (888))))).isBuiltAndTrue ()) {
                    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, operand_32444->mKey, operand_32444->mInfo.aDefEntite SOURCE_FILE_AT_LINE (889)) ;
                  }
                  operand_32444 = operand_32444->nextObject () ;
                }
                var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (892))) ;
                GGS_M_optionComponents::element_type * operand_32887 = var_cas_importedOptionsComponentsMap.firstObject () ;
                while ((operand_32887 != NULL)) {
                  macroValidPointer (operand_32887) ;
                  if (((! (var_cas_ioOptionsComponentsMapForUse.reader_hasKey (_inLexique, operand_32887->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (895)) SOURCE_FILE_AT_LINE (895))))).isBuiltAndTrue ()) {
                    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '")) + (operand_32887->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (896))))) + (GGS_string (true, "' option component must have been imported"))) SOURCE_FILE_AT_LINE (897)) ;
                  }
                  operand_32887 = operand_32887->nextObject () ;
                }
              }
              ::routine_importSemanticsComponent (_inLexique, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_outModelMap, var_cas_outActionMap, var_cas_alreadyImportedSemanticsComponents, var_cas_alreadyImportedMetamodelComponents, var_cas_componentName SOURCE_FILE_AT_LINE (900)) ;
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (911))) ;
              var_cas_outImportedSemanticsComponents._addAssign_operation (var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (912))) ;
              } break ;
            case 5 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
              GGS_lstring  var_cas_metamodelComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_metamodelComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_7 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              if (((! (var_cas_outIncludedMetamodelComponents.reader_hasKey (_inLexique, var_cas_metamodelComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (929)) SOURCE_FILE_AT_LINE (929))))).isBuiltAndTrue ()) {
                GGS_entityToImplementMap  var_cas_metamodelClassMap ;
                GGS_lstring  automatic_var_6 ;
                GGS_stringset  automatic_var_7 ;
                if (var_cas_ioMetamodelComponentMap._isBuilt ()) {
                  var_cas_ioMetamodelComponentMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelComponentName, automatic_var_6, var_cas_metamodelClassMap, automatic_var_7 SOURCE_FILE_AT_LINE (931)) ;
                }
                GGS_entityToImplementMap::element_type * operand_34320 = var_cas_metamodelClassMap.firstObject () ;
                while ((operand_34320 != NULL)) {
                  macroValidPointer (operand_34320) ;
                  var_cas_outAllMetamodelClassMap.modifier_insertKey (_inLexique, operand_34320->mKey, operand_34320->mInfo.mAllMetamodelPropertyMap, operand_34320->mInfo.mIsAbstract, operand_34320->mInfo.mCurrentMetamodelPropertyMap, operand_34320->mInfo.mSuperEntityName, operand_34320->mInfo.mAncestorClassesMap, operand_34320->mInfo.mPropertyList, operand_34320->mInfo.mMetamodelName SOURCE_FILE_AT_LINE (940)) ;
                  GGS_AC_semanticsEntity  var_cas_e ;
                  var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, GGS_typeGalgas_singleReferenceEntity::constructor_new (_inLexique, operand_34320->mKey COMMA_HERE) COMMA_HERE) ;
                  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, operand_34320->mKey, var_cas_e SOURCE_FILE_AT_LINE (951)) ;
                  operand_34320 = operand_34320->nextObject () ;
                }
                var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (956))) ;
              }
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (959))) ;
              var_cas_outIncludedMetamodelComponents._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (960))) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_695_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_stringset  &var_cas_outIncludedSemanticsComponents,
                                GGS_stringset  &var_cas_outIncludedOptionComponents,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &var_cas_ioTreewalkingComponentMap) {
  var_cas_outActionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outIncludedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outIncludedOptionComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents ;
  var_cas_alreadyImportedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents ;
  var_cas_alreadyImportedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_3 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              GGS_lstring  var_cas_optionComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_optionComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outIncludedOptionComponents._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (998))) ;
              switch (select_semantics_parser_4 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_option_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_5 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_grammar_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              GGS_lstring  var_cas_componentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outIncludedSemanticsComponents._addAssign_operation (var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1018))) ;
              switch (select_semantics_parser_6 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
              GGS_ModelMap  automatic_var_8 ;
              GGS_ActionMap  automatic_var_9 ;
              GGS_stringset  automatic_var_10 ;
              GGS_stringset  automatic_var_11 ;
              GGS_stringset  automatic_var_12 ;
              GGS_M_optionComponents  automatic_var_13 ;
              if (var_cas_ioSemanticsComponentsMap._isBuilt ()) {
                var_cas_ioSemanticsComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_componentName, automatic_var_8, automatic_var_9, automatic_var_10, automatic_var_11, automatic_var_12, automatic_var_13, var_cas_importedEntities SOURCE_FILE_AT_LINE (1032)) ;
              }
              GGS_M_semanticsEntitiesForUse::element_type * operand_37921 = var_cas_importedEntities.firstObject () ;
              while ((operand_37921 != NULL)) {
                macroValidPointer (operand_37921) ;
                if (((! (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, operand_37921->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1034)) SOURCE_FILE_AT_LINE (1034))))).isBuiltAndTrue ()) {
                  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, operand_37921->mKey, operand_37921->mInfo.aDefEntite SOURCE_FILE_AT_LINE (1035)) ;
                }
                operand_37921 = operand_37921->nextObject () ;
              }
              ::routine_importSemanticsComponent (_inLexique, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_outModelMap, var_cas_outActionMap, var_cas_alreadyImportedSemanticsComponents, var_cas_alreadyImportedMetamodelComponents, var_cas_componentName SOURCE_FILE_AT_LINE (1038)) ;
              } break ;
            case 5 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
              GGS_lstring  var_cas_metamodelComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_metamodelComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_7 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              GGS_lstring  automatic_var_14 ;
              GGS_entityToImplementMap  automatic_var_15 ;
              GGS_stringset  automatic_var_16 ;
              if (var_cas_ioMetamodelComponentMap._isBuilt ()) {
                var_cas_ioMetamodelComponentMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelComponentName, automatic_var_14, automatic_var_15, automatic_var_16 SOURCE_FILE_AT_LINE (1064)) ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_695_6_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_3 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_4 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_option_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_5 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_grammar_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_6 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 5 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_7 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1076_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                const GGS_M_treewalkingComponents  &var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_routineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_routineName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1104)) SOURCE_FILE_AT_LINE (1104))).isBuiltAndTrue ()) {
    GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_routineName, var_cas_entite SOURCE_FILE_AT_LINE (1107)) ;
    }
    { cPtr_typeEntiteRoutine * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteRoutine *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_listeDeTypesPrecedenteDeclaration._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteRoutine::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_routineName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1108)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_listeDeTypesPrecedenteDeclaration = ptrExtraire_->aListeArgumentsFormels ;
      }
    }
    ::routine_verifierCompatibiliteSignatures (_inLexique, var_cas_listeDeTypesPrecedenteDeclaration, var_cas_listeDeTypes, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (1109)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (_inLexique, var_cas_routineName SOURCE_FILE_AT_LINE (1115)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteRoutine::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_entite SOURCE_FILE_AT_LINE (1117)) ;
  }
  switch (select_semantics_parser_8 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_ioInstructionList ;
      var_cas_ioInstructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_entityPropertyMap  var_cas_propertyMap ;
      var_cas_propertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_treewalkingRoutineHeaderMap  var_cas_treewalkingRoutineHeaderMap ;
      var_cas_treewalkingRoutineHeaderMap = GGS_treewalkingRoutineHeaderMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_entityToImplementMap  var_cas_metamodelEntityMap ;
      var_cas_metamodelEntityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_semantic_instructions_list_ (_inLexique, var_cas_treewalkingRoutineHeaderMap, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_tableArgumentsMethode, var_cas_ioInstructionList, var_cas_propertyMap, var_cas_metamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      GGS_typeEntityToGenerate  var_cas_ea ;
      var_cas_ea = GGS_typeRoutineAengendrer::constructor_new (_inLexique, var_cas_routineName, var_cas_listeTypeEtNomsArguments, var_cas_ioInstructionList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_ea) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (_inLexique, var_cas_routineName SOURCE_FILE_AT_LINE (1149)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1076_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_routineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  var_cas_ioExternActionMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_signature, GGS_bool (true, false) SOURCE_FILE_AT_LINE (1177)) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_routineName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1180)) SOURCE_FILE_AT_LINE (1180))).isBuiltAndTrue ()) {
    GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_routineName, var_cas_entite SOURCE_FILE_AT_LINE (1183)) ;
    }
    { cPtr_typeEntiteRoutine * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteRoutine *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_listeDeTypesPrecedenteDeclaration._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteRoutine::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_routineName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1184)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_listeDeTypesPrecedenteDeclaration = ptrExtraire_->aListeArgumentsFormels ;
      }
    }
    ::routine_verifierCompatibiliteSignatures (_inLexique, var_cas_listeDeTypesPrecedenteDeclaration, var_cas_listeDeTypes, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (1185)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (_inLexique, var_cas_routineName SOURCE_FILE_AT_LINE (1191)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteRoutine::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_entite SOURCE_FILE_AT_LINE (1193)) ;
  }
  switch (select_semantics_parser_8 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      nt_semantic_instructions_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (_inLexique, var_cas_routineName SOURCE_FILE_AT_LINE (1204)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1076_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  switch (select_semantics_parser_8 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      nt_semantic_instructions_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1214_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClassName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1214_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outMessageMap = GGS_classMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClasses = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outAttributeList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1214_6_parse (galgas_scanner & /* _inLexique */) {
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1254_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outSuperClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_typeUtilisateur ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outSuperClassName, var_cas_entite SOURCE_FILE_AT_LINE (1269)) ;
  }
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_typeUtilisateur._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_outSuperClassName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1270)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_typeUtilisateur = ptrExtraire_->aDefType ;
    }
  }
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_typeUtilisateur.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_tableDesMethodes._drop_operation () ;
      var_cas_listeTousAttributsSemantiques._drop_operation () ;
      var_cas_tableDesClassesAncetres._drop_operation () ;
      var_cas_tableMessagesAbstraits._drop_operation () ;
      var_cas_tableAttributs._drop_operation () ;
      if (var_cas_typeUtilisateur.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_typeUtilisateur (HERE)->message_messageGalgasType () ;
        var_cas_outSuperClassName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1278)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_tableDesMethodes = ptrExtraire_->mReaderMap ;
      var_cas_listeTousAttributsSemantiques = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetres = ptrExtraire_->mAncestorClassesMap ;
      var_cas_tableMessagesAbstraits = ptrExtraire_->mMessagesMap ;
      var_cas_tableAttributs = ptrExtraire_->mNonExternAttributesMap ;
    }
  }
  var_cas_tableDesClassesAncetres.modifier_insertKey (_inLexique, var_cas_outSuperClassName SOURCE_FILE_AT_LINE (1280)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1254_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits) {
  GGS_lstring  var_cas_superClassName ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_superClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_typeUtilisateur ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_entite SOURCE_FILE_AT_LINE (1300)) ;
  }
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_typeUtilisateur._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_superClassName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1301)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_typeUtilisateur = ptrExtraire_->aDefType ;
    }
  }
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_typeUtilisateur.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_tableDesMethodes._drop_operation () ;
      var_cas_listeTousAttributsSemantiques._drop_operation () ;
      var_cas_tableDesClassesAncetres._drop_operation () ;
      var_cas_tableMessagesAbstraits._drop_operation () ;
      var_cas_tableAttributs._drop_operation () ;
      if (var_cas_typeUtilisateur.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_typeUtilisateur (HERE)->message_messageGalgasType () ;
        var_cas_superClassName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1309)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_tableDesMethodes = ptrExtraire_->mReaderMap ;
      var_cas_listeTousAttributsSemantiques = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetres = ptrExtraire_->mAncestorClassesMap ;
      var_cas_tableMessagesAbstraits = ptrExtraire_->mMessagesMap ;
      var_cas_tableAttributs = ptrExtraire_->mNonExternAttributesMap ;
    }
  }
  var_cas_tableDesClassesAncetres.modifier_insertKey (_inLexique, var_cas_superClassName SOURCE_FILE_AT_LINE (1311)) ;
  GGS_TypeModel  var_cas_type ;
  if (var_cas_ioModelMap._isBuilt ()) {
    var_cas_ioModelMap (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_type SOURCE_FILE_AT_LINE (1314)) ;
  }
  if (var_cas_type._isBuilt ()) {
    cPtr_ClassModel * operand_49578 = dynamic_cast <cPtr_ClassModel *> (var_cas_type.getPtr ()) ;
    if (operand_49578 != NULL) {
      macroValidPointer (operand_49578) ; 
      var_cas_outSuperClasses = operand_49578->mSuperClasses ;
      var_cas_outAttributeList = operand_49578->mAttributeList ;
      var_cas_outMessageMap = operand_49578->mMessageMap ;
    }else{ // Else part
      var_cas_superClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '@")) + (var_cas_superClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1321))))) + (GGS_string (true, "' type is not a class"))) SOURCE_FILE_AT_LINE (1323)) ;
      var_cas_outSuperClasses._drop_operation () ;
      var_cas_outAttributeList._drop_operation () ;
      var_cas_outMessageMap._drop_operation () ;
    }
  }
  var_cas_outSuperClasses._addAssign_operation (var_cas_superClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1324))) ;
  var_cas_outMessageMap = GGS_classMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClasses = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outAttributeList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1254_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1338_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  &var_cas_inTreewalkingComponentMap) {
  GGS_bool var_cas_estAbstraite ;
  switch (select_semantics_parser_9 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      var_cas_estAbstraite = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_estAbstraite = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_abstractClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_abstractClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_10 (_inLexique)) {
    case 1 : {
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1359)) SOURCE_FILE_AT_LINE (1359))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1360)) SOURCE_FILE_AT_LINE (1360))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType::constructor_new (_inLexique, var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t SOURCE_FILE_AT_LINE (1362)) ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_lstring  automatic_var_17 ;
      nt_parent_class_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap, automatic_var_17) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
      var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
      var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
      var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes ;
      var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_11 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              GGS_lstring  var_cas_messageName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_lstring  var_cas_messageText ;
              _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              if (((! (var_cas_inheritedMessageMap.reader_hasKey (_inLexique, var_cas_messageName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1407)) SOURCE_FILE_AT_LINE (1407))))).isBuiltAndTrue ()) {
                var_cas_messageMapForHeirs.modifier_insertKey (_inLexique, var_cas_messageName SOURCE_FILE_AT_LINE (1408)) ;
              }
              var_cas_tableMessagesClasseConcrete.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageText SOURCE_FILE_AT_LINE (1410)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_method_ (_inLexique, var_cas_estAbstraite, var_cas_listeAttributsSemantiquesCourants, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_inTreewalkingComponentMap) ;
              } break ;
            case 5 : {
              nt_overrided_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_inTreewalkingComponentMap) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeClassInheritedMessagesMap::element_type * operand_54541 = var_cas_inheritedMessageMap.firstObject () ;
      while ((operand_54541 != NULL)) {
        macroValidPointer (operand_54541) ;
        if (((! (var_cas_tableMessagesClasseConcrete.reader_hasKey (_inLexique, operand_54541->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1457)) SOURCE_FILE_AT_LINE (1457))))).isBuiltAndTrue ()) {
          GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the message '")) + (operand_54541->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1458))))) + (GGS_string (true, "' is not defined"))) SOURCE_FILE_AT_LINE (1459)) ;
        }
        operand_54541 = operand_54541->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_entite SOURCE_FILE_AT_LINE (1471)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_classToImplement::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_estAbstraite, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesClassesAncetres, var_cas_tableMessagesClasseConcrete COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1338_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  &var_cas_inTreewalkingComponentMap) {
  GGS_bool var_cas_estAbstraite ;
  switch (select_semantics_parser_9 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      var_cas_estAbstraite = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_estAbstraite = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_abstractClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_abstractClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_10 (_inLexique)) {
    case 1 : {
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1507)) SOURCE_FILE_AT_LINE (1507))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1508)) SOURCE_FILE_AT_LINE (1508))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType::constructor_new (_inLexique, var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t SOURCE_FILE_AT_LINE (1510)) ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_stringset  var_cas_superClasses ;
      GGS_typeListModel  var_cas_attributeList ;
      GGS_classMessageMap  var_cas_messageMap ;
      nt_parent_class_importSemantics (_inLexique, var_cas_ioModelMap, var_cas_superClasses, var_cas_attributeList, var_cas_messageMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeList, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
      var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
      var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
      var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes ;
      var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
      var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
      var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_11 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              GGS_lstring  var_cas_messageName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_lstring  var_cas_messageText ;
              _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              if (((! (var_cas_inheritedMessageMap.reader_hasKey (_inLexique, var_cas_messageName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1562)) SOURCE_FILE_AT_LINE (1562))))).isBuiltAndTrue ()) {
                var_cas_messageMapForHeirs.modifier_insertKey (_inLexique, var_cas_messageName SOURCE_FILE_AT_LINE (1563)) ;
              }
              var_cas_tableMessagesClasseConcrete.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageText SOURCE_FILE_AT_LINE (1565)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_method_ (_inLexique, var_cas_estAbstraite, var_cas_listeAttributsSemantiquesCourants, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_inTreewalkingComponentMap) ;
              } break ;
            case 5 : {
              nt_overrided_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_inTreewalkingComponentMap) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeClassInheritedMessagesMap::element_type * operand_59857 = var_cas_inheritedMessageMap.firstObject () ;
      while ((operand_59857 != NULL)) {
        macroValidPointer (operand_59857) ;
        if (((! (var_cas_tableMessagesClasseConcrete.reader_hasKey (_inLexique, operand_59857->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1611)) SOURCE_FILE_AT_LINE (1611))))).isBuiltAndTrue ()) {
          GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the message '")) + (operand_59857->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1612))))) + (GGS_string (true, "' is not defined"))) SOURCE_FILE_AT_LINE (1613)) ;
        }
        operand_59857 = operand_59857->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_entite SOURCE_FILE_AT_LINE (1625)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ClassModel::constructor_new (_inLexique, GGS_bool (true, true), var_cas_superClasses, var_cas_attributeList, var_cas_messageMap COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t SOURCE_FILE_AT_LINE (1628)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1338_6_parse (galgas_scanner & _inLexique) {
  switch (select_semantics_parser_9 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_10 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      nt_parent_class_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_11 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_method_parse (_inLexique) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_parse (_inLexique) ;
              } break ;
            case 5 : {
              nt_overrided_method_parse (_inLexique) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'abstract_method'             *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_abstract_method_semantics_parser_1636_6_ (galgas_scanner & _inLexique,
                                const GGS_bool &var_cas_inIsAbstract,
                                GGS_typeListeAttributsSemantiques  &/* var_cas_listeAttributsSemantiquesCourants */,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  if (((! (var_cas_inIsAbstract))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a concrete class should not declare an abstract method") SOURCE_FILE_AT_LINE (1649)) ;
  }
  GGS_lstring  var_cas_nomMethode ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  var_cas_tableDesMethodes.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (1664)) ;
  GGS_typeInstructionList  var_cas_listeInstructions ;
  var_cas_listeInstructions = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableMethodesAimplementer.modifier_insertAbstract (_inLexique, var_cas_nomMethode, var_cas_listeDeTypes, var_cas_listeTypeEtNomsArguments, var_cas_listeInstructions SOURCE_FILE_AT_LINE (1666)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_abstract_method_semantics_parser_1636_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parse_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_method_semantics_parser_1672_6_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  &var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                const GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  &var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  &var_cas_tableAttributsHerites,
                                const GGS_bool &var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outMethodName,
                                GGS_typeInstructionList  &var_cas_outInstructionsList,
                                GGS_L_EXsignature  &var_cas_outMethodSignature,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_treewalkingComponents  &var_cas_inTreewalkingComponentMap) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outMethodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap ;
  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeSemanticAttributesMap::element_type * operand_63455 = var_cas_tableAttributsHerites.firstObject () ;
  while ((operand_63455 != NULL)) {
    macroValidPointer (operand_63455) ;
    GGS_typeCplusPlusName  var_cas_nomCpp ;
    var_cas_nomCpp = GGS_typeDirectName::constructor_new (_inLexique, operand_63455->mKey COMMA_HERE) ;
    var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_63455->mKey, operand_63455->mInfo.mAttributType, var_cas_nomCpp SOURCE_FILE_AT_LINE (1696)) ;
    operand_63455 = operand_63455->nextObject () ;
  }
  GGS_lstring  var_cas_me_Constant ;
  var_cas_me_Constant = GGS_lstring::constructor_new (_inLexique, GGS_string (true, "self"), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_me_constantCppName ;
  var_cas_me_constantCppName = GGS_typeCppThisName::constructor_new (_inLexique COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_typeDefinition ;
  var_cas_typeDefinition = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_inCurrentClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, var_cas_me_Constant, var_cas_typeDefinition, var_cas_me_constantCppName SOURCE_FILE_AT_LINE (1709)) ;
  GGS_lstring  var_cas_super_Constant ;
  var_cas_super_Constant = GGS_lstring::constructor_new (_inLexique, GGS_string (true, "super"), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_super_constantCppName ;
  var_cas_super_constantCppName = GGS_typeCppInheritedName::constructor_new (_inLexique COMMA_HERE) ;
  var_cas_typeDefinition = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, var_cas_super_Constant, var_cas_typeDefinition, var_cas_super_constantCppName SOURCE_FILE_AT_LINE (1721)) ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_outMethodSignature, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  var_cas_componentSemanticsEntitiesMap = var_cas_ioComponentSemanticsEntitiesMap ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_typeDefinition COMMA_HERE) ;
  var_cas_componentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_inCurrentClassName, var_cas_entite SOURCE_FILE_AT_LINE (1736)) ;
  var_cas_outInstructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_entityPropertyMap  var_cas_propertyMap ;
  var_cas_propertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_treewalkingRoutineHeaderMap  var_cas_treewalkingRoutineHeaderMap ;
  var_cas_treewalkingRoutineHeaderMap = GGS_treewalkingRoutineHeaderMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap  var_cas_metamodelEntityMap ;
  var_cas_metamodelEntityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_treewalkingRoutineHeaderMap, var_cas_tableEnAvant, var_cas_componentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_outInstructionsList, var_cas_propertyMap, var_cas_metamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_method_semantics_parser_1672_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'non_abstract_method'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_non_abstract_method_semantics_parser_1757_6_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  &var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  &var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                const GGS_bool &var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_treewalkingComponents  &var_cas_inTreewalkingComponentMap) {
  switch (select_semantics_parser_12 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old syntax: from GALGAS 1.5.1, use 'method' instead of 'reader'") SOURCE_FILE_AT_LINE (1776)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_method_ (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_inOptionsComponentsMapForUse, var_cas_inTreewalkingComponentMap) ;
  var_cas_tableDesMethodes.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (1800)) ;
  var_cas_tableMethodesAimplementer.modifier_insertNotAbstract (_inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList SOURCE_FILE_AT_LINE (1801)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  switch (select_semantics_parser_13 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old syntax: from GALGAS 1.5.1, use 'method' instead of 'reader'") SOURCE_FILE_AT_LINE (1807)) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_non_abstract_method_semantics_parser_1757_6_parse (galgas_scanner & _inLexique) {
  switch (select_semantics_parser_12 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  nt_parse_method_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  switch (select_semantics_parser_13 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'overrided_method'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_overrided_method_semantics_parser_1814_6_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  &var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  &var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                const GGS_bool &var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_treewalkingComponents  &var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
  switch (select_semantics_parser_14 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old syntax: from GALGAS 1.5.1, use 'method' instead of 'reader'") SOURCE_FILE_AT_LINE (1834)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_method_ (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_inOptionsComponentsMapForUse, var_cas_inTreewalkingComponentMap) ;
  GGS_L_EXsignature  var_cas_listeDeTypesMethodeOriginale ;
  if (var_cas_tableDesMethodes._isBuilt ()) {
    var_cas_tableDesMethodes (HERE)->method_searchKey (_inLexique, var_cas_methodName, var_cas_listeDeTypesMethodeOriginale SOURCE_FILE_AT_LINE (1860)) ;
  }
  ::routine_verifierCompatibiliteSignatures (_inLexique, var_cas_listeDeTypesMethodeOriginale, var_cas_methodSignature, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (1861)) ;
  var_cas_tableMethodesAimplementer.modifier_insertNotAbstract (_inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList SOURCE_FILE_AT_LINE (1867)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  switch (select_semantics_parser_15 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old syntax: from GALGAS 1.5.1, use 'method' instead of 'reader'") SOURCE_FILE_AT_LINE (1873)) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_overrided_method_semantics_parser_1814_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
  switch (select_semantics_parser_14 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  nt_parse_method_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  switch (select_semantics_parser_15 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'formal_arguments_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_arguments_list_semantics_parser_1883_6_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_EXsignature  &var_cas_listeDeTypes,
                                GGS_typeVariablesMap  &var_cas_tableArgumentsMethode,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_L_signature  &var_cas_outSignatureForGrammar) {
  var_cas_listeDeTypes = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_listeTypeEtNomsArguments = GGS_typeListeTypesEtNomsArgMethode::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_outSignatureForGrammar = GGS_L_signature::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_16 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, true) ;
          switch (select_semantics_parser_17 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (1915)) ;
              } break ;
            case 2 : {
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
              var_cas_tableArgumentsMethode.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (1920)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_18 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, true)) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (1941)) ;
              } break ;
            case 2 : {
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, true)) ;
              var_cas_tableArgumentsMethode.modifier_insertInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (1947)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          switch (select_semantics_parser_19 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, false)) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (1968)) ;
              } break ;
            case 2 : {
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, false)) ;
              var_cas_tableArgumentsMethode.modifier_insertInOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (1973)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_typeCplusPlusName  var_cas_natureNom ;
          var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, false) ;
          var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
          var_cas_tableArgumentsMethode.modifier_insertOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (1993)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_arguments_list_semantics_parser_1883_6_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_L_signature  &var_cas_outSignature) {
  var_cas_outSignature = GGS_L_signature::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_16 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_17 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_18 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_19 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_arguments_list_semantics_parser_1883_6_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_16 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_17 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_18 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_19 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'type_parsing'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_type_parsing_semantics_parser_2050_6_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  &var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_outTypeDefinition,
                                GGS_lstring  &var_cas_outTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2057)) SOURCE_FILE_AT_LINE (2057))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_entite SOURCE_FILE_AT_LINE (2059)) ;
    }
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_outTypeDefinition._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (2060)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_outTypeDefinition = ptrExtraire_->aDefType ;
      }
    }
  }else if ((var_cas_inTableEnAvant.reader_hasKey (_inLexique, var_cas_outTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2061)) SOURCE_FILE_AT_LINE (2061))).isBuiltAndTrue ()) {
    if (var_cas_inTableEnAvant._isBuilt ()) {
      var_cas_inTableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_outTypeDefinition SOURCE_FILE_AT_LINE (2062)) ;
    }
  }else{
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '@")) + (var_cas_outTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2064))))) + (GGS_string (true, "' type is not defined"))) SOURCE_FILE_AT_LINE (2065)) ;
    var_cas_outTypeDefinition._drop_operation () ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_type_parsing_semantics_parser_2050_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2075_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_inTargetVarName,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_AC_galgasType  var_cas_targetVarType ;
  GGS_typeCplusPlusName  var_cas_targetVarCppName ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, var_cas_targetVarType, var_cas_targetVarCppName SOURCE_FILE_AT_LINE (2098)) ;
  ::routine_checkAssignmentTypesCompatibility (_inLexique, var_cas_targetVarType, var_cas_sourceType, GGS_location (_inLexique), GGS_bool (true, true) SOURCE_FILE_AT_LINE (2099)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_assignmentInstruction::constructor_new (_inLexique, var_cas_targetVarCppName, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2075_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2112_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_inTargetVarName,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_3D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_AC_galgasType  var_cas_targetVarType ;
  GGS_typeCplusPlusName  var_cas_targetVarCppName ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, var_cas_targetVarType, var_cas_targetVarCppName SOURCE_FILE_AT_LINE (2135)) ;
  GGS_string var_cas_sourceExpressionConverter ;
  if (var_cas_targetVarType._isBuilt () && var_cas_sourceType._isBuilt ()) {
    cPtr_AC_galgasType * ptr_80363 = var_cas_targetVarType (HERE) ;
    cPtr_AC_galgasType * ptr_80377 = var_cas_sourceType (HERE) ;
    cPtr_typeGalgas_string * operand_80363 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_80363) ;
    cPtr_typeGalgas_string * operand_80377 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_80377) ;
    if ((operand_80363 != NULL) && (operand_80377 != NULL)) {
      var_cas_sourceExpressionConverter = GGS_string (true, "") ;
    }else{
      cPtr_typeGalgas_string * operand_80363 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_80363) ;
      cPtr_typeGalgas_lstring * operand_80377 = dynamic_cast <cPtr_typeGalgas_lstring *> (ptr_80377) ;
      if ((operand_80363 != NULL) && (operand_80377 != NULL)) {
        var_cas_sourceExpressionConverter = GGS_string (true, "ggs_string") ;
      }else{
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "for '.=' operator, ")) + (var_cas_targetVarType.reader_messageGalgasType (_inLexique SOURCE_FILE_AT_LINE (2144))))) + (GGS_string (true, " target object type is not compatible with ")))) + (var_cas_sourceType.reader_messageGalgasType (_inLexique SOURCE_FILE_AT_LINE (2145))))) + (GGS_string (true, " source expression type"))) SOURCE_FILE_AT_LINE (2147)) ;
        var_cas_sourceExpressionConverter._drop_operation () ;
      }
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_dotEqualInstruction::constructor_new (_inLexique, var_cas_targetVarCppName, var_cas_sourceExpression, var_cas_sourceExpressionConverter COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2112_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_3D) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'input_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_input_parameters_list_semantics_parser_2161_6_ (galgas_scanner & _inLexique,
                                GGS_L_assignedVariables  &var_cas_listeAffectationParametresEffectifs,
                                GGS_typeCplusPlusNameList  &var_cas_outAllVariablesList,
                                GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap) {
  GGS_typeListeCibles  var_cas_listeCibles ;
  var_cas_listeCibles = GGS_typeListeCibles::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_20 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          switch (select_semantics_parser_21 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_nomVariableDest ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomVariableDest) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_AC_galgasType  var_cas_typeVarDest ;
              GGS_typeCplusPlusName  var_cas_nomCppDest ;
              var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomVariableDest, var_cas_typeVarDest, var_cas_nomCppDest SOURCE_FILE_AT_LINE (2176)) ;
              var_cas_listeCibles._addAssign_operation (GGS_typeEntiteDest::constructor_new (_inLexique, var_cas_typeVarDest, var_cas_nomCppDest, GGS_location (_inLexique) COMMA_HERE)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              var_cas_listeCibles._addAssign_operation (GGS_typeJoker::constructor_new (_inLexique COMMA_HERE)) ;
              } break ;
            case 3 : {
              GGS_luint  var_cas_jokerCountWithLocation ;
              _inLexique._assignFromAttribute_uint32value (var_cas_jokerCountWithLocation) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              GGS_uint  var_cas_jokerCount ;
              var_cas_jokerCount = var_cas_jokerCountWithLocation.reader_uint (_inLexique SOURCE_FILE_AT_LINE (2185)) ;
              GGS_uint _variant_82264 = var_cas_jokerCount._add_operation (_inLexique, GGS_uint (true, 1U) SOURCE_FILE_AT_LINE (2186)) ;
              GGS_bool _condition_82264 (_variant_82264._isBuilt (), true) ;
              while (_condition_82264.isBuiltAndTrue ()) {
                _condition_82264 = (var_cas_jokerCount) > (GGS_uint (true, 0U)) ;
                if (_condition_82264.isBuiltAndTrue ()) {
                  if (_variant_82264.uintValue () == 0) {
                    _inLexique.onTheFlyRunTimeError ("loop variant error" SOURCE_FILE_AT_LINE (2190)) ;
                    _condition_82264 = GGS_bool (true, false) ;
                  }else{
                    _variant_82264._decrement_operation (_inLexique COMMA_HERE) ;
                    var_cas_listeCibles._addAssign_operation (GGS_typeJoker::constructor_new (_inLexique COMMA_HERE)) ;
                    var_cas_jokerCount._decrement_operation (_inLexique SOURCE_FILE_AT_LINE (2189)) ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_bool var_cas_ellipsis ;
  switch (select_semantics_parser_22 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_2E_2E) COMMA_HERE) ;
      var_cas_ellipsis = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_ellipsis = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  if (((var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2201))) < (var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2201)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "too much arguments: ")) + (var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2202)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2202))))) + (GGS_string (true, " expected, ")))) + (var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2203)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2203))))) + (GGS_string (true, " found"))) SOURCE_FILE_AT_LINE (2205)) ;
    var_cas_outAllVariablesList._drop_operation () ;
    var_cas_listeAffectationParametresEffectifs._drop_operation () ;
  }else if (((((var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2205))) > (var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2205)))) & ((! (var_cas_ellipsis))))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "argument(s) missing: ")) + (var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2206)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2206))))) + (GGS_string (true, " expected, ")))) + (var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2207)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2207))))) + (GGS_string (true, " found"))) SOURCE_FILE_AT_LINE (2209)) ;
    var_cas_outAllVariablesList._drop_operation () ;
    var_cas_listeAffectationParametresEffectifs._drop_operation () ;
  }else{
    var_cas_listeAffectationParametresEffectifs = GGS_L_assignedVariables::constructor_emptyList (_inLexique COMMA_HERE) ;
    var_cas_outAllVariablesList = GGS_typeCplusPlusNameList::constructor_emptyList (_inLexique COMMA_HERE) ;
    GGS_typeListeAttributsSemantiques::element_type * operand_83282 = var_cas_listeAttributsSemantiques.firstObject () ;
    GGS_typeListeCibles::element_type * operand_83364 = var_cas_listeCibles.firstObject () ;
    while ((operand_83282 != NULL)
        && (operand_83364 != NULL)) {
      macroValidPointer (operand_83282) ;
      macroValidPointer (operand_83364) ;
      GGS_lstring  var_cas_nomAttributSource ;
      var_cas_nomAttributSource = operand_83282->aNomAttribut ;
      if (operand_83364->aCible._isBuilt ()) {
        operand_83364->aCible (HERE)->method_verifierType (_inLexique, operand_83282->mAttributType, var_cas_nomAttributSource, var_cas_listeAffectationParametresEffectifs, var_cas_outAllVariablesList SOURCE_FILE_AT_LINE (2215)) ;
      }
      operand_83282 = operand_83282->nextObject () ;
      operand_83364 = operand_83364->nextObject () ;
    }
  }
  GGS_typeCplusPlusName  var_cas_nullName ;
  var_cas_nullName = GGS_typeNullName::constructor_new (_inLexique COMMA_HERE) ;
  if (var_cas_outAllVariablesList._isBuilt () &&
      var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2222))._isBuilt () &&
      var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2223))._isBuilt () &&
      var_cas_nullName._isBuilt ()) {
    ::routine_appendJokersIfNeeded (_inLexique,  var_cas_outAllVariablesList,  var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2222)),  var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2223)),  var_cas_nullName SOURCE_FILE_AT_LINE (2220)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_input_parameters_list_semantics_parser_2161_6_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_20 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          switch (select_semantics_parser_21 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_22 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_2E_2E) COMMA_HERE) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2236_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource SOURCE_FILE_AT_LINE (2249)) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleAddAssignOperatorCall (_inLexique, GGS_location (_inLexique), var_cas_formalParametersList SOURCE_FILE_AT_LINE (2252)) ;
  }
  GGS_typeTypesList  var_cas_typeList ;
  var_cas_typeList = GGS_typeTypesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeExpressionList  var_cas_expressionList ;
  var_cas_expressionList = GGS_typeExpressionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList._addAssign_operation (var_cas_resultType, GGS_location (_inLexique)) ;
        var_cas_expressionList._addAssign_operation (var_cas_expression) ;
      switch (select_repeat_semantics_parser_23 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (((var_cas_formalParametersList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2272))) != (var_cas_typeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2272)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((var_cas_typeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2273)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2273))) + (GGS_string (true, " argument(s), while ")))) + (var_cas_formalParametersList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2273)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2273))))) + (GGS_string (true, " are needed"))) SOURCE_FILE_AT_LINE (2274)) ;
  }else{
    GGS_typeListeAttributsSemantiques::element_type * operand_85960 = var_cas_formalParametersList.firstObject () ;
    GGS_typeTypesList::element_type * operand_86030 = var_cas_typeList.firstObject () ;
    while ((operand_85960 != NULL)
        && (operand_86030 != NULL)) {
      macroValidPointer (operand_85960) ;
      macroValidPointer (operand_86030) ;
      ::routine_checkAssignmentTypesCompatibility (_inLexique, operand_85960->mAttributType, operand_86030->mType, operand_86030->mEndOfExpressionLocation, GGS_bool (true, true) SOURCE_FILE_AT_LINE (2277)) ;
      operand_85960 = operand_85960->nextObject () ;
      operand_86030 = operand_86030->nextObject () ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeAppendInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2236_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        nt_expression_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_23 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2297_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource SOURCE_FILE_AT_LINE (2310)) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleMinusAssignOperatorCall (_inLexique, GGS_location (_inLexique), var_cas_formalParametersList SOURCE_FILE_AT_LINE (2313)) ;
  }
  GGS_typeTypesList  var_cas_typeList ;
  var_cas_typeList = GGS_typeTypesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeExpressionList  var_cas_expressionList ;
  var_cas_expressionList = GGS_typeExpressionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList._addAssign_operation (var_cas_resultType, GGS_location (_inLexique)) ;
        var_cas_expressionList._addAssign_operation (var_cas_expression) ;
      switch (select_repeat_semantics_parser_24 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (((var_cas_formalParametersList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2333))) != (var_cas_typeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2333)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((var_cas_typeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2334)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2334))) + (GGS_string (true, " argument(s), while ")))) + (var_cas_formalParametersList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2334)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2334))))) + (GGS_string (true, " are needed"))) SOURCE_FILE_AT_LINE (2335)) ;
  }else{
    GGS_typeListeAttributsSemantiques::element_type * operand_88531 = var_cas_formalParametersList.firstObject () ;
    GGS_typeTypesList::element_type * operand_88601 = var_cas_typeList.firstObject () ;
    while ((operand_88531 != NULL)
        && (operand_88601 != NULL)) {
      macroValidPointer (operand_88531) ;
      macroValidPointer (operand_88601) ;
      ::routine_checkAssignmentTypesCompatibility (_inLexique, operand_88531->mAttributType, operand_88601->mType, operand_88601->mEndOfExpressionLocation, GGS_bool (true, true) SOURCE_FILE_AT_LINE (2338)) ;
      operand_88531 = operand_88531->nextObject () ;
      operand_88601 = operand_88601->nextObject () ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeRemoveInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2297_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3D) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        nt_expression_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_24 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2358_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_2B) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource SOURCE_FILE_AT_LINE (2371)) ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleIncrementOperatorCall (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (2373)) ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeIncrementInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2358_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_2B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2387_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_2D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource SOURCE_FILE_AT_LINE (2400)) ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleDecrementOperatorCall (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (2402)) ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeDecrementInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2387_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_2D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'actual_parameters_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_actual_parameters_list_semantics_parser_2412_6_ (galgas_scanner & _inLexique,
                                const GGS_L_EXsignature  &var_cas_listeTypesParametresFormels,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_outExpressionList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique, var_cas_listeTypesParametresFormels, var_cas_listeTypesParametresEffectifs, GGS_location (_inLexique), var_cas_ioInstructionList, var_cas_outExpressionList SOURCE_FILE_AT_LINE (2428)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_actual_parameters_list_semantics_parser_2412_6_parse (galgas_scanner & _inLexique) {
  nt_parse_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'parse_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_parameters_list_semantics_parser_2443_6_ (galgas_scanner & _inLexique,
                                GGS_L_actualParametersSignature  &var_cas_listeTypesParametresEffectifs,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_outExpressionList = GGS_typeExpressionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_listeTypesParametresEffectifs = GGS_L_actualParametersSignature::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_exclusiveVariables ;
  var_cas_exclusiveVariables = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_25 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_expressionType ;
          GGS_typeExpression  var_cas_expressionValue ;
          nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_expressionValue, var_cas_expressionType) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterOut (_inLexique COMMA_HERE) ;
          var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_expressionType, var_cas_parameterPassingMode) ;
          var_cas_outExpressionList._addAssign_operation (var_cas_expressionValue) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterIn (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_26 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              var_cas_listeTypesParametresEffectifs._addAssign_operation (GGS_typeGalgas_jokerInParameterList::constructor_new (_inLexique COMMA_HERE), var_cas_parameterPassingMode) ;
              var_cas_outExpressionList._addAssign_operation (GGS_typeJokerInExpression::constructor_new (_inLexique COMMA_HERE)) ;
              } break ;
            case 2 : {
              GGS_luint  var_cas_jokerCountWithLocation ;
              _inLexique._assignFromAttribute_uint32value (var_cas_jokerCountWithLocation) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              GGS_uint  var_cas_jokerCount ;
              var_cas_jokerCount = var_cas_jokerCountWithLocation.reader_uint (_inLexique SOURCE_FILE_AT_LINE (2478)) ;
              GGS_uint _variant_94948 = var_cas_jokerCount._add_operation (_inLexique, GGS_uint (true, 1U) SOURCE_FILE_AT_LINE (2479)) ;
              GGS_bool _condition_94948 (_variant_94948._isBuilt (), true) ;
              while (_condition_94948.isBuiltAndTrue ()) {
                _condition_94948 = (var_cas_jokerCount) > (GGS_uint (true, 0U)) ;
                if (_condition_94948.isBuiltAndTrue ()) {
                  if (_variant_94948.uintValue () == 0) {
                    _inLexique.onTheFlyRunTimeError ("loop variant error" SOURCE_FILE_AT_LINE (2484)) ;
                    _condition_94948 = GGS_bool (true, false) ;
                  }else{
                    _variant_94948._decrement_operation (_inLexique COMMA_HERE) ;
                    var_cas_listeTypesParametresEffectifs._addAssign_operation (GGS_typeGalgas_jokerInParameterList::constructor_new (_inLexique COMMA_HERE), var_cas_parameterPassingMode) ;
                    var_cas_outExpressionList._addAssign_operation (GGS_typeJokerInExpression::constructor_new (_inLexique COMMA_HERE)) ;
                    var_cas_jokerCount._decrement_operation (_inLexique SOURCE_FILE_AT_LINE (2483)) ;
                  }
                }
              }
              } break ;
            case 3 : {
              GGS_AC_galgasType  var_cas_typeArgument ;
              GGS_typeCplusPlusName  var_cas_nomCppArgument ;
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument SOURCE_FILE_AT_LINE (2490)) ;
              var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
              GGS_typeExpression  var_cas_e ;
              var_cas_e = GGS_typeVarInExpression::constructor_new (_inLexique, var_cas_nomCppArgument COMMA_HERE) ;
              var_cas_outExpressionList._addAssign_operation (var_cas_e) ;
              if ((var_cas_exclusiveVariables.reader_hasKey (_inLexique, var_cas_nomArgument.reader_string (_inLexique SOURCE_FILE_AT_LINE (2494)) SOURCE_FILE_AT_LINE (2494))).isBuiltAndTrue ()) {
                var_cas_nomArgument.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this object is already named as input or output/input effectif argument of current instruction") SOURCE_FILE_AT_LINE (2496)) ;
              }else{
                var_cas_exclusiveVariables._addAssign_operation (var_cas_nomArgument.reader_string (_inLexique SOURCE_FILE_AT_LINE (2497))) ;
              }
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_typeArgument ;
          GGS_typeCplusPlusName  var_cas_nomCppArgument ;
          GGS_lstring  var_cas_nomArgument ;
          _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument SOURCE_FILE_AT_LINE (2506)) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterOutIn (_inLexique COMMA_HERE) ;
          var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
          GGS_typeExpression  var_cas_e ;
          var_cas_e = GGS_typeVarInExpression::constructor_new (_inLexique, var_cas_nomCppArgument COMMA_HERE) ;
          var_cas_outExpressionList._addAssign_operation (var_cas_e) ;
          if ((var_cas_exclusiveVariables.reader_hasKey (_inLexique, var_cas_nomArgument.reader_string (_inLexique SOURCE_FILE_AT_LINE (2511)) SOURCE_FILE_AT_LINE (2511))).isBuiltAndTrue ()) {
            var_cas_nomArgument.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this object is already named as input or output/input effectif argument of current instruction") SOURCE_FILE_AT_LINE (2513)) ;
          }else{
            var_cas_exclusiveVariables._addAssign_operation (var_cas_nomArgument.reader_string (_inLexique SOURCE_FILE_AT_LINE (2514))) ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_parameters_list_semantics_parser_2443_6_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_25 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          nt_expression_parse (_inLexique) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          switch (select_semantics_parser_26 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'semantic_instructions_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instructions_list_semantics_parser_2523_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  &var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  &var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  &var_cas_inTreewalkingComponentMap) {
  var_cas_ioVariablesMap.prologue_verifyVariableUsing (_inLexique SOURCE_FILE_AT_LINE (2534)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
  var_cas_ioVariablesMap.epilogue_verifyVariableUsing (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (2534)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_semantics_parser_2523_6_parse (galgas_scanner & _inLexique) {
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2555_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  &/* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_call) COMMA_HERE) ;
  GGS_lstring  var_cas_calledPropertyName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_calledPropertyName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_propertyType ;
  if (var_cas_inCurrentTreewalkingRoutinePropertyMap._isBuilt ()) {
    var_cas_inCurrentTreewalkingRoutinePropertyMap (HERE)->method_searchKey (_inLexique, var_cas_calledPropertyName, var_cas_propertyType SOURCE_FILE_AT_LINE (2571)) ;
  }
  GGS_lstring  var_cas_entityName ;
  if (var_cas_propertyType._isBuilt ()) {
    cPtr_typeGalgas_singleReferenceEntity * operand_98829 = dynamic_cast <cPtr_typeGalgas_singleReferenceEntity *> (var_cas_propertyType.getPtr ()) ;
    if (operand_98829 != NULL) {
      macroValidPointer (operand_98829) ; 
      var_cas_entityName = operand_98829->mEntityTypeName ;
    }else{
      cPtr_typeGalgas_multipleReferenceEntity * operand_98928 = dynamic_cast <cPtr_typeGalgas_multipleReferenceEntity *> (var_cas_propertyType.getPtr ()) ;
      if (operand_98928 != NULL) {
        macroValidPointer (operand_98928) ; 
        var_cas_entityName = operand_98928->mEntityTypeName ;
      }else{ // Else part
        var_cas_calledPropertyName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this property should be a single or a multiple reference") SOURCE_FILE_AT_LINE (2580)) ;
        var_cas_entityName._drop_operation () ;
      }
    }
  }
  GGS_L_EXsignature  var_cas_routineSignature ;
  if ((var_cas_inTreewalkingRoutineHeaderMap.reader_hasKey (_inLexique, var_cas_entityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2583)) SOURCE_FILE_AT_LINE (2583))).isBuiltAndTrue ()) {
    GGS_typeListeTypesEtNomsArgMethode  automatic_var_18 ;
    if (var_cas_inTreewalkingRoutineHeaderMap._isBuilt ()) {
      var_cas_inTreewalkingRoutineHeaderMap (HERE)->method_searchKey (_inLexique, var_cas_entityName, var_cas_routineSignature, automatic_var_18 SOURCE_FILE_AT_LINE (2584)) ;
    }
  }else{
    var_cas_calledPropertyName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "there is no treewalking routine for the '%")) + (var_cas_entityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2587))))) + (GGS_string (true, "' metamodel class"))) SOURCE_FILE_AT_LINE (2590)) ;
    var_cas_routineSignature._drop_operation () ;
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_parameters_list_ (_inLexique, var_cas_routineSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_callInstruction::constructor_new (_inLexique, var_cas_calledPropertyName, var_cas_entityName, var_cas_propertyType, var_cas_expressionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2555_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_call) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_actual_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2618_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  &var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  &var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  &var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_typeVarSource ;
  GGS_typeCplusPlusName  var_cas_sourceVarCppName ;
  GGS_lstring  var_cas_nomVarSource ;
  nt_read_access_ (_inLexique, var_cas_nomVarSource, var_cas_sourceVarCppName, var_cas_typeVarSource, var_cas_ioVariablesMap) ;
  GGS_lstring  var_cas_nomTypeSource ;
  GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits ;
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_typeVarSource.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_nomTypeSource._drop_operation () ;
      var_cas_tableMessagesAbstraits._drop_operation () ;
      if (var_cas_typeVarSource.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_typeVarSource (HERE)->message_messageGalgasType () ;
        var_cas_nomVarSource.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (2640)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_nomTypeSource = ptrExtraire_->mClassTypeName ;
      var_cas_tableMessagesAbstraits = ptrExtraire_->mMessagesMap ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  nt_extract_instruction_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceVarCppName, var_cas_nomTypeSource, var_cas_tableMessagesAbstraits, var_cas_instruction, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2618_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
  nt_read_access_parse (_inLexique) ;
  nt_extract_instruction_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_extract_instruction_semantics_parser_2665_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  &/* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits,
                                GGS_typeInstruction  &var_cas_outInstruction,
                                const GGS_entityPropertyMap  &/* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  GGS_lstring  var_cas_nomClasse ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomClasse) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_leType ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomClasse, var_cas_entite SOURCE_FILE_AT_LINE (2686)) ;
  }
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_leType._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_nomClasse.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (2687)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_leType = ptrExtraire_->aDefType ;
    }
  }
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_leType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_listeAttributsSemantiques._drop_operation () ;
      var_cas_tableDesClassesAncetres._drop_operation () ;
      if (var_cas_leType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_leType (HERE)->message_messageGalgasType () ;
        var_cas_nomClasse.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (2698)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_listeAttributsSemantiques = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetres = ptrExtraire_->mAncestorClassesMap ;
    }
  }
  if (((! (var_cas_tableDesClassesAncetres.reader_hasKey (_inLexique, var_cas_nomTypeSource.reader_string (_inLexique SOURCE_FILE_AT_LINE (2700)) SOURCE_FILE_AT_LINE (2700))))).isBuiltAndTrue ()) {
    var_cas_nomClasse.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "This class does not inherit from '@")) + (var_cas_nomTypeSource.reader_string (_inLexique SOURCE_FILE_AT_LINE (2701))))) + (GGS_string (true, "'"))) SOURCE_FILE_AT_LINE (2702)) ;
  }
  GGS_L_assignedVariables  var_cas_listeAffectationParametresEffectifs ;
  GGS_typeCplusPlusNameList  var_cas_allVariablesList ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  nt_input_parameters_list_ (_inLexique, var_cas_listeAffectationParametresEffectifs, var_cas_allVariablesList, var_cas_listeAttributsSemantiques, var_cas_ioVariablesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  if (var_cas_errorExpressionType._isBuilt ()) {
    var_cas_errorExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique SOURCE_FILE_AT_LINE (2726)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_lstring  var_cas_messageName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  if (var_cas_tableMessagesAbstraits._isBuilt ()) {
    var_cas_tableMessagesAbstraits (HERE)->method_searchKey (_inLexique, var_cas_messageName SOURCE_FILE_AT_LINE (2730)) ;
  }
  var_cas_outInstruction = GGS_typeSimpleExtractInstruction::constructor_new (_inLexique, var_cas_inSourceVarCppName, var_cas_nomClasse, var_cas_listeAffectationParametresEffectifs, var_cas_errorExpression, var_cas_messageName COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_2665_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  nt_input_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_extract_instruction_semantics_parser_2743_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  &var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  /* var_cas_tableMessagesAbstraits */,
                                GGS_typeInstruction  &var_cas_outInstruction,
                                const GGS_entityPropertyMap  &var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  &var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  &var_cas_inTreewalkingComponentMap) {
  GGS_typeStructuredExtractCasesList  var_cas_casesList ;
  var_cas_casesList = GGS_typeStructuredExtractCasesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique SOURCE_FILE_AT_LINE (2760)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (2762)) ;
        GGS_location  var_cas_indicatif1 ;
        var_cas_indicatif1 = GGS_location (_inLexique) ;
        GGS_lstring  var_cas_nomType1 ;
        _inLexique._assignFromAttribute_tokenString (var_cas_nomType1) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        GGS_AC_galgasType  var_cas_definitionClasse1 ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
          var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomType1, var_cas_entite SOURCE_FILE_AT_LINE (2770)) ;
        }
        { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
          if (ptrExtraire_ == NULL) {
            var_cas_definitionClasse1._drop_operation () ;
            if (var_cas_entite.getPtr () != NULL) {
              TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
              C_String message2_ ;
              message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
              message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
              var_cas_nomType1.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (2771)) ;
            }
          }else{
            macroValidPointer (ptrExtraire_) ;
            var_cas_definitionClasse1 = ptrExtraire_->aDefType ;
          }
        }
        GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 ;
        GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 ;
        { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_definitionClasse1.getPtr ()) ;
          if (ptrExtraire_ == NULL) {
            var_cas_listeAttributs1._drop_operation () ;
            var_cas_tableDesClassesAncetresType1._drop_operation () ;
            if (var_cas_definitionClasse1.getPtr () != NULL) {
              TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
              C_String message2_ ;
              message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
              message2_ << var_cas_definitionClasse1 (HERE)->message_messageGalgasType () ;
              var_cas_nomType1.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (2783)) ;
            }
          }else{
            macroValidPointer (ptrExtraire_) ;
            var_cas_listeAttributs1 = ptrExtraire_->mNonExternAttributesList ;
            var_cas_tableDesClassesAncetresType1 = ptrExtraire_->mAncestorClassesMap ;
          }
        }
        if (((! (var_cas_tableDesClassesAncetresType1.reader_hasKey (_inLexique, var_cas_nomTypeSource.reader_string (_inLexique SOURCE_FILE_AT_LINE (2785)) SOURCE_FILE_AT_LINE (2785))))).isBuiltAndTrue ()) {
          var_cas_nomType1.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "This class does not inherit from '@")) + (var_cas_nomTypeSource.reader_string (_inLexique SOURCE_FILE_AT_LINE (2786))))) + (GGS_string (true, "'"))) SOURCE_FILE_AT_LINE (2787)) ;
        }
        GGS_bool var_cas_noUsedParameter ;
        nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_indicatif1, GGS_localConstantBuildStyleEnum::constructor_listStyle (_inLexique COMMA_HERE), var_cas_noUsedParameter) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_instructionsList ;
        var_cas_instructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
        var_cas_casesList._addAssign_operation (var_cas_nomType1, var_cas_indicatif1, var_cas_instructionsList, var_cas_noUsedParameter) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (2762)) ;
      switch (select_repeat_semantics_parser_27 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (2817)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_elseInstructionList ;
  var_cas_elseInstructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
  var_cas_outInstruction = GGS_typeStructuredExtractInstructionWithElse::constructor_new (_inLexique, var_cas_inSourceVarCppName, var_cas_casesList, var_cas_elseInstructionList COMMA_HERE) ;
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (2817)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique SOURCE_FILE_AT_LINE (2760)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_2743_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        nt_parse_effective_input_parameters_list_parse (_inLexique) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
        nt_semantic_instructions_list_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_27 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2846_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  &var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &/* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  GGS_AC_galgasType  var_cas_definitionType ;
  GGS_lstring  var_cas_typeName ;
  nt_type_parsing_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
  GGS_lstring  var_cas_nomVariable ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomVariable) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_nomCppVariable ;
  var_cas_nomCppVariable = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomVariable COMMA_HERE) ;
  var_cas_ioVariablesMap.modifier_insertLocalVariable (_inLexique, var_cas_nomVariable, var_cas_definitionType, var_cas_nomCppVariable SOURCE_FILE_AT_LINE (2870)) ;
  nt_optional_assignment_ (_inLexique, var_cas_typeName, var_cas_nomVariable, var_cas_nomCppVariable, var_cas_definitionType, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2846_6_parse (galgas_scanner & _inLexique) {
  nt_type_parsing_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_optional_assignment_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2891_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  &/* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &/* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_galgasVariableName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_galgasVariableName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        GGS_typeCplusPlusName  var_cas_nomCppVar ;
        GGS_AC_galgasType  automatic_var_19 ;
        var_cas_ioVariablesMap.modifier_searchForReadOnlyAccess (_inLexique, var_cas_galgasVariableName, automatic_var_19, var_cas_nomCppVar SOURCE_FILE_AT_LINE (2907)) ;
        GGS_typeInstruction  var_cas_instruction ;
        var_cas_instruction = GGS_typeLogInstruction::constructor_new (_inLexique, var_cas_galgasVariableName, var_cas_nomCppVar COMMA_HERE) ;
        var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
      switch (select_repeat_semantics_parser_28 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2891_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_28 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2922_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  &/* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &/* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_drop) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_nom ;
        _inLexique._assignFromAttribute_tokenString (var_cas_nom) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        GGS_typeCplusPlusName  var_cas_nomCppVar ;
        GGS_AC_galgasType  automatic_var_20 ;
        var_cas_ioVariablesMap.modifier_searchForDestructiveReadAccess (_inLexique, var_cas_nom, automatic_var_20, var_cas_nomCppVar SOURCE_FILE_AT_LINE (2938)) ;
        GGS_typeInstruction  var_cas_instruction ;
        var_cas_instruction = GGS_typeDropInstruction::constructor_new (_inLexique, var_cas_nomCppVar COMMA_HERE) ;
        var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
      switch (select_repeat_semantics_parser_29 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2922_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_drop) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_29 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2955_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */) {
  GGS_L_EXsignature  var_cas_signatureRoutine ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomVarDest, var_cas_entite SOURCE_FILE_AT_LINE (2967)) ;
  }
  { cPtr_typeEntiteRoutine * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteRoutine *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_signatureRoutine._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteRoutine::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_nomVarDest.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (2968)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_signatureRoutine = ptrExtraire_->aListeArgumentsFormels ;
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_parameters_list_ (_inLexique, var_cas_signatureRoutine, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeRoutineCallInstruction::constructor_new (_inLexique, var_cas_nomVarDest, var_cas_expressionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2955_6_parse (galgas_scanner & _inLexique) {
  nt_actual_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2992_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  &/* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &/* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_action) COMMA_HERE) ;
  GGS_lstring  var_cas_nomAction ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomAction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomAction, var_cas_entite SOURCE_FILE_AT_LINE (3009)) ;
  }
  GGS_L_EXsignature  var_cas_listeTypesParametresFormels ;
  { cPtr_typeEntiteActionExterne * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteActionExterne *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_listeTypesParametresFormels._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteActionExterne::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_nomAction.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3011)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_listeTypesParametresFormels = ptrExtraire_->aSignature ;
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_parameters_list_ (_inLexique, var_cas_listeTypesParametresFormels, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeInstructionAppelActionExterne::constructor_new (_inLexique, var_cas_nomAction, var_cas_expressionsList, var_cas_listeTypesParametresFormels COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2992_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_action) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_actual_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3045_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  &/* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &/* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  switch (select_semantics_parser_30 (_inLexique)) {
    case 1 : {
      GGS_lstring  var_cas_readObjectName ;
      GGS_AC_galgasType  var_cas_variableType ;
      GGS_typeCplusPlusName  var_cas_cppVariableName ;
      nt_read_access_ (_inLexique, var_cas_readObjectName, var_cas_cppVariableName, var_cas_variableType, var_cas_ioVariablesMap) ;
      GGS_lstring  var_cas_methodName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      if (var_cas_variableType._isBuilt ()) {
        var_cas_variableType (HERE)->method_handleMethodInstructionCall (_inLexique, var_cas_readObjectName, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (3067)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeMethodCallInstruction::constructor_new (_inLexique, var_cas_cppVariableName, var_cas_methodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
      GGS_lstring  var_cas_modifiedObjectName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_modifiedObjectName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_variableType ;
      GGS_typeCplusPlusName  var_cas_cppVariableName ;
      var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_modifiedObjectName, var_cas_variableType, var_cas_cppVariableName SOURCE_FILE_AT_LINE (3086)) ;
      GGS_lstring  var_cas_methodName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      if (var_cas_variableType._isBuilt ()) {
        var_cas_variableType (HERE)->method_handleModifierCall (_inLexique, var_cas_modifiedObjectName, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (3091)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeModifierCallInstruction::constructor_new (_inLexique, var_cas_cppVariableName, var_cas_methodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    case 3 : {
      GGS_lstring  var_cas_typeName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_lstring  var_cas_typeMethodName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_typeMethodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_typeMethodSignature ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
        var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_typeName, var_cas_theEntity SOURCE_FILE_AT_LINE (3112)) ;
      }
      GGS_AC_galgasType  var_cas_type ;
      { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_theEntity.getPtr ()) ;
        if (ptrExtraire_ == NULL) {
          var_cas_type._drop_operation () ;
          if (var_cas_theEntity.getPtr () != NULL) {
            TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
            C_String message2_ ;
            message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
            message2_ << var_cas_theEntity (HERE)->message_messageTypeEntite () ;
            var_cas_typeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3114)) ;
          }
        }else{
          macroValidPointer (ptrExtraire_) ;
          var_cas_type = ptrExtraire_->aDefType ;
        }
      }
      if (var_cas_type._isBuilt ()) {
        var_cas_type (HERE)->method_handleClassMethodCall (_inLexique, var_cas_typeMethodName, var_cas_typeMethodSignature SOURCE_FILE_AT_LINE (3115)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_typeMethodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeCallOfTypeMethodInstruction::constructor_new (_inLexique, var_cas_typeName, var_cas_typeMethodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3045_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  switch (select_semantics_parser_30 (_inLexique)) {
    case 1 : {
      nt_read_access_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3145_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  &/* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &/* var_cas_inMetamodelPropertyMap */,
                                const GGS_entityToImplementMap  &var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  GGS_lstring  var_cas_nomVarDest ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomVarDest) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_instruction_beginning_with_identifier_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_nomVarDest, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inMetamodelEntityMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3145_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_instruction_beginning_with_identifier_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3176_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  &/* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &/* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  if (var_cas_errorExpressionType._isBuilt ()) {
    var_cas_errorExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique SOURCE_FILE_AT_LINE (3198)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeExpression  var_cas_warningMessageExpression ;
  GGS_AC_galgasType  var_cas_warningMessageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_warningMessageExpression, var_cas_warningMessageExpressionType) ;
  { cPtr_typeGalgas_string * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_string *> (var_cas_warningMessageExpressionType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_warningMessageExpressionType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_string::static_string_message_messageGalgasType () ;
        message2_ << var_cas_warningMessageExpressionType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3211)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeWarningInstruction::constructor_new (_inLexique, var_cas_errorExpression, var_cas_warningMessageExpression, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3176_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3225_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  &/* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &/* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorLocationExpression ;
  GGS_AC_galgasType  var_cas_errorLocationExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorLocationExpression, var_cas_errorLocationExpressionType) ;
  if (var_cas_errorLocationExpressionType._isBuilt ()) {
    var_cas_errorLocationExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique SOURCE_FILE_AT_LINE (3247)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorMessageExpression ;
  GGS_AC_galgasType  var_cas_errorMessageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorMessageExpression, var_cas_errorMessageExpressionType) ;
  { cPtr_typeGalgas_string * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_string *> (var_cas_errorMessageExpressionType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_errorMessageExpressionType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_string::static_string_message_messageGalgasType () ;
        message2_ << var_cas_errorMessageExpressionType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3260)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  GGS_varToDropList  var_cas_variablesToDrop ;
  var_cas_variablesToDrop = GGS_varToDropList::constructor_emptyList (_inLexique COMMA_HERE) ;
  switch (select_semantics_parser_31 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_nomVariable ;
            _inLexique._assignFromAttribute_tokenString (var_cas_nomVariable) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_varCppName ;
            GGS_AC_galgasType  automatic_var_21 ;
            var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomVariable, automatic_var_21, var_cas_varCppName SOURCE_FILE_AT_LINE (3270)) ;
            var_cas_variablesToDrop._addAssign_operation (var_cas_varCppName) ;
          switch (select_repeat_semantics_parser_32 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeErrorInstruction::constructor_new (_inLexique, var_cas_errorLocationExpression, var_cas_errorMessageExpression, GGS_location (_inLexique), var_cas_variablesToDrop COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3225_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  switch (select_semantics_parser_31 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_repeat_semantics_parser_32 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3293_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  &/* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &/* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  GGS_location  var_cas_instructionLocation ;
  var_cas_instructionLocation = GGS_location (_inLexique) ;
  GGS_typeExpression  var_cas_messageExpression ;
  GGS_AC_galgasType  var_cas_messageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_messageExpression, var_cas_messageExpressionType) ;
  { cPtr_typeGalgas_string * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_string *> (var_cas_messageExpressionType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_messageExpressionType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_string::static_string_message_messageGalgasType () ;
        message2_ << var_cas_messageExpressionType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3317)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeMessageInstruction::constructor_new (_inLexique, var_cas_messageExpression, var_cas_instructionLocation COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3293_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3330_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  &var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  &var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  &var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  GGS_bool var_cas_firstBranch ;
  var_cas_firstBranch = GGS_bool (true, true) ;
  GGS_L_expression_instructionsList_list  var_cas_listeBranchesTest ;
  var_cas_listeBranchesTest = GGS_L_expression_instructionsList_list::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique SOURCE_FILE_AT_LINE (3344)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (3346)) ;
        GGS_typeExpression  var_cas_testBranche ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_testBranche, var_cas_resultType) ;
        { cPtr_typeGalgas_bool * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_bool *> (var_cas_resultType.getPtr ()) ;
          if (ptrExtraire_ == NULL) {
            if (var_cas_resultType.getPtr () != NULL) {
              TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
              C_String message2_ ;
              message1_ (0 COMMA_HERE) << cPtr_typeGalgas_bool::static_string_message_messageGalgasType () ;
              message2_ << var_cas_resultType (HERE)->message_messageGalgasType () ;
              GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3356)) ;
            }
          }else{
            macroValidPointer (ptrExtraire_) ;
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_then) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_listeInstructionsBrancheTest ;
        var_cas_listeInstructionsBrancheTest = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheTest, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
        var_cas_listeBranchesTest._addAssign_operation (var_cas_testBranche, var_cas_listeInstructionsBrancheTest) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3346)) ;
      switch (select_repeat_semantics_parser_33 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_elsif) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeInstructionList  var_cas_listeInstructionsBrancheAutre ;
  var_cas_listeInstructionsBrancheAutre = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (3376)) ;
  switch (select_semantics_parser_34 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheAutre, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3376)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique SOURCE_FILE_AT_LINE (3344)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_if_instruction::constructor_new (_inLexique, var_cas_listeBranchesTest, var_cas_listeInstructionsBrancheAutre COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3330_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        nt_expression_parse (_inLexique) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_then) COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_33 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_elsif) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_34 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3410_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  &var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  &var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  &var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  GGS_typeExpression  var_cas_switchExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_switchExpression, var_cas_resultType) ;
  GGS_lstring  var_cas_enumTypeName ;
  GGS_enumConstantMap  var_cas_enumConstantesMap ;
  { cPtr_typeGalgas_enum * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_enum *> (var_cas_resultType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_enumTypeName._drop_operation () ;
      var_cas_enumConstantesMap._drop_operation () ;
      if (var_cas_resultType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_enum::static_string_message_messageGalgasType () ;
        message2_ << var_cas_resultType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3435)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_enumTypeName = ptrExtraire_->mEnumTypeName ;
      var_cas_enumConstantesMap = ptrExtraire_->mEnumConstantesMap ;
    }
  }
  GGS_stringset  var_cas_allBranchConstantSet ;
  var_cas_allBranchConstantSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_L_switchBranchlist  var_cas_switchBranchlist ;
  var_cas_switchBranchlist = GGS_L_switchBranchlist::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique SOURCE_FILE_AT_LINE (3439)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_stringset  var_cas_branchConstantSet ;
        var_cas_branchConstantSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
              GGS_lstring  var_cas_enumConstantName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_enumConstantName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_branchConstantSet._addAssign_operation (var_cas_enumConstantName.reader_string (_inLexique SOURCE_FILE_AT_LINE (3447))) ;
              if (var_cas_enumConstantesMap._isBuilt ()) {
                var_cas_enumConstantesMap (HERE)->method_searchKey (_inLexique, var_cas_enumConstantName SOURCE_FILE_AT_LINE (3448)) ;
              }
              if ((var_cas_allBranchConstantSet.reader_hasKey (_inLexique, var_cas_enumConstantName.reader_string (_inLexique SOURCE_FILE_AT_LINE (3449)) SOURCE_FILE_AT_LINE (3449))).isBuiltAndTrue ()) {
                var_cas_enumConstantName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this constant is already used in current switch instruction") SOURCE_FILE_AT_LINE (3451)) ;
              }
            switch (select_repeat_semantics_parser_36 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
        var_cas_allBranchConstantSet = ((var_cas_allBranchConstantSet) | (var_cas_branchConstantSet)) ;
        var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (3457)) ;
        GGS_typeInstructionList  var_cas_branchInstructionList ;
        var_cas_branchInstructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_branchInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
        var_cas_switchBranchlist._addAssign_operation (var_cas_branchConstantSet, var_cas_branchInstructionList) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3457)) ;
      switch (select_repeat_semantics_parser_35 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique SOURCE_FILE_AT_LINE (3439)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  GGS_stringset  var_cas_missingConstants ;
  var_cas_missingConstants = var_cas_enumConstantesMap.reader_allKeys (_inLexique SOURCE_FILE_AT_LINE (3478))._substract_operation (_inLexique, var_cas_allBranchConstantSet SOURCE_FILE_AT_LINE (3478)) ;
  GGS_stringset::element_type * operand_134210 = var_cas_missingConstants.firstObject () ;
  while ((operand_134210 != NULL)) {
    macroValidPointer (operand_134210) ;
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '")) + (operand_134210->mKey))) + (GGS_string (true, "' is not used in switch instruction"))) SOURCE_FILE_AT_LINE (3481)) ;
    operand_134210 = operand_134210->nextObject () ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_switch_instruction::constructor_new (_inLexique, var_cas_switchExpression, var_cas_enumTypeName, var_cas_switchBranchlist COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3410_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_repeat_semantics_parser_36 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_35 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3496_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  &var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  &var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  &var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  GGS_typeExpression  var_cas_variantExpression ;
  GGS_AC_galgasType  var_cas_variantResultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_variantExpression, var_cas_variantResultType) ;
  { cPtr_typeGalgas_uint * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_uint *> (var_cas_variantResultType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_variantResultType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_uint::static_string_message_messageGalgasType () ;
        message2_ << var_cas_variantResultType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3518)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList1 ;
  var_cas_instructionList1 = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3522)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique SOURCE_FILE_AT_LINE (3523)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList1, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3523)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3522)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
  GGS_typeExpression  var_cas_conditionalExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_conditionalExpression, var_cas_resultType) ;
  { cPtr_typeGalgas_bool * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_bool *> (var_cas_resultType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_resultType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_bool::static_string_message_messageGalgasType () ;
        message2_ << var_cas_resultType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3549)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList2 ;
  var_cas_instructionList2 = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3553)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique SOURCE_FILE_AT_LINE (3554)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList2, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3554)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3553)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_while_instruction::constructor_new (_inLexique, var_cas_variantExpression, var_cas_instructionList1, var_cas_conditionalExpression, var_cas_instructionList2, GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3496_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3588_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  &/* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &/* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
  GGS_lstring  var_cas_grammarName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_grammarName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_altName ;
  switch (select_semantics_parser_37 (_inLexique)) {
    case 1 : {
      var_cas_altName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_label) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_altName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  GGS_lstring  var_cas_nomFichierSource ;
  GGS_typeCplusPlusName  var_cas_nomCppFichierSource ;
  GGS_AC_galgasType  var_cas_typeNomFichierSource ;
  nt_read_access_ (_inLexique, var_cas_nomFichierSource, var_cas_nomCppFichierSource, var_cas_typeNomFichierSource, var_cas_ioVariablesMap) ;
  { cPtr_typeGalgas_lstring * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_lstring *> (var_cas_typeNomFichierSource.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_typeNomFichierSource.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_lstring::static_string_message_messageGalgasType () ;
        message2_ << var_cas_typeNomFichierSource (HERE)->message_messageGalgasType () ;
        var_cas_nomFichierSource.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3617)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_grammarName, var_cas_e SOURCE_FILE_AT_LINE (3630)) ;
  }
  GGS_M_nonterminalSymbolAlts  var_cas_startSymbolAltMap ;
  GGS_lstring  var_cas_lexiqueClassName ;
  { cPtr_C_grammarForSemantics * ptrExtraire_ = dynamic_cast <cPtr_C_grammarForSemantics *> (var_cas_e.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_startSymbolAltMap._drop_operation () ;
      var_cas_lexiqueClassName._drop_operation () ;
      if (var_cas_e.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_C_grammarForSemantics::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_e (HERE)->message_messageTypeEntite () ;
        var_cas_grammarName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3633)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_startSymbolAltMap = ptrExtraire_->mGrammarAltMap ;
      var_cas_lexiqueClassName = ptrExtraire_->mLexiqueClassName ;
    }
  }
  GGS_L_EXsignature  var_cas_startSymbolSignature ;
  GGS_lstring  var_cas_returnedEntity ;
  if (var_cas_startSymbolAltMap._isBuilt ()) {
    var_cas_startSymbolAltMap (HERE)->method_searchKey (_inLexique, var_cas_altName, var_cas_startSymbolSignature, var_cas_returnedEntity SOURCE_FILE_AT_LINE (3636)) ;
  }
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique, var_cas_startSymbolSignature, var_cas_listeTypesParametresEffectifs, GGS_location (_inLexique), var_cas_ioInstructionList, var_cas_expressionsList SOURCE_FILE_AT_LINE (3637)) ;
  GGS_lstring  var_cas_metamodelClassVariableName ;
  var_cas_metamodelClassVariableName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
  switch (select_semantics_parser_38 (_inLexique)) {
    case 1 : {
      if (((var_cas_returnedEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (3648))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "this grammar returns an instance of '@")) + (var_cas_returnedEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (3649))))) + (GGS_string (true, "' metamodel entity"))) SOURCE_FILE_AT_LINE (3649)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_metamodelClassVariableName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_type ;
      GGS_typeCplusPlusName  automatic_var_22 ;
      var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_metamodelClassVariableName, var_cas_type, automatic_var_22 SOURCE_FILE_AT_LINE (3655)) ;
      GGS_lstring  var_cas_variableEntityName ;
      { cPtr_typeGalgas_singleReferenceEntity * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_singleReferenceEntity *> (var_cas_type.getPtr ()) ;
        if (ptrExtraire_ == NULL) {
          var_cas_variableEntityName._drop_operation () ;
          if (var_cas_type.getPtr () != NULL) {
            TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
            C_String message2_ ;
            message1_ (0 COMMA_HERE) << cPtr_typeGalgas_singleReferenceEntity::static_string_message_messageGalgasType () ;
            message2_ << var_cas_type (HERE)->message_messageGalgasType () ;
            var_cas_metamodelClassVariableName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3657)) ;
          }
        }else{
          macroValidPointer (ptrExtraire_) ;
          var_cas_variableEntityName = ptrExtraire_->mEntityTypeName ;
        }
      }
      if (((var_cas_returnedEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (3658))) != (var_cas_variableEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (3658)))).isBuiltAndTrue ()) {
        var_cas_metamodelClassVariableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "this variable has the '@")) + (var_cas_variableEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (3659))))) + (GGS_string (true, "', but a variable of '@")))) + (var_cas_returnedEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (3660))))) + (GGS_string (true, "' type is expected"))) SOURCE_FILE_AT_LINE (3661)) ;
      }
      } break ;
    default :
      break ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_grammarInstruction::constructor_new (_inLexique, var_cas_nomCppFichierSource, var_cas_grammarName, var_cas_expressionsList, var_cas_altName, var_cas_metamodelClassVariableName, var_cas_lexiqueClassName COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3588_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_37 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_label) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  nt_read_access_parse (_inLexique) ;
  nt_parse_parameters_list_parse (_inLexique) ;
  switch (select_semantics_parser_38 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3683_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &/* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  &/* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &/* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  &/* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  &var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
  GGS_lstring  var_cas_treewalkingComponentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_treewalkingComponentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_string var_cas_rootEntityName ;
  GGS_L_EXsignature  var_cas_treewalkingRoutineSignature ;
  if (var_cas_inTreewalkingComponentMap._isBuilt ()) {
    var_cas_inTreewalkingComponentMap (HERE)->method_searchKey (_inLexique, var_cas_treewalkingComponentName, var_cas_rootEntityName, var_cas_treewalkingRoutineSignature SOURCE_FILE_AT_LINE (3701)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
  GGS_lstring  var_cas_modelVariableName ;
  GGS_typeCplusPlusName  var_cas_cppNameForModelVariable ;
  GGS_AC_galgasType  var_cas_modelVariableType ;
  nt_read_access_ (_inLexique, var_cas_modelVariableName, var_cas_cppNameForModelVariable, var_cas_modelVariableType, var_cas_ioVariablesMap) ;
  GGS_lstring  var_cas_variableEntity ;
  { cPtr_typeGalgas_singleReferenceEntity * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_singleReferenceEntity *> (var_cas_modelVariableType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_variableEntity._drop_operation () ;
      if (var_cas_modelVariableType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_singleReferenceEntity::static_string_message_messageGalgasType () ;
        message2_ << var_cas_modelVariableType (HERE)->message_messageGalgasType () ;
        var_cas_modelVariableName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3719)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_variableEntity = ptrExtraire_->mEntityTypeName ;
    }
  }
  if (((var_cas_variableEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (3720))) != (var_cas_rootEntityName)).isBuiltAndTrue ()) {
    var_cas_modelVariableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((((((GGS_string (true, "the '")) + (var_cas_modelVariableName.reader_string (_inLexique SOURCE_FILE_AT_LINE (3721))))) + (GGS_string (true, "' variable is an instance of '@")))) + (var_cas_variableEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (3722))))) + (GGS_string (true, "', but the '")))) + (var_cas_treewalkingComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (3723))))) + (GGS_string (true, "' component requires an instance of '@")))) + (var_cas_rootEntityName))) + (GGS_string (true, "' type"))) SOURCE_FILE_AT_LINE (3725)) ;
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique, var_cas_treewalkingRoutineSignature, var_cas_listeTypesParametresEffectifs, GGS_location (_inLexique), var_cas_ioInstructionList, var_cas_expressionsList SOURCE_FILE_AT_LINE (3736)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_treewalkingInstruction::constructor_new (_inLexique, var_cas_treewalkingComponentName, var_cas_cppNameForModelVariable, var_cas_expressionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3683_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
  nt_read_access_parse (_inLexique) ;
  nt_parse_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3760_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  &var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  &var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  &var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3773)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique SOURCE_FILE_AT_LINE (3774)) ;
  GGS_foreachEnumerationList  var_cas_foreachEnumerationList ;
  var_cas_foreachEnumerationList = GGS_foreachEnumerationList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_enumeratedVariableName ;
        GGS_typeCplusPlusName  var_cas_enumeratedVariableCPPName ;
        GGS_AC_galgasType  var_cas_enumeratedVariableType ;
        nt_read_access_ (_inLexique, var_cas_enumeratedVariableName, var_cas_enumeratedVariableCPPName, var_cas_enumeratedVariableType, var_cas_ioVariablesMap) ;
        var_cas_ioVariablesMap.modifier_insertUsedConstInArgumentNoShadow (_inLexique, var_cas_enumeratedVariableName, var_cas_enumeratedVariableType, var_cas_enumeratedVariableCPPName SOURCE_FILE_AT_LINE (3789)) ;
        GGS_typeListeAttributsSemantiques  var_cas_formalEnumerationList ;
        GGS_localConstantBuildStyleEnum var_cas_localConstantBuildStyleEnum ;
        if (var_cas_enumeratedVariableType._isBuilt ()) {
          var_cas_enumeratedVariableType (HERE)->method_acceptForeachInstruction (_inLexique, var_cas_enumeratedVariableName, var_cas_formalEnumerationList, var_cas_localConstantBuildStyleEnum SOURCE_FILE_AT_LINE (3793)) ;
        }
        GGS_string var_cas_typeName ;
        if (var_cas_enumeratedVariableType._isBuilt ()) {
          var_cas_enumeratedVariableType (HERE)->method_getTypeName (_inLexique, var_cas_typeName SOURCE_FILE_AT_LINE (3796)) ;
        }
        GGS_location  var_cas_magicNumber ;
        var_cas_magicNumber = GGS_location (_inLexique) ;
        GGS_bool automatic_var_23 ;
        nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_formalEnumerationList, var_cas_magicNumber, var_cas_localConstantBuildStyleEnum, automatic_var_23) ;
        var_cas_foreachEnumerationList._addAssign_operation (var_cas_enumeratedVariableCPPName, var_cas_magicNumber, var_cas_typeName) ;
      switch (select_repeat_semantics_parser_39 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeExpression  var_cas_whileExpression ;
  switch (select_semantics_parser_40 (_inLexique)) {
    case 1 : {
      var_cas_whileExpression = GGS_typeTrueBool::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_resultType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_whileExpression, var_cas_resultType) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList ;
  var_cas_instructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3774)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3773)) ;
  var_cas_instruction = GGS_typeForeachInstruction::constructor_new (_inLexique, var_cas_foreachEnumerationList, var_cas_whileExpression, var_cas_instructionList COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3760_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        nt_read_access_parse (_inLexique) ;
        nt_parse_effective_input_parameters_list_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_39 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_40 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'parse_match_operand'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_operand_semantics_parser_3859_6_ (galgas_scanner & _inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  &var_cas_outCppName,
                                GGS_lstring  &var_cas_outBaseTypeName,
                                GGS_location  &var_cas_outVarLocation,
                                GGS_bool &var_cas_outIsEnumeration,
                                GGS_enumConstantMap  &var_cas_outEnumMessageMap) {
  GGS_lstring  var_cas_variableName ;
  GGS_AC_galgasType  var_cas_type ;
  nt_read_access_ (_inLexique, var_cas_variableName, var_cas_outCppName, var_cas_type, var_cas_ioVariablesMap) ;
  var_cas_outVarLocation = GGS_location (_inLexique) ;
  if (var_cas_type._isBuilt ()) {
    cPtr_typeGalgasClassType * operand_148491 = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_type.getPtr ()) ;
    if (operand_148491 != NULL) {
      macroValidPointer (operand_148491) ; 
      var_cas_outBaseTypeName = operand_148491->mClassTypeName ;
      var_cas_outIsEnumeration = GGS_bool (true, false) ;
      var_cas_outEnumMessageMap = GGS_enumConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
    }else{
      cPtr_typeGalgas_enum * operand_148683 = dynamic_cast <cPtr_typeGalgas_enum *> (var_cas_type.getPtr ()) ;
      if (operand_148683 != NULL) {
        macroValidPointer (operand_148683) ; 
        var_cas_outBaseTypeName = operand_148683->mEnumTypeName ;
        var_cas_outIsEnumeration = GGS_bool (true, true) ;
        var_cas_outEnumMessageMap = operand_148683->mEnumConstantesMap ;
      }else{ // Else part
        GGS_string var_cas_actualTypeName ;
        if (var_cas_type._isBuilt ()) {
          var_cas_type (HERE)->method_getTypeName (_inLexique, var_cas_actualTypeName SOURCE_FILE_AT_LINE (3887)) ;
        }
        var_cas_variableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the type of this variable is '@")) + (var_cas_actualTypeName))) + (GGS_string (true, "' ; I was expected an enumeration type or an abstract type"))) SOURCE_FILE_AT_LINE (3891)) ;
        var_cas_outBaseTypeName._drop_operation () ;
        var_cas_outIsEnumeration._drop_operation () ;
        var_cas_outEnumMessageMap._drop_operation () ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_operand_semantics_parser_3859_6_parse (galgas_scanner & _inLexique) {
  nt_read_access_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_case_semantics_parser_3897_6_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  var_cas_inVarLocation,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  /* var_cas_inEnumMessageMap */,
                                GGS_lstring  &var_cas_outTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_definitionClasse1 ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_entite SOURCE_FILE_AT_LINE (3911)) ;
  }
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_definitionClasse1._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_outTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3912)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_definitionClasse1 = ptrExtraire_->aDefType ;
    }
  }
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 ;
  GGS_bool var_cas_isAbstract ;
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_definitionClasse1.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_listeAttributs1._drop_operation () ;
      var_cas_tableDesClassesAncetresType1._drop_operation () ;
      var_cas_isAbstract._drop_operation () ;
      if (var_cas_definitionClasse1.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_definitionClasse1 (HERE)->message_messageGalgasType () ;
        var_cas_outTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3925)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_listeAttributs1 = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetresType1 = ptrExtraire_->mAncestorClassesMap ;
      var_cas_isAbstract = ptrExtraire_->mClassIsAbstract ;
    }
  }
  if ((var_cas_isAbstract).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "an abstract class is not allowed here") SOURCE_FILE_AT_LINE (3929)) ;
  }
  if ((var_cas_inIsEnumeration).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "a constant of '@")) + (var_cas_inTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (3932))))) + (GGS_string (true, "' enumeration type is expected here"))) SOURCE_FILE_AT_LINE (3933)) ;
  }else if (((! (var_cas_tableDesClassesAncetresType1.reader_hasKey (_inLexique, var_cas_inTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (3933)) SOURCE_FILE_AT_LINE (3933))))).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "This type does not inherit from '")) + (var_cas_inTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (3934))))) + (GGS_string (true, "'"))) SOURCE_FILE_AT_LINE (3935)) ;
  }
  GGS_bool automatic_var_24 ;
  nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_inVarLocation, GGS_localConstantBuildStyleEnum::constructor_listStyle (_inLexique COMMA_HERE), automatic_var_24) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_3897_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  nt_parse_effective_input_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_case_semantics_parser_3948_6_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  /* var_cas_inVarLocation */,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  var_cas_inEnumMessageMap,
                                GGS_lstring  &var_cas_outEnumConstantName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outEnumConstantName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  if ((var_cas_inIsEnumeration).isBuiltAndTrue ()) {
    if (var_cas_inEnumMessageMap._isBuilt ()) {
      var_cas_inEnumMessageMap (HERE)->method_searchKey (_inLexique, var_cas_outEnumConstantName SOURCE_FILE_AT_LINE (3961)) ;
    }
  }else{
    var_cas_outEnumConstantName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "a class that inherit from '@")) + (var_cas_inTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (3963))))) + (GGS_string (true, "' abstract class is expected here"))) SOURCE_FILE_AT_LINE (3964)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_3948_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3969_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  &var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  &var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  &var_cas_inTreewalkingComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_operand1_cppName ;
  GGS_lstring  var_cas_operand1_typeName ;
  GGS_location  var_cas_operand1_location ;
  GGS_bool var_cas_operand1_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand1_enumMessageMap ;
  nt_parse_match_operand_ (_inLexique, var_cas_ioVariablesMap, var_cas_operand1_cppName, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_operand2_cppName ;
  GGS_lstring  var_cas_operand2_typeName ;
  GGS_location  var_cas_operand2_location ;
  GGS_bool var_cas_operand2_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand2_enumMessageMap ;
  nt_parse_match_operand_ (_inLexique, var_cas_ioVariablesMap, var_cas_operand2_cppName, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_L_matchInstructionCasesList  var_cas_casesList ;
  var_cas_casesList = GGS_L_matchInstructionCasesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique SOURCE_FILE_AT_LINE (4013)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_41 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (4017)) ;
          GGS_lstring  var_cas_case1_name ;
          nt_parse_match_case_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap, var_cas_case1_name) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
          GGS_lstring  var_cas_case2_name ;
          nt_parse_match_case_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap, var_cas_case2_name) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          GGS_typeInstructionList  var_cas_instructionsList ;
          var_cas_instructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
          nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
          var_cas_casesList._addAssign_operation (var_cas_case1_name, var_cas_case2_name, var_cas_instructionsList) ;
          var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (4017)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (4060)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_elsePartInstructionsList ;
  var_cas_elsePartInstructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elsePartInstructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (4060)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique SOURCE_FILE_AT_LINE (4013)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeMatchInstruction::constructor_new (_inLexique, var_cas_operand1_location, var_cas_operand2_location, var_cas_operand1_cppName, var_cas_operand2_cppName, var_cas_operand1_typeName, var_cas_operand2_typeName, var_cas_operand1_isEnumeration, var_cas_operand2_isEnumeration, var_cas_casesList, var_cas_elsePartInstructionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3969_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  nt_parse_match_operand_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
  nt_parse_match_operand_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_41 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          nt_parse_match_case_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
          nt_parse_match_case_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          nt_semantic_instructions_list_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Implementation of production rule 'semantic_instructions_list_no_verif'   *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instructions_list_no_verif_semantics_parser_4095_6_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  &var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  &var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  &var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  &var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  &var_cas_inTreewalkingComponentMap) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_42 (_inLexique)) {
        case 2 : {
          nt_semantic_instruction_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_no_verif_semantics_parser_4095_6_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_42 (_inLexique)) {
        case 2 : {
          nt_semantic_instruction_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_4126_6_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &/* var_cas_inTypeName */,
                                const GGS_lstring  &/* var_cas_nomVarDest */,
                                const GGS_typeCplusPlusName  &var_cas_inVariableCppName,
                                const GGS_AC_galgasType  &var_cas_inVariableType,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */) {
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeInstructionDeclarationVarLocale::constructor_new (_inLexique, var_cas_inVariableCppName, var_cas_inVariableType COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_4126_6_parse (galgas_scanner & /* _inLexique */) {
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_4142_6_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &/* var_cas_inTypeName */,
                                const GGS_lstring  &var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  &var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  &var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  GGS_AC_galgasType  automatic_var_25 ;
  GGS_typeCplusPlusName  automatic_var_26 ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, automatic_var_25, automatic_var_26 SOURCE_FILE_AT_LINE (4154)) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  ::routine_checkAssignmentTypesCompatibility (_inLexique, var_cas_inVariableType, var_cas_sourceType, GGS_location (_inLexique), GGS_bool (true, true) SOURCE_FILE_AT_LINE (4165)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_declarationInstructionWithAssignment::constructor_new (_inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_4142_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_4174_6_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &var_cas_inTypeName,
                                const GGS_lstring  &var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  &var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  &var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  GGS_AC_galgasType  automatic_var_27 ;
  GGS_typeCplusPlusName  automatic_var_28 ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, automatic_var_27, automatic_var_28 SOURCE_FILE_AT_LINE (4185)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  GGS_lstring  var_cas_constructorName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_constructorName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  if (var_cas_inVariableType._isBuilt ()) {
    var_cas_inVariableType (HERE)->method_handleConstructorCall (_inLexique, var_cas_constructorName, var_cas_listeAttributsSemantiques SOURCE_FILE_AT_LINE (4191)) ;
  }
  GGS_typeExpressionList  var_cas_expressionList ;
  nt_output_expression_list_ (_inLexique, var_cas_expressionList, var_cas_listeAttributsSemantiques, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_e ;
  var_cas_e = GGS_typeConstructorExpression::constructor_new (_inLexique, var_cas_inTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4204)), var_cas_constructorName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4205)), var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (GGS_C_declarationInstructionWithAssignment::constructor_new (_inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_e COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_4174_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_output_expression_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4217_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  GGS_lstring  var_cas_mapindexTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapindexTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_43 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4231)) SOURCE_FILE_AT_LINE (4231))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4232)) SOURCE_FILE_AT_LINE (4232))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapindexType::constructor_new (_inLexique, var_cas_mapindexTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, var_cas_t SOURCE_FILE_AT_LINE (4234)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      GGS_lstring  var_cas_mapTypeName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
        var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_mapTypeName, var_cas_theEntity SOURCE_FILE_AT_LINE (4241)) ;
      }
      GGS_AC_galgasType  var_cas_aType ;
      { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_theEntity.getPtr ()) ;
        if (ptrExtraire_ == NULL) {
          var_cas_aType._drop_operation () ;
          if (var_cas_theEntity.getPtr () != NULL) {
            TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
            C_String message2_ ;
            message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
            message2_ << var_cas_theEntity (HERE)->message_messageTypeEntite () ;
            var_cas_mapTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (4243)) ;
          }
        }else{
          macroValidPointer (ptrExtraire_) ;
          var_cas_aType = ptrExtraire_->aDefType ;
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_mapAttributesList ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesSurcharger ;
      GGS_mapModifierMap  var_cas_modifierMethodMap ;
      GGS_mapMethodMap  var_cas_readerMethodMap ;
      { cPtr_typeGalgasMapType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasMapType *> (var_cas_aType.getPtr ()) ;
        if (ptrExtraire_ == NULL) {
          var_cas_mapAttributesList._drop_operation () ;
          var_cas_tableMethodesSurcharger._drop_operation () ;
          var_cas_modifierMethodMap._drop_operation () ;
          var_cas_readerMethodMap._drop_operation () ;
          if (var_cas_aType.getPtr () != NULL) {
            TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
            C_String message2_ ;
            message1_ (0 COMMA_HERE) << cPtr_typeGalgasMapType::static_string_message_messageGalgasType () ;
            message2_ << var_cas_aType (HERE)->message_messageGalgasType () ;
            var_cas_mapTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (4254)) ;
          }
        }else{
          macroValidPointer (ptrExtraire_) ;
          var_cas_mapAttributesList = ptrExtraire_->mNonExternAttributesList ;
          var_cas_tableMethodesSurcharger = ptrExtraire_->aTableMethodesSurcharger ;
          var_cas_modifierMethodMap = ptrExtraire_->mModifierMethodMap ;
          var_cas_readerMethodMap = ptrExtraire_->mReaderMethodMap ;
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_mapIndexSearchReaderMap  var_cas_mapIndexSearchReaderMap ;
      var_cas_mapIndexSearchReaderMap = GGS_mapIndexSearchReaderMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_44 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_searchReaderName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_searchReaderName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              GGS_lstring  var_cas_mapindexErrorMessage ;
              _inLexique._assignFromAttribute_tokenString (var_cas_mapindexErrorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              if (var_cas_mapindexErrorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_mapindexErrorMessage SOURCE_FILE_AT_LINE (4267)) ;
              }
              var_cas_mapIndexSearchReaderMap.modifier_insertKey (_inLexique, var_cas_searchReaderName, var_cas_mapindexErrorMessage SOURCE_FILE_AT_LINE (4268)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_t ;
      var_cas_t = GGS_typeGalgasMapindexType::constructor_new (_inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap, var_cas_tableMethodesSurcharger, var_cas_modifierMethodMap, var_cas_readerMethodMap COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) SOURCE_FILE_AT_LINE (4281)) ;
      GGS_typeEntityToGenerate  var_cas_e ;
      var_cas_e = GGS_C_mapindexToImplement::constructor_new (_inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_e) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4217_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  GGS_lstring  var_cas_mapindexTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapindexTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_43 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4304)) SOURCE_FILE_AT_LINE (4304))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4305)) SOURCE_FILE_AT_LINE (4305))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapindexType::constructor_new (_inLexique, var_cas_mapindexTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, var_cas_t SOURCE_FILE_AT_LINE (4307)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      GGS_lstring  var_cas_mapTypeName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
        var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_mapTypeName, var_cas_theEntity SOURCE_FILE_AT_LINE (4314)) ;
      }
      GGS_AC_galgasType  var_cas_aType ;
      { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_theEntity.getPtr ()) ;
        if (ptrExtraire_ == NULL) {
          var_cas_aType._drop_operation () ;
          if (var_cas_theEntity.getPtr () != NULL) {
            TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
            C_String message2_ ;
            message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
            message2_ << var_cas_theEntity (HERE)->message_messageTypeEntite () ;
            var_cas_mapTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (4316)) ;
          }
        }else{
          macroValidPointer (ptrExtraire_) ;
          var_cas_aType = ptrExtraire_->aDefType ;
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_mapAttributesList ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesSurcharger ;
      GGS_mapModifierMap  var_cas_modifierMethodMap ;
      GGS_mapMethodMap  var_cas_readerMethodMap ;
      { cPtr_typeGalgasMapType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasMapType *> (var_cas_aType.getPtr ()) ;
        if (ptrExtraire_ == NULL) {
          var_cas_mapAttributesList._drop_operation () ;
          var_cas_tableMethodesSurcharger._drop_operation () ;
          var_cas_modifierMethodMap._drop_operation () ;
          var_cas_readerMethodMap._drop_operation () ;
          if (var_cas_aType.getPtr () != NULL) {
            TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
            C_String message2_ ;
            message1_ (0 COMMA_HERE) << cPtr_typeGalgasMapType::static_string_message_messageGalgasType () ;
            message2_ << var_cas_aType (HERE)->message_messageGalgasType () ;
            var_cas_mapTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (4327)) ;
          }
        }else{
          macroValidPointer (ptrExtraire_) ;
          var_cas_mapAttributesList = ptrExtraire_->mNonExternAttributesList ;
          var_cas_tableMethodesSurcharger = ptrExtraire_->aTableMethodesSurcharger ;
          var_cas_modifierMethodMap = ptrExtraire_->mModifierMethodMap ;
          var_cas_readerMethodMap = ptrExtraire_->mReaderMethodMap ;
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_mapIndexSearchReaderMap  var_cas_mapIndexSearchReaderMap ;
      var_cas_mapIndexSearchReaderMap = GGS_mapIndexSearchReaderMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_44 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_searchReaderName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_searchReaderName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              GGS_lstring  var_cas_mapindexErrorMessage ;
              _inLexique._assignFromAttribute_tokenString (var_cas_mapindexErrorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              if (var_cas_mapindexErrorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_mapindexErrorMessage SOURCE_FILE_AT_LINE (4340)) ;
              }
              var_cas_mapIndexSearchReaderMap.modifier_insertKey (_inLexique, var_cas_searchReaderName, var_cas_mapindexErrorMessage SOURCE_FILE_AT_LINE (4341)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_t ;
      var_cas_t = GGS_typeGalgasMapindexType::constructor_new (_inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap, var_cas_tableMethodesSurcharger, var_cas_modifierMethodMap, var_cas_readerMethodMap COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) SOURCE_FILE_AT_LINE (4354)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_4217_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_43 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_44 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4364_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mapTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_45 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4378)) SOURCE_FILE_AT_LINE (4378))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4379)) SOURCE_FILE_AT_LINE (4379))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapType::constructor_new (_inLexique, var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_t SOURCE_FILE_AT_LINE (4381)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
      GGS_lstring  var_cas_cppClassName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_cppClassName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      var_cas_cppClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old style map definition") SOURCE_FILE_AT_LINE (4388)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_46 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4401)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4408)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut ;
              var_cas_tableDebut = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin ;
              var_cas_tableFin = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_tableMethodesBloc.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin SOURCE_FILE_AT_LINE (4443)) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList::element_type * operand_169661 = var_cas_insertMethodList.firstObject () ;
      while ((operand_169661 != NULL)) {
        macroValidPointer (operand_169661) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_169857 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_169857 != NULL)) {
          macroValidPointer (operand_169857) ;
          var_cas_methodSignature._addAssign_operation (operand_169857->mAttributType, var_cas_inPassingMode) ;
          operand_169857 = operand_169857->nextObject () ;
        }
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_169661->mMethodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4471)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_170286 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_170286 != NULL)) {
          macroValidPointer (operand_170286) ;
          var_cas_methodSignature._addAssign_operation (operand_170286->mAttributType, var_cas_inPassingMode) ;
          operand_170286 = operand_170286->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, ((operand_169661->mMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4479))) + (GGS_string (true, "GetIndex"))), operand_169661->mMethodName.reader_location (_inLexique SOURCE_FILE_AT_LINE (4479)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4480)) ;
        operand_169661 = operand_169661->nextObject () ;
      }
      GGS_insertOrSearchMethodList::element_type * operand_170634 = var_cas_searchMethodList.firstObject () ;
      while ((operand_170634 != NULL)) {
        macroValidPointer (operand_170634) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_170828 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_170828 != NULL)) {
          macroValidPointer (operand_170828) ;
          var_cas_methodSignature._addAssign_operation (operand_170828->mAttributType, var_cas_outPassingMode) ;
          operand_170828 = operand_170828->nextObject () ;
        }
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_170634->mMethodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4489)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_171255 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_171255 != NULL)) {
          macroValidPointer (operand_171255) ;
          var_cas_methodSignature._addAssign_operation (operand_171255->mAttributType, var_cas_outPassingMode) ;
          operand_171255 = operand_171255->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, ((operand_170634->mMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4497))) + (GGS_string (true, "GetIndex"))), operand_170634->mMethodName.reader_location (_inLexique SOURCE_FILE_AT_LINE (4497)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4498)) ;
        operand_170634 = operand_170634->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4509)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_typeDefinitionTableAimplementer::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_cppClassName, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_tableMethodesBloc COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_removeMethodList ;
      var_cas_removeMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_mapMethodMap  var_cas_mapReaderMethodMap ;
      var_cas_mapReaderMethodMap = GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_47 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_errorMessage SOURCE_FILE_AT_LINE (4553)) ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_174300 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_174300 != NULL)) {
                macroValidPointer (operand_174300) ;
                var_cas_methodSignature._addAssign_operation (operand_174300->mAttributType, var_cas_outPassingMode) ;
                operand_174300 = operand_174300->nextObject () ;
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4561)) ;
              var_cas_removeMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4562)), GGS_bool (true, false), GGS_string (true, "")) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4564))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_174888 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_174888 != NULL)) {
                  macroValidPointer (operand_174888) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_174888->mAttributType, var_cas_outPassingMode) ;
                  operand_174888 = operand_174888->nextObject () ;
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4571)) ;
                var_cas_removeMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4572)), GGS_bool (true, true), GGS_string (true, "")) ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_errorMessage SOURCE_FILE_AT_LINE (4580)) ;
              }
              GGS_string var_cas_shadowErrorMessage ;
              switch (select_semantics_parser_48 (_inLexique)) {
                case 1 : {
                  var_cas_shadowErrorMessage = GGS_string (true, "") ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  GGS_lstring  var_cas_shadowErrorMessageString ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_shadowErrorMessageString) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (var_cas_shadowErrorMessageString._isBuilt ()) {
                    ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_shadowErrorMessageString SOURCE_FILE_AT_LINE (4588)) ;
                  }
                  var_cas_shadowErrorMessage = var_cas_shadowErrorMessageString.reader_string (_inLexique SOURCE_FILE_AT_LINE (4589)) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_175997 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_175997 != NULL)) {
                macroValidPointer (operand_175997) ;
                var_cas_methodSignature._addAssign_operation (operand_175997->mAttributType, var_cas_inPassingMode) ;
                operand_175997 = operand_175997->nextObject () ;
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4598)) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4599)), GGS_bool (true, false), var_cas_shadowErrorMessage) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4601))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_176600 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_176600 != NULL)) {
                  macroValidPointer (operand_176600) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_176600->mAttributType, var_cas_inPassingMode) ;
                  operand_176600 = operand_176600->nextObject () ;
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4608)) ;
                var_cas_insertMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4609)), GGS_bool (true, true), var_cas_shadowErrorMessage) ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_K_escapeCharacters (_inLexique,  var_cas_errorMessage SOURCE_FILE_AT_LINE (4617)) ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_177388 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_177388 != NULL)) {
                macroValidPointer (operand_177388) ;
                var_cas_methodSignature._addAssign_operation (operand_177388->mAttributType, var_cas_outPassingMode) ;
                operand_177388 = operand_177388->nextObject () ;
              }
              var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4625)) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4626)), GGS_bool (true, false), GGS_string (true, "")) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4628))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_178006 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_178006 != NULL)) {
                  macroValidPointer (operand_178006) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_178006->mAttributType, var_cas_outPassingMode) ;
                  operand_178006 = operand_178006->nextObject () ;
                }
                var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4635)) ;
                var_cas_searchMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4636)), GGS_bool (true, true), GGS_string (true, "")) ;
              }
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapReaderMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4648)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_mapToImplement::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_removeMethodList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4364_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mapTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_45 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4674)) SOURCE_FILE_AT_LINE (4674))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4674)) SOURCE_FILE_AT_LINE (4674))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapType::constructor_new (_inLexique, var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_t SOURCE_FILE_AT_LINE (4676)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
      GGS_lstring  var_cas_cppClassName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_cppClassName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_46 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4695)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4702)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut ;
              var_cas_tableDebut = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin ;
              var_cas_tableFin = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_tableMethodesBloc.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin SOURCE_FILE_AT_LINE (4737)) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList::element_type * operand_182665 = var_cas_insertMethodList.firstObject () ;
      while ((operand_182665 != NULL)) {
        macroValidPointer (operand_182665) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_182861 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_182861 != NULL)) {
          macroValidPointer (operand_182861) ;
          var_cas_methodSignature._addAssign_operation (operand_182861->mAttributType, var_cas_inPassingMode) ;
          operand_182861 = operand_182861->nextObject () ;
        }
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_182665->mMethodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4765)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_183290 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_183290 != NULL)) {
          macroValidPointer (operand_183290) ;
          var_cas_methodSignature._addAssign_operation (operand_183290->mAttributType, var_cas_inPassingMode) ;
          operand_183290 = operand_183290->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, ((operand_182665->mMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4773))) + (GGS_string (true, "GetIndex"))), operand_182665->mMethodName.reader_location (_inLexique SOURCE_FILE_AT_LINE (4773)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4774)) ;
        operand_182665 = operand_182665->nextObject () ;
      }
      GGS_insertOrSearchMethodList::element_type * operand_183638 = var_cas_searchMethodList.firstObject () ;
      while ((operand_183638 != NULL)) {
        macroValidPointer (operand_183638) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_183834 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_183834 != NULL)) {
          macroValidPointer (operand_183834) ;
          var_cas_methodSignature._addAssign_operation (operand_183834->mAttributType, var_cas_outPassingMode) ;
          operand_183834 = operand_183834->nextObject () ;
        }
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_183638->mMethodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4783)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_184264 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_184264 != NULL)) {
          macroValidPointer (operand_184264) ;
          var_cas_methodSignature._addAssign_operation (operand_184264->mAttributType, var_cas_outPassingMode) ;
          operand_184264 = operand_184264->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, ((operand_183638->mMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4791))) + (GGS_string (true, "GetIndex"))), operand_183638->mMethodName.reader_location (_inLexique SOURCE_FILE_AT_LINE (4791)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4792)) ;
        operand_183638 = operand_183638->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4803)) ;
      GGS_TypeModel  var_cas_type ;
      var_cas_type = GGS_MapModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_type SOURCE_FILE_AT_LINE (4805)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_mapMethodMap  var_cas_mapReaderMethodMap ;
      var_cas_mapReaderMethodMap = GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_47 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_29 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_29) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_186498 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_186498 != NULL)) {
                macroValidPointer (operand_186498) ;
                var_cas_methodSignature._addAssign_operation (operand_186498->mAttributType, var_cas_outPassingMode) ;
                operand_186498 = operand_186498->nextObject () ;
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4844)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4846))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_187042 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_187042 != NULL)) {
                  macroValidPointer (operand_187042) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_187042->mAttributType, var_cas_outPassingMode) ;
                  operand_187042 = operand_187042->nextObject () ;
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4853)) ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_30 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_30) ;
              switch (select_semantics_parser_48 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_187722 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_187722 != NULL)) {
                macroValidPointer (operand_187722) ;
                var_cas_methodSignature._addAssign_operation (operand_187722->mAttributType, var_cas_inPassingMode) ;
                operand_187722 = operand_187722->nextObject () ;
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4872)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4874))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_188265 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_188265 != NULL)) {
                  macroValidPointer (operand_188265) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_188265->mAttributType, var_cas_inPassingMode) ;
                  operand_188265 = operand_188265->nextObject () ;
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4881)) ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_31 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_31) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_188865 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_188865 != NULL)) {
                macroValidPointer (operand_188865) ;
                var_cas_methodSignature._addAssign_operation (operand_188865->mAttributType, var_cas_outPassingMode) ;
                operand_188865 = operand_188865->nextObject () ;
              }
              var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4895)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4897))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_189449 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_189449 != NULL)) {
                  macroValidPointer (operand_189449) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_189449->mAttributType, var_cas_outPassingMode) ;
                  operand_189449 = operand_189449->nextObject () ;
                }
                var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4904)) ;
              }
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapReaderMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4916)) ;
      GGS_TypeModel  var_cas_type ;
      var_cas_type = GGS_MapModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_type SOURCE_FILE_AT_LINE (4918)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_4364_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_45 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_46 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              nt_ex_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              nt_ex_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_47 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
              nt_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              nt_map_method_parse (_inLexique) ;
              switch (select_semantics_parser_48 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              nt_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'ex_map_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_ex_map_method_semantics_parser_4925_6_ (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_nomMethode,
                                GGS_lstring  &var_cas_outMessage) {
  _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outMessage) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_ex_map_method_semantics_parser_4925_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'map_method'               *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_map_method_semantics_parser_4937_6_ (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_methodName,
                                GGS_lstring  &var_cas_getIndexMethodName,
                                GGS_lstring  &var_cas_outMessage) {
  _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_49 (_inLexique)) {
    case 1 : {
      var_cas_getIndexMethodName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_getIndexMethodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outMessage) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_map_method_semantics_parser_4937_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_49 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4960_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4974)) SOURCE_FILE_AT_LINE (4974))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4974)) SOURCE_FILE_AT_LINE (4974))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (4976)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_inputSignature ;
      var_cas_inputSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques::element_type * operand_192764 = var_cas_listeTousAttributsSemantiques.firstObject () ;
      while ((operand_192764 != NULL)) {
        macroValidPointer (operand_192764) ;
        var_cas_extractSignature._addAssign_operation (operand_192764->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        var_cas_inputSignature._addAssign_operation (operand_192764->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE)) ;
        operand_192764 = operand_192764->nextObject () ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature, var_cas_inputSignature COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5008)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_listTypeToImplement::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4960_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5029)) SOURCE_FILE_AT_LINE (5029))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5029)) SOURCE_FILE_AT_LINE (5029))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (5031)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_inputSignature ;
      var_cas_inputSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques::element_type * operand_194964 = var_cas_listeTousAttributsSemantiques.firstObject () ;
      while ((operand_194964 != NULL)) {
        macroValidPointer (operand_194964) ;
        var_cas_extractSignature._addAssign_operation (operand_194964->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        var_cas_inputSignature._addAssign_operation (operand_194964->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE)) ;
        operand_194964 = operand_194964->nextObject () ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature, var_cas_inputSignature COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5063)) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ListModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (5065)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_4960_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5075_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_51 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5089)) SOURCE_FILE_AT_LINE (5089))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5089)) SOURCE_FILE_AT_LINE (5089))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (5091)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques::element_type * operand_197526 = var_cas_listeTousAttributsSemantiques.firstObject () ;
      while ((operand_197526 != NULL)) {
        macroValidPointer (operand_197526) ;
        var_cas_extractSignature._addAssign_operation (operand_197526->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        operand_197526 = operand_197526->nextObject () ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasSortedListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_sortDescriptorList  var_cas_sortDescriptorList ;
      var_cas_sortDescriptorList = GGS_sortDescriptorList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_stringset  var_cas_usedSortedAttributes ;
      var_cas_usedSortedAttributes = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_sortAttribute ;
            _inLexique._assignFromAttribute_tokenString (var_cas_sortAttribute) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            if ((var_cas_usedSortedAttributes.reader_hasKey (_inLexique, var_cas_sortAttribute.reader_string (_inLexique SOURCE_FILE_AT_LINE (5126)) SOURCE_FILE_AT_LINE (5126))).isBuiltAndTrue ()) {
              var_cas_sortAttribute.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this attribute is already used in sort list") SOURCE_FILE_AT_LINE (5128)) ;
            }else{
              GGS_AC_galgasType  var_cas_definitionType ;
              if (var_cas_tableAttributs._isBuilt ()) {
                var_cas_tableAttributs (HERE)->method_searchKey (_inLexique, var_cas_sortAttribute, var_cas_definitionType SOURCE_FILE_AT_LINE (5130)) ;
              }
              if (var_cas_definitionType._isBuilt ()) {
                var_cas_definitionType (HERE)->method_acceptToBeSortKeyInSortedListDefinition (_inLexique, var_cas_sortAttribute SOURCE_FILE_AT_LINE (5131)) ;
              }
              var_cas_usedSortedAttributes._addAssign_operation (var_cas_sortAttribute.reader_string (_inLexique SOURCE_FILE_AT_LINE (5132))) ;
            }
            GGS_bool var_cas_ascendingOrder ;
            switch (select_semantics_parser_53 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
                var_cas_ascendingOrder = GGS_bool (true, true) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
                var_cas_ascendingOrder = GGS_bool (true, false) ;
                } break ;
              default :
                break ;
            }
            var_cas_sortDescriptorList._addAssign_operation (var_cas_sortAttribute, var_cas_ascendingOrder) ;
          switch (select_repeat_semantics_parser_52 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5148)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_sortedListTypeToImplement::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_sortDescriptorList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5075_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_51 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5170)) SOURCE_FILE_AT_LINE (5170))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5170)) SOURCE_FILE_AT_LINE (5170))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (5172)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques::element_type * operand_200537 = var_cas_listeTousAttributsSemantiques.firstObject () ;
      while ((operand_200537 != NULL)) {
        macroValidPointer (operand_200537) ;
        var_cas_extractSignature._addAssign_operation (operand_200537->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        operand_200537 = operand_200537->nextObject () ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasSortedListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_semantics_parser_53 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
          switch (select_repeat_semantics_parser_52 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5214)) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ListModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (5216)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5075_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_51 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_semantics_parser_53 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
          switch (select_repeat_semantics_parser_52 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'attributes_definition_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_attributes_definition_list_semantics_parser_5226_6_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  &var_cas_inTableEnAvant,
                                GGS_typeListModel  &var_cas_outAttributeListModel,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeAttributsSemantiquesCourants,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_listeAttributsSemantiquesCourants = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_outAttributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_54 (_inLexique)) {
        case 2 : {
          GGS_AC_galgasType  var_cas_definitionType ;
          GGS_lstring  var_cas_typeName ;
          nt_type_parsing_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
          GGS_lstring  var_cas_attributeName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_attributeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_tableAttributs.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_definitionType SOURCE_FILE_AT_LINE (5250)) ;
          var_cas_listeTousAttributsSemantiques._addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_listeAttributsSemantiquesCourants._addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_outAttributeListModel._addAssign_operation (var_cas_typeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_attributes_definition_list_semantics_parser_5226_6_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_54 (_inLexique)) {
        case 2 : {
          nt_type_parsing_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5264_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  GGS_lstring  var_cas_externTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_externTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_cppClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_cppClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  GGS_lstring  var_cas_path ;
  _inLexique._assignFromAttribute_tokenString (var_cas_path) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_modifiersMap ;
  var_cas_modifiersMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap ;
  var_cas_readersInInstructionMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall ;
  var_cas_acceptAddAssignOperatorCall = GGS_bool (true, false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList ;
  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_externTypeConstructorMap  var_cas_constructorsMap ;
  var_cas_constructorsMap = GGS_M_externTypeConstructorMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_55 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
          GGS_lstring  var_cas_constructorName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_constructorName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList ;
          var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semantics_parser_56 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  var_cas_constructorArgumentTypesList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_constructorsMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList SOURCE_FILE_AT_LINE (5314)) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          GGS_lstring  var_cas_methodName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
          var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_L_signature  var_cas_signatureForGrammarComponent ;
          nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_readersInInstructionMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (5334)) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          switch (select_semantics_parser_57 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_methodName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
              var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              var_cas_modifiersMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (5354)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
              GGS_location  var_cas_errorLocation ;
              var_cas_errorLocation = GGS_location (_inLexique) ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                  switch (select_repeat_semantics_parser_58 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                      var_cas_addAssignOperatorCallTypeList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              if ((var_cas_acceptAddAssignOperatorCall).isBuiltAndTrue ()) {
                var_cas_errorLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'+=' operator is already defined") SOURCE_FILE_AT_LINE (5375)) ;
              }else{
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true, true) ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeEntityToGenerate  var_cas_t ;
  var_cas_t = GGS_typeExternTypeToGenerate::constructor_new (_inLexique, var_cas_externTypeName, var_cas_cppClassName, var_cas_path COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_t) ;
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasExternType::constructor_new (_inLexique, var_cas_externTypeName, var_cas_cppClassName, var_cas_constructorsMap, var_cas_modifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_e SOURCE_FILE_AT_LINE (5393)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5264_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  GGS_lstring  var_cas_externTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_externTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_cppClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_cppClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_EXmodifiersMap ;
  var_cas_EXmodifiersMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap ;
  var_cas_readersInInstructionMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall ;
  var_cas_acceptAddAssignOperatorCall = GGS_bool (true, false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList ;
  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_externTypeConstructorMap  var_cas_EXconstructorsMap ;
  var_cas_EXconstructorsMap = GGS_M_externTypeConstructorMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_constructorMap  var_cas_constructorMap ;
  var_cas_constructorMap = GGS_constructorMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_readerMap  var_cas_readerMap ;
  var_cas_readerMap = GGS_readerMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_modifierMap  var_cas_modifierMap ;
  var_cas_modifierMap = GGS_modifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListModel  var_cas_addAssignFormalInputArgumentList ;
  var_cas_addAssignFormalInputArgumentList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_55 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
          GGS_lstring  var_cas_constructorName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_constructorName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList ;
          var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeListModel  var_cas_formalInputArgumentList ;
          var_cas_formalInputArgumentList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semantics_parser_56 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  var_cas_constructorArgumentTypesList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  var_cas_formalInputArgumentList._addAssign_operation (var_cas_galgasTypeName) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_EXconstructorsMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList SOURCE_FILE_AT_LINE (5450)) ;
          var_cas_constructorMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_formalInputArgumentList SOURCE_FILE_AT_LINE (5451)) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          GGS_lstring  var_cas_readerName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_readerName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
          var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_L_signature  var_cas_signature ;
          nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_readersInInstructionMap.modifier_insertKey (_inLexique, var_cas_readerName, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (5471)) ;
          var_cas_readerMap.modifier_insertKey (_inLexique, var_cas_readerName, var_cas_signature SOURCE_FILE_AT_LINE (5472)) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          switch (select_semantics_parser_57 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_modifierName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_modifierName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
              var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_L_signature  var_cas_signature ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
              var_cas_EXmodifiersMap.modifier_insertKey (_inLexique, var_cas_modifierName, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (5492)) ;
              var_cas_modifierMap.modifier_insertKey (_inLexique, var_cas_modifierName, var_cas_signature SOURCE_FILE_AT_LINE (5493)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
              if (((var_cas_addAssignFormalInputArgumentList.reader_length (_inLexique SOURCE_FILE_AT_LINE (5496))) > (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'+=' operator is already defined") SOURCE_FILE_AT_LINE (5498)) ;
              }else{
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true, true) ;
              }
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                  switch (select_repeat_semantics_parser_58 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                      var_cas_addAssignOperatorCallTypeList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      var_cas_addAssignFormalInputArgumentList._addAssign_operation (var_cas_galgasTypeName) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasExternType::constructor_new (_inLexique, var_cas_externTypeName, var_cas_cppClassName, var_cas_EXconstructorsMap, var_cas_EXmodifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_e SOURCE_FILE_AT_LINE (5529)) ;
  GGS_TypeModel  var_cas_t ;
  var_cas_t = GGS_ExternTypeModel::constructor_new (_inLexique, var_cas_constructorMap, var_cas_readerMap, var_cas_modifierMap, var_cas_addAssignFormalInputArgumentList COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_t SOURCE_FILE_AT_LINE (5531)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5264_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_55 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semantics_parser_56 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  nt_formal_argument_type_parse (_inLexique) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          nt_formal_arguments_list_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          switch (select_semantics_parser_57 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                  switch (select_repeat_semantics_parser_58 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                      nt_formal_argument_type_parse (_inLexique) ;
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5539_6_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5546)) SOURCE_FILE_AT_LINE (5546))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_inComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_inComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5548)) ;
    }
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_type_semantique._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5549)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_type_semantique = ptrExtraire_->aDefType ;
      }
    }
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique SOURCE_FILE_AT_LINE (5551)) ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5539_6_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_5539_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5561_6_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5569)) SOURCE_FILE_AT_LINE (5569))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_inComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_inComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5571)) ;
    }
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_type_semantique._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5572)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_type_semantique = ptrExtraire_->aDefType ;
      }
    }
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique SOURCE_FILE_AT_LINE (5574)) ;
    }
    { cPtr_typeGalgasUndefinedListType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasUndefinedListType *> (var_cas_type_semantique.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        if (var_cas_type_semantique.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeGalgasUndefinedListType::static_string_message_messageGalgasType () ;
          message2_ << var_cas_type_semantique (HERE)->message_messageGalgasType () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5575)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5561_6_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_5561_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5586_6_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5594)) SOURCE_FILE_AT_LINE (5594))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_inComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_inComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5596)) ;
    }
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_type_semantique._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5597)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_type_semantique = ptrExtraire_->aDefType ;
      }
    }
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique SOURCE_FILE_AT_LINE (5599)) ;
    }
    { cPtr_typeGalgasUndefinedMapType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasUndefinedMapType *> (var_cas_type_semantique.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        if (var_cas_type_semantique.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeGalgasUndefinedMapType::static_string_message_messageGalgasType () ;
          message2_ << var_cas_type_semantique (HERE)->message_messageGalgasType () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5600)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5586_6_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_5586_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5611_6_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5620)) SOURCE_FILE_AT_LINE (5620))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_inComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_inComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5622)) ;
    }
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_type_semantique._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5623)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_type_semantique = ptrExtraire_->aDefType ;
      }
    }
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique SOURCE_FILE_AT_LINE (5625)) ;
    }
    { cPtr_typeGalgasUndefinedClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasUndefinedClassType *> (var_cas_type_semantique.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        if (var_cas_type_semantique.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeGalgasUndefinedClassType::static_string_message_messageGalgasType () ;
          message2_ << var_cas_type_semantique (HERE)->message_messageGalgasType () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5626)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5611_6_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_5611_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5642_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_action) COMMA_HERE) ;
  GGS_lstring  var_cas_nomAction ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomAction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteActionExterne::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_nomAction, var_cas_entite SOURCE_FILE_AT_LINE (5667)) ;
  GGS_typeEntityToGenerate  var_cas_ea ;
  var_cas_ea = GGS_typeActionExterneAengendrer::constructor_new (_inLexique, var_cas_nomAction, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_ea) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5642_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_action) COMMA_HERE) ;
  GGS_lstring  var_cas_actionName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteActionExterne::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_entite SOURCE_FILE_AT_LINE (5696)) ;
  var_cas_ioExternActionMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_signature, GGS_bool (true, true) SOURCE_FILE_AT_LINE (5697)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5642_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_action) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5707_6_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  GGS_lstring  var_cas_enumTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_enumTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_enumConstantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_enumConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeEnumMessageMap  var_cas_enumMessageMap ;
  var_cas_enumMessageMap = GGS_typeEnumMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_constantName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_constantName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        var_cas_constantMap.modifier_insertKey (_inLexique, var_cas_constantName SOURCE_FILE_AT_LINE (5728)) ;
      switch (select_repeat_semantics_parser_59 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_60 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          GGS_lstring  var_cas_messageName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          GGS_typeEnumCstMessageStringMap  var_cas_cstMessageStringMap ;
          var_cas_cstMessageStringMap = GGS_typeEnumCstMessageStringMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                GGS_lstring  var_cas_cstName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_cstName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                GGS_lstring  var_cas_cstString ;
                _inLexique._assignFromAttribute_tokenString (var_cas_cstString) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                var_cas_cstMessageStringMap.modifier_insertKey (_inLexique, var_cas_cstName, var_cas_cstString SOURCE_FILE_AT_LINE (5748)) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              switch (select_repeat_semantics_parser_61 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
          GGS_L_lstringList  var_cas_messageStringList ;
          var_cas_messageStringList = GGS_L_lstringList::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_enumConstantMap::element_type * operand_221336 = var_cas_constantMap.firstObject () ;
          while ((operand_221336 != NULL)) {
            macroValidPointer (operand_221336) ;
            GGS_lstring  var_cas_name ;
            var_cas_name = GGS_lstring::constructor_new (_inLexique, operand_221336->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (5756)), GGS_location (_inLexique) COMMA_HERE) ;
            GGS_lstring  var_cas_cstString ;
            if (var_cas_cstMessageStringMap._isBuilt ()) {
              var_cas_cstMessageStringMap (HERE)->method_searchKey (_inLexique, var_cas_name, var_cas_cstString SOURCE_FILE_AT_LINE (5758)) ;
            }
            var_cas_messageStringList._addAssign_operation (var_cas_cstString) ;
            operand_221336 = operand_221336->nextObject () ;
          }
          var_cas_enumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageStringList SOURCE_FILE_AT_LINE (5762)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_typeEntityToGenerate  var_cas_e ;
  var_cas_e = GGS_enumGalgasType::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_e) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_enum::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_ee ;
  var_cas_ee = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_ee SOURCE_FILE_AT_LINE (5774)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5707_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  &/* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  GGS_lstring  var_cas_enumTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_enumTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_enumConstantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_enumConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_constantName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_constantName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        var_cas_constantMap.modifier_insertKey (_inLexique, var_cas_constantName SOURCE_FILE_AT_LINE (5794)) ;
      switch (select_repeat_semantics_parser_59 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeEnumMessageMap  var_cas_exEnumMessageMap ;
  var_cas_exEnumMessageMap = GGS_typeEnumMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumMessageMap  var_cas_enumMessageMap ;
  var_cas_enumMessageMap = GGS_enumMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_60 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          GGS_lstring  var_cas_messageName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_enumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName SOURCE_FILE_AT_LINE (5809)) ;
          GGS_L_lstringList  var_cas_messageStringList ;
          var_cas_messageStringList = GGS_L_lstringList::constructor_emptyList (_inLexique COMMA_HERE) ;
          var_cas_exEnumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageStringList SOURCE_FILE_AT_LINE (5811)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              switch (select_repeat_semantics_parser_61 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_enum::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_exEnumMessageMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_e SOURCE_FILE_AT_LINE (5828)) ;
  GGS_TypeModel  var_cas_type ;
  var_cas_type = GGS_EnumModel::constructor_new (_inLexique, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_type SOURCE_FILE_AT_LINE (5830)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5707_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_59 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_60 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              switch (select_repeat_semantics_parser_61 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

