//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semantics_parser.cpp'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 8th, 2010, at 17h33'52"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semantics_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semantics_parser.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "galgasTemplateGrammar.h"
#include "galgas_LL1_grammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_galgas_5F_component_i0_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_lexiqueComponents  &var_cas_ioLexiqueMapForUse,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  GGS_lstring  var_cas_componentName ;
  inLexique.assignFromAttribute_tokenString (var_cas_componentName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  const GGS_bool cond_20891 = (GGS_string::constructor_stringWithSourceFilePath (inLexique COMMA_HERE).reader_pathExtension ()).operator_isNotEqual (GGS_string ("gSemantics")) ;
  if (cond_20891.isBuiltAndTrue ()) {
    var_cas_componentName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("In GALGAS 1.9.11 and later, use '.gSemantics' for extension of a semantics file name") COMMA_SOURCE_FILE_AT_LINE (572)) ;
  }
  const GGS_string var_cas_basename = GGS_string::constructor_stringWithSourceFilePath (inLexique COMMA_HERE).reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  const GGS_bool cond_21224 = (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (575))).operator_isNotEqual (var_cas_basename) ;
  if (cond_21224.isBuiltAndTrue ()) {
    var_cas_componentName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the component name ('")).operator_concat (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (576)))).operator_concat (GGS_string ("') should be the same as the source file base name ('"))).operator_concat (var_cas_basename)).operator_concat (GGS_string ("')")) COMMA_SOURCE_FILE_AT_LINE (579)) ;
  }
  GGS_string var_cas_defLexique = GGS_string ("") ;
  GGS_ModelMap  var_cas_modelMap = GGS_ModelMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_ActionMap  var_cas_actionMap = GGS_ActionMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_inclusionsForHeaderFile ;
  GGS_stringset  var_cas_inclusionsForImplementationFile ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentEntitiesMap ;
  GGS_stringset  var_cas_classNamesSet = GGS_stringset ::constructor_emptySet () ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant = GGS_typeTableEnAvant ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  GGS_stringset  var_cas_includedGrammarComponents ;
  nt_import_5F_headers_5F_semantics_5F_and_5F_grammars_ (inLexique, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_includedGrammarComponents, var_cas_ioLexiqueMapForUse, var_cas_ioSemanticsComponentsMap, var_cas_ioGrammarComponentsMap, var_cas_ioOptionsComponentsMap, var_cas_inclusionsForImplementationFile, var_cas_inclusionsForHeaderFile, var_cas_optionsComponentsMapForUse, var_cas_modelMap, var_cas_actionMap, var_cas_componentEntitiesMap, var_cas_tableEnAvant, var_cas_ioSemanticContext) ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_23838 = inLexique.parsingContext () ;
    GGS_typeTableRoutinesAimplementer  var_cas_UNUSED_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_UNUSED_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_typeTableEnAvant  var_cas_UNUSED_tableEnAvant = var_cas_tableEnAvant ;
    GGS_M_semanticsEntitiesForUse  var_cas_UNUSED_componentSemanticsEntitiesMap = var_cas_componentEntitiesMap ;
    GGS_EXsemanticContext var_cas_UNUSED_semanticContext = GGS_EXsemanticContext::constructor_new (GGS_M_filewrappers ::constructor_emptyMap (inLexique COMMA_HERE), GGS_stringset ::constructor_emptySet (), GGS_EXcategoryMethodMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_EXcategoryReaderMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_EXcategoryTemplateMap ::constructor_emptyMap (inLexique COMMA_HERE)) ;
    { bool syntaxRepeat_0 = true ;
      while (syntaxRepeat_0) {
        switch (select_semantics_5F_parser_0 (inLexique)) {
          case 2 : {
            nt_semantics_5F_declaration_importSemantics (inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_UNUSED_componentSemanticsEntitiesMap, var_cas_UNUSED_tableNomRoutinesDeclarees, var_cas_UNUSED_tableEnAvant, var_cas_UNUSED_tableRoutinesAimplementer, var_cas_UNUSED_semanticContext) ;
            } break ;
          default :
            syntaxRepeat_0 = false ;
            break ;
        }
      }
    }
  //--- Branch of parse/rewind instruction
    inLexique.setParsingContext (context_23838) ;
    GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList ::constructor_emptyList () ;
    { bool syntaxRepeat_0 = true ;
      while (syntaxRepeat_0) {
        switch (select_semantics_5F_parser_0 (inLexique)) {
          case 2 : {
            nt_semantics_5F_declaration_ (inLexique, var_cas_componentEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_optionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext) ;
            } break ;
          default :
            syntaxRepeat_0 = false ;
            break ;
        }
      }
    }
  //--- End of parse/rewind instruction
  const GGS_bool cond_24281 = (var_cas_ioSemanticsComponentsMap.reader_hasKey (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (659)))).operator_not () ;
  if (cond_24281.isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap = GGS_M_optionComponents ::constructor_emptyMap (inLexique COMMA_HERE) ;
    var_cas_ioSemanticsComponentsMap.modifier_insertKey (inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentEntitiesMap COMMA_SOURCE_FILE_AT_LINE (661)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  {
    GGS_typeTableNomRoutinesDeclarees::cEnumerator enumerator_24424 (var_cas_tableNomRoutinesDeclarees, true) ;
    const GGS_typeTableNomRoutinesDeclarees::cElement * operand_24424 = NULL ;
    while (((operand_24424 = enumerator_24424.nextObject ()))) {
      macroValidPointer (operand_24424) ;
      const GGS_bool cond_24618 = (var_cas_tableRoutinesAimplementer.reader_hasKey (operand_24424->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (678)))).operator_not () ;
      if (cond_24618.isBuiltAndTrue ()) {
        operand_24424->mKey.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the routine '")).operator_concat (operand_24424->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (679)))).operator_concat (GGS_string ("' is not implemented in the component")) COMMA_SOURCE_FILE_AT_LINE (681)) ;
      }
    }
  }
  {
    GGS_typeTableEnAvant::cEnumerator enumerator_24718 (var_cas_tableEnAvant, true) ;
    const GGS_typeTableEnAvant::cElement * operand_24718 = NULL ;
    while (((operand_24718 = enumerator_24718.nextObject ()))) {
      macroValidPointer (operand_24718) ;
      const GGS_bool cond_24913 = (var_cas_componentEntitiesMap.reader_hasKey (operand_24718->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (685)))).operator_not () ;
      if (cond_24913.isBuiltAndTrue ()) {
        operand_24718->mKey.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '@")).operator_concat (operand_24718->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (686)))).operator_concat (GGS_string ("' forward type is not implemented in the component")) COMMA_SOURCE_FILE_AT_LINE (688)) ;
      }
    }
  }
  if (var_cas_componentName.isBuilt () &&
      var_cas_inclusionsForHeaderFile.isBuilt () &&
      var_cas_defLexique.isBuilt () &&
      var_cas_listeEntitesAengendrer.isBuilt () &&
      var_cas_inclusionsForImplementationFile.isBuilt ()) {
    ::routine_generateSemanticsComponent (inLexique,  var_cas_componentName,  var_cas_inclusionsForHeaderFile,  var_cas_defLexique,  var_cas_listeEntitesAengendrer,  var_cas_inclusionsForImplementationFile COMMA_SOURCE_FILE_AT_LINE (691)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_galgas_5F_component_i0_importGrammarForSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_import_5F_headers_5F_semantics_5F_and_5F_grammars_parse (inLexique) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_semantics_5F_parser_0 (inLexique)) {
        case 2 : {
          nt_semantics_5F_declaration_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_galgas_5F_component_i0_importLexique (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_import_5F_headers_5F_semantics_5F_and_5F_grammars_parse (inLexique) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_semantics_5F_parser_0 (inLexique)) {
        case 2 : {
          nt_semantics_5F_declaration_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_galgas_5F_component_i0_importOptions (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_import_5F_headers_5F_semantics_5F_and_5F_grammars_parse (inLexique) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_semantics_5F_parser_0 (inLexique)) {
        case 2 : {
          nt_semantics_5F_declaration_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_galgas_5F_component_i0_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext,
                                GGS_stringset  &var_cas_ioImportedSemanticsComponentNameSet) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  GGS_lstring  var_cas_componentName ;
  inLexique.assignFromAttribute_tokenString (var_cas_componentName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  ::routine_enterBuiltinTypes (inLexique,  var_cas_componentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (723)) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents = GGS_stringset ::constructor_emptySet () ;
  GGS_ModelMap  var_cas_modelMap ;
  GGS_ActionMap  var_cas_actionMap ;
  nt_import_5F_headers_5F_semantics_5F_and_5F_grammars_importSemantics (inLexique, var_cas_ioSemanticsComponentsMap, var_cas_includedSemanticsComponents, var_cas_includedOptionComponents, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_ioSemanticContext, var_cas_ioImportedSemanticsComponentNameSet) ;
  GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant = GGS_typeTableEnAvant ::constructor_emptyMap (inLexique COMMA_HERE) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_semantics_5F_parser_0 (inLexique)) {
        case 2 : {
          nt_semantics_5F_declaration_importSemantics (inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  const GGS_bool cond_27188 = (var_cas_ioSemanticsComponentsMap.reader_hasKey (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (756)))).operator_not () ;
  if (cond_27188.isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap = GGS_M_optionComponents ::constructor_emptyMap (inLexique COMMA_HERE) ;
    var_cas_ioSemanticsComponentsMap.modifier_insertKey (inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (758)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_galgas_5F_component_i0_importSyntax (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_import_5F_headers_5F_semantics_5F_and_5F_grammars_parse (inLexique) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_semantics_5F_parser_0 (inLexique)) {
        case 2 : {
          nt_semantics_5F_declaration_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "parse_semantics_component_for_importing"     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_parse_semantics_component_for_importing (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inFileName,
                                GGS_M_semanticsComponents  & var_cas_ioSemanticsMapForUse,
                                GGS_EXsemanticContext & var_cas_ioSemanticContext,
                                GGS_stringset  & var_cas_ioImportedSemanticsComponentNameSet COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_parse_semantics_component_for_importing at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  const GGS_string _depExtension = GGS_string ("") ;
  const GGS_string _depPath = GGS_string ("") ;
  if (_depExtension.isBuilt () && _depPath.isBuilt ()) {
    C_Grammar_galgas_5F_LL_31__5F_grammar::_performSourceFileParsing_importSemantics (inLexique,
                                  _depExtension.string (),
                                  _depPath.string (),
                                  NULL,
                                  var_cas_inFileName,
                                  var_cas_ioSemanticsMapForUse,
                                  var_cas_ioSemanticContext,
                                  var_cas_ioImportedSemanticsComponentNameSet
                                  COMMA_SOURCE_FILE_AT_LINE (830)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_parse_semantics_component_for_importing\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'import_headers_semantics_and_grammars'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_import_5F_headers_5F_semantics_5F_and_5F_grammars_i1_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_stringset  &var_cas_outImportedSemanticsComponentNameSet,
                                GGS_stringset  &var_cas_outIncludedMetamodelComponents,
                                GGS_stringset  &var_cas_outImportedOptionComponents,
                                GGS_stringset  &var_cas_outImportedGrammarComponents,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_stringset  &var_cas_outInclusionsForImplementationFile,
                                GGS_stringset  &var_cas_outInclusionsForHeaderFile,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  var_cas_outActionMap = GGS_ActionMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_outInclusionsForHeaderFile = GGS_stringset ::constructor_emptySet () ;
  var_cas_outInclusionsForImplementationFile = GGS_stringset ::constructor_emptySet () ;
  var_cas_outImportedSemanticsComponentNameSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_outIncludedMetamodelComponents = GGS_stringset ::constructor_emptySet () ;
  var_cas_outImportedOptionComponents = GGS_stringset ::constructor_emptySet () ;
  var_cas_outImportedGrammarComponents = GGS_stringset ::constructor_emptySet () ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_ioOptionsComponentsMapForUse = GGS_M_optionComponents ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_outModelMap = GGS_ModelMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("char"), GGS_location (inLexique) COMMA_HERE), GGS_CharModel ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (874)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("string"), GGS_location (inLexique) COMMA_HERE), GGS_StringModel ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (876)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("uint"), GGS_location (inLexique) COMMA_HERE), GGS_UIntModel ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (878)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("sint"), GGS_location (inLexique) COMMA_HERE), GGS_SIntModel ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (880)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("uint64"), GGS_location (inLexique) COMMA_HERE), GGS_UInt64Model ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (882)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("sint64"), GGS_location (inLexique) COMMA_HERE), GGS_SInt64Model ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (884)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("bool"), GGS_location (inLexique) COMMA_HERE), GGS_BoolModel ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (886)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("double"), GGS_location (inLexique) COMMA_HERE), GGS_DoubleModel ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (888)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lchar"), GGS_location (inLexique) COMMA_HERE), GGS_LCharModel ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (890)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lstring"), GGS_location (inLexique) COMMA_HERE), GGS_LStringModel ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (892)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("luint"), GGS_location (inLexique) COMMA_HERE), GGS_LUIntModel ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (894)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lsint"), GGS_location (inLexique) COMMA_HERE), GGS_LSIntModel ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (896)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("luint64"), GGS_location (inLexique) COMMA_HERE), GGS_LUInt64Model ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (898)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lsint64"), GGS_location (inLexique) COMMA_HERE), GGS_LSInt64Model ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (900)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lbool"), GGS_location (inLexique) COMMA_HERE), GGS_LBoolModel ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (902)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("ldouble"), GGS_location (inLexique) COMMA_HERE), GGS_LDoubleModel ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (904)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("location"), GGS_location (inLexique) COMMA_HERE), GGS_LocationModel ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (906)) ;
  var_cas_outModelMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("stringset"), GGS_location (inLexique) COMMA_HERE), GGS_StringsetModel ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (908)) ;
  ::routine_enterBuiltinTypes (inLexique,  var_cas_ioComponentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (910)) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents = GGS_stringset ::constructor_emptySet () ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents = GGS_stringset ::constructor_emptySet () ;
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
      switch (select_semantics_5F_parser_1 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_import) COMMA_HERE) ;
          switch (select_semantics_5F_parser_2 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_option) COMMA_HERE) ;
              GGS_lstring  var_cas_optionComponentName ;
              inLexique.assignFromAttribute_tokenString (var_cas_optionComponentName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForHeaderFile.addAssign_operation (var_cas_optionComponentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (923))) ;
              var_cas_outImportedOptionComponents.addAssign_operation (var_cas_optionComponentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (924))) ;
              GGS_M_cli_options  var_cas_boolOptionsMap ;
              GGS_M_cli_options  var_cas_uintOptionsMap ;
              GGS_M_cli_options  var_cas_stringOptionsMap ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              GGS_lstring  var_cas_fileName ;
              inLexique.assignFromAttribute_tokenString (var_cas_fileName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              GGS_M_optionComponents  var_cas_importedOptionComponentsMap = GGS_M_optionComponents ::constructor_emptyMap (inLexique COMMA_HERE) ;
              nt_parse_5F_option_5F_component_5F_for_5F_importing_ (inLexique, var_cas_fileName, var_cas_importedOptionComponentsMap) ;
              const GGS_M_optionComponents  temp_33256 = var_cas_importedOptionComponentsMap ;
              if (temp_33256.isBuilt ()) {
                temp_33256 (HERE)->method_searchKey (inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap COMMA_SOURCE_FILE_AT_LINE (936)) ;
              }
              var_cas_ioOptionsComponentsMapForUse.modifier_insertKey (inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap COMMA_SOURCE_FILE_AT_LINE (937)) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) COMMA_HERE) ;
              GGS_lstring  var_cas_grammarComponentName ;
              inLexique.assignFromAttribute_tokenString (var_cas_grammarComponentName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForImplementationFile.addAssign_operation ((var_cas_grammarComponentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (942))).operator_concat (GGS_string (".h"))) ;
              var_cas_outImportedGrammarComponents.addAssign_operation (var_cas_grammarComponentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (943))) ;
              GGS_M_grammarComponents  var_cas_grammarComponentsMap ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              GGS_lstring  var_cas_sourceFile ;
              inLexique.assignFromAttribute_tokenString (var_cas_sourceFile) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              var_cas_grammarComponentsMap = GGS_M_grammarComponents ::constructor_emptyMap (inLexique COMMA_HERE) ;
              nt_parse_5F_grammar_5F_component_5F_for_5F_importing_ (inLexique, var_cas_sourceFile, var_cas_grammarComponentsMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioSemanticContext) ;
              GGS_nonterminalSymbolLabelMapForGrammarAnalysis  var_cas_nonterminalSymbolParametersMap ;
              GGS_lstring  var_cas_lexiqueClassName ;
              GGS_M_optionComponents  automatic_var_34312_0 ;
              const GGS_M_grammarComponents  temp_34236 = var_cas_grammarComponentsMap ;
              if (temp_34236.isBuilt ()) {
                temp_34236 (HERE)->method_searchKey (inLexique, var_cas_grammarComponentName, var_cas_nonterminalSymbolParametersMap, var_cas_lexiqueClassName, automatic_var_34312_0 COMMA_SOURCE_FILE_AT_LINE (957)) ;
              }
              GGS_M_nonterminalSymbolAlts  var_cas_grammarAltMap = GGS_M_nonterminalSymbolAlts ::constructor_emptyMap (inLexique COMMA_HERE) ;
              {
                GGS_nonterminalSymbolLabelMapForGrammarAnalysis::cEnumerator enumerator_34417 (var_cas_nonterminalSymbolParametersMap, true) ;
                const GGS_nonterminalSymbolLabelMapForGrammarAnalysis::cElement * operand_34417 = NULL ;
                while (((operand_34417 = enumerator_34417.nextObject ()))) {
                  macroValidPointer (operand_34417) ;
                  GGS_L_EXsignature  var_cas_formalParametersList = GGS_L_EXsignature ::constructor_emptyList () ;
                  {
                    GGS_signatureForGrammarAnalysis::cEnumerator enumerator_34516 (operand_34417->mInfo.mFormalParametersList, true) ;
                    const GGS_signatureForGrammarAnalysis::cElement * operand_34516 = NULL ;
                    while (((operand_34516 = enumerator_34516.nextObject ()))) {
                      macroValidPointer (operand_34516) ;
                      GGS_AC_semanticsEntity  var_cas_e ;
                      const GGS_M_semanticsEntitiesForUse  temp_34606 = var_cas_ioComponentSemanticsEntitiesMap ;
                      if (temp_34606.isBuilt ()) {
                        temp_34606 (HERE)->method_searchKey (inLexique, operand_34516->mGalgasTypeNameForGrammarAnalysis, var_cas_e COMMA_SOURCE_FILE_AT_LINE (963)) ;
                      }
                      GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_e.getPtr (), true, operand_34516->mGalgasTypeNameForGrammarAnalysis COMMA_SOURCE_FILE_AT_LINE (964)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (964)) ;
                      var_cas_formalParametersList.addAssign_operation (var_cas_type, operand_34516->mFormalArgumentPassingModeForGrammarAnalysis) ;
                    }
                  }
                  var_cas_grammarAltMap.modifier_insertKey (inLexique, operand_34417->mKey, var_cas_formalParametersList COMMA_SOURCE_FILE_AT_LINE (967)) ;
                }
              }
              GGS_AC_semanticsEntity  var_cas_e = GGS_C_grammarForSemantics ::constructor_new (inLexique, var_cas_grammarAltMap, var_cas_lexiqueClassName COMMA_HERE) ;
              var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_grammarComponentName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (970)) ;
              GGS_lstring  var_cas_path = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_extension = GGS_lstring ::constructor_new (inLexique, GGS_string ("h"), GGS_location (inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_fileNameWithPath ;
              if (var_cas_path.isBuilt () &&
                  var_cas_grammarComponentName.isBuilt () &&
                  var_cas_extension.isBuilt ()) {
                ::routine_buildFileNameWithPath (inLexique,  var_cas_fileNameWithPath,  var_cas_path,  var_cas_grammarComponentName,  var_cas_extension COMMA_SOURCE_FILE_AT_LINE (974)) ;
              }
              var_cas_outInclusionsForImplementationFile.addAssign_operation (var_cas_fileNameWithPath.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (975))) ;
              {
                GGS_M_grammarComponents::cEnumerator enumerator_35473 (var_cas_grammarComponentsMap, true) ;
                const GGS_M_grammarComponents::cElement * operand_35473 = NULL ;
                while (((operand_35473 = enumerator_35473.nextObject ()))) {
                  macroValidPointer (operand_35473) ;
                  const GGS_bool cond_35727 = (var_cas_ioGrammarComponentsMap.reader_hasKey (operand_35473->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (977)))).operator_not () ;
                  if (cond_35727.isBuiltAndTrue ()) {
                    var_cas_ioGrammarComponentsMap.modifier_insertKey (inLexique, operand_35473->mKey, operand_35473->mInfo.mNonterminalSymbolParametersMap, operand_35473->mInfo.mLexiqueName, operand_35473->mInfo.mOptionsMap COMMA_SOURCE_FILE_AT_LINE (978)) ;
                  }
                }
              }
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
              GGS_lstring  var_cas_componentName ;
              inLexique.assignFromAttribute_tokenString (var_cas_componentName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForHeaderFile.addAssign_operation (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (990))) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              GGS_lstring  var_cas_sourceFile ;
              inLexique.assignFromAttribute_tokenString (var_cas_sourceFile) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              const GGS_bool cond_37256 = (var_cas_outImportedSemanticsComponentNameSet.reader_hasKey (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (994)))).operator_not () ;
              if (cond_37256.isBuiltAndTrue ()) {
                var_cas_outImportedSemanticsComponentNameSet.addAssign_operation (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (995))) ;
                ::routine_parse_semantics_component_for_importing (inLexique,  var_cas_sourceFile,  var_cas_ioSemanticsComponentsMap,  var_cas_ioSemanticContext,  var_cas_outImportedSemanticsComponentNameSet COMMA_SOURCE_FILE_AT_LINE (997)) ;
                GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
                GGS_M_optionComponents  var_cas_importedOptionsComponentsMap ;
                GGS_ModelMap  automatic_var_36624_0 ;
                GGS_ActionMap  automatic_var_36624_1 ;
                GGS_stringset  automatic_var_36624_2 ;
                GGS_stringset  automatic_var_36624_3 ;
                GGS_stringset  automatic_var_36624_4 ;
                const GGS_M_semanticsComponents  temp_36556 = var_cas_ioSemanticsComponentsMap ;
                if (temp_36556.isBuilt ()) {
                  temp_36556 (HERE)->method_searchKey (inLexique, var_cas_componentName, automatic_var_36624_0, automatic_var_36624_1, automatic_var_36624_2, automatic_var_36624_3, automatic_var_36624_4, var_cas_importedOptionsComponentsMap, var_cas_importedEntities COMMA_SOURCE_FILE_AT_LINE (1005)) ;
                }
                {
                  GGS_M_semanticsEntitiesForUse::cEnumerator enumerator_36659 (var_cas_importedEntities, true) ;
                  const GGS_M_semanticsEntitiesForUse::cElement * operand_36659 = NULL ;
                  while (((operand_36659 = enumerator_36659.nextObject ()))) {
                    macroValidPointer (operand_36659) ;
                    const GGS_bool cond_36830 = (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (operand_36659->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1007)))).operator_not () ;
                    if (cond_36830.isBuiltAndTrue ()) {
                      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, operand_36659->mKey, operand_36659->mInfo.aDefEntite COMMA_SOURCE_FILE_AT_LINE (1008)) ;
                    }
                  }
                }
                {
                  GGS_M_optionComponents::cEnumerator enumerator_37032 (var_cas_importedOptionsComponentsMap, true) ;
                  const GGS_M_optionComponents::cElement * operand_37032 = NULL ;
                  while (((operand_37032 = enumerator_37032.nextObject ()))) {
                    macroValidPointer (operand_37032) ;
                    const GGS_bool cond_37219 = (var_cas_ioOptionsComponentsMapForUse.reader_hasKey (operand_37032->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1014)))).operator_not () ;
                    if (cond_37219.isBuiltAndTrue ()) {
                      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_37032->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1015)))).operator_concat (GGS_string ("' option component must have been imported")) COMMA_SOURCE_FILE_AT_LINE (1016)) ;
                    }
                  }
                }
              }
              ::routine_importSemanticsComponent (inLexique,  var_cas_ioSemanticsComponentsMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName COMMA_SOURCE_FILE_AT_LINE (1020)) ;
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_import_5F_headers_5F_semantics_5F_and_5F_grammars_i1_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_stringset  &var_cas_outIncludedSemanticsComponents,
                                GGS_stringset  &var_cas_outIncludedOptionComponents,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext,
                                GGS_stringset  &var_cas_ioImportedSemanticsComponentNameSet) {
  var_cas_outActionMap = GGS_ActionMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_outModelMap = GGS_ModelMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_outIncludedSemanticsComponents = GGS_stringset ::constructor_emptySet () ;
  var_cas_outIncludedOptionComponents = GGS_stringset ::constructor_emptySet () ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents = GGS_stringset ::constructor_emptySet () ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents = GGS_stringset ::constructor_emptySet () ;
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
      switch (select_semantics_5F_parser_1 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_import) COMMA_HERE) ;
          switch (select_semantics_5F_parser_2 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_option) COMMA_HERE) ;
              GGS_lstring  var_cas_optionComponentName ;
              inLexique.assignFromAttribute_tokenString (var_cas_optionComponentName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              var_cas_outIncludedOptionComponents.addAssign_operation (var_cas_optionComponentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1058))) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              nt_parse_5F_option_5F_component_5F_for_5F_importing_parse (inLexique) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              nt_parse_5F_grammar_5F_component_5F_for_5F_importing_parse (inLexique) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
              GGS_lstring  var_cas_componentName ;
              inLexique.assignFromAttribute_tokenString (var_cas_componentName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              var_cas_outIncludedSemanticsComponents.addAssign_operation (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1072))) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              GGS_lstring  var_cas_sourceFile ;
              inLexique.assignFromAttribute_tokenString (var_cas_sourceFile) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              ::routine_parse_semantics_component_for_importing (inLexique,  var_cas_sourceFile,  var_cas_ioSemanticsComponentsMap,  var_cas_ioSemanticContext,  var_cas_ioImportedSemanticsComponentNameSet COMMA_SOURCE_FILE_AT_LINE (1076)) ;
              GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
              GGS_ModelMap  automatic_var_39392_0 ;
              GGS_ActionMap  automatic_var_39392_1 ;
              GGS_stringset  automatic_var_39392_2 ;
              GGS_stringset  automatic_var_39392_3 ;
              GGS_stringset  automatic_var_39392_4 ;
              GGS_M_optionComponents  automatic_var_39392_5 ;
              const GGS_M_semanticsComponents  temp_39351 = var_cas_ioSemanticsComponentsMap ;
              if (temp_39351.isBuilt ()) {
                temp_39351 (HERE)->method_searchKey (inLexique, var_cas_componentName, automatic_var_39392_0, automatic_var_39392_1, automatic_var_39392_2, automatic_var_39392_3, automatic_var_39392_4, automatic_var_39392_5, var_cas_importedEntities COMMA_SOURCE_FILE_AT_LINE (1083)) ;
              }
              {
                GGS_M_semanticsEntitiesForUse::cEnumerator enumerator_39425 (var_cas_importedEntities, true) ;
                const GGS_M_semanticsEntitiesForUse::cElement * operand_39425 = NULL ;
                while (((operand_39425 = enumerator_39425.nextObject ()))) {
                  macroValidPointer (operand_39425) ;
                  const GGS_bool cond_39590 = (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (operand_39425->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1085)))).operator_not () ;
                  if (cond_39590.isBuiltAndTrue ()) {
                    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, operand_39425->mKey, operand_39425->mInfo.aDefEntite COMMA_SOURCE_FILE_AT_LINE (1086)) ;
                  }
                }
              }
              ::routine_importSemanticsComponent (inLexique,  var_cas_ioSemanticsComponentsMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName COMMA_SOURCE_FILE_AT_LINE (1090)) ;
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_import_5F_headers_5F_semantics_5F_and_5F_grammars_i1_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
      switch (select_semantics_5F_parser_1 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_import) COMMA_HERE) ;
          switch (select_semantics_5F_parser_2 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_option) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              nt_parse_5F_option_5F_component_5F_for_5F_importing_parse (inLexique) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              nt_parse_5F_grammar_5F_component_5F_for_5F_importing_parse (inLexique) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i2_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  inLexique.assignFromAttribute_tokenString (var_cas_routineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  automatic_var_41250_0 ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_localVariableMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, automatic_var_41250_0) ;
  const GGS_bool cond_41797 = var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_routineName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1136))) ;
  if (cond_41797.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  temp_41525 = var_cas_ioComponentSemanticsEntitiesMap ;
    if (temp_41525.isBuilt ()) {
      temp_41525 (HERE)->method_searchKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1138)) ;
    }
    GGS_typeEntiteRoutine  var_cas_precedenteDeclaration = GGS_typeEntiteRoutine::castFrom (inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1139)) ;
    ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_precedenteDeclaration.reader_aListeArgumentsFormels (inLexique COMMA_SOURCE_FILE_AT_LINE (1141)),  var_cas_listeDeTypes,  GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1140)) ;
  }else if (cond_41797.isBuiltAndFalse ()) {
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1146)) ;
    GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteRoutine ::constructor_new (inLexique, var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1148)) ;
  }
  switch (select_semantics_5F_parser_3 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_ioInstructionList = GGS_typeInstructionList ::constructor_emptyList () ;
      nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_localVariableMap, var_cas_ioInstructionList, var_cas_ioSemanticContext) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      GGS_typeEntityToGenerate  var_cas_ea = GGS_typeRoutineAengendrer ::constructor_new (inLexique, var_cas_routineName, var_cas_listeTypeEtNomsArguments, var_cas_ioInstructionList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_ea) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1176)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i2_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  inLexique.assignFromAttribute_tokenString (var_cas_routineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signature ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_localVariableMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  const GGS_bool cond_44012 = (var_cas_ioExternActionMap.reader_hasKey (var_cas_routineName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1205)))).operator_not () ;
  if (cond_44012.isBuiltAndTrue ()) {
    var_cas_ioExternActionMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_signature, GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1206)) ;
  }
  const GGS_bool cond_44443 = var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_routineName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1208))) ;
  if (cond_44443.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  temp_44170 = var_cas_ioComponentSemanticsEntitiesMap ;
    if (temp_44170.isBuilt ()) {
      temp_44170 (HERE)->method_searchKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1210)) ;
    }
    GGS_typeEntiteRoutine  var_cas_precedenteDeclaration = GGS_typeEntiteRoutine::castFrom (inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1211)) ;
    ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_precedenteDeclaration.reader_aListeArgumentsFormels (inLexique COMMA_SOURCE_FILE_AT_LINE (1213)),  var_cas_listeDeTypes,  GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1212)) ;
  }else if (cond_44443.isBuiltAndFalse ()) {
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1218)) ;
    GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteRoutine ::constructor_new (inLexique, var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1220)) ;
  }
  switch (select_semantics_5F_parser_3 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1231)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i2_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_arguments_5F_list_parse (inLexique) ;
  switch (select_semantics_5F_parser_3 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i3_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  inLexique.assignFromAttribute_tokenString (var_cas_routineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  automatic_var_46360_0 ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_localVariableMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, automatic_var_46360_0) ;
  GGS_L_EXsignature  var_cas_returnedTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_returnedType ;
  GGS_lstring  var_cas_galgasTypeName ;
  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_returnedType, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
  GGS_lstring  var_cas_nomArgument ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_returnedVar = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1283)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1283)) COMMA_HERE) ;
  GGS_bool var_cas_modeIn = GGS_bool (false) ;
  var_cas_localVariableMap.modifier_insertOutArgument (inLexique, var_cas_nomArgument, var_cas_returnedType, var_cas_returnedVar COMMA_SOURCE_FILE_AT_LINE (1285)) ;
  const GGS_bool cond_47729 = var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_routineName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1288))) ;
  if (cond_47729.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  temp_47320 = var_cas_ioComponentSemanticsEntitiesMap ;
    if (temp_47320.isBuilt ()) {
      temp_47320 (HERE)->method_searchKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1290)) ;
    }
    GGS_typeEntiteFonction  var_cas_precedenteDeclaration = GGS_typeEntiteFonction::castFrom (inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1291)) ;
    ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_precedenteDeclaration.reader_aListeArgumentsFormels (inLexique COMMA_SOURCE_FILE_AT_LINE (1293)),  var_cas_listeDeTypes,  GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1292)) ;
    ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_precedenteDeclaration.reader_mReturnedType (inLexique COMMA_SOURCE_FILE_AT_LINE (1298)),  var_cas_returnedType,  GGS_location (inLexique),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1297)) ;
  }else if (cond_47729.isBuiltAndFalse ()) {
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1304)) ;
    GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteFonction ::constructor_new (inLexique, var_cas_listeDeTypes, var_cas_returnedType COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1306)) ;
  }
  switch (select_semantics_5F_parser_4 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_ioInstructionList = GGS_typeInstructionList ::constructor_emptyList () ;
      nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_localVariableMap, var_cas_ioInstructionList, var_cas_ioSemanticContext) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      GGS_typeEntityToGenerate  var_cas_ea = GGS_typeFonctionAengendrer ::constructor_new (inLexique, var_cas_routineName, var_cas_listeTypeEtNomsArguments, var_cas_returnedType, var_cas_returnedVar, var_cas_ioInstructionList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_ea) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1336)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i3_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  inLexique.assignFromAttribute_tokenString (var_cas_routineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signature ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_localVariableMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  GGS_L_EXsignature  var_cas_returnedTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_returnedType ;
  GGS_lstring  var_cas_galgasTypeName ;
  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_returnedType, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
  GGS_lstring  var_cas_nomArgument ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_returnedVar = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1378)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1378)) COMMA_HERE) ;
  var_cas_localVariableMap.modifier_insertOutArgument (inLexique, var_cas_nomArgument, var_cas_returnedType, var_cas_returnedVar COMMA_SOURCE_FILE_AT_LINE (1379)) ;
  const GGS_bool cond_51118 = var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_routineName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1382))) ;
  if (cond_51118.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  temp_50708 = var_cas_ioComponentSemanticsEntitiesMap ;
    if (temp_50708.isBuilt ()) {
      temp_50708 (HERE)->method_searchKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1384)) ;
    }
    GGS_typeEntiteFonction  var_cas_precedenteDeclaration = GGS_typeEntiteFonction::castFrom (inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1385)) ;
    ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_precedenteDeclaration.reader_aListeArgumentsFormels (inLexique COMMA_SOURCE_FILE_AT_LINE (1387)),  var_cas_listeDeTypes,  GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1386)) ;
    ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_precedenteDeclaration.reader_mReturnedType (inLexique COMMA_SOURCE_FILE_AT_LINE (1392)),  var_cas_returnedType,  GGS_location (inLexique),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1391)) ;
  }else if (cond_51118.isBuiltAndFalse ()) {
    var_cas_ioExternActionMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_signature, GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1398)) ;
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1399)) ;
    GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteFonction ::constructor_new (inLexique, var_cas_listeDeTypes, var_cas_returnedType COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1401)) ;
  }
  switch (select_semantics_5F_parser_4 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1412)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i3_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_input_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  nt_formal_5F_argument_5F_type_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  switch (select_semantics_5F_parser_4 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i4_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  inLexique.assignFromAttribute_tokenString (var_cas_routineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  const GGS_L_EXsignature  var_cas_listeDeTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  GGS_typeVariablesMap  var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_returnedTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_returnedType ;
  GGS_lstring  var_cas_galgasTypeName ;
  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_returnedType, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
  GGS_lstring  var_cas_nomArgument ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_returnedVar = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1455)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1455)) COMMA_HERE) ;
  GGS_bool var_cas_modeIn = GGS_bool (false) ;
  var_cas_localVariableMap.modifier_insertOutArgument (inLexique, var_cas_nomArgument, var_cas_returnedType, var_cas_returnedVar COMMA_SOURCE_FILE_AT_LINE (1457)) ;
  const GGS_bool cond_54272 = var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_routineName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1460))) ;
  if (cond_54272.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  temp_53863 = var_cas_ioComponentSemanticsEntitiesMap ;
    if (temp_53863.isBuilt ()) {
      temp_53863 (HERE)->method_searchKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1462)) ;
    }
    GGS_typeEntiteFonction  var_cas_precedenteDeclaration = GGS_typeEntiteFonction::castFrom (inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1463)) ;
    ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_precedenteDeclaration.reader_aListeArgumentsFormels (inLexique COMMA_SOURCE_FILE_AT_LINE (1465)),  var_cas_listeDeTypes,  GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1464)) ;
    ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_precedenteDeclaration.reader_mReturnedType (inLexique COMMA_SOURCE_FILE_AT_LINE (1470)),  var_cas_returnedType,  GGS_location (inLexique),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1469)) ;
  }else if (cond_54272.isBuiltAndFalse ()) {
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1476)) ;
    GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteFonction ::constructor_new (inLexique, var_cas_listeDeTypes, var_cas_returnedType COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1478)) ;
  }
  switch (select_semantics_5F_parser_5 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
      nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_localVariableMap, var_cas_instructionList, var_cas_ioSemanticContext) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      GGS_typeEntityToGenerate  var_cas_ea = GGS_typeOnceFunctionToGenerate ::constructor_new (inLexique, var_cas_routineName, var_cas_returnedType, var_cas_returnedVar, var_cas_instructionList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_ea) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1507)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i4_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  inLexique.assignFromAttribute_tokenString (var_cas_routineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  const GGS_L_EXsignature  var_cas_listeDeTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  GGS_typeVariablesMap  var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  const GGS_signatureForGrammarAnalysis  var_cas_signature = GGS_signatureForGrammarAnalysis ::constructor_emptyList () ;
  GGS_L_EXsignature  var_cas_returnedTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_returnedType ;
  GGS_lstring  var_cas_galgasTypeName ;
  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_returnedType, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
  GGS_lstring  var_cas_nomArgument ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_returnedVar = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1540)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1540)) COMMA_HERE) ;
  var_cas_localVariableMap.modifier_insertOutArgument (inLexique, var_cas_nomArgument, var_cas_returnedType, var_cas_returnedVar COMMA_SOURCE_FILE_AT_LINE (1541)) ;
  const GGS_bool cond_57416 = var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_routineName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1544))) ;
  if (cond_57416.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  temp_57006 = var_cas_ioComponentSemanticsEntitiesMap ;
    if (temp_57006.isBuilt ()) {
      temp_57006 (HERE)->method_searchKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1546)) ;
    }
    GGS_typeEntiteFonction  var_cas_precedenteDeclaration = GGS_typeEntiteFonction::castFrom (inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1547)) ;
    ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_precedenteDeclaration.reader_aListeArgumentsFormels (inLexique COMMA_SOURCE_FILE_AT_LINE (1549)),  var_cas_listeDeTypes,  GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1548)) ;
    ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_precedenteDeclaration.reader_mReturnedType (inLexique COMMA_SOURCE_FILE_AT_LINE (1554)),  var_cas_returnedType,  GGS_location (inLexique),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1553)) ;
  }else if (cond_57416.isBuiltAndFalse ()) {
    var_cas_ioExternActionMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_signature, GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1560)) ;
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1561)) ;
    GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteFonction ::constructor_new (inLexique, var_cas_listeDeTypes, var_cas_returnedType COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1563)) ;
  }
  switch (select_semantics_5F_parser_5 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1574)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i4_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  nt_formal_5F_argument_5F_type_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  switch (select_semantics_5F_parser_5 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parent_5F_class_i5_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName,
                                GGS_string &var_cas_outSuperClassMessage,
                                GGS_bool &var_cas_outHasGeneratedInSeparateFileSetting) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_outSuperClassName = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
  var_cas_outSuperClassMessage = GGS_string ("") ;
  var_cas_outHasGeneratedInSeparateFileSetting = GGS_bool (false) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parent_5F_class_i5_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_bool &var_cas_outHasGeneratedInSeparateFileSetting) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_outMessageMap = GGS_classMessageMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_outSuperClasses = GGS_stringset ::constructor_emptySet () ;
  var_cas_outAttributeList = GGS_typeListModel ::constructor_emptyList () ;
  var_cas_outHasGeneratedInSeparateFileSetting = GGS_bool (false) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parent_5F_class_i5_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parent_5F_class_i6_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName,
                                GGS_string &var_cas_outSuperClassMessage,
                                GGS_bool &var_cas_outHasGeneratedInSeparateFileSetting) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extends) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outSuperClassName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  temp_61047 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_61047.isBuilt ()) {
    temp_61047 (HERE)->method_searchKey (inLexique, var_cas_outSuperClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1646)) ;
  }
  GGS_AC_galgasType  var_cas_typeUtilisateur = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1648)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (1648)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_typeUtilisateur.getPtr (), true, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1649)) ;
  var_cas_tableDesMethodes = var_cas_classType.reader_mMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1650)) ;
  var_cas_listeTousAttributsSemantiques = var_cas_classType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (1651)) ;
  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1652)) ;
  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1653)) ;
  var_cas_tableAttributs = var_cas_classType.reader_mNonExternAttributesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1654)) ;
  var_cas_outSuperClassMessage = var_cas_classType.reader_mClassMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (1655)) ;
  var_cas_outHasGeneratedInSeparateFileSetting = var_cas_classType.reader_mHasGeneratedInSeparateFileSetting (inLexique COMMA_SOURCE_FILE_AT_LINE (1656)) ;
  var_cas_tableDesClassesAncetres.modifier_insertKey (inLexique, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1658)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parent_5F_class_i6_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_bool &var_cas_outHasGeneratedInSeparateFileSetting) {
  GGS_lstring  var_cas_superClassName ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extends) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_superClassName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  temp_62647 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_62647.isBuilt ()) {
    temp_62647 (HERE)->method_searchKey (inLexique, var_cas_superClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1678)) ;
  }
  GGS_AC_galgasType  var_cas_typeUtilisateur = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1680)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (1680)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_typeUtilisateur.getPtr (), true, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1681)) ;
  var_cas_tableDesMethodes = var_cas_classType.reader_mMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1682)) ;
  var_cas_listeTousAttributsSemantiques = var_cas_classType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (1683)) ;
  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1684)) ;
  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1685)) ;
  var_cas_tableAttributs = var_cas_classType.reader_mNonExternAttributesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1686)) ;
  var_cas_outHasGeneratedInSeparateFileSetting = var_cas_classType.reader_mHasGeneratedInSeparateFileSetting (inLexique COMMA_SOURCE_FILE_AT_LINE (1687)) ;
  var_cas_tableDesClassesAncetres.modifier_insertKey (inLexique, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1690)) ;
  GGS_TypeModel  var_cas_type ;
  const GGS_ModelMap  temp_63530 = var_cas_ioModelMap ;
  if (temp_63530.isBuilt ()) {
    temp_63530 (HERE)->method_searchKey (inLexique, var_cas_superClassName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (1693)) ;
  }
  { const GGS_TypeModel _var_63987 = var_cas_type ; // CAST instruction
    if (_var_63987.getPtr () != NULL) {
      macroValidPointer (_var_63987.getPtr ()) ;
      if (dynamic_cast <cPtr_ClassModel *> (_var_63987.getPtr ()) != NULL) {
        const GGS_ClassModel var_cas_model (_var_63987.getPtr ()) ;
        var_cas_outSuperClasses = var_cas_model.reader_mSuperClasses (inLexique COMMA_SOURCE_FILE_AT_LINE (1696)) ;
        var_cas_outAttributeList = var_cas_model.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (1697)) ;
        var_cas_outMessageMap = var_cas_model.reader_mMessageMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1698)) ;
      }else{
        var_cas_superClassName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '@")).operator_concat (var_cas_superClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1700)))).operator_concat (GGS_string ("' type is not a class")) COMMA_SOURCE_FILE_AT_LINE (1702)) ;
        var_cas_outSuperClasses.drop () ;
        var_cas_outAttributeList.drop () ;
        var_cas_outMessageMap.drop () ;
      }
    }
  }
  var_cas_outSuperClasses.addAssign_operation (var_cas_superClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1703))) ;
  var_cas_outMessageMap = GGS_classMessageMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_outSuperClasses = GGS_stringset ::constructor_emptySet () ;
  var_cas_outAttributeList = GGS_typeListModel ::constructor_emptyList () ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parent_5F_class_i6_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extends) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i7_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  nt_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i7_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  nt_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_importSemantics (inLexique, var_cas_ioModelMap, var_cas_ioExternActionMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i7_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  nt_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_beginning_by_abstract'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i8_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  nt_class_5F_declaration_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext, GGS_bool (true)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i8_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  nt_class_5F_declaration_importSemantics (inLexique, var_cas_ioModelMap, var_cas_ioExternActionMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext, GGS_bool (true)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i8_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_class_5F_declaration_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i9_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  nt_class_5F_declaration_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext, GGS_bool (false)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i9_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  nt_class_5F_declaration_importSemantics (inLexique, var_cas_ioModelMap, var_cas_ioExternActionMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioSemanticContext, GGS_bool (false)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i9_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_class_5F_declaration_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'once_reader'               *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_once_5F_reader_i10_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                const GGS_typeTableMethodes  var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributsHerites,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_L_lazyAttributeList  &var_cas_ioLazyAttributeList) {
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  {
    GGS_typeSemanticAttributesMap::cEnumerator enumerator_70454 (var_cas_tableAttributsHerites, true) ;
    const GGS_typeSemanticAttributesMap::cElement * operand_70454 = NULL ;
    while (((operand_70454 = enumerator_70454.nextObject ()))) {
      macroValidPointer (operand_70454) ;
      GGS_typeCplusPlusName  var_cas_nomCpp = GGS_typeDirectName ::constructor_new (inLexique, operand_70454->mKey.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1884)), operand_70454->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1884)) COMMA_HERE) ;
      var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, operand_70454->mKey, operand_70454->mInfo.mAttributType, var_cas_nomCpp COMMA_SOURCE_FILE_AT_LINE (1885)) ;
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_computedAttributeTypeAndNameList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  { bool syntaxRepeat_6 = true ;
    while (syntaxRepeat_6) {
        GGS_lstring  var_cas_attributeTypeName ;
        inLexique.assignFromAttribute_tokenString (var_cas_attributeTypeName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
        GGS_lstring  var_cas_attributeName ;
        inLexique.assignFromAttribute_tokenString (var_cas_attributeName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        const GGS_M_semanticsEntitiesForUse  temp_70931 = var_cas_ioComponentSemanticsEntitiesMap ;
        if (temp_70931.isBuilt ()) {
          temp_70931 (HERE)->method_searchKey (inLexique, var_cas_attributeTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1894)) ;
        }
        GGS_AC_galgasType  var_cas_t = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_attributeTypeName COMMA_SOURCE_FILE_AT_LINE (1895)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (1895)) ;
        GGS_typeCplusPlusName  var_cas_nomCpp = GGS_typeDirectName ::constructor_new (inLexique, var_cas_attributeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1896)), var_cas_attributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1896)) COMMA_HERE) ;
        var_cas_methodLocalVariablesMap.modifier_insertOutArgument (inLexique, var_cas_attributeName, var_cas_t, var_cas_nomCpp COMMA_SOURCE_FILE_AT_LINE (1897)) ;
        var_cas_computedAttributeTypeAndNameList.addAssign_operation (var_cas_t, var_cas_attributeName) ;
      switch (select_semantics_5F_parser_6 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_6 = false ;
          break ;
      }
    }
  }
  GGS_L_lazyAttributeList  var_cas_lazyAttributeListForSelfAndSuper = var_cas_ioLazyAttributeList ;
  var_cas_lazyAttributeListForSelfAndSuper.addAssign_operation (GGS_location (inLexique), var_cas_computedAttributeTypeAndNameList, GGS_typeInstructionList ::constructor_emptyList ()) ;
  GGS_AC_galgasType  var_cas_typeDefinition = GGS_typeGalgasClassType ::constructor_new (inLexique, var_cas_inCurrentClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage, GGS_bool (false), var_cas_lazyAttributeListForSelfAndSuper COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("self"), GGS_location (inLexique) COMMA_HERE), var_cas_typeDefinition, GGS_typeCppStarThisName ::constructor_new (inLexique, GGS_location (inLexique), var_cas_inCurrentClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1920)) COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (1920)) ;
  var_cas_typeDefinition = GGS_typeGalgasClassType ::constructor_new (inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage, GGS_bool (false), var_cas_lazyAttributeListForSelfAndSuper COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("super"), GGS_location (inLexique) COMMA_HERE), var_cas_typeDefinition, GGS_typeCppInheritedName ::constructor_new (inLexique, GGS_location (inLexique) COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (1934)) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap = var_cas_ioComponentSemanticsEntitiesMap ;
  GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_typeDefinition COMMA_HERE) ;
  var_cas_componentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_inCurrentClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1938)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_componentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_instructionsList, var_cas_inSemanticContext) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioLazyAttributeList.addAssign_operation (GGS_location (inLexique), var_cas_computedAttributeTypeAndNameList, var_cas_instructionsList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_once_5F_reader_i10_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
  { bool syntaxRepeat_6 = true ;
    while (syntaxRepeat_6) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      switch (select_semantics_5F_parser_6 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_6 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'class_declaration'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_class_5F_declaration_i11_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext,
                                const GGS_bool var_cas_inIsAbstract) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
  GGS_lstring  var_cas_abstractClassName ;
  inLexique.assignFromAttribute_tokenString (var_cas_abstractClassName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_7 (inLexique)) {
    case 1 : {
      const GGS_bool cond_74287 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_abstractClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1978)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_abstractClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1979))))).operator_not () ;
      if (cond_74287.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedClassType ::constructor_new (inLexique, var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (1981)) ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_string var_cas_superClassMessage ;
      GGS_bool var_cas_hasGeneratedInSeparateFileSetting ;
      GGS_lstring  automatic_var_74990_0 ;
      nt_parent_5F_class_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap, automatic_var_74990_0, var_cas_superClassMessage, var_cas_hasGeneratedInSeparateFileSetting) ;
      switch (select_semantics_5F_parser_8 (inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_feature) COMMA_HERE) ;
          GGS_lstring  var_cas_optionString ;
          inLexique.assignFromAttribute_tokenString (var_cas_optionString) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          const GGS_bool cond_75237 = (var_cas_optionString.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2008))).operator_isNotEqual (GGS_string ("generatedInSeparateFile")) ;
          if (cond_75237.isBuiltAndTrue ()) {
            var_cas_optionString.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("only the \"generatedInSeparateFile\" pragma is allowed here") COMMA_SOURCE_FILE_AT_LINE (2010)) ;
          }
          var_cas_hasGeneratedInSeparateFileSetting = GGS_bool (true) ;
          const GGS_bool cond_75455 = (var_cas_tableDesClassesAncetres.reader_count ()).operator_strictSup (GGS_uint (0U)) ;
          if (cond_75455.isBuiltAndTrue ()) {
            var_cas_optionString.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the \"generatedInSeparateFile\" pragma is allowed only for a base class") COMMA_SOURCE_FILE_AT_LINE (2014)) ;
          }
          } break ;
        default :
          break ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      GGS_L_lazyAttributeList  var_cas_onceReaderListToImplement = GGS_L_lazyAttributeList ::constructor_emptyList () ;
      GGS_string var_cas_classMessage = GGS_string ("") ;
      { bool syntaxRepeat_9 = true ;
        while (syntaxRepeat_9) {
          switch (select_semantics_5F_parser_9 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
              switch (select_semantics_5F_parser_10 (inLexique)) {
                case 1 : {
                  GGS_lstring  var_cas_messageText ;
                  inLexique.assignFromAttribute_tokenString (var_cas_messageText) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  const GGS_bool cond_76526 = (var_cas_classMessage.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
                  if (cond_76526.isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the class message is already defined") COMMA_SOURCE_FILE_AT_LINE (2043)) ;
                  }else if (cond_76526.isBuiltAndFalse ()) {
                    const GGS_bool cond_76649 = (var_cas_messageText.ggs_string ().reader_length ()).operator_isEqual (GGS_uint (0U)) ;
                    if (cond_76649.isBuiltAndTrue ()) {
                      var_cas_messageText.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the class message string should not be empty") COMMA_SOURCE_FILE_AT_LINE (2045)) ;
                    }else if (cond_76649.isBuiltAndFalse ()) {
                      var_cas_classMessage = var_cas_messageText.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2046)) ;
                    }
                  }
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_messageName ;
                  inLexique.assignFromAttribute_tokenString (var_cas_messageName) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  GGS_lstring  var_cas_messageText ;
                  inLexique.assignFromAttribute_tokenString (var_cas_messageText) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  const GGS_bool cond_77096 = (var_cas_inheritedMessageMap.reader_hasKey (var_cas_messageName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2055)))).operator_not () ;
                  if (cond_77096.isBuiltAndTrue ()) {
                    var_cas_messageMapForHeirs.modifier_insertKey (inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (2056)) ;
                  }
                  var_cas_tableMessagesClasseConcrete.modifier_insertKey (inLexique, var_cas_messageName, var_cas_messageText COMMA_SOURCE_FILE_AT_LINE (2058)) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_5F_method_ (inLexique, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_5F_abstract_5F_method_ (inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            case 5 : {
              nt_overrided_5F_method_ (inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            case 6 : {
              nt_once_5F_reader_ (inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            default :
              syntaxRepeat_9 = false ;
              break ;
          }
        }
      }
      const GGS_bool cond_79113 = ((var_cas_superClassMessage.reader_length ()).operator_strictSup (GGS_uint (0U))).operator_and ((var_cas_classMessage.reader_length ()).operator_isEqual (GGS_uint (0U))) ;
      if (cond_79113.isBuiltAndTrue ()) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this class should defined a class message, as it inherits from a class that does") COMMA_SOURCE_FILE_AT_LINE (2126)) ;
      }
      {
        GGS_typeClassInheritedMessagesMap::cEnumerator enumerator_79204 (var_cas_inheritedMessageMap, true) ;
        const GGS_typeClassInheritedMessagesMap::cElement * operand_79204 = NULL ;
        while (((operand_79204 = enumerator_79204.nextObject ()))) {
          macroValidPointer (operand_79204) ;
          const GGS_bool cond_79361 = (var_cas_tableMessagesClasseConcrete.reader_hasKey (operand_79204->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2129)))).operator_not () ;
          if (cond_79361.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the message '")).operator_concat (operand_79204->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2130)))).operator_concat (GGS_string ("' is not defined")) COMMA_SOURCE_FILE_AT_LINE (2131)) ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasClassType ::constructor_new (inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_classMessage, var_cas_hasGeneratedInSeparateFileSetting, var_cas_onceReaderListToImplement COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_abstractClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2147)) ;
      GGS_typeListeAttributsSemantiques  var_cas_setterAttributeModifierToImplementList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_80062 (var_cas_listeAttributsSemantiquesCourants, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_80062 = NULL ;
        while (((operand_80062 = enumerator_80062.nextObject ()))) {
          macroValidPointer (operand_80062) ;
          GGS_bool var_cas_hasSetter ;
          GGS_AC_galgasType  automatic_var_80155_0 ;
          GGS_bool automatic_var_80155_1 ;
          const GGS_typeSemanticAttributesMap  temp_80121 = var_cas_tableAttributs ;
          if (temp_80121.isBuilt ()) {
            temp_80121 (HERE)->method_searchKey (inLexique, operand_80062->mAttributeName, automatic_var_80155_0, var_cas_hasSetter, automatic_var_80155_1 COMMA_SOURCE_FILE_AT_LINE (2152)) ;
          }
          const GGS_bool cond_80302 = var_cas_hasSetter ;
          if (cond_80302.isBuiltAndTrue ()) {
            var_cas_setterAttributeModifierToImplementList.addAssign_operation (operand_80062->mAttributType, operand_80062->mAttributeName) ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_getterAttributeReaderToImplementList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_80472 (var_cas_listeAttributsSemantiquesCourants, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_80472 = NULL ;
        while (((operand_80472 = enumerator_80472.nextObject ()))) {
          macroValidPointer (operand_80472) ;
          GGS_bool var_cas_hasGetter ;
          GGS_AC_galgasType  automatic_var_80565_0 ;
          GGS_bool automatic_var_80565_1 ;
          const GGS_typeSemanticAttributesMap  temp_80531 = var_cas_tableAttributs ;
          if (temp_80531.isBuilt ()) {
            temp_80531 (HERE)->method_searchKey (inLexique, operand_80472->mAttributeName, automatic_var_80565_0, automatic_var_80565_1, var_cas_hasGetter COMMA_SOURCE_FILE_AT_LINE (2164)) ;
          }
          const GGS_bool cond_80710 = var_cas_hasGetter ;
          if (cond_80710.isBuiltAndTrue ()) {
            var_cas_getterAttributeReaderToImplementList.addAssign_operation (operand_80472->mAttributType, operand_80472->mAttributeName) ;
          }
        }
      }
      GGS_typeEntityToGenerate  var_cas_def = GGS_C_classToImplement ::constructor_new (inLexique, var_cas_abstractClassName, var_cas_inIsAbstract, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesClassesAncetres, var_cas_tableMessagesClasseConcrete, var_cas_classMessage, var_cas_hasGeneratedInSeparateFileSetting, var_cas_onceReaderListToImplement, var_cas_setterAttributeModifierToImplementList, var_cas_getterAttributeReaderToImplementList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_class_5F_declaration_i11_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext,
                                const GGS_bool var_cas_inIsAbstract) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
  GGS_lstring  var_cas_abstractClassName ;
  inLexique.assignFromAttribute_tokenString (var_cas_abstractClassName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_7 (inLexique)) {
    case 1 : {
      const GGS_bool cond_82172 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_abstractClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2206)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_abstractClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2207))))).operator_not () ;
      if (cond_82172.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedClassType ::constructor_new (inLexique, var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (2209)) ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_stringset  var_cas_superClasses ;
      GGS_typeListModel  var_cas_attributeList ;
      GGS_classMessageMap  var_cas_messageMap ;
      GGS_bool var_cas_hasGeneratedInSeparateFileSetting = GGS_bool (false) ;
      nt_parent_5F_class_importSemantics (inLexique, var_cas_ioModelMap, var_cas_superClasses, var_cas_attributeList, var_cas_messageMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap, var_cas_hasGeneratedInSeparateFileSetting) ;
      switch (select_semantics_5F_parser_8 (inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_feature) COMMA_HERE) ;
          GGS_lstring  var_cas_optionString ;
          inLexique.assignFromAttribute_tokenString (var_cas_optionString) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          const GGS_bool cond_83258 = (var_cas_optionString.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2240))).operator_isNotEqual (GGS_string ("generatedInSeparateFile")) ;
          if (cond_83258.isBuiltAndTrue ()) {
            var_cas_optionString.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("only the \"generatedInSeparateFile\" pragma is allowed here") COMMA_SOURCE_FILE_AT_LINE (2242)) ;
          }
          var_cas_hasGeneratedInSeparateFileSetting = GGS_bool (true) ;
          const GGS_bool cond_83476 = (var_cas_tableDesClassesAncetres.reader_count ()).operator_strictSup (GGS_uint (0U)) ;
          if (cond_83476.isBuiltAndTrue ()) {
            var_cas_optionString.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the \"generatedInSeparateFile\" pragma is allowed only for a base class") COMMA_SOURCE_FILE_AT_LINE (2246)) ;
          }
          } break ;
        default :
          break ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeList, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList ::constructor_emptyList () ;
      GGS_M_optionComponents  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_L_lazyAttributeList  var_cas_onceReaderListToImplement = GGS_L_lazyAttributeList ::constructor_emptyList () ;
      GGS_string var_cas_classMessage = GGS_string ("") ;
      { bool syntaxRepeat_9 = true ;
        while (syntaxRepeat_9) {
          switch (select_semantics_5F_parser_9 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
              switch (select_semantics_5F_parser_10 (inLexique)) {
                case 1 : {
                  GGS_lstring  var_cas_messageText ;
                  inLexique.assignFromAttribute_tokenString (var_cas_messageText) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  const GGS_bool cond_84623 = (var_cas_classMessage.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
                  if (cond_84623.isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the class message is already defined") COMMA_SOURCE_FILE_AT_LINE (2276)) ;
                  }else if (cond_84623.isBuiltAndFalse ()) {
                    const GGS_bool cond_84746 = (var_cas_messageText.ggs_string ().reader_length ()).operator_isEqual (GGS_uint (0U)) ;
                    if (cond_84746.isBuiltAndTrue ()) {
                      var_cas_messageText.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the class message string should not be empty") COMMA_SOURCE_FILE_AT_LINE (2278)) ;
                    }else if (cond_84746.isBuiltAndFalse ()) {
                      var_cas_classMessage = var_cas_messageText.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2279)) ;
                    }
                  }
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_messageName ;
                  inLexique.assignFromAttribute_tokenString (var_cas_messageName) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  GGS_lstring  var_cas_messageText ;
                  inLexique.assignFromAttribute_tokenString (var_cas_messageText) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  const GGS_bool cond_85193 = (var_cas_inheritedMessageMap.reader_hasKey (var_cas_messageName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2288)))).operator_not () ;
                  if (cond_85193.isBuiltAndTrue ()) {
                    var_cas_messageMapForHeirs.modifier_insertKey (inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (2289)) ;
                  }
                  var_cas_tableMessagesClasseConcrete.modifier_insertKey (inLexique, var_cas_messageName, var_cas_messageText COMMA_SOURCE_FILE_AT_LINE (2291)) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_5F_method_ (inLexique, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_5F_abstract_5F_method_ (inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            case 5 : {
              nt_overrided_5F_method_ (inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            case 6 : {
              nt_once_5F_reader_ (inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_classMessage, var_cas_ioSemanticContext, var_cas_onceReaderListToImplement) ;
              } break ;
            default :
              syntaxRepeat_9 = false ;
              break ;
          }
        }
      }
      {
        GGS_typeClassInheritedMessagesMap::cEnumerator enumerator_87051 (var_cas_inheritedMessageMap, true) ;
        const GGS_typeClassInheritedMessagesMap::cElement * operand_87051 = NULL ;
        while (((operand_87051 = enumerator_87051.nextObject ()))) {
          macroValidPointer (operand_87051) ;
          const GGS_bool cond_87209 = (var_cas_tableMessagesClasseConcrete.reader_hasKey (operand_87051->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2357)))).operator_not () ;
          if (cond_87209.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the message '")).operator_concat (operand_87051->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2358)))).operator_concat (GGS_string ("' is not defined")) COMMA_SOURCE_FILE_AT_LINE (2359)) ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasClassType ::constructor_new (inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inIsAbstract, var_cas_classMessage, var_cas_hasGeneratedInSeparateFileSetting, var_cas_onceReaderListToImplement COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_abstractClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2375)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      GGS_TypeModel  var_cas_t = GGS_ClassModel ::constructor_new (inLexique, GGS_bool (true), var_cas_superClasses, var_cas_attributeList, var_cas_messageMap COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (2378)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_class_5F_declaration_i11_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_7 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      nt_parent_5F_class_parse (inLexique) ;
      switch (select_semantics_5F_parser_8 (inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_feature) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      nt_attributes_5F_definition_5F_list_parse (inLexique) ;
      { bool syntaxRepeat_9 = true ;
        while (syntaxRepeat_9) {
          switch (select_semantics_5F_parser_9 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
              switch (select_semantics_5F_parser_10 (inLexique)) {
                case 1 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_5F_method_parse (inLexique) ;
              } break ;
            case 4 : {
              nt_non_5F_abstract_5F_method_parse (inLexique) ;
              } break ;
            case 5 : {
              nt_overrided_5F_method_parse (inLexique) ;
              } break ;
            case 6 : {
              nt_once_5F_reader_parse (inLexique) ;
              } break ;
            default :
              syntaxRepeat_9 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'abstract_method'             *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_abstract_5F_method_i12_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_bool var_cas_inIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  const GGS_bool cond_88554 = (var_cas_inIsAbstract).operator_not () ;
  if (cond_88554.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("a concrete class should not declare an abstract method") COMMA_SOURCE_FILE_AT_LINE (2397)) ;
  }
  GGS_lstring  var_cas_nomMethode ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomMethode) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  var_cas_tableDesMethodes.modifier_insertKey (inLexique, var_cas_nomMethode, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (2412)) ;
  GGS_typeInstructionList  var_cas_listeInstructions = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_tableMethodesAimplementer.modifier_insertAbstract (inLexique, var_cas_nomMethode, var_cas_listeDeTypes, var_cas_listeTypeEtNomsArguments, var_cas_listeInstructions COMMA_SOURCE_FILE_AT_LINE (2414)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_abstract_5F_method_i12_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parse_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_method_i13_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                const GGS_typeTableMethodes  var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributsHerites,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outMethodName,
                                GGS_typeInstructionList  &var_cas_outInstructionsList,
                                GGS_L_EXsignature  &var_cas_outMethodSignature,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_L_lazyAttributeList  var_cas_inLazyAttributeListToImplement) {
  inLexique.assignFromAttribute_tokenString (var_cas_outMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  {
    GGS_typeSemanticAttributesMap::cEnumerator enumerator_90363 (var_cas_tableAttributsHerites, true) ;
    const GGS_typeSemanticAttributesMap::cElement * operand_90363 = NULL ;
    while (((operand_90363 = enumerator_90363.nextObject ()))) {
      macroValidPointer (operand_90363) ;
      GGS_typeCplusPlusName  var_cas_nomCpp = GGS_typeDirectName ::constructor_new (inLexique, operand_90363->mKey.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2445)), operand_90363->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2445)) COMMA_HERE) ;
      var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, operand_90363->mKey, operand_90363->mInfo.mAttributType, var_cas_nomCpp COMMA_SOURCE_FILE_AT_LINE (2446)) ;
    }
  }
  GGS_AC_galgasType  var_cas_typeDefinition = GGS_typeGalgasClassType ::constructor_new (inLexique, var_cas_inCurrentClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage, GGS_bool (false), var_cas_inLazyAttributeListToImplement COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("self"), GGS_location (inLexique) COMMA_HERE), var_cas_typeDefinition, GGS_typeCppStarThisName ::constructor_new (inLexique, GGS_location (inLexique), var_cas_inCurrentClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2461)) COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (2461)) ;
  var_cas_typeDefinition = GGS_typeGalgasClassType ::constructor_new (inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage, GGS_bool (false), var_cas_inLazyAttributeListToImplement COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("super"), GGS_location (inLexique) COMMA_HERE), var_cas_typeDefinition, GGS_typeCppInheritedName ::constructor_new (inLexique, GGS_location (inLexique) COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (2475)) ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_outMethodSignature, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap = var_cas_ioComponentSemanticsEntitiesMap ;
  GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_typeDefinition COMMA_HERE) ;
  var_cas_componentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_inCurrentClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2490)) ;
  var_cas_outInstructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_componentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_outInstructionsList, var_cas_inSemanticContext) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_method_i13_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'non_abstract_method'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_non_5F_abstract_5F_method_i14_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributs,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_L_lazyAttributeList  var_cas_inLazyAttributeListToImplement) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_5F_method_ (inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_inOptionsComponentsMapForUse, var_cas_inClassMessage, var_cas_inSemanticContext, var_cas_inLazyAttributeListToImplement) ;
  var_cas_tableDesMethodes.modifier_insertKey (inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (2547)) ;
  var_cas_tableMethodesAimplementer.modifier_insertNotAbstract (inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList COMMA_SOURCE_FILE_AT_LINE (2548)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_non_5F_abstract_5F_method_i14_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  nt_parse_5F_method_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'overrided_method'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_overrided_5F_method_i15_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributs,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_L_lazyAttributeList  var_cas_inLazyAttributeListToImplement) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_5F_method_ (inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_inOptionsComponentsMapForUse, var_cas_inClassMessage, var_cas_inSemanticContext, var_cas_inLazyAttributeListToImplement) ;
  GGS_L_EXsignature  var_cas_listeDeTypesMethodeOriginale ;
  const GGS_typeTableMethodes  temp_95943 = var_cas_tableDesMethodes ;
  if (temp_95943.isBuilt ()) {
    temp_95943 (HERE)->method_searchKey (inLexique, var_cas_methodName, var_cas_listeDeTypesMethodeOriginale COMMA_SOURCE_FILE_AT_LINE (2601)) ;
  }
  ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_listeDeTypesMethodeOriginale,  var_cas_methodSignature,  GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (2602)) ;
  var_cas_tableMethodesAimplementer.modifier_insertNotAbstract (inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList COMMA_SOURCE_FILE_AT_LINE (2608)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_overrided_5F_method_i15_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  nt_parse_5F_method_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'formal_arguments_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_arguments_5F_list_i16_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_EXsignature  &var_cas_listeDeTypes,
                                GGS_typeVariablesMap  &var_cas_tableArgumentsMethode,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_signatureForGrammarAnalysis  &var_cas_outSignatureForGrammar) {
  var_cas_listeDeTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  var_cas_listeTypeEtNomsArguments = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList () ;
  var_cas_outSignatureForGrammar = GGS_signatureForGrammarAnalysis ::constructor_emptyList () ;
  { bool syntaxRepeat_11 = true ;
    while (syntaxRepeat_11) {
      switch (select_semantics_5F_parser_11 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__3F_) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes.addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          GGS_bool var_cas_modeIn = GGS_bool (true) ;
          switch (select_semantics_5F_parser_12 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2649)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2649)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn, var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedConstInArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2651)) ;
              } break ;
            case 2 : {
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2654)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2654)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn, var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertConstInArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2656)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes.addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_5F_parser_13 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              GGS_lstring  var_cas_nomArgument ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2675)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2675)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2677)) ;
              } break ;
            case 2 : {
              GGS_lstring  var_cas_nomArgument ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2681)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2681)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertInArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2683)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__21_) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentInOut (inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes.addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          switch (select_semantics_5F_parser_14 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2702)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2702)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (false), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInOutArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2704)) ;
              } break ;
            case 2 : {
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2707)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2707)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (false), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertInOutArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2709)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes.addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2726)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2726)) COMMA_HERE) ;
          GGS_bool var_cas_modeIn = GGS_bool (false) ;
          var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn, var_cas_nomArgument) ;
          var_cas_tableArgumentsMethode.modifier_insertOutArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2729)) ;
          } break ;
        default :
          syntaxRepeat_11 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_arguments_5F_list_i16_importGrammarForSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_signatureForGrammarAnalysis  &var_cas_outSignature) {
  var_cas_outSignature = GGS_signatureForGrammarAnalysis ::constructor_emptyList () ;
  { bool syntaxRepeat_11 = true ;
    while (syntaxRepeat_11) {
      switch (select_semantics_5F_parser_11 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__3F_) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_importGrammarForSemantics (inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_5F_parser_12 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_importGrammarForSemantics (inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_5F_parser_13 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__21_) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentInOut (inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_importGrammarForSemantics (inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_5F_parser_14 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_importGrammarForSemantics (inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_11 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_arguments_5F_list_i16_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_11 = true ;
    while (syntaxRepeat_11) {
      switch (select_semantics_5F_parser_11 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__3F_) COMMA_HERE) ;
          nt_formal_5F_argument_5F_type_parse (inLexique) ;
          switch (select_semantics_5F_parser_12 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          nt_formal_5F_argument_5F_type_parse (inLexique) ;
          switch (select_semantics_5F_parser_13 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__21_) COMMA_HERE) ;
          nt_formal_5F_argument_5F_type_parse (inLexique) ;
          switch (select_semantics_5F_parser_14 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
          nt_formal_5F_argument_5F_type_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_11 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'formal_input_arguments_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_input_5F_arguments_5F_list_i17_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_EXsignature  &var_cas_listeDeTypes,
                                GGS_typeVariablesMap  &var_cas_tableArgumentsMethode,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_signatureForGrammarAnalysis  &var_cas_outSignatureForGrammar) {
  var_cas_listeDeTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  var_cas_listeTypeEtNomsArguments = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList () ;
  var_cas_outSignatureForGrammar = GGS_signatureForGrammarAnalysis ::constructor_emptyList () ;
  { bool syntaxRepeat_15 = true ;
    while (syntaxRepeat_15) {
      switch (select_semantics_5F_parser_15 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__3F_) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes.addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          GGS_bool var_cas_modeIn = GGS_bool (true) ;
          switch (select_semantics_5F_parser_16 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2816)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2816)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn, var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedConstInArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2818)) ;
              } break ;
            case 2 : {
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2821)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2821)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn, var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertConstInArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2823)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes.addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_5F_parser_17 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              GGS_lstring  var_cas_nomArgument ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2842)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2842)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2844)) ;
              } break ;
            case 2 : {
              GGS_lstring  var_cas_nomArgument ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2848)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2848)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true), var_cas_nomArgument) ;
              var_cas_tableArgumentsMethode.modifier_insertInArgument (inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2850)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_15 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_input_5F_arguments_5F_list_i17_importGrammarForSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_signatureForGrammarAnalysis  &var_cas_outSignature) {
  var_cas_outSignature = GGS_signatureForGrammarAnalysis ::constructor_emptyList () ;
  { bool syntaxRepeat_15 = true ;
    while (syntaxRepeat_15) {
      switch (select_semantics_5F_parser_15 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__3F_) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_importGrammarForSemantics (inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_5F_parser_16 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_5F_argument_5F_type_importGrammarForSemantics (inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_5F_parser_17 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_15 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_input_5F_arguments_5F_list_i17_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_15 = true ;
    while (syntaxRepeat_15) {
      switch (select_semantics_5F_parser_15 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__3F_) COMMA_HERE) ;
          nt_formal_5F_argument_5F_type_parse (inLexique) ;
          switch (select_semantics_5F_parser_16 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          nt_formal_5F_argument_5F_type_parse (inLexique) ;
          switch (select_semantics_5F_parser_17 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_15 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'type_parsing'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_type_5F_parsing_i18_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_outTypeDefinition,
                                GGS_lstring  &var_cas_outTypeName) {
  inLexique.assignFromAttribute_tokenString (var_cas_outTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  const GGS_bool cond_108197 = var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_outTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2896))) ;
  if (cond_108197.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  temp_108068 = var_cas_ioComponentSemanticsEntitiesMap ;
    if (temp_108068.isBuilt ()) {
      temp_108068 (HERE)->method_searchKey (inLexique, var_cas_outTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2898)) ;
    }
    var_cas_outTypeDefinition = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (2899)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (2899)) ;
  }else if (cond_108197.isBuiltAndFalse ()) {
    const GGS_bool cond_108321 = var_cas_inTableEnAvant.reader_hasKey (var_cas_outTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2900))) ;
    if (cond_108321.isBuiltAndTrue ()) {
      const GGS_typeTableEnAvant  temp_108278 = var_cas_inTableEnAvant ;
      if (temp_108278.isBuilt ()) {
        temp_108278 (HERE)->method_searchKey (inLexique, var_cas_outTypeName, var_cas_outTypeDefinition COMMA_SOURCE_FILE_AT_LINE (2901)) ;
      }
    }else if (cond_108321.isBuiltAndFalse ()) {
      var_cas_outTypeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '@")).operator_concat (var_cas_outTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2903)))).operator_concat (GGS_string ("' type is not defined")) COMMA_SOURCE_FILE_AT_LINE (2904)) ;
      var_cas_outTypeDefinition.drop () ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_type_5F_parsing_i18_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_i19_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  var_cas_inTargetVarName,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_AC_galgasType  var_cas_targetVarType ;
  GGS_typeCplusPlusName  var_cas_targetVarCppName ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (inLexique, var_cas_inTargetVarName, var_cas_targetVarType, var_cas_targetVarCppName COMMA_SOURCE_FILE_AT_LINE (2937)) ;
  ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_targetVarType,  var_cas_sourceType,  GGS_location (inLexique),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (2939)) ;
  GGS_typeInstruction  var_cas_instruction = GGS_C_assignmentInstruction ::constructor_new (inLexique, var_cas_targetVarCppName, GGS_lstringlist ::constructor_emptyList (), var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_i19_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_i20_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_AC_galgasType  var_cas_targetType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (inLexique, var_cas_nomVarDest, var_cas_targetType, var_cas_nomCppVariableSource COMMA_SOURCE_FILE_AT_LINE (2964)) ;
  GGS_lstringlist  var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_18 = true ;
    while (syntaxRepeat_18) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E_) COMMA_HERE) ;
        GGS_lstring  var_cas_structAttributeName ;
        inLexique.assignFromAttribute_tokenString (var_cas_structAttributeName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
        var_cas_structAttributeList.addAssign_operation (var_cas_structAttributeName) ;
        GGS_typeGalgasStructType  var_cas_structType = GGS_typeGalgasStructType::castFrom (inLexique, var_cas_targetType.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (2972)) ;
        GGS_bool var_cas_found = GGS_bool (false) ;
        {
          GGS_typeListeAttributsSemantiques::cEnumerator enumerator_111387 (var_cas_structType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (2974)), true) ;
          const GGS_typeListeAttributsSemantiques::cElement * operand_111387 = NULL ;
          while (((operand_111387 = enumerator_111387.nextObject ()))
              && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
            macroValidPointer (operand_111387) ;
            var_cas_found = (operand_111387->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2975))).operator_isEqual (var_cas_structAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2975))) ;
            var_cas_targetType = operand_111387->mAttributType ;
          }
        }
        const GGS_bool cond_111728 = (var_cas_found).operator_not () ;
        if (cond_111728.isBuiltAndTrue ()) {
          var_cas_structAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '@")).operator_concat (var_cas_structType.reader_mStructTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (2979)))).operator_concat (GGS_string ("' does not define a '"))).operator_concat (var_cas_structAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (2980)) ;
        }
      switch (select_semantics_5F_parser_18 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_18 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_targetType,  var_cas_sourceType,  GGS_location (inLexique),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (2997)) ;
  GGS_typeInstruction  var_cas_instruction = GGS_C_assignmentInstruction ::constructor_new (inLexique, var_cas_nomCppVariableSource, var_cas_structAttributeList, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_i20_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_18 = true ;
    while (syntaxRepeat_18) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E_) COMMA_HERE) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      switch (select_semantics_5F_parser_18 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_18 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i21_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_typeCplusPlusName  var_cas_inTargetVarCppName,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E__3D_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_string var_cas_sourceExpressionConverter ;
  if (var_cas_inTargetType.isBuilt () && var_cas_sourceType.isBuilt ()) {
    cPtr_AC_galgasType * ptr_113545 = var_cas_inTargetType (HERE) ;
    cPtr_AC_galgasType * ptr_113558 = var_cas_sourceType (HERE) ;
    cPtr_typeGalgasListmapType * operand_113545 = dynamic_cast <cPtr_typeGalgasListmapType *> (ptr_113545) ;
    cPtr_typeGalgasListmapType * operand_113558 = dynamic_cast <cPtr_typeGalgasListmapType *> (ptr_113558) ;
    if ((operand_113545 != NULL) && (operand_113558 != NULL)) {
      const GGS_bool cond_113941 = (operand_113545->mListmapTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3035))).operator_isNotEqual (operand_113558->mListmapTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3035))) ;
      if (cond_113941.isBuiltAndTrue ()) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("for '.=' operator, listmap type @")).operator_concat (operand_113545->mListmapTypeName)).operator_concat (GGS_string (" of target object is not compatible with listmap type @"))).operator_concat (operand_113558->mListmapTypeName)).operator_concat (GGS_string (" of source expression")) COMMA_SOURCE_FILE_AT_LINE (3039)) ;
        var_cas_sourceExpressionConverter.drop () ;
      }else if (cond_113941.isBuiltAndFalse ()) {
        var_cas_sourceExpressionConverter = GGS_string ("") ;
      }
    }else{
      cPtr_typeGalgasListType * operand_113545 = dynamic_cast <cPtr_typeGalgasListType *> (ptr_113545) ;
      cPtr_typeGalgasListType * operand_113558 = dynamic_cast <cPtr_typeGalgasListType *> (ptr_113558) ;
      if ((operand_113545 != NULL) && (operand_113558 != NULL)) {
        const GGS_bool cond_114365 = (operand_113545->mListTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3043))).operator_isNotEqual (operand_113558->mListTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3043))) ;
        if (cond_114365.isBuiltAndTrue ()) {
          GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("for '.=' operator, list type @")).operator_concat (operand_113545->mListTypeName)).operator_concat (GGS_string (" of target object is not compatible with list type @"))).operator_concat (operand_113558->mListTypeName)).operator_concat (GGS_string (" of source expression")) COMMA_SOURCE_FILE_AT_LINE (3047)) ;
          var_cas_sourceExpressionConverter.drop () ;
        }else if (cond_114365.isBuiltAndFalse ()) {
          var_cas_sourceExpressionConverter = GGS_string ("") ;
        }
      }else{
        cPtr_typeGalgasSortedListType * operand_113545 = dynamic_cast <cPtr_typeGalgasSortedListType *> (ptr_113545) ;
        cPtr_typeGalgasSortedListType * operand_113558 = dynamic_cast <cPtr_typeGalgasSortedListType *> (ptr_113558) ;
        if ((operand_113545 != NULL) && (operand_113558 != NULL)) {
          const GGS_bool cond_114813 = (operand_113545->mListTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3051))).operator_isNotEqual (operand_113558->mListTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3051))) ;
          if (cond_114813.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("for '.=' operator, sortedlist type @")).operator_concat (operand_113545->mListTypeName)).operator_concat (GGS_string (" of target object is not compatible with sortedlist type @"))).operator_concat (operand_113558->mListTypeName)).operator_concat (GGS_string (" of source expression")) COMMA_SOURCE_FILE_AT_LINE (3055)) ;
            var_cas_sourceExpressionConverter.drop () ;
          }else if (cond_114813.isBuiltAndFalse ()) {
            var_cas_sourceExpressionConverter = GGS_string ("") ;
          }
        }else{
          cPtr_typeGalgas_string * operand_113545 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_113545) ;
          cPtr_typeGalgas_string * operand_113558 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_113558) ;
          if ((operand_113545 != NULL) && (operand_113558 != NULL)) {
            var_cas_sourceExpressionConverter = GGS_string ("") ;
          }else{
            cPtr_typeGalgas_string * operand_113545 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_113545) ;
            cPtr_typeGalgas_lstring * operand_113558 = dynamic_cast <cPtr_typeGalgas_lstring *> (ptr_113558) ;
            if ((operand_113545 != NULL) && (operand_113558 != NULL)) {
              var_cas_sourceExpressionConverter = GGS_string ("ggs_string") ;
            }else{
              GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("for '.=' operator, ")).operator_concat (var_cas_inTargetType.reader_messageGalgasType (inLexique COMMA_SOURCE_FILE_AT_LINE (3063)))).operator_concat (GGS_string (" target object type is not compatible with "))).operator_concat (var_cas_sourceType.reader_messageGalgasType (inLexique COMMA_SOURCE_FILE_AT_LINE (3064)))).operator_concat (GGS_string (" source expression type")) COMMA_SOURCE_FILE_AT_LINE (3066)) ;
              var_cas_sourceExpressionConverter.drop () ;
            }
          }
        }
      }
    }
  }
  GGS_typeInstruction  var_cas_instruction = GGS_C_dotEqualInstruction ::constructor_new (inLexique, var_cas_inTargetVarCppName, var_cas_inStructAttributeList, var_cas_sourceExpression, var_cas_sourceExpressionConverter COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i21_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E__3D_) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'input_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_input_5F_parameters_5F_list_i22_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_assignedVariables  &var_cas_listeAffectationParametresEffectifs,
                                GGS_typeCplusPlusNameList  &var_cas_outAllVariablesList,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  GGS_typeListeCibles  var_cas_listeCibles = GGS_typeListeCibles ::constructor_emptyList () ;
  { bool syntaxRepeat_19 = true ;
    while (syntaxRepeat_19) {
      switch (select_semantics_5F_parser_19 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          switch (select_semantics_5F_parser_20 (inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_nomVariableDest ;
              switch (select_semantics_5F_parser_21 (inLexique)) {
                case 1 : {
                  GGS_AC_galgasType  var_cas_definitionType ;
                  GGS_lstring  var_cas_typeName ;
                  nt_type_5F_parsing_ (inLexique, GGS_typeTableEnAvant ::constructor_emptyMap (inLexique COMMA_HERE), var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
                  inLexique.assignFromAttribute_tokenString (var_cas_nomVariableDest) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_nomCppVariable = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomVariableDest.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (3105)), var_cas_nomVariableDest.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3105)) COMMA_HERE) ;
                  var_cas_ioVariablesMap.modifier_insertLocalVariable (inLexique, var_cas_nomVariableDest, var_cas_definitionType, var_cas_nomCppVariable COMMA_SOURCE_FILE_AT_LINE (3106)) ;
                  var_cas_ioInstructionList.addAssign_operation (GGS_typeInstructionDeclarationVarLocale ::constructor_new (inLexique, var_cas_nomCppVariable, var_cas_definitionType COMMA_HERE)) ;
                  } break ;
                case 2 : {
                  inLexique.assignFromAttribute_tokenString (var_cas_nomVariableDest) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              GGS_AC_galgasType  var_cas_typeVarDest ;
              GGS_typeCplusPlusName  var_cas_nomCppDest ;
              var_cas_ioVariablesMap.modifier_searchForWriteAccess (inLexique, var_cas_nomVariableDest, var_cas_typeVarDest, var_cas_nomCppDest COMMA_SOURCE_FILE_AT_LINE (3113)) ;
              var_cas_listeCibles.addAssign_operation (GGS_typeEntiteDest ::constructor_new (inLexique, var_cas_typeVarDest, var_cas_nomCppDest, GGS_location (inLexique) COMMA_HERE)) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2A_) COMMA_HERE) ;
              var_cas_listeCibles.addAssign_operation (GGS_typeJoker ::constructor_new (inLexique COMMA_HERE)) ;
              } break ;
            case 3 : {
              GGS_luint  var_cas_jokerCountWithLocation ;
              inLexique.assignFromAttribute_uint_33__32_value (var_cas_jokerCountWithLocation) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unsigned_5F_literal_5F_integer) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2A_) COMMA_HERE) ;
              GGS_uint  var_cas_jokerCount = var_cas_jokerCountWithLocation.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (3122)) ;
              GGS_uint _variant_117542 = var_cas_jokerCount.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (3123)) ;
              GGS_bool _condition_117542 (_variant_117542.isBuilt (), true) ;
              while (_condition_117542.isBuiltAndTrue ()) {
                _condition_117542 = (var_cas_jokerCount).operator_strictSup (GGS_uint (0U)) ;
                if (_condition_117542.isBuiltAndTrue ()) {
                  if (_variant_117542.uintValue () == 0) {
                    inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (3127)) ;
                    _condition_117542 = GGS_bool (false) ;
                  }else{
                    _variant_117542.decrement_operation (inLexique COMMA_HERE) ;
                    var_cas_listeCibles.addAssign_operation (GGS_typeJoker ::constructor_new (inLexique COMMA_HERE)) ;
                    var_cas_jokerCount.decrement_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (3126)) ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_19 = false ;
          break ;
      }
    }
  }
  GGS_bool var_cas_ellipsis ;
  switch (select_semantics_5F_parser_22 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E__2E__2E_) COMMA_HERE) ;
      var_cas_ellipsis = GGS_bool (true) ;
      } break ;
    case 2 : {
      var_cas_ellipsis = GGS_bool (false) ;
      } break ;
    default :
      break ;
  }
  const GGS_bool cond_118063 = (var_cas_listeAttributsSemantiques.reader_length ()).operator_strictInf (var_cas_listeCibles.reader_length ()) ;
  if (cond_118063.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("too much arguments: ")).operator_concat (var_cas_listeAttributsSemantiques.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3139)))).operator_concat (GGS_string (" expected, "))).operator_concat (var_cas_listeCibles.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3140)))).operator_concat (GGS_string (" found")) COMMA_SOURCE_FILE_AT_LINE (3142)) ;
    var_cas_outAllVariablesList.drop () ;
    var_cas_listeAffectationParametresEffectifs.drop () ;
  }else if (cond_118063.isBuiltAndFalse ()) {
    const GGS_bool cond_118370 = ((var_cas_listeAttributsSemantiques.reader_length ()).operator_strictSup (var_cas_listeCibles.reader_length ())).operator_and ((var_cas_ellipsis).operator_not ()) ;
    if (cond_118370.isBuiltAndTrue ()) {
      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("argument(s) missing: ")).operator_concat (var_cas_listeAttributsSemantiques.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3143)))).operator_concat (GGS_string (" expected, "))).operator_concat (var_cas_listeCibles.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3144)))).operator_concat (GGS_string (" found")) COMMA_SOURCE_FILE_AT_LINE (3146)) ;
      var_cas_outAllVariablesList.drop () ;
      var_cas_listeAffectationParametresEffectifs.drop () ;
    }else if (cond_118370.isBuiltAndFalse ()) {
      var_cas_listeAffectationParametresEffectifs = GGS_L_assignedVariables ::constructor_emptyList () ;
      var_cas_outAllVariablesList = GGS_typeCplusPlusNameList ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_118550 (var_cas_listeAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_118550 = NULL ;
        GGS_typeListeCibles::cEnumerator enumerator_118563 (var_cas_listeCibles, true) ;
        const GGS_typeListeCibles::cElement * operand_118563 = NULL ;
        while (((operand_118550 = enumerator_118550.nextObject ()))
            && ((operand_118563 = enumerator_118563.nextObject ()))) {
          macroValidPointer (operand_118550) ;
          macroValidPointer (operand_118563) ;
          GGS_lstring  var_cas_nomAttributSource = operand_118550->mAttributeName ;
          const GGS_typeCible  temp_118646 = operand_118563->aCible ;
          if (temp_118646.isBuilt ()) {
            temp_118646 (HERE)->method_verifierType (inLexique, operand_118550->mAttributType, var_cas_nomAttributSource, var_cas_listeAffectationParametresEffectifs, var_cas_outAllVariablesList COMMA_SOURCE_FILE_AT_LINE (3151)) ;
          }
        }
      }
    }
  }
  GGS_typeCplusPlusName  var_cas_nullName = GGS_typeNullName ::constructor_new (inLexique, GGS_location (inLexique) COMMA_HERE) ;
  if (var_cas_outAllVariablesList.isBuilt () &&
      var_cas_listeCibles.reader_length ().isBuilt () &&
      var_cas_listeAttributsSemantiques.reader_length ().isBuilt () &&
      var_cas_nullName.isBuilt ()) {
    ::routine_appendJokersIfNeeded (inLexique,  var_cas_outAllVariablesList,  var_cas_listeCibles.reader_length (),  var_cas_listeAttributsSemantiques.reader_length (),  var_cas_nullName COMMA_SOURCE_FILE_AT_LINE (3156)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_input_5F_parameters_5F_list_i22_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_19 = true ;
    while (syntaxRepeat_19) {
      switch (select_semantics_5F_parser_19 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          switch (select_semantics_5F_parser_20 (inLexique)) {
            case 1 : {
              switch (select_semantics_5F_parser_21 (inLexique)) {
                case 1 : {
                  nt_type_5F_parsing_parse (inLexique) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2A_) COMMA_HERE) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unsigned_5F_literal_5F_integer) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2A_) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_19 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_5F_parser_22 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E__2E__2E_) COMMA_HERE) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_i23_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_AC_galgasType  var_cas_targetType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (inLexique, var_cas_nomVarDest, var_cas_targetType, var_cas_nomCppVariableSource COMMA_SOURCE_FILE_AT_LINE (3187)) ;
  GGS_lstringlist  var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_23 = true ;
    while (syntaxRepeat_23) {
      switch (select_semantics_5F_parser_23 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E_) COMMA_HERE) ;
          GGS_lstring  var_cas_structAttributeName ;
          inLexique.assignFromAttribute_tokenString (var_cas_structAttributeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          var_cas_structAttributeList.addAssign_operation (var_cas_structAttributeName) ;
          GGS_typeGalgasStructType  var_cas_structType = GGS_typeGalgasStructType::castFrom (inLexique, var_cas_targetType.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (3196)) ;
          GGS_bool var_cas_found = GGS_bool (false) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_120768 (var_cas_structType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (3198)), true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_120768 = NULL ;
            while (((operand_120768 = enumerator_120768.nextObject ()))
                && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
              macroValidPointer (operand_120768) ;
              var_cas_found = (operand_120768->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3199))).operator_isEqual (var_cas_structAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3199))) ;
              var_cas_targetType = operand_120768->mAttributType ;
            }
          }
          const GGS_bool cond_121109 = (var_cas_found).operator_not () ;
          if (cond_121109.isBuiltAndTrue ()) {
            var_cas_structAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '@")).operator_concat (var_cas_structType.reader_mStructTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (3203)))).operator_concat (GGS_string ("' does not define a '"))).operator_concat (var_cas_structAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (3204)) ;
          }
          } break ;
        default :
          syntaxRepeat_23 = false ;
          break ;
      }
    }
  }
  nt_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_ (inLexique, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inSemanticContext, var_cas_nomCppVariableSource, var_cas_targetType, var_cas_structAttributeList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_i23_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_23 = true ;
    while (syntaxRepeat_23) {
      switch (select_semantics_5F_parser_23 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_23 = false ;
          break ;
      }
    }
  }
  nt_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i24_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_typeCplusPlusName  var_cas_inNomCppVariableSource,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2B__3D_) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  const GGS_AC_galgasType  temp_122656 = var_cas_inTargetType ;
  if (temp_122656.isBuilt ()) {
    temp_122656 (HERE)->method_handleAddAssignOperatorCall (inLexique, GGS_location (inLexique), var_cas_formalParametersList COMMA_SOURCE_FILE_AT_LINE (3242)) ;
  }
  GGS_typeTypesList  var_cas_typeList = GGS_typeTypesList ::constructor_emptyList () ;
  GGS_typeExpressionList  var_cas_expressionList = GGS_typeExpressionList ::constructor_emptyList () ;
  { bool syntaxRepeat_24 = true ;
    while (syntaxRepeat_24) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList.addAssign_operation (var_cas_resultType, GGS_location (inLexique)) ;
        var_cas_expressionList.addAssign_operation (var_cas_expression) ;
      switch (select_semantics_5F_parser_24 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_24 = false ;
          break ;
      }
    }
  }
  const GGS_bool cond_123442 = (var_cas_formalParametersList.reader_length ()).operator_isNotEqual (var_cas_typeList.reader_length ()) ;
  if (cond_123442.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, (((var_cas_typeList.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3264))).operator_concat (GGS_string (" argument(s), while "))).operator_concat (var_cas_formalParametersList.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3264)))).operator_concat (GGS_string (" are needed")) COMMA_SOURCE_FILE_AT_LINE (3265)) ;
  }else if (cond_123442.isBuiltAndFalse ()) {
    {
      GGS_typeListeAttributsSemantiques::cEnumerator enumerator_123475 (var_cas_formalParametersList, true) ;
      const GGS_typeListeAttributsSemantiques::cElement * operand_123475 = NULL ;
      GGS_typeTypesList::cEnumerator enumerator_123485 (var_cas_typeList, true) ;
      const GGS_typeTypesList::cElement * operand_123485 = NULL ;
      while (((operand_123475 = enumerator_123475.nextObject ()))
          && ((operand_123485 = enumerator_123485.nextObject ()))) {
        macroValidPointer (operand_123475) ;
        macroValidPointer (operand_123485) ;
        ::routine_checkAssignmentTypesCompatibility (inLexique,  operand_123475->mAttributType,  operand_123485->mType,  operand_123485->mEndOfExpressionLocation,  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (3267)) ;
      }
    }
  }
  GGS_typeInstruction  var_cas_instruction = GGS_typeAppendInstruction ::constructor_new (inLexique, var_cas_inNomCppVariableSource, var_cas_inStructAttributeList, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i24_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2B__3D_) COMMA_HERE) ;
  { bool syntaxRepeat_24 = true ;
    while (syntaxRepeat_24) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
        nt_expression_parse (inLexique) ;
      switch (select_semantics_5F_parser_24 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_24 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i25_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_typeCplusPlusName  var_cas_inNomCppVariableSource,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3D_) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  const GGS_AC_galgasType  temp_124963 = var_cas_inTargetType ;
  if (temp_124963.isBuilt ()) {
    temp_124963 (HERE)->method_handleMinusAssignOperatorCall (inLexique, GGS_location (inLexique), var_cas_formalParametersList COMMA_SOURCE_FILE_AT_LINE (3300)) ;
  }
  GGS_typeTypesList  var_cas_typeList = GGS_typeTypesList ::constructor_emptyList () ;
  GGS_typeExpressionList  var_cas_expressionList = GGS_typeExpressionList ::constructor_emptyList () ;
  { bool syntaxRepeat_25 = true ;
    while (syntaxRepeat_25) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList.addAssign_operation (var_cas_resultType, GGS_location (inLexique)) ;
        var_cas_expressionList.addAssign_operation (var_cas_expression) ;
      switch (select_semantics_5F_parser_25 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_25 = false ;
          break ;
      }
    }
  }
  const GGS_bool cond_125749 = (var_cas_formalParametersList.reader_length ()).operator_isNotEqual (var_cas_typeList.reader_length ()) ;
  if (cond_125749.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, (((var_cas_typeList.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3322))).operator_concat (GGS_string (" argument(s), while "))).operator_concat (var_cas_formalParametersList.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3322)))).operator_concat (GGS_string (" are needed")) COMMA_SOURCE_FILE_AT_LINE (3323)) ;
  }else if (cond_125749.isBuiltAndFalse ()) {
    {
      GGS_typeListeAttributsSemantiques::cEnumerator enumerator_125782 (var_cas_formalParametersList, true) ;
      const GGS_typeListeAttributsSemantiques::cElement * operand_125782 = NULL ;
      GGS_typeTypesList::cEnumerator enumerator_125792 (var_cas_typeList, true) ;
      const GGS_typeTypesList::cElement * operand_125792 = NULL ;
      while (((operand_125782 = enumerator_125782.nextObject ()))
          && ((operand_125792 = enumerator_125792.nextObject ()))) {
        macroValidPointer (operand_125782) ;
        macroValidPointer (operand_125792) ;
        ::routine_checkAssignmentTypesCompatibility (inLexique,  operand_125782->mAttributType,  operand_125792->mType,  operand_125792->mEndOfExpressionLocation,  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (3325)) ;
      }
    }
  }
  GGS_typeInstruction  var_cas_instruction = GGS_typeRemoveInstruction ::constructor_new (inLexique, var_cas_inNomCppVariableSource, var_cas_inStructAttributeList, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i25_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3D_) COMMA_HERE) ;
  { bool syntaxRepeat_25 = true ;
    while (syntaxRepeat_25) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
        nt_expression_parse (inLexique) ;
      switch (select_semantics_5F_parser_25 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_25 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i26_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */,
                                const GGS_typeCplusPlusName  var_cas_inNomCppVariableSource,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2B__2B_) COMMA_HERE) ;
  const GGS_AC_galgasType  temp_127240 = var_cas_inTargetType ;
  if (temp_127240.isBuilt ()) {
    temp_127240 (HERE)->method_handleIncrementOperatorCall (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3357)) ;
  }
  GGS_typeInstruction  var_cas_instruction = GGS_typeIncrementInstruction ::constructor_new (inLexique, var_cas_inNomCppVariableSource, var_cas_inStructAttributeList, GGS_location (inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i26_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2B__2B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */,
                                const GGS_typeCplusPlusName  var_cas_inNomCppVariableSource,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__2D_) COMMA_HERE) ;
  const GGS_AC_galgasType  temp_128550 = var_cas_inTargetType ;
  if (temp_128550.isBuilt ()) {
    temp_128550 (HERE)->method_handleDecrementOperatorCall (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3383)) ;
  }
  GGS_typeInstruction  var_cas_instruction = GGS_typeDecrementInstruction ::constructor_new (inLexique, var_cas_inNomCppVariableSource, var_cas_inStructAttributeList, GGS_location (inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_5F_and_5F_structure_5F_access_i27_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__2D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'actual_parameters_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_actual_5F_parameters_5F_list_i28_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_L_EXsignature  var_cas_listeTypesParametresFormels,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  GGS_bool automatic_var_129621_0 ;
  nt_parse_5F_parameters_5F_list_ (inLexique, var_cas_listeTypesParametresEffectifs, var_cas_outExpressionList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, automatic_var_129621_0) ;
  ::routine_verifierCompatibiliteArgEffectifsSignature (inLexique,  var_cas_listeTypesParametresFormels,  var_cas_listeTypesParametresEffectifs,  GGS_location (inLexique),  var_cas_ioInstructionList,  var_cas_outExpressionList COMMA_SOURCE_FILE_AT_LINE (3413)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_actual_5F_parameters_5F_list_i28_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_parse_5F_parameters_5F_list_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'parse_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_parameters_5F_list_i29_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_L_actualParametersSignature  &var_cas_listeTypesParametresEffectifs,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_bool &var_cas_outHasInputParameter) {
  var_cas_outExpressionList = GGS_typeExpressionList ::constructor_emptyList () ;
  var_cas_listeTypesParametresEffectifs = GGS_L_actualParametersSignature ::constructor_emptyList () ;
  GGS_stringset  var_cas_exclusiveVariables = GGS_stringset ::constructor_emptySet () ;
  var_cas_outHasInputParameter = GGS_bool (false) ;
  { bool syntaxRepeat_26 = true ;
    while (syntaxRepeat_26) {
      switch (select_semantics_5F_parser_26 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_expressionType ;
          GGS_typeExpression  var_cas_expressionValue ;
          nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expressionValue, var_cas_expressionType) ;
          GGS_EXactualParametersPassingMode var_cas_parameterPassingMode = GGS_EXactualParametersPassingMode::constructor_parameterOut (inLexique COMMA_HERE) ;
          var_cas_listeTypesParametresEffectifs.addAssign_operation (var_cas_expressionType, var_cas_parameterPassingMode) ;
          var_cas_outExpressionList.addAssign_operation (var_cas_expressionValue) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          GGS_EXactualParametersPassingMode var_cas_parameterPassingMode = GGS_EXactualParametersPassingMode::constructor_parameterIn (inLexique COMMA_HERE) ;
          switch (select_semantics_5F_parser_27 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2A_) COMMA_HERE) ;
              var_cas_listeTypesParametresEffectifs.addAssign_operation (GGS_typeGalgas_jokerInParameterList ::constructor_new (inLexique COMMA_HERE), var_cas_parameterPassingMode) ;
              var_cas_outExpressionList.addAssign_operation (GGS_typeJokerInExpression ::constructor_new (inLexique COMMA_HERE)) ;
              } break ;
            case 2 : {
              GGS_luint  var_cas_jokerCountWithLocation ;
              inLexique.assignFromAttribute_uint_33__32_value (var_cas_jokerCountWithLocation) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unsigned_5F_literal_5F_integer) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2A_) COMMA_HERE) ;
              GGS_uint  var_cas_jokerCount = var_cas_jokerCountWithLocation.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (3466)) ;
              GGS_uint _variant_132003 = var_cas_jokerCount.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (3467)) ;
              GGS_bool _condition_132003 (_variant_132003.isBuilt (), true) ;
              while (_condition_132003.isBuiltAndTrue ()) {
                _condition_132003 = (var_cas_jokerCount).operator_strictSup (GGS_uint (0U)) ;
                if (_condition_132003.isBuiltAndTrue ()) {
                  if (_variant_132003.uintValue () == 0) {
                    inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (3472)) ;
                    _condition_132003 = GGS_bool (false) ;
                  }else{
                    _variant_132003.decrement_operation (inLexique COMMA_HERE) ;
                    var_cas_listeTypesParametresEffectifs.addAssign_operation (GGS_typeGalgas_jokerInParameterList ::constructor_new (inLexique COMMA_HERE), var_cas_parameterPassingMode) ;
                    var_cas_outExpressionList.addAssign_operation (GGS_typeJokerInExpression ::constructor_new (inLexique COMMA_HERE)) ;
                    var_cas_jokerCount.decrement_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (3471)) ;
                  }
                }
              }
              } break ;
            case 3 : {
              GGS_AC_galgasType  var_cas_typeArgument ;
              GGS_typeCplusPlusName  var_cas_nomCppArgument ;
              GGS_lstring  var_cas_nomArgument ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              var_cas_ioVariablesMap.modifier_searchForWriteAccess (inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument COMMA_SOURCE_FILE_AT_LINE (3478)) ;
              var_cas_listeTypesParametresEffectifs.addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
              GGS_typeExpression  var_cas_e = GGS_typeVarInExpression ::constructor_new (inLexique, var_cas_nomCppArgument, GGS_lstringlist ::constructor_emptyList () COMMA_HERE) ;
              var_cas_outExpressionList.addAssign_operation (var_cas_e) ;
              const GGS_bool cond_132658 = var_cas_exclusiveVariables.reader_hasKey (var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3482))) ;
              if (cond_132658.isBuiltAndTrue ()) {
                var_cas_nomArgument.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this object is already named as input or output/input effectif argument of current instruction") COMMA_SOURCE_FILE_AT_LINE (3484)) ;
              }else if (cond_132658.isBuiltAndFalse ()) {
                var_cas_exclusiveVariables.addAssign_operation (var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3485))) ;
              }
              var_cas_outHasInputParameter = GGS_bool (true) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21__3F_) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_typeArgument ;
          GGS_typeCplusPlusName  var_cas_nomCppArgument ;
          GGS_lstring  var_cas_nomArgument ;
          inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument COMMA_SOURCE_FILE_AT_LINE (3495)) ;
          GGS_lstringlist  var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList () ;
          { bool syntaxRepeat_28 = true ;
            while (syntaxRepeat_28) {
              switch (select_semantics_5F_parser_28 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E_) COMMA_HERE) ;
                  GGS_lstring  var_cas_structAttributeName ;
                  inLexique.assignFromAttribute_tokenString (var_cas_structAttributeName) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  GGS_typeGalgasStructType  var_cas_structType = GGS_typeGalgasStructType::castFrom (inLexique, var_cas_typeArgument.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (3501)) ;
                  GGS_bool var_cas_found = GGS_bool (false) ;
                  {
                    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_133332 (var_cas_structType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (3503)), true) ;
                    const GGS_typeListeAttributsSemantiques::cElement * operand_133332 = NULL ;
                    while (((operand_133332 = enumerator_133332.nextObject ()))
                        && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
                      macroValidPointer (operand_133332) ;
                      var_cas_found = (operand_133332->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3504))).operator_isEqual (var_cas_structAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3504))) ;
                      var_cas_typeArgument = operand_133332->mAttributType ;
                    }
                  }
                  const GGS_bool cond_133687 = (var_cas_found).operator_not () ;
                  if (cond_133687.isBuiltAndTrue ()) {
                    var_cas_structAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '@")).operator_concat (var_cas_structType.reader_mStructTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (3508)))).operator_concat (GGS_string ("' does not define a '"))).operator_concat (var_cas_structAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (3509)) ;
                  }
                  var_cas_structAttributeList.addAssign_operation (var_cas_structAttributeName) ;
                  } break ;
                default :
                  syntaxRepeat_28 = false ;
                  break ;
              }
            }
          }
          GGS_EXactualParametersPassingMode var_cas_parameterPassingMode = GGS_EXactualParametersPassingMode::constructor_parameterOutIn (inLexique COMMA_HERE) ;
          var_cas_listeTypesParametresEffectifs.addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
          GGS_typeExpression  var_cas_e = GGS_typeVarInExpression ::constructor_new (inLexique, var_cas_nomCppArgument, var_cas_structAttributeList COMMA_HERE) ;
          var_cas_outExpressionList.addAssign_operation (var_cas_e) ;
          const GGS_bool cond_134261 = var_cas_exclusiveVariables.reader_hasKey (var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3516))) ;
          if (cond_134261.isBuiltAndTrue ()) {
            var_cas_nomArgument.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this object is already named as input or output/input effectif argument of current instruction") COMMA_SOURCE_FILE_AT_LINE (3518)) ;
          }else if (cond_134261.isBuiltAndFalse ()) {
            var_cas_exclusiveVariables.addAssign_operation (var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3519))) ;
          }
          } break ;
        default :
          syntaxRepeat_26 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_parameters_5F_list_i29_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_26 = true ;
    while (syntaxRepeat_26) {
      switch (select_semantics_5F_parser_26 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
          nt_expression_parse (inLexique) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
          switch (select_semantics_5F_parser_27 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2A_) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unsigned_5F_literal_5F_integer) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2A_) COMMA_HERE) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21__3F_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          { bool syntaxRepeat_28 = true ;
            while (syntaxRepeat_28) {
              switch (select_semantics_5F_parser_28 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E_) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_28 = false ;
                  break ;
              }
            }
          }
          } break ;
        default :
          syntaxRepeat_26 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'semantic_instructions_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instructions_5F_list_i30_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  var_cas_ioVariablesMap.prologue_verifyVariableUsing (inLexique COMMA_SOURCE_FILE_AT_LINE (3536)) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_verifyVariableUsing (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3536)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instructions_5F_list_i30_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i31_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extract) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_typeVarSource ;
  GGS_typeCplusPlusName  var_cas_sourceVarCppName ;
  GGS_lstring  var_cas_nomVarSource ;
  nt_read_5F_access_ (inLexique, var_cas_nomVarSource, var_cas_sourceVarCppName, var_cas_typeVarSource, var_cas_ioVariablesMap) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_typeVarSource.getPtr (), true, var_cas_nomVarSource COMMA_SOURCE_FILE_AT_LINE (3569)) ;
  GGS_lstring  var_cas_nomTypeSource = var_cas_classType.reader_mClassTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (3570)) ;
  GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (3571)) ;
  nt_extract_5F_instruction_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceVarCppName, var_cas_nomTypeSource, var_cas_tableMessagesAbstraits, var_cas_ioInstructionList, var_cas_inSemanticContext) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i31_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extract) COMMA_HERE) ;
  nt_read_5F_access_parse (inLexique) ;
  nt_extract_5F_instruction_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_extract_5F_instruction_i32_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("simple extract instruction is obsolete: use cast expression instead") COMMA_SOURCE_FILE_AT_LINE (3602)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_nomClasse ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomClasse) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  temp_137713 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_137713.isBuilt ()) {
    temp_137713 (HERE)->method_searchKey (inLexique, var_cas_nomClasse, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3609)) ;
  }
  GGS_AC_galgasType  var_cas_leType = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_nomClasse COMMA_SOURCE_FILE_AT_LINE (3610)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (3610)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_leType.getPtr (), true, var_cas_nomClasse COMMA_SOURCE_FILE_AT_LINE (3611)) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques = var_cas_classType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (3612)) ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (3613)) ;
  const GGS_bool cond_138323 = (var_cas_tableDesClassesAncetres.reader_hasKey (var_cas_nomTypeSource.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3615)))).operator_not () ;
  if (cond_138323.isBuiltAndTrue ()) {
    var_cas_nomClasse.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("This class does not inherit from '@")).operator_concat (var_cas_nomTypeSource.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3616)))).operator_concat (GGS_string ("'")) COMMA_SOURCE_FILE_AT_LINE (3617)) ;
  }
  GGS_L_assignedVariables  var_cas_listeAffectationParametresEffectifs ;
  GGS_typeCplusPlusNameList  var_cas_allVariablesList ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  nt_input_5F_parameters_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeAffectationParametresEffectifs, var_cas_allVariablesList, var_cas_listeAttributsSemantiques, var_cas_ioVariablesMap, var_cas_ioInstructionList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  const GGS_AC_galgasType  temp_139156 = var_cas_errorExpressionType ;
  if (temp_139156.isBuilt ()) {
    temp_139156 (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (inLexique COMMA_SOURCE_FILE_AT_LINE (3644)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_lstring  var_cas_messageName ;
  inLexique.assignFromAttribute_tokenString (var_cas_messageName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  const GGS_typeClassInheritedMessagesMap  temp_139259 = var_cas_tableMessagesAbstraits ;
  if (temp_139259.isBuilt ()) {
    temp_139259 (HERE)->method_searchKey (inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (3648)) ;
  }
  var_cas_ioInstructionList.addAssign_operation (GGS_typeSimpleExtractInstruction ::constructor_new (inLexique, var_cas_inSourceVarCppName, var_cas_nomClasse, var_cas_listeAffectationParametresEffectifs, var_cas_errorExpression, var_cas_messageName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_extract_5F_instruction_i32_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  nt_input_5F_parameters_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_extract_5F_instruction_i33_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  /* var_cas_tableMessagesAbstraits */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_typeStructuredExtractCasesList  var_cas_casesList = GGS_typeStructuredExtractCasesList ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("structured extract instruction is obsolete: use cast instruction instead") COMMA_SOURCE_FILE_AT_LINE (3674)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (3676)) ;
  { bool syntaxRepeat_29 = true ;
    while (syntaxRepeat_29) {
        var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (3678)) ;
        GGS_location  var_cas_indicatif1 = GGS_location (inLexique) ;
        GGS_lstring  var_cas_nomType1 ;
        inLexique.assignFromAttribute_tokenString (var_cas_nomType1) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        const GGS_M_semanticsEntitiesForUse  temp_140937 = var_cas_ioComponentSemanticsEntitiesMap ;
        if (temp_140937.isBuilt ()) {
          temp_140937 (HERE)->method_searchKey (inLexique, var_cas_nomType1, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3685)) ;
        }
        GGS_AC_galgasType  var_cas_definitionClasse1 = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_nomType1 COMMA_SOURCE_FILE_AT_LINE (3686)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (3686)) ;
        GGS_typeGalgasClassType  var_cas_classType1 = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_definitionClasse1.getPtr (), true, var_cas_nomType1 COMMA_SOURCE_FILE_AT_LINE (3688)) ;
        GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 = var_cas_classType1.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (3689)) ;
        GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 = var_cas_classType1.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (3690)) ;
        const GGS_bool cond_141696 = (var_cas_tableDesClassesAncetresType1.reader_hasKey (var_cas_nomTypeSource.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3692)))).operator_not () ;
        if (cond_141696.isBuiltAndTrue ()) {
          var_cas_nomType1.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("This class does not inherit from '@")).operator_concat (var_cas_nomTypeSource.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3693)))).operator_concat (GGS_string ("'")) COMMA_SOURCE_FILE_AT_LINE (3694)) ;
        }
        GGS_bool var_cas_noUsedParameter ;
        nt_parse_5F_effective_5F_input_5F_parameters_5F_list_ (inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_indicatif1, GGS_localConstantBuildStyleEnum::constructor_listStyle (inLexique COMMA_HERE), GGS_bool (false), var_cas_noUsedParameter) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_instructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
        nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inSemanticContext) ;
        var_cas_casesList.addAssign_operation (var_cas_nomType1, var_cas_indicatif1, var_cas_instructionsList, var_cas_noUsedParameter) ;
        var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3678)) ;
      switch (select_semantics_5F_parser_29 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_29 = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (3722)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_elseInstructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseInstructionList, var_cas_inSemanticContext) ;
  var_cas_ioInstructionList.addAssign_operation (GGS_typeStructuredExtractInstructionWithElse ::constructor_new (inLexique, var_cas_inSourceVarCppName, var_cas_casesList, var_cas_elseInstructionList COMMA_HERE)) ;
  var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3722)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (3676)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extract) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_extract_5F_instruction_i33_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
  { bool syntaxRepeat_29 = true ;
    while (syntaxRepeat_29) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
        nt_parse_5F_effective_5F_input_5F_parameters_5F_list_parse (inLexique) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
        nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
      switch (select_semantics_5F_parser_29 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_29 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extract) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i34_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_cast) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceExpressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
  GGS_typeGalgasClassType  var_cas_sourceClassType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_sourceExpressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3769)) ;
  GGS_lstring  var_cas_sourceExpressionTypeName = var_cas_sourceClassType.reader_mClassTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (3770)) ;
  GGS_string var_cas_sourceClassMessage = var_cas_sourceClassType.reader_mClassMessage (inLexique COMMA_SOURCE_FILE_AT_LINE (3771)) ;
  GGS_typeStructuredCastBranchList  var_cas_branchList = GGS_typeStructuredCastBranchList ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (3775)) ;
  { bool syntaxRepeat_30 = true ;
    while (syntaxRepeat_30) {
        var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (3777)) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
        GGS_bool var_cas_checkForKindOfClass ;
        switch (select_semantics_5F_parser_31 (inLexique)) {
          case 1 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E__3D_) COMMA_HERE) ;
            var_cas_checkForKindOfClass = GGS_bool (true) ;
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3D__3D_) COMMA_HERE) ;
            var_cas_checkForKindOfClass = GGS_bool (false) ;
            } break ;
          default :
            break ;
        }
        GGS_lstring  var_cas_castedTypeName ;
        inLexique.assignFromAttribute_tokenString (var_cas_castedTypeName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        const GGS_M_semanticsEntitiesForUse  temp_145035 = var_cas_ioComponentSemanticsEntitiesMap ;
        if (temp_145035.isBuilt ()) {
          temp_145035 (HERE)->method_searchKey (inLexique, var_cas_castedTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3791)) ;
        }
        GGS_AC_galgasType  var_cas_typeDefinition = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_castedTypeName COMMA_SOURCE_FILE_AT_LINE (3792)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (3792)) ;
        GGS_typeSuperClassesMap  var_cas_superClassMap = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_typeDefinition.getPtr (), true, var_cas_castedTypeName COMMA_SOURCE_FILE_AT_LINE (3795)).reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (3795)) ;
        GGS_string var_cas_sourceExpressionTypeNameString = var_cas_sourceExpressionTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3797)) ;
        const GGS_bool cond_145846 = (var_cas_checkForKindOfClass).operator_not () ;
        if (cond_145846.isBuiltAndTrue ()) {
          const GGS_bool cond_145827 = ((var_cas_castedTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3799))).operator_isNotEqual (var_cas_sourceExpressionTypeNameString)).operator_and ((var_cas_superClassMap.reader_hasKey (var_cas_sourceExpressionTypeNameString)).operator_not ()) ;
          if (cond_145827.isBuiltAndTrue ()) {
            var_cas_castedTypeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("This class is not '@")).operator_concat (var_cas_sourceExpressionTypeNameString)).operator_concat (GGS_string ("' and does inherit from it")) COMMA_SOURCE_FILE_AT_LINE (3801)) ;
          }
        }else if (cond_145846.isBuiltAndFalse ()) {
          const GGS_bool cond_146034 = (var_cas_superClassMap.reader_hasKey (var_cas_sourceExpressionTypeNameString)).operator_not () ;
          if (cond_146034.isBuiltAndTrue ()) {
            var_cas_castedTypeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("This class does not inherit from '@")).operator_concat (var_cas_sourceExpressionTypeNameString)).operator_concat (GGS_string ("'")) COMMA_SOURCE_FILE_AT_LINE (3804)) ;
          }
        }
        GGS_typeCplusPlusNameList  var_cas_localConstantCppNameList = GGS_typeCplusPlusNameList ::constructor_emptyList () ;
        switch (select_semantics_5F_parser_32 (inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            GGS_lstring  var_cas_localConstantName ;
            inLexique.assignFromAttribute_tokenString (var_cas_localConstantName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_localConstantCppName = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_localConstantName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (3811)), var_cas_localConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3811)) COMMA_HERE) ;
            var_cas_localConstantCppNameList.addAssign_operation (var_cas_localConstantCppName) ;
            var_cas_ioVariablesMap.modifier_insertConstInArgument (inLexique, var_cas_localConstantName, var_cas_typeDefinition, var_cas_localConstantCppName COMMA_SOURCE_FILE_AT_LINE (3813)) ;
            } break ;
          case 3 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
            GGS_lstring  var_cas_localConstantName ;
            inLexique.assignFromAttribute_tokenString (var_cas_localConstantName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_localConstantCppName = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_localConstantName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (3818)), var_cas_localConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3818)) COMMA_HERE) ;
            var_cas_localConstantCppNameList.addAssign_operation (var_cas_localConstantCppName) ;
            var_cas_ioVariablesMap.modifier_insertUnusedConstInArgument (inLexique, var_cas_localConstantName, var_cas_typeDefinition, var_cas_localConstantCppName COMMA_SOURCE_FILE_AT_LINE (3820)) ;
            } break ;
          default :
            break ;
        }
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_instructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
        nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inSemanticContext) ;
        var_cas_branchList.addAssign_operation (var_cas_castedTypeName, var_cas_checkForKindOfClass, var_cas_localConstantCppNameList, var_cas_instructionsList) ;
        var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3777)) ;
      switch (select_semantics_5F_parser_30 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_30 = false ;
          break ;
      }
    }
  }
  GGS_AC_elseOrDefaultForCastInstruction  var_cas_elseOrDefault ;
  var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (3838)) ;
  switch (select_semantics_5F_parser_33 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_default) COMMA_HERE) ;
      const GGS_bool cond_147887 = (var_cas_sourceClassMessage.reader_length ()).operator_isEqual (GGS_uint (0U)) ;
      if (cond_147887.isBuiltAndTrue ()) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("for using the 'default' construct, the static class of source expression (@")).operator_concat (var_cas_sourceExpressionTypeName)).operator_concat (GGS_string (") should define a class message")) COMMA_SOURCE_FILE_AT_LINE (3844)) ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
      GGS_typeExpression  var_cas_errorLocationExpression ;
      GGS_AC_galgasType  var_cas_errorLocationExpressionType ;
      nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorLocationExpression, var_cas_errorLocationExpressionType) ;
      const GGS_AC_galgasType  temp_148384 = var_cas_errorLocationExpressionType ;
      if (temp_148384.isBuilt ()) {
        temp_148384 (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (inLexique COMMA_SOURCE_FILE_AT_LINE (3857)) ;
      }
      var_cas_elseOrDefault = GGS_C_defaultForCastInstruction ::constructor_new (inLexique, var_cas_errorLocationExpression, GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_elseBranchInstructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseBranchInstructionsList, var_cas_inSemanticContext) ;
      var_cas_elseOrDefault = GGS_C_elseForCastInstruction ::constructor_new (inLexique, var_cas_elseBranchInstructionsList COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (3838)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (3775)) ;
  GGS_typeInstruction  var_cas_instruction = GGS_typeStructuredCastInstruction ::constructor_new (inLexique, GGS_location (inLexique), var_cas_sourceExpression, var_cas_sourceExpressionTypeName, var_cas_branchList, var_cas_elseOrDefault COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_cast) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i34_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_cast) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  { bool syntaxRepeat_30 = true ;
    while (syntaxRepeat_30) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
        switch (select_semantics_5F_parser_31 (inLexique)) {
          case 1 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E__3D_) COMMA_HERE) ;
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3D__3D_) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
        switch (select_semantics_5F_parser_32 (inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            } break ;
          case 3 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
        nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
      switch (select_semantics_5F_parser_30 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_30 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_5F_parser_33 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_default) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
      nt_expression_parse (inLexique) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_cast) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i35_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_AC_galgasType  var_cas_definitionType ;
  GGS_lstring  var_cas_typeName ;
  nt_type_5F_parsing_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
  GGS_lstring  var_cas_targetVarName ;
  inLexique.assignFromAttribute_tokenString (var_cas_targetVarName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_nomCppVariable = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_targetVarName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (3915)), var_cas_targetVarName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (3915)) COMMA_HERE) ;
  var_cas_ioVariablesMap.modifier_insertLocalVariable (inLexique, var_cas_targetVarName, var_cas_definitionType, var_cas_nomCppVariable COMMA_SOURCE_FILE_AT_LINE (3916)) ;
  nt_optional_5F_assignment_ (inLexique, var_cas_typeName, var_cas_targetVarName, var_cas_nomCppVariable, var_cas_definitionType, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i35_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_type_5F_parsing_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_optional_5F_assignment_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i36_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_log) COMMA_HERE) ;
  { bool syntaxRepeat_34 = true ;
    while (syntaxRepeat_34) {
        switch (select_semantics_5F_parser_35 (inLexique)) {
          case 1 : {
            GGS_lstring  var_cas_galgasVariableName ;
            inLexique.assignFromAttribute_tokenString (var_cas_galgasVariableName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_nomCppVar ;
            GGS_AC_galgasType  automatic_var_151729_0 ;
            var_cas_ioVariablesMap.modifier_searchForReadOnlyAccess (inLexique, var_cas_galgasVariableName, automatic_var_151729_0, var_cas_nomCppVar COMMA_SOURCE_FILE_AT_LINE (3952)) ;
            var_cas_ioInstructionList.addAssign_operation (GGS_typeLogInstruction ::constructor_new (inLexique, var_cas_galgasVariableName, GGS_typeVarInExpression ::constructor_new (inLexique, var_cas_nomCppVar, GGS_lstringlist ::constructor_emptyList () COMMA_HERE) COMMA_HERE)) ;
            } break ;
          case 2 : {
            GGS_lstring  var_cas_logMessage ;
            inLexique.assignFromAttribute_tokenString (var_cas_logMessage) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
            GGS_typeExpression  var_cas_logExpression ;
            GGS_AC_galgasType  automatic_var_152191_0 ;
            nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_logExpression, automatic_var_152191_0) ;
            var_cas_ioInstructionList.addAssign_operation (GGS_typeLogInstruction ::constructor_new (inLexique, var_cas_logMessage, var_cas_logExpression COMMA_HERE)) ;
            } break ;
          default :
            break ;
        }
      switch (select_semantics_5F_parser_34 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_34 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i36_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_log) COMMA_HERE) ;
  { bool syntaxRepeat_34 = true ;
    while (syntaxRepeat_34) {
        switch (select_semantics_5F_parser_35 (inLexique)) {
          case 1 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
            nt_expression_parse (inLexique) ;
            } break ;
          default :
            break ;
        }
      switch (select_semantics_5F_parser_34 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_34 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i37_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_drop) COMMA_HERE) ;
  { bool syntaxRepeat_36 = true ;
    while (syntaxRepeat_36) {
        GGS_lstring  var_cas_nom ;
        inLexique.assignFromAttribute_tokenString (var_cas_nom) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
        GGS_typeCplusPlusName  var_cas_nomCppVar ;
        GGS_AC_galgasType  automatic_var_153262_0 ;
        var_cas_ioVariablesMap.modifier_searchForDestructiveReadAccess (inLexique, var_cas_nom, automatic_var_153262_0, var_cas_nomCppVar COMMA_SOURCE_FILE_AT_LINE (3999)) ;
        GGS_typeInstruction  var_cas_instruction = GGS_typeDropInstruction ::constructor_new (inLexique, var_cas_nomCppVar COMMA_HERE) ;
        var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
      switch (select_semantics_5F_parser_36 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_36 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i37_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_drop) COMMA_HERE) ;
  { bool syntaxRepeat_36 = true ;
    while (syntaxRepeat_36) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      switch (select_semantics_5F_parser_36 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_36 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_i38_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_L_EXsignature  var_cas_signatureRoutine ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  temp_154451 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_154451.isBuilt ()) {
    temp_154451 (HERE)->method_searchKey (inLexique, var_cas_nomVarDest, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (4027)) ;
  }
  GGS_bool var_cas_isExternActionCall ;
  { const GGS_AC_semanticsEntity _var_154923 = var_cas_entite ; // CAST instruction
    if (_var_154923.getPtr () != NULL) {
      macroValidPointer (_var_154923.getPtr ()) ;
      if (dynamic_cast <cPtr_typeEntiteRoutine *> (_var_154923.getPtr ()) != NULL) {
        const GGS_typeEntiteRoutine var_cas_r (_var_154923.getPtr ()) ;
        var_cas_signatureRoutine = var_cas_r.reader_aListeArgumentsFormels (inLexique COMMA_SOURCE_FILE_AT_LINE (4031)) ;
        var_cas_isExternActionCall = GGS_bool (false) ;
      }else if (dynamic_cast <cPtr_typeEntiteRoutineExterne *> (_var_154923.getPtr ()) != NULL) {
        const GGS_typeEntiteRoutineExterne var_cas_ae (_var_154923.getPtr ()) ;
        var_cas_signatureRoutine = var_cas_ae.reader_aSignature (inLexique COMMA_SOURCE_FILE_AT_LINE (4034)) ;
        var_cas_isExternActionCall = GGS_bool (true) ;
      }else{
        var_cas_nomVarDest.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("'")).operator_concat (var_cas_nomVarDest.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4038)))).operator_concat (GGS_string ("' should name a routine or an extern routine")) COMMA_SOURCE_FILE_AT_LINE (4041)) ;
        var_cas_signatureRoutine.drop () ;
        var_cas_isExternActionCall.drop () ;
      }
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_5F_parameters_5F_list_ (inLexique, var_cas_signatureRoutine, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
  GGS_typeInstruction  var_cas_instruction = GGS_typeRoutineCallInstruction ::constructor_new (inLexique, var_cas_nomVarDest, var_cas_expressionsList, var_cas_signatureRoutine, var_cas_isExternActionCall COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_instruction_5F_beginning_5F_with_5F_identifier_i38_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_actual_5F_parameters_5F_list_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i39_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  switch (select_semantics_5F_parser_37 (inLexique)) {
    case 1 : {
      GGS_typeExpression  var_cas_expression ;
      GGS_AC_galgasType  var_cas_expressionType ;
      nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expression, var_cas_expressionType) ;
      GGS_lstring  var_cas_methodName ;
      inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      GGS_string var_cas_categoryMethodClassBaseName ;
      const GGS_AC_galgasType  temp_157255 = var_cas_expressionType ;
      if (temp_157255.isBuilt ()) {
        temp_157255 (HERE)->method_handleMethodInstructionCall (inLexique, var_cas_methodName, var_cas_inSemanticContext.reader_mCategoryMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (4105)), var_cas_methodSignature, var_cas_categoryMethodClassBaseName COMMA_SOURCE_FILE_AT_LINE (4103)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_5F_parameters_5F_list_ (inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeMethodCallInstruction ::constructor_new (inLexique, var_cas_expressionType, var_cas_expression, var_cas_methodName, var_cas_categoryMethodClassBaseName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21__3F_) COMMA_HERE) ;
      GGS_lstring  var_cas_modifiedObjectName ;
      inLexique.assignFromAttribute_tokenString (var_cas_modifiedObjectName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_variableType ;
      GGS_typeCplusPlusName  var_cas_cppVariableName ;
      var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (inLexique, var_cas_modifiedObjectName, var_cas_variableType, var_cas_cppVariableName COMMA_SOURCE_FILE_AT_LINE (4134)) ;
      GGS_lstringlist  var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList () ;
      { bool syntaxRepeat_38 = true ;
        while (syntaxRepeat_38) {
          switch (select_semantics_5F_parser_38 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E_) COMMA_HERE) ;
              GGS_lstring  var_cas_structAttributeName ;
              inLexique.assignFromAttribute_tokenString (var_cas_structAttributeName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              var_cas_structAttributeList.addAssign_operation (var_cas_structAttributeName) ;
              GGS_typeGalgasStructType  var_cas_structType = GGS_typeGalgasStructType::castFrom (inLexique, var_cas_variableType.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (4143)) ;
              GGS_bool var_cas_found = GGS_bool (false) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_158575 (var_cas_structType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (4145)), true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_158575 = NULL ;
                while (((operand_158575 = enumerator_158575.nextObject ()))
                    && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
                  macroValidPointer (operand_158575) ;
                  var_cas_found = (operand_158575->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4146))).operator_isEqual (var_cas_structAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4146))) ;
                  var_cas_variableType = operand_158575->mAttributType ;
                }
              }
              const GGS_bool cond_158930 = (var_cas_found).operator_not () ;
              if (cond_158930.isBuiltAndTrue ()) {
                var_cas_structAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '@")).operator_concat (var_cas_structType.reader_mStructTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (4150)))).operator_concat (GGS_string ("' does not define a '"))).operator_concat (var_cas_structAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (4151)) ;
              }
              } break ;
            default :
              syntaxRepeat_38 = false ;
              break ;
          }
        }
      }
      GGS_lstring  var_cas_modifierName ;
      inLexique.assignFromAttribute_tokenString (var_cas_modifierName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      const GGS_AC_galgasType  temp_159113 = var_cas_variableType ;
      if (temp_159113.isBuilt ()) {
        temp_159113 (HERE)->method_handleModifierCall (inLexique, var_cas_modifierName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (4157)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_5F_parameters_5F_list_ (inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeModifierCallInstruction ::constructor_new (inLexique, var_cas_cppVariableName, var_cas_structAttributeList, var_cas_modifierName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    case 3 : {
      GGS_lstring  var_cas_typeName ;
      inLexique.assignFromAttribute_tokenString (var_cas_typeName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
      GGS_lstring  var_cas_typeMethodName ;
      inLexique.assignFromAttribute_tokenString (var_cas_typeMethodName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_typeMethodSignature ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      const GGS_M_semanticsEntitiesForUse  temp_159909 = var_cas_ioComponentSemanticsEntitiesMap ;
      if (temp_159909.isBuilt ()) {
        temp_159909 (HERE)->method_searchKey (inLexique, var_cas_typeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (4179)) ;
      }
      GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_typeName COMMA_SOURCE_FILE_AT_LINE (4180)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (4180)) ;
      const GGS_AC_galgasType  temp_160064 = var_cas_type ;
      if (temp_160064.isBuilt ()) {
        temp_160064 (HERE)->method_handleClassMethodCall (inLexique, var_cas_typeMethodName, var_cas_typeMethodSignature COMMA_SOURCE_FILE_AT_LINE (4181)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_5F_parameters_5F_list_ (inLexique, var_cas_typeMethodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeCallOfTypeMethodInstruction ::constructor_new (inLexique, var_cas_typeName, var_cas_typeMethodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i39_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
  switch (select_semantics_5F_parser_37 (inLexique)) {
    case 1 : {
      nt_expression_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      nt_actual_5F_parameters_5F_list_parse (inLexique) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21__3F_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      { bool syntaxRepeat_38 = true ;
        while (syntaxRepeat_38) {
          switch (select_semantics_5F_parser_38 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_38 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      nt_actual_5F_parameters_5F_list_parse (inLexique) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      nt_actual_5F_parameters_5F_list_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i40_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_const) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_targetVarType ;
  GGS_lstring  var_cas_targetTypeName ;
  nt_type_5F_parsing_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_targetVarType, var_cas_targetTypeName) ;
  GGS_lstring  var_cas_targetVarName ;
  inLexique.assignFromAttribute_tokenString (var_cas_targetVarName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  switch (select_semantics_5F_parser_39 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_sourceExpressionType ;
      nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
      ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_targetVarType,  var_cas_sourceExpressionType,  GGS_location (inLexique),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (4249)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
      GGS_lstring  var_cas_constructorName ;
      inLexique.assignFromAttribute_tokenString (var_cas_constructorName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
      GGS_bool var_cas_hasLexiqueAndLocationArguments ;
      GGS_AC_galgasType  var_cas_returnedType ;
      const GGS_AC_galgasType  temp_162583 = var_cas_targetVarType ;
      if (temp_162583.isBuilt ()) {
        temp_162583 (HERE)->method_handleConstructorInvocation (inLexique, var_cas_constructorName, var_cas_listeAttributsSemantiques, var_cas_hasLexiqueAndLocationArguments, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (4259)) ;
      }
      const GGS_bool cond_162938 = (var_cas_targetVarType).operator_isNotEqual (var_cas_returnedType) ;
      if (cond_162938.isBuiltAndTrue ()) {
        GGS_string var_cas_typeName ;
        const GGS_AC_galgasType  temp_162825 = var_cas_returnedType ;
        if (temp_162825.isBuilt ()) {
          temp_162825 (HERE)->method_getTypeName (inLexique, var_cas_typeName COMMA_SOURCE_FILE_AT_LINE (4262)) ;
        }
        var_cas_constructorName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this constructor returns an other type: '@")).operator_concat (var_cas_typeName)).operator_concat (GGS_string ("'")) COMMA_SOURCE_FILE_AT_LINE (4264)) ;
      }
      GGS_typeExpressionList  var_cas_expressionList ;
      nt_output_5F_expression_5F_list_ (inLexique, var_cas_expressionList, var_cas_listeAttributsSemantiques, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
      var_cas_sourceExpression = GGS_typeConstructorExpression ::constructor_new (inLexique, var_cas_targetVarType, var_cas_constructorName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4279)), var_cas_hasLexiqueAndLocationArguments, var_cas_expressionList COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_targetVarCppName = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_targetVarName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (4286)), var_cas_targetVarName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4286)) COMMA_HERE) ;
  var_cas_ioVariablesMap.modifier_insertConstInArgument (inLexique, var_cas_targetVarName, var_cas_targetVarType, var_cas_targetVarCppName COMMA_SOURCE_FILE_AT_LINE (4287)) ;
  var_cas_ioInstructionList.addAssign_operation (GGS_C_constantDeclarationInstruction ::constructor_new (inLexique, var_cas_targetVarType, var_cas_targetVarCppName, var_cas_sourceExpression COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i40_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_const) COMMA_HERE) ;
  nt_type_5F_parsing_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  switch (select_semantics_5F_parser_39 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
      nt_expression_parse (inLexique) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      nt_output_5F_expression_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i41_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_lstring  var_cas_nomVarDest ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomVarDest) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_instruction_5F_beginning_5F_with_5F_identifier_ (inLexique, var_cas_nomVarDest, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inSemanticContext) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i41_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_instruction_5F_beginning_5F_with_5F_identifier_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i42_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  nt_warning_5F_instruction_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_ioInstructionList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i42_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_warning_5F_instruction_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'warning_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_warning_5F_instruction_i43_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_warning) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  const GGS_AC_galgasType  temp_166572 = var_cas_errorExpressionType ;
  if (temp_166572.isBuilt ()) {
    temp_166572 (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (inLexique COMMA_SOURCE_FILE_AT_LINE (4368)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_warningMessageExpression ;
  GGS_AC_galgasType  var_cas_warningMessageExpressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_warningMessageExpression, var_cas_warningMessageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs = GGS_typeGalgas_string::castFrom (inLexique, var_cas_warningMessageExpressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4382)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeWarningInstruction ::constructor_new (inLexique, var_cas_errorExpression, var_cas_warningMessageExpression, GGS_location (inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_warning_5F_instruction_i43_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_warning) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i44_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  nt_error_5F_instruction_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_ioInstructionList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i44_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_error_5F_instruction_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'error_instruction'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_error_5F_instruction_i45_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorLocationExpression ;
  GGS_AC_galgasType  var_cas_errorLocationExpressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorLocationExpression, var_cas_errorLocationExpressionType) ;
  const GGS_AC_galgasType  temp_168946 = var_cas_errorLocationExpressionType ;
  if (temp_168946.isBuilt ()) {
    temp_168946 (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (inLexique COMMA_SOURCE_FILE_AT_LINE (4434)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorMessageExpression ;
  GGS_AC_galgasType  var_cas_errorMessageExpressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorMessageExpression, var_cas_errorMessageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs = GGS_typeGalgas_string::castFrom (inLexique, var_cas_errorMessageExpressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4448)) ;
  GGS_varToDropList  var_cas_variablesToDrop = GGS_varToDropList ::constructor_emptyList () ;
  switch (select_semantics_5F_parser_40 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
      { bool syntaxRepeat_41 = true ;
        while (syntaxRepeat_41) {
            GGS_lstring  var_cas_nomVariable ;
            inLexique.assignFromAttribute_tokenString (var_cas_nomVariable) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_varCppName ;
            GGS_AC_galgasType  automatic_var_169699_0 ;
            var_cas_ioVariablesMap.modifier_searchForWriteAccess (inLexique, var_cas_nomVariable, automatic_var_169699_0, var_cas_varCppName COMMA_SOURCE_FILE_AT_LINE (4458)) ;
            var_cas_variablesToDrop.addAssign_operation (var_cas_varCppName) ;
          switch (select_semantics_5F_parser_41 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_41 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction = GGS_typeErrorInstruction ::constructor_new (inLexique, var_cas_errorLocationExpression, var_cas_errorMessageExpression, GGS_location (inLexique), var_cas_variablesToDrop COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_error_5F_instruction_i45_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  switch (select_semantics_5F_parser_40 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
      { bool syntaxRepeat_41 = true ;
        while (syntaxRepeat_41) {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          switch (select_semantics_5F_parser_41 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_41 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i46_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
  GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_typeExpression  var_cas_messageExpression ;
  GGS_AC_galgasType  var_cas_messageExpressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_messageExpression, var_cas_messageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs = GGS_typeGalgas_string::castFrom (inLexique, var_cas_messageExpressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4503)) ;
  GGS_typeInstruction  var_cas_instruction = GGS_typeMessageInstruction ::constructor_new (inLexique, var_cas_messageExpression, var_cas_instructionLocation COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i46_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i47_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_if) COMMA_HERE) ;
  GGS_L_expression_instructionsList_list  var_cas_listeBranchesTest = GGS_L_expression_instructionsList_list ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (4526)) ;
  { bool syntaxRepeat_42 = true ;
    while (syntaxRepeat_42) {
        var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (4528)) ;
        GGS_typeExpression  var_cas_testBranche ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_testBranche, var_cas_resultType) ;
        GGS_typeGalgas_bool  var_cas_b = GGS_typeGalgas_bool::castFrom (inLexique, var_cas_resultType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4539)) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_then) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_listeInstructionsBrancheTest = GGS_typeInstructionList ::constructor_emptyList () ;
        nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheTest, var_cas_inSemanticContext) ;
        var_cas_listeBranchesTest.addAssign_operation (var_cas_testBranche, var_cas_listeInstructionsBrancheTest, GGS_location (inLexique)) ;
        var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4528)) ;
      switch (select_semantics_5F_parser_42 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_elsif) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_42 = false ;
          break ;
      }
    }
  }
  GGS_typeInstructionList  var_cas_listeInstructionsBrancheAutre = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (4556)) ;
  switch (select_semantics_5F_parser_43 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheAutre, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4556)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_if) COMMA_HERE) ;
  var_cas_ioVariablesMap.epilogue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (4526)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_if_instruction ::constructor_new (inLexique, var_cas_listeBranchesTest, var_cas_listeInstructionsBrancheAutre COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i47_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_if) COMMA_HERE) ;
  { bool syntaxRepeat_42 = true ;
    while (syntaxRepeat_42) {
        nt_expression_parse (inLexique) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_then) COMMA_HERE) ;
        nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      switch (select_semantics_5F_parser_42 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_elsif) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_42 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_5F_parser_43 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_if) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i48_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_switch) COMMA_HERE) ;
  GGS_typeExpression  var_cas_switchExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_switchExpression, var_cas_resultType) ;
  GGS_typeGalgas_enum  var_cas_e = GGS_typeGalgas_enum::castFrom (inLexique, var_cas_resultType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4608)) ;
  GGS_lstring  var_cas_enumTypeName = var_cas_e.reader_mEnumTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (4609)) ;
  GGS_enumConstantMap  var_cas_enumConstantesMap = var_cas_e.reader_mEnumConstantesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (4610)) ;
  GGS_stringset  var_cas_allBranchConstantSet = GGS_stringset ::constructor_emptySet () ;
  GGS_L_switchBranchlist  var_cas_switchBranchlist = GGS_L_switchBranchlist ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (4614)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
  { bool syntaxRepeat_44 = true ;
    while (syntaxRepeat_44) {
        GGS_stringset  var_cas_branchConstantSet = GGS_stringset ::constructor_emptySet () ;
        { bool syntaxRepeat_45 = true ;
          while (syntaxRepeat_45) {
              GGS_lstring  var_cas_enumConstantName ;
              inLexique.assignFromAttribute_tokenString (var_cas_enumConstantName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              var_cas_branchConstantSet.addAssign_operation (var_cas_enumConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4622))) ;
              GGS_uint  automatic_var_175636_0 ;
              const GGS_enumConstantMap  temp_175614 = var_cas_enumConstantesMap ;
              if (temp_175614.isBuilt ()) {
                temp_175614 (HERE)->method_searchKey (inLexique, var_cas_enumConstantName, automatic_var_175636_0 COMMA_SOURCE_FILE_AT_LINE (4623)) ;
              }
              const GGS_bool cond_175821 = var_cas_allBranchConstantSet.reader_hasKey (var_cas_enumConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4624))) ;
              if (cond_175821.isBuiltAndTrue ()) {
                var_cas_enumConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this constant is already used in current switch instruction") COMMA_SOURCE_FILE_AT_LINE (4626)) ;
              }
            switch (select_semantics_5F_parser_45 (inLexique)) {
              case 2 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_45 = false ;
                break ;
            }
          }
        }
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
        var_cas_allBranchConstantSet = (var_cas_allBranchConstantSet).operator_or (var_cas_branchConstantSet) ;
        var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (4632)) ;
        GGS_typeInstructionList  var_cas_branchInstructionList = GGS_typeInstructionList ::constructor_emptyList () ;
        nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_branchInstructionList, var_cas_inSemanticContext) ;
        var_cas_switchBranchlist.addAssign_operation (var_cas_branchConstantSet, var_cas_branchInstructionList) ;
        var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4632)) ;
      switch (select_semantics_5F_parser_44 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_44 = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.epilogue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (4614)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  GGS_stringset  var_cas_missingConstants = var_cas_enumConstantesMap.reader_allKeys (inLexique COMMA_SOURCE_FILE_AT_LINE (4650)).substract_operation (inLexique, var_cas_allBranchConstantSet COMMA_SOURCE_FILE_AT_LINE (4650)) ;
  {
    GGS_stringset::cEnumerator enumerator_176631 (var_cas_missingConstants, true) ;
    while (enumerator_176631.hasCurrentObject ()) {
      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (enumerator_176631._key (HERE))).operator_concat (GGS_string ("' is not used in switch instruction")) COMMA_SOURCE_FILE_AT_LINE (4653)) ;
      enumerator_176631.next () ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_switch_instruction ::constructor_new (inLexique, var_cas_switchExpression, var_cas_enumTypeName, var_cas_switchBranchlist COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_switch) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i48_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_switch) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
  { bool syntaxRepeat_44 = true ;
    while (syntaxRepeat_44) {
        { bool syntaxRepeat_45 = true ;
          while (syntaxRepeat_45) {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            switch (select_semantics_5F_parser_45 (inLexique)) {
              case 2 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_45 = false ;
                break ;
            }
          }
        }
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
        nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      switch (select_semantics_5F_parser_44 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_44 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_switch) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i49_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_loop) COMMA_HERE) ;
  GGS_typeExpression  var_cas_variantExpression ;
  GGS_AC_galgasType  var_cas_variantResultType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_variantExpression, var_cas_variantResultType) ;
  GGS_typeGalgas_uint  var_cas_ui = GGS_typeGalgas_uint::castFrom (inLexique, var_cas_variantResultType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4689)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList1 = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_repeatBlock (inLexique COMMA_SOURCE_FILE_AT_LINE (4693)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (inLexique COMMA_SOURCE_FILE_AT_LINE (4694)) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList1, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4694)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (inLexique COMMA_SOURCE_FILE_AT_LINE (4693)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_while) COMMA_HERE) ;
  GGS_typeExpression  var_cas_conditionalExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_conditionalExpression, var_cas_resultType) ;
  GGS_typeGalgas_bool  var_cas_b = GGS_typeGalgas_bool::castFrom (inLexique, var_cas_resultType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4717)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList2 = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_repeatBlock (inLexique COMMA_SOURCE_FILE_AT_LINE (4721)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (inLexique COMMA_SOURCE_FILE_AT_LINE (4722)) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList2, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4722)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (inLexique COMMA_SOURCE_FILE_AT_LINE (4721)) ;
  GGS_typeInstruction  var_cas_instruction = GGS_C_while_instruction ::constructor_new (inLexique, var_cas_variantExpression, var_cas_instructionList1, var_cas_conditionalExpression, var_cas_instructionList2, GGS_location (inLexique) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_loop) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i49_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_loop) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_while) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_loop) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i50_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) COMMA_HERE) ;
  GGS_lstring  var_cas_grammarName ;
  inLexique.assignFromAttribute_tokenString (var_cas_grammarName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_altName ;
  switch (select_semantics_5F_parser_46 (inLexique)) {
    case 1 : {
      var_cas_altName = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_label) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_altName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_bool var_cas_sourceIsFile ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_typeExpression  var_cas_depFileExpression ;
  GGS_typeExpression  var_cas_depFilePath ;
  GGS_bool var_cas_hasDependancyFile = GGS_bool (false) ;
  GGS_location  var_cas_dependancyFileDefinitionLocation = GGS_location (inLexique) ;
  switch (select_semantics_5F_parser_47 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
      var_cas_sourceIsFile = GGS_bool (true) ;
      GGS_AC_galgasType  var_cas_sourceExpressionType ;
      nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
      GGS_typeGalgas_lstring  var_cas_gs = GGS_typeGalgas_lstring::castFrom (inLexique, var_cas_sourceExpressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4792)) ;
      switch (select_semantics_5F_parser_48 (inLexique)) {
        case 1 : {
          var_cas_depFileExpression = GGS_typeLiteralStringExpression ::constructor_new (inLexique, GGS_stringlist ::constructor_listWithValue (GGS_string ("")) COMMA_HERE) ;
          var_cas_depFilePath = GGS_typeLiteralStringExpression ::constructor_new (inLexique, GGS_stringlist ::constructor_listWithValue (GGS_string ("")) COMMA_HERE) ;
          } break ;
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_dependency) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_depFileExpressionType ;
          nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_depFileExpression, var_cas_depFileExpressionType) ;
          var_cas_dependancyFileDefinitionLocation = GGS_location (inLexique) ;
          GGS_typeGalgas_string  var_cas_gss = GGS_typeGalgas_string::castFrom (inLexique, var_cas_depFileExpressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4808)) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
          nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_depFilePath, var_cas_depFileExpressionType) ;
          var_cas_gss = GGS_typeGalgas_string::castFrom (inLexique, var_cas_depFileExpressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4818)) ;
          var_cas_hasDependancyFile = GGS_bool (true) ;
          } break ;
        default :
          break ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_on) COMMA_HERE) ;
      var_cas_sourceIsFile = GGS_bool (false) ;
      GGS_AC_galgasType  var_cas_sourceExpressionType ;
      nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
      GGS_typeGalgas_string  var_cas_gs = GGS_typeGalgas_string::castFrom (inLexique, var_cas_sourceExpressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4833)) ;
      var_cas_depFileExpression = GGS_typeLiteralStringExpression ::constructor_new (inLexique, GGS_stringlist ::constructor_listWithValue (GGS_string ("")) COMMA_HERE) ;
      var_cas_depFilePath = GGS_typeLiteralStringExpression ::constructor_new (inLexique, GGS_stringlist ::constructor_listWithValue (GGS_string ("")) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  GGS_bool var_cas_hasInputParameter ;
  nt_parse_5F_parameters_5F_list_ (inLexique, var_cas_listeTypesParametresEffectifs, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_hasInputParameter) ;
  const GGS_bool cond_183442 = (var_cas_hasDependancyFile).operator_and (var_cas_hasInputParameter) ;
  if (cond_183442.isBuiltAndTrue ()) {
    var_cas_dependancyFileDefinitionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("a dependancy file reference requires there is no input parameter") COMMA_SOURCE_FILE_AT_LINE (4853)) ;
  }
  GGS_AC_semanticsEntity  var_cas_e ;
  const GGS_M_semanticsEntitiesForUse  temp_183541 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_183541.isBuilt ()) {
    temp_183541 (HERE)->method_searchKey (inLexique, var_cas_grammarName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (4856)) ;
  }
  GGS_C_grammarForSemantics  var_cas_gfs = GGS_C_grammarForSemantics::castFrom (inLexique, var_cas_e.getPtr (), true, var_cas_grammarName COMMA_SOURCE_FILE_AT_LINE (4857)) ;
  GGS_M_nonterminalSymbolAlts  var_cas_startSymbolAltMap = var_cas_gfs.reader_mGrammarAltMap (inLexique COMMA_SOURCE_FILE_AT_LINE (4858)) ;
  GGS_lstring  var_cas_lexiqueClassName = var_cas_gfs.reader_mLexiqueClassName (inLexique COMMA_SOURCE_FILE_AT_LINE (4859)) ;
  GGS_L_EXsignature  var_cas_startSymbolSignature ;
  const GGS_M_nonterminalSymbolAlts  temp_183854 = var_cas_startSymbolAltMap ;
  if (temp_183854.isBuilt ()) {
    temp_183854 (HERE)->method_searchKey (inLexique, var_cas_altName, var_cas_startSymbolSignature COMMA_SOURCE_FILE_AT_LINE (4861)) ;
  }
  ::routine_verifierCompatibiliteArgEffectifsSignature (inLexique,  var_cas_startSymbolSignature,  var_cas_listeTypesParametresEffectifs,  GGS_location (inLexique),  var_cas_ioInstructionList,  var_cas_expressionsList COMMA_SOURCE_FILE_AT_LINE (4863)) ;
  GGS_typeCplusPlusName  var_cas_sentStringName ;
  switch (select_semantics_5F_parser_49 (inLexique)) {
    case 1 : {
      var_cas_sentStringName = GGS_typeNullName ::constructor_new (inLexique, GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_send) COMMA_HERE) ;
      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("using 'send'") COMMA_SOURCE_FILE_AT_LINE (4876)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
      GGS_lstring  var_cas_sentVariableName ;
      inLexique.assignFromAttribute_tokenString (var_cas_sentVariableName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_targetType ;
      var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (inLexique, var_cas_sentVariableName, var_cas_targetType, var_cas_sentStringName COMMA_SOURCE_FILE_AT_LINE (4881)) ;
      GGS_typeGalgas_string  var_cas_gs = GGS_typeGalgas_string::castFrom (inLexique, var_cas_targetType.getPtr (), true, var_cas_sentVariableName COMMA_SOURCE_FILE_AT_LINE (4882)) ;
      } break ;
    default :
      break ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_grammarInstruction ::constructor_new (inLexique, var_cas_sourceIsFile, var_cas_sourceExpression, var_cas_grammarName, var_cas_expressionsList, var_cas_altName, var_cas_lexiqueClassName, var_cas_sentStringName, var_cas_depFileExpression, var_cas_depFilePath COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i50_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  switch (select_semantics_5F_parser_46 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_label) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_5F_parser_47 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
      nt_expression_parse (inLexique) ;
      switch (select_semantics_5F_parser_48 (inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_dependency) COMMA_HERE) ;
          nt_expression_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
          nt_expression_parse (inLexique) ;
          } break ;
        default :
          break ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_on) COMMA_HERE) ;
      nt_expression_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  nt_parse_5F_parameters_5F_list_parse (inLexique) ;
  switch (select_semantics_5F_parser_49 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_send) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i51_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_send) COMMA_HERE) ;
  GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("using 'send'") COMMA_SOURCE_FILE_AT_LINE (4916)) ;
  GGS_typeExpression  var_cas_expression ;
  GGS_AC_galgasType  var_cas_expressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expression, var_cas_expressionType) ;
  GGS_typeGalgas_string  var_cas_classType = GGS_typeGalgas_string::castFrom (inLexique, var_cas_expressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (4929)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction = GGS_typeSendInstruction ::constructor_new (inLexique, var_cas_expression COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i51_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_send) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i52_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_with) COMMA_HERE) ;
  GGS_string var_cas_prefixString ;
  switch (select_semantics_5F_parser_50 (inLexique)) {
    case 1 : {
      var_cas_prefixString = GGS_string ("") ;
      } break ;
    case 2 : {
      GGS_lstring  var_cas_thePrefix ;
      inLexique.assignFromAttribute_tokenString (var_cas_thePrefix) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      var_cas_prefixString = var_cas_thePrefix.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4959)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21__3F_) COMMA_HERE) ;
  GGS_lstring  var_cas_nomVarDest ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomVarDest) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_location  var_cas_instructionLocation = var_cas_nomVarDest.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (4965)) ;
  GGS_AC_galgasType  var_cas_targetType ;
  GGS_typeCplusPlusName  var_cas_accessedVariableCppName ;
  GGS_string var_cas_errorMessageName ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (inLexique, var_cas_nomVarDest, var_cas_targetType, var_cas_accessedVariableCppName COMMA_SOURCE_FILE_AT_LINE (4970)) ;
  GGS_lstringlist  var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_51 = true ;
    while (syntaxRepeat_51) {
      switch (select_semantics_5F_parser_51 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E_) COMMA_HERE) ;
          GGS_lstring  var_cas_structAttributeName ;
          inLexique.assignFromAttribute_tokenString (var_cas_structAttributeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          var_cas_structAttributeList.addAssign_operation (var_cas_structAttributeName) ;
          var_cas_instructionLocation = var_cas_structAttributeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (4979)) ;
          GGS_typeGalgasStructType  var_cas_structType = GGS_typeGalgasStructType::castFrom (inLexique, var_cas_targetType.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (4980)) ;
          GGS_bool var_cas_found = GGS_bool (false) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_187977 (var_cas_structType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (4982)), true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_187977 = NULL ;
            while (((operand_187977 = enumerator_187977.nextObject ()))
                && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
              macroValidPointer (operand_187977) ;
              var_cas_found = (operand_187977->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4983))).operator_isEqual (var_cas_structAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4983))) ;
              var_cas_targetType = operand_187977->mAttributType ;
            }
          }
          const GGS_bool cond_188318 = (var_cas_found).operator_not () ;
          if (cond_188318.isBuiltAndTrue ()) {
            var_cas_structAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '@")).operator_concat (var_cas_structType.reader_mStructTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (4987)))).operator_concat (GGS_string ("' does not define a '"))).operator_concat (var_cas_structAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (4988)) ;
          }
          } break ;
        default :
          syntaxRepeat_51 = false ;
          break ;
      }
    }
  }
  GGS_lstring  var_cas_searchMethodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_searchMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_keyExpression ;
  GGS_AC_galgasType  var_cas_keyExpressionType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_keyExpression, var_cas_keyExpressionType) ;
  GGS_typeListeAttributsSemantiques  var_cas_attributeList ;
  GGS_string var_cas_mapTypeName ;
  const GGS_AC_galgasType  temp_188820 = var_cas_targetType ;
  if (temp_188820.isBuilt ()) {
    temp_188820 (HERE)->method_check_with_InstructionAccess (inLexique, var_cas_instructionLocation, var_cas_searchMethodName, var_cas_keyExpressionType, var_cas_mapTypeName, var_cas_errorMessageName, var_cas_attributeList COMMA_SOURCE_FILE_AT_LINE (5007)) ;
  }
  GGS_typeInstructionList  var_cas_doBranchInstructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  GGS_typeInstructionList  var_cas_elseBranchInstructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (5018)) ;
  var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (5019)) ;
  var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, (var_cas_prefixString).operator_concat (GGS_string ("key")), var_cas_instructionLocation COMMA_HERE), GGS_typeGalgas_lstring ::constructor_new (inLexique COMMA_HERE), GGS_typeKeyName ::constructor_new (inLexique, var_cas_instructionLocation, GGS_bool (false) COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (5021)) ;
  {
    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_189511 (var_cas_attributeList, true) ;
    const GGS_typeListeAttributsSemantiques::cElement * operand_189511 = NULL ;
    while (((operand_189511 = enumerator_189511.nextObject ()))) {
      macroValidPointer (operand_189511) ;
      var_cas_ioVariablesMap.modifier_insertWithInstructionLocalVariable (inLexique, GGS_lstring ::constructor_new (inLexique, (var_cas_prefixString).operator_concat (operand_189511->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5030))), var_cas_instructionLocation COMMA_HERE), operand_189511->mAttributType, GGS_typeOperandName ::constructor_new (inLexique, var_cas_instructionLocation, operand_189511->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5032)), GGS_bool (true), GGS_bool (false) COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (5029)) ;
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_doBranchInstructionList, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5019)) ;
  var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (5046)) ;
  switch (select_semantics_5F_parser_52 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseBranchInstructionList, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5046)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (5018)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_with) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction = GGS_typeWithInstruction ::constructor_new (inLexique, var_cas_mapTypeName, var_cas_accessedVariableCppName, var_cas_structAttributeList, var_cas_errorMessageName, var_cas_keyExpression, var_cas_doBranchInstructionList, var_cas_elseBranchInstructionList, var_cas_instructionLocation COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i52_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_with) COMMA_HERE) ;
  switch (select_semantics_5F_parser_50 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21__3F_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  { bool syntaxRepeat_51 = true ;
    while (syntaxRepeat_51) {
      switch (select_semantics_5F_parser_51 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_51 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
  switch (select_semantics_5F_parser_52 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_with) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'constant_while_before_in_foreach_instruction'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_constant_5F_while_5F_before_5F_in_5F_foreach_5F_instruction_i53_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_typeCplusPlusName  &var_cas_outIndexVariable,
                                GGS_typeInstructionList  &var_cas_out_before_instructionList) {
  var_cas_ioVariablesMap.prologue_repeatPart (inLexique COMMA_SOURCE_FILE_AT_LINE (5094)) ;
  { bool syntaxRepeat_53 = true ;
    while (syntaxRepeat_53) {
        switch (select_semantics_5F_parser_54 (inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3C_) COMMA_HERE) ;
            } break ;
          case 3 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E_) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        nt_expression_parse (inLexique) ;
        switch (select_semantics_5F_parser_55 (inLexique)) {
          case 1 : {
            nt_parse_5F_effective_5F_input_5F_parameters_5F_list_parse (inLexique) ;
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_prefixedby) COMMA_HERE) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            } break ;
          case 3 : {
            } break ;
          default :
            break ;
        }
      switch (select_semantics_5F_parser_53 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_53 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_5F_parser_56 (inLexique)) {
    case 1 : {
      var_cas_outIndexVariable = GGS_typeNullName ::constructor_new (inLexique, GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_index) COMMA_HERE) ;
      GGS_lstring  var_cas_indexVariableName ;
      inLexique.assignFromAttribute_tokenString (var_cas_indexVariableName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      var_cas_outIndexVariable = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_indexVariableName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (5123)), var_cas_indexVariableName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5123)) COMMA_HERE) ;
      var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (inLexique, var_cas_indexVariableName, GGS_typeGalgas_uint ::constructor_new (inLexique COMMA_HERE), var_cas_outIndexVariable COMMA_SOURCE_FILE_AT_LINE (5124)) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_5F_parser_57 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_while) COMMA_HERE) ;
      nt_expression_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  var_cas_out_before_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  switch (select_semantics_5F_parser_58 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_before) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_out_before_instructionList, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_repeatPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5094)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_constant_5F_while_5F_before_5F_in_5F_foreach_5F_instruction_i53_secondPhase (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_foreachEnumerationList  &var_cas_outForeachEnumerationList,
                                GGS_typeExpression  &var_cas_outWhileExpression,
                                GGS_typeInstructionList  &var_cas_out_do_instructionList) {
  var_cas_ioVariablesMap.prologue_repeatPart (inLexique COMMA_SOURCE_FILE_AT_LINE (5164)) ;
  var_cas_outForeachEnumerationList = GGS_foreachEnumerationList ::constructor_emptyList () ;
  { bool syntaxRepeat_53 = true ;
    while (syntaxRepeat_53) {
        const GGS_location  var_cas_magicNumber = GGS_location (inLexique) ;
        GGS_bool var_cas_ascending ;
        switch (select_semantics_5F_parser_54 (inLexique)) {
          case 1 : {
            var_cas_ascending = GGS_bool (true) ;
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3C_) COMMA_HERE) ;
            var_cas_ascending = GGS_bool (true) ;
            } break ;
          case 3 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E_) COMMA_HERE) ;
            var_cas_ascending = GGS_bool (false) ;
            } break ;
          default :
            break ;
        }
        GGS_typeExpression  var_cas_sourceExpression ;
        GGS_AC_galgasType  var_cas_sourceExpressionType ;
        nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
        GGS_typeListeAttributsSemantiques  var_cas_formalEnumerationList ;
        GGS_localConstantBuildStyleEnum var_cas_localConstantBuildStyleEnum ;
        GGS_bool var_cas_iteratorNewStyle ;
        const GGS_AC_galgasType  temp_194534 = var_cas_sourceExpressionType ;
        if (temp_194534.isBuilt ()) {
          temp_194534 (HERE)->method_acceptForeachInstruction (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_magicNumber, var_cas_formalEnumerationList, var_cas_localConstantBuildStyleEnum, var_cas_iteratorNewStyle COMMA_SOURCE_FILE_AT_LINE (5195)) ;
        }
        GGS_string var_cas_typeName ;
        const GGS_AC_galgasType  temp_194792 = var_cas_sourceExpressionType ;
        if (temp_194792.isBuilt ()) {
          temp_194792 (HERE)->method_getTypeName (inLexique, var_cas_typeName COMMA_SOURCE_FILE_AT_LINE (5204)) ;
        }
        switch (select_semantics_5F_parser_55 (inLexique)) {
          case 1 : {
            GGS_bool automatic_var_195085_0 ;
            nt_parse_5F_effective_5F_input_5F_parameters_5F_list_ (inLexique, var_cas_ioVariablesMap, var_cas_formalEnumerationList, var_cas_magicNumber, var_cas_localConstantBuildStyleEnum, var_cas_iteratorNewStyle, automatic_var_195085_0) ;
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_prefixedby) COMMA_HERE) ;
            GGS_lstring  var_cas_prefix ;
            inLexique.assignFromAttribute_tokenString (var_cas_prefix) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            GGS_bool var_cas_mapStyle = (var_cas_localConstantBuildStyleEnum).operator_isNotEqual (GGS_localConstantBuildStyleEnum::constructor_listStyle (inLexique COMMA_HERE)) ;
            GGS_bool var_cas_firstOne = GGS_bool (true) ;
            {
              GGS_typeListeAttributsSemantiques::cEnumerator enumerator_195329 (var_cas_formalEnumerationList, true) ;
              const GGS_typeListeAttributsSemantiques::cElement * operand_195329 = NULL ;
              while (((operand_195329 = enumerator_195329.nextObject ()))) {
                macroValidPointer (operand_195329) ;
                GGS_typeCplusPlusName  var_cas_cppName ;
                const GGS_bool cond_195578 = ((var_cas_localConstantBuildStyleEnum).operator_isEqual (GGS_localConstantBuildStyleEnum::constructor_firstIsKeyOtherMapStyle (inLexique COMMA_HERE))).operator_and (var_cas_firstOne) ;
                if (cond_195578.isBuiltAndTrue ()) {
                  var_cas_cppName = GGS_typeKeyName ::constructor_new (inLexique, var_cas_magicNumber, var_cas_iteratorNewStyle COMMA_HERE) ;
                }else if (cond_195578.isBuiltAndFalse ()) {
                  var_cas_cppName = GGS_typeOperandName ::constructor_new (inLexique, var_cas_magicNumber, operand_195329->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5225)), var_cas_mapStyle, var_cas_iteratorNewStyle COMMA_HERE) ;
                }
                var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, (var_cas_prefix.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5227))).operator_concat (operand_195329->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5227))), GGS_location (inLexique) COMMA_HERE), operand_195329->mAttributType, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (5227)) ;
                var_cas_firstOne = GGS_bool (false) ;
              }
            }
            } break ;
          case 3 : {
            GGS_bool var_cas_mapStyle = (var_cas_localConstantBuildStyleEnum).operator_isNotEqual (GGS_localConstantBuildStyleEnum::constructor_listStyle (inLexique COMMA_HERE)) ;
            GGS_bool var_cas_firstOne = GGS_bool (true) ;
            {
              GGS_typeListeAttributsSemantiques::cEnumerator enumerator_196089 (var_cas_formalEnumerationList, true) ;
              const GGS_typeListeAttributsSemantiques::cElement * operand_196089 = NULL ;
              while (((operand_196089 = enumerator_196089.nextObject ()))) {
                macroValidPointer (operand_196089) ;
                GGS_typeCplusPlusName  var_cas_cppName ;
                const GGS_bool cond_196338 = ((var_cas_localConstantBuildStyleEnum).operator_isEqual (GGS_localConstantBuildStyleEnum::constructor_firstIsKeyOtherMapStyle (inLexique COMMA_HERE))).operator_and (var_cas_firstOne) ;
                if (cond_196338.isBuiltAndTrue ()) {
                  var_cas_cppName = GGS_typeKeyName ::constructor_new (inLexique, var_cas_magicNumber, var_cas_iteratorNewStyle COMMA_HERE) ;
                }else if (cond_196338.isBuiltAndFalse ()) {
                  var_cas_cppName = GGS_typeOperandName ::constructor_new (inLexique, var_cas_magicNumber, operand_196089->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5238)), var_cas_mapStyle, var_cas_iteratorNewStyle COMMA_HERE) ;
                }
                var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, operand_196089->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5240)), GGS_location (inLexique) COMMA_HERE), operand_196089->mAttributType, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (5240)) ;
                var_cas_firstOne = GGS_bool (false) ;
              }
            }
            } break ;
          default :
            break ;
        }
        var_cas_outForeachEnumerationList.addAssign_operation (var_cas_iteratorNewStyle, var_cas_sourceExpression, var_cas_magicNumber, var_cas_typeName, var_cas_ascending) ;
      switch (select_semantics_5F_parser_53 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_53 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_5F_parser_56 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_index) COMMA_HERE) ;
      GGS_lstring  var_cas_indexVariableName ;
      inLexique.assignFromAttribute_tokenString (var_cas_indexVariableName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      GGS_typeCplusPlusName  var_cas_indexVariable = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_indexVariableName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (5254)), var_cas_indexVariableName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5254)) COMMA_HERE) ;
      var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (inLexique, var_cas_indexVariableName, GGS_typeGalgas_uint ::constructor_new (inLexique COMMA_HERE), var_cas_indexVariable COMMA_SOURCE_FILE_AT_LINE (5255)) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_5F_parser_57 (inLexique)) {
    case 1 : {
      var_cas_outWhileExpression = GGS_typeTrueBool ::constructor_new (inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_while) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_resultType ;
      nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_outWhileExpression, var_cas_resultType) ;
      GGS_typeGalgas_bool  var_cas_b = GGS_typeGalgas_bool::castFrom (inLexique, var_cas_resultType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5274)) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_5F_parser_58 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_before) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
  var_cas_out_do_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_out_do_instructionList, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5164)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_constant_5F_while_5F_before_5F_in_5F_foreach_5F_instruction_i53_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_53 = true ;
    while (syntaxRepeat_53) {
        switch (select_semantics_5F_parser_54 (inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3C_) COMMA_HERE) ;
            } break ;
          case 3 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E_) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        nt_expression_parse (inLexique) ;
        switch (select_semantics_5F_parser_55 (inLexique)) {
          case 1 : {
            nt_parse_5F_effective_5F_input_5F_parameters_5F_list_parse (inLexique) ;
            } break ;
          case 2 : {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_prefixedby) COMMA_HERE) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            } break ;
          case 3 : {
            } break ;
          default :
            break ;
        }
      switch (select_semantics_5F_parser_53 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_53 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_5F_parser_56 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_index) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_5F_parser_57 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_while) COMMA_HERE) ;
      nt_expression_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_5F_parser_58 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_before) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i54_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_foreach) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_ioVariablesMap.prologue_repeatBlock (inLexique COMMA_SOURCE_FILE_AT_LINE (5309)) ;
  GGS_typeInstructionList  var_cas_before_instructionList ;
  GGS_typeExpression  var_cas_whileExpression ;
  GGS_foreachEnumerationList  var_cas_foreachEnumerationList ;
  GGS_typeInstructionList  var_cas_do_instructionList ;
  GGS_typeCplusPlusName  var_cas_indexVariable ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_199530 = inLexique.parsingContext () ;
    nt_constant_5F_while_5F_before_5F_in_5F_foreach_5F_instruction_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_inSemanticContext, var_cas_indexVariable, var_cas_before_instructionList) ;
  //--- Branch of parse/rewind instruction
    inLexique.setParsingContext (context_199530) ;
    nt_constant_5F_while_5F_before_5F_in_5F_foreach_5F_instruction_secondPhase (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_inSemanticContext, var_cas_foreachEnumerationList, var_cas_whileExpression, var_cas_do_instructionList) ;
  //--- End of parse/rewind instruction
  GGS_typeInstructionList  var_cas_between_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_repeatPart (inLexique COMMA_SOURCE_FILE_AT_LINE (5339)) ;
  switch (select_semantics_5F_parser_59 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { const GGS_typeCplusPlusName _var_199983 = var_cas_indexVariable ; // CAST instruction
        if (_var_199983.getPtr () != NULL) {
          macroValidPointer (_var_199983.getPtr ()) ;
          if (typeid (cPtr_typeAutomaticName) == typeid (* (_var_199983.getPtr ()))) {
            const GGS_typeAutomaticName var_cas_a (_var_199983.getPtr ()) ;
            var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_a.reader_mName (inLexique COMMA_SOURCE_FILE_AT_LINE (5345)), var_cas_a.reader_mVariableLocation (inLexique COMMA_SOURCE_FILE_AT_LINE (5345)) COMMA_HERE), GGS_typeGalgas_uint ::constructor_new (inLexique COMMA_HERE), var_cas_indexVariable COMMA_SOURCE_FILE_AT_LINE (5344)) ;
          }else{
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_between) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_between_instructionList, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_repeatPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5339)) ;
  GGS_typeInstructionList  var_cas_after_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_repeatPart (inLexique COMMA_SOURCE_FILE_AT_LINE (5364)) ;
  switch (select_semantics_5F_parser_60 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { const GGS_typeCplusPlusName _var_200750 = var_cas_indexVariable ; // CAST instruction
        if (_var_200750.getPtr () != NULL) {
          macroValidPointer (_var_200750.getPtr ()) ;
          if (typeid (cPtr_typeAutomaticName) == typeid (* (_var_200750.getPtr ()))) {
            const GGS_typeAutomaticName var_cas_a (_var_200750.getPtr ()) ;
            var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_a.reader_mName (inLexique COMMA_SOURCE_FILE_AT_LINE (5370)), var_cas_a.reader_mVariableLocation (inLexique COMMA_SOURCE_FILE_AT_LINE (5370)) COMMA_HERE), GGS_typeGalgas_uint ::constructor_new (inLexique COMMA_HERE), var_cas_indexVariable COMMA_SOURCE_FILE_AT_LINE (5369)) ;
          }else{
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_after) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_after_instructionList, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_repeatPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5364)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (inLexique COMMA_SOURCE_FILE_AT_LINE (5309)) ;
  var_cas_instruction = GGS_typeForeachInstruction ::constructor_new (inLexique, var_cas_foreachEnumerationList, var_cas_indexVariable, var_cas_whileExpression, var_cas_before_instructionList, var_cas_do_instructionList, var_cas_between_instructionList, var_cas_after_instructionList COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_foreach) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i54_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_foreach) COMMA_HERE) ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_199530 = inLexique.parsingContext () ;
    nt_constant_5F_while_5F_before_5F_in_5F_foreach_5F_instruction_parse (inLexique) ;
  //--- Branch of parse/rewind instruction
    inLexique.setParsingContext (context_199530) ;
    nt_constant_5F_while_5F_before_5F_in_5F_foreach_5F_instruction_parse (inLexique) ;
  //--- End of parse/rewind instruction
  switch (select_semantics_5F_parser_59 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_between) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_5F_parser_60 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_after) COMMA_HERE) ;
      nt_semantic_5F_instructions_5F_list_5F_no_5F_verif_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_foreach) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'parse_match_operand'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_match_5F_operand_i55_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  &var_cas_outCppName,
                                GGS_lstring  &var_cas_outBaseTypeName,
                                GGS_location  &var_cas_outVarLocation,
                                GGS_bool &var_cas_outIsEnumeration,
                                GGS_enumConstantMap  &var_cas_outEnumMessageMap) {
  GGS_lstring  var_cas_variableName ;
  GGS_AC_galgasType  var_cas_type ;
  nt_read_5F_access_ (inLexique, var_cas_variableName, var_cas_outCppName, var_cas_type, var_cas_ioVariablesMap) ;
  var_cas_outVarLocation = GGS_location (inLexique) ;
  { const GGS_AC_galgasType _var_202803 = var_cas_type ; // CAST instruction
    if (_var_202803.getPtr () != NULL) {
      macroValidPointer (_var_202803.getPtr ()) ;
      if (dynamic_cast <cPtr_typeGalgasClassType *> (_var_202803.getPtr ()) != NULL) {
        const GGS_typeGalgasClassType var_cas_t (_var_202803.getPtr ()) ;
        var_cas_outBaseTypeName = var_cas_t.reader_mClassTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (5428)) ;
        var_cas_outIsEnumeration = GGS_bool (false) ;
        var_cas_outEnumMessageMap = GGS_enumConstantMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      }else if (dynamic_cast <cPtr_typeGalgas_enum *> (_var_202803.getPtr ()) != NULL) {
        const GGS_typeGalgas_enum var_cas_e (_var_202803.getPtr ()) ;
        var_cas_outBaseTypeName = var_cas_e.reader_mEnumTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (5432)) ;
        var_cas_outIsEnumeration = GGS_bool (true) ;
        var_cas_outEnumMessageMap = var_cas_e.reader_mEnumConstantesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5434)) ;
      }else{
        GGS_string var_cas_actualTypeName ;
        const GGS_AC_galgasType  temp_202567 = var_cas_type ;
        if (temp_202567.isBuilt ()) {
          temp_202567 (HERE)->method_getTypeName (inLexique, var_cas_actualTypeName COMMA_SOURCE_FILE_AT_LINE (5437)) ;
        }
        var_cas_variableName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the type of this variable is '@")).operator_concat (var_cas_actualTypeName)).operator_concat (GGS_string ("' ; I was expected an enumeration type or an abstract type")) COMMA_SOURCE_FILE_AT_LINE (5441)) ;
        var_cas_outBaseTypeName.drop () ;
        var_cas_outIsEnumeration.drop () ;
        var_cas_outEnumMessageMap.drop () ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_match_5F_operand_i55_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_read_5F_access_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_match_5F_case_i56_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  var_cas_inVarLocation,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  /* var_cas_inEnumMessageMap */,
                                GGS_lstring  &var_cas_outTypeName) {
  inLexique.assignFromAttribute_tokenString (var_cas_outTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  temp_203351 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_203351.isBuilt ()) {
    temp_203351 (HERE)->method_searchKey (inLexique, var_cas_outTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5460)) ;
  }
  GGS_AC_galgasType  var_cas_definitionClasse1 = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (5461)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (5461)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_definitionClasse1.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (5463)) ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5464)) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 = var_cas_classType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (5465)) ;
  GGS_bool var_cas_isAbstract = var_cas_classType.reader_mClassIsAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (5466)) ;
  const GGS_bool cond_204025 = var_cas_isAbstract ;
  if (cond_204025.isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("an abstract class is not allowed here") COMMA_SOURCE_FILE_AT_LINE (5470)) ;
  }
  const GGS_bool cond_204217 = var_cas_inIsEnumeration ;
  if (cond_204217.isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("a constant of '@")).operator_concat (var_cas_inTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5473)))).operator_concat (GGS_string ("' enumeration type is expected here")) COMMA_SOURCE_FILE_AT_LINE (5474)) ;
  }else if (cond_204217.isBuiltAndFalse ()) {
    const GGS_bool cond_204381 = (var_cas_tableDesClassesAncetresType1.reader_hasKey (var_cas_inTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5474)))).operator_not () ;
    if (cond_204381.isBuiltAndTrue ()) {
      var_cas_outTypeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("This type does not inherit from '")).operator_concat (var_cas_inTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5475)))).operator_concat (GGS_string ("'")) COMMA_SOURCE_FILE_AT_LINE (5476)) ;
    }
  }
  GGS_bool automatic_var_204601_0 ;
  nt_parse_5F_effective_5F_input_5F_parameters_5F_list_ (inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_inVarLocation, GGS_localConstantBuildStyleEnum::constructor_listStyle (inLexique COMMA_HERE), GGS_bool (false), automatic_var_204601_0) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_match_5F_case_i56_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  nt_parse_5F_effective_5F_input_5F_parameters_5F_list_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_match_5F_case_i57_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  /* var_cas_inVarLocation */,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  var_cas_inEnumMessageMap,
                                GGS_lstring  &var_cas_outEnumConstantName) {
  inLexique.assignFromAttribute_tokenString (var_cas_outEnumConstantName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  const GGS_bool cond_205186 = var_cas_inIsEnumeration ;
  if (cond_205186.isBuiltAndTrue ()) {
    GGS_uint  automatic_var_205177_0 ;
    const GGS_enumConstantMap  temp_205152 = var_cas_inEnumMessageMap ;
    if (temp_205152.isBuilt ()) {
      temp_205152 (HERE)->method_searchKey (inLexique, var_cas_outEnumConstantName, automatic_var_205177_0 COMMA_SOURCE_FILE_AT_LINE (5503)) ;
    }
  }else if (cond_205186.isBuiltAndFalse ()) {
    var_cas_outEnumConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("a class that inherit from '@")).operator_concat (var_cas_inTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5505)))).operator_concat (GGS_string ("' abstract class is expected here")) COMMA_SOURCE_FILE_AT_LINE (5506)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_parse_5F_match_5F_case_i57_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i58_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_match) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_operand1_cppName ;
  GGS_lstring  var_cas_operand1_typeName ;
  GGS_location  var_cas_operand1_location ;
  GGS_bool var_cas_operand1_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand1_enumMessageMap ;
  nt_parse_5F_match_5F_operand_ (inLexique, var_cas_ioVariablesMap, var_cas_operand1_cppName, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3A_) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_operand2_cppName ;
  GGS_lstring  var_cas_operand2_typeName ;
  GGS_location  var_cas_operand2_location ;
  GGS_bool var_cas_operand2_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand2_enumMessageMap ;
  nt_parse_5F_match_5F_operand_ (inLexique, var_cas_ioVariablesMap, var_cas_operand2_cppName, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_L_matchInstructionCasesList  var_cas_casesList = GGS_L_matchInstructionCasesList ::constructor_emptyList () ;
  var_cas_ioVariablesMap.prologue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (5552)) ;
  { bool syntaxRepeat_61 = true ;
    while (syntaxRepeat_61) {
      switch (select_semantics_5F_parser_61 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
          var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (5556)) ;
          GGS_lstring  var_cas_case1_name ;
          nt_parse_5F_match_5F_case_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap, var_cas_case1_name) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3A_) COMMA_HERE) ;
          GGS_lstring  var_cas_case2_name ;
          nt_parse_5F_match_5F_case_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap, var_cas_case2_name) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
          GGS_typeInstructionList  var_cas_instructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
          nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inSemanticContext) ;
          var_cas_casesList.addAssign_operation (var_cas_case1_name, var_cas_case2_name, var_cas_instructionsList) ;
          var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5556)) ;
          } break ;
        default :
          syntaxRepeat_61 = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (inLexique COMMA_SOURCE_FILE_AT_LINE (5596)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_elsePartInstructionsList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elsePartInstructionsList, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_testPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (5596)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (inLexique COMMA_SOURCE_FILE_AT_LINE (5552)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_match) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction = GGS_typeMatchInstruction ::constructor_new (inLexique, var_cas_operand1_location, var_cas_operand2_location, var_cas_operand1_cppName, var_cas_operand2_cppName, var_cas_operand1_typeName, var_cas_operand2_typeName, var_cas_operand1_isEnumeration, var_cas_operand2_isEnumeration, var_cas_casesList, var_cas_elsePartInstructionsList COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instruction_i58_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_match) COMMA_HERE) ;
  nt_parse_5F_match_5F_operand_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3A_) COMMA_HERE) ;
  nt_parse_5F_match_5F_operand_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  { bool syntaxRepeat_61 = true ;
    while (syntaxRepeat_61) {
      switch (select_semantics_5F_parser_61 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_HERE) ;
          nt_parse_5F_match_5F_case_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3A_) COMMA_HERE) ;
          nt_parse_5F_match_5F_case_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
          nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_61 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_match) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Implementation of production rule 'semantic_instructions_list_no_verif'   *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instructions_5F_list_5F_no_5F_verif_i59_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  { bool syntaxRepeat_62 = true ;
    while (syntaxRepeat_62) {
      switch (select_semantics_5F_parser_62 (inLexique)) {
        case 2 : {
          nt_semantic_5F_instruction_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inSemanticContext) ;
          } break ;
        default :
          syntaxRepeat_62 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantic_5F_instructions_5F_list_5F_no_5F_verif_i59_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_62 = true ;
    while (syntaxRepeat_62) {
      switch (select_semantics_5F_parser_62 (inLexique)) {
        case 2 : {
          nt_semantic_5F_instruction_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_62 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_optional_5F_assignment_i60_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_lstring  /* var_cas_inTypeName */,
                                const GGS_lstring  /* var_cas_inTargetVarName */,
                                const GGS_typeCplusPlusName  var_cas_inVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */) {
  var_cas_ioInstructionList.addAssign_operation (GGS_typeInstructionDeclarationVarLocale ::constructor_new (inLexique, var_cas_inVariableCppName, var_cas_inVariableType COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_optional_5F_assignment_i60_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_optional_5F_assignment_i61_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_lstring  /* var_cas_inTypeName */,
                                const GGS_lstring  var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_inVariableType,  var_cas_sourceType,  GGS_location (inLexique),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (5693)) ;
  GGS_typeInstruction  var_cas_instruction = GGS_C_declarationInstructionWithAssignment ::constructor_new (inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  GGS_AC_galgasType  automatic_var_211784_0 ;
  GGS_typeCplusPlusName  automatic_var_211784_1 ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (inLexique, var_cas_inTargetVarName, automatic_var_211784_0, automatic_var_211784_1 COMMA_SOURCE_FILE_AT_LINE (5698)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_optional_5F_assignment_i61_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
  nt_expression_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_optional_5F_assignment_i62_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_lstring  /* var_cas_inTypeName */,
                                const GGS_lstring  var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
  GGS_lstring  var_cas_constructorName ;
  inLexique.assignFromAttribute_tokenString (var_cas_constructorName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  GGS_bool var_cas_hasLexiqueAndLocationArguments ;
  GGS_AC_galgasType  var_cas_returnedType ;
  const GGS_AC_galgasType  temp_212593 = var_cas_inVariableType ;
  if (temp_212593.isBuilt ()) {
    temp_212593 (HERE)->method_handleConstructorInvocation (inLexique, var_cas_constructorName, var_cas_listeAttributsSemantiques, var_cas_hasLexiqueAndLocationArguments, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (5722)) ;
  }
  const GGS_bool cond_212939 = (var_cas_inVariableType).operator_isNotEqual (var_cas_returnedType) ;
  if (cond_212939.isBuiltAndTrue ()) {
    GGS_string var_cas_typeName ;
    const GGS_AC_galgasType  temp_212830 = var_cas_returnedType ;
    if (temp_212830.isBuilt ()) {
      temp_212830 (HERE)->method_getTypeName (inLexique, var_cas_typeName COMMA_SOURCE_FILE_AT_LINE (5725)) ;
    }
    var_cas_constructorName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this constructor returns an other type: '@")).operator_concat (var_cas_typeName)).operator_concat (GGS_string ("'")) COMMA_SOURCE_FILE_AT_LINE (5727)) ;
  }
  GGS_typeExpressionList  var_cas_expressionList ;
  nt_output_5F_expression_5F_list_ (inLexique, var_cas_expressionList, var_cas_listeAttributsSemantiques, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_e = GGS_typeConstructorExpression ::constructor_new (inLexique, var_cas_inVariableType, var_cas_constructorName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5742)), var_cas_hasLexiqueAndLocationArguments, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (GGS_C_declarationInstructionWithAssignment ::constructor_new (inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_e COMMA_HERE)) ;
  GGS_AC_galgasType  automatic_var_213620_0 ;
  GGS_typeCplusPlusName  automatic_var_213620_1 ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (inLexique, var_cas_inTargetVarName, automatic_var_213620_0, automatic_var_213620_1 COMMA_SOURCE_FILE_AT_LINE (5748)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_optional_5F_assignment_i62_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_output_5F_expression_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i63_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_mapindex) COMMA_HERE) ;
  GGS_lstring  var_cas_mapindexTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mapindexTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_63 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      const GGS_bool cond_214847 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_mapindexTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5771)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_mapindexTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5772))))).operator_not () ;
      if (cond_214847.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedMapindexType ::constructor_new (inLexique, var_cas_mapindexTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_mapindexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5774)) ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
      GGS_lstring  var_cas_mapTypeName ;
      inLexique.assignFromAttribute_tokenString (var_cas_mapTypeName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      const GGS_M_semanticsEntitiesForUse  temp_215009 = var_cas_ioComponentSemanticsEntitiesMap ;
      if (temp_215009.isBuilt ()) {
        temp_215009 (HERE)->method_searchKey (inLexique, var_cas_mapTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (5781)) ;
      }
      GGS_AC_galgasType  var_cas_aType = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5782)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (5782)) ;
      GGS_typeGalgasMapType  var_cas_mapType = GGS_typeGalgasMapType::castFrom (inLexique, var_cas_aType.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5783)) ;
      GGS_typeListeAttributsSemantiques  var_cas_mapAttributesList = var_cas_mapType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (5784)) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesSurcharger = var_cas_mapType.reader_aTableMethodesSurcharger (inLexique COMMA_SOURCE_FILE_AT_LINE (5785)) ;
      GGS_mapModifierMap  var_cas_modifierMethodMap = var_cas_mapType.reader_mModifierMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5786)) ;
      GGS_EXmapMethodMap  var_cas_readerMethodMap = var_cas_mapType.reader_mReaderMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5787)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_mapIndexSearchReaderMap  var_cas_mapIndexSearchReaderMap = GGS_mapIndexSearchReaderMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      { bool syntaxRepeat_64 = true ;
        while (syntaxRepeat_64) {
          switch (select_semantics_5F_parser_64 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
              GGS_lstring  var_cas_searchReaderName ;
              inLexique.assignFromAttribute_tokenString (var_cas_searchReaderName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
              GGS_lstring  var_cas_mapindexErrorMessage ;
              inLexique.assignFromAttribute_tokenString (var_cas_mapindexErrorMessage) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              if (var_cas_mapindexErrorMessage.isBuilt ()) {
                ::routine_check_KL_escapeCharacters (inLexique,  var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (5800)) ;
              }
              var_cas_mapIndexSearchReaderMap.modifier_insertKey (inLexique, var_cas_searchReaderName, var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (5801)) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_64 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_t = GGS_typeGalgasMapindexType ::constructor_new (inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap, var_cas_tableMethodesSurcharger, var_cas_modifierMethodMap, var_cas_readerMethodMap COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_mapindexTypeName, GGS_typeEntiteType ::constructor_new (inLexique, var_cas_t COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (5814)) ;
      GGS_typeEntityToGenerate  var_cas_e = GGS_C_mapindexToImplement ::constructor_new (inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap COMMA_HERE) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_e) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i63_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_mapindex) COMMA_HERE) ;
  GGS_lstring  var_cas_mapindexTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mapindexTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_63 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      const GGS_bool cond_217374 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_mapindexTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5837)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_mapindexTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5838))))).operator_not () ;
      if (cond_217374.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedMapindexType ::constructor_new (inLexique, var_cas_mapindexTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_mapindexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5840)) ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
      GGS_lstring  var_cas_mapTypeName ;
      inLexique.assignFromAttribute_tokenString (var_cas_mapTypeName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      const GGS_M_semanticsEntitiesForUse  temp_217536 = var_cas_ioComponentSemanticsEntitiesMap ;
      if (temp_217536.isBuilt ()) {
        temp_217536 (HERE)->method_searchKey (inLexique, var_cas_mapTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (5847)) ;
      }
      GGS_AC_galgasType  var_cas_aType = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5848)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (5848)) ;
      GGS_typeGalgasMapType  var_cas_mapType = GGS_typeGalgasMapType::castFrom (inLexique, var_cas_aType.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5849)) ;
      GGS_typeListeAttributsSemantiques  var_cas_mapAttributesList = var_cas_mapType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (5850)) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesSurcharger = var_cas_mapType.reader_aTableMethodesSurcharger (inLexique COMMA_SOURCE_FILE_AT_LINE (5851)) ;
      GGS_mapModifierMap  var_cas_modifierMethodMap = var_cas_mapType.reader_mModifierMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5852)) ;
      GGS_EXmapMethodMap  var_cas_readerMethodMap = var_cas_mapType.reader_mReaderMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (5853)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_mapIndexSearchReaderMap  var_cas_mapIndexSearchReaderMap = GGS_mapIndexSearchReaderMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      { bool syntaxRepeat_64 = true ;
        while (syntaxRepeat_64) {
          switch (select_semantics_5F_parser_64 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
              GGS_lstring  var_cas_searchReaderName ;
              inLexique.assignFromAttribute_tokenString (var_cas_searchReaderName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
              GGS_lstring  var_cas_mapindexErrorMessage ;
              inLexique.assignFromAttribute_tokenString (var_cas_mapindexErrorMessage) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              if (var_cas_mapindexErrorMessage.isBuilt ()) {
                ::routine_check_KL_escapeCharacters (inLexique,  var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (5866)) ;
              }
              var_cas_mapIndexSearchReaderMap.modifier_insertKey (inLexique, var_cas_searchReaderName, var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (5867)) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_64 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_t = GGS_typeGalgasMapindexType ::constructor_new (inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap, var_cas_tableMethodesSurcharger, var_cas_modifierMethodMap, var_cas_readerMethodMap COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_mapindexTypeName, GGS_typeEntiteType ::constructor_new (inLexique, var_cas_t COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (5880)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i63_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_mapindex) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_63 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      { bool syntaxRepeat_64 = true ;
        while (syntaxRepeat_64) {
          switch (select_semantics_5F_parser_64 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_64 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i64_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mapTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mapTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_65 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      const GGS_bool cond_220113 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_mapTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5904)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_mapTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5905))))).operator_not () ;
      if (cond_220113.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedMapType ::constructor_new (inLexique, var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_mapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5907)) ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
      GGS_lstring  var_cas_cppClassName ;
      inLexique.assignFromAttribute_tokenString (var_cas_cppClassName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      var_cas_cppClassName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("old style map definition") COMMA_SOURCE_FILE_AT_LINE (5914)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable ::constructor_emptyMap (inLexique COMMA_HERE) ;
      { bool syntaxRepeat_66 = true ;
        while (syntaxRepeat_66) {
          switch (select_semantics_5F_parser_66 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_5F_map_5F_method_ (inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              var_cas_insertMethodList.addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5927)), GGS_bool (true), GGS_string ("")) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_5F_map_5F_method_ (inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              var_cas_searchMethodList.addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5934)), GGS_bool (true), GGS_string ("")) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_block) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomMethode) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
              GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
              nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
              nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              var_cas_tableMethodesBloc.modifier_insertKey (inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin COMMA_SOURCE_FILE_AT_LINE (5969)) ;
              } break ;
            default :
              syntaxRepeat_66 = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap = GGS_mapModifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType = GGS_typeGalgas_lstring ::constructor_new (inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType = GGS_typeGalgas_luint ::constructor_new (inLexique COMMA_HERE) ;
      {
        GGS_insertOrSearchMethodList::cEnumerator enumerator_223056 (var_cas_insertMethodList, true) ;
        const GGS_insertOrSearchMethodList::cElement * operand_223056 = NULL ;
        while (((operand_223056 = enumerator_223056.nextObject ()))) {
          macroValidPointer (operand_223056) ;
          GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_223233 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_223233 = NULL ;
            while (((operand_223233 = enumerator_223233.nextObject ()))) {
              macroValidPointer (operand_223233) ;
              var_cas_methodSignature.addAssign_operation (operand_223233->mAttributType, var_cas_inPassingMode) ;
            }
          }
          var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, operand_223056->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5997)) ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          var_cas_methodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_223635 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_223635 = NULL ;
            while (((operand_223635 = enumerator_223635.nextObject ()))) {
              macroValidPointer (operand_223635) ;
              var_cas_methodSignature.addAssign_operation (operand_223635->mAttributType, var_cas_inPassingMode) ;
            }
          }
          GGS_lstring  var_cas_insertKeyAndGetIndexName = GGS_lstring ::constructor_new (inLexique, (operand_223056->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6005))).operator_concat (GGS_string ("GetIndex")), operand_223056->mMethodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6005)) COMMA_HERE) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6006)) ;
        }
      }
      {
        GGS_insertOrSearchMethodList::cEnumerator enumerator_223963 (var_cas_searchMethodList, true) ;
        const GGS_insertOrSearchMethodList::cElement * operand_223963 = NULL ;
        while (((operand_223963 = enumerator_223963.nextObject ()))) {
          macroValidPointer (operand_223963) ;
          GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_224138 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_224138 = NULL ;
            while (((operand_224138 = enumerator_224138.nextObject ()))) {
              macroValidPointer (operand_224138) ;
              var_cas_methodSignature.addAssign_operation (operand_224138->mAttributType, var_cas_outPassingMode) ;
            }
          }
          var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, operand_223963->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6015)) ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          var_cas_methodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_224538 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_224538 = NULL ;
            while (((operand_224538 = enumerator_224538.nextObject ()))) {
              macroValidPointer (operand_224538) ;
              var_cas_methodSignature.addAssign_operation (operand_224538->mAttributType, var_cas_outPassingMode) ;
            }
          }
          GGS_lstring  var_cas_insertKeyAndGetIndexName = GGS_lstring ::constructor_new (inLexique, (operand_223963->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6023))).operator_concat (GGS_string ("GetIndex")), operand_223963->mMethodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6023)) COMMA_HERE) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6024)) ;
        }
      }
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasMapType ::constructor_new (inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_EXmapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6035)) ;
      GGS_typeEntityToGenerate  var_cas_def = GGS_typeDefinitionTableAimplementer ::constructor_new (inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_cppClassName, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_tableMethodesBloc COMMA_HERE) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    case 3 : {
      GGS_lstring  var_cas_enumTypeName ;
      GGS_lstring  var_cas_checkFinalStateMethod ;
      switch (select_semantics_5F_parser_67 (inLexique)) {
        case 1 : {
          var_cas_enumTypeName = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
          var_cas_checkFinalStateMethod = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
          } break ;
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
          inLexique.assignFromAttribute_tokenString (var_cas_enumTypeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
          inLexique.assignFromAttribute_tokenString (var_cas_checkFinalStateMethod) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_insertOrSearchMethodList  var_cas_removeMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType = GGS_typeGalgas_lstring ::constructor_new (inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType = GGS_typeGalgas_luint ::constructor_new (inLexique COMMA_HERE) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap = GGS_mapModifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_EXmapMethodMap  var_cas_mapReaderMethodMap = GGS_EXmapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      { bool syntaxRepeat_68 = true ;
        while (syntaxRepeat_68) {
          switch (select_semantics_5F_parser_68 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_remove) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_5F_method_ (inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage.isBuilt ()) {
                ::routine_check_KL_escapeCharacters (inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (6091)) ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_227911 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_227911 = NULL ;
                while (((operand_227911 = enumerator_227911.nextObject ()))) {
                  macroValidPointer (operand_227911) ;
                  var_cas_methodSignature.addAssign_operation (operand_227911->mAttributType, var_cas_outPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6099)) ;
              var_cas_removeMethodList.addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6100)), GGS_bool (false), GGS_string ("")) ;
              const GGS_bool cond_228749 = (var_cas_getIndexMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6102))).operator_isNotEqual (GGS_string ("")) ;
              if (cond_228749.isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_228465 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_228465 = NULL ;
                  while (((operand_228465 = enumerator_228465.nextObject ()))) {
                    macroValidPointer (operand_228465) ;
                    var_cas_getIndexMethodSignature.addAssign_operation (operand_228465->mAttributType, var_cas_outPassingMode) ;
                  }
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (6109)) ;
                var_cas_removeMethodList.addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6110)), GGS_bool (true), GGS_string ("")) ;
              }
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_5F_method_ (inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage.isBuilt ()) {
                ::routine_check_KL_escapeCharacters (inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (6118)) ;
              }
              GGS_string var_cas_shadowErrorMessage ;
              switch (select_semantics_5F_parser_69 (inLexique)) {
                case 1 : {
                  var_cas_shadowErrorMessage = GGS_string ("") ;
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                  GGS_lstring  var_cas_shadowErrorMessageString ;
                  inLexique.assignFromAttribute_tokenString (var_cas_shadowErrorMessageString) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  if (var_cas_shadowErrorMessageString.isBuilt ()) {
                    ::routine_check_KL_escapeCharacters (inLexique,  var_cas_shadowErrorMessageString COMMA_SOURCE_FILE_AT_LINE (6126)) ;
                  }
                  var_cas_shadowErrorMessage = var_cas_shadowErrorMessageString.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6127)) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_229526 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_229526 = NULL ;
                while (((operand_229526 = enumerator_229526.nextObject ()))) {
                  macroValidPointer (operand_229526) ;
                  var_cas_methodSignature.addAssign_operation (operand_229526->mAttributType, var_cas_inPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6136)) ;
              var_cas_insertMethodList.addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6137)), GGS_bool (false), var_cas_shadowErrorMessage) ;
              const GGS_bool cond_230394 = (var_cas_getIndexMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6139))).operator_isNotEqual (GGS_string ("")) ;
              if (cond_230394.isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_230095 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_230095 = NULL ;
                  while (((operand_230095 = enumerator_230095.nextObject ()))) {
                    macroValidPointer (operand_230095) ;
                    var_cas_getIndexMethodSignature.addAssign_operation (operand_230095->mAttributType, var_cas_inPassingMode) ;
                  }
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (6146)) ;
                var_cas_insertMethodList.addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6147)), GGS_bool (true), var_cas_shadowErrorMessage) ;
              }
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_5F_method_ (inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage.isBuilt ()) {
                ::routine_check_K_escapeCharacters (inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (6155)) ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_230842 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_230842 = NULL ;
                while (((operand_230842 = enumerator_230842.nextObject ()))) {
                  macroValidPointer (operand_230842) ;
                  var_cas_methodSignature.addAssign_operation (operand_230842->mAttributType, var_cas_outPassingMode) ;
                }
              }
              var_cas_mapReaderMethodMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6163)) ;
              var_cas_searchMethodList.addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6164)), GGS_bool (false), GGS_string ("")) ;
              const GGS_bool cond_231707 = (var_cas_getIndexMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6166))).operator_isNotEqual (GGS_string ("")) ;
              if (cond_231707.isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_231426 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_231426 = NULL ;
                  while (((operand_231426 = enumerator_231426.nextObject ()))) {
                    macroValidPointer (operand_231426) ;
                    var_cas_getIndexMethodSignature.addAssign_operation (operand_231426->mAttributType, var_cas_outPassingMode) ;
                  }
                }
                var_cas_mapReaderMethodMap.modifier_insertKey (inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (6173)) ;
                var_cas_searchMethodList.addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6174)), GGS_bool (true), GGS_string ("")) ;
              }
              } break ;
            default :
              syntaxRepeat_68 = false ;
              break ;
          }
        }
      }
      {
        GGS_typeSemanticAttributesMap::cEnumerator enumerator_231792 (var_cas_tableAttributs, true) ;
        const GGS_typeSemanticAttributesMap::cElement * operand_231792 = NULL ;
        while (((operand_231792 = enumerator_231792.nextObject ()))) {
          macroValidPointer (operand_231792) ;
          const GGS_bool cond_232223 = operand_231792->mInfo.mHasSetter ;
          if (cond_232223.isBuiltAndTrue ()) {
            GGS_string var_cas_modifierName = ((GGS_string ("set")).operator_concat (operand_231792->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6180)).reader_stringByCapitalizingFirstCharacter ())).operator_concat (GGS_string ("ForKey")) ;
            GGS_L_EXsignature  var_cas_modifierSignature = GGS_L_EXsignature ::constructor_emptyList () ;
            var_cas_modifierSignature.addAssign_operation (operand_231792->mInfo.mAttributType, var_cas_inPassingMode) ;
            var_cas_modifierSignature.addAssign_operation (GGS_typeGalgas_string ::constructor_new (inLexique COMMA_HERE), var_cas_inPassingMode) ;
            var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_modifierName, GGS_location (inLexique) COMMA_HERE), var_cas_modifierSignature COMMA_SOURCE_FILE_AT_LINE (6184)) ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasMapType ::constructor_new (inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapReaderMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6196)) ;
      GGS_typeEntityToGenerate  var_cas_def = GGS_C_mapToImplement ::constructor_new (inLexique, var_cas_mapTypeName, var_cas_enumTypeName, var_cas_checkFinalStateMethod, var_cas_listeTousAttributsSemantiques, var_cas_tableAttributs, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_removeMethodList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i64_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mapTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mapTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_65 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      const GGS_bool cond_233745 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_mapTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6225)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_mapTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6225))))).operator_not () ;
      if (cond_233745.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedMapType ::constructor_new (inLexique, var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_mapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (6227)) ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
      GGS_lstring  var_cas_cppClassName ;
      inLexique.assignFromAttribute_tokenString (var_cas_cppClassName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList () ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable ::constructor_emptyMap (inLexique COMMA_HERE) ;
      { bool syntaxRepeat_66 = true ;
        while (syntaxRepeat_66) {
          switch (select_semantics_5F_parser_66 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_5F_map_5F_method_ (inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              var_cas_insertMethodList.addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6246)), GGS_bool (true), GGS_string ("")) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_5F_map_5F_method_ (inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              var_cas_searchMethodList.addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6253)), GGS_bool (true), GGS_string ("")) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_block) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              inLexique.assignFromAttribute_tokenString (var_cas_nomMethode) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
              GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
              nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
              nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              var_cas_tableMethodesBloc.modifier_insertKey (inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin COMMA_SOURCE_FILE_AT_LINE (6288)) ;
              } break ;
            default :
              syntaxRepeat_66 = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap = GGS_mapModifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType = GGS_typeGalgas_lstring ::constructor_new (inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType = GGS_typeGalgas_luint ::constructor_new (inLexique COMMA_HERE) ;
      {
        GGS_insertOrSearchMethodList::cEnumerator enumerator_236641 (var_cas_insertMethodList, true) ;
        const GGS_insertOrSearchMethodList::cElement * operand_236641 = NULL ;
        while (((operand_236641 = enumerator_236641.nextObject ()))) {
          macroValidPointer (operand_236641) ;
          GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_236818 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_236818 = NULL ;
            while (((operand_236818 = enumerator_236818.nextObject ()))) {
              macroValidPointer (operand_236818) ;
              var_cas_methodSignature.addAssign_operation (operand_236818->mAttributType, var_cas_inPassingMode) ;
            }
          }
          var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, operand_236641->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6316)) ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          var_cas_methodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_237220 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_237220 = NULL ;
            while (((operand_237220 = enumerator_237220.nextObject ()))) {
              macroValidPointer (operand_237220) ;
              var_cas_methodSignature.addAssign_operation (operand_237220->mAttributType, var_cas_inPassingMode) ;
            }
          }
          GGS_lstring  var_cas_insertKeyAndGetIndexName = GGS_lstring ::constructor_new (inLexique, (operand_236641->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6324))).operator_concat (GGS_string ("GetIndex")), operand_236641->mMethodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6324)) COMMA_HERE) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6325)) ;
        }
      }
      {
        GGS_insertOrSearchMethodList::cEnumerator enumerator_237548 (var_cas_searchMethodList, true) ;
        const GGS_insertOrSearchMethodList::cElement * operand_237548 = NULL ;
        while (((operand_237548 = enumerator_237548.nextObject ()))) {
          macroValidPointer (operand_237548) ;
          GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_237725 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_237725 = NULL ;
            while (((operand_237725 = enumerator_237725.nextObject ()))) {
              macroValidPointer (operand_237725) ;
              var_cas_methodSignature.addAssign_operation (operand_237725->mAttributType, var_cas_outPassingMode) ;
            }
          }
          var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, operand_237548->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6334)) ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
          var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          var_cas_methodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_238128 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_238128 = NULL ;
            while (((operand_238128 = enumerator_238128.nextObject ()))) {
              macroValidPointer (operand_238128) ;
              var_cas_methodSignature.addAssign_operation (operand_238128->mAttributType, var_cas_outPassingMode) ;
            }
          }
          GGS_lstring  var_cas_insertKeyAndGetIndexName = GGS_lstring ::constructor_new (inLexique, (operand_237548->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6342))).operator_concat (GGS_string ("GetIndex")), operand_237548->mMethodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6342)) COMMA_HERE) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6343)) ;
        }
      }
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasMapType ::constructor_new (inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_EXmapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6354)) ;
      GGS_TypeModel  var_cas_type = GGS_MapModel ::constructor_new (inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (inLexique, var_cas_mapTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (6356)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    case 3 : {
      switch (select_semantics_5F_parser_67 (inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType = GGS_typeGalgas_lstring ::constructor_new (inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType = GGS_typeGalgas_luint ::constructor_new (inLexique COMMA_HERE) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap = GGS_mapModifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_EXmapMethodMap  var_cas_mapReaderMethodMap = GGS_EXmapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      { bool syntaxRepeat_68 = true ;
        while (syntaxRepeat_68) {
          switch (select_semantics_5F_parser_68 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_remove) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_240259_0 ;
              nt_map_5F_method_ (inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_240259_0) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_240466 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_240466 = NULL ;
                while (((operand_240466 = enumerator_240466.nextObject ()))) {
                  macroValidPointer (operand_240466) ;
                  var_cas_methodSignature.addAssign_operation (operand_240466->mAttributType, var_cas_outPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6403)) ;
              const GGS_bool cond_241177 = (var_cas_getIndexMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6405))).operator_isNotEqual (GGS_string ("")) ;
              if (cond_241177.isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_240976 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_240976 = NULL ;
                  while (((operand_240976 = enumerator_240976.nextObject ()))) {
                    macroValidPointer (operand_240976) ;
                    var_cas_getIndexMethodSignature.addAssign_operation (operand_240976->mAttributType, var_cas_outPassingMode) ;
                  }
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (6412)) ;
              }
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_241329_0 ;
              nt_map_5F_method_ (inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_241329_0) ;
              switch (select_semantics_5F_parser_69 (inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_241622 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_241622 = NULL ;
                while (((operand_241622 = enumerator_241622.nextObject ()))) {
                  macroValidPointer (operand_241622) ;
                  var_cas_methodSignature.addAssign_operation (operand_241622->mAttributType, var_cas_inPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6431)) ;
              const GGS_bool cond_242332 = (var_cas_getIndexMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6433))).operator_isNotEqual (GGS_string ("")) ;
              if (cond_242332.isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_242131 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_242131 = NULL ;
                  while (((operand_242131 = enumerator_242131.nextObject ()))) {
                    macroValidPointer (operand_242131) ;
                    var_cas_getIndexMethodSignature.addAssign_operation (operand_242131->mAttributType, var_cas_inPassingMode) ;
                  }
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (6440)) ;
              }
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_242484_0 ;
              nt_map_5F_method_ (inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_242484_0) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_242697 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_242697 = NULL ;
                while (((operand_242697 = enumerator_242697.nextObject ()))) {
                  macroValidPointer (operand_242697) ;
                  var_cas_methodSignature.addAssign_operation (operand_242697->mAttributType, var_cas_outPassingMode) ;
                }
              }
              var_cas_mapReaderMethodMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (6454)) ;
              const GGS_bool cond_243446 = (var_cas_getIndexMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6456))).operator_isNotEqual (GGS_string ("")) ;
              if (cond_243446.isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList () ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_243247 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_243247 = NULL ;
                  while (((operand_243247 = enumerator_243247.nextObject ()))) {
                    macroValidPointer (operand_243247) ;
                    var_cas_getIndexMethodSignature.addAssign_operation (operand_243247->mAttributType, var_cas_outPassingMode) ;
                  }
                }
                var_cas_mapReaderMethodMap.modifier_insertKey (inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (6463)) ;
              }
              } break ;
            default :
              syntaxRepeat_68 = false ;
              break ;
          }
        }
      }
      {
        GGS_typeSemanticAttributesMap::cEnumerator enumerator_243531 (var_cas_tableAttributs, true) ;
        const GGS_typeSemanticAttributesMap::cElement * operand_243531 = NULL ;
        while (((operand_243531 = enumerator_243531.nextObject ()))) {
          macroValidPointer (operand_243531) ;
          const GGS_bool cond_243962 = operand_243531->mInfo.mHasSetter ;
          if (cond_243962.isBuiltAndTrue ()) {
            GGS_string var_cas_modifierName = ((GGS_string ("set")).operator_concat (operand_243531->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6469)).reader_stringByCapitalizingFirstCharacter ())).operator_concat (GGS_string ("ForKey")) ;
            GGS_L_EXsignature  var_cas_modifierSignature = GGS_L_EXsignature ::constructor_emptyList () ;
            var_cas_modifierSignature.addAssign_operation (operand_243531->mInfo.mAttributType, var_cas_inPassingMode) ;
            var_cas_modifierSignature.addAssign_operation (GGS_typeGalgas_string ::constructor_new (inLexique COMMA_HERE), var_cas_inPassingMode) ;
            var_cas_mapModifierMethodMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_modifierName, GGS_location (inLexique) COMMA_HERE), var_cas_modifierSignature COMMA_SOURCE_FILE_AT_LINE (6473)) ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasMapType ::constructor_new (inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapReaderMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6485)) ;
      GGS_TypeModel  var_cas_type = GGS_MapModel ::constructor_new (inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (inLexique, var_cas_mapTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (6487)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i64_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_map) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_65 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      { bool syntaxRepeat_66 = true ;
        while (syntaxRepeat_66) {
          switch (select_semantics_5F_parser_66 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
              nt_ex_5F_map_5F_method_parse (inLexique) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
              nt_ex_5F_map_5F_method_parse (inLexique) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_block) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
              nt_formal_5F_arguments_5F_list_parse (inLexique) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
              nt_formal_5F_arguments_5F_list_parse (inLexique) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_66 = false ;
              break ;
          }
        }
      }
      nt_attributes_5F_definition_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    case 3 : {
      switch (select_semantics_5F_parser_67 (inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      nt_attributes_5F_definition_5F_list_parse (inLexique) ;
      { bool syntaxRepeat_68 = true ;
        while (syntaxRepeat_68) {
          switch (select_semantics_5F_parser_68 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_remove) COMMA_HERE) ;
              nt_map_5F_method_parse (inLexique) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
              nt_map_5F_method_parse (inLexique) ;
              switch (select_semantics_5F_parser_69 (inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
              nt_map_5F_method_parse (inLexique) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_68 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'ex_map_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_ex_5F_map_5F_method_i65_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  &var_cas_nomMethode,
                                GGS_lstring  &var_cas_outMessage) {
  inLexique.assignFromAttribute_tokenString (var_cas_nomMethode) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outMessage) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_ex_5F_map_5F_method_i65_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'map_method'               *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_map_5F_method_i66_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  &var_cas_methodName,
                                GGS_lstring  &var_cas_getIndexMethodName,
                                GGS_lstring  &var_cas_outMessage) {
  inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  switch (select_semantics_5F_parser_70 (inLexique)) {
    case 1 : {
      var_cas_getIndexMethodName = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_getIndexMethodName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outMessage) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_map_5F_method_i66_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  switch (select_semantics_5F_parser_70 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_beginning_by_abstract'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i67_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_abstractMethod (inLexique COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  const GGS_lstring  var_cas_kKey = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6556))).operator_concat (GGS_string (":"))).operator_concat (var_cas_methodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6556))), var_cas_methodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6556)) COMMA_HERE) ;
  var_cas_ioSemanticContext.mCategoryMethodMap.modifier_insertKey (inLexique, var_cas_kKey, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6557)) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  const GGS_M_semanticsEntitiesForUse  temp_247033 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_247033.isBuilt ()) {
    temp_247033 (HERE)->method_searchKey (inLexique, var_cas_className, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (6560)) ;
  }
  GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6561)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (6561)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6562)) ;
  GGS_string var_cas_baseClassName ;
  GGS_typeSuperClassesMap  var_cas_ancestorClassesMap = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6565)) ;
  {
    GGS_typeSuperClassesMap::cEnumerator enumerator_247502 (var_cas_ancestorClassesMap, true) ;
    const GGS_typeSuperClassesMap::cElement * operand_247502 = NULL ;
    while (((operand_247502 = enumerator_247502.nextObject ()))) {
      macroValidPointer (operand_247502) ;
      GGS_string var_cas_keyClassMethod = ((operand_247502->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6568))).operator_concat (GGS_string (":"))).operator_concat (var_cas_methodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6568))) ;
      const GGS_bool cond_247797 = var_cas_ioSemanticContext.reader_mCategoryMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6569)).reader_hasKey (var_cas_keyClassMethod) ;
      if (cond_247797.isBuiltAndTrue ()) {
        var_cas_methodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this method is already defined for super class @")).operator_concat (operand_247502->mKey)).operator_concat (GGS_string (": you should use the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (6572)) ;
      }
    }
  }
  var_cas_baseClassName = var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6574)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_listeEntitesAengendrer.addAssign_operation (GGS_categoryMethodToImplement ::constructor_new (inLexique, var_cas_categoryMethodKind, var_cas_baseClassName, var_cas_className, var_cas_methodName, var_cas_listeTypeEtNomsArguments, var_cas_instructionList, var_cas_methodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6585)) COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i67_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_abstractMethod (inLexique COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_lstring  var_cas_key = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6613))).operator_concat (GGS_string (":"))).operator_concat (var_cas_methodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6613))), var_cas_methodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6613)) COMMA_HERE) ;
  const GGS_bool cond_249431 = (var_cas_ioSemanticContext.reader_mCategoryMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6614)).reader_hasKey (var_cas_key.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6614)))).operator_not () ;
  if (cond_249431.isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mCategoryMethodMap.modifier_insertKey (inLexique, var_cas_key, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6615)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i67_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i68_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind ;
  switch (select_semantics_5F_parser_71 (inLexique)) {
    case 1 : {
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_baseMethod (inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  const GGS_lstring  var_cas_kKey = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6658))).operator_concat (GGS_string (":"))).operator_concat (var_cas_methodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6658))), var_cas_methodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6658)) COMMA_HERE) ;
  var_cas_ioSemanticContext.mCategoryMethodMap.modifier_insertKey (inLexique, var_cas_kKey, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6659)) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  const GGS_M_semanticsEntitiesForUse  temp_251382 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_251382.isBuilt ()) {
    temp_251382 (HERE)->method_searchKey (inLexique, var_cas_className, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (6662)) ;
  }
  GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6663)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (6663)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6664)) ;
  GGS_string var_cas_baseClassName ;
  GGS_typeSuperClassesMap  var_cas_ancestorClassesMap = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6667)) ;
  const GGS_bool cond_252932 = (var_cas_categoryMethodKind).operator_isEqual (GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_HERE)) ;
  if (cond_252932.isBuiltAndTrue ()) {
    var_cas_baseClassName = GGS_string ("") ;
    GGS_bool var_cas_found = GGS_bool (false) ;
    {
      GGS_typeSuperClassesMap::cEnumerator enumerator_251976 (var_cas_ancestorClassesMap, true) ;
      const GGS_typeSuperClassesMap::cElement * operand_251976 = NULL ;
      while (((operand_251976 = enumerator_251976.nextObject ()))
          && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
        macroValidPointer (operand_251976) ;
        GGS_string var_cas_keyClassMethod = ((operand_251976->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6672))).operator_concat (GGS_string (":"))).operator_concat (var_cas_methodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6672))) ;
        var_cas_baseClassName = operand_251976->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6673)) ;
        var_cas_found = var_cas_ioSemanticContext.reader_mCategoryMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6674)).reader_hasKey (var_cas_keyClassMethod) ;
        const GGS_bool cond_252712 = var_cas_found ;
        if (cond_252712.isBuiltAndTrue ()) {
          GGS_categoryMethodKind var_cas_localCategoryMethodKind ;
          GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
          const GGS_EXcategoryMethodMap  temp_252381 = var_cas_ioSemanticContext.reader_mCategoryMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6678)) ;
          if (temp_252381.isBuilt ()) {
            temp_252381 (HERE)->method_searchKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_keyClassMethod, GGS_location (inLexique) COMMA_HERE), var_cas_localCategoryMethodKind, var_cas_listeDeTypesPrecedenteDeclaration COMMA_SOURCE_FILE_AT_LINE (6678)) ;
          }
          ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (6679)) ;
          var_cas_found = (var_cas_localCategoryMethodKind).operator_isNotEqual (GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_HERE)) ;
        }
      }
    }
    const GGS_bool cond_252920 = (var_cas_found).operator_not () ;
    if (cond_252920.isBuiltAndTrue ()) {
      var_cas_methodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this overriden method is not defined in any super class of @")).operator_concat (var_cas_className)).operator_concat (GGS_string (": you should remove the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (6690)) ;
    }
  }else if (cond_252932.isBuiltAndFalse ()) {
    {
      GGS_typeSuperClassesMap::cEnumerator enumerator_253009 (var_cas_ancestorClassesMap, true) ;
      const GGS_typeSuperClassesMap::cElement * operand_253009 = NULL ;
      while (((operand_253009 = enumerator_253009.nextObject ()))) {
        macroValidPointer (operand_253009) ;
        GGS_string var_cas_keyClassMethod = ((operand_253009->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6693))).operator_concat (GGS_string (":"))).operator_concat (var_cas_methodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6693))) ;
        const GGS_bool cond_253313 = var_cas_ioSemanticContext.reader_mCategoryMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6694)).reader_hasKey (var_cas_keyClassMethod) ;
        if (cond_253313.isBuiltAndTrue ()) {
          var_cas_methodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this method is already defined for super class @")).operator_concat (operand_253009->mKey)).operator_concat (GGS_string (": you should use the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (6697)) ;
        }
      }
    }
    var_cas_baseClassName = var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6699)) ;
  }
  {
    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_253466 (var_cas_classType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (6702)), true) ;
    const GGS_typeListeAttributsSemantiques::cElement * operand_253466 = NULL ;
    while (((operand_253466 = enumerator_253466.nextObject ()))) {
      macroValidPointer (operand_253466) ;
      GGS_typeCplusPlusName  var_cas_cppName = GGS_typeOperandName ::constructor_new (inLexique, var_cas_methodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6704)), operand_253466->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6705)), GGS_bool (false), GGS_bool (false) COMMA_HERE) ;
      var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, operand_253466->mAttributeName, operand_253466->mAttributType, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (6709)) ;
    }
  }
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("self"), GGS_location (inLexique) COMMA_HERE), var_cas_classType, GGS_typeCppThisInCategoryName ::constructor_new (inLexique, var_cas_methodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6712)) COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (6712)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_instructionList, var_cas_ioSemanticContext) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (GGS_categoryMethodToImplement ::constructor_new (inLexique, var_cas_categoryMethodKind, var_cas_baseClassName, var_cas_className, var_cas_methodName, var_cas_listeTypeEtNomsArguments, var_cas_instructionList, var_cas_methodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6734)) COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i68_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind ;
  switch (select_semantics_5F_parser_71 (inLexique)) {
    case 1 : {
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_baseMethod (inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_lstring  var_cas_key = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6768))).operator_concat (GGS_string (":"))).operator_concat (var_cas_methodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6768))), var_cas_methodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6768)) COMMA_HERE) ;
  const GGS_bool cond_255983 = (var_cas_ioSemanticContext.reader_mCategoryMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6769)).reader_hasKey (var_cas_key.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6769)))).operator_not () ;
  if (cond_255983.isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mCategoryMethodMap.modifier_insertKey (inLexique, var_cas_key, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6770)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i68_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  switch (select_semantics_5F_parser_71 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_beginning_by_abstract'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i69_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_abstractMethod (inLexique COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_readerName ;
  inLexique.assignFromAttribute_tokenString (var_cas_readerName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_returnedTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_returnedTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_returnedVariableName ;
  inLexique.assignFromAttribute_tokenString (var_cas_returnedVariableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_returnedCppVarName = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_returnedVariableName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6816)), var_cas_returnedVariableName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6816)) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  const GGS_M_semanticsEntitiesForUse  temp_257935 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_257935.isBuilt ()) {
    temp_257935 (HERE)->method_searchKey (inLexique, var_cas_returnedTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (6818)) ;
  }
  GGS_AC_galgasType  var_cas_returnedType = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6819)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (6819)) ;
  const GGS_lstring  var_cas_kKey = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6821))).operator_concat (GGS_string (":"))).operator_concat (var_cas_readerName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6821))), var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6821)) COMMA_HERE) ;
  var_cas_ioSemanticContext.mCategoryReaderMap.modifier_insertKey (inLexique, var_cas_kKey, var_cas_categoryMethodKind, var_cas_listeDeTypes, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (6822)) ;
  const GGS_M_semanticsEntitiesForUse  temp_258460 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_258460.isBuilt ()) {
    temp_258460 (HERE)->method_searchKey (inLexique, var_cas_className, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (6824)) ;
  }
  GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6825)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (6825)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6826)) ;
  GGS_string var_cas_baseClassName ;
  GGS_typeSuperClassesMap  var_cas_ancestorClassesMap = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6829)) ;
  {
    GGS_typeSuperClassesMap::cEnumerator enumerator_258929 (var_cas_ancestorClassesMap, true) ;
    const GGS_typeSuperClassesMap::cElement * operand_258929 = NULL ;
    while (((operand_258929 = enumerator_258929.nextObject ()))) {
      macroValidPointer (operand_258929) ;
      GGS_string var_cas_keyClassMethod = ((operand_258929->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6832))).operator_concat (GGS_string (":"))).operator_concat (var_cas_readerName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6832))) ;
      const GGS_bool cond_259224 = var_cas_ioSemanticContext.reader_mCategoryReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6833)).reader_hasKey (var_cas_keyClassMethod) ;
      if (cond_259224.isBuiltAndTrue ()) {
        var_cas_readerName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this reader is already defined for super class @")).operator_concat (operand_258929->mKey)).operator_concat (GGS_string (": you should use the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (6836)) ;
      }
    }
  }
  var_cas_baseClassName = var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6838)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  var_cas_listeEntitesAengendrer.addAssign_operation (GGS_categoryReaderToImplement ::constructor_new (inLexique, var_cas_categoryMethodKind, var_cas_baseClassName, var_cas_className, var_cas_readerName, var_cas_listeTypeEtNomsArguments, var_cas_instructionList, var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6849)), var_cas_returnedType, var_cas_returnedCppVarName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i69_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_abstractMethod (inLexique COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_readerName ;
  inLexique.assignFromAttribute_tokenString (var_cas_readerName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_returnedTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_returnedTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  const GGS_M_semanticsEntitiesForUse  temp_260851 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_260851.isBuilt ()) {
    temp_260851 (HERE)->method_searchKey (inLexique, var_cas_returnedTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (6884)) ;
  }
  GGS_AC_galgasType  var_cas_returnedType = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6885)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (6885)) ;
  GGS_lstring  var_cas_key = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6887))).operator_concat (GGS_string (":"))).operator_concat (var_cas_readerName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6887))), var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6887)) COMMA_HERE) ;
  const GGS_bool cond_261342 = (var_cas_ioSemanticContext.reader_mCategoryReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6888)).reader_hasKey (var_cas_key.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6888)))).operator_not () ;
  if (cond_261342.isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mCategoryReaderMap.modifier_insertKey (inLexique, var_cas_key, var_cas_categoryMethodKind, var_cas_listeDeTypes, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (6889)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i69_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_input_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i70_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind ;
  switch (select_semantics_5F_parser_72 (inLexique)) {
    case 1 : {
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_baseMethod (inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_readerName ;
  inLexique.assignFromAttribute_tokenString (var_cas_readerName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_returnedTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_returnedTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  const GGS_M_semanticsEntitiesForUse  temp_263156 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_263156.isBuilt ()) {
    temp_263156 (HERE)->method_searchKey (inLexique, var_cas_returnedTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (6936)) ;
  }
  GGS_AC_galgasType  var_cas_returnedType = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6937)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (6937)) ;
  GGS_lstring  var_cas_returnedVariableName ;
  inLexique.assignFromAttribute_tokenString (var_cas_returnedVariableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_returnedCppVarName = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_returnedVariableName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6940)), var_cas_returnedVariableName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6940)) COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertOutArgument (inLexique, var_cas_returnedVariableName, var_cas_returnedType, var_cas_returnedCppVarName COMMA_SOURCE_FILE_AT_LINE (6941)) ;
  const GGS_lstring  var_cas_kKey = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6943))).operator_concat (GGS_string (":"))).operator_concat (var_cas_readerName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6943))), var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6943)) COMMA_HERE) ;
  var_cas_ioSemanticContext.mCategoryReaderMap.modifier_insertKey (inLexique, var_cas_kKey, var_cas_categoryMethodKind, var_cas_listeDeTypes, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (6944)) ;
  const GGS_M_semanticsEntitiesForUse  temp_264034 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_264034.isBuilt ()) {
    temp_264034 (HERE)->method_searchKey (inLexique, var_cas_className, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (6946)) ;
  }
  GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6947)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (6947)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (6948)) ;
  GGS_string var_cas_baseClassName ;
  GGS_typeSuperClassesMap  var_cas_ancestorClassesMap = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6951)) ;
  const GGS_bool cond_265927 = (var_cas_categoryMethodKind).operator_isEqual (GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_HERE)) ;
  if (cond_265927.isBuiltAndTrue ()) {
    var_cas_baseClassName = GGS_string ("") ;
    GGS_bool var_cas_found = GGS_bool (false) ;
    {
      GGS_typeSuperClassesMap::cEnumerator enumerator_264628 (var_cas_ancestorClassesMap, true) ;
      const GGS_typeSuperClassesMap::cElement * operand_264628 = NULL ;
      while (((operand_264628 = enumerator_264628.nextObject ()))
          && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
        macroValidPointer (operand_264628) ;
        GGS_string var_cas_keyClassMethod = ((operand_264628->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6956))).operator_concat (GGS_string (":"))).operator_concat (var_cas_readerName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6956))) ;
        var_cas_baseClassName = operand_264628->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6957)) ;
        var_cas_found = var_cas_ioSemanticContext.reader_mCategoryReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6958)).reader_hasKey (var_cas_keyClassMethod) ;
        const GGS_bool cond_265707 = var_cas_found ;
        if (cond_265707.isBuiltAndTrue ()) {
          GGS_categoryMethodKind var_cas_localCategoryMethodKind ;
          GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
          GGS_AC_galgasType  var_cas_returnedTypePreviousDeclaration ;
          const GGS_EXcategoryReaderMap  temp_265090 = var_cas_ioSemanticContext.reader_mCategoryReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6963)) ;
          if (temp_265090.isBuilt ()) {
            temp_265090 (HERE)->method_searchKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_keyClassMethod, GGS_location (inLexique) COMMA_HERE), var_cas_localCategoryMethodKind, var_cas_listeDeTypesPrecedenteDeclaration, var_cas_returnedTypePreviousDeclaration COMMA_SOURCE_FILE_AT_LINE (6963)) ;
          }
          ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6972)) COMMA_SOURCE_FILE_AT_LINE (6969)) ;
          ::routine_checkAssignmentTypesCompatibility (inLexique,  var_cas_returnedType,  var_cas_returnedTypePreviousDeclaration,  var_cas_returnedVariableName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (6977)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (6974)) ;
          var_cas_found = (var_cas_localCategoryMethodKind).operator_isNotEqual (GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_HERE)) ;
        }
      }
    }
    const GGS_bool cond_265915 = (var_cas_found).operator_not () ;
    if (cond_265915.isBuiltAndTrue ()) {
      var_cas_readerName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this overriden reader is not defined in any super class of @")).operator_concat (var_cas_className)).operator_concat (GGS_string (": you should remove the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (6986)) ;
    }
  }else if (cond_265927.isBuiltAndFalse ()) {
    {
      GGS_typeSuperClassesMap::cEnumerator enumerator_266004 (var_cas_ancestorClassesMap, true) ;
      const GGS_typeSuperClassesMap::cElement * operand_266004 = NULL ;
      while (((operand_266004 = enumerator_266004.nextObject ()))) {
        macroValidPointer (operand_266004) ;
        GGS_string var_cas_keyClassMethod = ((operand_266004->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6989))).operator_concat (GGS_string (":"))).operator_concat (var_cas_readerName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6989))) ;
        const GGS_bool cond_266308 = var_cas_ioSemanticContext.reader_mCategoryReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (6990)).reader_hasKey (var_cas_keyClassMethod) ;
        if (cond_266308.isBuiltAndTrue ()) {
          var_cas_readerName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this reader is already defined for super class @")).operator_concat (operand_266004->mKey)).operator_concat (GGS_string (": you should use the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (6993)) ;
        }
      }
    }
    var_cas_baseClassName = var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (6995)) ;
  }
  {
    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_266461 (var_cas_classType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (6998)), true) ;
    const GGS_typeListeAttributsSemantiques::cElement * operand_266461 = NULL ;
    while (((operand_266461 = enumerator_266461.nextObject ()))) {
      macroValidPointer (operand_266461) ;
      GGS_typeCplusPlusName  var_cas_cppName = GGS_typeOperandName ::constructor_new (inLexique, var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7000)), operand_266461->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7001)), GGS_bool (false), GGS_bool (false) COMMA_HERE) ;
      var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, operand_266461->mAttributeName, operand_266461->mAttributType, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (7005)) ;
    }
  }
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("self"), GGS_location (inLexique) COMMA_HERE), var_cas_classType, GGS_typeCppThisInCategoryName ::constructor_new (inLexique, var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7008)) COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (7008)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList () ;
  nt_semantic_5F_instructions_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_instructionList, var_cas_ioSemanticContext) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (GGS_categoryReaderToImplement ::constructor_new (inLexique, var_cas_categoryMethodKind, var_cas_baseClassName, var_cas_className, var_cas_readerName, var_cas_listeTypeEtNomsArguments, var_cas_instructionList, var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7030)), var_cas_returnedType, var_cas_returnedCppVarName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i70_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind ;
  switch (select_semantics_5F_parser_72 (inLexique)) {
    case 1 : {
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_baseMethod (inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_readerName ;
  inLexique.assignFromAttribute_tokenString (var_cas_readerName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_returnedTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_returnedTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  const GGS_M_semanticsEntitiesForUse  temp_268970 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_268970.isBuilt ()) {
    temp_268970 (HERE)->method_searchKey (inLexique, var_cas_returnedTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (7071)) ;
  }
  GGS_AC_galgasType  var_cas_returnedType = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7072)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (7072)) ;
  GGS_lstring  var_cas_key = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7074))).operator_concat (GGS_string (":"))).operator_concat (var_cas_readerName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7074))), var_cas_readerName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7074)) COMMA_HERE) ;
  const GGS_bool cond_269461 = (var_cas_ioSemanticContext.reader_mCategoryReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7075)).reader_hasKey (var_cas_key.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7075)))).operator_not () ;
  if (cond_269461.isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mCategoryReaderMap.modifier_insertKey (inLexique, var_cas_key, var_cas_categoryMethodKind, var_cas_listeDeTypes, var_cas_returnedType COMMA_SOURCE_FILE_AT_LINE (7076)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i70_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  switch (select_semantics_5F_parser_72 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_input_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  nt_semantic_5F_instructions_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_beginning_by_abstract'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i71_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_abstractMethod (inLexique COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_templateName ;
  inLexique.assignFromAttribute_tokenString (var_cas_templateName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_lstring  var_cas_kKey = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7119))).operator_concat (GGS_string (":"))).operator_concat (var_cas_templateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7119))), var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7119)) COMMA_HERE) ;
  var_cas_ioSemanticContext.mCategoryTemplateMap.modifier_insertKey (inLexique, var_cas_kKey, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (7120)) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  const GGS_M_semanticsEntitiesForUse  temp_271447 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_271447.isBuilt ()) {
    temp_271447 (HERE)->method_searchKey (inLexique, var_cas_className, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (7123)) ;
  }
  GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7124)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (7124)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7125)) ;
  GGS_string var_cas_baseClassName ;
  GGS_typeSuperClassesMap  var_cas_ancestorClassesMap = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7128)) ;
  {
    GGS_typeSuperClassesMap::cEnumerator enumerator_271916 (var_cas_ancestorClassesMap, true) ;
    const GGS_typeSuperClassesMap::cElement * operand_271916 = NULL ;
    while (((operand_271916 = enumerator_271916.nextObject ()))) {
      macroValidPointer (operand_271916) ;
      GGS_string var_cas_keyClassMethod = ((operand_271916->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7131))).operator_concat (GGS_string (":"))).operator_concat (var_cas_templateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7131))) ;
      const GGS_bool cond_272219 = var_cas_ioSemanticContext.reader_mCategoryTemplateMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7132)).reader_hasKey (var_cas_keyClassMethod) ;
      if (cond_272219.isBuiltAndTrue ()) {
        var_cas_templateName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this template is already defined for super class @")).operator_concat (operand_271916->mKey)).operator_concat (GGS_string (": you should use the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (7135)) ;
      }
    }
  }
  var_cas_baseClassName = var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7137)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (GGS_categoryTemplateToImplement ::constructor_new (inLexique, var_cas_categoryMethodKind, var_cas_baseClassName, var_cas_className, var_cas_templateName, var_cas_listeTypeEtNomsArguments, GGS_templateInstructionList ::constructor_emptyList (), var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7147)), GGS_bool (false) COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i71_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_abstractMethod (inLexique COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_templateName ;
  inLexique.assignFromAttribute_tokenString (var_cas_templateName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_lstring  var_cas_key = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7177))).operator_concat (GGS_string (":"))).operator_concat (var_cas_templateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7177))), var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7177)) COMMA_HERE) ;
  const GGS_bool cond_273923 = (var_cas_ioSemanticContext.reader_mCategoryTemplateMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7178)).reader_hasKey (var_cas_key.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7178)))).operator_not () ;
  if (cond_273923.isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mCategoryTemplateMap.modifier_insertKey (inLexique, var_cas_key, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (7179)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_beginning_5F_by_5F_abstract_i71_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_input_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i72_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind ;
  switch (select_semantics_5F_parser_73 (inLexique)) {
    case 1 : {
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_baseMethod (inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_templateName ;
  inLexique.assignFromAttribute_tokenString (var_cas_templateName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  var_cas_templateName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("obsolete construct") COMMA_SOURCE_FILE_AT_LINE (7209)) ;
  GGS_typeVariablesMap  var_cas_variableMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_variableMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_templateVariableMap  var_cas_categoryTemplateVariableMap = GGS_templateVariableMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  const GGS_lstring  var_cas_kKey = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7225))).operator_concat (GGS_string (":"))).operator_concat (var_cas_templateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7225))), var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7225)) COMMA_HERE) ;
  var_cas_ioSemanticContext.mCategoryTemplateMap.modifier_insertKey (inLexique, var_cas_kKey, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (7226)) ;
  GGS_AC_semanticsEntity  var_cas_theEntity ;
  const GGS_M_semanticsEntitiesForUse  temp_276041 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_276041.isBuilt ()) {
    temp_276041 (HERE)->method_searchKey (inLexique, var_cas_className, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (7229)) ;
  }
  GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_theEntity.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7230)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (7230)) ;
  GGS_typeGalgasClassType  var_cas_classType = GGS_typeGalgasClassType::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_className COMMA_SOURCE_FILE_AT_LINE (7231)) ;
  GGS_string var_cas_baseClassName ;
  GGS_typeSuperClassesMap  var_cas_ancestorClassesMap = var_cas_classType.reader_mAncestorClassesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7234)) ;
  const GGS_bool cond_277662 = (var_cas_categoryMethodKind).operator_isEqual (GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_HERE)) ;
  if (cond_277662.isBuiltAndTrue ()) {
    var_cas_baseClassName = GGS_string ("") ;
    GGS_bool var_cas_found = GGS_bool (false) ;
    {
      GGS_typeSuperClassesMap::cEnumerator enumerator_276635 (var_cas_ancestorClassesMap, true) ;
      const GGS_typeSuperClassesMap::cElement * operand_276635 = NULL ;
      while (((operand_276635 = enumerator_276635.nextObject ()))
          && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
        macroValidPointer (operand_276635) ;
        GGS_string var_cas_keyClassMethod = ((operand_276635->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7239))).operator_concat (GGS_string (":"))).operator_concat (var_cas_templateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7239))) ;
        var_cas_baseClassName = operand_276635->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7240)) ;
        var_cas_found = var_cas_ioSemanticContext.reader_mCategoryTemplateMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7241)).reader_hasKey (var_cas_keyClassMethod) ;
        const GGS_bool cond_277438 = var_cas_found ;
        if (cond_277438.isBuiltAndTrue ()) {
          GGS_categoryMethodKind var_cas_localCategoryMethodKind ;
          GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
          const GGS_EXcategoryTemplateMap  temp_277046 = var_cas_ioSemanticContext.reader_mCategoryTemplateMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7245)) ;
          if (temp_277046.isBuilt ()) {
            temp_277046 (HERE)->method_searchKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_keyClassMethod, GGS_location (inLexique) COMMA_HERE), var_cas_localCategoryMethodKind, var_cas_listeDeTypesPrecedenteDeclaration COMMA_SOURCE_FILE_AT_LINE (7245)) ;
          }
          ::routine_verifierCompatibiliteSignatures (inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7253)) COMMA_SOURCE_FILE_AT_LINE (7250)) ;
          var_cas_found = (var_cas_localCategoryMethodKind).operator_isNotEqual (GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_HERE)) ;
        }
      }
    }
    const GGS_bool cond_277650 = (var_cas_found).operator_not () ;
    if (cond_277650.isBuiltAndTrue ()) {
      var_cas_templateName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this overriden template is not defined in any super class of @")).operator_concat (var_cas_className)).operator_concat (GGS_string (": you should remove the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (7261)) ;
    }
  }else if (cond_277662.isBuiltAndFalse ()) {
    {
      GGS_typeSuperClassesMap::cEnumerator enumerator_277739 (var_cas_ancestorClassesMap, true) ;
      const GGS_typeSuperClassesMap::cElement * operand_277739 = NULL ;
      while (((operand_277739 = enumerator_277739.nextObject ()))) {
        macroValidPointer (operand_277739) ;
        GGS_string var_cas_keyClassMethod = ((operand_277739->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7264))).operator_concat (GGS_string (":"))).operator_concat (var_cas_templateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7264))) ;
        const GGS_bool cond_278051 = var_cas_ioSemanticContext.reader_mCategoryTemplateMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7265)).reader_hasKey (var_cas_keyClassMethod) ;
        if (cond_278051.isBuiltAndTrue ()) {
          var_cas_templateName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this template is already defined for super class @")).operator_concat (operand_277739->mKey)).operator_concat (GGS_string (": you should use the 'override' key word")) COMMA_SOURCE_FILE_AT_LINE (7268)) ;
        }
      }
    }
    var_cas_baseClassName = var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7270)) ;
  }
  {
    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_278204 (var_cas_classType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (7273)), true) ;
    const GGS_typeListeAttributsSemantiques::cElement * operand_278204 = NULL ;
    while (((operand_278204 = enumerator_278204.nextObject ()))) {
      macroValidPointer (operand_278204) ;
      GGS_typeCplusPlusName  var_cas_cppName = GGS_typeOperandName ::constructor_new (inLexique, var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7275)), operand_278204->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7276)), GGS_bool (false), GGS_bool (false) COMMA_HERE) ;
      var_cas_categoryTemplateVariableMap.modifier_insertKey (inLexique, operand_278204->mAttributeName, operand_278204->mAttributType, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (7280)) ;
    }
  }
  var_cas_categoryTemplateVariableMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("self"), GGS_location (inLexique) COMMA_HERE), var_cas_classType, GGS_typeCppThisInCategoryName ::constructor_new (inLexique, var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7283)) COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (7283)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_string var_cas_templateString = GGS_string ("") ;
  { bool syntaxRepeat_74 = true ;
    while (syntaxRepeat_74) {
        GGS_lstring  var_cas_s ;
        inLexique.assignFromAttribute_tokenString (var_cas_s) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
        var_cas_templateString.dotAssign_operation (var_cas_s.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7289))) ;
      switch (select_semantics_5F_parser_74 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_74 = false ;
          break ;
      }
    }
  }
  GGS_templateInstructionList  var_cas_templateInstructionList ;
  GGS_bool var_cas_usesColumnMarker ;
  C_Grammar_galgasTemplateGrammar::_performSourceStringParsing_ (inLexique,
                                  NULL,
                                  var_cas_templateString,
                                  var_cas_categoryTemplateVariableMap,
                                  var_cas_ioSemanticContext,
                                  var_cas_ioComponentSemanticsEntitiesMap,
                                  var_cas_inOptionsComponentsMapForUse,
                                  var_cas_templateInstructionList,
                                  var_cas_usesColumnMarker
                                  COMMA_SOURCE_FILE_AT_LINE (7294)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (GGS_categoryTemplateToImplement ::constructor_new (inLexique, var_cas_categoryMethodKind, var_cas_baseClassName, var_cas_className, var_cas_templateName, var_cas_listeTypeEtNomsArguments, var_cas_templateInstructionList, var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7312)), var_cas_usesColumnMarker COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i72_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_categoryMethodKind var_cas_categoryMethodKind ;
  switch (select_semantics_5F_parser_73 (inLexique)) {
    case 1 : {
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_baseMethod (inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      var_cas_categoryMethodKind = GGS_categoryMethodKind::constructor_overridingMethod (inLexique COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  GGS_lstring  var_cas_className ;
  inLexique.assignFromAttribute_tokenString (var_cas_className) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_templateName ;
  inLexique.assignFromAttribute_tokenString (var_cas_templateName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
  nt_formal_5F_input_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_lstring  var_cas_key = GGS_lstring ::constructor_new (inLexique, ((var_cas_className.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7348))).operator_concat (GGS_string (":"))).operator_concat (var_cas_templateName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7348))), var_cas_templateName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7348)) COMMA_HERE) ;
  const GGS_bool cond_281017 = (var_cas_ioSemanticContext.reader_mCategoryTemplateMap (inLexique COMMA_SOURCE_FILE_AT_LINE (7349)).reader_hasKey (var_cas_key.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7349)))).operator_not () ;
  if (cond_281017.isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mCategoryTemplateMap.modifier_insertKey (inLexique, var_cas_key, var_cas_categoryMethodKind, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (7350)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  { bool syntaxRepeat_74 = true ;
    while (syntaxRepeat_74) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
      switch (select_semantics_5F_parser_74 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_74 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i72_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  switch (select_semantics_5F_parser_73 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_input_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  { bool syntaxRepeat_74 = true ;
    while (syntaxRepeat_74) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
      switch (select_semantics_5F_parser_74 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_74 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i73_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_list) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_75 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      const GGS_bool cond_282325 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_listTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7383)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_listTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7383))))).operator_not () ;
      if (cond_282325.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedListType ::constructor_new (inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (7385)) ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      GGS_L_EXsignature  var_cas_inputSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_283017 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_283017 = NULL ;
        while (((operand_283017 = enumerator_283017.nextObject ()))) {
          macroValidPointer (operand_283017) ;
          var_cas_extractSignature.addAssign_operation (operand_283017->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)) ;
          var_cas_inputSignature.addAssign_operation (operand_283017->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentIn (inLexique COMMA_HERE)) ;
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasListType ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature, var_cas_inputSignature COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7417)) ;
      GGS_typeEntityToGenerate  var_cas_def = GGS_C_listTypeToImplement ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i73_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_list) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_75 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      const GGS_bool cond_284458 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_listTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7438)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_listTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7438))))).operator_not () ;
      if (cond_284458.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedListType ::constructor_new (inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (7440)) ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      GGS_L_EXsignature  var_cas_inputSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_285150 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_285150 = NULL ;
        while (((operand_285150 = enumerator_285150.nextObject ()))) {
          macroValidPointer (operand_285150) ;
          var_cas_extractSignature.addAssign_operation (operand_285150->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)) ;
          var_cas_inputSignature.addAssign_operation (operand_285150->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentIn (inLexique COMMA_HERE)) ;
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasListType ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature, var_cas_inputSignature COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7472)) ;
      GGS_TypeModel  var_cas_t = GGS_ListModel ::constructor_new (inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (7474)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i73_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_list) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_75 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      nt_attributes_5F_definition_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i74_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_sortedlist) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_76 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      const GGS_bool cond_287008 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_listTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7498)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_listTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7498))))).operator_not () ;
      if (cond_287008.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedSortedListType ::constructor_new (inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (7500)) ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_287652 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_287652 = NULL ;
        while (((operand_287652 = enumerator_287652.nextObject ()))) {
          macroValidPointer (operand_287652) ;
          var_cas_extractSignature.addAssign_operation (operand_287652->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)) ;
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasSortedListType ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_EXsortDescriptorList  var_cas_sortDescriptorList = GGS_EXsortDescriptorList ::constructor_emptyList () ;
      GGS_stringset  var_cas_usedSortedAttributes = GGS_stringset ::constructor_emptySet () ;
      { bool syntaxRepeat_77 = true ;
        while (syntaxRepeat_77) {
            GGS_lstring  var_cas_sortAttribute ;
            inLexique.assignFromAttribute_tokenString (var_cas_sortAttribute) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            const GGS_bool cond_288340 = var_cas_usedSortedAttributes.reader_hasKey (var_cas_sortAttribute.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7535))) ;
            if (cond_288340.isBuiltAndTrue ()) {
              var_cas_sortAttribute.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this attribute is already used in sort list") COMMA_SOURCE_FILE_AT_LINE (7537)) ;
            }else if (cond_288340.isBuiltAndFalse ()) {
              GGS_AC_galgasType  var_cas_definitionType ;
              GGS_bool automatic_var_288452_0 ;
              GGS_bool automatic_var_288452_1 ;
              const GGS_typeSemanticAttributesMap  temp_288414 = var_cas_tableAttributs ;
              if (temp_288414.isBuilt ()) {
                temp_288414 (HERE)->method_searchKey (inLexique, var_cas_sortAttribute, var_cas_definitionType, automatic_var_288452_0, automatic_var_288452_1 COMMA_SOURCE_FILE_AT_LINE (7539)) ;
              }
              const GGS_AC_galgasType  temp_288518 = var_cas_definitionType ;
              if (temp_288518.isBuilt ()) {
                temp_288518 (HERE)->method_acceptToBeSortKeyInSortedListDefinition (inLexique, var_cas_sortAttribute COMMA_SOURCE_FILE_AT_LINE (7540)) ;
              }
              var_cas_usedSortedAttributes.addAssign_operation (var_cas_sortAttribute.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7541))) ;
            }
            GGS_bool var_cas_ascendingOrder ;
            switch (select_semantics_5F_parser_78 (inLexique)) {
              case 1 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3C_) COMMA_HERE) ;
                var_cas_ascendingOrder = GGS_bool (true) ;
                } break ;
              case 2 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E_) COMMA_HERE) ;
                var_cas_ascendingOrder = GGS_bool (false) ;
                } break ;
              default :
                break ;
            }
            var_cas_sortDescriptorList.addAssign_operation (var_cas_sortAttribute, var_cas_ascendingOrder) ;
          switch (select_semantics_5F_parser_77 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_77 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7557)) ;
      GGS_typeEntityToGenerate  var_cas_def = GGS_C_sortedListTypeToImplement ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_sortDescriptorList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i74_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_sortedlist) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_76 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      const GGS_bool cond_289967 = ((var_cas_tableEnAvant.reader_hasKey (var_cas_listTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7579)))).operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_listTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7579))))).operator_not () ;
      if (cond_289967.isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t = GGS_typeGalgasUndefinedSortedListType ::constructor_new (inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (7581)) ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature = GGS_L_EXsignature ::constructor_emptyList () ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_290611 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_290611 = NULL ;
        while (((operand_290611 = enumerator_290611.nextObject ()))) {
          macroValidPointer (operand_290611) ;
          var_cas_extractSignature.addAssign_operation (operand_290611->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)) ;
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c = GGS_typeGalgasSortedListType ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      { bool syntaxRepeat_77 = true ;
        while (syntaxRepeat_77) {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            switch (select_semantics_5F_parser_78 (inLexique)) {
              case 1 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3C_) COMMA_HERE) ;
                } break ;
              case 2 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E_) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
          switch (select_semantics_5F_parser_77 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_77 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7623)) ;
      GGS_TypeModel  var_cas_t = GGS_ListModel ::constructor_new (inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (7625)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i74_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_sortedlist) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  switch (select_semantics_5F_parser_76 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      nt_attributes_5F_definition_5F_list_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
      { bool syntaxRepeat_77 = true ;
        while (syntaxRepeat_77) {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            switch (select_semantics_5F_parser_78 (inLexique)) {
              case 1 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3C_) COMMA_HERE) ;
                } break ;
              case 2 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E_) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
          switch (select_semantics_5F_parser_77 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_77 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'attributes_definition_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_attributes_5F_definition_5F_list_i75_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                GGS_typeListModel  &var_cas_outAttributeListModel,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeAttributsSemantiquesCourants,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_listeAttributsSemantiquesCourants = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  var_cas_outAttributeListModel = GGS_typeListModel ::constructor_emptyList () ;
  { bool syntaxRepeat_79 = true ;
    while (syntaxRepeat_79) {
      switch (select_semantics_5F_parser_79 (inLexique)) {
        case 2 : {
          GGS_AC_galgasType  var_cas_definitionType ;
          GGS_lstring  var_cas_typeName ;
          nt_type_5F_parsing_ (inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
          GGS_lstring  var_cas_attributeName ;
          inLexique.assignFromAttribute_tokenString (var_cas_attributeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_bool var_cas_hasSetter = GGS_bool (false) ;
          GGS_bool var_cas_hasGetter = GGS_bool (true) ;
          switch (select_semantics_5F_parser_80 (inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_feature) COMMA_HERE) ;
              { bool syntaxRepeat_81 = true ;
                while (syntaxRepeat_81) {
                    GGS_lstring  var_cas_directiveName ;
                    inLexique.assignFromAttribute_tokenString (var_cas_directiveName) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                    const GGS_bool cond_293046 = (var_cas_directiveName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7667))).operator_isEqual (GGS_string ("nogetter")) ;
                    if (cond_293046.isBuiltAndTrue ()) {
                      const GGS_bool cond_292996 = (var_cas_hasGetter).operator_not () ;
                      if (cond_292996.isBuiltAndTrue ()) {
                        var_cas_directiveName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the 'nogetter' feature is already set") COMMA_SOURCE_FILE_AT_LINE (7670)) ;
                      }
                      var_cas_hasGetter = GGS_bool (false) ;
                    }else if (cond_293046.isBuiltAndFalse ()) {
                      const GGS_bool cond_293248 = (var_cas_directiveName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7672))).operator_isEqual (GGS_string ("setter")) ;
                      if (cond_293248.isBuiltAndTrue ()) {
                        const GGS_bool cond_293200 = var_cas_hasSetter ;
                        if (cond_293200.isBuiltAndTrue ()) {
                          var_cas_directiveName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the 'setter' feature is already set") COMMA_SOURCE_FILE_AT_LINE (7675)) ;
                        }
                        var_cas_hasSetter = GGS_bool (true) ;
                      }else if (cond_293248.isBuiltAndFalse ()) {
                        var_cas_directiveName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("only 'setter' or 'nogetter' feature names are allowed here") COMMA_SOURCE_FILE_AT_LINE (7679)) ;
                      }
                    }
                  switch (select_semantics_5F_parser_81 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_81 = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          var_cas_tableAttributs.modifier_insertKey (inLexique, var_cas_attributeName, var_cas_definitionType, var_cas_hasSetter, var_cas_hasGetter COMMA_SOURCE_FILE_AT_LINE (7684)) ;
          var_cas_listeTousAttributsSemantiques.addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_listeAttributsSemantiquesCourants.addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_outAttributeListModel.addAssign_operation (var_cas_typeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_79 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_attributes_5F_definition_5F_list_i75_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  { bool syntaxRepeat_79 = true ;
    while (syntaxRepeat_79) {
      switch (select_semantics_5F_parser_79 (inLexique)) {
        case 2 : {
          nt_type_5F_parsing_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          switch (select_semantics_5F_parser_80 (inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_feature) COMMA_HERE) ;
              { bool syntaxRepeat_81 = true ;
                while (syntaxRepeat_81) {
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  switch (select_semantics_5F_parser_81 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_81 = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_79 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i76_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_listmap) COMMA_HERE) ;
  GGS_lstring  var_cas_listmapTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listmapTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  temp_294778 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_294778.isBuilt ()) {
    temp_294778 (HERE)->method_searchKey (inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7715)) ;
  }
  GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_listTypeName COMMA_SOURCE_FILE_AT_LINE (7716)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (7716)) ;
  GGS_typeGalgasListType  var_cas_listType = GGS_typeGalgasListType::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_listTypeName COMMA_SOURCE_FILE_AT_LINE (7717)) ;
  GGS_AC_galgasType  var_cas_c = GGS_typeGalgasListmapType ::constructor_new (inLexique, var_cas_listmapTypeName, var_cas_listTypeName, var_cas_listType, var_cas_listType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (7723)) COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_listmapTypeName, GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (7725)) ;
  GGS_typeEntityToGenerate  var_cas_def = GGS_typeGalgasListmapToImplement ::constructor_new (inLexique, var_cas_listmapTypeName, var_cas_listTypeName, var_cas_listType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (7729)) COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i76_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_listmap) COMMA_HERE) ;
  GGS_lstring  var_cas_listmapTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listmapTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  temp_296059 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (temp_296059.isBuilt ()) {
    temp_296059 (HERE)->method_searchKey (inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7749)) ;
  }
  GGS_AC_galgasType  var_cas_type = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_listTypeName COMMA_SOURCE_FILE_AT_LINE (7750)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (7750)) ;
  GGS_typeGalgasListType  var_cas_listType = GGS_typeGalgasListType::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_listTypeName COMMA_SOURCE_FILE_AT_LINE (7751)) ;
  GGS_AC_galgasType  var_cas_c = GGS_typeGalgasListmapType ::constructor_new (inLexique, var_cas_listmapTypeName, var_cas_listTypeName, var_cas_listType, var_cas_listType.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (7757)) COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_listmapTypeName, GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (7759)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i76_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_listmap) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i77_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_struct) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
  GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
  nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_c = GGS_typeGalgasStructType ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7801)) ;
  GGS_typeEntityToGenerate  var_cas_def = GGS_C_structToImplement ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i77_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_struct) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_typeListModel  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList () ;
  GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
  GGS_typeSemanticAttributesMap  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  nt_attributes_5F_definition_5F_list_ (inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_c = GGS_typeGalgasStructType ::constructor_new (inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (7840)) ;
  GGS_TypeModel  var_cas_t = GGS_ListModel ::constructor_new (inLexique, var_cas_attributeListModel COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (7842)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i77_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_struct) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  nt_attributes_5F_definition_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "recursivelyEnumerateDirectories"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivelyEnumerateDirectories (C_Compiler & inLexique,
                                const GGS_string  var_cas_inAbsoluteSourcePath,
                                const GGS_string  var_cas_inPathInWrapper,
                                const GGS_wrapperExtensionMap   var_cas_inExtensionMap,
                                GGS_wrapperFileSortedList  & var_cas_outWrapperFileSortedList,
                                GGS_wrapperDirectorySortedList  & var_cas_outWrapperDirectorySortedList,
                                GGS_uint  & var_cas_ioWrapperFileIndex,
                                GGS_uint  & var_cas_ioWrapperDirectoryIndex,
                                GGS_M_regularFiles  & var_cas_ioRegularFileMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_recursivelyEnumerateDirectories at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_uint  var_cas_currentDirectoryIndex = var_cas_ioWrapperDirectoryIndex ;
  var_cas_ioWrapperDirectoryIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (7862)) ;
  GGS_stringlist  var_cas_files = var_cas_inAbsoluteSourcePath.reader_regularFiles (GGS_bool (false)) ;
  var_cas_outWrapperFileSortedList = GGS_wrapperFileSortedList ::constructor_emptySortedList () ;
  {
    GGS_stringlist::cEnumerator enumerator_300795 (var_cas_files, true) ;
    const GGS_stringlist::cElement * operand_300795 = NULL ;
    while (((operand_300795 = enumerator_300795.nextObject ()))) {
      macroValidPointer (operand_300795) ;
      const GGS_bool cond_301302 = var_cas_inExtensionMap.reader_hasKey (operand_300795->mValue.reader_pathExtension ()) ;
      if (cond_301302.isBuiltAndTrue ()) {
        GGS_string var_cas_absoluteFilePath = ((var_cas_inAbsoluteSourcePath).operator_concat (GGS_string ("/"))).operator_concat (operand_300795->mValue) ;
        var_cas_outWrapperFileSortedList.addAssign_operation (operand_300795->mValue, var_cas_absoluteFilePath, var_cas_currentDirectoryIndex, var_cas_ioWrapperFileIndex) ;
        var_cas_ioRegularFileMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, (var_cas_inPathInWrapper).operator_concat (operand_300795->mValue), GGS_location (inLexique) COMMA_HERE), var_cas_currentDirectoryIndex, var_cas_ioWrapperFileIndex COMMA_SOURCE_FILE_AT_LINE (7876)) ;
        var_cas_ioWrapperFileIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (7881)) ;
      }
    }
  }
  GGS_stringlist  var_cas_directories = var_cas_inAbsoluteSourcePath.reader_directories (GGS_bool (false)) ;
  var_cas_outWrapperDirectorySortedList = GGS_wrapperDirectorySortedList ::constructor_emptySortedList () ;
  {
    GGS_stringlist::cEnumerator enumerator_301537 (var_cas_directories, true) ;
    const GGS_stringlist::cElement * operand_301537 = NULL ;
    while (((operand_301537 = enumerator_301537.nextObject ()))) {
      macroValidPointer (operand_301537) ;
      GGS_wrapperFileSortedList  var_cas_internalWrapperFileSortedList ;
      GGS_wrapperDirectorySortedList  var_cas_internalWrapperDirectorySortedList ;
      GGS_uint  var_cas_theDirectoryIndex = var_cas_ioWrapperDirectoryIndex ;
      ::routine_recursivelyEnumerateDirectories (inLexique,  ((var_cas_inAbsoluteSourcePath).operator_concat (GGS_string ("/"))).operator_concat (operand_301537->mValue),  ((var_cas_inPathInWrapper).operator_concat (operand_301537->mValue)).operator_concat (GGS_string ("/")),  var_cas_inExtensionMap,  var_cas_internalWrapperFileSortedList,  var_cas_internalWrapperDirectorySortedList,  var_cas_ioWrapperFileIndex,  var_cas_ioWrapperDirectoryIndex,  var_cas_ioRegularFileMap COMMA_SOURCE_FILE_AT_LINE (7891)) ;
      var_cas_outWrapperDirectorySortedList.addAssign_operation (operand_301537->mValue, var_cas_internalWrapperFileSortedList, var_cas_internalWrapperDirectorySortedList, var_cas_theDirectoryIndex) ;
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_recursivelyEnumerateDirectories\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i78_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_filewrapper) COMMA_HERE) ;
  GGS_lstring  var_cas_wrapperName ;
  inLexique.assignFromAttribute_tokenString (var_cas_wrapperName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
  GGS_lstring  var_cas_sourcePath ;
  inLexique.assignFromAttribute_tokenString (var_cas_sourcePath) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_wrapperExtensionMap  var_cas_extensionMap = GGS_wrapperExtensionMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  switch (select_semantics_5F_parser_82 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_83 = true ;
        while (syntaxRepeat_83) {
            GGS_lstring  var_cas_extension ;
            inLexique.assignFromAttribute_tokenString (var_cas_extension) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
            var_cas_extensionMap.modifier_insertKey (inLexique, var_cas_extension COMMA_SOURCE_FILE_AT_LINE (7934)) ;
          switch (select_semantics_5F_parser_83 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_83 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_M_regularFiles  var_cas_regularFileMap = GGS_M_regularFiles ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_string var_cas_absoluteSourcePath ;
  const GGS_bool cond_303320 = (var_cas_sourcePath.ggs_string ().reader_firstCharacterOrNul ()).operator_isEqual (GGS_char (TO_UNICODE ('/'))) ;
  if (cond_303320.isBuiltAndTrue ()) {
    var_cas_absoluteSourcePath = var_cas_sourcePath.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7944)) ;
  }else if (cond_303320.isBuiltAndFalse ()) {
    var_cas_absoluteSourcePath = ((GGS_string::constructor_stringWithSourceFilePath (inLexique COMMA_HERE).reader_stringByDeletingLastPathComponent ()).operator_concat (GGS_string ("/"))).operator_concat (var_cas_sourcePath.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7946))) ;
  }
  const GGS_bool cond_303600 = (var_cas_absoluteSourcePath.reader_directoryExists ()).operator_not () ;
  if (cond_303600.isBuiltAndTrue ()) {
    var_cas_sourcePath.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("The '")).operator_concat (var_cas_absoluteSourcePath)).operator_concat (GGS_string ("' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (7950)) ;
  }else if (cond_303600.isBuiltAndFalse ()) {
    GGS_wrapperFileSortedList  var_cas_wrapperFileSortedList ;
    GGS_wrapperDirectorySortedList  var_cas_wrapperDirectorySortedList ;
    GGS_uint  var_cas_wrapperFileIndex = GGS_uint (0U) ;
    GGS_uint  var_cas_wrapperDirectoryIndex = GGS_uint (0U) ;
    ::routine_recursivelyEnumerateDirectories (inLexique,  var_cas_absoluteSourcePath,  GGS_string ("/"),  var_cas_extensionMap,  var_cas_wrapperFileSortedList,  var_cas_wrapperDirectorySortedList,  var_cas_wrapperFileIndex,  var_cas_wrapperDirectoryIndex,  var_cas_regularFileMap COMMA_SOURCE_FILE_AT_LINE (7956)) ;
    GGS_typeEntityToGenerate  var_cas_w = GGS_C_wrapperToImplement ::constructor_new (inLexique, var_cas_wrapperName, var_cas_sourcePath.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7969)), var_cas_extensionMap, var_cas_wrapperFileSortedList, var_cas_wrapperDirectorySortedList COMMA_HERE) ;
    var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_w) ;
  }
  GGS_filewrapperTemplateMapEX  var_cas_templateMap = GGS_filewrapperTemplateMapEX ::constructor_emptyMap (inLexique COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_84 = true ;
    while (syntaxRepeat_84) {
      switch (select_semantics_5F_parser_84 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
          GGS_lstring  var_cas_templateName ;
          inLexique.assignFromAttribute_tokenString (var_cas_templateName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_lstring  var_cas_templatePath ;
          inLexique.assignFromAttribute_tokenString (var_cas_templatePath) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
          GGS_lstring  var_cas_templateAbsolutePath = GGS_lstring ::constructor_new (inLexique, ((var_cas_absoluteSourcePath).operator_concat (GGS_string ("/"))).operator_concat (var_cas_templatePath.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7989))), var_cas_templatePath.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (7990)) COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_templateArgumentTypesList = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList () ;
          GGS_typeListeAttributsSemantiques  var_cas_formalAttributeList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
          GGS_templateVariableMap  var_cas_templateVariableMap = GGS_templateVariableMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
          { bool syntaxRepeat_85 = true ;
            while (syntaxRepeat_85) {
              switch (select_semantics_5F_parser_85 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  var_cas_formalAttributeList.addAssign_operation (var_cas_type_semantique, GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE)) ;
                  GGS_bool var_cas_parameterIsUsed ;
                  switch (select_semantics_5F_parser_86 (inLexique)) {
                    case 1 : {
                      var_cas_parameterIsUsed = GGS_bool (true) ;
                      } break ;
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
                      var_cas_parameterIsUsed = GGS_bool (false) ;
                      } break ;
                    default :
                      break ;
                  }
                  GGS_lstring  var_cas_parameterName ;
                  inLexique.assignFromAttribute_tokenString (var_cas_parameterName) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_cppName = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_parameterName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (8017)), var_cas_parameterName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8017)) COMMA_HERE) ;
                  var_cas_templateArgumentTypesList.addAssign_operation (var_cas_type_semantique, GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE), var_cas_cppName, GGS_bool (true), var_cas_parameterName) ;
                  const GGS_bool cond_305919 = var_cas_parameterIsUsed ;
                  if (cond_305919.isBuiltAndTrue ()) {
                    var_cas_templateVariableMap.modifier_insertKey (inLexique, var_cas_parameterName, var_cas_type_semantique, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (8020)) ;
                  }else if (cond_305919.isBuiltAndFalse ()) {
                    var_cas_templateVariableMap.modifier_insertKey (inLexique, var_cas_parameterName, var_cas_type_semantique, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (8022)) ;
                  }
                  } break ;
                default :
                  syntaxRepeat_85 = false ;
                  break ;
              }
            }
          }
          var_cas_templateMap.modifier_insertKey (inLexique, var_cas_templateName, var_cas_formalAttributeList COMMA_SOURCE_FILE_AT_LINE (8025)) ;
          GGS_templateInstructionList  var_cas_templateInstructionList ;
          GGS_bool var_cas_usesColumnMarker ;
          const GGS_string _depExtension = GGS_string ("") ;
          const GGS_string _depPath = GGS_string ("") ;
          if (_depExtension.isBuilt () && _depPath.isBuilt ()) {
            C_Grammar_galgasTemplateGrammar::_performSourceFileParsing_ (inLexique,
                                          _depExtension.string (),
                                          _depPath.string (),
                                          NULL,
                                          var_cas_templateAbsolutePath,
                                          var_cas_templateVariableMap,
                                          var_cas_ioSemanticContext,
                                          var_cas_ioComponentSemanticsEntitiesMap,
                                          var_cas_inOptionsComponentsMapForUse,
                                          var_cas_templateInstructionList,
                                          var_cas_usesColumnMarker
                                          COMMA_SOURCE_FILE_AT_LINE (8028)) ;
          }
          var_cas_listeEntitesAengendrer.addAssign_operation (GGS_C_filewrapperTemplateToImplement ::constructor_new (inLexique, var_cas_wrapperName, var_cas_templateName, var_cas_templateArgumentTypesList, var_cas_templateInstructionList, var_cas_usesColumnMarker COMMA_HERE)) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_84 = false ;
          break ;
      }
    }
  }
  var_cas_ioSemanticContext.mFilewrappers.modifier_insertKey (inLexique, var_cas_wrapperName, var_cas_regularFileMap, var_cas_templateMap COMMA_SOURCE_FILE_AT_LINE (8046)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i78_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_filewrapper) COMMA_HERE) ;
  GGS_lstring  var_cas_wrapperName ;
  inLexique.assignFromAttribute_tokenString (var_cas_wrapperName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
  GGS_lstring  var_cas_sourcePath ;
  inLexique.assignFromAttribute_tokenString (var_cas_sourcePath) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_wrapperExtensionMap  var_cas_extensionMap = GGS_wrapperExtensionMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  switch (select_semantics_5F_parser_82 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_83 = true ;
        while (syntaxRepeat_83) {
            GGS_lstring  var_cas_extension ;
            inLexique.assignFromAttribute_tokenString (var_cas_extension) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
            var_cas_extensionMap.modifier_insertKey (inLexique, var_cas_extension COMMA_SOURCE_FILE_AT_LINE (8070)) ;
          switch (select_semantics_5F_parser_83 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_83 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_M_regularFiles  var_cas_regularFileMap = GGS_M_regularFiles ::constructor_emptyMap (inLexique COMMA_HERE) ;
  const GGS_bool cond_308639 = (var_cas_ioSemanticContext.reader_mFilewrappers (inLexique COMMA_SOURCE_FILE_AT_LINE (8077)).reader_hasKey (var_cas_wrapperName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8077)))).operator_not () ;
  if (cond_308639.isBuiltAndTrue ()) {
    GGS_string var_cas_absoluteSourcePath ;
    const GGS_bool cond_307851 = (var_cas_sourcePath.ggs_string ().reader_firstCharacterOrNul ()).operator_isEqual (GGS_char (TO_UNICODE ('/'))) ;
    if (cond_307851.isBuiltAndTrue ()) {
      var_cas_absoluteSourcePath = var_cas_sourcePath.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8081)) ;
    }else if (cond_307851.isBuiltAndFalse ()) {
      var_cas_absoluteSourcePath = ((GGS_string::constructor_stringWithSourceFilePath (inLexique COMMA_HERE).reader_stringByDeletingLastPathComponent ()).operator_concat (GGS_string ("/"))).operator_concat (var_cas_sourcePath.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8083))) ;
    }
    const GGS_bool cond_308141 = (var_cas_absoluteSourcePath.reader_directoryExists ()).operator_not () ;
    if (cond_308141.isBuiltAndTrue ()) {
      var_cas_sourcePath.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("The '")).operator_concat (var_cas_absoluteSourcePath)).operator_concat (GGS_string ("' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (8087)) ;
    }else if (cond_308141.isBuiltAndFalse ()) {
      GGS_wrapperFileSortedList  var_cas_wrapperFileSortedList ;
      GGS_wrapperDirectorySortedList  var_cas_wrapperDirectorySortedList ;
      GGS_uint  var_cas_wrapperFileIndex = GGS_uint (0U) ;
      GGS_uint  var_cas_wrapperDirectoryIndex = GGS_uint (0U) ;
      ::routine_recursivelyEnumerateDirectories (inLexique,  var_cas_absoluteSourcePath,  GGS_string ("/"),  var_cas_extensionMap,  var_cas_wrapperFileSortedList,  var_cas_wrapperDirectorySortedList,  var_cas_wrapperFileIndex,  var_cas_wrapperDirectoryIndex,  var_cas_regularFileMap COMMA_SOURCE_FILE_AT_LINE (8093)) ;
    }
  }
  GGS_filewrapperTemplateMapEX  var_cas_templateMap = GGS_filewrapperTemplateMapEX ::constructor_emptyMap (inLexique COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_84 = true ;
    while (syntaxRepeat_84) {
      switch (select_semantics_5F_parser_84 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
          GGS_lstring  var_cas_templateName ;
          inLexique.assignFromAttribute_tokenString (var_cas_templateName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_lstring  var_cas_templatePath ;
          inLexique.assignFromAttribute_tokenString (var_cas_templatePath) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_formalAttributeList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
          { bool syntaxRepeat_85 = true ;
            while (syntaxRepeat_85) {
              switch (select_semantics_5F_parser_85 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  var_cas_formalAttributeList.addAssign_operation (var_cas_type_semantique, GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE)) ;
                  switch (select_semantics_5F_parser_86 (inLexique)) {
                    case 1 : {
                      } break ;
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
                      } break ;
                    default :
                      break ;
                  }
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_85 = false ;
                  break ;
              }
            }
          }
          var_cas_templateMap.modifier_insertKey (inLexique, var_cas_templateName, var_cas_formalAttributeList COMMA_SOURCE_FILE_AT_LINE (8134)) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_84 = false ;
          break ;
      }
    }
  }
  const GGS_bool cond_309697 = (var_cas_ioSemanticContext.reader_mFilewrappers (inLexique COMMA_SOURCE_FILE_AT_LINE (8138)).reader_hasKey (var_cas_wrapperName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8138)))).operator_not () ;
  if (cond_309697.isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mFilewrappers.modifier_insertKey (inLexique, var_cas_wrapperName, var_cas_regularFileMap, var_cas_templateMap COMMA_SOURCE_FILE_AT_LINE (8139)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i78_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_filewrapper) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  switch (select_semantics_5F_parser_82 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_83 = true ;
        while (syntaxRepeat_83) {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
          switch (select_semantics_5F_parser_83 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_83 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_84 = true ;
    while (syntaxRepeat_84) {
      switch (select_semantics_5F_parser_84 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
          { bool syntaxRepeat_85 = true ;
            while (syntaxRepeat_85) {
              switch (select_semantics_5F_parser_85 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                  nt_formal_5F_argument_5F_type_parse (inLexique) ;
                  switch (select_semantics_5F_parser_86 (inLexique)) {
                    case 1 : {
                      } break ;
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_HERE) ;
                      } break ;
                    default :
                      break ;
                  }
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_85 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_84 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i79_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extern) COMMA_HERE) ;
  nt_semantics_5F_declaration_5F_begining_5F_by_5F_extern_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i79_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extern) COMMA_HERE) ;
  nt_semantics_5F_declaration_5F_begining_5F_by_5F_extern_importSemantics (inLexique, var_cas_ioModelMap, var_cas_ioExternActionMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i79_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extern) COMMA_HERE) ;
  nt_semantics_5F_declaration_5F_begining_5F_by_5F_extern_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_begining_by_extern'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i80_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  GGS_lstring  var_cas_externTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_externTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_modifiersMap = GGS_typeTableMethodes ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap = GGS_typeTableMethodes ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall = GGS_bool (false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  GGS_M_externTypeConstructorMap  var_cas_constructorsMap = GGS_M_externTypeConstructorMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  { bool syntaxRepeat_87 = true ;
    while (syntaxRepeat_87) {
      switch (select_semantics_5F_parser_87 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_constructor) COMMA_HERE) ;
          GGS_lstring  var_cas_constructorName ;
          inLexique.assignFromAttribute_tokenString (var_cas_constructorName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
          { bool syntaxRepeat_88 = true ;
            while (syntaxRepeat_88) {
              switch (select_semantics_5F_parser_88 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  inLexique.assignFromAttribute_tokenString (var_cas_parameterName) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  var_cas_constructorArgumentTypesList.addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  } break ;
                default :
                  syntaxRepeat_88 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          var_cas_constructorsMap.modifier_insertKey (inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList COMMA_SOURCE_FILE_AT_LINE (8235)) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
          GGS_lstring  var_cas_methodName ;
          inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
          GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
          nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          var_cas_readersInInstructionMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (8255)) ;
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_modifier) COMMA_HERE) ;
          switch (select_semantics_5F_parser_89 (inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_methodName ;
              inLexique.assignFromAttribute_tokenString (var_cas_methodName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
              GGS_signatureForGrammarAnalysis  var_cas_signatureForGrammarComponent ;
              nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              var_cas_modifiersMap.modifier_insertKey (inLexique, var_cas_methodName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (8275)) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2B__3D_) COMMA_HERE) ;
              GGS_location  var_cas_errorLocation = GGS_location (inLexique) ;
              { bool syntaxRepeat_90 = true ;
                while (syntaxRepeat_90) {
                  switch (select_semantics_5F_parser_90 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      inLexique.assignFromAttribute_tokenString (var_cas_parameterName) ;
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                      var_cas_addAssignOperatorCallTypeList.addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      } break ;
                    default :
                      syntaxRepeat_90 = false ;
                      break ;
                  }
                }
              }
              const GGS_bool cond_315307 = var_cas_acceptAddAssignOperatorCall ;
              if (cond_315307.isBuiltAndTrue ()) {
                var_cas_errorLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("'+=' operator is already defined") COMMA_SOURCE_FILE_AT_LINE (8296)) ;
              }else if (cond_315307.isBuiltAndFalse ()) {
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true) ;
              }
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_87 = false ;
          break ;
      }
    }
  }
  GGS_typeEntityToGenerate  var_cas_t = GGS_typeExternTypeToGenerate ::constructor_new (inLexique, var_cas_externTypeName, var_cas_constructorsMap, var_cas_modifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_t) ;
  GGS_AC_galgasType  var_cas_c = GGS_typeGalgasExternType ::constructor_new (inLexique, var_cas_externTypeName, var_cas_constructorsMap, var_cas_modifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_externTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (8322)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i80_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  GGS_lstring  var_cas_externTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_externTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_EXmodifiersMap = GGS_typeTableMethodes ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap = GGS_typeTableMethodes ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall = GGS_bool (false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
  GGS_M_externTypeConstructorMap  var_cas_EXconstructorsMap = GGS_M_externTypeConstructorMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_externTypeConstructorMap  var_cas_constructorMap = GGS_externTypeConstructorMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_externTypeReaderMap  var_cas_readerMap = GGS_externTypeReaderMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_externTypeModifierMap  var_cas_modifierMap = GGS_externTypeModifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListModel  var_cas_addAssignFormalInputArgumentList = GGS_typeListModel ::constructor_emptyList () ;
  { bool syntaxRepeat_87 = true ;
    while (syntaxRepeat_87) {
      switch (select_semantics_5F_parser_87 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_constructor) COMMA_HERE) ;
          GGS_lstring  var_cas_constructorName ;
          inLexique.assignFromAttribute_tokenString (var_cas_constructorName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques ::constructor_emptyList () ;
          GGS_typeListModel  var_cas_formalInputArgumentList = GGS_typeListModel ::constructor_emptyList () ;
          { bool syntaxRepeat_88 = true ;
            while (syntaxRepeat_88) {
              switch (select_semantics_5F_parser_88 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  inLexique.assignFromAttribute_tokenString (var_cas_parameterName) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  var_cas_constructorArgumentTypesList.addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  var_cas_formalInputArgumentList.addAssign_operation (var_cas_galgasTypeName) ;
                  } break ;
                default :
                  syntaxRepeat_88 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          var_cas_EXconstructorsMap.modifier_insertKey (inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList COMMA_SOURCE_FILE_AT_LINE (8371)) ;
          var_cas_constructorMap.modifier_insertKey (inLexique, var_cas_constructorName, var_cas_formalInputArgumentList COMMA_SOURCE_FILE_AT_LINE (8372)) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
          GGS_lstring  var_cas_readerName ;
          inLexique.assignFromAttribute_tokenString (var_cas_readerName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
          GGS_signatureForGrammarAnalysis  var_cas_signature ;
          nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          var_cas_readersInInstructionMap.modifier_insertKey (inLexique, var_cas_readerName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (8392)) ;
          var_cas_readerMap.modifier_insertKey (inLexique, var_cas_readerName, var_cas_signature COMMA_SOURCE_FILE_AT_LINE (8393)) ;
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_modifier) COMMA_HERE) ;
          switch (select_semantics_5F_parser_89 (inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_modifierName ;
              inLexique.assignFromAttribute_tokenString (var_cas_modifierName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
              GGS_signatureForGrammarAnalysis  var_cas_signature ;
              nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
              var_cas_EXmodifiersMap.modifier_insertKey (inLexique, var_cas_modifierName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (8413)) ;
              var_cas_modifierMap.modifier_insertKey (inLexique, var_cas_modifierName, var_cas_signature COMMA_SOURCE_FILE_AT_LINE (8414)) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2B__3D_) COMMA_HERE) ;
              const GGS_bool cond_319564 = (var_cas_addAssignFormalInputArgumentList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
              if (cond_319564.isBuiltAndTrue ()) {
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("'+=' operator is already defined") COMMA_SOURCE_FILE_AT_LINE (8419)) ;
              }else if (cond_319564.isBuiltAndFalse ()) {
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true) ;
              }
              { bool syntaxRepeat_90 = true ;
                while (syntaxRepeat_90) {
                  switch (select_semantics_5F_parser_90 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      inLexique.assignFromAttribute_tokenString (var_cas_parameterName) ;
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                      var_cas_addAssignOperatorCallTypeList.addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      var_cas_addAssignFormalInputArgumentList.addAssign_operation (var_cas_galgasTypeName) ;
                      } break ;
                    default :
                      syntaxRepeat_90 = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_87 = false ;
          break ;
      }
    }
  }
  GGS_AC_galgasType  var_cas_c = GGS_typeGalgasExternType ::constructor_new (inLexique, var_cas_externTypeName, var_cas_EXconstructorsMap, var_cas_EXmodifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_externTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (8451)) ;
  GGS_TypeModel  var_cas_t = GGS_ExternTypeModel ::constructor_new (inLexique, var_cas_constructorMap, var_cas_readerMap, var_cas_modifierMap, var_cas_addAssignFormalInputArgumentList COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (inLexique, var_cas_externTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (8453)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i80_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_87 = true ;
    while (syntaxRepeat_87) {
      switch (select_semantics_5F_parser_87 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_constructor) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          { bool syntaxRepeat_88 = true ;
            while (syntaxRepeat_88) {
              switch (select_semantics_5F_parser_88 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                  nt_formal_5F_argument_5F_type_parse (inLexique) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_88 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          nt_formal_5F_arguments_5F_list_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_modifier) COMMA_HERE) ;
          switch (select_semantics_5F_parser_89 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              nt_formal_5F_arguments_5F_list_parse (inLexique) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2B__3D_) COMMA_HERE) ;
              { bool syntaxRepeat_90 = true ;
                while (syntaxRepeat_90) {
                  switch (select_semantics_5F_parser_90 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                      nt_formal_5F_argument_5F_type_parse (inLexique) ;
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_90 = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_87 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i81_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                const GGS_typeTableEnAvant  var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  inLexique.assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  const GGS_bool cond_321496 = var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (var_cas_outGalgasTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8468))) ;
  if (cond_321496.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  temp_321358 = var_cas_inComponentSemanticsEntitiesMap ;
    if (temp_321358.isBuilt ()) {
      temp_321358 (HERE)->method_searchKey (inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8470)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (8471)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (8471)) ;
  }else if (cond_321496.isBuiltAndFalse ()) {
    const GGS_typeTableEnAvant  temp_321550 = var_cas_tableEnAvant ;
    if (temp_321550.isBuilt ()) {
      temp_321550 (HERE)->method_searchKey (inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (8473)) ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i81_importGrammarForSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  inLexique.assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i81_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i82_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                const GGS_typeTableEnAvant  var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_list) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  const GGS_bool cond_322329 = var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (var_cas_outGalgasTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8491))) ;
  if (cond_322329.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  temp_322191 = var_cas_inComponentSemanticsEntitiesMap ;
    if (temp_322191.isBuilt ()) {
      temp_322191 (HERE)->method_searchKey (inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8493)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (8494)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (8494)) ;
  }else if (cond_322329.isBuiltAndFalse ()) {
    const GGS_typeTableEnAvant  temp_322383 = var_cas_tableEnAvant ;
    if (temp_322383.isBuilt ()) {
      temp_322383 (HERE)->method_searchKey (inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (8496)) ;
    }
    GGS_typeGalgasUndefinedListType  var_cas_x = GGS_typeGalgasUndefinedListType::castFrom (inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (8497)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i82_importGrammarForSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_list) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i82_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_list) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i83_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                const GGS_typeTableEnAvant  var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_map) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  const GGS_bool cond_323299 = var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (var_cas_outGalgasTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8516))) ;
  if (cond_323299.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  temp_323161 = var_cas_inComponentSemanticsEntitiesMap ;
    if (temp_323161.isBuilt ()) {
      temp_323161 (HERE)->method_searchKey (inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8518)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (8519)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (8519)) ;
  }else if (cond_323299.isBuiltAndFalse ()) {
    const GGS_typeTableEnAvant  temp_323353 = var_cas_tableEnAvant ;
    if (temp_323353.isBuilt ()) {
      temp_323353 (HERE)->method_searchKey (inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (8521)) ;
    }
    GGS_typeGalgasUndefinedMapType  var_cas_x = GGS_typeGalgasUndefinedMapType::castFrom (inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (8522)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i83_importGrammarForSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_map) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i83_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_map) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i84_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                const GGS_typeTableEnAvant  var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  const GGS_bool cond_324284 = var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (var_cas_outGalgasTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8542))) ;
  if (cond_324284.isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  temp_324146 = var_cas_inComponentSemanticsEntitiesMap ;
    if (temp_324146.isBuilt ()) {
      temp_324146 (HERE)->method_searchKey (inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8544)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::castFrom (inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (8545)).reader_aDefType (inLexique COMMA_SOURCE_FILE_AT_LINE (8545)) ;
  }else if (cond_324284.isBuiltAndFalse ()) {
    const GGS_typeTableEnAvant  temp_324338 = var_cas_tableEnAvant ;
    if (temp_324338.isBuilt ()) {
      temp_324338 (HERE)->method_searchKey (inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (8547)) ;
    }
    GGS_typeGalgasUndefinedClassType  var_cas_x = GGS_typeGalgasUndefinedClassType::castFrom (inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (8548)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i84_importGrammarForSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_formal_5F_argument_5F_type_i84_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_begining_by_extern'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i85_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_nomAction ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomAction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  automatic_var_325830_0 ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, automatic_var_325830_0) ;
  GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteRoutineExterne ::constructor_new (inLexique, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_nomAction, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8588)) ;
  GGS_typeEntityToGenerate  var_cas_ea = GGS_typeRoutineExterneAengendrer ::constructor_new (inLexique, var_cas_nomAction, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_ea) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i85_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_actionName ;
  inLexique.assignFromAttribute_tokenString (var_cas_actionName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signature ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteRoutineExterne ::constructor_new (inLexique, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_actionName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8617)) ;
  var_cas_ioExternActionMap.modifier_insertKey (inLexique, var_cas_actionName, var_cas_signature, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (8618)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i85_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_routine) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_begining_by_extern'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i86_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
  GGS_lstring  var_cas_nomAction ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomAction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  automatic_var_328292_0 ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, automatic_var_328292_0) ;
  GGS_L_EXsignature  var_cas_returnedTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  {
    GGS_typeListeTypesEtNomsArgMethode::cEnumerator enumerator_328501 (var_cas_listeTypeEtNomsArguments, true) ;
    const GGS_typeListeTypesEtNomsArgMethode::cElement * operand_328501 = NULL ;
    while (((operand_328501 = enumerator_328501.nextObject ()))) {
      macroValidPointer (operand_328501) ;
      const GGS_bool cond_328717 = (operand_328501->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)) ;
      if (cond_328717.isBuiltAndTrue ()) {
        operand_328501->mParameterName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("for a function only input parameters (\?) and constant input parameters (\?\?) can be used.") COMMA_SOURCE_FILE_AT_LINE (8657)) ;
      }else if (cond_328717.isBuiltAndFalse ()) {
        const GGS_bool cond_328923 = (operand_328501->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentInOut (inLexique COMMA_HERE)) ;
        if (cond_328923.isBuiltAndTrue ()) {
          operand_328501->mParameterName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("for a function only input parameters (\?) and constant input parameters (\?\?) can be used.") COMMA_SOURCE_FILE_AT_LINE (8659)) ;
        }
      }
    }
  }
  GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_returnedType ;
  GGS_lstring  var_cas_galgasTypeName ;
  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_returnedType, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
  GGS_lstring  var_cas_nomArgument ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (8673)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8673)) COMMA_HERE) ;
  var_cas_tableArgumentsMethode.modifier_insertOutArgument (inLexique, var_cas_nomArgument, var_cas_returnedType, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (8674)) ;
  GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteFonctionExterne ::constructor_new (inLexique, var_cas_listeDeTypes, var_cas_returnedType COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_nomAction, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8677)) ;
  GGS_typeEntityToGenerate  var_cas_ea = GGS_typeFonctionExterneAengendrer ::constructor_new (inLexique, var_cas_nomAction, var_cas_listeDeTypes, var_cas_returnedType COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_ea) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i86_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
  GGS_lstring  var_cas_actionName ;
  inLexique.assignFromAttribute_tokenString (var_cas_actionName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_signatureForGrammarAnalysis  var_cas_signature ;
  nt_formal_5F_arguments_5F_list_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  GGS_L_EXsignature  var_cas_returnedTypes = GGS_L_EXsignature ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  {
    GGS_typeListeTypesEtNomsArgMethode::cEnumerator enumerator_330768 (var_cas_listeTypeEtNomsArguments, true) ;
    const GGS_typeListeTypesEtNomsArgMethode::cElement * operand_330768 = NULL ;
    while (((operand_330768 = enumerator_330768.nextObject ()))) {
      macroValidPointer (operand_330768) ;
      const GGS_bool cond_330984 = (operand_330768->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)) ;
      if (cond_330984.isBuiltAndTrue ()) {
        operand_330768->mParameterName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("for a function only input parameters (\?) and constant input parameters (\?\?) can be used.") COMMA_SOURCE_FILE_AT_LINE (8711)) ;
      }else if (cond_330984.isBuiltAndFalse ()) {
        const GGS_bool cond_331190 = (operand_330768->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentInOut (inLexique COMMA_HERE)) ;
        if (cond_331190.isBuiltAndTrue ()) {
          operand_330768->mParameterName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("for a function only input parameters (\?) and constant input parameters (\?\?) can be used.") COMMA_SOURCE_FILE_AT_LINE (8713)) ;
        }
      }
    }
  }
  GGS_formalArgumentPassingMode var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_returnedType ;
  GGS_lstring  var_cas_galgasTypeName ;
  nt_formal_5F_argument_5F_type_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_returnedType, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
  GGS_lstring  var_cas_nomArgument ;
  inLexique.assignFromAttribute_tokenString (var_cas_nomArgument) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_nomArgument.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (8727)), var_cas_nomArgument.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8727)) COMMA_HERE) ;
  var_cas_tableArgumentsMethode.modifier_insertOutArgument (inLexique, var_cas_nomArgument, var_cas_returnedType, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (8728)) ;
  GGS_AC_semanticsEntity  var_cas_entite = GGS_typeEntiteFonctionExterne ::constructor_new (inLexique, var_cas_listeDeTypes, var_cas_returnedType COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_actionName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (8731)) ;
  var_cas_ioExternActionMap.modifier_insertKey (inLexique, var_cas_actionName, var_cas_signature, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (8732)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_5F_begining_5F_by_5F_extern_i86_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_function) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  nt_formal_5F_arguments_5F_list_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  nt_formal_5F_argument_5F_type_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i87_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_enum) COMMA_HERE) ;
  GGS_lstring  var_cas_enumTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_enumTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_enumConstantMap  var_cas_constantMap = GGS_enumConstantMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  switch (select_semantics_5F_parser_91 (inLexique)) {
    case 1 : {
      { bool syntaxRepeat_92 = true ;
        while (syntaxRepeat_92) {
            GGS_lstring  var_cas_constantName ;
            inLexique.assignFromAttribute_tokenString (var_cas_constantName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            var_cas_constantMap.modifier_insertKey (inLexique, var_cas_constantName, var_cas_constantMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (8762)) ;
          switch (select_semantics_5F_parser_92 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_92 = false ;
              break ;
          }
        }
      }
      } break ;
    case 2 : {
      { bool syntaxRepeat_93 = true ;
        while (syntaxRepeat_93) {
          switch (select_semantics_5F_parser_93 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_constructor) COMMA_HERE) ;
              { bool syntaxRepeat_94 = true ;
                while (syntaxRepeat_94) {
                    GGS_lstring  var_cas_constantName ;
                    inLexique.assignFromAttribute_tokenString (var_cas_constantName) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                    var_cas_constantMap.modifier_insertKey (inLexique, var_cas_constantName, var_cas_constantMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (8772)) ;
                  switch (select_semantics_5F_parser_94 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_94 = false ;
                      break ;
                  }
                }
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_93 = false ;
              break ;
          }
        }
      }
      GGS_string var_cas_s = GGS_string ("") ;
      {
        GGS_enumConstantMap::cEnumerator enumerator_333480 (var_cas_constantMap, true) ;
        const GGS_enumConstantMap::cElement * operand_333480 = enumerator_333480.nextObject () ;
        if ((operand_333480 != NULL)) {
          bool _foreach_loop_333480 ;
          do{
            macroValidPointer (operand_333480) ;
            var_cas_s.dotAssign_operation (operand_333480->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8780))) ;
            operand_333480 = enumerator_333480.nextObject () ;
            _foreach_loop_333480 = ((operand_333480 != NULL)) ;
            if (_foreach_loop_333480) {
              var_cas_s.appendCString (", ") ;
            }
          }while (_foreach_loop_333480) ;
        }
      }
      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, ((GGS_string ("Old style declaration: now write '... {")).operator_concat (var_cas_s)).operator_concat (GGS_string ("} ...")) COMMA_SOURCE_FILE_AT_LINE (8783)) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_typeEnumMessageMap  var_cas_enumMessageMap = GGS_typeEnumMessageMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  { bool syntaxRepeat_95 = true ;
    while (syntaxRepeat_95) {
      switch (select_semantics_5F_parser_95 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
          GGS_lstring  var_cas_messageName ;
          inLexique.assignFromAttribute_tokenString (var_cas_messageName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
          GGS_typeEnumCstMessageStringMap  var_cas_cstMessageStringMap = GGS_typeEnumCstMessageStringMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
          { bool syntaxRepeat_96 = true ;
            while (syntaxRepeat_96) {
                GGS_lstring  var_cas_cstName ;
                inLexique.assignFromAttribute_tokenString (var_cas_cstName) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
                GGS_lstring  var_cas_cstString ;
                inLexique.assignFromAttribute_tokenString (var_cas_cstString) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                var_cas_cstMessageStringMap.modifier_insertKey (inLexique, var_cas_cstName, var_cas_cstString COMMA_SOURCE_FILE_AT_LINE (8802)) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              switch (select_semantics_5F_parser_96 (inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_96 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          GGS_lstringlist  var_cas_messageStringList = GGS_lstringlist ::constructor_emptyList () ;
          {
            GGS_enumConstantMap::cEnumerator enumerator_334299 (var_cas_constantMap, true) ;
            const GGS_enumConstantMap::cElement * operand_334299 = NULL ;
            while (((operand_334299 = enumerator_334299.nextObject ()))) {
              macroValidPointer (operand_334299) ;
              GGS_lstring  var_cas_name = GGS_lstring ::constructor_new (inLexique, operand_334299->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (8812)), GGS_location (inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_cstString ;
              const GGS_typeEnumCstMessageStringMap  temp_334426 = var_cas_cstMessageStringMap ;
              if (temp_334426.isBuilt ()) {
                temp_334426 (HERE)->method_searchKey (inLexique, var_cas_name, var_cas_cstString COMMA_SOURCE_FILE_AT_LINE (8814)) ;
              }
              var_cas_messageStringList.addAssign_operation (var_cas_cstString) ;
            }
          }
          var_cas_enumMessageMap.modifier_insertKey (inLexique, var_cas_messageName, var_cas_messageStringList COMMA_SOURCE_FILE_AT_LINE (8818)) ;
          } break ;
        default :
          syntaxRepeat_95 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_typeEntityToGenerate  var_cas_e = GGS_enumGalgasType ::constructor_new (inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_e) ;
  GGS_AC_galgasType  var_cas_t = GGS_typeGalgas_enum ::constructor_new (inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_ee = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_enumTypeName, var_cas_ee COMMA_SOURCE_FILE_AT_LINE (8836)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i87_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_enum) COMMA_HERE) ;
  GGS_lstring  var_cas_enumTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_enumTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_enumConstantMap  var_cas_constantMap = GGS_enumConstantMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  switch (select_semantics_5F_parser_91 (inLexique)) {
    case 1 : {
      { bool syntaxRepeat_92 = true ;
        while (syntaxRepeat_92) {
            GGS_lstring  var_cas_constantName ;
            inLexique.assignFromAttribute_tokenString (var_cas_constantName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            var_cas_constantMap.modifier_insertKey (inLexique, var_cas_constantName, var_cas_constantMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (8857)) ;
          switch (select_semantics_5F_parser_92 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_92 = false ;
              break ;
          }
        }
      }
      } break ;
    case 2 : {
      { bool syntaxRepeat_93 = true ;
        while (syntaxRepeat_93) {
          switch (select_semantics_5F_parser_93 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_constructor) COMMA_HERE) ;
              { bool syntaxRepeat_94 = true ;
                while (syntaxRepeat_94) {
                    GGS_lstring  var_cas_constantName ;
                    inLexique.assignFromAttribute_tokenString (var_cas_constantName) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                    var_cas_constantMap.modifier_insertKey (inLexique, var_cas_constantName, var_cas_constantMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (8867)) ;
                  switch (select_semantics_5F_parser_94 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_94 = false ;
                      break ;
                  }
                }
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_93 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_typeEnumMessageMap  var_cas_exEnumMessageMap = GGS_typeEnumMessageMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_EXenumMessageMap  var_cas_enumMessageMap = GGS_EXenumMessageMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  { bool syntaxRepeat_95 = true ;
    while (syntaxRepeat_95) {
      switch (select_semantics_5F_parser_95 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
          GGS_lstring  var_cas_messageName ;
          inLexique.assignFromAttribute_tokenString (var_cas_messageName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          var_cas_enumMessageMap.modifier_insertKey (inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (8885)) ;
          GGS_lstringlist  var_cas_messageStringList = GGS_lstringlist ::constructor_emptyList () ;
          var_cas_exEnumMessageMap.modifier_insertKey (inLexique, var_cas_messageName, var_cas_messageStringList COMMA_SOURCE_FILE_AT_LINE (8887)) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
          { bool syntaxRepeat_96 = true ;
            while (syntaxRepeat_96) {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              switch (select_semantics_5F_parser_96 (inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_96 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_95 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_t = GGS_typeGalgas_enum ::constructor_new (inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_exEnumMessageMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_enumTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (8908)) ;
  GGS_TypeModel  var_cas_type = GGS_EnumModel ::constructor_new (inLexique, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (inLexique, var_cas_enumTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (8910)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::rule_semantics_5F_parser_semantics_5F_declaration_i87_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_enum) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  switch (select_semantics_5F_parser_91 (inLexique)) {
    case 1 : {
      { bool syntaxRepeat_92 = true ;
        while (syntaxRepeat_92) {
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          switch (select_semantics_5F_parser_92 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_92 = false ;
              break ;
          }
        }
      }
      } break ;
    case 2 : {
      { bool syntaxRepeat_93 = true ;
        while (syntaxRepeat_93) {
          switch (select_semantics_5F_parser_93 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_constructor) COMMA_HERE) ;
              { bool syntaxRepeat_94 = true ;
                while (syntaxRepeat_94) {
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  switch (select_semantics_5F_parser_94 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_94 = false ;
                      break ;
                  }
                }
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_93 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_95 = true ;
    while (syntaxRepeat_95) {
      switch (select_semantics_5F_parser_95 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
          { bool syntaxRepeat_96 = true ;
            while (syntaxRepeat_96) {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
              switch (select_semantics_5F_parser_96 (inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_96 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_95 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

