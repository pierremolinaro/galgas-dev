//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semantics_parser.cpp'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                     december 1st, 2006, at 19h33'50"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "semantics_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "semantics_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_438_24_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  GGS_lstring  var_cas_componentName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_componentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_string var_cas_defLexique ;
  var_cas_defLexique = GGS_string (true, "") ;
  GGS_ModelMap  var_cas_modelMap ;
  var_cas_modelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_ActionMap  var_cas_actionMap ;
  var_cas_actionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_inclusionsForHeaderFile ;
  GGS_stringset  var_cas_inclusionsForImplementationFile ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentEntitiesMap ;
  GGS_stringset  var_cas_classNamesSet ;
  var_cas_classNamesSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  GGS_stringset  var_cas_includedGrammarComponents ;
  GGS_entityToImplementMap  var_cas_allMetamodelClassMap ;
  nt_import_headers_semantics_and_grammars_ (_inLexique, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_includedGrammarComponents, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap, var_cas_ioGrammarComponentsMap, var_cas_ioOptionsComponentsMap, var_cas_inclusionsForImplementationFile, var_cas_inclusionsForHeaderFile, var_cas_optionsComponentsMapForUse, var_cas_modelMap, var_cas_actionMap, var_cas_componentEntitiesMap, var_cas_tableEnAvant, var_cas_allMetamodelClassMap) ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_18643 = _inLexique.parsingContext () ;
    GGS_typeTableRoutinesAimplementer  var_cas_UNUSED_tableRoutinesAimplementer ;
    var_cas_UNUSED_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_UNUSED_tableNomRoutinesDeclarees ;
    var_cas_UNUSED_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableEnAvant  var_cas_UNUSED_tableEnAvant ;
    var_cas_UNUSED_tableEnAvant = var_cas_tableEnAvant ;
    GGS_M_semanticsEntitiesForUse  var_cas_UNUSED_componentSemanticsEntitiesMap ;
    var_cas_UNUSED_componentSemanticsEntitiesMap = var_cas_componentEntitiesMap ;
    { bool syntaxRepeat = true ;
      while (syntaxRepeat) {
        switch (select_repeat_semantics_parser_0 (_inLexique)) {
          case 2 : {
            nt_semantics_declaration_importSemantics (_inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_UNUSED_componentSemanticsEntitiesMap, var_cas_UNUSED_tableNomRoutinesDeclarees, var_cas_UNUSED_tableEnAvant, var_cas_UNUSED_tableRoutinesAimplementer) ;
            } break ;
          default :
            syntaxRepeat = false ;
            break ;
        }
      }
    }
  //--- Branch of parse/rewind instruction
    _inLexique.setParsingContext (context_18643) ;
    GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer ;
    var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees ;
    var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
    var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
    { bool syntaxRepeat = true ;
      while (syntaxRepeat) {
        switch (select_repeat_semantics_parser_0 (_inLexique)) {
          case 2 : {
            nt_semantics_declaration_ (_inLexique, var_cas_componentEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_optionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer) ;
            } break ;
          default :
            syntaxRepeat = false ;
            break ;
        }
      }
    }
  //--- End of parse/rewind instruction
  if (((! (var_cas_ioSemanticsComponentsMap.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (525)) SOURCE_FILE_AT_LINE (525))))).isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap ;
    var_cas_optionsComponentsMap = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
    var_cas_ioSemanticsComponentsMap.modifier_insertKey (_inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentEntitiesMap SOURCE_FILE_AT_LINE (528)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeTableNomRoutinesDeclarees::element_type * operand_19235 = var_cas_tableNomRoutinesDeclarees.firstObject () ;
  while ((operand_19235 != NULL)) {
    macroValidPointer (operand_19235) ;
    if (((! (var_cas_tableRoutinesAimplementer.reader_hasKey (_inLexique, operand_19235->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (544)) SOURCE_FILE_AT_LINE (544))))).isBuiltAndTrue ()) {
      operand_19235->mKey.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the routine '")) + (operand_19235->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (545))))) + (GGS_string (true, "' is not implemented within the component"))) SOURCE_FILE_AT_LINE (547)) ;
    }
    operand_19235 = operand_19235->nextObject () ;
  }
  if (var_cas_componentName._isBuilt () &&
      var_cas_inclusionsForHeaderFile._isBuilt () &&
      var_cas_defLexique._isBuilt () &&
      var_cas_listeEntitesAengendrer._isBuilt () &&
      var_cas_inclusionsForImplementationFile._isBuilt ()) {
    ::routine_generateSemanticsComponent (_inLexique,  var_cas_componentName,  var_cas_inclusionsForHeaderFile,  var_cas_defLexique,  var_cas_listeEntitesAengendrer,  var_cas_inclusionsForImplementationFile SOURCE_FILE_AT_LINE (551)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_438_24_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_438_24_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  GGS_lstring  var_cas_componentName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_componentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  ::routine_enterBuiltinTypes (_inLexique,  var_cas_componentSemanticsEntitiesMap SOURCE_FILE_AT_LINE (582)) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  var_cas_includedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_ModelMap  var_cas_modelMap ;
  GGS_ActionMap  var_cas_actionMap ;
  nt_import_headers_semantics_and_grammars_importSemantics (_inLexique, var_cas_ioSemanticsComponentsMap, var_cas_includedSemanticsComponents, var_cas_includedOptionComponents, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
  GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer ;
  var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees ;
  var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_importSemantics (_inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (((! (var_cas_ioSemanticsComponentsMap.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (614)) SOURCE_FILE_AT_LINE (614))))).isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap ;
    var_cas_optionsComponentsMap = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
    var_cas_ioSemanticsComponentsMap.modifier_insertKey (_inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentSemanticsEntitiesMap SOURCE_FILE_AT_LINE (617)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_438_24_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_438_24_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_438_24_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'import_headers_semantics_and_grammars'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_682_45_ (galgas_scanner & _inLexique,
                                GGS_stringset  &var_cas_outImportedSemanticsComponents,
                                GGS_stringset  &var_cas_outIncludedMetamodelComponents,
                                GGS_stringset  &var_cas_outImportedOptionComponents,
                                GGS_stringset  &var_cas_outImportedGrammarComponents,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_stringset  &var_cas_outInclusionsForImplementationFile,
                                GGS_stringset  &var_cas_outInclusionsForHeaderFile,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_entityToImplementMap  &var_cas_outAllMetamodelClassMap) {
  var_cas_outAllMetamodelClassMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outActionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outInclusionsForHeaderFile = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outInclusionsForImplementationFile = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outIncludedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedOptionComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedGrammarComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_ioOptionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "char"), GGS_location (_inLexique) COMMA_HERE), GGS_CharModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (715)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "string"), GGS_location (_inLexique) COMMA_HERE), GGS_StringModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (717)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "uint"), GGS_location (_inLexique) COMMA_HERE), GGS_UIntModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (719)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "sint"), GGS_location (_inLexique) COMMA_HERE), GGS_SIntModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (721)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "uint64"), GGS_location (_inLexique) COMMA_HERE), GGS_UInt64Model::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (723)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "sint64"), GGS_location (_inLexique) COMMA_HERE), GGS_SInt64Model::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (725)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "bool"), GGS_location (_inLexique) COMMA_HERE), GGS_BoolModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (727)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "double"), GGS_location (_inLexique) COMMA_HERE), GGS_DoubleModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (729)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lchar"), GGS_location (_inLexique) COMMA_HERE), GGS_LCharModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (731)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lstring"), GGS_location (_inLexique) COMMA_HERE), GGS_LStringModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (733)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "luint"), GGS_location (_inLexique) COMMA_HERE), GGS_LUIntModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (735)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lsint"), GGS_location (_inLexique) COMMA_HERE), GGS_LSIntModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (737)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "luint64"), GGS_location (_inLexique) COMMA_HERE), GGS_LUInt64Model::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (739)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lsint64"), GGS_location (_inLexique) COMMA_HERE), GGS_LSInt64Model::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (741)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lbool"), GGS_location (_inLexique) COMMA_HERE), GGS_LBoolModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (743)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "ldouble"), GGS_location (_inLexique) COMMA_HERE), GGS_LDoubleModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (745)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "location"), GGS_location (_inLexique) COMMA_HERE), GGS_LocationModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (747)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "stringset"), GGS_location (_inLexique) COMMA_HERE), GGS_StringsetModel::constructor_new (_inLexique COMMA_HERE) SOURCE_FILE_AT_LINE (749)) ;
  ::routine_enterBuiltinTypes (_inLexique,  var_cas_ioComponentSemanticsEntitiesMap SOURCE_FILE_AT_LINE (751)) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents ;
  var_cas_alreadyImportedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents ;
  var_cas_alreadyImportedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
              GGS_lstring  var_cas_optionComponentName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_optionComponentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              var_cas_outImportedOptionComponents._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (762))) ;
              GGS_M_cli_options  var_cas_boolOptionsMap ;
              GGS_M_cli_options  var_cas_uintOptionsMap ;
              GGS_M_cli_options  var_cas_stringOptionsMap ;
              switch (select_semantics_parser_3 (_inLexique)) {
                case 1 : {
                  if (var_cas_ioOptionsComponentsMap._isBuilt ()) {
                    var_cas_ioOptionsComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (767)) ;
                  }
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_fileName ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_fileName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  GGS_M_optionComponents  var_cas_importedOptionComponentsMap ;
                  var_cas_importedOptionComponentsMap = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
                  nt_parse_option_component_for_importing_ (_inLexique, var_cas_fileName, var_cas_importedOptionComponentsMap) ;
                  if (var_cas_importedOptionComponentsMap._isBuilt ()) {
                    var_cas_importedOptionComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (777)) ;
                  }
                  } break ;
                default :
                  break ;
              }
              var_cas_ioOptionsComponentsMapForUse.modifier_insertKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (779)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
              GGS_lstring  var_cas_grammarComponentName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_grammarComponentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              var_cas_outImportedGrammarComponents._addAssign_operation (var_cas_grammarComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (784))) ;
              GGS_M_grammarComponents  var_cas_grammarComponentsMap ;
              switch (select_semantics_parser_4 (_inLexique)) {
                case 1 : {
                  var_cas_grammarComponentsMap = var_cas_ioGrammarComponentsMap ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_sourceFile.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  var_cas_grammarComponentsMap = GGS_M_grammarComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
                  nt_parse_grammar_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_grammarComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              GGS_M_nonterminalSymbolAltsForGrammar  var_cas_nonterminalSymbolParametersMap ;
              GGS_lstring  automatic_var_0 ;
              GGS_M_optionComponents  automatic_var_1 ;
              if (var_cas_grammarComponentsMap._isBuilt ()) {
                var_cas_grammarComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_grammarComponentName, var_cas_nonterminalSymbolParametersMap, automatic_var_0, automatic_var_1 SOURCE_FILE_AT_LINE (801)) ;
              }
              GGS_M_nonterminalSymbolAlts  var_cas_grammarAltMap ;
              var_cas_grammarAltMap = GGS_M_nonterminalSymbolAlts::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_M_nonterminalSymbolAltsForGrammar::element_type * operand_28354 = var_cas_nonterminalSymbolParametersMap.firstObject () ;
              while ((operand_28354 != NULL)) {
                macroValidPointer (operand_28354) ;
                GGS_L_EXsignature  var_cas_formalParametersList ;
                var_cas_formalParametersList = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                GGS_L_signature::element_type * operand_28507 = operand_28354->mInfo.mFormalParametersList.firstObject () ;
                while ((operand_28507 != NULL)) {
                  macroValidPointer (operand_28507) ;
                  GGS_AC_semanticsEntity  var_cas_e ;
                  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
                    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, operand_28507->mGalgasTypeName, var_cas_e SOURCE_FILE_AT_LINE (807)) ;
                  }
                  GGS_AC_galgasType  var_cas_type ;
                  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_e.getPtr ()) ;
                    if (ptrExtraire_ == NULL) {
                      var_cas_type._drop_operation () ;
                      if (var_cas_e.getPtr () != NULL) {
                        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
                        C_String message2_ ;
                        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
                        message2_ << var_cas_e (HERE)->message_messageTypeEntite () ;
                        operand_28507->mGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (809)) ;
                      }
                    }else{
                      macroValidPointer (ptrExtraire_) ;
                      var_cas_type = ptrExtraire_->aDefType ;
                    }
                  }
                  var_cas_formalParametersList._addAssign_operation (var_cas_type, operand_28507->mFormalArgumentPassingMode) ;
                  operand_28507 = operand_28507->nextObject () ;
                }
                var_cas_grammarAltMap.modifier_insertKey (_inLexique, operand_28354->mKey, var_cas_formalParametersList, operand_28354->mInfo.mReturnedEntityTypeName SOURCE_FILE_AT_LINE (812)) ;
                operand_28354 = operand_28354->nextObject () ;
              }
              GGS_AC_semanticsEntity  var_cas_e ;
              var_cas_e = GGS_C_grammarForSemantics::constructor_new (_inLexique, var_cas_grammarAltMap COMMA_HERE) ;
              var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_grammarComponentName, var_cas_e SOURCE_FILE_AT_LINE (815)) ;
              GGS_lstring  var_cas_path ;
              var_cas_path = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_extension ;
              var_cas_extension = GGS_lstring::constructor_new (_inLexique, GGS_string (true, "h"), GGS_location (_inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_fileNameWithPath ;
              if (var_cas_path._isBuilt () &&
                  var_cas_grammarComponentName._isBuilt () &&
                  var_cas_extension._isBuilt ()) {
                ::routine_buildFileNameWithPath (_inLexique,  var_cas_fileNameWithPath,  var_cas_path,  var_cas_grammarComponentName,  var_cas_extension SOURCE_FILE_AT_LINE (819)) ;
              }
              var_cas_outInclusionsForImplementationFile._addAssign_operation (var_cas_fileNameWithPath.reader_string (_inLexique SOURCE_FILE_AT_LINE (820))) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
              GGS_lstring  var_cas_componentName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_componentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              switch (select_semantics_parser_5 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_sourceFile.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              if (((! (var_cas_outImportedSemanticsComponents.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (837)) SOURCE_FILE_AT_LINE (837))))).isBuiltAndTrue ()) {
                GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
                GGS_M_optionComponents  var_cas_importedOptionsComponentsMap ;
                GGS_ModelMap  automatic_var_2 ;
                GGS_ActionMap  automatic_var_3 ;
                GGS_stringset  automatic_var_4 ;
                GGS_stringset  automatic_var_5 ;
                GGS_stringset  automatic_var_6 ;
                if (var_cas_ioSemanticsComponentsMap._isBuilt ()) {
                  var_cas_ioSemanticsComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_componentName, automatic_var_2, automatic_var_3, automatic_var_4, automatic_var_5, automatic_var_6, var_cas_importedOptionsComponentsMap, var_cas_importedEntities SOURCE_FILE_AT_LINE (840)) ;
                }
                GGS_M_semanticsEntitiesForUse::element_type * operand_30185 = var_cas_importedEntities.firstObject () ;
                while ((operand_30185 != NULL)) {
                  macroValidPointer (operand_30185) ;
                  if (((! (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, operand_30185->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (842)) SOURCE_FILE_AT_LINE (842))))).isBuiltAndTrue ()) {
                    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, operand_30185->mKey, operand_30185->mInfo.aDefEntite SOURCE_FILE_AT_LINE (843)) ;
                  }
                  operand_30185 = operand_30185->nextObject () ;
                }
                var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (846))) ;
                GGS_M_optionComponents::element_type * operand_30628 = var_cas_importedOptionsComponentsMap.firstObject () ;
                while ((operand_30628 != NULL)) {
                  macroValidPointer (operand_30628) ;
                  if (((! (var_cas_ioOptionsComponentsMapForUse.reader_hasKey (_inLexique, operand_30628->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (849)) SOURCE_FILE_AT_LINE (849))))).isBuiltAndTrue ()) {
                    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '")) + (operand_30628->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (850))))) + (GGS_string (true, "' option component must have been imported"))) SOURCE_FILE_AT_LINE (851)) ;
                  }
                  operand_30628 = operand_30628->nextObject () ;
                }
              }
              ::routine_importSemanticsComponent (_inLexique,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName SOURCE_FILE_AT_LINE (856)) ;
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (865))) ;
              var_cas_outImportedSemanticsComponents._addAssign_operation (var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (866))) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
              GGS_lstring  var_cas_metamodelComponentName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_metamodelComponentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              switch (select_semantics_parser_6 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_sourceFile.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              if (((! (var_cas_outIncludedMetamodelComponents.reader_hasKey (_inLexique, var_cas_metamodelComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (883)) SOURCE_FILE_AT_LINE (883))))).isBuiltAndTrue ()) {
                GGS_entityToImplementMap  var_cas_metamodelClassMap ;
                GGS_lstring  automatic_var_7 ;
                GGS_stringset  automatic_var_8 ;
                if (var_cas_ioMetamodelComponentMap._isBuilt ()) {
                  var_cas_ioMetamodelComponentMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelComponentName, automatic_var_7, var_cas_metamodelClassMap, automatic_var_8 SOURCE_FILE_AT_LINE (885)) ;
                }
                GGS_entityToImplementMap::element_type * operand_32060 = var_cas_metamodelClassMap.firstObject () ;
                while ((operand_32060 != NULL)) {
                  macroValidPointer (operand_32060) ;
                  var_cas_outAllMetamodelClassMap.modifier_insertKey (_inLexique, operand_32060->mKey, operand_32060->mInfo.mAllMetamodelPropertyMap, operand_32060->mInfo.mIsAbstract, operand_32060->mInfo.mCurrentMetamodelPropertyMap, operand_32060->mInfo.mSuperEntityName, operand_32060->mInfo.mCurrentConstraintPropertyMap, operand_32060->mInfo.mSuperEntitySet, operand_32060->mInfo.mAllConstraintPropertyMap, operand_32060->mInfo.mAllAvailablePropertyMap SOURCE_FILE_AT_LINE (896)) ;
                  operand_32060 = operand_32060->nextObject () ;
                }
                var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (907))) ;
              }
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (910))) ;
              var_cas_outIncludedMetamodelComponents._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (911))) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_682_45_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_stringset  &var_cas_outIncludedSemanticsComponents,
                                GGS_stringset  &var_cas_outIncludedOptionComponents,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  var_cas_outActionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outIncludedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outIncludedOptionComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents ;
  var_cas_alreadyImportedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents ;
  var_cas_alreadyImportedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
              GGS_lstring  var_cas_optionComponentName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_optionComponentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              var_cas_outIncludedOptionComponents._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (941))) ;
              switch (select_semantics_parser_3 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_option_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_semantics_parser_4 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_grammar_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
              GGS_lstring  var_cas_componentName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_componentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              var_cas_outIncludedSemanticsComponents._addAssign_operation (var_cas_componentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (961))) ;
              switch (select_semantics_parser_5 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_sourceFile.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
              GGS_ModelMap  automatic_var_9 ;
              GGS_ActionMap  automatic_var_10 ;
              GGS_stringset  automatic_var_11 ;
              GGS_stringset  automatic_var_12 ;
              GGS_stringset  automatic_var_13 ;
              GGS_M_optionComponents  automatic_var_14 ;
              if (var_cas_ioSemanticsComponentsMap._isBuilt ()) {
                var_cas_ioSemanticsComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_componentName, automatic_var_9, automatic_var_10, automatic_var_11, automatic_var_12, automatic_var_13, automatic_var_14, var_cas_importedEntities SOURCE_FILE_AT_LINE (975)) ;
              }
              GGS_M_semanticsEntitiesForUse::element_type * operand_35319 = var_cas_importedEntities.firstObject () ;
              while ((operand_35319 != NULL)) {
                macroValidPointer (operand_35319) ;
                if (((! (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, operand_35319->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (977)) SOURCE_FILE_AT_LINE (977))))).isBuiltAndTrue ()) {
                  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, operand_35319->mKey, operand_35319->mInfo.aDefEntite SOURCE_FILE_AT_LINE (978)) ;
                }
                operand_35319 = operand_35319->nextObject () ;
              }
              ::routine_importSemanticsComponent (_inLexique,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName SOURCE_FILE_AT_LINE (983)) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
              GGS_lstring  var_cas_metamodelComponentName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_metamodelComponentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              switch (select_semantics_parser_6 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_sourceFile.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              GGS_lstring  automatic_var_15 ;
              GGS_entityToImplementMap  automatic_var_16 ;
              GGS_stringset  automatic_var_17 ;
              if (var_cas_ioMetamodelComponentMap._isBuilt ()) {
                var_cas_ioMetamodelComponentMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelComponentName, automatic_var_15, automatic_var_16, automatic_var_17 SOURCE_FILE_AT_LINE (1007)) ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_682_45_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_semantics_parser_3 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_option_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_semantics_parser_4 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_grammar_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_semantics_parser_5 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_semantics_parser_6 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1019_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
  GGS_lstring  var_cas_routineName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_routineName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_routineName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1046)) SOURCE_FILE_AT_LINE (1046))).isBuiltAndTrue ()) {
    GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_routineName, var_cas_entite SOURCE_FILE_AT_LINE (1049)) ;
    }
    { cPtr_typeEntiteRoutine * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteRoutine *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_listeDeTypesPrecedenteDeclaration._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteRoutine::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_routineName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1050)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_listeDeTypesPrecedenteDeclaration = ptrExtraire_->aListeArgumentsFormels ;
      }
    }
    ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  GGS_location (_inLexique) SOURCE_FILE_AT_LINE (1052)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (_inLexique, var_cas_routineName SOURCE_FILE_AT_LINE (1057)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteRoutine::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_entite SOURCE_FILE_AT_LINE (1059)) ;
  }
  switch (select_semantics_parser_7 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      GGS_typeInstructionList  var_cas_ioInstructionList ;
      var_cas_ioInstructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_entityPropertyMap  var_cas_propertyMap ;
      var_cas_propertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_stringset  var_cas_constraintPropertyDefinitionSet ;
      var_cas_constraintPropertyDefinitionSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
      GGS_callInstructionSharedPropertySignatureMap  var_cas_callInstructionSharedPropertySignatureMap ;
      var_cas_callInstructionSharedPropertySignatureMap = GGS_callInstructionSharedPropertySignatureMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_semantic_instructions_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_tableArgumentsMethode, var_cas_ioInstructionList, var_cas_propertyMap, var_cas_constraintPropertyDefinitionSet, var_cas_callInstructionSharedPropertySignatureMap) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      GGS_typeEntityToGenerate  var_cas_ea ;
      var_cas_ea = GGS_typeRoutineAengendrer::constructor_new (_inLexique, var_cas_routineName, var_cas_listeTypeEtNomsArguments, var_cas_ioInstructionList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_ea) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (_inLexique, var_cas_routineName SOURCE_FILE_AT_LINE (1090)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1019_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
  GGS_lstring  var_cas_routineName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_routineName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  var_cas_ioExternActionMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_signature, GGS_bool (true, false) SOURCE_FILE_AT_LINE (1117)) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_routineName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1120)) SOURCE_FILE_AT_LINE (1120))).isBuiltAndTrue ()) {
    GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_routineName, var_cas_entite SOURCE_FILE_AT_LINE (1123)) ;
    }
    { cPtr_typeEntiteRoutine * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteRoutine *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_listeDeTypesPrecedenteDeclaration._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteRoutine::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_routineName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1124)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_listeDeTypesPrecedenteDeclaration = ptrExtraire_->aListeArgumentsFormels ;
      }
    }
    ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  GGS_location (_inLexique) SOURCE_FILE_AT_LINE (1126)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (_inLexique, var_cas_routineName SOURCE_FILE_AT_LINE (1131)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteRoutine::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_entite SOURCE_FILE_AT_LINE (1133)) ;
  }
  switch (select_semantics_parser_7 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      nt_semantic_instructions_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (_inLexique, var_cas_routineName SOURCE_FILE_AT_LINE (1144)) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1019_29_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  switch (select_semantics_parser_7 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      nt_semantic_instructions_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1154_20_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClassName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1154_20_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outMessageMap = GGS_classMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClasses = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outAttributeList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1154_20_parse (galgas_scanner & /* _inLexique */) {
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1194_20_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outSuperClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_AC_galgasType  var_cas_typeUtilisateur ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outSuperClassName, var_cas_entite SOURCE_FILE_AT_LINE (1209)) ;
  }
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_typeUtilisateur._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_outSuperClassName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1210)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_typeUtilisateur = ptrExtraire_->aDefType ;
    }
  }
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_typeUtilisateur.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_tableDesMethodes._drop_operation () ;
      var_cas_listeTousAttributsSemantiques._drop_operation () ;
      var_cas_tableDesClassesAncetres._drop_operation () ;
      var_cas_tableMessagesAbstraits._drop_operation () ;
      var_cas_tableAttributs._drop_operation () ;
      if (var_cas_typeUtilisateur.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_typeUtilisateur (HERE)->message_messageGalgasType () ;
        var_cas_outSuperClassName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1218)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_tableDesMethodes = ptrExtraire_->mReaderMap ;
      var_cas_listeTousAttributsSemantiques = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetres = ptrExtraire_->mAncestorClassesMap ;
      var_cas_tableMessagesAbstraits = ptrExtraire_->mMessagesMap ;
      var_cas_tableAttributs = ptrExtraire_->mNonExternAttributesMap ;
    }
  }
  var_cas_tableDesClassesAncetres.modifier_insertKey (_inLexique, var_cas_outSuperClassName SOURCE_FILE_AT_LINE (1220)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1194_20_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits) {
  GGS_lstring  var_cas_superClassName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_superClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_AC_galgasType  var_cas_typeUtilisateur ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_entite SOURCE_FILE_AT_LINE (1240)) ;
  }
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_typeUtilisateur._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_superClassName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1241)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_typeUtilisateur = ptrExtraire_->aDefType ;
    }
  }
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_typeUtilisateur.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_tableDesMethodes._drop_operation () ;
      var_cas_listeTousAttributsSemantiques._drop_operation () ;
      var_cas_tableDesClassesAncetres._drop_operation () ;
      var_cas_tableMessagesAbstraits._drop_operation () ;
      var_cas_tableAttributs._drop_operation () ;
      if (var_cas_typeUtilisateur.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_typeUtilisateur (HERE)->message_messageGalgasType () ;
        var_cas_superClassName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1249)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_tableDesMethodes = ptrExtraire_->mReaderMap ;
      var_cas_listeTousAttributsSemantiques = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetres = ptrExtraire_->mAncestorClassesMap ;
      var_cas_tableMessagesAbstraits = ptrExtraire_->mMessagesMap ;
      var_cas_tableAttributs = ptrExtraire_->mNonExternAttributesMap ;
    }
  }
  var_cas_tableDesClassesAncetres.modifier_insertKey (_inLexique, var_cas_superClassName SOURCE_FILE_AT_LINE (1251)) ;
  GGS_TypeModel  var_cas_type ;
  if (var_cas_ioModelMap._isBuilt ()) {
    var_cas_ioModelMap (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_type SOURCE_FILE_AT_LINE (1254)) ;
  }
  if (var_cas_type._isBuilt ()) {
    cPtr_ClassModel * operand_46919 = dynamic_cast <cPtr_ClassModel *> (var_cas_type.getPtr ()) ;
    if (operand_46919 != NULL) {
      macroValidPointer (operand_46919) ; 
      var_cas_outSuperClasses = operand_46919->mSuperClasses ;
      var_cas_outAttributeList = operand_46919->mAttributeList ;
      var_cas_outMessageMap = operand_46919->mMessageMap ;
    }else{ // Else part
      var_cas_superClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '@")) + (var_cas_superClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1261))))) + (GGS_string (true, "' type is not a class"))) SOURCE_FILE_AT_LINE (1263)) ;
      var_cas_outSuperClasses._drop_operation () ;
      var_cas_outAttributeList._drop_operation () ;
      var_cas_outMessageMap._drop_operation () ;
    }
  }
  var_cas_outSuperClasses._addAssign_operation (var_cas_superClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1264))) ;
  var_cas_outMessageMap = GGS_classMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClasses = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outAttributeList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1194_20_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1278_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  GGS_bool var_cas_estAbstraite ;
  switch (select_semantics_parser_8 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
      var_cas_estAbstraite = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_estAbstraite = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_abstractClassName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_abstractClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_9 (_inLexique)) {
    case 1 : {
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1298)) SOURCE_FILE_AT_LINE (1298))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1299)) SOURCE_FILE_AT_LINE (1299))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType::constructor_new (_inLexique, var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t SOURCE_FILE_AT_LINE (1301)) ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_lstring  automatic_var_18 ;
      nt_parent_class_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap, automatic_var_18) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeAttributsExternesCourants ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
      var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
      var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
      var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes ;
      var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_10 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
              GGS_lstring  var_cas_messageName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_messageName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_lstring  var_cas_messageText ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
              var_cas_messageText.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              if (((! (var_cas_inheritedMessageMap.reader_hasKey (_inLexique, var_cas_messageName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1347)) SOURCE_FILE_AT_LINE (1347))))).isBuiltAndTrue ()) {
                var_cas_messageMapForHeirs.modifier_insertKey (_inLexique, var_cas_messageName SOURCE_FILE_AT_LINE (1348)) ;
              }
              var_cas_tableMessagesClasseConcrete.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageText SOURCE_FILE_AT_LINE (1350)) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 3 : {
              nt_abstract_method_ (_inLexique, var_cas_estAbstraite, var_cas_listeAttributsSemantiquesCourants, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse) ;
              } break ;
            case 5 : {
              nt_overrided_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeClassInheritedMessagesMap::element_type * operand_51894 = var_cas_inheritedMessageMap.firstObject () ;
      while ((operand_51894 != NULL)) {
        macroValidPointer (operand_51894) ;
        if (((! (var_cas_tableMessagesClasseConcrete.reader_hasKey (_inLexique, operand_51894->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1397)) SOURCE_FILE_AT_LINE (1397))))).isBuiltAndTrue ()) {
          GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the message '")) + (operand_51894->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1398))))) + (GGS_string (true, "' is not defined"))) SOURCE_FILE_AT_LINE (1399)) ;
        }
        operand_51894 = operand_51894->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_entite SOURCE_FILE_AT_LINE (1411)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_classToImplement::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_estAbstraite, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_listeAttributsSemantiquesCourants, var_cas_listeAttributsExternesCourants, var_cas_tableDesClassesAncetres, var_cas_tableMessagesClasseConcrete COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1278_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  GGS_bool var_cas_estAbstraite ;
  switch (select_semantics_parser_8 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
      var_cas_estAbstraite = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_estAbstraite = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_abstractClassName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_abstractClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_9 (_inLexique)) {
    case 1 : {
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1446)) SOURCE_FILE_AT_LINE (1446))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1447)) SOURCE_FILE_AT_LINE (1447))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType::constructor_new (_inLexique, var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t SOURCE_FILE_AT_LINE (1449)) ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_stringset  var_cas_superClasses ;
      GGS_typeListModel  var_cas_attributeList ;
      GGS_classMessageMap  var_cas_messageMap ;
      nt_parent_class_importSemantics (_inLexique, var_cas_ioModelMap, var_cas_superClasses, var_cas_attributeList, var_cas_messageMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeAttributsExternesCourants ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeList, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
      var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
      var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
      var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes ;
      var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
      var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
      var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_10 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
              GGS_lstring  var_cas_messageName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_messageName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_lstring  var_cas_messageText ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
              var_cas_messageText.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              if (((! (var_cas_inheritedMessageMap.reader_hasKey (_inLexique, var_cas_messageName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1502)) SOURCE_FILE_AT_LINE (1502))))).isBuiltAndTrue ()) {
                var_cas_messageMapForHeirs.modifier_insertKey (_inLexique, var_cas_messageName SOURCE_FILE_AT_LINE (1503)) ;
              }
              var_cas_tableMessagesClasseConcrete.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageText SOURCE_FILE_AT_LINE (1505)) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 3 : {
              nt_abstract_method_ (_inLexique, var_cas_estAbstraite, var_cas_listeAttributsSemantiquesCourants, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse) ;
              } break ;
            case 5 : {
              nt_overrided_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeClassInheritedMessagesMap::element_type * operand_57256 = var_cas_inheritedMessageMap.firstObject () ;
      while ((operand_57256 != NULL)) {
        macroValidPointer (operand_57256) ;
        if (((! (var_cas_tableMessagesClasseConcrete.reader_hasKey (_inLexique, operand_57256->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1551)) SOURCE_FILE_AT_LINE (1551))))).isBuiltAndTrue ()) {
          GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the message '")) + (operand_57256->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1552))))) + (GGS_string (true, "' is not defined"))) SOURCE_FILE_AT_LINE (1553)) ;
        }
        operand_57256 = operand_57256->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_entite SOURCE_FILE_AT_LINE (1565)) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ClassModel::constructor_new (_inLexique, GGS_bool (true, true), var_cas_superClasses, var_cas_attributeList, var_cas_messageMap COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t SOURCE_FILE_AT_LINE (1568)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1278_29_parse (galgas_scanner & _inLexique) {
  switch (select_semantics_parser_8 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  switch (select_semantics_parser_9 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      nt_parent_class_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_10 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 3 : {
              nt_abstract_method_parse (_inLexique) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_parse (_inLexique) ;
              } break ;
            case 5 : {
              nt_overrided_method_parse (_inLexique) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'abstract_method'             *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_abstract_method_semantics_parser_1576_23_ (galgas_scanner & _inLexique,
                                const GGS_bool &var_cas_inIsAbstract,
                                GGS_typeListeAttributsSemantiques  &/* var_cas_listeAttributsSemantiquesCourants */,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_method) ;
  if (((! (var_cas_inIsAbstract))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a concrete class should not declare an abstract method") SOURCE_FILE_AT_LINE (1589)) ;
  }
  GGS_lstring  var_cas_nomMethode ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomMethode.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  var_cas_tableDesMethodes.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (1604)) ;
  GGS_typeInstructionList  var_cas_listeInstructions ;
  var_cas_listeInstructions = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableMethodesAimplementer.modifier_insertAbstract (_inLexique, var_cas_nomMethode, var_cas_listeDeTypes, var_cas_listeTypeEtNomsArguments, var_cas_listeInstructions SOURCE_FILE_AT_LINE (1606)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_abstract_method_semantics_parser_1576_23_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_method) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parse_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_method_semantics_parser_1612_20_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  &var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                const GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  &var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  &var_cas_tableAttributsHerites,
                                const GGS_bool &var_cas_inClassIsAbstract,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outMethodName,
                                GGS_typeInstructionList  &var_cas_outInstructionsList,
                                GGS_L_EXsignature  &var_cas_outMethodSignature,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_outMethodName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap ;
  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeSemanticAttributesMap::element_type * operand_60855 = var_cas_tableAttributsHerites.firstObject () ;
  while ((operand_60855 != NULL)) {
    macroValidPointer (operand_60855) ;
    GGS_typeCplusPlusName  var_cas_nomCpp ;
    var_cas_nomCpp = GGS_typeDirectName::constructor_new (_inLexique, operand_60855->mKey COMMA_HERE) ;
    var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_60855->mKey, operand_60855->mInfo.mAttributType, var_cas_nomCpp SOURCE_FILE_AT_LINE (1636)) ;
    operand_60855 = operand_60855->nextObject () ;
  }
  GGS_lstring  var_cas_me_Constant ;
  var_cas_me_Constant = GGS_lstring::constructor_new (_inLexique, GGS_string (true, "self"), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_me_constantCppName ;
  var_cas_me_constantCppName = GGS_typeCppThisName::constructor_new (_inLexique COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_typeDefinition ;
  var_cas_typeDefinition = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_inCurrentClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, var_cas_me_Constant, var_cas_typeDefinition, var_cas_me_constantCppName SOURCE_FILE_AT_LINE (1649)) ;
  GGS_lstring  var_cas_super_Constant ;
  var_cas_super_Constant = GGS_lstring::constructor_new (_inLexique, GGS_string (true, "super"), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_super_constantCppName ;
  var_cas_super_constantCppName = GGS_typeCppInheritedName::constructor_new (_inLexique COMMA_HERE) ;
  var_cas_typeDefinition = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, var_cas_super_Constant, var_cas_typeDefinition, var_cas_super_constantCppName SOURCE_FILE_AT_LINE (1661)) ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_outMethodSignature, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  var_cas_componentSemanticsEntitiesMap = var_cas_ioComponentSemanticsEntitiesMap ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_typeDefinition COMMA_HERE) ;
  var_cas_componentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_inCurrentClassName, var_cas_entite SOURCE_FILE_AT_LINE (1676)) ;
  var_cas_outInstructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_entityPropertyMap  var_cas_propertyMap ;
  var_cas_propertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_constraintPropertyDefinitionSet ;
  var_cas_constraintPropertyDefinitionSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_callInstructionSharedPropertySignatureMap  var_cas_callInstructionSharedPropertySignatureMap ;
  var_cas_callInstructionSharedPropertySignatureMap = GGS_callInstructionSharedPropertySignatureMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_componentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_outInstructionsList, var_cas_propertyMap, var_cas_constraintPropertyDefinitionSet, var_cas_callInstructionSharedPropertySignatureMap) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_method_semantics_parser_1612_20_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'non_abstract_method'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_non_abstract_method_semantics_parser_1696_27_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  &var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  &var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                const GGS_bool &var_cas_inClassIsAbstract,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse) {
  switch (select_semantics_parser_11 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_method) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old syntax: from GALGAS 1.5.1, use 'method' instead of 'reader'") SOURCE_FILE_AT_LINE (1715)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_method_ (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_inOptionsComponentsMapForUse) ;
  var_cas_tableDesMethodes.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (1739)) ;
  var_cas_tableMethodesAimplementer.modifier_insertNotAbstract (_inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList SOURCE_FILE_AT_LINE (1740)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  switch (select_semantics_parser_12 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_method) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old syntax: from GALGAS 1.5.1, use 'method' instead of 'reader'") SOURCE_FILE_AT_LINE (1746)) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_non_abstract_method_semantics_parser_1696_27_parse (galgas_scanner & _inLexique) {
  switch (select_semantics_parser_11 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_method) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
      } break ;
    default :
      break ;
  }
  nt_parse_method_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  switch (select_semantics_parser_12 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_method) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'overrided_method'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_overrided_method_semantics_parser_1753_24_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  &var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  &var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                const GGS_bool &var_cas_inClassIsAbstract,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_override) ;
  switch (select_semantics_parser_13 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_method) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old syntax: from GALGAS 1.5.1, use 'method' instead of 'reader'") SOURCE_FILE_AT_LINE (1773)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_method_ (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_inOptionsComponentsMapForUse) ;
  GGS_L_EXsignature  var_cas_listeDeTypesMethodeOriginale ;
  if (var_cas_tableDesMethodes._isBuilt ()) {
    var_cas_tableDesMethodes (HERE)->method_searchKey (_inLexique, var_cas_methodName, var_cas_listeDeTypesMethodeOriginale SOURCE_FILE_AT_LINE (1799)) ;
  }
  ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesMethodeOriginale,  var_cas_methodSignature,  GGS_location (_inLexique) SOURCE_FILE_AT_LINE (1801)) ;
  var_cas_tableMethodesAimplementer.modifier_insertNotAbstract (_inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList SOURCE_FILE_AT_LINE (1806)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  switch (select_semantics_parser_14 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_method) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old syntax: from GALGAS 1.5.1, use 'method' instead of 'reader'") SOURCE_FILE_AT_LINE (1812)) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_overrided_method_semantics_parser_1753_24_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_override) ;
  switch (select_semantics_parser_13 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_method) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
      } break ;
    default :
      break ;
  }
  nt_parse_method_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  switch (select_semantics_parser_14 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_method) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'formal_arguments_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_arguments_list_semantics_parser_1822_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_EXsignature  &var_cas_listeDeTypes,
                                GGS_typeVariablesMap  &var_cas_tableArgumentsMethode,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_L_signature  &var_cas_outSignatureForGrammar) {
  var_cas_listeDeTypes = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_listeTypeEtNomsArguments = GGS_typeListeTypesEtNomsArgMethode::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_outSignatureForGrammar = GGS_L_signature::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_15 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_3F) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, true) ;
          switch (select_semantics_parser_16 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (1854)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
              var_cas_tableArgumentsMethode.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (1859)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_17 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              GGS_lstring  var_cas_nomArgument ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, true)) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (1880)) ;
              } break ;
            case 2 : {
              GGS_lstring  var_cas_nomArgument ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, true)) ;
              var_cas_tableArgumentsMethode.modifier_insertInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (1886)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_21) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          switch (select_semantics_parser_18 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, false)) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (1907)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, false)) ;
              var_cas_tableArgumentsMethode.modifier_insertInOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (1912)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_typeCplusPlusName  var_cas_natureNom ;
          var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument COMMA_HERE) ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, false) ;
          var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
          var_cas_tableArgumentsMethode.modifier_insertOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (1932)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_arguments_list_semantics_parser_1822_29_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_L_signature  &var_cas_outSignature) {
  var_cas_outSignature = GGS_L_signature::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_15 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_3F) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_16 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_17 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_21) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_18 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_arguments_list_semantics_parser_1822_29_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_15 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_3F) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_16 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_17 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_21) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_18 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
          nt_formal_argument_type_parse (_inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'type_parsing'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_type_parsing_semantics_parser_1989_20_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_definitionType,
                                GGS_lstring  &var_cas_outTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_entite SOURCE_FILE_AT_LINE (1996)) ;
  }
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_definitionType._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_outTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (1997)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_definitionType = ptrExtraire_->aDefType ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_type_parsing_semantics_parser_1989_20_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2006_45_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_inTargetVarName,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3D) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_AC_galgasType  var_cas_targetVarType ;
  GGS_typeCplusPlusName  var_cas_targetVarCppName ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, var_cas_targetVarType, var_cas_targetVarCppName SOURCE_FILE_AT_LINE (2027)) ;
  ::routine_checkAssignmentTypesCompatibility (_inLexique,  var_cas_targetVarType,  var_cas_sourceType,  GGS_location (_inLexique),  GGS_bool (true, true) SOURCE_FILE_AT_LINE (2029)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_assignmentInstruction::constructor_new (_inLexique, var_cas_targetVarCppName, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2006_45_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3D) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2041_45_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_inTargetVarName,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E_3D) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_AC_galgasType  var_cas_targetVarType ;
  GGS_typeCplusPlusName  var_cas_targetVarCppName ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, var_cas_targetVarType, var_cas_targetVarCppName SOURCE_FILE_AT_LINE (2062)) ;
  GGS_string var_cas_sourceExpressionConverter ;
  if (var_cas_targetVarType._isBuilt () && var_cas_sourceType._isBuilt ()) {
    cPtr_AC_galgasType * ptr_77188 = var_cas_targetVarType (HERE) ;
    cPtr_AC_galgasType * ptr_77202 = var_cas_sourceType (HERE) ;
    cPtr_typeGalgas_string * operand_77188 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_77188) ;
    cPtr_typeGalgas_string * operand_77202 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_77202) ;
    if ((operand_77188 != NULL) && (operand_77202 != NULL)) {
      var_cas_sourceExpressionConverter = GGS_string (true, "") ;
    }else{
      cPtr_typeGalgas_string * operand_77188 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_77188) ;
      cPtr_typeGalgas_lstring * operand_77202 = dynamic_cast <cPtr_typeGalgas_lstring *> (ptr_77202) ;
      if ((operand_77188 != NULL) && (operand_77202 != NULL)) {
        var_cas_sourceExpressionConverter = GGS_string (true, "ggs_string") ;
      }else{
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "for '.=' operator, ")) + (var_cas_targetVarType.reader_messageGalgasType (_inLexique SOURCE_FILE_AT_LINE (2071))))) + (GGS_string (true, " target object type is not compatible with ")))) + (var_cas_sourceType.reader_messageGalgasType (_inLexique SOURCE_FILE_AT_LINE (2072))))) + (GGS_string (true, " source expression type"))) SOURCE_FILE_AT_LINE (2074)) ;
        var_cas_sourceExpressionConverter._drop_operation () ;
      }
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_dotEqualInstruction::constructor_new (_inLexique, var_cas_targetVarCppName, var_cas_sourceExpression, var_cas_sourceExpressionConverter COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2041_45_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E_3D) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'input_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_input_parameters_list_semantics_parser_2088_29_ (galgas_scanner & _inLexique,
                                GGS_L_assignedVariables  &var_cas_listeAffectationParametresEffectifs,
                                GGS_typeCplusPlusNameList  &var_cas_outAllVariablesList,
                                GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap) {
  GGS_typeListeCibles  var_cas_listeCibles ;
  var_cas_listeCibles = GGS_typeListeCibles::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_19 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          switch (select_semantics_parser_20 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_nomVariableDest ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomVariableDest.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_AC_galgasType  var_cas_typeVarDest ;
              GGS_typeCplusPlusName  var_cas_nomCppDest ;
              var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomVariableDest, var_cas_typeVarDest, var_cas_nomCppDest SOURCE_FILE_AT_LINE (2103)) ;
              var_cas_listeCibles._addAssign_operation (GGS_typeEntiteDest::constructor_new (_inLexique, var_cas_typeVarDest, var_cas_nomCppDest, GGS_location (_inLexique) COMMA_HERE)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
              var_cas_listeCibles._addAssign_operation (GGS_typeJoker::constructor_new (_inLexique COMMA_HERE)) ;
              } break ;
            case 3 : {
              GGS_luint  var_cas_jokerCountWithLocation ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              var_cas_jokerCountWithLocation.defineAttributeFromScanner (_inLexique.uint32value, _inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
              GGS_uint  var_cas_jokerCount ;
              var_cas_jokerCount = var_cas_jokerCountWithLocation.reader_uint (_inLexique SOURCE_FILE_AT_LINE (2112)) ;
              GGS_uint _variant_79089 = var_cas_jokerCount._add_operation (_inLexique, GGS_uint (true, 1U) SOURCE_FILE_AT_LINE (2113)) ;
              GGS_bool _condition_79089 (_variant_79089._isBuilt (), true) ;
              while (_condition_79089.isBuiltAndTrue ()) {
                _condition_79089 = (var_cas_jokerCount) > (GGS_uint (true, 0U)) ;
                if (_condition_79089.isBuiltAndTrue ()) {
                  if (_variant_79089.uintValue () == 0) {
                    _inLexique.onTheFlyRunTimeError ("loop variant error" SOURCE_FILE_AT_LINE (2117)) ;
                    _condition_79089 = GGS_bool (true, false) ;
                  }else{
                    _variant_79089._decrement_operation (_inLexique COMMA_HERE) ;
                    var_cas_listeCibles._addAssign_operation (GGS_typeJoker::constructor_new (_inLexique COMMA_HERE)) ;
                    var_cas_jokerCount._decrement_operation (_inLexique SOURCE_FILE_AT_LINE (2116)) ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_bool var_cas_ellipsis ;
  switch (select_semantics_parser_21 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E_2E_2E) ;
      var_cas_ellipsis = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_ellipsis = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  if (((var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2128))) < (var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2128)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "too much arguments: ")) + (var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2129)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2129))))) + (GGS_string (true, " expected, ")))) + (var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2130)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2130))))) + (GGS_string (true, " found"))) SOURCE_FILE_AT_LINE (2132)) ;
    var_cas_outAllVariablesList._drop_operation () ;
    var_cas_listeAffectationParametresEffectifs._drop_operation () ;
  }else if (((((var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2132))) > (var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2132)))) & ((! (var_cas_ellipsis))))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "argument(s) missing: ")) + (var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2133)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2133))))) + (GGS_string (true, " expected, ")))) + (var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2134)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2134))))) + (GGS_string (true, " found"))) SOURCE_FILE_AT_LINE (2136)) ;
    var_cas_outAllVariablesList._drop_operation () ;
    var_cas_listeAffectationParametresEffectifs._drop_operation () ;
  }else{
    var_cas_listeAffectationParametresEffectifs = GGS_L_assignedVariables::constructor_emptyList (_inLexique COMMA_HERE) ;
    var_cas_outAllVariablesList = GGS_typeCplusPlusNameList::constructor_emptyList (_inLexique COMMA_HERE) ;
    GGS_typeListeAttributsSemantiques::element_type * operand_80107 = var_cas_listeAttributsSemantiques.firstObject () ;
    GGS_typeListeCibles::element_type * operand_80189 = var_cas_listeCibles.firstObject () ;
    while ((operand_80107 != NULL)
        && (operand_80189 != NULL)) {
      macroValidPointer (operand_80107) ;
      macroValidPointer (operand_80189) ;
      GGS_lstring  var_cas_nomAttributSource ;
      var_cas_nomAttributSource = operand_80107->aNomAttribut ;
      if (operand_80189->aCible._isBuilt ()) {
        operand_80189->aCible (HERE)->method_verifierType (_inLexique, operand_80107->mAttributType, var_cas_nomAttributSource, var_cas_listeAffectationParametresEffectifs, var_cas_outAllVariablesList SOURCE_FILE_AT_LINE (2142)) ;
      }
      operand_80107 = operand_80107->nextObject () ;
      operand_80189 = operand_80189->nextObject () ;
    }
  }
  GGS_typeCplusPlusName  var_cas_nullName ;
  var_cas_nullName = GGS_typeNullName::constructor_new (_inLexique COMMA_HERE) ;
  if (var_cas_outAllVariablesList._isBuilt () &&
      var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2149))._isBuilt () &&
      var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2150))._isBuilt () &&
      var_cas_nullName._isBuilt ()) {
    ::routine_appendJokersIfNeeded (_inLexique,  var_cas_outAllVariablesList,  var_cas_listeCibles.reader_length (_inLexique SOURCE_FILE_AT_LINE (2149)),  var_cas_listeAttributsSemantiques.reader_length (_inLexique SOURCE_FILE_AT_LINE (2150)),  var_cas_nullName SOURCE_FILE_AT_LINE (2148)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_input_parameters_list_semantics_parser_2088_29_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_19 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          switch (select_semantics_parser_20 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_21 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E_2E_2E) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2163_45_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_3D) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource SOURCE_FILE_AT_LINE (2174)) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleAddAssignOperatorCall (_inLexique, GGS_location (_inLexique), var_cas_formalParametersList SOURCE_FILE_AT_LINE (2177)) ;
  }
  GGS_typeTypesList  var_cas_typeList ;
  var_cas_typeList = GGS_typeTypesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeExpressionList  var_cas_expressionList ;
  var_cas_expressionList = GGS_typeExpressionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList._addAssign_operation (var_cas_resultType, GGS_location (_inLexique)) ;
        var_cas_expressionList._addAssign_operation (var_cas_expression) ;
      switch (select_repeat_semantics_parser_22 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (((var_cas_formalParametersList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2197))) != (var_cas_typeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2197)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((var_cas_typeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2198)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2198))) + (GGS_string (true, " argument(s), while ")))) + (var_cas_formalParametersList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2198)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2198))))) + (GGS_string (true, " are needed"))) SOURCE_FILE_AT_LINE (2199)) ;
  }else{
    GGS_typeListeAttributsSemantiques::element_type * operand_82662 = var_cas_formalParametersList.firstObject () ;
    GGS_typeTypesList::element_type * operand_82732 = var_cas_typeList.firstObject () ;
    while ((operand_82662 != NULL)
        && (operand_82732 != NULL)) {
      macroValidPointer (operand_82662) ;
      macroValidPointer (operand_82732) ;
      ::routine_checkAssignmentTypesCompatibility (_inLexique,  operand_82662->mAttributType,  operand_82732->mType,  operand_82732->mEndOfExpressionLocation,  GGS_bool (true, true) SOURCE_FILE_AT_LINE (2203)) ;
      operand_82662 = operand_82662->nextObject () ;
      operand_82732 = operand_82732->nextObject () ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeAppendInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2163_45_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_3D) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
        nt_expression_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_22 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2222_45_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3D) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource SOURCE_FILE_AT_LINE (2233)) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleMinusAssignOperatorCall (_inLexique, GGS_location (_inLexique), var_cas_formalParametersList SOURCE_FILE_AT_LINE (2236)) ;
  }
  GGS_typeTypesList  var_cas_typeList ;
  var_cas_typeList = GGS_typeTypesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeExpressionList  var_cas_expressionList ;
  var_cas_expressionList = GGS_typeExpressionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList._addAssign_operation (var_cas_resultType, GGS_location (_inLexique)) ;
        var_cas_expressionList._addAssign_operation (var_cas_expression) ;
      switch (select_repeat_semantics_parser_23 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (((var_cas_formalParametersList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2256))) != (var_cas_typeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2256)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((var_cas_typeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2257)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2257))) + (GGS_string (true, " argument(s), while ")))) + (var_cas_formalParametersList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2257)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2257))))) + (GGS_string (true, " are needed"))) SOURCE_FILE_AT_LINE (2258)) ;
  }else{
    GGS_typeListeAttributsSemantiques::element_type * operand_85110 = var_cas_formalParametersList.firstObject () ;
    GGS_typeTypesList::element_type * operand_85180 = var_cas_typeList.firstObject () ;
    while ((operand_85110 != NULL)
        && (operand_85180 != NULL)) {
      macroValidPointer (operand_85110) ;
      macroValidPointer (operand_85180) ;
      ::routine_checkAssignmentTypesCompatibility (_inLexique,  operand_85110->mAttributType,  operand_85180->mType,  operand_85180->mEndOfExpressionLocation,  GGS_bool (true, true) SOURCE_FILE_AT_LINE (2262)) ;
      operand_85110 = operand_85110->nextObject () ;
      operand_85180 = operand_85180->nextObject () ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeRemoveInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2222_45_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3D) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
        nt_expression_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_23 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2281_45_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_2B) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource SOURCE_FILE_AT_LINE (2292)) ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleIncrementOperatorCall (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (2294)) ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeIncrementInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2281_45_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_2B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2308_45_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_2D) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource SOURCE_FILE_AT_LINE (2319)) ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleDecrementOperatorCall (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (2321)) ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeDecrementInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2308_45_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_2D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'actual_parameters_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_actual_parameters_list_semantics_parser_2331_30_ (galgas_scanner & _inLexique,
                                const GGS_L_EXsignature  &var_cas_listeTypesParametresFormels,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_outExpressionList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique,  var_cas_listeTypesParametresFormels,  var_cas_listeTypesParametresEffectifs,  GGS_location (_inLexique),  var_cas_ioInstructionList,  var_cas_outExpressionList SOURCE_FILE_AT_LINE (2349)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_actual_parameters_list_semantics_parser_2331_30_parse (galgas_scanner & _inLexique) {
  nt_parse_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'parse_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_parameters_list_semantics_parser_2362_29_ (galgas_scanner & _inLexique,
                                GGS_L_actualParametersSignature  &var_cas_listeTypesParametresEffectifs,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_outExpressionList = GGS_typeExpressionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_listeTypesParametresEffectifs = GGS_L_actualParametersSignature::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_exclusiveVariables ;
  var_cas_exclusiveVariables = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_24 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
          GGS_AC_galgasType  var_cas_expressionType ;
          GGS_typeExpression  var_cas_expressionValue ;
          nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_expressionValue, var_cas_expressionType) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterOut (_inLexique COMMA_HERE) ;
          var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_expressionType, var_cas_parameterPassingMode) ;
          var_cas_outExpressionList._addAssign_operation (var_cas_expressionValue) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterIn (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_25 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
              var_cas_listeTypesParametresEffectifs._addAssign_operation (GGS_typeGalgas_jokerInParameterList::constructor_new (_inLexique COMMA_HERE), var_cas_parameterPassingMode) ;
              var_cas_outExpressionList._addAssign_operation (GGS_typeJokerInExpression::constructor_new (_inLexique COMMA_HERE)) ;
              } break ;
            case 2 : {
              GGS_luint  var_cas_jokerCountWithLocation ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              var_cas_jokerCountWithLocation.defineAttributeFromScanner (_inLexique.uint32value, _inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
              GGS_uint  var_cas_jokerCount ;
              var_cas_jokerCount = var_cas_jokerCountWithLocation.reader_uint (_inLexique SOURCE_FILE_AT_LINE (2397)) ;
              GGS_uint _variant_91281 = var_cas_jokerCount._add_operation (_inLexique, GGS_uint (true, 1U) SOURCE_FILE_AT_LINE (2398)) ;
              GGS_bool _condition_91281 (_variant_91281._isBuilt (), true) ;
              while (_condition_91281.isBuiltAndTrue ()) {
                _condition_91281 = (var_cas_jokerCount) > (GGS_uint (true, 0U)) ;
                if (_condition_91281.isBuiltAndTrue ()) {
                  if (_variant_91281.uintValue () == 0) {
                    _inLexique.onTheFlyRunTimeError ("loop variant error" SOURCE_FILE_AT_LINE (2403)) ;
                    _condition_91281 = GGS_bool (true, false) ;
                  }else{
                    _variant_91281._decrement_operation (_inLexique COMMA_HERE) ;
                    var_cas_listeTypesParametresEffectifs._addAssign_operation (GGS_typeGalgas_jokerInParameterList::constructor_new (_inLexique COMMA_HERE), var_cas_parameterPassingMode) ;
                    var_cas_outExpressionList._addAssign_operation (GGS_typeJokerInExpression::constructor_new (_inLexique COMMA_HERE)) ;
                    var_cas_jokerCount._decrement_operation (_inLexique SOURCE_FILE_AT_LINE (2402)) ;
                  }
                }
              }
              } break ;
            case 3 : {
              GGS_AC_galgasType  var_cas_typeArgument ;
              GGS_typeCplusPlusName  var_cas_nomCppArgument ;
              GGS_lstring  var_cas_nomArgument ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument SOURCE_FILE_AT_LINE (2409)) ;
              var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
              GGS_typeExpression  var_cas_e ;
              var_cas_e = GGS_typeVarInExpression::constructor_new (_inLexique, var_cas_nomCppArgument COMMA_HERE) ;
              var_cas_outExpressionList._addAssign_operation (var_cas_e) ;
              if ((var_cas_exclusiveVariables.reader_hasKey (_inLexique, var_cas_nomArgument.reader_string (_inLexique SOURCE_FILE_AT_LINE (2413)) SOURCE_FILE_AT_LINE (2413))).isBuiltAndTrue ()) {
                var_cas_nomArgument.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this object is already named as input or output/input effectif argument of current instruction") SOURCE_FILE_AT_LINE (2415)) ;
              }else{
                var_cas_exclusiveVariables._addAssign_operation (var_cas_nomArgument.reader_string (_inLexique SOURCE_FILE_AT_LINE (2416))) ;
              }
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21_3F) ;
          GGS_AC_galgasType  var_cas_typeArgument ;
          GGS_typeCplusPlusName  var_cas_nomCppArgument ;
          GGS_lstring  var_cas_nomArgument ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_nomArgument.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument SOURCE_FILE_AT_LINE (2425)) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterOutIn (_inLexique COMMA_HERE) ;
          var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
          GGS_typeExpression  var_cas_e ;
          var_cas_e = GGS_typeVarInExpression::constructor_new (_inLexique, var_cas_nomCppArgument COMMA_HERE) ;
          var_cas_outExpressionList._addAssign_operation (var_cas_e) ;
          if ((var_cas_exclusiveVariables.reader_hasKey (_inLexique, var_cas_nomArgument.reader_string (_inLexique SOURCE_FILE_AT_LINE (2430)) SOURCE_FILE_AT_LINE (2430))).isBuiltAndTrue ()) {
            var_cas_nomArgument.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this object is already named as input or output/input effectif argument of current instruction") SOURCE_FILE_AT_LINE (2432)) ;
          }else{
            var_cas_exclusiveVariables._addAssign_operation (var_cas_nomArgument.reader_string (_inLexique SOURCE_FILE_AT_LINE (2433))) ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_parameters_list_semantics_parser_2362_29_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_24 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
          nt_expression_parse (_inLexique) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          switch (select_semantics_parser_25 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21_3F) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'semantic_instructions_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instructions_list_semantics_parser_2442_34_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  var_cas_ioVariablesMap.prologue_verifyVariableUsing (_inLexique SOURCE_FILE_AT_LINE (2452)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_ioPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
  var_cas_ioVariablesMap.epilogue_verifyVariableUsing (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (2452)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_semantics_parser_2442_34_parse (galgas_scanner & _inLexique) {
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2472_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_call) ;
  GGS_lstring  var_cas_calledPropertyName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_calledPropertyName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_metamodelProperty  var_cas_property ;
  if (var_cas_ioPropertyMap._isBuilt ()) {
    var_cas_ioPropertyMap (HERE)->method_searchKey (_inLexique, var_cas_calledPropertyName, var_cas_property SOURCE_FILE_AT_LINE (2487)) ;
  }
  if (var_cas_property._isBuilt ()) {
    cPtr_metamodelSingleReferenceProperty * operand_95030 = dynamic_cast <cPtr_metamodelSingleReferenceProperty *> (var_cas_property.getPtr ()) ;
    if (operand_95030 != NULL) {
      macroValidPointer (operand_95030) ; 
      if ((var_cas_ioConstraintPropertyDefinitionSet.reader_hasKey (_inLexique, var_cas_calledPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2490)) SOURCE_FILE_AT_LINE (2490))).isBuiltAndTrue ()) {
        var_cas_calledPropertyName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this property has been already initialized") SOURCE_FILE_AT_LINE (2492)) ;
      }else{
        var_cas_ioConstraintPropertyDefinitionSet._addAssign_operation (var_cas_calledPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2493))) ;
      }
    }else{
      cPtr_metamodelMultipleReferenceProperty * operand_95363 = dynamic_cast <cPtr_metamodelMultipleReferenceProperty *> (var_cas_property.getPtr ()) ;
      if (operand_95363 != NULL) {
        macroValidPointer (operand_95363) ; 
        if ((var_cas_ioConstraintPropertyDefinitionSet.reader_hasKey (_inLexique, var_cas_calledPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2496)) SOURCE_FILE_AT_LINE (2496))).isBuiltAndTrue ()) {
          var_cas_calledPropertyName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this property has been already initialized") SOURCE_FILE_AT_LINE (2498)) ;
        }else{
          var_cas_ioConstraintPropertyDefinitionSet._addAssign_operation (var_cas_calledPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2499))) ;
        }
      }else{ // Else part
        var_cas_calledPropertyName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this property should be a single or a multiple reference") SOURCE_FILE_AT_LINE (2503)) ;
      }
    }
  }
  GGS_L_lstringList  var_cas_parameterList ;
  var_cas_parameterList = GGS_L_lstringList::constructor_emptyList (_inLexique COMMA_HERE) ;
  switch (select_semantics_parser_26 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_propertyArgumentName ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_propertyArgumentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            var_cas_parameterList._addAssign_operation (var_cas_propertyArgumentName) ;
          switch (select_repeat_semantics_parser_27 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
  if ((var_cas_ioCallInstructionSharedPropertySignatureMap.reader_hasKey (_inLexique, var_cas_calledPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (2519)) SOURCE_FILE_AT_LINE (2519))).isBuiltAndTrue ()) {
    GGS_L_lstringList  var_cas_previousParameterList ;
    GGS_location  var_cas_previousParameterTypeListLocation ;
    if (var_cas_ioCallInstructionSharedPropertySignatureMap._isBuilt ()) {
      var_cas_ioCallInstructionSharedPropertySignatureMap (HERE)->method_searchKey (_inLexique, var_cas_calledPropertyName, var_cas_previousParameterList, var_cas_previousParameterTypeListLocation SOURCE_FILE_AT_LINE (2522)) ;
    }
    if (((var_cas_previousParameterList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2523))) == (var_cas_parameterList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2523)))).isBuiltAndTrue ()) {
    }else{
      var_cas_previousParameterTypeListLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "this instruction names ")) + (var_cas_parameterList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2531)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2531))))) + (GGS_string (true, " shared parameter(s), while a previous call has named ")))) + (var_cas_previousParameterList.reader_length (_inLexique SOURCE_FILE_AT_LINE (2532)).reader_string (_inLexique SOURCE_FILE_AT_LINE (2532))))) + (GGS_string (true, " parameter(s)"))) SOURCE_FILE_AT_LINE (2534)) ;
    }
  }else{
    var_cas_ioCallInstructionSharedPropertySignatureMap.modifier_insertKey (_inLexique, var_cas_calledPropertyName, var_cas_parameterList, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (2536)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_callInstruction::constructor_new (_inLexique, var_cas_calledPropertyName, var_cas_property, var_cas_parameterList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2472_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_call) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  switch (select_semantics_parser_26 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_repeat_semantics_parser_27 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2554_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extract) ;
  GGS_AC_galgasType  var_cas_typeVarSource ;
  GGS_typeCplusPlusName  var_cas_sourceVarCppName ;
  GGS_lstring  var_cas_nomVarSource ;
  nt_read_access_ (_inLexique, var_cas_nomVarSource, var_cas_sourceVarCppName, var_cas_typeVarSource, var_cas_ioVariablesMap) ;
  GGS_lstring  var_cas_nomTypeSource ;
  GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits ;
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_typeVarSource.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_nomTypeSource._drop_operation () ;
      var_cas_tableMessagesAbstraits._drop_operation () ;
      if (var_cas_typeVarSource.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_typeVarSource (HERE)->message_messageGalgasType () ;
        var_cas_nomVarSource.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (2575)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_nomTypeSource = ptrExtraire_->mClassTypeName ;
      var_cas_tableMessagesAbstraits = ptrExtraire_->mMessagesMap ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  nt_extract_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceVarCppName, var_cas_nomTypeSource, var_cas_tableMessagesAbstraits, var_cas_instruction, var_cas_ioPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2554_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extract) ;
  nt_read_access_parse (_inLexique) ;
  nt_extract_instruction_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_extract_instruction_semantics_parser_2599_27_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits,
                                GGS_typeInstruction  &var_cas_outInstruction,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
  GGS_lstring  var_cas_nomClasse ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_nomClasse.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_AC_galgasType  var_cas_leType ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomClasse, var_cas_entite SOURCE_FILE_AT_LINE (2619)) ;
  }
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_leType._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_nomClasse.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (2620)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_leType = ptrExtraire_->aDefType ;
    }
  }
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_leType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_listeAttributsSemantiques._drop_operation () ;
      var_cas_tableDesClassesAncetres._drop_operation () ;
      if (var_cas_leType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_leType (HERE)->message_messageGalgasType () ;
        var_cas_nomClasse.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (2631)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_listeAttributsSemantiques = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetres = ptrExtraire_->mAncestorClassesMap ;
    }
  }
  if (((! (var_cas_tableDesClassesAncetres.reader_hasKey (_inLexique, var_cas_nomTypeSource.reader_string (_inLexique SOURCE_FILE_AT_LINE (2633)) SOURCE_FILE_AT_LINE (2633))))).isBuiltAndTrue ()) {
    var_cas_nomClasse.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "This class does not inherit from '@")) + (var_cas_nomTypeSource.reader_string (_inLexique SOURCE_FILE_AT_LINE (2634))))) + (GGS_string (true, "'"))) SOURCE_FILE_AT_LINE (2635)) ;
  }
  GGS_L_assignedVariables  var_cas_listeAffectationParametresEffectifs ;
  GGS_typeCplusPlusNameList  var_cas_allVariablesList ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
  nt_input_parameters_list_ (_inLexique, var_cas_listeAffectationParametresEffectifs, var_cas_allVariablesList, var_cas_listeAttributsSemantiques, var_cas_ioVariablesMap) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  if (var_cas_errorExpressionType._isBuilt ()) {
    var_cas_errorExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique SOURCE_FILE_AT_LINE (2659)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_lstring  var_cas_messageName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_messageName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if (var_cas_tableMessagesAbstraits._isBuilt ()) {
    var_cas_tableMessagesAbstraits (HERE)->method_searchKey (_inLexique, var_cas_messageName SOURCE_FILE_AT_LINE (2663)) ;
  }
  var_cas_outInstruction = GGS_typeSimpleExtractInstruction::constructor_new (_inLexique, var_cas_inSourceVarCppName, var_cas_nomClasse, var_cas_listeAffectationParametresEffectifs, var_cas_errorExpression, var_cas_messageName COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_2599_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
  nt_input_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_extract_instruction_semantics_parser_2676_27_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  /* var_cas_tableMessagesAbstraits */,
                                GGS_typeInstruction  &var_cas_outInstruction,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  GGS_typeStructuredExtractCasesList  var_cas_casesList ;
  var_cas_casesList = GGS_typeStructuredExtractCasesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique SOURCE_FILE_AT_LINE (2692)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (2694)) ;
        GGS_location  var_cas_indicatif1 ;
        var_cas_indicatif1 = GGS_location (_inLexique) ;
        GGS_lstring  var_cas_nomType1 ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
        var_cas_nomType1.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
        GGS_AC_galgasType  var_cas_definitionClasse1 ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
          var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomType1, var_cas_entite SOURCE_FILE_AT_LINE (2702)) ;
        }
        { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
          if (ptrExtraire_ == NULL) {
            var_cas_definitionClasse1._drop_operation () ;
            if (var_cas_entite.getPtr () != NULL) {
              TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
              C_String message2_ ;
              message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
              message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
              var_cas_nomType1.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (2703)) ;
            }
          }else{
            macroValidPointer (ptrExtraire_) ;
            var_cas_definitionClasse1 = ptrExtraire_->aDefType ;
          }
        }
        GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 ;
        GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 ;
        { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_definitionClasse1.getPtr ()) ;
          if (ptrExtraire_ == NULL) {
            var_cas_listeAttributs1._drop_operation () ;
            var_cas_tableDesClassesAncetresType1._drop_operation () ;
            if (var_cas_definitionClasse1.getPtr () != NULL) {
              TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
              C_String message2_ ;
              message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
              message2_ << var_cas_definitionClasse1 (HERE)->message_messageGalgasType () ;
              var_cas_nomType1.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (2715)) ;
            }
          }else{
            macroValidPointer (ptrExtraire_) ;
            var_cas_listeAttributs1 = ptrExtraire_->mNonExternAttributesList ;
            var_cas_tableDesClassesAncetresType1 = ptrExtraire_->mAncestorClassesMap ;
          }
        }
        if (((! (var_cas_tableDesClassesAncetresType1.reader_hasKey (_inLexique, var_cas_nomTypeSource.reader_string (_inLexique SOURCE_FILE_AT_LINE (2717)) SOURCE_FILE_AT_LINE (2717))))).isBuiltAndTrue ()) {
          var_cas_nomType1.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "This class does not inherit from '@")) + (var_cas_nomTypeSource.reader_string (_inLexique SOURCE_FILE_AT_LINE (2718))))) + (GGS_string (true, "'"))) SOURCE_FILE_AT_LINE (2719)) ;
        }
        GGS_bool var_cas_noUsedParameter ;
        nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_indicatif1, GGS_localConstantBuildStyleEnum::constructor_listStyle (_inLexique COMMA_HERE), var_cas_noUsedParameter) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
        GGS_typeInstructionList  var_cas_instructionsList ;
        var_cas_instructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_ioPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
        var_cas_casesList._addAssign_operation (var_cas_nomType1, var_cas_indicatif1, var_cas_instructionsList, var_cas_noUsedParameter) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (2694)) ;
      switch (select_repeat_semantics_parser_28 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (2748)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
  GGS_typeInstructionList  var_cas_elseInstructionList ;
  var_cas_elseInstructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseInstructionList, var_cas_ioPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
  var_cas_outInstruction = GGS_typeStructuredExtractInstructionWithElse::constructor_new (_inLexique, var_cas_inSourceVarCppName, var_cas_casesList, var_cas_elseInstructionList COMMA_HERE) ;
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (2748)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique SOURCE_FILE_AT_LINE (2692)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extract) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_2676_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
        nt_parse_effective_input_parameters_list_parse (_inLexique) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
        nt_semantic_instructions_list_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_28 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extract) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2776_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  GGS_AC_galgasType  var_cas_definitionType ;
  GGS_lstring  var_cas_typeName ;
  nt_type_parsing_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
  GGS_lstring  var_cas_nomVariable ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomVariable.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_typeCplusPlusName  var_cas_nomCppVariable ;
  var_cas_nomCppVariable = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomVariable COMMA_HERE) ;
  var_cas_ioVariablesMap.modifier_insertLocalVariable (_inLexique, var_cas_nomVariable, var_cas_definitionType, var_cas_nomCppVariable SOURCE_FILE_AT_LINE (2794)) ;
  nt_optional_assignment_ (_inLexique, var_cas_typeName, var_cas_nomVariable, var_cas_nomCppVariable, var_cas_definitionType, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2776_28_parse (galgas_scanner & _inLexique) {
  nt_type_parsing_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_optional_assignment_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2815_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_log) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_galgasVariableName ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        var_cas_galgasVariableName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
        GGS_typeCplusPlusName  var_cas_nomCppVar ;
        GGS_AC_galgasType  automatic_var_19 ;
        var_cas_ioVariablesMap.modifier_searchForReadOnlyAccess (_inLexique, var_cas_galgasVariableName, automatic_var_19, var_cas_nomCppVar SOURCE_FILE_AT_LINE (2830)) ;
        GGS_typeInstruction  var_cas_instruction ;
        var_cas_instruction = GGS_typeLogInstruction::constructor_new (_inLexique, var_cas_galgasVariableName, var_cas_nomCppVar COMMA_HERE) ;
        var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
      switch (select_repeat_semantics_parser_29 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2815_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_log) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      switch (select_repeat_semantics_parser_29 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2845_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_drop) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_nom ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        var_cas_nom.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
        GGS_typeCplusPlusName  var_cas_nomCppVar ;
        GGS_AC_galgasType  automatic_var_20 ;
        var_cas_ioVariablesMap.modifier_searchForDestructiveReadAccess (_inLexique, var_cas_nom, automatic_var_20, var_cas_nomCppVar SOURCE_FILE_AT_LINE (2860)) ;
        GGS_typeInstruction  var_cas_instruction ;
        var_cas_instruction = GGS_typeDropInstruction::constructor_new (_inLexique, var_cas_nomCppVar COMMA_HERE) ;
        var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
      switch (select_repeat_semantics_parser_30 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2845_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_drop) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      switch (select_repeat_semantics_parser_30 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2877_45_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  GGS_L_EXsignature  var_cas_signatureRoutine ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomVarDest, var_cas_entite SOURCE_FILE_AT_LINE (2887)) ;
  }
  { cPtr_typeEntiteRoutine * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteRoutine *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_signatureRoutine._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteRoutine::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_nomVarDest.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (2888)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_signatureRoutine = ptrExtraire_->aListeArgumentsFormels ;
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_parameters_list_ (_inLexique, var_cas_signatureRoutine, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeRoutineCallInstruction::constructor_new (_inLexique, var_cas_nomVarDest, var_cas_expressionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2877_45_parse (galgas_scanner & _inLexique) {
  nt_actual_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2912_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_action) ;
  GGS_lstring  var_cas_nomAction ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomAction.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomAction, var_cas_entite SOURCE_FILE_AT_LINE (2928)) ;
  }
  GGS_L_EXsignature  var_cas_listeTypesParametresFormels ;
  { cPtr_typeEntiteActionExterne * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteActionExterne *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_listeTypesParametresFormels._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteActionExterne::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_nomAction.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (2930)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_listeTypesParametresFormels = ptrExtraire_->aSignature ;
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_parameters_list_ (_inLexique, var_cas_listeTypesParametresFormels, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeInstructionAppelActionExterne::constructor_new (_inLexique, var_cas_nomAction, var_cas_expressionsList, var_cas_listeTypesParametresFormels COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2912_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_action) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_actual_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2961_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
  GGS_typeInstruction  var_cas_instruction ;
  switch (select_semantics_parser_31 (_inLexique)) {
    case 1 : {
      GGS_lstring  var_cas_readObjectName ;
      GGS_AC_galgasType  var_cas_variableType ;
      GGS_typeCplusPlusName  var_cas_cppVariableName ;
      nt_read_access_ (_inLexique, var_cas_readObjectName, var_cas_cppVariableName, var_cas_variableType, var_cas_ioVariablesMap) ;
      GGS_lstring  var_cas_methodName ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_methodName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      if (var_cas_variableType._isBuilt ()) {
        var_cas_variableType (HERE)->method_handleReaderInstructionCall (_inLexique, var_cas_readObjectName, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (2982)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeMethodCallInstruction::constructor_new (_inLexique, var_cas_cppVariableName, var_cas_methodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21_3F) ;
      GGS_lstring  var_cas_modifiedObjectName ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_modifiedObjectName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      GGS_AC_galgasType  var_cas_variableType ;
      GGS_typeCplusPlusName  var_cas_cppVariableName ;
      var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_modifiedObjectName, var_cas_variableType, var_cas_cppVariableName SOURCE_FILE_AT_LINE (3001)) ;
      GGS_lstring  var_cas_methodName ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_methodName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      if (var_cas_variableType._isBuilt ()) {
        var_cas_variableType (HERE)->method_handleModifierCall (_inLexique, var_cas_modifiedObjectName, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (3006)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeModifierCallInstruction::constructor_new (_inLexique, var_cas_cppVariableName, var_cas_methodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2961_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
  switch (select_semantics_parser_31 (_inLexique)) {
    case 1 : {
      nt_read_access_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__21_3F) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3032_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  GGS_lstring  var_cas_nomVarDest ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomVarDest.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  nt_instruction_beginning_with_identifier_ (_inLexique, var_cas_nomVarDest, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3032_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_instruction_beginning_with_identifier_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3060_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_warning) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  if (var_cas_errorExpressionType._isBuilt ()) {
    var_cas_errorExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique SOURCE_FILE_AT_LINE (3081)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_typeExpression  var_cas_warningMessageExpression ;
  GGS_AC_galgasType  var_cas_warningMessageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_warningMessageExpression, var_cas_warningMessageExpressionType) ;
  { cPtr_typeGalgas_string * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_string *> (var_cas_warningMessageExpressionType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_warningMessageExpressionType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_string::static_string_message_messageGalgasType () ;
        message2_ << var_cas_warningMessageExpressionType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3094)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeWarningInstruction::constructor_new (_inLexique, var_cas_errorExpression, var_cas_warningMessageExpression, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3060_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_warning) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3108_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  GGS_typeExpression  var_cas_errorLocationExpression ;
  GGS_AC_galgasType  var_cas_errorLocationExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorLocationExpression, var_cas_errorLocationExpressionType) ;
  if (var_cas_errorLocationExpressionType._isBuilt ()) {
    var_cas_errorLocationExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique SOURCE_FILE_AT_LINE (3129)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_typeExpression  var_cas_errorMessageExpression ;
  GGS_AC_galgasType  var_cas_errorMessageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorMessageExpression, var_cas_errorMessageExpressionType) ;
  { cPtr_typeGalgas_string * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_string *> (var_cas_errorMessageExpressionType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_errorMessageExpressionType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_string::static_string_message_messageGalgasType () ;
        message2_ << var_cas_errorMessageExpressionType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3142)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  GGS_varToDropList  var_cas_variablesToDrop ;
  var_cas_variablesToDrop = GGS_varToDropList::constructor_emptyList (_inLexique COMMA_HERE) ;
  switch (select_semantics_parser_32 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_nomVariable ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_nomVariable.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            GGS_typeCplusPlusName  var_cas_varCppName ;
            GGS_AC_galgasType  automatic_var_21 ;
            var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomVariable, automatic_var_21, var_cas_varCppName SOURCE_FILE_AT_LINE (3152)) ;
            var_cas_variablesToDrop._addAssign_operation (var_cas_varCppName) ;
          switch (select_repeat_semantics_parser_33 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeErrorInstruction::constructor_new (_inLexique, var_cas_errorLocationExpression, var_cas_errorMessageExpression, GGS_location (_inLexique), var_cas_variablesToDrop COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3108_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_expression_parse (_inLexique) ;
  switch (select_semantics_parser_32 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_repeat_semantics_parser_33 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3175_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  GGS_location  var_cas_instructionLocation ;
  var_cas_instructionLocation = GGS_location (_inLexique) ;
  GGS_typeExpression  var_cas_messageExpression ;
  GGS_AC_galgasType  var_cas_messageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_messageExpression, var_cas_messageExpressionType) ;
  { cPtr_typeGalgas_string * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_string *> (var_cas_messageExpressionType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_messageExpressionType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_string::static_string_message_messageGalgasType () ;
        message2_ << var_cas_messageExpressionType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3198)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeMessageInstruction::constructor_new (_inLexique, var_cas_messageExpression, var_cas_instructionLocation COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3175_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3211_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_if) ;
  GGS_stringset  var_cas_startConstraintPropertyDefinitionSet ;
  var_cas_startConstraintPropertyDefinitionSet = var_cas_ioConstraintPropertyDefinitionSet ;
  GGS_bool var_cas_firstBranch ;
  var_cas_firstBranch = GGS_bool (true, true) ;
  GGS_L_expression_instructionsList_list  var_cas_listeBranchesTest ;
  var_cas_listeBranchesTest = GGS_L_expression_instructionsList_list::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique SOURCE_FILE_AT_LINE (3225)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (3227)) ;
        GGS_typeExpression  var_cas_testBranche ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_testBranche, var_cas_resultType) ;
        { cPtr_typeGalgas_bool * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_bool *> (var_cas_resultType.getPtr ()) ;
          if (ptrExtraire_ == NULL) {
            if (var_cas_resultType.getPtr () != NULL) {
              TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
              C_String message2_ ;
              message1_ (0 COMMA_HERE) << cPtr_typeGalgas_bool::static_string_message_messageGalgasType () ;
              message2_ << var_cas_resultType (HERE)->message_messageGalgasType () ;
              GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3237)) ;
            }
          }else{
            macroValidPointer (ptrExtraire_) ;
          }
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_then) ;
        GGS_typeInstructionList  var_cas_listeInstructionsBrancheTest ;
        var_cas_listeInstructionsBrancheTest = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
        GGS_stringset  var_cas_constraintPropertyDefinitionSet ;
        var_cas_constraintPropertyDefinitionSet = var_cas_startConstraintPropertyDefinitionSet ;
        nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheTest, var_cas_ioPropertyMap, var_cas_constraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
        if ((var_cas_firstBranch).isBuiltAndTrue ()) {
          var_cas_ioConstraintPropertyDefinitionSet = var_cas_constraintPropertyDefinitionSet ;
          var_cas_firstBranch = GGS_bool (true, false) ;
        }else if (((var_cas_ioConstraintPropertyDefinitionSet) != (var_cas_constraintPropertyDefinitionSet)).isBuiltAndTrue ()) {
          ::routine_displayConstraintDefinitionErrors (_inLexique,  var_cas_ioConstraintPropertyDefinitionSet,  var_cas_constraintPropertyDefinitionSet SOURCE_FILE_AT_LINE (3255)) ;
        }
        var_cas_listeBranchesTest._addAssign_operation (var_cas_testBranche, var_cas_listeInstructionsBrancheTest) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3227)) ;
      switch (select_repeat_semantics_parser_34 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_elsif) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeInstructionList  var_cas_listeInstructionsBrancheAutre ;
  var_cas_listeInstructionsBrancheAutre = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (3263)) ;
  switch (select_semantics_parser_35 (_inLexique)) {
    case 1 : {
      if (((var_cas_ioConstraintPropertyDefinitionSet) != (var_cas_startConstraintPropertyDefinitionSet)).isBuiltAndTrue ()) {
        ::routine_displayConstraintDefinitionErrorsNoElse (_inLexique,  var_cas_ioConstraintPropertyDefinitionSet,  var_cas_startConstraintPropertyDefinitionSet SOURCE_FILE_AT_LINE (3266)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
      GGS_stringset  var_cas_constraintPropertyDefinitionSet ;
      var_cas_constraintPropertyDefinitionSet = var_cas_startConstraintPropertyDefinitionSet ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheAutre, var_cas_ioPropertyMap, var_cas_constraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
      if (((var_cas_ioConstraintPropertyDefinitionSet) != (var_cas_constraintPropertyDefinitionSet)).isBuiltAndTrue ()) {
        ::routine_displayConstraintDefinitionErrors (_inLexique,  var_cas_ioConstraintPropertyDefinitionSet,  var_cas_constraintPropertyDefinitionSet SOURCE_FILE_AT_LINE (3282)) ;
      }
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3263)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_if) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique SOURCE_FILE_AT_LINE (3225)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_if_instruction::constructor_new (_inLexique, var_cas_listeBranchesTest, var_cas_listeInstructionsBrancheAutre COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3211_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_if) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        nt_expression_parse (_inLexique) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_then) ;
        nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_34 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_elsif) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_35 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_if) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3303_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_switch) ;
  GGS_typeExpression  var_cas_switchExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_switchExpression, var_cas_resultType) ;
  GGS_lstring  var_cas_enumTypeName ;
  GGS_enumConstantMap  var_cas_enumConstantesMap ;
  { cPtr_typeGalgas_enum * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_enum *> (var_cas_resultType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_enumTypeName._drop_operation () ;
      var_cas_enumConstantesMap._drop_operation () ;
      if (var_cas_resultType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_enum::static_string_message_messageGalgasType () ;
        message2_ << var_cas_resultType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3327)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_enumTypeName = ptrExtraire_->mEnumTypeName ;
      var_cas_enumConstantesMap = ptrExtraire_->mEnumConstantesMap ;
    }
  }
  GGS_stringset  var_cas_startConstraintPropertyDefinitionSet ;
  var_cas_startConstraintPropertyDefinitionSet = var_cas_ioConstraintPropertyDefinitionSet ;
  GGS_bool var_cas_firstBranch ;
  var_cas_firstBranch = GGS_bool (true, true) ;
  GGS_stringset  var_cas_allBranchConstantSet ;
  var_cas_allBranchConstantSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_L_switchBranchlist  var_cas_switchBranchlist ;
  var_cas_switchBranchlist = GGS_L_switchBranchlist::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique SOURCE_FILE_AT_LINE (3333)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_stringset  var_cas_branchConstantSet ;
        var_cas_branchConstantSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
              GGS_lstring  var_cas_enumConstantName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_enumConstantName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              var_cas_branchConstantSet._addAssign_operation (var_cas_enumConstantName.reader_string (_inLexique SOURCE_FILE_AT_LINE (3341))) ;
              if (var_cas_enumConstantesMap._isBuilt ()) {
                var_cas_enumConstantesMap (HERE)->method_searchKey (_inLexique, var_cas_enumConstantName SOURCE_FILE_AT_LINE (3342)) ;
              }
              if ((var_cas_allBranchConstantSet.reader_hasKey (_inLexique, var_cas_enumConstantName.reader_string (_inLexique SOURCE_FILE_AT_LINE (3343)) SOURCE_FILE_AT_LINE (3343))).isBuiltAndTrue ()) {
                var_cas_enumConstantName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this constant is already used in current switch instruction") SOURCE_FILE_AT_LINE (3345)) ;
              }
            switch (select_repeat_semantics_parser_37 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
        var_cas_allBranchConstantSet = ((var_cas_allBranchConstantSet) | (var_cas_branchConstantSet)) ;
        var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (3351)) ;
        GGS_typeInstructionList  var_cas_branchInstructionList ;
        var_cas_branchInstructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
        GGS_stringset  var_cas_constraintPropertyDefinitionSet ;
        var_cas_constraintPropertyDefinitionSet = var_cas_startConstraintPropertyDefinitionSet ;
        nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_branchInstructionList, var_cas_ioPropertyMap, var_cas_constraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
        var_cas_switchBranchlist._addAssign_operation (var_cas_branchConstantSet, var_cas_branchInstructionList) ;
        if ((var_cas_firstBranch).isBuiltAndTrue ()) {
          var_cas_ioConstraintPropertyDefinitionSet = var_cas_constraintPropertyDefinitionSet ;
          var_cas_firstBranch = GGS_bool (true, false) ;
        }else if (((var_cas_ioConstraintPropertyDefinitionSet) != (var_cas_constraintPropertyDefinitionSet)).isBuiltAndTrue ()) {
          ::routine_displayConstraintDefinitionErrors (_inLexique,  var_cas_ioConstraintPropertyDefinitionSet,  var_cas_constraintPropertyDefinitionSet SOURCE_FILE_AT_LINE (3369)) ;
        }
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3351)) ;
      switch (select_repeat_semantics_parser_36 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique SOURCE_FILE_AT_LINE (3333)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  GGS_stringset  var_cas_missingConstants ;
  var_cas_missingConstants = var_cas_enumConstantesMap.reader_allKeys (_inLexique SOURCE_FILE_AT_LINE (3378))._substract_operation (_inLexique, var_cas_allBranchConstantSet SOURCE_FILE_AT_LINE (3378)) ;
  GGS_stringset::element_type * operand_131379 = var_cas_missingConstants.firstObject () ;
  while ((operand_131379 != NULL)) {
    macroValidPointer (operand_131379) ;
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '")) + (operand_131379->mKey))) + (GGS_string (true, "' is not used in switch instruction"))) SOURCE_FILE_AT_LINE (3381)) ;
    operand_131379 = operand_131379->nextObject () ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_switch_instruction::constructor_new (_inLexique, var_cas_switchExpression, var_cas_enumTypeName, var_cas_switchBranchlist COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_switch) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3303_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_switch) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_repeat_semantics_parser_37 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
        nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_36 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_switch) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3396_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_loop) ;
  GGS_typeExpression  var_cas_variantExpression ;
  GGS_AC_galgasType  var_cas_variantResultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_variantExpression, var_cas_variantResultType) ;
  { cPtr_typeGalgas_uint * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_uint *> (var_cas_variantResultType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_variantResultType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_uint::static_string_message_messageGalgasType () ;
        message2_ << var_cas_variantResultType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3417)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_typeInstructionList  var_cas_instructionList1 ;
  var_cas_instructionList1 = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3421)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique SOURCE_FILE_AT_LINE (3422)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList1, var_cas_ioPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3422)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3421)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_while) ;
  GGS_typeExpression  var_cas_conditionalExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_conditionalExpression, var_cas_resultType) ;
  { cPtr_typeGalgas_bool * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_bool *> (var_cas_resultType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_resultType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_bool::static_string_message_messageGalgasType () ;
        message2_ << var_cas_resultType (HERE)->message_messageGalgasType () ;
        GGS_location (_inLexique).signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3447)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_do) ;
  GGS_typeInstructionList  var_cas_instructionList2 ;
  var_cas_instructionList2 = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3451)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique SOURCE_FILE_AT_LINE (3452)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList2, var_cas_ioPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3452)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3451)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_while_instruction::constructor_new (_inLexique, var_cas_variantExpression, var_cas_instructionList1, var_cas_conditionalExpression, var_cas_instructionList2, GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_loop) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3396_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_loop) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_while) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_do) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_loop) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3485_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &/* var_cas_ioPropertyMap */,
                                GGS_stringset  &/* var_cas_ioConstraintPropertyDefinitionSet */,
                                GGS_callInstructionSharedPropertySignatureMap  &/* var_cas_ioCallInstructionSharedPropertySignatureMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
  GGS_lstring  var_cas_grammarName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_grammarName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_lstring  var_cas_altName ;
  switch (select_semantics_parser_38 (_inLexique)) {
    case 1 : {
      var_cas_altName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_label) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_altName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  GGS_lstring  var_cas_nomFichierSource ;
  GGS_typeCplusPlusName  var_cas_nomCppFichierSource ;
  GGS_AC_galgasType  var_cas_typeNomFichierSource ;
  nt_read_access_ (_inLexique, var_cas_nomFichierSource, var_cas_nomCppFichierSource, var_cas_typeNomFichierSource, var_cas_ioVariablesMap) ;
  { cPtr_typeGalgas_lstring * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_lstring *> (var_cas_typeNomFichierSource.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_typeNomFichierSource.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_lstring::static_string_message_messageGalgasType () ;
        message2_ << var_cas_typeNomFichierSource (HERE)->message_messageGalgasType () ;
        var_cas_nomFichierSource.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3513)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_grammarName, var_cas_e SOURCE_FILE_AT_LINE (3526)) ;
  }
  GGS_M_nonterminalSymbolAlts  var_cas_startSymbolAltMap ;
  { cPtr_C_grammarForSemantics * ptrExtraire_ = dynamic_cast <cPtr_C_grammarForSemantics *> (var_cas_e.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_startSymbolAltMap._drop_operation () ;
      if (var_cas_e.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_C_grammarForSemantics::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_e (HERE)->message_messageTypeEntite () ;
        var_cas_grammarName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3528)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_startSymbolAltMap = ptrExtraire_->mGrammarAltMap ;
    }
  }
  GGS_L_EXsignature  var_cas_startSymbolSignature ;
  GGS_lstring  var_cas_returnedEntity ;
  if (var_cas_startSymbolAltMap._isBuilt ()) {
    var_cas_startSymbolAltMap (HERE)->method_searchKey (_inLexique, var_cas_altName, var_cas_startSymbolSignature, var_cas_returnedEntity SOURCE_FILE_AT_LINE (3531)) ;
  }
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique,  var_cas_startSymbolSignature,  var_cas_listeTypesParametresEffectifs,  GGS_location (_inLexique),  var_cas_ioInstructionList,  var_cas_expressionsList SOURCE_FILE_AT_LINE (3533)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_grammarInstruction::constructor_new (_inLexique, var_cas_nomCppFichierSource, var_cas_grammarName, var_cas_expressionsList, var_cas_altName COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3485_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  switch (select_semantics_parser_38 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_label) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  nt_read_access_parse (_inLexique) ;
  nt_parse_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3556_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_foreach) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3568)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique SOURCE_FILE_AT_LINE (3569)) ;
  GGS_foreachEnumerationList  var_cas_foreachEnumerationList ;
  var_cas_foreachEnumerationList = GGS_foreachEnumerationList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_enumeratedVariableName ;
        GGS_typeCplusPlusName  var_cas_enumeratedVariableCPPName ;
        GGS_AC_galgasType  var_cas_enumeratedVariableType ;
        nt_read_access_ (_inLexique, var_cas_enumeratedVariableName, var_cas_enumeratedVariableCPPName, var_cas_enumeratedVariableType, var_cas_ioVariablesMap) ;
        var_cas_ioVariablesMap.modifier_insertUsedConstInArgumentNoShadow (_inLexique, var_cas_enumeratedVariableName, var_cas_enumeratedVariableType, var_cas_enumeratedVariableCPPName SOURCE_FILE_AT_LINE (3584)) ;
        GGS_typeListeAttributsSemantiques  var_cas_formalEnumerationList ;
        GGS_localConstantBuildStyleEnum var_cas_localConstantBuildStyleEnum ;
        if (var_cas_enumeratedVariableType._isBuilt ()) {
          var_cas_enumeratedVariableType (HERE)->method_acceptForeachInstruction (_inLexique, var_cas_enumeratedVariableName, var_cas_formalEnumerationList, var_cas_localConstantBuildStyleEnum SOURCE_FILE_AT_LINE (3588)) ;
        }
        GGS_string var_cas_typeName ;
        if (var_cas_enumeratedVariableType._isBuilt ()) {
          var_cas_enumeratedVariableType (HERE)->method_getTypeName (_inLexique, var_cas_typeName SOURCE_FILE_AT_LINE (3591)) ;
        }
        GGS_location  var_cas_magicNumber ;
        var_cas_magicNumber = GGS_location (_inLexique) ;
        GGS_bool automatic_var_22 ;
        nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_formalEnumerationList, var_cas_magicNumber, var_cas_localConstantBuildStyleEnum, automatic_var_22) ;
        var_cas_foreachEnumerationList._addAssign_operation (var_cas_enumeratedVariableCPPName, var_cas_magicNumber, var_cas_typeName) ;
      switch (select_repeat_semantics_parser_39 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeExpression  var_cas_whileExpression ;
  switch (select_semantics_parser_40 (_inLexique)) {
    case 1 : {
      var_cas_whileExpression = GGS_typeTrueBool::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_while) ;
      GGS_AC_galgasType  var_cas_resultType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_whileExpression, var_cas_resultType) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_typeInstructionList  var_cas_instructionList ;
  var_cas_instructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList, var_cas_ioPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3569)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique SOURCE_FILE_AT_LINE (3568)) ;
  var_cas_instruction = GGS_typeForeachInstruction::constructor_new (_inLexique, var_cas_foreachEnumerationList, var_cas_whileExpression, var_cas_instructionList COMMA_HERE) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_foreach) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3556_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_foreach) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        nt_read_access_parse (_inLexique) ;
        nt_parse_effective_input_parameters_list_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_39 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_40 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_while) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_foreach) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'parse_match_operand'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_operand_semantics_parser_3653_27_ (galgas_scanner & _inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  &var_cas_outCppName,
                                GGS_lstring  &var_cas_outBaseTypeName,
                                GGS_location  &var_cas_outVarLocation,
                                GGS_bool &var_cas_outIsEnumeration,
                                GGS_enumConstantMap  &var_cas_outEnumMessageMap) {
  GGS_lstring  var_cas_variableName ;
  GGS_AC_galgasType  var_cas_type ;
  nt_read_access_ (_inLexique, var_cas_variableName, var_cas_outCppName, var_cas_type, var_cas_ioVariablesMap) ;
  var_cas_outVarLocation = GGS_location (_inLexique) ;
  if (var_cas_type._isBuilt ()) {
    cPtr_typeGalgasClassType * operand_141823 = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_type.getPtr ()) ;
    if (operand_141823 != NULL) {
      macroValidPointer (operand_141823) ; 
      var_cas_outBaseTypeName = operand_141823->mClassTypeName ;
      var_cas_outIsEnumeration = GGS_bool (true, false) ;
      var_cas_outEnumMessageMap = GGS_enumConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
    }else{
      cPtr_typeGalgas_enum * operand_142015 = dynamic_cast <cPtr_typeGalgas_enum *> (var_cas_type.getPtr ()) ;
      if (operand_142015 != NULL) {
        macroValidPointer (operand_142015) ; 
        var_cas_outBaseTypeName = operand_142015->mEnumTypeName ;
        var_cas_outIsEnumeration = GGS_bool (true, true) ;
        var_cas_outEnumMessageMap = operand_142015->mEnumConstantesMap ;
      }else{ // Else part
        GGS_string var_cas_actualTypeName ;
        if (var_cas_type._isBuilt ()) {
          var_cas_type (HERE)->method_getTypeName (_inLexique, var_cas_actualTypeName SOURCE_FILE_AT_LINE (3681)) ;
        }
        var_cas_variableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the type of this variable is '@")) + (var_cas_actualTypeName))) + (GGS_string (true, "' ; I was expected an enumeration type or an abstract type"))) SOURCE_FILE_AT_LINE (3685)) ;
        var_cas_outBaseTypeName._drop_operation () ;
        var_cas_outIsEnumeration._drop_operation () ;
        var_cas_outEnumMessageMap._drop_operation () ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_operand_semantics_parser_3653_27_parse (galgas_scanner & _inLexique) {
  nt_read_access_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_case_semantics_parser_3691_24_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  var_cas_inVarLocation,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  /* var_cas_inEnumMessageMap */,
                                GGS_lstring  &var_cas_outTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_AC_galgasType  var_cas_definitionClasse1 ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_entite SOURCE_FILE_AT_LINE (3705)) ;
  }
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_definitionClasse1._drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_outTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3706)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_definitionClasse1 = ptrExtraire_->aDefType ;
    }
  }
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 ;
  GGS_bool var_cas_isAbstract ;
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_definitionClasse1.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_listeAttributs1._drop_operation () ;
      var_cas_tableDesClassesAncetresType1._drop_operation () ;
      var_cas_isAbstract._drop_operation () ;
      if (var_cas_definitionClasse1.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_definitionClasse1 (HERE)->message_messageGalgasType () ;
        var_cas_outTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (3719)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_listeAttributs1 = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetresType1 = ptrExtraire_->mAncestorClassesMap ;
      var_cas_isAbstract = ptrExtraire_->mClassIsAbstract ;
    }
  }
  if ((var_cas_isAbstract).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "an abstract class is not allowed here") SOURCE_FILE_AT_LINE (3723)) ;
  }
  if ((var_cas_inIsEnumeration).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "a constant of '@")) + (var_cas_inTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (3726))))) + (GGS_string (true, "' enumeration type is expected here"))) SOURCE_FILE_AT_LINE (3727)) ;
  }else if (((! (var_cas_tableDesClassesAncetresType1.reader_hasKey (_inLexique, var_cas_inTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (3727)) SOURCE_FILE_AT_LINE (3727))))).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "This type does not inherit from '")) + (var_cas_inTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (3728))))) + (GGS_string (true, "'"))) SOURCE_FILE_AT_LINE (3729)) ;
  }
  GGS_bool automatic_var_23 ;
  nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_inVarLocation, GGS_localConstantBuildStyleEnum::constructor_listStyle (_inLexique COMMA_HERE), automatic_var_23) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_3691_24_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  nt_parse_effective_input_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_case_semantics_parser_3742_24_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  /* var_cas_inVarLocation */,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  var_cas_inEnumMessageMap,
                                GGS_lstring  &var_cas_outEnumConstantName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_outEnumConstantName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if ((var_cas_inIsEnumeration).isBuiltAndTrue ()) {
    if (var_cas_inEnumMessageMap._isBuilt ()) {
      var_cas_inEnumMessageMap (HERE)->method_searchKey (_inLexique, var_cas_outEnumConstantName SOURCE_FILE_AT_LINE (3755)) ;
    }
  }else{
    var_cas_outEnumConstantName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "a class that inherit from '@")) + (var_cas_inTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (3757))))) + (GGS_string (true, "' abstract class is expected here"))) SOURCE_FILE_AT_LINE (3758)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_3742_24_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3763_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_match) ;
  GGS_typeCplusPlusName  var_cas_operand1_cppName ;
  GGS_lstring  var_cas_operand1_typeName ;
  GGS_location  var_cas_operand1_location ;
  GGS_bool var_cas_operand1_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand1_enumMessageMap ;
  nt_parse_match_operand_ (_inLexique, var_cas_ioVariablesMap, var_cas_operand1_cppName, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3A) ;
  GGS_typeCplusPlusName  var_cas_operand2_cppName ;
  GGS_lstring  var_cas_operand2_typeName ;
  GGS_location  var_cas_operand2_location ;
  GGS_bool var_cas_operand2_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand2_enumMessageMap ;
  nt_parse_match_operand_ (_inLexique, var_cas_ioVariablesMap, var_cas_operand2_cppName, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_L_matchInstructionCasesList  var_cas_casesList ;
  var_cas_casesList = GGS_L_matchInstructionCasesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique SOURCE_FILE_AT_LINE (3806)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_41 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (3810)) ;
          GGS_lstring  var_cas_case1_name ;
          nt_parse_match_case_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap, var_cas_case1_name) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3A) ;
          GGS_lstring  var_cas_case2_name ;
          nt_parse_match_case_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap, var_cas_case2_name) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          GGS_typeInstructionList  var_cas_instructionsList ;
          var_cas_instructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
          nt_semantic_instructions_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_ioPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
          var_cas_casesList._addAssign_operation (var_cas_case1_name, var_cas_case2_name, var_cas_instructionsList) ;
          var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3810)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (_inLexique SOURCE_FILE_AT_LINE (3852)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
  GGS_typeInstructionList  var_cas_elsePartInstructionsList ;
  var_cas_elsePartInstructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elsePartInstructionsList, var_cas_ioPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (3852)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique SOURCE_FILE_AT_LINE (3806)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_match) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeMatchInstruction::constructor_new (_inLexique, var_cas_operand1_location, var_cas_operand2_location, var_cas_operand1_cppName, var_cas_operand2_cppName, var_cas_operand1_typeName, var_cas_operand2_typeName, var_cas_operand1_isEnumeration, var_cas_operand2_isEnumeration, var_cas_casesList, var_cas_elsePartInstructionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3763_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_match) ;
  nt_parse_match_operand_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3A) ;
  nt_parse_match_operand_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_41 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          nt_parse_match_case_parse (_inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3A) ;
          nt_parse_match_case_parse (_inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          nt_semantic_instructions_list_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_match) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Implementation of production rule 'semantic_instructions_list_no_verif'   *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instructions_list_no_verif_semantics_parser_3886_43_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                GGS_entityPropertyMap  &var_cas_ioPropertyMap,
                                GGS_stringset  &var_cas_ioConstraintPropertyDefinitionSet,
                                GGS_callInstructionSharedPropertySignatureMap  &var_cas_ioCallInstructionSharedPropertySignatureMap) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_42 (_inLexique)) {
        case 2 : {
          nt_semantic_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_ioPropertyMap, var_cas_ioConstraintPropertyDefinitionSet, var_cas_ioCallInstructionSharedPropertySignatureMap) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_no_verif_semantics_parser_3886_43_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_42 (_inLexique)) {
        case 2 : {
          nt_semantic_instruction_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_3915_27_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &/* var_cas_inTypeName */,
                                const GGS_lstring  &/* var_cas_nomVarDest */,
                                const GGS_typeCplusPlusName  &var_cas_inVariableCppName,
                                const GGS_AC_galgasType  &var_cas_inVariableType,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */) {
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeInstructionDeclarationVarLocale::constructor_new (_inLexique, var_cas_inVariableCppName, var_cas_inVariableType COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_3915_27_parse (galgas_scanner & /* _inLexique */) {
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_3931_27_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &/* var_cas_inTypeName */,
                                const GGS_lstring  &var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  &var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  &var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3D) ;
  GGS_AC_galgasType  automatic_var_24 ;
  GGS_typeCplusPlusName  automatic_var_25 ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, automatic_var_24, automatic_var_25 SOURCE_FILE_AT_LINE (3943)) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  ::routine_checkAssignmentTypesCompatibility (_inLexique,  var_cas_inVariableType,  var_cas_sourceType,  GGS_location (_inLexique),  GGS_bool (true, true) SOURCE_FILE_AT_LINE (3955)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_declarationInstructionWithAssignment::constructor_new (_inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_3931_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3D) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_3963_27_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &var_cas_inTypeName,
                                const GGS_lstring  &var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  &var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  &var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  &var_cas_inOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  GGS_AC_galgasType  automatic_var_26 ;
  GGS_typeCplusPlusName  automatic_var_27 ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, automatic_var_26, automatic_var_27 SOURCE_FILE_AT_LINE (3974)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
  GGS_lstring  var_cas_constructorName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_constructorName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  if (var_cas_inVariableType._isBuilt ()) {
    var_cas_inVariableType (HERE)->method_handleConstructorCall (_inLexique, var_cas_constructorName, var_cas_listeAttributsSemantiques SOURCE_FILE_AT_LINE (3980)) ;
  }
  GGS_typeExpressionList  var_cas_expressionList ;
  nt_output_expression_list_ (_inLexique, var_cas_expressionList, var_cas_listeAttributsSemantiques, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
  GGS_typeExpression  var_cas_e ;
  var_cas_e = GGS_typeConstructorExpression::constructor_new (_inLexique, var_cas_inTypeName, var_cas_constructorName, var_cas_expressionList COMMA_HERE) ;
  GGS_typeInstruction  var_cas_i ;
  var_cas_i = GGS_C_declarationInstructionWithAssignment::constructor_new (_inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_e COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_i) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_3963_27_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_output_expression_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4003_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  GGS_lstring  var_cas_mapTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_mapTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_43 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4016)) SOURCE_FILE_AT_LINE (4016))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4017)) SOURCE_FILE_AT_LINE (4017))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapType::constructor_new (_inLexique, var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_t SOURCE_FILE_AT_LINE (4019)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
      GGS_lstring  var_cas_cppClassName ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_cppClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      var_cas_cppClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old style map definition") SOURCE_FILE_AT_LINE (4026)) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_44 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4039)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4046)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_block) ;
              GGS_lstring  var_cas_nomMethode ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomMethode.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut ;
              var_cas_tableDebut = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin ;
              var_cas_tableFin = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              var_cas_tableMethodesBloc.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin SOURCE_FILE_AT_LINE (4081)) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList::element_type * operand_157571 = var_cas_insertMethodList.firstObject () ;
      while ((operand_157571 != NULL)) {
        macroValidPointer (operand_157571) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_157767 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_157767 != NULL)) {
          macroValidPointer (operand_157767) ;
          var_cas_methodSignature._addAssign_operation (operand_157767->mAttributType, var_cas_inPassingMode) ;
          operand_157767 = operand_157767->nextObject () ;
        }
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_157571->mMethodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4110)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_158196 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_158196 != NULL)) {
          macroValidPointer (operand_158196) ;
          var_cas_methodSignature._addAssign_operation (operand_158196->mAttributType, var_cas_inPassingMode) ;
          operand_158196 = operand_158196->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, ((operand_157571->mMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4118))) + (GGS_string (true, "GetIndex"))), operand_157571->mMethodName.reader_location (_inLexique SOURCE_FILE_AT_LINE (4118)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4119)) ;
        operand_157571 = operand_157571->nextObject () ;
      }
      GGS_insertOrSearchMethodList::element_type * operand_158544 = var_cas_searchMethodList.firstObject () ;
      while ((operand_158544 != NULL)) {
        macroValidPointer (operand_158544) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_158738 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_158738 != NULL)) {
          macroValidPointer (operand_158738) ;
          var_cas_methodSignature._addAssign_operation (operand_158738->mAttributType, var_cas_outPassingMode) ;
          operand_158738 = operand_158738->nextObject () ;
        }
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_158544->mMethodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4128)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_159165 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_159165 != NULL)) {
          macroValidPointer (operand_159165) ;
          var_cas_methodSignature._addAssign_operation (operand_159165->mAttributType, var_cas_outPassingMode) ;
          operand_159165 = operand_159165->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, ((operand_158544->mMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4136))) + (GGS_string (true, "GetIndex"))), operand_158544->mMethodName.reader_location (_inLexique SOURCE_FILE_AT_LINE (4136)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4137)) ;
        operand_158544 = operand_158544->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4148)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_typeDefinitionTableAimplementer::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_listeTypeeAttributsExternesCourants, var_cas_cppClassName, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_tableMethodesBloc COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_removeMethodList ;
      var_cas_removeMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_mapMethodMap  var_cas_mapReaderMethodMap ;
      var_cas_mapReaderMethodMap = GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_45 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_remove) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_errorMessage SOURCE_FILE_AT_LINE (4194)) ;
              }
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_162399 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_162399 != NULL)) {
                macroValidPointer (operand_162399) ;
                var_cas_methodSignature._addAssign_operation (operand_162399->mAttributType, var_cas_outPassingMode) ;
                operand_162399 = operand_162399->nextObject () ;
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4202)) ;
              var_cas_removeMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4203)), GGS_bool (true, false), GGS_string (true, "")) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4205))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_162987 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_162987 != NULL)) {
                  macroValidPointer (operand_162987) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_162987->mAttributType, var_cas_outPassingMode) ;
                  operand_162987 = operand_162987->nextObject () ;
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4212)) ;
                var_cas_removeMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4213)), GGS_bool (true, true), GGS_string (true, "")) ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_errorMessage SOURCE_FILE_AT_LINE (4221)) ;
              }
              GGS_string var_cas_shadowErrorMessage ;
              switch (select_semantics_parser_46 (_inLexique)) {
                case 1 : {
                  var_cas_shadowErrorMessage = GGS_string (true, "") ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  GGS_lstring  var_cas_shadowErrorMessageString ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_shadowErrorMessageString.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  if (var_cas_shadowErrorMessageString._isBuilt ()) {
                    ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_shadowErrorMessageString SOURCE_FILE_AT_LINE (4229)) ;
                  }
                  var_cas_shadowErrorMessage = var_cas_shadowErrorMessageString.reader_string (_inLexique SOURCE_FILE_AT_LINE (4230)) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_164096 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_164096 != NULL)) {
                macroValidPointer (operand_164096) ;
                var_cas_methodSignature._addAssign_operation (operand_164096->mAttributType, var_cas_inPassingMode) ;
                operand_164096 = operand_164096->nextObject () ;
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4239)) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4240)), GGS_bool (true, false), var_cas_shadowErrorMessage) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4242))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_164699 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_164699 != NULL)) {
                  macroValidPointer (operand_164699) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_164699->mAttributType, var_cas_inPassingMode) ;
                  operand_164699 = operand_164699->nextObject () ;
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4249)) ;
                var_cas_insertMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4250)), GGS_bool (true, true), var_cas_shadowErrorMessage) ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_K_escapeCharacters (_inLexique,  var_cas_errorMessage SOURCE_FILE_AT_LINE (4258)) ;
              }
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_165487 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_165487 != NULL)) {
                macroValidPointer (operand_165487) ;
                var_cas_methodSignature._addAssign_operation (operand_165487->mAttributType, var_cas_outPassingMode) ;
                operand_165487 = operand_165487->nextObject () ;
              }
              var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4266)) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4267)), GGS_bool (true, false), GGS_string (true, "")) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4269))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_166105 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_166105 != NULL)) {
                  macroValidPointer (operand_166105) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_166105->mAttributType, var_cas_outPassingMode) ;
                  operand_166105 = operand_166105->nextObject () ;
                }
                var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4276)) ;
                var_cas_searchMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4277)), GGS_bool (true, true), GGS_string (true, "")) ;
              }
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapReaderMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4289)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_mapToImplement::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_listeTypeeAttributsExternesCourants, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_removeMethodList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4003_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  GGS_lstring  var_cas_mapTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_mapTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_43 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4315)) SOURCE_FILE_AT_LINE (4315))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4315)) SOURCE_FILE_AT_LINE (4315))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapType::constructor_new (_inLexique, var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_t SOURCE_FILE_AT_LINE (4317)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
      GGS_lstring  var_cas_cppClassName ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_cppClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_44 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4336)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique SOURCE_FILE_AT_LINE (4343)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_block) ;
              GGS_lstring  var_cas_nomMethode ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomMethode.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut ;
              var_cas_tableDebut = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin ;
              var_cas_tableFin = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              var_cas_tableMethodesBloc.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin SOURCE_FILE_AT_LINE (4378)) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList::element_type * operand_170828 = var_cas_insertMethodList.firstObject () ;
      while ((operand_170828 != NULL)) {
        macroValidPointer (operand_170828) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_171024 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_171024 != NULL)) {
          macroValidPointer (operand_171024) ;
          var_cas_methodSignature._addAssign_operation (operand_171024->mAttributType, var_cas_inPassingMode) ;
          operand_171024 = operand_171024->nextObject () ;
        }
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_170828->mMethodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4407)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_171453 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_171453 != NULL)) {
          macroValidPointer (operand_171453) ;
          var_cas_methodSignature._addAssign_operation (operand_171453->mAttributType, var_cas_inPassingMode) ;
          operand_171453 = operand_171453->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, ((operand_170828->mMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4415))) + (GGS_string (true, "GetIndex"))), operand_170828->mMethodName.reader_location (_inLexique SOURCE_FILE_AT_LINE (4415)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4416)) ;
        operand_170828 = operand_170828->nextObject () ;
      }
      GGS_insertOrSearchMethodList::element_type * operand_171801 = var_cas_searchMethodList.firstObject () ;
      while ((operand_171801 != NULL)) {
        macroValidPointer (operand_171801) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_171997 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_171997 != NULL)) {
          macroValidPointer (operand_171997) ;
          var_cas_methodSignature._addAssign_operation (operand_171997->mAttributType, var_cas_outPassingMode) ;
          operand_171997 = operand_171997->nextObject () ;
        }
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_171801->mMethodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4425)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_172427 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_172427 != NULL)) {
          macroValidPointer (operand_172427) ;
          var_cas_methodSignature._addAssign_operation (operand_172427->mAttributType, var_cas_outPassingMode) ;
          operand_172427 = operand_172427->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, ((operand_171801->mMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4433))) + (GGS_string (true, "GetIndex"))), operand_171801->mMethodName.reader_location (_inLexique SOURCE_FILE_AT_LINE (4433)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4434)) ;
        operand_171801 = operand_171801->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4445)) ;
      GGS_TypeModel  var_cas_type ;
      var_cas_type = GGS_MapModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_type SOURCE_FILE_AT_LINE (4447)) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_mapMethodMap  var_cas_mapReaderMethodMap ;
      var_cas_mapReaderMethodMap = GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_45 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_remove) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_28 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_28) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_174742 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_174742 != NULL)) {
                macroValidPointer (operand_174742) ;
                var_cas_methodSignature._addAssign_operation (operand_174742->mAttributType, var_cas_outPassingMode) ;
                operand_174742 = operand_174742->nextObject () ;
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4487)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4489))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_175286 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_175286 != NULL)) {
                  macroValidPointer (operand_175286) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_175286->mAttributType, var_cas_outPassingMode) ;
                  operand_175286 = operand_175286->nextObject () ;
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4496)) ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_29 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_29) ;
              switch (select_semantics_parser_46 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_175966 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_175966 != NULL)) {
                macroValidPointer (operand_175966) ;
                var_cas_methodSignature._addAssign_operation (operand_175966->mAttributType, var_cas_inPassingMode) ;
                operand_175966 = operand_175966->nextObject () ;
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4515)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4517))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_176509 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_176509 != NULL)) {
                  macroValidPointer (operand_176509) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_176509->mAttributType, var_cas_inPassingMode) ;
                  operand_176509 = operand_176509->nextObject () ;
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4524)) ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_30 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_30) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_177109 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_177109 != NULL)) {
                macroValidPointer (operand_177109) ;
                var_cas_methodSignature._addAssign_operation (operand_177109->mAttributType, var_cas_outPassingMode) ;
                operand_177109 = operand_177109->nextObject () ;
              }
              var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4538)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4540))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_177693 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_177693 != NULL)) {
                  macroValidPointer (operand_177693) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_177693->mAttributType, var_cas_outPassingMode) ;
                  operand_177693 = operand_177693->nextObject () ;
                }
                var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4547)) ;
              }
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapReaderMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4559)) ;
      GGS_TypeModel  var_cas_type ;
      var_cas_type = GGS_MapModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_type SOURCE_FILE_AT_LINE (4561)) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_4003_29_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  switch (select_semantics_parser_43 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_44 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              nt_ex_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              nt_ex_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_block) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_45 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_remove) ;
              nt_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              nt_map_method_parse (_inLexique) ;
              switch (select_semantics_parser_46 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              nt_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'ex_map_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_ex_map_method_semantics_parser_4568_21_ (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_nomMethode,
                                GGS_lstring  &var_cas_outMessage) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomMethode.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_outMessage.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_ex_map_method_semantics_parser_4568_21_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'map_method'               *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_map_method_semantics_parser_4580_18_ (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_methodName,
                                GGS_lstring  &var_cas_getIndexMethodName,
                                GGS_lstring  &var_cas_outMessage) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_methodName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_47 (_inLexique)) {
    case 1 : {
      var_cas_getIndexMethodName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_getIndexMethodName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_outMessage.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_map_method_semantics_parser_4580_18_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  switch (select_semantics_parser_47 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'message_pattern'             *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_message_pattern_semantics_parser_4599_23_ (galgas_scanner & _inLexique,
                                GGS_L_stringList  &var_cas_outMessageList) {
  var_cas_outMessageList = GGS_L_stringList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_semantics_parser_49 (_inLexique)) {
          case 1 : {
            GGS_lstring  var_cas_messageText ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
            var_cas_messageText.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            if (((var_cas_messageText.reader_string (_inLexique SOURCE_FILE_AT_LINE (4607))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
              var_cas_outMessageList._addAssign_operation (var_cas_messageText.reader_string (_inLexique SOURCE_FILE_AT_LINE (4608))) ;
            }
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
            var_cas_outMessageList._addAssign_operation (GGS_string (true, "")) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_semantics_parser_48 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_message_pattern_semantics_parser_4599_23_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_semantics_parser_49 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_semantics_parser_48 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4625_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_listTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4638)) SOURCE_FILE_AT_LINE (4638))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4638)) SOURCE_FILE_AT_LINE (4638))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (4640)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_inputSignature ;
      var_cas_inputSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques::element_type * operand_181516 = var_cas_listeTousAttributsSemantiques.firstObject () ;
      while ((operand_181516 != NULL)) {
        macroValidPointer (operand_181516) ;
        var_cas_extractSignature._addAssign_operation (operand_181516->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        var_cas_inputSignature._addAssign_operation (operand_181516->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE)) ;
        operand_181516 = operand_181516->nextObject () ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature, var_cas_inputSignature COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4673)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_listTypeToImplement::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_listeTypeeAttributsExternesCourants COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4625_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_listTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4690)) SOURCE_FILE_AT_LINE (4690))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4690)) SOURCE_FILE_AT_LINE (4690))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (4692)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_inputSignature ;
      var_cas_inputSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques::element_type * operand_183755 = var_cas_listeTousAttributsSemantiques.firstObject () ;
      while ((operand_183755 != NULL)) {
        macroValidPointer (operand_183755) ;
        var_cas_extractSignature._addAssign_operation (operand_183755->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        var_cas_inputSignature._addAssign_operation (operand_183755->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE)) ;
        operand_183755 = operand_183755->nextObject () ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature, var_cas_inputSignature COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4725)) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ListModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (4727)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_4625_29_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4737_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_sortedlist) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_listTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_51 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4750)) SOURCE_FILE_AT_LINE (4750))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4750)) SOURCE_FILE_AT_LINE (4750))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (4752)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques::element_type * operand_186336 = var_cas_listeTousAttributsSemantiques.firstObject () ;
      while ((operand_186336 != NULL)) {
        macroValidPointer (operand_186336) ;
        var_cas_extractSignature._addAssign_operation (operand_186336->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        operand_186336 = operand_186336->nextObject () ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasSortedListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature COMMA_HERE) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_sortDescriptorList  var_cas_sortDescriptorList ;
      var_cas_sortDescriptorList = GGS_sortDescriptorList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_stringset  var_cas_usedSortedAttributes ;
      var_cas_usedSortedAttributes = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_sortAttribute ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_sortAttribute.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            if ((var_cas_usedSortedAttributes.reader_hasKey (_inLexique, var_cas_sortAttribute.reader_string (_inLexique SOURCE_FILE_AT_LINE (4788)) SOURCE_FILE_AT_LINE (4788))).isBuiltAndTrue ()) {
              var_cas_sortAttribute.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this attribute is already used in sort list") SOURCE_FILE_AT_LINE (4790)) ;
            }else{
              GGS_AC_galgasType  var_cas_definitionType ;
              if (var_cas_tableAttributs._isBuilt ()) {
                var_cas_tableAttributs (HERE)->method_searchKey (_inLexique, var_cas_sortAttribute, var_cas_definitionType SOURCE_FILE_AT_LINE (4792)) ;
              }
              if (var_cas_definitionType._isBuilt ()) {
                var_cas_definitionType (HERE)->method_acceptToBeSortKeyInSortedListDefinition (_inLexique, var_cas_sortAttribute SOURCE_FILE_AT_LINE (4793)) ;
              }
              var_cas_usedSortedAttributes._addAssign_operation (var_cas_sortAttribute.reader_string (_inLexique SOURCE_FILE_AT_LINE (4794))) ;
            }
            GGS_bool var_cas_ascendingOrder ;
            switch (select_semantics_parser_53 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3C) ;
                var_cas_ascendingOrder = GGS_bool (true, true) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3E) ;
                var_cas_ascendingOrder = GGS_bool (true, false) ;
                } break ;
              default :
                break ;
            }
            var_cas_sortDescriptorList._addAssign_operation (var_cas_sortAttribute, var_cas_ascendingOrder) ;
          switch (select_repeat_semantics_parser_52 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4810)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_sortedListTypeToImplement::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_listeTypeeAttributsExternesCourants, var_cas_sortDescriptorList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4737_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_sortedlist) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_listTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  switch (select_semantics_parser_51 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4832)) SOURCE_FILE_AT_LINE (4832))) | (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (4832)) SOURCE_FILE_AT_LINE (4832))))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (4834)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques::element_type * operand_189409 = var_cas_listeTousAttributsSemantiques.firstObject () ;
      while ((operand_189409 != NULL)) {
        macroValidPointer (operand_189409) ;
        var_cas_extractSignature._addAssign_operation (operand_189409->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        operand_189409 = operand_189409->nextObject () ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasSortedListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature COMMA_HERE) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_semantics_parser_53 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3C) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3E) ;
                } break ;
              default :
                break ;
            }
          switch (select_repeat_semantics_parser_52 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4877)) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ListModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (4879)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_4737_29_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_sortedlist) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  switch (select_semantics_parser_51 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_semantics_parser_53 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3C) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3E) ;
                } break ;
              default :
                break ;
            }
          switch (select_repeat_semantics_parser_52 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'attributes_definition_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_attributes_definition_list_semantics_parser_4889_34_ (galgas_scanner & _inLexique,
                                GGS_typeListModel  &var_cas_outAttributeListModel,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeAttributsSemantiquesCourants,
                                GGS_L_nameWithType  &var_cas_listeTypeeAttributsExternesCourants,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_listeTypeeAttributsExternesCourants = GGS_L_nameWithType::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_listeAttributsSemantiquesCourants = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_outAttributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_54 (_inLexique)) {
        case 2 : {
          GGS_AC_galgasType  var_cas_definitionType ;
          GGS_lstring  var_cas_typeName ;
          nt_type_parsing_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
          GGS_lstring  var_cas_attributeName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_attributeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          var_cas_tableAttributs.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_definitionType SOURCE_FILE_AT_LINE (4913)) ;
          var_cas_listeTousAttributsSemantiques._addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_listeAttributsSemantiquesCourants._addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_outAttributeListModel._addAssign_operation (var_cas_typeName) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_attributes_definition_list_semantics_parser_4889_34_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_54 (_inLexique)) {
        case 2 : {
          nt_type_parsing_parse (_inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4927_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extern) ;
  GGS_lstring  var_cas_externTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_externTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_cppClassName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_cppClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  GGS_lstring  var_cas_path ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_path.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_typeTableMethodes  var_cas_modifiersMap ;
  var_cas_modifiersMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap ;
  var_cas_readersInInstructionMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall ;
  var_cas_acceptAddAssignOperatorCall = GGS_bool (true, false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList ;
  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_externTypeConstructorMap  var_cas_constructorsMap ;
  var_cas_constructorsMap = GGS_M_externTypeConstructorMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_55 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constructor) ;
          GGS_lstring  var_cas_constructorName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_constructorName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList ;
          var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semantics_parser_56 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                  var_cas_parameterName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  var_cas_constructorArgumentTypesList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          var_cas_constructorsMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList SOURCE_FILE_AT_LINE (4976)) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_method) ;
          GGS_lstring  var_cas_methodName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_methodName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
          var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_L_signature  var_cas_signatureForGrammarComponent ;
          nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          var_cas_readersInInstructionMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (4996)) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_modifier) ;
          switch (select_semantics_parser_57 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_methodName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_methodName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
              var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              var_cas_modifiersMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (5016)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_3D) ;
              GGS_location  var_cas_errorLocation ;
              var_cas_errorLocation = GGS_location (_inLexique) ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                  switch (select_repeat_semantics_parser_58 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                      var_cas_parameterName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                      var_cas_addAssignOperatorCallTypeList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              if ((var_cas_acceptAddAssignOperatorCall).isBuiltAndTrue ()) {
                var_cas_errorLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'+=' operator is already defined") SOURCE_FILE_AT_LINE (5037)) ;
              }else{
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true, true) ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeEntityToGenerate  var_cas_t ;
  var_cas_t = GGS_typeExternTypeToGenerate::constructor_new (_inLexique, var_cas_externTypeName, var_cas_cppClassName, var_cas_path COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_t) ;
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasExternType::constructor_new (_inLexique, var_cas_externTypeName, var_cas_cppClassName, var_cas_constructorsMap, var_cas_modifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_e SOURCE_FILE_AT_LINE (5055)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4927_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extern) ;
  GGS_lstring  var_cas_externTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_externTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_cppClassName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_cppClassName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_typeTableMethodes  var_cas_EXmodifiersMap ;
  var_cas_EXmodifiersMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap ;
  var_cas_readersInInstructionMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall ;
  var_cas_acceptAddAssignOperatorCall = GGS_bool (true, false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList ;
  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_externTypeConstructorMap  var_cas_EXconstructorsMap ;
  var_cas_EXconstructorsMap = GGS_M_externTypeConstructorMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_constructorMap  var_cas_constructorMap ;
  var_cas_constructorMap = GGS_constructorMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_readerMap  var_cas_readerMap ;
  var_cas_readerMap = GGS_readerMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_modifierMap  var_cas_modifierMap ;
  var_cas_modifierMap = GGS_modifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListModel  var_cas_addAssignFormalInputArgumentList ;
  var_cas_addAssignFormalInputArgumentList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_55 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constructor) ;
          GGS_lstring  var_cas_constructorName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_constructorName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList ;
          var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeListModel  var_cas_formalInputArgumentList ;
          var_cas_formalInputArgumentList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semantics_parser_56 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                  var_cas_parameterName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  var_cas_constructorArgumentTypesList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  var_cas_formalInputArgumentList._addAssign_operation (var_cas_galgasTypeName) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          var_cas_EXconstructorsMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList SOURCE_FILE_AT_LINE (5111)) ;
          var_cas_constructorMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_formalInputArgumentList SOURCE_FILE_AT_LINE (5112)) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_method) ;
          GGS_lstring  var_cas_readerName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_readerName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
          var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_L_signature  var_cas_signature ;
          nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          var_cas_readersInInstructionMap.modifier_insertKey (_inLexique, var_cas_readerName, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (5132)) ;
          var_cas_readerMap.modifier_insertKey (_inLexique, var_cas_readerName, var_cas_signature SOURCE_FILE_AT_LINE (5133)) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_modifier) ;
          switch (select_semantics_parser_57 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_modifierName ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_modifierName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
              var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_L_signature  var_cas_signature ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
              var_cas_EXmodifiersMap.modifier_insertKey (_inLexique, var_cas_modifierName, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (5153)) ;
              var_cas_modifierMap.modifier_insertKey (_inLexique, var_cas_modifierName, var_cas_signature SOURCE_FILE_AT_LINE (5154)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_3D) ;
              if (((var_cas_addAssignFormalInputArgumentList.reader_length (_inLexique SOURCE_FILE_AT_LINE (5157))) > (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'+=' operator is already defined") SOURCE_FILE_AT_LINE (5159)) ;
              }else{
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true, true) ;
              }
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                  switch (select_repeat_semantics_parser_58 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                      var_cas_parameterName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                      var_cas_addAssignOperatorCallTypeList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      var_cas_addAssignFormalInputArgumentList._addAssign_operation (var_cas_galgasTypeName) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasExternType::constructor_new (_inLexique, var_cas_externTypeName, var_cas_cppClassName, var_cas_EXconstructorsMap, var_cas_EXmodifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_e SOURCE_FILE_AT_LINE (5190)) ;
  GGS_TypeModel  var_cas_t ;
  var_cas_t = GGS_ExternTypeModel::constructor_new (_inLexique, var_cas_constructorMap, var_cas_readerMap, var_cas_modifierMap, var_cas_addAssignFormalInputArgumentList COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_t SOURCE_FILE_AT_LINE (5192)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_4927_29_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extern) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_55 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constructor) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semantics_parser_56 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                  nt_formal_argument_type_parse (_inLexique) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_method) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          nt_formal_arguments_list_parse (_inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_modifier) ;
          switch (select_semantics_parser_57 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_3D) ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                  switch (select_repeat_semantics_parser_58 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                      nt_formal_argument_type_parse (_inLexique) ;
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5200_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5207)) SOURCE_FILE_AT_LINE (5207))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5209)) ;
    }
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_type_semantique._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5210)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_type_semantique = ptrExtraire_->aDefType ;
      }
    }
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique SOURCE_FILE_AT_LINE (5212)) ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5200_28_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_5200_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5222_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5230)) SOURCE_FILE_AT_LINE (5230))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5232)) ;
    }
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_type_semantique._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5233)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_type_semantique = ptrExtraire_->aDefType ;
      }
    }
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique SOURCE_FILE_AT_LINE (5235)) ;
    }
    { cPtr_typeGalgasUndefinedListType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasUndefinedListType *> (var_cas_type_semantique.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        if (var_cas_type_semantique.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeGalgasUndefinedListType::static_string_message_messageGalgasType () ;
          message2_ << var_cas_type_semantique (HERE)->message_messageGalgasType () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5236)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5222_28_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_5222_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5247_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5255)) SOURCE_FILE_AT_LINE (5255))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5257)) ;
    }
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_type_semantique._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5258)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_type_semantique = ptrExtraire_->aDefType ;
      }
    }
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique SOURCE_FILE_AT_LINE (5260)) ;
    }
    { cPtr_typeGalgasUndefinedMapType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasUndefinedMapType *> (var_cas_type_semantique.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        if (var_cas_type_semantique.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeGalgasUndefinedMapType::static_string_message_messageGalgasType () ;
          message2_ << var_cas_type_semantique (HERE)->message_messageGalgasType () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5261)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5247_28_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_5247_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5272_28_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_outGalgasTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (5281)) SOURCE_FILE_AT_LINE (5281))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite SOURCE_FILE_AT_LINE (5283)) ;
    }
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_type_semantique._drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5284)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_type_semantique = ptrExtraire_->aDefType ;
      }
    }
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique SOURCE_FILE_AT_LINE (5286)) ;
    }
    { cPtr_typeGalgasUndefinedClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasUndefinedClassType *> (var_cas_type_semantique.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        if (var_cas_type_semantique.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeGalgasUndefinedClassType::static_string_message_messageGalgasType () ;
          message2_ << var_cas_type_semantique (HERE)->message_messageGalgasType () ;
          var_cas_outGalgasTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (5287)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_5272_28_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_outGalgasTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_5272_28_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5303_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_action) ;
  GGS_lstring  var_cas_nomAction ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomAction.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteActionExterne::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_nomAction, var_cas_entite SOURCE_FILE_AT_LINE (5327)) ;
  GGS_typeEntityToGenerate  var_cas_ea ;
  var_cas_ea = GGS_typeActionExterneAengendrer::constructor_new (_inLexique, var_cas_nomAction, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_ea) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5303_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_action) ;
  GGS_lstring  var_cas_actionName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_actionName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteActionExterne::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_entite SOURCE_FILE_AT_LINE (5355)) ;
  var_cas_ioExternActionMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_signature, GGS_bool (true, true) SOURCE_FILE_AT_LINE (5356)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5303_29_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_action) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5366_29_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  &/* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_enum) ;
  GGS_lstring  var_cas_enumTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_enumTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_enumConstantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_enumConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeEnumMessageMap  var_cas_enumMessageMap ;
  var_cas_enumMessageMap = GGS_typeEnumMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_constantName ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        var_cas_constantName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
        var_cas_constantMap.modifier_insertKey (_inLexique, var_cas_constantName SOURCE_FILE_AT_LINE (5386)) ;
      switch (select_repeat_semantics_parser_59 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_60 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          GGS_lstring  var_cas_messageName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_messageName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          GGS_typeEnumCstMessageStringMap  var_cas_cstMessageStringMap ;
          var_cas_cstMessageStringMap = GGS_typeEnumCstMessageStringMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                GGS_lstring  var_cas_cstName ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                var_cas_cstName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
                GGS_lstring  var_cas_cstString ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                var_cas_cstString.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                var_cas_cstMessageStringMap.modifier_insertKey (_inLexique, var_cas_cstName, var_cas_cstString SOURCE_FILE_AT_LINE (5406)) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              switch (select_repeat_semantics_parser_61 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
          GGS_L_lstringList  var_cas_messageStringList ;
          var_cas_messageStringList = GGS_L_lstringList::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_enumConstantMap::element_type * operand_210010 = var_cas_constantMap.firstObject () ;
          while ((operand_210010 != NULL)) {
            macroValidPointer (operand_210010) ;
            GGS_lstring  var_cas_name ;
            var_cas_name = GGS_lstring::constructor_new (_inLexique, operand_210010->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (5414)), GGS_location (_inLexique) COMMA_HERE) ;
            GGS_lstring  var_cas_cstString ;
            if (var_cas_cstMessageStringMap._isBuilt ()) {
              var_cas_cstMessageStringMap (HERE)->method_searchKey (_inLexique, var_cas_name, var_cas_cstString SOURCE_FILE_AT_LINE (5416)) ;
            }
            var_cas_messageStringList._addAssign_operation (var_cas_cstString) ;
            operand_210010 = operand_210010->nextObject () ;
          }
          var_cas_enumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageStringList SOURCE_FILE_AT_LINE (5420)) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  GGS_typeEntityToGenerate  var_cas_e ;
  var_cas_e = GGS_enumGalgasType::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_e) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_enum::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_ee ;
  var_cas_ee = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_ee SOURCE_FILE_AT_LINE (5432)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5366_29_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_enum) ;
  GGS_lstring  var_cas_enumTypeName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_enumTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_enumConstantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_enumConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_constantName ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        var_cas_constantName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
        var_cas_constantMap.modifier_insertKey (_inLexique, var_cas_constantName SOURCE_FILE_AT_LINE (5451)) ;
      switch (select_repeat_semantics_parser_59 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_typeEnumMessageMap  var_cas_exEnumMessageMap ;
  var_cas_exEnumMessageMap = GGS_typeEnumMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumMessageMap  var_cas_enumMessageMap ;
  var_cas_enumMessageMap = GGS_enumMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_60 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          GGS_lstring  var_cas_messageName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_messageName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          var_cas_enumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName SOURCE_FILE_AT_LINE (5466)) ;
          GGS_L_lstringList  var_cas_messageStringList ;
          var_cas_messageStringList = GGS_L_lstringList::constructor_emptyList (_inLexique COMMA_HERE) ;
          var_cas_exEnumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageStringList SOURCE_FILE_AT_LINE (5468)) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              switch (select_repeat_semantics_parser_61 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_enum::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_exEnumMessageMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_e SOURCE_FILE_AT_LINE (5485)) ;
  GGS_TypeModel  var_cas_type ;
  var_cas_type = GGS_EnumModel::constructor_new (_inLexique, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_type SOURCE_FILE_AT_LINE (5487)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5366_29_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_enum) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      switch (select_repeat_semantics_parser_59 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_60 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              switch (select_repeat_semantics_parser_61 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*

