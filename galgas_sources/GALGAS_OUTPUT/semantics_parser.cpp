//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semantics_parser.cpp'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      april 2nd, 2006, at 19h22'50"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "semantics_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "semantics_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_447_24_ (galgas_scanner & lexique_var_,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  GGS_lstring  var_cas_componentName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_componentName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_string var_cas_defLexique ;
  var_cas_defLexique = GGS_string (true, "") ;
  GGS_ModelMap  var_cas_modelMap ;
  var_cas_modelMap = GGS_ModelMap::constructor_empty (HERE) ;
  GGS_ActionMap  var_cas_actionMap ;
  var_cas_actionMap = GGS_ActionMap::constructor_empty (HERE) ;
  GGS_stringset  var_cas_inclusionsForHeaderFile ;
  GGS_stringset  var_cas_inclusionsForImplementationFile ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_empty (HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentEntitiesMap ;
  GGS_stringset  var_cas_classNamesSet ;
  var_cas_classNamesSet = GGS_stringset::constructor_empty (HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_empty (HERE) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  GGS_stringset  var_cas_includedGrammarComponents ;
  nt_import_headers_semantics_and_grammars_ (lexique_var_, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_includedGrammarComponents, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap, var_cas_ioGrammarComponentsMap, var_cas_ioOptionsComponentsMap, var_cas_inclusionsForImplementationFile, var_cas_inclusionsForHeaderFile, var_cas_optionsComponentsMapForUse, var_cas_modelMap, var_cas_actionMap, var_cas_componentEntitiesMap, var_cas_tableEnAvant) ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_18445 = lexique_var_.parsingContext () ;
    GGS_typeTableRoutinesAimplementer  var_cas_UNUSED_tableRoutinesAimplementer ;
    var_cas_UNUSED_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_empty (HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_UNUSED_tableNomRoutinesDeclarees ;
    var_cas_UNUSED_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_empty (HERE) ;
    GGS_typeTableEnAvant  var_cas_UNUSED_tableEnAvant ;
    var_cas_UNUSED_tableEnAvant = var_cas_tableEnAvant ;
    GGS_M_semanticsEntitiesForUse  var_cas_UNUSED_componentSemanticsEntitiesMap ;
    var_cas_UNUSED_componentSemanticsEntitiesMap = var_cas_componentEntitiesMap ;
    { bool syntaxRepeat = true ;
      while (syntaxRepeat) {
        switch (select_repeat_semantics_parser_0 (lexique_var_)) {
          case 2 : {
            nt_semantics_declaration_importSemantics (lexique_var_, var_cas_modelMap, var_cas_actionMap, var_cas_UNUSED_componentSemanticsEntitiesMap, var_cas_UNUSED_tableNomRoutinesDeclarees, var_cas_UNUSED_tableEnAvant, var_cas_UNUSED_tableRoutinesAimplementer) ;
            } break ;
          default :
            syntaxRepeat = false ;
            break ;
        }
      }
    }
  //--- Branch of parse/rewind instruction
    lexique_var_.setParsingContext (context_18445) ;
    GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer ;
    var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_empty (HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees ;
    var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_empty (HERE) ;
    GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
    var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_empty (HERE) ;
    { bool syntaxRepeat = true ;
      while (syntaxRepeat) {
        switch (select_repeat_semantics_parser_0 (lexique_var_)) {
          case 2 : {
            nt_semantics_declaration_ (lexique_var_, var_cas_componentEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_optionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer) ;
            } break ;
          default :
            syntaxRepeat = false ;
            break ;
        }
      }
    }
  //--- End of parse/rewind instruction
  if (((! (var_cas_ioSemanticsComponentsMap.reader_hasKey (var_cas_componentName.reader_value ())))).isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap ;
    var_cas_optionsComponentsMap = GGS_M_optionComponents::constructor_empty (HERE) ;
    var_cas_ioSemanticsComponentsMap.methode_insertKey (lexique_var_, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentEntitiesMap SOURCE_FILE_AT_LINE (535)) ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeTableNomRoutinesDeclarees::element_type * operand_19033 = var_cas_tableNomRoutinesDeclarees.firstObject () ;
  while ((operand_19033 != NULL)) {
    macroValidPointer (operand_19033) ;
    if (((! (var_cas_tableRoutinesAimplementer.reader_hasKey (operand_19033->mKey.reader_value ())))).isBuiltAndTrue ()) {
        operand_19033->mKey.reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "the routine '")) + (operand_19033->mKey.reader_value ()))) + (GGS_string (true, "' is not implemented within the component"))) SOURCE_FILE_AT_LINE (553)) ;
    }
    operand_19033 = operand_19033->nextObject () ;
  }
  if (var_cas_componentName.isBuilt () &&
      var_cas_inclusionsForHeaderFile.isBuilt () &&
      var_cas_defLexique.isBuilt () &&
      var_cas_listeEntitesAengendrer.isBuilt () &&
      var_cas_inclusionsForImplementationFile.isBuilt ()) {
    ::routine_generateSemanticsComponent (lexique_var_,  var_cas_componentName,  var_cas_inclusionsForHeaderFile,  var_cas_defLexique,  var_cas_listeEntitesAengendrer,  var_cas_inclusionsForImplementationFile SOURCE_FILE_AT_LINE (558)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_447_24_importSyntax (galgas_scanner & lexique_var_,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_import_headers_semantics_and_grammars_parse (lexique_var_) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (lexique_var_)) {
        case 2 : {
          nt_semantics_declaration_parse (lexique_var_) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_447_24_importSemantics (galgas_scanner & lexique_var_,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  GGS_lstring  var_cas_componentName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_componentName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  ::routine_enterBuiltinTypes (lexique_var_,  var_cas_componentSemanticsEntitiesMap SOURCE_FILE_AT_LINE (589)) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  var_cas_includedMetamodelComponents = GGS_stringset::constructor_empty (HERE) ;
  GGS_ModelMap  var_cas_modelMap ;
  GGS_ActionMap  var_cas_actionMap ;
  nt_import_headers_semantics_and_grammars_importSemantics (lexique_var_, var_cas_ioSemanticsComponentsMap, var_cas_includedSemanticsComponents, var_cas_includedOptionComponents, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
  GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer ;
  var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_empty (HERE) ;
  GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees ;
  var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_empty (HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (lexique_var_)) {
        case 2 : {
          nt_semantics_declaration_importSemantics (lexique_var_, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (((! (var_cas_ioSemanticsComponentsMap.reader_hasKey (var_cas_componentName.reader_value ())))).isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap ;
    var_cas_optionsComponentsMap = GGS_M_optionComponents::constructor_empty (HERE) ;
    var_cas_ioSemanticsComponentsMap.methode_insertKey (lexique_var_, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentSemanticsEntitiesMap SOURCE_FILE_AT_LINE (625)) ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_447_24_importLexique (galgas_scanner & lexique_var_,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_import_headers_semantics_and_grammars_parse (lexique_var_) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (lexique_var_)) {
        case 2 : {
          nt_semantics_declaration_parse (lexique_var_) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_447_24_importGrammarForSemantics (galgas_scanner & lexique_var_,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_import_headers_semantics_and_grammars_parse (lexique_var_) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (lexique_var_)) {
        case 2 : {
          nt_semantics_declaration_parse (lexique_var_) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_447_24_importOptions (galgas_scanner & lexique_var_,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_import_headers_semantics_and_grammars_parse (lexique_var_) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_0 (lexique_var_)) {
        case 2 : {
          nt_semantics_declaration_parse (lexique_var_) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'import_headers_semantics_and_grammars'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_690_45_ (galgas_scanner & lexique_var_,
                                GGS_stringset  &var_cas_outImportedSemanticsComponents,
                                GGS_stringset  &var_cas_outIncludedMetamodelComponents,
                                GGS_stringset  &var_cas_outImportedOptionComponents,
                                GGS_stringset  &var_cas_outImportedGrammarComponents,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_stringset  &var_cas_outInclusionsForImplementationFile,
                                GGS_stringset  &var_cas_outInclusionsForHeaderFile,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant) {
  var_cas_outActionMap = GGS_ActionMap::constructor_empty (HERE) ;
  var_cas_outInclusionsForHeaderFile = GGS_stringset::constructor_empty (HERE) ;
  var_cas_outInclusionsForImplementationFile = GGS_stringset::constructor_empty (HERE) ;
  var_cas_outImportedSemanticsComponents = GGS_stringset::constructor_empty (HERE) ;
  var_cas_outIncludedMetamodelComponents = GGS_stringset::constructor_empty (HERE) ;
  var_cas_outImportedOptionComponents = GGS_stringset::constructor_empty (HERE) ;
  var_cas_outImportedGrammarComponents = GGS_stringset::constructor_empty (HERE) ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_empty (HERE) ;
  var_cas_ioOptionsComponentsMapForUse = GGS_M_optionComponents::constructor_empty (HERE) ;
  var_cas_outModelMap = GGS_ModelMap::constructor_empty (HERE) ;
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring::constructor_new (GGS_string (true, "char"), GGS_location (lexique_var_) COMMA_HERE) ;
  GGS_TypeModel  var_cas_t ;
  var_cas_t = GGS_CharModel::constructor_new (HERE) ;
  var_cas_outModelMap.methode_insertKey (lexique_var_, var_cas_key, var_cas_t SOURCE_FILE_AT_LINE (722)) ;
  var_cas_key = GGS_lstring::constructor_new (GGS_string (true, "string"), GGS_location (lexique_var_) COMMA_HERE) ;
  var_cas_t = GGS_StringModel::constructor_new (HERE) ;
  var_cas_outModelMap.methode_insertKey (lexique_var_, var_cas_key, var_cas_t SOURCE_FILE_AT_LINE (725)) ;
  var_cas_key = GGS_lstring::constructor_new (GGS_string (true, "uint"), GGS_location (lexique_var_) COMMA_HERE) ;
  var_cas_t = GGS_UIntModel::constructor_new (HERE) ;
  var_cas_outModelMap.methode_insertKey (lexique_var_, var_cas_key, var_cas_t SOURCE_FILE_AT_LINE (728)) ;
  var_cas_key = GGS_lstring::constructor_new (GGS_string (true, "sint"), GGS_location (lexique_var_) COMMA_HERE) ;
  var_cas_t = GGS_SIntModel::constructor_new (HERE) ;
  var_cas_outModelMap.methode_insertKey (lexique_var_, var_cas_key, var_cas_t SOURCE_FILE_AT_LINE (731)) ;
  var_cas_key = GGS_lstring::constructor_new (GGS_string (true, "bool"), GGS_location (lexique_var_) COMMA_HERE) ;
  var_cas_t = GGS_BoolModel::constructor_new (HERE) ;
  var_cas_outModelMap.methode_insertKey (lexique_var_, var_cas_key, var_cas_t SOURCE_FILE_AT_LINE (734)) ;
  var_cas_key = GGS_lstring::constructor_new (GGS_string (true, "double"), GGS_location (lexique_var_) COMMA_HERE) ;
  var_cas_t = GGS_DoubleModel::constructor_new (HERE) ;
  var_cas_outModelMap.methode_insertKey (lexique_var_, var_cas_key, var_cas_t SOURCE_FILE_AT_LINE (737)) ;
  var_cas_key = GGS_lstring::constructor_new (GGS_string (true, "lchar"), GGS_location (lexique_var_) COMMA_HERE) ;
  var_cas_t = GGS_LCharModel::constructor_new (HERE) ;
  var_cas_outModelMap.methode_insertKey (lexique_var_, var_cas_key, var_cas_t SOURCE_FILE_AT_LINE (740)) ;
  var_cas_key = GGS_lstring::constructor_new (GGS_string (true, "lstring"), GGS_location (lexique_var_) COMMA_HERE) ;
  var_cas_t = GGS_LStringModel::constructor_new (HERE) ;
  var_cas_outModelMap.methode_insertKey (lexique_var_, var_cas_key, var_cas_t SOURCE_FILE_AT_LINE (743)) ;
  var_cas_key = GGS_lstring::constructor_new (GGS_string (true, "luint"), GGS_location (lexique_var_) COMMA_HERE) ;
  var_cas_t = GGS_LUIntModel::constructor_new (HERE) ;
  var_cas_outModelMap.methode_insertKey (lexique_var_, var_cas_key, var_cas_t SOURCE_FILE_AT_LINE (746)) ;
  var_cas_key = GGS_lstring::constructor_new (GGS_string (true, "lsint"), GGS_location (lexique_var_) COMMA_HERE) ;
  var_cas_t = GGS_LSIntModel::constructor_new (HERE) ;
  var_cas_outModelMap.methode_insertKey (lexique_var_, var_cas_key, var_cas_t SOURCE_FILE_AT_LINE (749)) ;
  var_cas_key = GGS_lstring::constructor_new (GGS_string (true, "lbool"), GGS_location (lexique_var_) COMMA_HERE) ;
  var_cas_t = GGS_LBoolModel::constructor_new (HERE) ;
  var_cas_outModelMap.methode_insertKey (lexique_var_, var_cas_key, var_cas_t SOURCE_FILE_AT_LINE (752)) ;
  var_cas_key = GGS_lstring::constructor_new (GGS_string (true, "ldouble"), GGS_location (lexique_var_) COMMA_HERE) ;
  var_cas_t = GGS_LDoubleModel::constructor_new (HERE) ;
  var_cas_outModelMap.methode_insertKey (lexique_var_, var_cas_key, var_cas_t SOURCE_FILE_AT_LINE (755)) ;
  var_cas_key = GGS_lstring::constructor_new (GGS_string (true, "location"), GGS_location (lexique_var_) COMMA_HERE) ;
  var_cas_t = GGS_LocationModel::constructor_new (HERE) ;
  var_cas_outModelMap.methode_insertKey (lexique_var_, var_cas_key, var_cas_t SOURCE_FILE_AT_LINE (758)) ;
  var_cas_key = GGS_lstring::constructor_new (GGS_string (true, "stringset"), GGS_location (lexique_var_) COMMA_HERE) ;
  var_cas_t = GGS_StringsetModel::constructor_new (HERE) ;
  var_cas_outModelMap.methode_insertKey (lexique_var_, var_cas_key, var_cas_t SOURCE_FILE_AT_LINE (761)) ;
  ::routine_enterBuiltinTypes (lexique_var_,  var_cas_ioComponentSemanticsEntitiesMap SOURCE_FILE_AT_LINE (763)) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents ;
  var_cas_alreadyImportedSemanticsComponents = GGS_stringset::constructor_empty (HERE) ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents ;
  var_cas_alreadyImportedMetamodelComponents = GGS_stringset::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_1 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
          switch (select_semantics_parser_2 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
              GGS_lstring  var_cas_optionComponentName ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_optionComponentName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              var_cas_outImportedOptionComponents.addAssign_operation (var_cas_optionComponentName.reader_value ()) ;
              GGS_M_cli_options  var_cas_boolOptionsMap ;
              GGS_M_cli_options  var_cas_uintOptionsMap ;
              GGS_M_cli_options  var_cas_stringOptionsMap ;
              switch (select_semantics_parser_3 (lexique_var_)) {
                case 1 : {
                  var_cas_ioOptionsComponentsMap.methode_searchKey (lexique_var_, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (779)) ;
                  } break ;
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_fileName ;
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_fileName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
                  GGS_M_optionComponents  var_cas_importedOptionComponentsMap ;
                  var_cas_importedOptionComponentsMap = GGS_M_optionComponents::constructor_empty (HERE) ;
                  nt_parse_option_component_for_importing_ (lexique_var_, var_cas_fileName, var_cas_importedOptionComponentsMap) ;
                  var_cas_importedOptionComponentsMap.methode_searchKey (lexique_var_, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (789)) ;
                  } break ;
                default :
                  break ;
              }
              var_cas_ioOptionsComponentsMapForUse.methode_insertKey (lexique_var_, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap SOURCE_FILE_AT_LINE (791)) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
              GGS_lstring  var_cas_grammarComponentName ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_grammarComponentName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              var_cas_outImportedGrammarComponents.addAssign_operation (var_cas_grammarComponentName.reader_value ()) ;
              GGS_M_grammarComponents  var_cas_grammarComponentsMap ;
              switch (select_semantics_parser_4 (lexique_var_)) {
                case 1 : {
                  var_cas_grammarComponentsMap = var_cas_ioGrammarComponentsMap ;
                  } break ;
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_sourceFile ;
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_sourceFile.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
                  var_cas_grammarComponentsMap = GGS_M_grammarComponents::constructor_empty (HERE) ;
                  nt_parse_grammar_component_for_importing_ (lexique_var_, var_cas_sourceFile, var_cas_grammarComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              GGS_M_nonterminalSymbolAltsForGrammar  var_cas_nonterminalSymbolParametersMap ;
              GGS_lstring  var_cas_27889 ;
              GGS_M_optionComponents  var_cas_27892 ;
              var_cas_grammarComponentsMap.methode_searchKey (lexique_var_, var_cas_grammarComponentName, var_cas_nonterminalSymbolParametersMap, var_cas_27889, var_cas_27892 SOURCE_FILE_AT_LINE (813)) ;
              GGS_M_nonterminalSymbolAlts  var_cas_grammarAltMap ;
              var_cas_grammarAltMap = GGS_M_nonterminalSymbolAlts::constructor_empty (HERE) ;
              GGS_M_nonterminalSymbolAltsForGrammar::element_type * operand_27995 = var_cas_nonterminalSymbolParametersMap.firstObject () ;
              while ((operand_27995 != NULL)) {
                macroValidPointer (operand_27995) ;
                GGS_L_EXsignature  var_cas_formalParametersList ;
                var_cas_formalParametersList = GGS_L_EXsignature::constructor_empty (HERE) ;
                GGS_L_signature::element_type * operand_28150 = operand_27995->mInfo.mFormalParametersList.firstObject () ;
                while ((operand_28150 != NULL)) {
                  macroValidPointer (operand_28150) ;
                  GGS_AC_semanticsEntity  var_cas_e ;
                  var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, operand_28150->mGalgasTypeName, var_cas_e SOURCE_FILE_AT_LINE (819)) ;
                  GGS_AC_galgasType  var_cas_type ;
                  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_e.getPtr ()) ;
                    if (ptrExtraire_ == NULL) {
                      var_cas_type.drop_operation () ;
                      if (var_cas_e.getPtr () != NULL) {
                        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
                        C_String message2_ ;
                        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
                        message2_ << var_cas_e (HERE)->message_messageTypeEntite () ;
                        operand_28150->mGalgasTypeName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (821)) ;
                      }
                    }else{
                      macroValidPointer (ptrExtraire_) ;
                      var_cas_type = ptrExtraire_->aDefType ;
                    }
                  }
                  var_cas_formalParametersList.addAssign_operation (var_cas_type, operand_28150->mFormalArgumentPassingMode) ;
                  operand_28150 = operand_28150->nextObject () ;
                }
                var_cas_grammarAltMap.methode_insertKey (lexique_var_, operand_27995->mKey, var_cas_formalParametersList, operand_27995->mInfo.mReturnedEntityTypeName SOURCE_FILE_AT_LINE (824)) ;
                operand_27995 = operand_27995->nextObject () ;
              }
              GGS_AC_semanticsEntity  var_cas_e ;
              var_cas_e = GGS_C_grammarForSemantics::constructor_new (var_cas_grammarAltMap COMMA_HERE) ;
              var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_grammarComponentName, var_cas_e SOURCE_FILE_AT_LINE (827)) ;
              GGS_lstring  var_cas_path ;
              var_cas_path = GGS_lstring::constructor_new (GGS_string (true, ""), GGS_location (lexique_var_) COMMA_HERE) ;
              GGS_lstring  var_cas_extension ;
              var_cas_extension = GGS_lstring::constructor_new (GGS_string (true, "h"), GGS_location (lexique_var_) COMMA_HERE) ;
              GGS_lstring  var_cas_fileNameWithPath ;
              if (var_cas_path.isBuilt () &&
                  var_cas_grammarComponentName.isBuilt () &&
                  var_cas_extension.isBuilt ()) {
                ::routine_buildFileNameWithPath (lexique_var_,  var_cas_fileNameWithPath,  var_cas_path,  var_cas_grammarComponentName,  var_cas_extension SOURCE_FILE_AT_LINE (831)) ;
              }
              var_cas_outInclusionsForImplementationFile.addAssign_operation (var_cas_fileNameWithPath.reader_value ()) ;
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
              GGS_lstring  var_cas_componentName ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_componentName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              switch (select_semantics_parser_5 (lexique_var_)) {
                case 1 : {
                  } break ;
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_sourceFile ;
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_sourceFile.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
                  nt_parse_semantics_component_for_importing_ (lexique_var_, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              if (((! (var_cas_outImportedSemanticsComponents.reader_hasKey (var_cas_componentName.reader_value ())))).isBuiltAndTrue ()) {
                GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
                GGS_M_optionComponents  var_cas_importedOptionsComponentsMap ;
                GGS_ModelMap  var_cas_29749 ;
                GGS_ActionMap  var_cas_29752 ;
                GGS_stringset  var_cas_29755 ;
                GGS_stringset  var_cas_29758 ;
                GGS_stringset  var_cas_29761 ;
                var_cas_ioSemanticsComponentsMap.methode_searchKey (lexique_var_, var_cas_componentName, var_cas_29749, var_cas_29752, var_cas_29755, var_cas_29758, var_cas_29761, var_cas_importedOptionsComponentsMap, var_cas_importedEntities SOURCE_FILE_AT_LINE (852)) ;
                GGS_M_semanticsEntitiesForUse::element_type * operand_29845 = var_cas_importedEntities.firstObject () ;
                while ((operand_29845 != NULL)) {
                  macroValidPointer (operand_29845) ;
                  if (((! (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (operand_29845->mKey.reader_value ())))).isBuiltAndTrue ()) {
                    var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, operand_29845->mKey, operand_29845->mInfo.aDefEntite SOURCE_FILE_AT_LINE (855)) ;
                  }
                  operand_29845 = operand_29845->nextObject () ;
                }
                var_cas_outInclusionsForHeaderFile.addAssign_operation (var_cas_componentName.reader_value ()) ;
                GGS_M_optionComponents::element_type * operand_30290 = var_cas_importedOptionsComponentsMap.firstObject () ;
                while ((operand_30290 != NULL)) {
                  macroValidPointer (operand_30290) ;
                  if (((! (var_cas_ioOptionsComponentsMapForUse.reader_hasKey (operand_30290->mKey.reader_value ())))).isBuiltAndTrue ()) {
                      GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "the '")) + (operand_30290->mKey.reader_value ()))) + (GGS_string (true, "' option component must have been imported"))) SOURCE_FILE_AT_LINE (862)) ;
                  }
                  operand_30290 = operand_30290->nextObject () ;
                }
              }
              ::routine_importSemanticsComponent (lexique_var_,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName SOURCE_FILE_AT_LINE (868)) ;
              var_cas_outInclusionsForHeaderFile.addAssign_operation (var_cas_componentName.reader_value ()) ;
              var_cas_outImportedSemanticsComponents.addAssign_operation (var_cas_componentName.reader_value ()) ;
              } break ;
            case 4 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
              GGS_lstring  var_cas_metamodelComponentName ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_metamodelComponentName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              switch (select_semantics_parser_6 (lexique_var_)) {
                case 1 : {
                  } break ;
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_sourceFile ;
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_sourceFile.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
                  nt_parse_semantics_component_for_importing_ (lexique_var_, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              if (((! (var_cas_outIncludedMetamodelComponents.reader_hasKey (var_cas_metamodelComponentName.reader_value ())))).isBuiltAndTrue ()) {
                GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
                GGS_lstring  var_cas_31666 ;
                GGS_entityToImplementMap  var_cas_31687 ;
                GGS_stringset  var_cas_31690 ;
                var_cas_ioMetamodelComponentMap.methode_searchKey (lexique_var_, var_cas_metamodelComponentName, var_cas_31666, var_cas_importedEntities, var_cas_31687, var_cas_31690 SOURCE_FILE_AT_LINE (897)) ;
                GGS_M_semanticsEntitiesForUse::element_type * operand_31726 = var_cas_importedEntities.firstObject () ;
                while ((operand_31726 != NULL)) {
                  macroValidPointer (operand_31726) ;
                  if (((! (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (operand_31726->mKey.reader_value ())))).isBuiltAndTrue ()) {
                    var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, operand_31726->mKey, operand_31726->mInfo.aDefEntite SOURCE_FILE_AT_LINE (900)) ;
                  }
                  operand_31726 = operand_31726->nextObject () ;
                }
                var_cas_outInclusionsForHeaderFile.addAssign_operation (var_cas_metamodelComponentName.reader_value ()) ;
              }
              var_cas_outInclusionsForHeaderFile.addAssign_operation (var_cas_metamodelComponentName.reader_value ()) ;
              var_cas_outIncludedMetamodelComponents.addAssign_operation (var_cas_metamodelComponentName.reader_value ()) ;
              } break ;
            default :
              break ;
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_690_45_importSemantics (galgas_scanner & lexique_var_,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_stringset  &var_cas_outIncludedSemanticsComponents,
                                GGS_stringset  &var_cas_outIncludedOptionComponents,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  var_cas_outActionMap = GGS_ActionMap::constructor_empty (HERE) ;
  var_cas_outModelMap = GGS_ModelMap::constructor_empty (HERE) ;
  var_cas_outIncludedSemanticsComponents = GGS_stringset::constructor_empty (HERE) ;
  var_cas_outIncludedOptionComponents = GGS_stringset::constructor_empty (HERE) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents ;
  var_cas_alreadyImportedSemanticsComponents = GGS_stringset::constructor_empty (HERE) ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents ;
  var_cas_alreadyImportedMetamodelComponents = GGS_stringset::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_1 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
          switch (select_semantics_parser_2 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
              GGS_lstring  var_cas_optionComponentName ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_optionComponentName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              var_cas_outIncludedOptionComponents.addAssign_operation (var_cas_optionComponentName.reader_value ()) ;
              switch (select_semantics_parser_3 (lexique_var_)) {
                case 1 : {
                  } break ;
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_option_component_for_importing_parse (lexique_var_) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_semantics_parser_4 (lexique_var_)) {
                case 1 : {
                  } break ;
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_grammar_component_for_importing_parse (lexique_var_) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
              GGS_lstring  var_cas_componentName ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_componentName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              var_cas_outIncludedSemanticsComponents.addAssign_operation (var_cas_componentName.reader_value ()) ;
              switch (select_semantics_parser_5 (lexique_var_)) {
                case 1 : {
                  } break ;
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_sourceFile ;
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_sourceFile.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
                  nt_parse_semantics_component_for_importing_ (lexique_var_, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
              GGS_ModelMap  var_cas_34183 ;
              GGS_ActionMap  var_cas_34186 ;
              GGS_stringset  var_cas_34189 ;
              GGS_stringset  var_cas_34192 ;
              GGS_stringset  var_cas_34195 ;
              GGS_M_optionComponents  var_cas_34198 ;
              var_cas_ioSemanticsComponentsMap.methode_searchKey (lexique_var_, var_cas_componentName, var_cas_34183, var_cas_34186, var_cas_34189, var_cas_34192, var_cas_34195, var_cas_34198, var_cas_importedEntities SOURCE_FILE_AT_LINE (971)) ;
              GGS_M_semanticsEntitiesForUse::element_type * operand_34250 = var_cas_importedEntities.firstObject () ;
              while ((operand_34250 != NULL)) {
                macroValidPointer (operand_34250) ;
                if (((! (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (operand_34250->mKey.reader_value ())))).isBuiltAndTrue ()) {
                  var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, operand_34250->mKey, operand_34250->mInfo.aDefEntite SOURCE_FILE_AT_LINE (974)) ;
                }
                operand_34250 = operand_34250->nextObject () ;
              }
              ::routine_importSemanticsComponent (lexique_var_,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName SOURCE_FILE_AT_LINE (979)) ;
              } break ;
            case 4 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
              GGS_lstring  var_cas_metamodelComponentName ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_metamodelComponentName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              switch (select_semantics_parser_6 (lexique_var_)) {
                case 1 : {
                  } break ;
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  GGS_lstring  var_cas_sourceFile ;
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  var_cas_sourceFile.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
                  nt_parse_semantics_component_for_importing_ (lexique_var_, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                  } break ;
                default :
                  break ;
              }
              GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
              GGS_lstring  var_cas_35363 ;
              GGS_entityToImplementMap  var_cas_35384 ;
              GGS_stringset  var_cas_35387 ;
              var_cas_ioMetamodelComponentMap.methode_searchKey (lexique_var_, var_cas_metamodelComponentName, var_cas_35363, var_cas_importedEntities, var_cas_35384, var_cas_35387 SOURCE_FILE_AT_LINE (1004)) ;
              GGS_M_semanticsEntitiesForUse::element_type * operand_35421 = var_cas_importedEntities.firstObject () ;
              while ((operand_35421 != NULL)) {
                macroValidPointer (operand_35421) ;
                if (((! (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (operand_35421->mKey.reader_value ())))).isBuiltAndTrue ()) {
                  var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, operand_35421->mKey, operand_35421->mInfo.aDefEntite SOURCE_FILE_AT_LINE (1007)) ;
                }
                operand_35421 = operand_35421->nextObject () ;
              }
              } break ;
            default :
              break ;
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_690_45_parse (galgas_scanner & lexique_var_) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_1 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
          switch (select_semantics_parser_2 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_option) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_semantics_parser_3 (lexique_var_)) {
                case 1 : {
                  } break ;
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_option_component_for_importing_parse (lexique_var_) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_semantics_parser_4 (lexique_var_)) {
                case 1 : {
                  } break ;
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_grammar_component_for_importing_parse (lexique_var_) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_semantics) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_semantics_parser_5 (lexique_var_)) {
                case 1 : {
                  } break ;
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_semantics_component_for_importing_parse (lexique_var_) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 4 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_semantics_parser_6 (lexique_var_)) {
                case 1 : {
                  } break ;
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                  nt_parse_semantics_component_for_importing_parse (lexique_var_) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1021_29_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
  GGS_lstring  var_cas_routineName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_routineName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_empty (HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_routineName.reader_value ())).isBuiltAndTrue ()) {
    GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_routineName, var_cas_entite SOURCE_FILE_AT_LINE (1051)) ;
    { cPtr_typeEntiteRoutine * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteRoutine *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_listeDeTypesPrecedenteDeclaration.drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteRoutine::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_routineName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (1052)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_listeDeTypesPrecedenteDeclaration = ptrExtraire_->aListeArgumentsFormels ;
      }
    }
    ::routine_verifierCompatibiliteSignatures (lexique_var_,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  GGS_location (lexique_var_) SOURCE_FILE_AT_LINE (1054)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.methode_insertKey (lexique_var_, var_cas_routineName SOURCE_FILE_AT_LINE (1059)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteRoutine::constructor_new (var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_routineName, var_cas_entite SOURCE_FILE_AT_LINE (1061)) ;
  }
  switch (select_semantics_parser_7 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      GGS_typeInstructionsList  var_cas_ioInstructionsList ;
      var_cas_ioInstructionsList = GGS_typeInstructionsList::constructor_empty (HERE) ;
      nt_semantic_instructions_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_tableArgumentsMethode, var_cas_ioInstructionsList) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      GGS_typeEntityToGenerate  var_cas_ea ;
      var_cas_ea = GGS_typeRoutineAengendrer::constructor_new (var_cas_routineName, var_cas_listeTypeEtNomsArguments, var_cas_ioInstructionsList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_ea) ;
      var_cas_tableRoutinesAimplementer.methode_insertKey (lexique_var_, var_cas_routineName SOURCE_FILE_AT_LINE (1086)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1021_29_importSemantics (galgas_scanner & lexique_var_,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
  GGS_lstring  var_cas_routineName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_routineName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_empty (HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_empty (HERE) ;
  nt_formal_arguments_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  var_cas_ioExternActionMap.methode_insertKey (lexique_var_, var_cas_routineName, var_cas_signature, GGS_bool (true, false) SOURCE_FILE_AT_LINE (1114)) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_routineName.reader_value ())).isBuiltAndTrue ()) {
    GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_routineName, var_cas_entite SOURCE_FILE_AT_LINE (1120)) ;
    { cPtr_typeEntiteRoutine * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteRoutine *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_listeDeTypesPrecedenteDeclaration.drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteRoutine::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_routineName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (1121)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_listeDeTypesPrecedenteDeclaration = ptrExtraire_->aListeArgumentsFormels ;
      }
    }
    ::routine_verifierCompatibiliteSignatures (lexique_var_,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  GGS_location (lexique_var_) SOURCE_FILE_AT_LINE (1123)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.methode_insertKey (lexique_var_, var_cas_routineName SOURCE_FILE_AT_LINE (1128)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteRoutine::constructor_new (var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_routineName, var_cas_entite SOURCE_FILE_AT_LINE (1130)) ;
  }
  switch (select_semantics_parser_7 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      GGS_typeInstructionsList  var_cas_ioInstructionsList ;
      var_cas_ioInstructionsList = GGS_typeInstructionsList::constructor_empty (HERE) ;
      GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
      var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_empty (HERE) ;
      nt_semantic_instructions_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_optionsComponentsMapForUse, var_cas_tableArgumentsMethode, var_cas_ioInstructionsList) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      var_cas_tableRoutinesAimplementer.methode_insertKey (lexique_var_, var_cas_routineName SOURCE_FILE_AT_LINE (1151)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1021_29_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_formal_arguments_list_parse (lexique_var_) ;
  switch (select_semantics_parser_7 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      nt_semantic_instructions_list_parse (lexique_var_) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_routine) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1159_20_ (galgas_scanner & /* lexique_var_ */,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_empty (HERE) ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap::constructor_empty (HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes::constructor_empty (HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap::constructor_empty (HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_empty (HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1159_20_importSemantics (galgas_scanner & /* lexique_var_ */,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_empty (HERE) ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap::constructor_empty (HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes::constructor_empty (HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap::constructor_empty (HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_empty (HERE) ;
  var_cas_outMessageMap = GGS_classMessageMap::constructor_empty (HERE) ;
  var_cas_outSuperClasses = GGS_stringset::constructor_empty (HERE) ;
  var_cas_outAttributeList = GGS_typeListModel::constructor_empty (HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1159_20_parse (galgas_scanner & /* lexique_var_ */) {
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1197_20_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
  GGS_lstring  var_cas_superClassName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_superClassName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_AC_galgasType  var_cas_typeUtilisateur ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_superClassName, var_cas_entite SOURCE_FILE_AT_LINE (1212)) ;
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_typeUtilisateur.drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_superClassName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (1213)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_typeUtilisateur = ptrExtraire_->aDefType ;
    }
  }
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_typeUtilisateur.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_tableDesMethodes.drop_operation () ;
      var_cas_listeTousAttributsSemantiques.drop_operation () ;
      var_cas_tableDesClassesAncetres.drop_operation () ;
      var_cas_tableMessagesAbstraits.drop_operation () ;
      var_cas_tableAttributs.drop_operation () ;
      if (var_cas_typeUtilisateur.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_typeUtilisateur (HERE)->message_messageGalgasType () ;
        var_cas_superClassName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (1221)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_tableDesMethodes = ptrExtraire_->mMethodsMap ;
      var_cas_listeTousAttributsSemantiques = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetres = ptrExtraire_->mAncestorClassesMap ;
      var_cas_tableMessagesAbstraits = ptrExtraire_->mMessagesMap ;
      var_cas_tableAttributs = ptrExtraire_->mNonExternAttributesMap ;
    }
  }
  var_cas_tableDesClassesAncetres.methode_insertKey (lexique_var_, var_cas_superClassName SOURCE_FILE_AT_LINE (1223)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1197_20_importSemantics (galgas_scanner & lexique_var_,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
  GGS_lstring  var_cas_superClassName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_superClassName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_AC_galgasType  var_cas_typeUtilisateur ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_superClassName, var_cas_entite SOURCE_FILE_AT_LINE (1243)) ;
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_typeUtilisateur.drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_superClassName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (1244)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_typeUtilisateur = ptrExtraire_->aDefType ;
    }
  }
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_typeUtilisateur.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_tableDesMethodes.drop_operation () ;
      var_cas_listeTousAttributsSemantiques.drop_operation () ;
      var_cas_tableDesClassesAncetres.drop_operation () ;
      var_cas_tableMessagesAbstraits.drop_operation () ;
      var_cas_tableAttributs.drop_operation () ;
      if (var_cas_typeUtilisateur.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_typeUtilisateur (HERE)->message_messageGalgasType () ;
        var_cas_superClassName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (1252)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_tableDesMethodes = ptrExtraire_->mMethodsMap ;
      var_cas_listeTousAttributsSemantiques = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetres = ptrExtraire_->mAncestorClassesMap ;
      var_cas_tableMessagesAbstraits = ptrExtraire_->mMessagesMap ;
      var_cas_tableAttributs = ptrExtraire_->mNonExternAttributesMap ;
    }
  }
  var_cas_tableDesClassesAncetres.methode_insertKey (lexique_var_, var_cas_superClassName SOURCE_FILE_AT_LINE (1254)) ;
  GGS_TypeModel  var_cas_type ;
  var_cas_ioModelMap.methode_searchKey (lexique_var_, var_cas_superClassName, var_cas_type SOURCE_FILE_AT_LINE (1257)) ;
  if (var_cas_type.isBuilt ()) {
    if (dynamic_cast <cPtr_ClassModel *> (var_cas_type.getPtr ()) != NULL) {
      cPtr_ClassModel * operand_46094 = dynamic_cast <cPtr_ClassModel *> (var_cas_type.getPtr ()) ;
      macroValidPointer (operand_46094) ; 
      var_cas_outSuperClasses = operand_46094->mSuperClasses ;
      var_cas_outAttributeList = operand_46094->mAttributeList ;
      var_cas_outMessageMap = operand_46094->mMessageMap ;
    }else{ // Else part
        var_cas_superClassName.reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "the '@")) + (var_cas_superClassName.reader_value ()))) + (GGS_string (true, "' type is not a class"))) SOURCE_FILE_AT_LINE (1265)) ;
    }
  }
  var_cas_outSuperClasses.addAssign_operation (var_cas_superClassName.reader_value ()) ;
  var_cas_outMessageMap = GGS_classMessageMap::constructor_empty (HERE) ;
  var_cas_outSuperClasses = GGS_stringset::constructor_empty (HERE) ;
  var_cas_outAttributeList = GGS_typeListModel::constructor_empty (HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1197_20_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1281_29_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_abstractClassName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_abstractClassName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  switch (select_semantics_parser_8 (lexique_var_)) {
    case 1 : {
      if (((! (((var_cas_tableEnAvant.reader_hasKey (var_cas_abstractClassName.reader_value ())) || (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_abstractClassName.reader_value ())))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType::constructor_new (var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.methode_insertKey (lexique_var_, var_cas_abstractClassName, var_cas_t SOURCE_FILE_AT_LINE (1298)) ;
      }
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      nt_parent_class_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeAttributsExternesCourants ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_empty (HERE) ;
      nt_attributes_definition_list_ (lexique_var_, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_bool var_cas_estAbstraite ;
      var_cas_estAbstraite = GGS_bool (true, true) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
      var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer::constructor_empty (HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
      var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap::constructor_empty (HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
      var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap::constructor_empty (HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes ;
      var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_9 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
              GGS_lstring  var_cas_messageName ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_messageName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              GGS_lstring  var_cas_messageText ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
              var_cas_messageText.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              if (((! (var_cas_inheritedMessageMap.reader_hasKey (var_cas_messageName.reader_value ())))).isBuiltAndTrue ()) {
                var_cas_messageMapForHeirs.methode_insertKey (lexique_var_, var_cas_messageName SOURCE_FILE_AT_LINE (1345)) ;
              }
              var_cas_tableMessagesClasseConcrete.methode_insertKey (lexique_var_, var_cas_messageName, var_cas_messageText SOURCE_FILE_AT_LINE (1347)) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 3 : {
              nt_abstract_method_ (lexique_var_, var_cas_listeAttributsSemantiquesCourants, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_ (lexique_var_, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_ioOptionsComponentsMapForUse) ;
              } break ;
            case 5 : {
              nt_overrided_method_ (lexique_var_, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_ioOptionsComponentsMapForUse) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeClassInheritedMessagesMap::element_type * operand_51091 = var_cas_inheritedMessageMap.firstObject () ;
      while ((operand_51091 != NULL)) {
        macroValidPointer (operand_51091) ;
        if (((! (var_cas_tableMessagesClasseConcrete.reader_hasKey (operand_51091->mKey.reader_value ())))).isBuiltAndTrue ()) {
            GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "the message '")) + (operand_51091->mKey.reader_value ()))) + (GGS_string (true, "' is not defined"))) SOURCE_FILE_AT_LINE (1394)) ;
        }
        operand_51091 = operand_51091->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasClassType::constructor_new (var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_abstractClassName, var_cas_entite SOURCE_FILE_AT_LINE (1407)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_typeDefClasseAbstraiteAimplementer::constructor_new (var_cas_abstractClassName, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_listeAttributsSemantiquesCourants, var_cas_listeAttributsExternesCourants, var_cas_tableDesClassesAncetres, var_cas_tableMessagesClasseConcrete COMMA_HERE) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1281_29_importSemantics (galgas_scanner & lexique_var_,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_abstractClassName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_abstractClassName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  switch (select_semantics_parser_8 (lexique_var_)) {
    case 1 : {
      if (((! (((var_cas_tableEnAvant.reader_hasKey (var_cas_abstractClassName.reader_value ())) || (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_abstractClassName.reader_value ())))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType::constructor_new (var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.methode_insertKey (lexique_var_, var_cas_abstractClassName, var_cas_t SOURCE_FILE_AT_LINE (1438)) ;
      }
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_stringset  var_cas_superClasses ;
      GGS_typeListModel  var_cas_attributeList ;
      GGS_classMessageMap  var_cas_messageMap ;
      nt_parent_class_importSemantics (lexique_var_, var_cas_ioModelMap, var_cas_superClasses, var_cas_attributeList, var_cas_messageMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeAttributsExternesCourants ;
      nt_attributes_definition_list_ (lexique_var_, var_cas_attributeList, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_bool var_cas_estAbstraite ;
      var_cas_estAbstraite = GGS_bool (true, true) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
      var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer::constructor_empty (HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
      var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap::constructor_empty (HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
      var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap::constructor_empty (HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes ;
      var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
      var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_empty (HERE) ;
      GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
      var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_empty (HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_9 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
              GGS_lstring  var_cas_messageName ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_messageName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              GGS_lstring  var_cas_messageText ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
              var_cas_messageText.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              if (((! (var_cas_inheritedMessageMap.reader_hasKey (var_cas_messageName.reader_value ())))).isBuiltAndTrue ()) {
                var_cas_messageMapForHeirs.methode_insertKey (lexique_var_, var_cas_messageName SOURCE_FILE_AT_LINE (1494)) ;
              }
              var_cas_tableMessagesClasseConcrete.methode_insertKey (lexique_var_, var_cas_messageName, var_cas_messageText SOURCE_FILE_AT_LINE (1496)) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 3 : {
              nt_abstract_method_ (lexique_var_, var_cas_listeAttributsSemantiquesCourants, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_ (lexique_var_, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse) ;
              } break ;
            case 5 : {
              nt_overrided_method_ (lexique_var_, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeClassInheritedMessagesMap::element_type * operand_57044 = var_cas_inheritedMessageMap.firstObject () ;
      while ((operand_57044 != NULL)) {
        macroValidPointer (operand_57044) ;
        if (((! (var_cas_tableMessagesClasseConcrete.reader_hasKey (operand_57044->mKey.reader_value ())))).isBuiltAndTrue ()) {
            GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "the message '")) + (operand_57044->mKey.reader_value ()))) + (GGS_string (true, "' is not defined"))) SOURCE_FILE_AT_LINE (1544)) ;
        }
        operand_57044 = operand_57044->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasClassType::constructor_new (var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_abstractClassName, var_cas_entite SOURCE_FILE_AT_LINE (1557)) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ClassModel::constructor_new (GGS_bool (true, true), var_cas_superClasses, var_cas_attributeList, var_cas_messageMap COMMA_HERE) ;
      var_cas_ioModelMap.methode_insertKey (lexique_var_, var_cas_abstractClassName, var_cas_t SOURCE_FILE_AT_LINE (1560)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1281_29_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  switch (select_semantics_parser_8 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      nt_parent_class_parse (lexique_var_) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      nt_attributes_definition_list_parse (lexique_var_) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_9 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 3 : {
              nt_abstract_method_parse (lexique_var_) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_parse (lexique_var_) ;
              } break ;
            case 5 : {
              nt_overrided_method_parse (lexique_var_) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1570_29_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_concreteClassName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_concreteClassName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  if ((var_cas_tableEnAvant.reader_hasKey (var_cas_concreteClassName.reader_value ())).isBuiltAndTrue ()) {
      var_cas_concreteClassName.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "a non abstract class cannot be predeclared") SOURCE_FILE_AT_LINE (1584)) ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
  GGS_lstring  var_cas_superClassName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_superClassName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_AC_galgasType  var_cas_definitionClasseMere ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_superClassName, var_cas_entite SOURCE_FILE_AT_LINE (1594)) ;
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_definitionClasseMere.drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_superClassName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (1595)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_definitionClasseMere = ptrExtraire_->aDefType ;
    }
  }
  GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
  GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
  GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
  GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_definitionClasseMere.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_ancestorClassMethodsMap.drop_operation () ;
      var_cas_listeTousAttributsSemantiques.drop_operation () ;
      var_cas_tableDesClassesAncetres.drop_operation () ;
      var_cas_inheritedMessageMap.drop_operation () ;
      var_cas_tableAttributs.drop_operation () ;
      if (var_cas_definitionClasseMere.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_definitionClasseMere (HERE)->message_messageGalgasType () ;
        var_cas_superClassName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (1608)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_ancestorClassMethodsMap = ptrExtraire_->mMethodsMap ;
      var_cas_listeTousAttributsSemantiques = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetres = ptrExtraire_->mAncestorClassesMap ;
      var_cas_inheritedMessageMap = ptrExtraire_->mMessagesMap ;
      var_cas_tableAttributs = ptrExtraire_->mNonExternAttributesMap ;
    }
  }
  var_cas_tableDesClassesAncetres.methode_insertKey (lexique_var_, var_cas_superClassName SOURCE_FILE_AT_LINE (1609)) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
  GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
  GGS_typeListModel  var_cas_attributeListModel ;
  var_cas_attributeListModel = GGS_typeListModel::constructor_empty (HERE) ;
  nt_attributes_definition_list_ (lexique_var_, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
  GGS_bool var_cas_estAbstraite ;
  var_cas_estAbstraite = GGS_bool (true, false) ;
  GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
  var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer::constructor_empty (HERE) ;
  GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
  var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap::constructor_empty (HERE) ;
  GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
  var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap::constructor_empty (HERE) ;
  GGS_typeTableMethodes  var_cas_tableDesMethodes ;
  var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
  var_cas_tableDesMethodes.prologue_definitionClasseNonAbstraite (lexique_var_ SOURCE_FILE_AT_LINE (1628)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_10 (lexique_var_)) {
        case 2 : {
          nt_overrided_method_ (lexique_var_, var_cas_concreteClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_ioOptionsComponentsMapForUse) ;
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          GGS_lstring  var_cas_messageName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_messageName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_lstring  var_cas_messageText ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_messageText.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          if (((! (var_cas_inheritedMessageMap.reader_hasKey (var_cas_messageName.reader_value ())))).isBuiltAndTrue ()) {
            var_cas_messageMapForHeirs.methode_insertKey (lexique_var_, var_cas_messageName SOURCE_FILE_AT_LINE (1657)) ;
          }
          var_cas_tableMessagesClasseConcrete.methode_insertKey (lexique_var_, var_cas_messageName, var_cas_messageText SOURCE_FILE_AT_LINE (1659)) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 4 : {
          nt_non_abstract_method_ (lexique_var_, var_cas_concreteClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_ioOptionsComponentsMapForUse) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_tableDesMethodes.epilogue_definitionClasseNonAbstraite (lexique_var_ SOURCE_FILE_AT_LINE (1628)) ;
  GGS_typeClassInheritedMessagesMap::element_type * operand_62937 = var_cas_inheritedMessageMap.firstObject () ;
  while ((operand_62937 != NULL)) {
    macroValidPointer (operand_62937) ;
    if (((! (var_cas_tableMessagesClasseConcrete.reader_hasKey (operand_62937->mKey.reader_value ())))).isBuiltAndTrue ()) {
        GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "the message '")) + (operand_62937->mKey.reader_value ()))) + (GGS_string (true, "' is not defined"))) SOURCE_FILE_AT_LINE (1683)) ;
    }
    operand_62937 = operand_62937->nextObject () ;
  }
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasClassType::constructor_new (var_cas_concreteClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite COMMA_HERE) ;
  var_cas_entite = GGS_typeEntiteType::constructor_new (var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_concreteClassName, var_cas_entite SOURCE_FILE_AT_LINE (1696)) ;
  GGS_typeEntityToGenerate  var_cas_def ;
  var_cas_def = GGS_typeDefClasseNonAbstraiteAimplementer::constructor_new (var_cas_concreteClassName, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_tableDesClassesAncetres, var_cas_tableMessagesClasseConcrete COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1570_29_importSemantics (galgas_scanner & lexique_var_,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_concreteClassName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_concreteClassName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  if ((var_cas_tableEnAvant.reader_hasKey (var_cas_concreteClassName.reader_value ())).isBuiltAndTrue ()) {
      var_cas_concreteClassName.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "a non abstract class cannot be predeclared") SOURCE_FILE_AT_LINE (1723)) ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
  GGS_lstring  var_cas_superClassName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_superClassName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_typeListModel  var_cas_attributeList ;
  GGS_classMessageMap  var_cas_messageMap ;
  GGS_stringset  var_cas_superClasses ;
  var_cas_attributeList = GGS_typeListModel::constructor_empty (HERE) ;
  var_cas_messageMap = GGS_classMessageMap::constructor_empty (HERE) ;
  var_cas_superClasses = GGS_stringset::constructor_empty (HERE) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_AC_galgasType  var_cas_definitionClasseMere ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_superClassName, var_cas_entite SOURCE_FILE_AT_LINE (1752)) ;
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_definitionClasseMere.drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_superClassName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (1753)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_definitionClasseMere = ptrExtraire_->aDefType ;
    }
  }
  GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
  GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
  GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
  GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_definitionClasseMere.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_ancestorClassMethodsMap.drop_operation () ;
      var_cas_listeTousAttributsSemantiques.drop_operation () ;
      var_cas_tableDesClassesAncetres.drop_operation () ;
      var_cas_inheritedMessageMap.drop_operation () ;
      var_cas_tableAttributs.drop_operation () ;
      if (var_cas_definitionClasseMere.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_definitionClasseMere (HERE)->message_messageGalgasType () ;
        var_cas_superClassName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (1766)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_ancestorClassMethodsMap = ptrExtraire_->mMethodsMap ;
      var_cas_listeTousAttributsSemantiques = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetres = ptrExtraire_->mAncestorClassesMap ;
      var_cas_inheritedMessageMap = ptrExtraire_->mMessagesMap ;
      var_cas_tableAttributs = ptrExtraire_->mNonExternAttributesMap ;
    }
  }
  var_cas_tableDesClassesAncetres.methode_insertKey (lexique_var_, var_cas_superClassName SOURCE_FILE_AT_LINE (1767)) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
  GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
  GGS_typeListModel  var_cas_attributeListModel ;
  var_cas_attributeListModel = GGS_typeListModel::constructor_empty (HERE) ;
  nt_attributes_definition_list_ (lexique_var_, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
  GGS_bool var_cas_estAbstraite ;
  var_cas_estAbstraite = GGS_bool (true, false) ;
  GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
  var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer::constructor_empty (HERE) ;
  GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
  var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap::constructor_empty (HERE) ;
  GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
  var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap::constructor_empty (HERE) ;
  GGS_typeTableMethodes  var_cas_tableDesMethodes ;
  var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_empty (HERE) ;
  var_cas_tableDesMethodes.prologue_definitionClasseNonAbstraite (lexique_var_ SOURCE_FILE_AT_LINE (1787)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_10 (lexique_var_)) {
        case 2 : {
          GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
          var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_empty (HERE) ;
          nt_overrided_method_ (lexique_var_, var_cas_concreteClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse) ;
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          GGS_lstring  var_cas_messageName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_messageName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_lstring  var_cas_messageText ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_messageText.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          if (((! (var_cas_inheritedMessageMap.reader_hasKey (var_cas_messageName.reader_value ())))).isBuiltAndTrue ()) {
            var_cas_messageMapForHeirs.methode_insertKey (lexique_var_, var_cas_messageName SOURCE_FILE_AT_LINE (1816)) ;
          }
          var_cas_tableMessagesClasseConcrete.methode_insertKey (lexique_var_, var_cas_messageName, var_cas_messageText SOURCE_FILE_AT_LINE (1818)) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 4 : {
          GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
          var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_empty (HERE) ;
          nt_non_abstract_method_ (lexique_var_, var_cas_concreteClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_tableDesMethodes.epilogue_definitionClasseNonAbstraite (lexique_var_ SOURCE_FILE_AT_LINE (1787)) ;
  GGS_typeClassInheritedMessagesMap::element_type * operand_69696 = var_cas_inheritedMessageMap.firstObject () ;
  while ((operand_69696 != NULL)) {
    macroValidPointer (operand_69696) ;
    if (((! (var_cas_tableMessagesClasseConcrete.reader_hasKey (operand_69696->mKey.reader_value ())))).isBuiltAndTrue ()) {
        GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "the message '")) + (operand_69696->mKey.reader_value ()))) + (GGS_string (true, "' is not defined"))) SOURCE_FILE_AT_LINE (1843)) ;
    }
    operand_69696 = operand_69696->nextObject () ;
  }
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasClassType::constructor_new (var_cas_concreteClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite COMMA_HERE) ;
  var_cas_entite = GGS_typeEntiteType::constructor_new (var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_concreteClassName, var_cas_entite SOURCE_FILE_AT_LINE (1856)) ;
  GGS_TypeModel  var_cas_t ;
  var_cas_t = GGS_ClassModel::constructor_new (GGS_bool (true, false), var_cas_superClasses, var_cas_attributeList, var_cas_messageMap COMMA_HERE) ;
  var_cas_ioModelMap.methode_insertKey (lexique_var_, var_cas_concreteClassName, var_cas_t SOURCE_FILE_AT_LINE (1858)) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1570_29_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  nt_attributes_definition_list_parse (lexique_var_) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_10 (lexique_var_)) {
        case 2 : {
          nt_overrided_method_parse (lexique_var_) ;
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 4 : {
          nt_non_abstract_method_parse (lexique_var_) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'abstract_method'             *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_abstract_method_semantics_parser_1866_23_ (galgas_scanner & lexique_var_,
                                GGS_typeListeAttributsSemantiques  &/* var_cas_listeAttributsSemantiquesCourants */,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  GGS_lstring  var_cas_nomMethode ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomMethode.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_empty (HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  var_cas_tableDesMethodes.methode_insertAbstract (lexique_var_, var_cas_nomMethode, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (1890)) ;
  GGS_typeInstructionsList  var_cas_listeInstructions ;
  var_cas_listeInstructions = GGS_typeInstructionsList::constructor_empty (HERE) ;
  var_cas_tableMethodesAimplementer.methode_insertAbstract (lexique_var_, var_cas_nomMethode, var_cas_listeDeTypes, var_cas_listeTypeEtNomsArguments, var_cas_listeInstructions SOURCE_FILE_AT_LINE (1892)) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_abstract_method_semantics_parser_1866_23_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_formal_arguments_list_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parse_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_method_semantics_parser_1898_20_ (galgas_scanner & lexique_var_,
                                const GGS_lstring  &var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  &var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeAttributsSemantiquesCourants,
                                const GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  &var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                const GGS_bool &var_cas_inClassIsAbstract,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outMethodName,
                                GGS_typeInstructionsList  &var_cas_outInstructionsList,
                                GGS_L_EXsignature  &var_cas_outMethodSignature,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_outMethodName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap ;
  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap::constructor_empty (HERE) ;
  GGS_lstring  var_cas_me_Constant ;
  var_cas_me_Constant = GGS_lstring::constructor_new (GGS_string (true, "self"), GGS_location (lexique_var_) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_me_constantCppName ;
  var_cas_me_constantCppName = GGS_typeCppThisName::constructor_new (HERE) ;
  GGS_AC_galgasType  var_cas_typeDefinition ;
  var_cas_typeDefinition = GGS_typeGalgasClassType::constructor_new (var_cas_inCurrentClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.methode_insertUsedConstInArgument (lexique_var_, var_cas_me_Constant, var_cas_typeDefinition, var_cas_me_constantCppName SOURCE_FILE_AT_LINE (1932)) ;
  GGS_lstring  var_cas_super_Constant ;
  var_cas_super_Constant = GGS_lstring::constructor_new (GGS_string (true, "super"), GGS_location (lexique_var_) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_super_constantCppName ;
  var_cas_super_constantCppName = GGS_typeCppInheritedName::constructor_new (HERE) ;
  var_cas_typeDefinition = GGS_typeGalgasClassType::constructor_new (var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.methode_insertUsedConstInArgument (lexique_var_, var_cas_super_Constant, var_cas_typeDefinition, var_cas_super_constantCppName SOURCE_FILE_AT_LINE (1944)) ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_outMethodSignature, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_typeListeAttributsSemantiques::element_type * operand_74499 = var_cas_listeAttributsSemantiquesCourants.firstObject () ;
  while ((operand_74499 != NULL)) {
    macroValidPointer (operand_74499) ;
    GGS_typeCplusPlusName  var_cas_nomCpp ;
    var_cas_nomCpp = GGS_typeDirectName::constructor_new (operand_74499->aNomAttribut COMMA_HERE) ;
    var_cas_methodLocalVariablesMap.methode_insertUsedConstInArgument (lexique_var_, operand_74499->aNomAttribut, operand_74499->mAttributType, var_cas_nomCpp SOURCE_FILE_AT_LINE (1959)) ;
    operand_74499 = operand_74499->nextObject () ;
  }
  var_cas_outInstructionsList = GGS_typeInstructionsList::constructor_empty (HERE) ;
  nt_semantic_instructions_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_outInstructionsList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_method_semantics_parser_1898_20_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_formal_arguments_list_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_semantic_instructions_list_parse (lexique_var_) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'non_abstract_method'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_non_abstract_method_semantics_parser_1974_27_ (galgas_scanner & lexique_var_,
                                const GGS_lstring  &var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  &var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeAttributsSemantiquesCourants,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  &var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                const GGS_bool &var_cas_inClassIsAbstract,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionsList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_method_ (lexique_var_, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_ioOptionsComponentsMapForUse) ;
  var_cas_tableDesMethodes.methode_insertNotAbstract (lexique_var_, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (2014)) ;
  var_cas_tableMethodesAimplementer.methode_insertNotAbstract (lexique_var_, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList SOURCE_FILE_AT_LINE (2015)) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_non_abstract_method_semantics_parser_1974_27_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  nt_parse_method_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'overrided_method'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_overrided_method_semantics_parser_2023_24_ (galgas_scanner & lexique_var_,
                                const GGS_lstring  &var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  &var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                const GGS_typeListeAttributsSemantiques  &var_cas_listeAttributsSemantiquesCourants,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  &var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                const GGS_bool &var_cas_inClassIsAbstract,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_override) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionsList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_method_ (lexique_var_, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_ioOptionsComponentsMapForUse) ;
  GGS_L_EXsignature  var_cas_listeDeTypesMethodeOriginale ;
  var_cas_tableDesMethodes.methode_searchForOverride (lexique_var_, var_cas_methodName, var_cas_listeDeTypesMethodeOriginale SOURCE_FILE_AT_LINE (2066)) ;
  ::routine_verifierCompatibiliteSignatures (lexique_var_,  var_cas_listeDeTypesMethodeOriginale,  var_cas_methodSignature,  GGS_location (lexique_var_) SOURCE_FILE_AT_LINE (2068)) ;
  var_cas_tableMethodesAimplementer.methode_insertNotAbstract (lexique_var_, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList SOURCE_FILE_AT_LINE (2073)) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_overrided_method_semantics_parser_2023_24_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_override) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  nt_parse_method_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'formal_arguments_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_arguments_list_semantics_parser_2084_29_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_EXsignature  &var_cas_listeDeTypes,
                                GGS_typeVariablesMap  &var_cas_tableArgumentsMethode,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_L_signature  &var_cas_outSignatureForGrammar) {
  var_cas_listeDeTypes = GGS_L_EXsignature::constructor_empty (HERE) ;
  var_cas_listeTypeEtNomsArguments = GGS_typeListeTypesEtNomsArgMethode::constructor_empty (HERE) ;
  var_cas_outSignatureForGrammar = GGS_L_signature::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_11 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_3F) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes.addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, true) ;
          switch (select_semantics_parser_12 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
              var_cas_tableArgumentsMethode.methode_insertUnusedConstInArgument (lexique_var_, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (2116)) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
              var_cas_tableArgumentsMethode.methode_insertConstInArgument (lexique_var_, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (2121)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes.addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_nomArgument.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_typeCplusPlusName  var_cas_natureNom ;
          var_cas_natureNom = GGS_typeAutomaticName::constructor_new (var_cas_nomArgument COMMA_HERE) ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, true) ;
          var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
          var_cas_tableArgumentsMethode.methode_insertInArgument (lexique_var_, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (2141)) ;
          } break ;
        case 4 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_21) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentInOut (HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes.addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, false) ;
          GGS_lstring  var_cas_nomArgument ;
          switch (select_semantics_parser_13 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
              var_cas_tableArgumentsMethode.methode_insertUnusedInOutArgument (lexique_var_, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (2162)) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (var_cas_nomArgument COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
              var_cas_tableArgumentsMethode.methode_insertInOutArgument (lexique_var_, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (2167)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes.addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_nomArgument.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_typeCplusPlusName  var_cas_natureNom ;
          var_cas_natureNom = GGS_typeAutomaticName::constructor_new (var_cas_nomArgument COMMA_HERE) ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, false) ;
          var_cas_listeTypeEtNomsArguments.addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
          var_cas_tableArgumentsMethode.methode_insertOutArgument (lexique_var_, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom SOURCE_FILE_AT_LINE (2187)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_arguments_list_semantics_parser_2084_29_importGrammarForSemantics (galgas_scanner & lexique_var_,
                                GGS_L_signature  &var_cas_outSignature) {
  var_cas_outSignature = GGS_L_signature::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_11 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_3F) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (lexique_var_, var_cas_galgasTypeName) ;
          var_cas_outSignature.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_12 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (lexique_var_, var_cas_galgasTypeName) ;
          var_cas_outSignature.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          } break ;
        case 4 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_21) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentInOut (HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (lexique_var_, var_cas_galgasTypeName) ;
          var_cas_outSignature.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_13 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (lexique_var_, var_cas_galgasTypeName) ;
          var_cas_outSignature.addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_arguments_list_semantics_parser_2084_29_parse (galgas_scanner & lexique_var_) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_11 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_3F) ;
          nt_formal_argument_type_parse (lexique_var_) ;
          switch (select_semantics_parser_12 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          nt_formal_argument_type_parse (lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          } break ;
        case 4 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_21) ;
          nt_formal_argument_type_parse (lexique_var_) ;
          switch (select_semantics_parser_13 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_unused) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
          nt_formal_argument_type_parse (lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'type_parsing'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_type_parsing_semantics_parser_2239_20_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_definitionType,
                                GGS_lstring  &var_cas_outTypeName) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_outTypeName, var_cas_entite SOURCE_FILE_AT_LINE (2246)) ;
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_definitionType.drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_outTypeName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (2247)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_definitionType = ptrExtraire_->aDefType ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_type_parsing_semantics_parser_2239_20_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2256_45_ (galgas_scanner & lexique_var_,
                                GGS_lstring  var_cas_inTargetVarName,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3D) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_AC_galgasType  var_cas_targetVarType ;
  GGS_typeCplusPlusName  var_cas_targetVarCppName ;
  var_cas_ioVariablesMap.methode_searchForWriteAccess (lexique_var_, var_cas_inTargetVarName, var_cas_targetVarType, var_cas_targetVarCppName SOURCE_FILE_AT_LINE (2277)) ;
  ::routine_checkAssignmentTypesCompatibility (lexique_var_,  var_cas_targetVarType,  var_cas_sourceType,  GGS_location (lexique_var_) SOURCE_FILE_AT_LINE (2279)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_assignmentInstruction::constructor_new (var_cas_targetVarCppName, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2256_45_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3D) ;
  nt_expression_parse (lexique_var_) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'input_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_input_parameters_list_semantics_parser_2289_29_ (galgas_scanner & lexique_var_,
                                GGS_L_assignedVariables  &var_cas_listeAffectationParametresEffectifs,
                                GGS_typeCplusPlusNameList  &var_cas_outAllVariablesList,
                                GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap) {
  GGS_typeListeCibles  var_cas_listeCibles ;
  var_cas_listeCibles = GGS_typeListeCibles::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_14 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          GGS_typeCible  var_cas_typeEntiteDestination ;
          nt_target_entity_ (lexique_var_, var_cas_typeEntiteDestination, var_cas_ioVariablesMap) ;
          var_cas_listeCibles.addAssign_operation (var_cas_typeEntiteDestination) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_bool var_cas_ellipsis ;
  switch (select_semantics_parser_15 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2E_2E_2E) ;
      var_cas_ellipsis = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_ellipsis = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  if (((var_cas_listeAttributsSemantiques.reader_length ()) < (var_cas_listeCibles.reader_length ())).isBuiltAndTrue ()) {
      GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((((((GGS_string (true, "too much arguments: ")) + (var_cas_listeAttributsSemantiques.reader_length ().reader_string ()))) + (GGS_string (true, " expected, ")))) + (var_cas_listeCibles.reader_length ().reader_string ()))) + (GGS_string (true, " found"))) SOURCE_FILE_AT_LINE (2313)) ;
  }else if (((((var_cas_listeAttributsSemantiques.reader_length ()) > (var_cas_listeCibles.reader_length ())) && ((! (var_cas_ellipsis))))).isBuiltAndTrue ()) {
      GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((((((GGS_string (true, "argument(s) missing: ")) + (var_cas_listeAttributsSemantiques.reader_length ().reader_string ()))) + (GGS_string (true, " expected, ")))) + (var_cas_listeCibles.reader_length ().reader_string ()))) + (GGS_string (true, " found"))) SOURCE_FILE_AT_LINE (2318)) ;
  }else{
    var_cas_listeAffectationParametresEffectifs = GGS_L_assignedVariables::constructor_empty (HERE) ;
    var_cas_outAllVariablesList = GGS_typeCplusPlusNameList::constructor_empty (HERE) ;
    GGS_typeListeAttributsSemantiques::element_type * operand_88595 = var_cas_listeAttributsSemantiques.firstObject () ;
    GGS_typeListeCibles::element_type * operand_88681 = var_cas_listeCibles.firstObject () ;
    while ((operand_88595 != NULL)
        && (operand_88681 != NULL)) {
      macroValidPointer (operand_88595) ;
      macroValidPointer (operand_88681) ;
      GGS_lstring  var_cas_nomAttributSource ;
      var_cas_nomAttributSource = operand_88595->aNomAttribut ;
      if (operand_88681->aCible.isBuilt ()) {
        operand_88681->aCible (HERE)->methode_verifierType (lexique_var_, operand_88595->mAttributType, var_cas_nomAttributSource, var_cas_listeAffectationParametresEffectifs, var_cas_outAllVariablesList) ;
      }
      operand_88595 = operand_88595->nextObject () ;
      operand_88681 = operand_88681->nextObject () ;
    }
  }
  GGS_typeCplusPlusName  var_cas_nullName ;
  var_cas_nullName = GGS_typeNullName::constructor_new (HERE) ;
  if (var_cas_outAllVariablesList.isBuilt () &&
      var_cas_listeCibles.reader_length ().isBuilt () &&
      var_cas_listeAttributsSemantiques.reader_length ().isBuilt () &&
      var_cas_nullName.isBuilt ()) {
    ::routine_appendJokersIfNeeded (lexique_var_,  var_cas_outAllVariablesList,  var_cas_listeCibles.reader_length (),  var_cas_listeAttributsSemantiques.reader_length (),  var_cas_nullName SOURCE_FILE_AT_LINE (2331)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_input_parameters_list_semantics_parser_2289_29_parse (galgas_scanner & lexique_var_) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_14 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          nt_target_entity_parse (lexique_var_) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_15 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2E_2E_2E) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'target_entity'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_target_entity_semantics_parser_2340_21_ (galgas_scanner & lexique_var_,
                                GGS_typeCible  &var_cas_typeEntiteDestination,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap) {
  GGS_lstring  var_cas_nomVariableDest ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomVariableDest.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_AC_galgasType  var_cas_typeVarDest ;
  GGS_typeCplusPlusName  var_cas_nomCppDest ;
  var_cas_ioVariablesMap.methode_searchForWriteAccess (lexique_var_, var_cas_nomVariableDest, var_cas_typeVarDest, var_cas_nomCppDest SOURCE_FILE_AT_LINE (2348)) ;
  var_cas_typeEntiteDestination = GGS_typeEntiteDest::constructor_new (var_cas_typeVarDest, var_cas_nomCppDest, GGS_location (lexique_var_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_target_entity_semantics_parser_2340_21_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'target_entity'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_target_entity_semantics_parser_2354_21_ (galgas_scanner & lexique_var_,
                                GGS_typeCible  &var_cas_typeEntiteDestination,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
  var_cas_typeEntiteDestination = GGS_typeJoker::constructor_new (HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_target_entity_semantics_parser_2354_21_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2370_45_ (galgas_scanner & lexique_var_,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_3D) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.methode_searchForReadWriteAccess (lexique_var_, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource SOURCE_FILE_AT_LINE (2381)) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  GGS_bool var_cas_accept_uint_assignment ;
  if (var_cas_targetVariableType.isBuilt ()) {
    var_cas_targetVariableType (HERE)->methode_handleAddAssignOperatorCall (lexique_var_, GGS_location (lexique_var_), var_cas_formalParametersList, var_cas_accept_uint_assignment) ;
  }
  GGS_typeTypesList  var_cas_typeList ;
  var_cas_typeList = GGS_typeTypesList::constructor_empty (HERE) ;
  GGS_typeExpressionList  var_cas_expressionList ;
  var_cas_expressionList = GGS_typeExpressionList::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList.addAssign_operation (var_cas_resultType, GGS_location (lexique_var_)) ;
        var_cas_expressionList.addAssign_operation (var_cas_expression) ;
      switch (select_repeat_semantics_parser_16 (lexique_var_)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (((var_cas_formalParametersList.reader_length ()) != (var_cas_typeList.reader_length ())).isBuiltAndTrue ()) {
      GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((((var_cas_typeList.reader_length ().reader_string ()) + (GGS_string (true, " argument(s), while ")))) + (var_cas_formalParametersList.reader_length ().reader_string ()))) + (GGS_string (true, " are needed"))) SOURCE_FILE_AT_LINE (2406)) ;
  }else{
    GGS_typeListeAttributsSemantiques::element_type * operand_91941 = var_cas_formalParametersList.firstObject () ;
    GGS_typeTypesList::element_type * operand_92015 = var_cas_typeList.firstObject () ;
    while ((operand_91941 != NULL)
        && (operand_92015 != NULL)) {
      macroValidPointer (operand_91941) ;
      macroValidPointer (operand_92015) ;
      ::routine_verifierCompatibiliteTypesSemantiques (lexique_var_,  operand_91941->mAttributType,  operand_92015->mType,  operand_92015->mEndOfExpressionLocation SOURCE_FILE_AT_LINE (2410)) ;
      operand_91941 = operand_91941->nextObject () ;
      operand_92015 = operand_92015->nextObject () ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  switch (select_semantics_parser_17 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
      GGS_lstring  var_cas_uint_assigned_var ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_uint_assigned_var.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
      if (((! (var_cas_accept_uint_assignment))).isBuiltAndTrue ()) {
          var_cas_nomVarDest.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "The type of target object does not accept '\?' parameter") SOURCE_FILE_AT_LINE (2419)) ;
      }
      GGS_AC_galgasType  var_cas_targetVariableType ;
      GGS_typeCplusPlusName  var_cas_uint_assigned_cppVarName ;
      var_cas_ioVariablesMap.methode_searchForWriteAccess (lexique_var_, var_cas_uint_assigned_var, var_cas_targetVariableType, var_cas_uint_assigned_cppVarName SOURCE_FILE_AT_LINE (2423)) ;
      { cPtr_typeGalgas_uint * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_uint *> (var_cas_targetVariableType.getPtr ()) ;
        if (ptrExtraire_ == NULL) {
          if (var_cas_targetVariableType.getPtr () != NULL) {
            TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
            C_String message2_ ;
            message1_ (0 COMMA_HERE) << cPtr_typeGalgas_uint::static_string_message_messageGalgasType () ;
            message2_ << var_cas_targetVariableType (HERE)->message_messageGalgasType () ;
            var_cas_uint_assigned_var.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (2424)) ;
          }
        }else{
          macroValidPointer (ptrExtraire_) ;
        }
      }
      var_cas_instruction = GGS_typeAppendInstructionWithAssignment::constructor_new (var_cas_nomCppVariableSource, var_cas_expressionList, var_cas_uint_assigned_cppVarName COMMA_HERE) ;
      } break ;
    case 2 : {
      var_cas_instruction = GGS_typeAppendInstruction::constructor_new (var_cas_nomCppVariableSource, var_cas_expressionList COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2370_45_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_3D) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
        nt_expression_parse (lexique_var_) ;
      switch (select_repeat_semantics_parser_16 (lexique_var_)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_17 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2440_45_ (galgas_scanner & lexique_var_,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_2B) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.methode_searchForReadWriteAccess (lexique_var_, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource SOURCE_FILE_AT_LINE (2451)) ;
  if (var_cas_targetVariableType.isBuilt ()) {
    var_cas_targetVariableType (HERE)->methode_handleIncrementOperatorCall (lexique_var_, GGS_location (lexique_var_)) ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeIncrementInstruction::constructor_new (var_cas_nomCppVariableSource COMMA_HERE) ;
  var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2440_45_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_2B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'actual_parameters_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_actual_parameters_list_semantics_parser_2463_30_ (galgas_scanner & lexique_var_,
                                const GGS_L_EXsignature  &var_cas_listeTypesParametresFormels,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (lexique_var_, var_cas_listeTypesParametresEffectifs, var_cas_outExpressionList, var_cas_ioVariablesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  ::routine_verifierCompatibiliteArgEffectifsSignature (lexique_var_,  var_cas_listeTypesParametresFormels,  var_cas_listeTypesParametresEffectifs,  GGS_location (lexique_var_),  var_cas_ioInstructionsList,  var_cas_outExpressionList SOURCE_FILE_AT_LINE (2481)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_actual_parameters_list_semantics_parser_2463_30_parse (galgas_scanner & lexique_var_) {
  nt_parse_parameters_list_parse (lexique_var_) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'parse_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_parameters_list_semantics_parser_2494_29_ (galgas_scanner & lexique_var_,
                                GGS_L_actualParametersSignature  &var_cas_listeTypesParametresEffectifs,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_outExpressionList = GGS_typeExpressionList::constructor_empty (HERE) ;
  var_cas_listeTypesParametresEffectifs = GGS_L_actualParametersSignature::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_18 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
          GGS_AC_galgasType  var_cas_expressionType ;
          GGS_typeExpression  var_cas_expressionValue ;
          nt_expression_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_expressionValue, var_cas_expressionType) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterOut (HERE) ;
          var_cas_listeTypesParametresEffectifs.addAssign_operation (var_cas_expressionType, var_cas_parameterPassingMode) ;
          var_cas_outExpressionList.addAssign_operation (var_cas_expressionValue) ;
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterIn (HERE) ;
          switch (select_semantics_parser_19 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
              GGS_AC_galgasType  var_cas_typeArgument ;
              var_cas_typeArgument = GGS_typeGalgas_jokerInParameterList::constructor_new (HERE) ;
              var_cas_listeTypesParametresEffectifs.addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
              GGS_typeExpression  var_cas_e ;
              var_cas_e = GGS_typeJokerInExpression::constructor_new (GGS_location (lexique_var_) COMMA_HERE) ;
              var_cas_outExpressionList.addAssign_operation (var_cas_e) ;
              } break ;
            case 2 : {
              GGS_AC_galgasType  var_cas_typeArgument ;
              GGS_typeCplusPlusName  var_cas_nomCppArgument ;
              GGS_lstring  var_cas_nomArgument ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomArgument.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              var_cas_ioVariablesMap.methode_searchForWriteAccess (lexique_var_, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument SOURCE_FILE_AT_LINE (2531)) ;
              var_cas_listeTypesParametresEffectifs.addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
              GGS_typeExpression  var_cas_e ;
              var_cas_e = GGS_typeVarInExpression::constructor_new (var_cas_nomCppArgument COMMA_HERE) ;
              var_cas_outExpressionList.addAssign_operation (var_cas_e) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__21_3F) ;
          GGS_AC_galgasType  var_cas_typeArgument ;
          GGS_typeCplusPlusName  var_cas_nomCppArgument ;
          GGS_lstring  var_cas_nomArgument ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_nomArgument.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          var_cas_ioVariablesMap.methode_searchForReadWriteAccess (lexique_var_, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument SOURCE_FILE_AT_LINE (2542)) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterOutIn (HERE) ;
          var_cas_listeTypesParametresEffectifs.addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
          GGS_typeExpression  var_cas_e ;
          var_cas_e = GGS_typeVarInExpression::constructor_new (var_cas_nomCppArgument COMMA_HERE) ;
          var_cas_outExpressionList.addAssign_operation (var_cas_e) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_parameters_list_semantics_parser_2494_29_parse (galgas_scanner & lexique_var_) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_18 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__21) ;
          nt_expression_parse (lexique_var_) ;
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
          switch (select_semantics_parser_19 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__21_3F) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'semantic_instructions_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instructions_list_semantics_parser_2554_34_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  var_cas_ioVariablesMap.prologue_verifyVariableUsing (lexique_var_ SOURCE_FILE_AT_LINE (2561)) ;
  nt_semantic_instructions_list_no_verif_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionsList) ;
  var_cas_ioVariablesMap.epilogue_verifyVariableUsing (lexique_var_, GGS_location (lexique_var_) SOURCE_FILE_AT_LINE (2561)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_semantics_parser_2554_34_parse (galgas_scanner & lexique_var_) {
  nt_semantic_instructions_list_no_verif_parse (lexique_var_) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2578_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extract) ;
  GGS_AC_galgasType  var_cas_typeVarSource ;
  GGS_typeCplusPlusName  var_cas_sourceVarCppName ;
  GGS_lstring  var_cas_nomVarSource ;
  nt_read_access_ (lexique_var_, var_cas_nomVarSource, var_cas_sourceVarCppName, var_cas_typeVarSource, var_cas_ioVariablesMap) ;
  GGS_lstring  var_cas_nomTypeSource ;
  GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits ;
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_typeVarSource.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_nomTypeSource.drop_operation () ;
      var_cas_tableMessagesAbstraits.drop_operation () ;
      if (var_cas_typeVarSource.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_typeVarSource (HERE)->message_messageGalgasType () ;
        var_cas_nomVarSource.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (2596)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_nomTypeSource = ptrExtraire_->mClassTypeName ;
      var_cas_tableMessagesAbstraits = ptrExtraire_->mMessagesMap ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  nt_extract_instruction_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceVarCppName, var_cas_nomTypeSource, var_cas_tableMessagesAbstraits, var_cas_instruction) ;
  var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2578_28_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extract) ;
  nt_read_access_parse (lexique_var_) ;
  nt_extract_instruction_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_extract_instruction_semantics_parser_2617_27_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits,
                                GGS_typeInstruction  &var_cas_outInstruction) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
  GGS_lstring  var_cas_nomClasse ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_nomClasse.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_AC_galgasType  var_cas_leType ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_nomClasse, var_cas_entite SOURCE_FILE_AT_LINE (2634)) ;
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_leType.drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_nomClasse.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (2635)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_leType = ptrExtraire_->aDefType ;
    }
  }
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_leType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_listeAttributsSemantiques.drop_operation () ;
      var_cas_tableDesClassesAncetres.drop_operation () ;
      if (var_cas_leType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_leType (HERE)->message_messageGalgasType () ;
        var_cas_nomClasse.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (2646)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_listeAttributsSemantiques = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetres = ptrExtraire_->mAncestorClassesMap ;
    }
  }
  if (((! (var_cas_tableDesClassesAncetres.reader_hasKey (var_cas_nomTypeSource.reader_value ())))).isBuiltAndTrue ()) {
      var_cas_nomClasse.reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "This class does not inherit from '@")) + (var_cas_nomTypeSource.reader_value ()))) + (GGS_string (true, "'"))) SOURCE_FILE_AT_LINE (2649)) ;
  }
  GGS_L_assignedVariables  var_cas_listeAffectationParametresEffectifs ;
  GGS_typeCplusPlusNameList  var_cas_allVariablesList ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
  nt_input_parameters_list_ (lexique_var_, var_cas_listeAffectationParametresEffectifs, var_cas_allVariablesList, var_cas_listeAttributsSemantiques, var_cas_ioVariablesMap) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  if (var_cas_errorExpressionType.isBuilt ()) {
    var_cas_errorExpressionType (HERE)->methode_checkAbilityToBeSilentlyConvertedToLocation (lexique_var_) ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_lstring  var_cas_messageName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_messageName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  var_cas_tableMessagesAbstraits.methode_searchKey (lexique_var_, var_cas_messageName SOURCE_FILE_AT_LINE (2678)) ;
  var_cas_outInstruction = GGS_typeSimpleExtractInstruction::constructor_new (var_cas_inSourceVarCppName, var_cas_nomClasse, var_cas_listeAffectationParametresEffectifs, var_cas_errorExpression, var_cas_messageName COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_2617_27_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
  nt_input_parameters_list_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  nt_expression_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_extract_instruction_semantics_parser_2691_27_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  /* var_cas_tableMessagesAbstraits */,
                                GGS_typeInstruction  &var_cas_outInstruction) {
  GGS_typeStructuredExtractCasesList  var_cas_casesList ;
  var_cas_casesList = GGS_typeStructuredExtractCasesList::constructor_empty (HERE) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
  var_cas_ioVariablesMap.prologue_testBloc (lexique_var_ SOURCE_FILE_AT_LINE (2704)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_ioVariablesMap.prologue_testPart (lexique_var_ SOURCE_FILE_AT_LINE (2706)) ;
        GGS_location  var_cas_indicatif1 ;
        var_cas_indicatif1 = GGS_location (lexique_var_) ;
        GGS_lstring  var_cas_nomType1 ;
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
        var_cas_nomType1.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
        GGS_AC_galgasType  var_cas_definitionClasse1 ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_nomType1, var_cas_entite SOURCE_FILE_AT_LINE (2714)) ;
        { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
          if (ptrExtraire_ == NULL) {
            var_cas_definitionClasse1.drop_operation () ;
            if (var_cas_entite.getPtr () != NULL) {
              TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
              C_String message2_ ;
              message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
              message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
              var_cas_nomType1.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (2715)) ;
            }
          }else{
            macroValidPointer (ptrExtraire_) ;
            var_cas_definitionClasse1 = ptrExtraire_->aDefType ;
          }
        }
        GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 ;
        GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 ;
        { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_definitionClasse1.getPtr ()) ;
          if (ptrExtraire_ == NULL) {
            var_cas_listeAttributs1.drop_operation () ;
            var_cas_tableDesClassesAncetresType1.drop_operation () ;
            if (var_cas_definitionClasse1.getPtr () != NULL) {
              TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
              C_String message2_ ;
              message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
              message2_ << var_cas_definitionClasse1 (HERE)->message_messageGalgasType () ;
              var_cas_nomType1.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (2727)) ;
            }
          }else{
            macroValidPointer (ptrExtraire_) ;
            var_cas_listeAttributs1 = ptrExtraire_->mNonExternAttributesList ;
            var_cas_tableDesClassesAncetresType1 = ptrExtraire_->mAncestorClassesMap ;
          }
        }
        if (((! (var_cas_tableDesClassesAncetresType1.reader_hasKey (var_cas_nomTypeSource.reader_value ())))).isBuiltAndTrue ()) {
            var_cas_nomType1.reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "This class does not inherit from '@")) + (var_cas_nomTypeSource.reader_value ()))) + (GGS_string (true, "'"))) SOURCE_FILE_AT_LINE (2730)) ;
        }
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
        GGS_L_nameWithType  var_cas_elementsList ;
        var_cas_elementsList = GGS_L_nameWithType::constructor_empty (HERE) ;
        GGS_bool var_cas_noUsedParameter ;
        var_cas_noUsedParameter = GGS_bool (true, true) ;
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
            switch (select_repeat_semantics_parser_21 (lexique_var_)) {
              case 2 : {
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_3F) ;
                GGS_lstring  var_cas_typeName ;
                GGS_lstring  var_cas_constantName ;
                switch (select_semantics_parser_22 (lexique_var_)) {
                  case 1 : {
                    var_cas_noUsedParameter = GGS_bool (true, false) ;
                    lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
                    var_cas_typeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
                    lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                    var_cas_constantName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
                    } break ;
                  case 2 : {
                    lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
                    var_cas_typeName = GGS_lstring::constructor_new (GGS_string (true, ""), GGS_location (lexique_var_) COMMA_HERE) ;
                    var_cas_constantName = GGS_lstring::constructor_new (GGS_string (true, ""), GGS_location (lexique_var_) COMMA_HERE) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_elementsList.addAssign_operation (var_cas_typeName, var_cas_constantName) ;
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        GGS_bool var_cas_ellipsisFound ;
        switch (select_semantics_parser_23 (lexique_var_)) {
          case 1 : {
            var_cas_ellipsisFound = GGS_bool (true, false) ;
            } break ;
          case 2 : {
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2E_2E_2E) ;
            var_cas_ellipsisFound = GGS_bool (true, true) ;
            } break ;
          default :
            break ;
        }
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
        ::routine_buildMapWithLocalConstants (lexique_var_,  var_cas_elementsList,  var_cas_listeAttributs1,  var_cas_ioVariablesMap,  var_cas_indicatif1,  GGS_localConstantBuildStyleEnum::constructor_listStyle (HERE),  var_cas_ellipsisFound SOURCE_FILE_AT_LINE (2762)) ;
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
        GGS_typeInstructionsList  var_cas_instructionsList ;
        var_cas_instructionsList = GGS_typeInstructionsList::constructor_empty (HERE) ;
        nt_semantic_instructions_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList) ;
        var_cas_casesList.addAssign_operation (var_cas_nomType1, var_cas_indicatif1, var_cas_instructionsList, var_cas_noUsedParameter) ;
        var_cas_ioVariablesMap.epilogue_testPart (lexique_var_, GGS_location (lexique_var_) SOURCE_FILE_AT_LINE (2706)) ;
      switch (select_repeat_semantics_parser_20 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (lexique_var_ SOURCE_FILE_AT_LINE (2785)) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
  GGS_typeInstructionsList  var_cas_elseInstructionList ;
  var_cas_elseInstructionList = GGS_typeInstructionsList::constructor_empty (HERE) ;
  nt_semantic_instructions_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseInstructionList) ;
  var_cas_outInstruction = GGS_typeStructuredExtractInstructionWithElse::constructor_new (var_cas_inSourceVarCppName, var_cas_casesList, var_cas_elseInstructionList COMMA_HERE) ;
  var_cas_ioVariablesMap.epilogue_testPart (lexique_var_, GGS_location (lexique_var_) SOURCE_FILE_AT_LINE (2785)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (lexique_var_ SOURCE_FILE_AT_LINE (2704)) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extract) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_2691_27_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
            switch (select_repeat_semantics_parser_21 (lexique_var_)) {
              case 2 : {
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F_3F) ;
                switch (select_semantics_parser_22 (lexique_var_)) {
                  case 1 : {
                    lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
                    lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                    } break ;
                  case 2 : {
                    lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
                    } break ;
                  default :
                    break ;
                }
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        switch (select_semantics_parser_23 (lexique_var_)) {
          case 1 : {
            } break ;
          case 2 : {
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2E_2E_2E) ;
            } break ;
          default :
            break ;
        }
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
        nt_semantic_instructions_list_parse (lexique_var_) ;
      switch (select_repeat_semantics_parser_20 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
  nt_semantic_instructions_list_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extract) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2810_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  GGS_AC_galgasType  var_cas_definitionType ;
  GGS_lstring  var_cas_typeName ;
  nt_type_parsing_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
  if (var_cas_definitionType.isBuilt ()) {
    var_cas_definitionType (HERE)->methode_typeCanBeUsedInObjectDeclaration (lexique_var_) ;
  }
  GGS_lstring  var_cas_nomVariable ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomVariable.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_typeCplusPlusName  var_cas_nomCppVariable ;
  var_cas_nomCppVariable = GGS_typeAutomaticName::constructor_new (var_cas_nomVariable COMMA_HERE) ;
  var_cas_ioVariablesMap.methode_insertLocalVariable (lexique_var_, var_cas_nomVariable, var_cas_definitionType, var_cas_nomCppVariable SOURCE_FILE_AT_LINE (2827)) ;
  nt_optional_assignment_ (lexique_var_, var_cas_typeName, var_cas_nomVariable, var_cas_nomCppVariable, var_cas_definitionType, var_cas_ioVariablesMap, var_cas_ioInstructionsList, var_cas_ioOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2810_28_parse (galgas_scanner & lexique_var_) {
  nt_type_parsing_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_optional_assignment_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2848_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_drop) ;
  nt_drop_instruction_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioVariablesMap, var_cas_ioInstructionsList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2848_28_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_drop) ;
  nt_drop_instruction_parse (lexique_var_) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'drop_instruction'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_drop_instruction_semantics_parser_2866_24_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_nom ;
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        var_cas_nom.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
        GGS_typeCplusPlusName  var_cas_nomCppVar ;
        GGS_AC_galgasType  var_cas_110150 ;
        var_cas_ioVariablesMap.methode_searchForDestructiveReadAccess (lexique_var_, var_cas_nom, var_cas_110150, var_cas_nomCppVar SOURCE_FILE_AT_LINE (2876)) ;
        GGS_typeInstruction  var_cas_instruction ;
        var_cas_instruction = GGS_typeDropInstruction::constructor_new (var_cas_nomCppVar COMMA_HERE) ;
        var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
      switch (select_repeat_semantics_parser_24 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_drop_instruction_semantics_parser_2866_24_parse (galgas_scanner & lexique_var_) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      switch (select_repeat_semantics_parser_24 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2893_45_ (galgas_scanner & lexique_var_,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  GGS_L_EXsignature  var_cas_signatureRoutine ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_nomVarDest, var_cas_entite SOURCE_FILE_AT_LINE (2903)) ;
  { cPtr_typeEntiteRoutine * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteRoutine *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_signatureRoutine.drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteRoutine::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_nomVarDest.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (2904)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_signatureRoutine = ptrExtraire_->aListeArgumentsFormels ;
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_parameters_list_ (lexique_var_, var_cas_signatureRoutine, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionsList) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeRoutineCallInstruction::constructor_new (var_cas_nomVarDest, var_cas_expressionsList COMMA_HERE) ;
  var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2893_45_parse (galgas_scanner & lexique_var_) {
  nt_actual_parameters_list_parse (lexique_var_) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2928_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_action) ;
  GGS_lstring  var_cas_nomAction ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomAction.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_nomAction, var_cas_entite SOURCE_FILE_AT_LINE (2941)) ;
  GGS_L_EXsignature  var_cas_listeTypesParametresFormels ;
  { cPtr_typeEntiteActionExterne * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteActionExterne *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_listeTypesParametresFormels.drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteActionExterne::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_nomAction.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (2943)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_listeTypesParametresFormels = ptrExtraire_->aSignature ;
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_parameters_list_ (lexique_var_, var_cas_listeTypesParametresFormels, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionsList) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeInstructionAppelActionExterne::constructor_new (var_cas_nomAction, var_cas_expressionsList, var_cas_listeTypesParametresFormels COMMA_HERE) ;
  var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2928_28_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_action) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_actual_parameters_list_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2974_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
  GGS_typeInstruction  var_cas_instruction ;
  switch (select_semantics_parser_25 (lexique_var_)) {
    case 1 : {
      GGS_lstring  var_cas_variableName ;
      GGS_AC_galgasType  var_cas_variableType ;
      GGS_typeCplusPlusName  var_cas_cppVariableName ;
      nt_read_access_ (lexique_var_, var_cas_variableName, var_cas_cppVariableName, var_cas_variableType, var_cas_ioVariablesMap) ;
      GGS_lstring  var_cas_methodName ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_methodName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      if (var_cas_variableType.isBuilt ()) {
        var_cas_variableType (HERE)->methode_handleReaderInstructionCall (lexique_var_, var_cas_methodName, var_cas_methodSignature) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (lexique_var_, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionsList) ;
      var_cas_instruction = GGS_typeReaderCallInstruction::constructor_new (var_cas_cppVariableName, var_cas_methodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__21_3F) ;
      GGS_lstring  var_cas_variableName ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_variableName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
      GGS_AC_galgasType  var_cas_variableType ;
      GGS_typeCplusPlusName  var_cas_cppVariableName ;
      var_cas_ioVariablesMap.methode_searchForReadWriteAccess (lexique_var_, var_cas_variableName, var_cas_variableType, var_cas_cppVariableName SOURCE_FILE_AT_LINE (3011)) ;
      GGS_lstring  var_cas_methodName ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_methodName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      if (var_cas_variableType.isBuilt ()) {
        var_cas_variableType (HERE)->methode_handleModifierCall (lexique_var_, var_cas_methodName, var_cas_methodSignature) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (lexique_var_, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionsList) ;
      var_cas_instruction = GGS_typeModifierCallInstruction::constructor_new (var_cas_cppVariableName, var_cas_methodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2974_28_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
  switch (select_semantics_parser_25 (lexique_var_)) {
    case 1 : {
      nt_read_access_parse (lexique_var_) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      nt_actual_parameters_list_parse (lexique_var_) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__21_3F) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      nt_actual_parameters_list_parse (lexique_var_) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3042_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  GGS_lstring  var_cas_nomVarDest ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomVarDest.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  nt_instruction_beginning_with_identifier_ (lexique_var_, var_cas_nomVarDest, var_cas_ioVariablesMap, var_cas_ioInstructionsList, var_cas_ioOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3042_28_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_instruction_beginning_with_identifier_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3067_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_warning) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  if (var_cas_errorExpressionType.isBuilt ()) {
    var_cas_errorExpressionType (HERE)->methode_checkAbilityToBeSilentlyConvertedToLocation (lexique_var_) ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_typeExpression  var_cas_warningMessageExpression ;
  GGS_AC_galgasType  var_cas_warningMessageExpressionType ;
  nt_expression_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_warningMessageExpression, var_cas_warningMessageExpressionType) ;
  { cPtr_typeGalgas_string * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_string *> (var_cas_warningMessageExpressionType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_warningMessageExpressionType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_string::static_string_message_messageGalgasType () ;
        message2_ << var_cas_warningMessageExpressionType (HERE)->message_messageGalgasType () ;
        GGS_location (lexique_var_).signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (3098)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeWarningInstruction::constructor_new (var_cas_errorExpression, var_cas_warningMessageExpression, GGS_location (lexique_var_) COMMA_HERE) ;
  var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3067_28_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_warning) ;
  nt_expression_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_expression_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3112_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  GGS_typeExpression  var_cas_errorLocationExpression ;
  GGS_AC_galgasType  var_cas_errorLocationExpressionType ;
  nt_expression_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorLocationExpression, var_cas_errorLocationExpressionType) ;
  if (var_cas_errorLocationExpressionType.isBuilt ()) {
    var_cas_errorLocationExpressionType (HERE)->methode_checkAbilityToBeSilentlyConvertedToLocation (lexique_var_) ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_typeExpression  var_cas_errorMessageExpression ;
  GGS_AC_galgasType  var_cas_errorMessageExpressionType ;
  nt_expression_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_errorMessageExpression, var_cas_errorMessageExpressionType) ;
  { cPtr_typeGalgas_string * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_string *> (var_cas_errorMessageExpressionType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_errorMessageExpressionType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_string::static_string_message_messageGalgasType () ;
        message2_ << var_cas_errorMessageExpressionType (HERE)->message_messageGalgasType () ;
        GGS_location (lexique_var_).signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (3143)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeErrorInstruction::constructor_new (var_cas_errorLocationExpression, var_cas_errorMessageExpression, GGS_location (lexique_var_) COMMA_HERE) ;
  var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
  switch (select_semantics_parser_26 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_nomVariable ;
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_nomVariable.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
            GGS_AC_galgasType  var_cas_121167 ;
            GGS_typeCplusPlusName  var_cas_121170 ;
            var_cas_ioVariablesMap.methode_searchForWriteAccess (lexique_var_, var_cas_nomVariable, var_cas_121167, var_cas_121170 SOURCE_FILE_AT_LINE (3154)) ;
          switch (select_repeat_semantics_parser_27 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3112_28_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  nt_expression_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_expression_parse (lexique_var_) ;
  switch (select_semantics_parser_26 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_repeat_semantics_parser_27 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3168_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  GGS_location  var_cas_instructionLocation ;
  var_cas_instructionLocation = GGS_location (lexique_var_) ;
  GGS_typeExpression  var_cas_messageExpression ;
  GGS_AC_galgasType  var_cas_messageExpressionType ;
  nt_expression_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_messageExpression, var_cas_messageExpressionType) ;
  { cPtr_typeGalgas_string * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_string *> (var_cas_messageExpressionType.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_messageExpressionType.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_string::static_string_message_messageGalgasType () ;
        message2_ << var_cas_messageExpressionType (HERE)->message_messageGalgasType () ;
        GGS_location (lexique_var_).signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (3188)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeMessageInstruction::constructor_new (var_cas_messageExpression, var_cas_instructionLocation COMMA_HERE) ;
  var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3168_28_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  nt_expression_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3201_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_if) ;
  GGS_L_expression_instructionsList_list  var_cas_listeBranchesTest ;
  var_cas_listeBranchesTest = GGS_L_expression_instructionsList_list::constructor_empty (HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (lexique_var_ SOURCE_FILE_AT_LINE (3210)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_ioVariablesMap.prologue_testPart (lexique_var_ SOURCE_FILE_AT_LINE (3212)) ;
        GGS_typeExpression  var_cas_testBranche ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_testBranche, var_cas_resultType) ;
        { cPtr_typeGalgas_bool * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_bool *> (var_cas_resultType.getPtr ()) ;
          if (ptrExtraire_ == NULL) {
            if (var_cas_resultType.getPtr () != NULL) {
              TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
              C_String message2_ ;
              message1_ (0 COMMA_HERE) << cPtr_typeGalgas_bool::static_string_message_messageGalgasType () ;
              message2_ << var_cas_resultType (HERE)->message_messageGalgasType () ;
              GGS_location (lexique_var_).signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (3222)) ;
            }
          }else{
            macroValidPointer (ptrExtraire_) ;
          }
        }
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_then) ;
        GGS_typeInstructionsList  var_cas_listeInstructionsBrancheTest ;
        var_cas_listeInstructionsBrancheTest = GGS_typeInstructionsList::constructor_empty (HERE) ;
        nt_semantic_instructions_list_no_verif_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheTest) ;
        var_cas_listeBranchesTest.addAssign_operation (var_cas_testBranche, var_cas_listeInstructionsBrancheTest) ;
        var_cas_ioVariablesMap.epilogue_testPart (lexique_var_, GGS_location (lexique_var_) SOURCE_FILE_AT_LINE (3212)) ;
      switch (select_repeat_semantics_parser_28 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_elsif) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeInstructionsList  var_cas_listeInstructionsBrancheAutre ;
  var_cas_listeInstructionsBrancheAutre = GGS_typeInstructionsList::constructor_empty (HERE) ;
  var_cas_ioVariablesMap.prologue_testPart (lexique_var_ SOURCE_FILE_AT_LINE (3238)) ;
  switch (select_semantics_parser_29 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
      nt_semantic_instructions_list_no_verif_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheAutre) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (lexique_var_, GGS_location (lexique_var_) SOURCE_FILE_AT_LINE (3238)) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_if) ;
  var_cas_ioVariablesMap.epilogue_testBloc (lexique_var_ SOURCE_FILE_AT_LINE (3210)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_if_instruction::constructor_new (var_cas_listeBranchesTest, var_cas_listeInstructionsBrancheAutre COMMA_HERE) ;
  var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3201_28_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_if) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        nt_expression_parse (lexique_var_) ;
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_then) ;
        nt_semantic_instructions_list_no_verif_parse (lexique_var_) ;
      switch (select_repeat_semantics_parser_28 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_elsif) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_29 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
      nt_semantic_instructions_list_no_verif_parse (lexique_var_) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_if) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3267_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
  GGS_lstring  var_cas_grammarName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_grammarName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_lstring  var_cas_altName ;
  switch (select_semantics_parser_30 (lexique_var_)) {
    case 1 : {
      var_cas_altName = GGS_lstring::constructor_new (GGS_string (true, ""), GGS_location (lexique_var_) COMMA_HERE) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_label) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_altName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  GGS_lstring  var_cas_nomFichierSource ;
  GGS_typeCplusPlusName  var_cas_nomCppFichierSource ;
  GGS_AC_galgasType  var_cas_typeNomFichierSource ;
  nt_read_access_ (lexique_var_, var_cas_nomFichierSource, var_cas_nomCppFichierSource, var_cas_typeNomFichierSource, var_cas_ioVariablesMap) ;
  { cPtr_typeGalgas_lstring * ptrExtraire_ = dynamic_cast <cPtr_typeGalgas_lstring *> (var_cas_typeNomFichierSource.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      if (var_cas_typeNomFichierSource.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgas_lstring::static_string_message_messageGalgasType () ;
        message2_ << var_cas_typeNomFichierSource (HERE)->message_messageGalgasType () ;
        var_cas_nomFichierSource.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (3292)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (lexique_var_, var_cas_listeTypesParametresEffectifs, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_grammarName, var_cas_e SOURCE_FILE_AT_LINE (3305)) ;
  GGS_M_nonterminalSymbolAlts  var_cas_startSymbolAltMap ;
  { cPtr_C_grammarForSemantics * ptrExtraire_ = dynamic_cast <cPtr_C_grammarForSemantics *> (var_cas_e.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_startSymbolAltMap.drop_operation () ;
      if (var_cas_e.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_C_grammarForSemantics::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_e (HERE)->message_messageTypeEntite () ;
        var_cas_grammarName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (3307)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_startSymbolAltMap = ptrExtraire_->mGrammarAltMap ;
    }
  }
  GGS_L_EXsignature  var_cas_startSymbolSignature ;
  GGS_lstring  var_cas_returnedEntity ;
  var_cas_startSymbolAltMap.methode_searchKey (lexique_var_, var_cas_altName, var_cas_startSymbolSignature, var_cas_returnedEntity SOURCE_FILE_AT_LINE (3310)) ;
  ::routine_verifierCompatibiliteArgEffectifsSignature (lexique_var_,  var_cas_startSymbolSignature,  var_cas_listeTypesParametresEffectifs,  GGS_location (lexique_var_),  var_cas_ioInstructionsList,  var_cas_expressionsList SOURCE_FILE_AT_LINE (3312)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_grammarInstruction::constructor_new (var_cas_nomCppFichierSource, var_cas_grammarName, var_cas_expressionsList, var_cas_altName COMMA_HERE) ;
  var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3267_28_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  switch (select_semantics_parser_30 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_label) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  nt_read_access_parse (lexique_var_) ;
  nt_parse_parameters_list_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3335_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_foreach) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_ioVariablesMap.prologue_repeatBlock (lexique_var_ SOURCE_FILE_AT_LINE (3344)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (lexique_var_ SOURCE_FILE_AT_LINE (3345)) ;
  GGS_foreachEnumerationList  var_cas_foreachEnumerationList ;
  var_cas_foreachEnumerationList = GGS_foreachEnumerationList::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_variableName ;
        GGS_typeCplusPlusName  var_cas_cppName ;
        GGS_AC_galgasType  var_cas_variableType ;
        nt_read_access_ (lexique_var_, var_cas_variableName, var_cas_cppName, var_cas_variableType, var_cas_ioVariablesMap) ;
        GGS_typeListeAttributsSemantiques  var_cas_formalEnumerationList ;
        GGS_localConstantBuildStyleEnum var_cas_localConstantBuildStyleEnum ;
        if (var_cas_variableType.isBuilt ()) {
          var_cas_variableType (HERE)->methode_acceptForeachInstruction (lexique_var_, var_cas_variableName, var_cas_formalEnumerationList, var_cas_localConstantBuildStyleEnum) ;
        }
        GGS_string var_cas_typeName ;
        if (var_cas_variableType.isBuilt ()) {
          var_cas_variableType (HERE)->methode_getTypeName (lexique_var_, var_cas_typeName) ;
        }
        GGS_location  var_cas_magicNumber ;
        var_cas_magicNumber = GGS_location (lexique_var_) ;
        nt_parse_effective_input_parameters_list_ (lexique_var_, var_cas_ioVariablesMap, var_cas_formalEnumerationList, var_cas_magicNumber, var_cas_localConstantBuildStyleEnum) ;
        var_cas_foreachEnumerationList.addAssign_operation (var_cas_cppName, var_cas_magicNumber, var_cas_typeName) ;
      switch (select_repeat_semantics_parser_31 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeExpression  var_cas_whileExpression ;
  switch (select_semantics_parser_32 (lexique_var_)) {
    case 1 : {
      var_cas_whileExpression = GGS_typeTrueBool::constructor_new (HERE) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_while) ;
      GGS_AC_galgasType  var_cas_resultType ;
      nt_expression_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_whileExpression, var_cas_resultType) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_typeInstructionsList  var_cas_instructionList ;
  var_cas_instructionList = GGS_typeInstructionsList::constructor_empty (HERE) ;
  nt_semantic_instructions_list_no_verif_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (lexique_var_, GGS_location (lexique_var_) SOURCE_FILE_AT_LINE (3345)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (lexique_var_ SOURCE_FILE_AT_LINE (3344)) ;
  var_cas_instruction = GGS_typeForeachInstruction::constructor_new (var_cas_foreachEnumerationList, var_cas_whileExpression, var_cas_instructionList COMMA_HERE) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_foreach) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3335_28_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_foreach) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        nt_read_access_parse (lexique_var_) ;
        nt_parse_effective_input_parameters_list_parse (lexique_var_) ;
      switch (select_repeat_semantics_parser_31 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_32 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_while) ;
      nt_expression_parse (lexique_var_) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_semantic_instructions_list_no_verif_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_foreach) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'parse_match_operand'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_operand_semantics_parser_3423_27_ (galgas_scanner & lexique_var_,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  &var_cas_outCppName,
                                GGS_lstring  &var_cas_outBaseTypeName,
                                GGS_location  &var_cas_outVarLocation,
                                GGS_bool &var_cas_outIsEnumeration,
                                GGS_enumConstantMap  &var_cas_outEnumMessageMap) {
  GGS_lstring  var_cas_variableName ;
  GGS_AC_galgasType  var_cas_type ;
  nt_read_access_ (lexique_var_, var_cas_variableName, var_cas_outCppName, var_cas_type, var_cas_ioVariablesMap) ;
  var_cas_outVarLocation = GGS_location (lexique_var_) ;
  if (var_cas_type.isBuilt ()) {
    if (dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_type.getPtr ()) != NULL) {
      cPtr_typeGalgasClassType * operand_131234 = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_type.getPtr ()) ;
      macroValidPointer (operand_131234) ; 
      var_cas_outBaseTypeName = operand_131234->mClassTypeName ;
      var_cas_outIsEnumeration = GGS_bool (true, false) ;
      var_cas_outEnumMessageMap = GGS_enumConstantMap::constructor_empty (HERE) ;
    }else if (dynamic_cast <cPtr_typeGalgas_enum *> (var_cas_type.getPtr ()) != NULL) {
      cPtr_typeGalgas_enum * operand_131437 = dynamic_cast <cPtr_typeGalgas_enum *> (var_cas_type.getPtr ()) ;
      macroValidPointer (operand_131437) ; 
      var_cas_outBaseTypeName = operand_131437->mEnumTypeName ;
      var_cas_outIsEnumeration = GGS_bool (true, true) ;
      var_cas_outEnumMessageMap = operand_131437->mEnumConstantesMap ;
    }else{ // Else part
      GGS_string var_cas_actualTypeName ;
      if (var_cas_type.isBuilt ()) {
        var_cas_type (HERE)->methode_getTypeName (lexique_var_, var_cas_actualTypeName) ;
      }
        var_cas_variableName.reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "the type of this variable is '@")) + (var_cas_actualTypeName))) + (GGS_string (true, "' ; I was expected an enumeration type or an abstract type"))) SOURCE_FILE_AT_LINE (3453)) ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_operand_semantics_parser_3423_27_parse (galgas_scanner & lexique_var_) {
  nt_read_access_parse (lexique_var_) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_case_semantics_parser_3461_24_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  var_cas_inVarLocation,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  /* var_cas_inEnumMessageMap */,
                                GGS_lstring  &var_cas_outTypeName) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_AC_galgasType  var_cas_definitionClasse1 ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_outTypeName, var_cas_entite SOURCE_FILE_AT_LINE (3475)) ;
  { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_definitionClasse1.drop_operation () ;
      if (var_cas_entite.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
        message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
        var_cas_outTypeName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (3476)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_definitionClasse1 = ptrExtraire_->aDefType ;
    }
  }
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 ;
  GGS_bool var_cas_isAbstract ;
  { cPtr_typeGalgasClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasClassType *> (var_cas_definitionClasse1.getPtr ()) ;
    if (ptrExtraire_ == NULL) {
      var_cas_listeAttributs1.drop_operation () ;
      var_cas_tableDesClassesAncetresType1.drop_operation () ;
      var_cas_isAbstract.drop_operation () ;
      if (var_cas_definitionClasse1.getPtr () != NULL) {
        TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
        C_String message2_ ;
        message1_ (0 COMMA_HERE) << cPtr_typeGalgasClassType::static_string_message_messageGalgasType () ;
        message2_ << var_cas_definitionClasse1 (HERE)->message_messageGalgasType () ;
        var_cas_outTypeName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (3489)) ;
      }
    }else{
      macroValidPointer (ptrExtraire_) ;
      var_cas_listeAttributs1 = ptrExtraire_->mNonExternAttributesList ;
      var_cas_tableDesClassesAncetresType1 = ptrExtraire_->mAncestorClassesMap ;
      var_cas_isAbstract = ptrExtraire_->mClassIsAbstract ;
    }
  }
  if ((var_cas_isAbstract).isBuiltAndTrue ()) {
      var_cas_outTypeName.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "an abstract class is not allowed here") SOURCE_FILE_AT_LINE (3492)) ;
  }
  if ((var_cas_inIsEnumeration).isBuiltAndTrue ()) {
      var_cas_outTypeName.reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "a constant of '@")) + (var_cas_inTypeName.reader_value ()))) + (GGS_string (true, "' enumeration type is expected here"))) SOURCE_FILE_AT_LINE (3496)) ;
  }else if (((! (var_cas_tableDesClassesAncetresType1.reader_hasKey (var_cas_inTypeName.reader_value ())))).isBuiltAndTrue ()) {
      var_cas_outTypeName.reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "This type does not inherit from '")) + (var_cas_inTypeName.reader_value ()))) + (GGS_string (true, "'"))) SOURCE_FILE_AT_LINE (3498)) ;
  }
  nt_parse_effective_input_parameters_list_ (lexique_var_, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_inVarLocation, GGS_localConstantBuildStyleEnum::constructor_listStyle (HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_3461_24_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  nt_parse_effective_input_parameters_list_parse (lexique_var_) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_case_semantics_parser_3511_24_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  /* var_cas_inVarLocation */,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  var_cas_inEnumMessageMap,
                                GGS_lstring  &var_cas_outEnumConstantName) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_outEnumConstantName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  if ((var_cas_inIsEnumeration).isBuiltAndTrue ()) {
    var_cas_inEnumMessageMap.methode_searchKey (lexique_var_, var_cas_outEnumConstantName SOURCE_FILE_AT_LINE (3524)) ;
  }else{
      var_cas_outEnumConstantName.reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "a class that inherit from '@")) + (var_cas_inTypeName.reader_value ()))) + (GGS_string (true, "' abstract class is expected here"))) SOURCE_FILE_AT_LINE (3526)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_3511_24_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3532_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_match) ;
  GGS_typeCplusPlusName  var_cas_operand1_cppName ;
  GGS_lstring  var_cas_operand1_typeName ;
  GGS_location  var_cas_operand1_location ;
  GGS_bool var_cas_operand1_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand1_enumMessageMap ;
  nt_parse_match_operand_ (lexique_var_, var_cas_ioVariablesMap, var_cas_operand1_cppName, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3A) ;
  GGS_typeCplusPlusName  var_cas_operand2_cppName ;
  GGS_lstring  var_cas_operand2_typeName ;
  GGS_location  var_cas_operand2_location ;
  GGS_bool var_cas_operand2_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand2_enumMessageMap ;
  nt_parse_match_operand_ (lexique_var_, var_cas_ioVariablesMap, var_cas_operand2_cppName, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_L_matchInstructionCasesList  var_cas_casesList ;
  var_cas_casesList = GGS_L_matchInstructionCasesList::constructor_empty (HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (lexique_var_ SOURCE_FILE_AT_LINE (3572)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_33 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          var_cas_ioVariablesMap.prologue_testPart (lexique_var_ SOURCE_FILE_AT_LINE (3576)) ;
          GGS_lstring  var_cas_case1_name ;
          nt_parse_match_case_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap, var_cas_case1_name) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3A) ;
          GGS_lstring  var_cas_case2_name ;
          nt_parse_match_case_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap, var_cas_case2_name) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          GGS_typeInstructionsList  var_cas_instructionsList ;
          var_cas_instructionsList = GGS_typeInstructionsList::constructor_empty (HERE) ;
          nt_semantic_instructions_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList) ;
          var_cas_casesList.addAssign_operation (var_cas_case1_name, var_cas_case2_name, var_cas_instructionsList) ;
          var_cas_ioVariablesMap.epilogue_testPart (lexique_var_, GGS_location (lexique_var_) SOURCE_FILE_AT_LINE (3576)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (lexique_var_ SOURCE_FILE_AT_LINE (3615)) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
  GGS_typeInstructionsList  var_cas_elsePartInstructionsList ;
  var_cas_elsePartInstructionsList = GGS_typeInstructionsList::constructor_empty (HERE) ;
  nt_semantic_instructions_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elsePartInstructionsList) ;
  var_cas_ioVariablesMap.epilogue_testPart (lexique_var_, GGS_location (lexique_var_) SOURCE_FILE_AT_LINE (3615)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (lexique_var_ SOURCE_FILE_AT_LINE (3572)) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_match) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeMatchInstruction::constructor_new (var_cas_operand1_location, var_cas_operand2_location, var_cas_operand1_cppName, var_cas_operand2_cppName, var_cas_operand1_typeName, var_cas_operand2_typeName, var_cas_operand1_isEnumeration, var_cas_operand2_isEnumeration, var_cas_casesList, var_cas_elsePartInstructionsList COMMA_HERE) ;
  var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3532_28_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_match) ;
  nt_parse_match_operand_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3A) ;
  nt_parse_match_operand_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_33 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          nt_parse_match_case_parse (lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3A) ;
          nt_parse_match_case_parse (lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          nt_semantic_instructions_list_parse (lexique_var_) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_else) ;
  nt_semantic_instructions_list_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_match) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Implementation of production rule 'semantic_instructions_list_no_verif'   *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instructions_list_no_verif_semantics_parser_3646_43_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_34 (lexique_var_)) {
        case 2 : {
          nt_semantic_instruction_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionsList) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_no_verif_semantics_parser_3646_43_parse (galgas_scanner & lexique_var_) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_34 (lexique_var_)) {
        case 2 : {
          nt_semantic_instruction_parse (lexique_var_) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_3669_27_ (galgas_scanner & /* lexique_var_ */,
                                const GGS_lstring  &/* var_cas_inTypeName */,
                                const GGS_lstring  &/* var_cas_nomVarDest */,
                                const GGS_typeCplusPlusName  &var_cas_inVariableCppName,
                                const GGS_AC_galgasType  &var_cas_inVariableType,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */) {
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeInstructionDeclarationVarLocale::constructor_new (var_cas_inVariableCppName, var_cas_inVariableType COMMA_HERE) ;
  var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_3669_27_parse (galgas_scanner & /* lexique_var_ */) {
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_3685_27_ (galgas_scanner & lexique_var_,
                                const GGS_lstring  &/* var_cas_inTypeName */,
                                const GGS_lstring  &var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  &var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  &var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3D) ;
  GGS_AC_galgasType  var_cas_140231 ;
  GGS_typeCplusPlusName  var_cas_140234 ;
  var_cas_ioVariablesMap.methode_searchForWriteAccess (lexique_var_, var_cas_inTargetVarName, var_cas_140231, var_cas_140234 SOURCE_FILE_AT_LINE (3697)) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  ::routine_checkAssignmentTypesCompatibility (lexique_var_,  var_cas_inVariableType,  var_cas_sourceType,  GGS_location (lexique_var_) SOURCE_FILE_AT_LINE (3709)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_declarationInstructionWithAssignment::constructor_new (var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionsList.addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_3685_27_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3D) ;
  nt_expression_parse (lexique_var_) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_3717_27_ (galgas_scanner & lexique_var_,
                                const GGS_lstring  &var_cas_inTypeName,
                                const GGS_lstring  &var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  &var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  &var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionsList  &var_cas_ioInstructionsList,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  GGS_AC_galgasType  var_cas_141344 ;
  GGS_typeCplusPlusName  var_cas_141347 ;
  var_cas_ioVariablesMap.methode_searchForWriteAccess (lexique_var_, var_cas_inTargetVarName, var_cas_141344, var_cas_141347 SOURCE_FILE_AT_LINE (3728)) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
  GGS_lstring  var_cas_constructorName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_constructorName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  if (var_cas_inVariableType.isBuilt ()) {
    var_cas_inVariableType (HERE)->methode_handleConstructorCall (lexique_var_, var_cas_constructorName, var_cas_listeAttributsSemantiques) ;
  }
  GGS_typeExpressionList  var_cas_expressionList ;
  nt_output_expression_list_ (lexique_var_, var_cas_expressionList, var_cas_listeAttributsSemantiques, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioVariablesMap) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
  GGS_typeExpression  var_cas_e ;
  var_cas_e = GGS_typeConstructorExpression::constructor_new (var_cas_inTypeName, var_cas_constructorName, var_cas_expressionList COMMA_HERE) ;
  GGS_typeInstruction  var_cas_i ;
  var_cas_i = GGS_C_declarationInstructionWithAssignment::constructor_new (var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_e COMMA_HERE) ;
  var_cas_ioInstructionsList.addAssign_operation (var_cas_i) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_3717_27_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_output_expression_list_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parse_states'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_states_semantics_parser_3757_20_ (galgas_scanner & lexique_var_,
                                GGS_stateMap  &var_cas_ioStateValues,
                                GGS_string &var_cas_outFirstStateName,
                                GGS_lastStateList  &var_cas_outLastStateList,
                                GGS_transitionStatusMap  &var_cas_outTransitionStatusMap) {
  switch (select_semantics_parser_35 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_firststate) ;
      GGS_lstring  var_cas_firstStateName ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_firstStateName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
      var_cas_ioStateValues.methode_searchKey (lexique_var_, var_cas_firstStateName SOURCE_FILE_AT_LINE (3768)) ;
      var_cas_outFirstStateName = var_cas_firstStateName.reader_value () ;
      } break ;
    case 2 : {
      var_cas_outFirstStateName = GGS_string (true, "") ;
      if (((var_cas_ioStateValues.reader_count ()) != (GGS_uint (true, 0UL))).isBuiltAndTrue ()) {
          GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "since you have declared states, you must define a first state") SOURCE_FILE_AT_LINE (3773)) ;
      }
      } break ;
    default :
      break ;
  }
  var_cas_outTransitionStatusMap = GGS_transitionStatusMap::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_36 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_transition) ;
          GGS_lstring  var_cas_transitionName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_transitionName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_lastStateEnum var_cas_status ;
          GGS_L_stringList  var_cas_messageList ;
          switch (select_semantics_parser_37 (lexique_var_)) {
            case 1 : {
              var_cas_status = GGS_lastStateEnum::constructor_acceptedState (HERE) ;
              var_cas_messageList = GGS_L_stringList::constructor_empty (HERE) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_warning) ;
              var_cas_status = GGS_lastStateEnum::constructor_warningState (HERE) ;
              nt_message_pattern_ (lexique_var_, var_cas_messageList) ;
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
              var_cas_status = GGS_lastStateEnum::constructor_errorState (HERE) ;
              nt_message_pattern_ (lexique_var_, var_cas_messageList) ;
              } break ;
            default :
              break ;
          }
          var_cas_outTransitionStatusMap.methode_insertKey (lexique_var_, var_cas_transitionName, var_cas_status, var_cas_messageList SOURCE_FILE_AT_LINE (3797)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_outLastStateList = GGS_lastStateList::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_38 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_laststate) ;
          GGS_lstring  var_cas_lastStateName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_lastStateName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          var_cas_ioStateValues.methode_searchKey (lexique_var_, var_cas_lastStateName SOURCE_FILE_AT_LINE (3806)) ;
          GGS_lastStateEnum var_cas_status ;
          GGS_L_stringList  var_cas_messageList ;
          switch (select_semantics_parser_39 (lexique_var_)) {
            case 1 : {
              var_cas_status = GGS_lastStateEnum::constructor_acceptedState (HERE) ;
              var_cas_messageList = GGS_L_stringList::constructor_empty (HERE) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_warning) ;
              var_cas_status = GGS_lastStateEnum::constructor_warningState (HERE) ;
              nt_message_pattern_ (lexique_var_, var_cas_messageList) ;
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
              var_cas_status = GGS_lastStateEnum::constructor_errorState (HERE) ;
              nt_message_pattern_ (lexique_var_, var_cas_messageList) ;
              } break ;
            default :
              break ;
          }
          var_cas_outLastStateList.addAssign_operation (var_cas_lastStateName, var_cas_status, var_cas_messageList) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_states_semantics_parser_3757_20_parse (galgas_scanner & lexique_var_) {
  switch (select_semantics_parser_35 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_firststate) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_36 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_transition) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_semantics_parser_37 (lexique_var_)) {
            case 1 : {
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_warning) ;
              nt_message_pattern_parse (lexique_var_) ;
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
              nt_message_pattern_parse (lexique_var_) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_38 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_laststate) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_semantics_parser_39 (lexique_var_)) {
            case 1 : {
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_warning) ;
              nt_message_pattern_parse (lexique_var_) ;
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
              nt_message_pattern_parse (lexique_var_) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_3831_29_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  GGS_lstring  var_cas_mapTypeName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_mapTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  switch (select_semantics_parser_40 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (var_cas_mapTypeName.reader_value ())) || (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_mapTypeName.reader_value ())))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapType::constructor_new (var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.methode_insertKey (lexique_var_, var_cas_mapTypeName, var_cas_t SOURCE_FILE_AT_LINE (3847)) ;
      }
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
      GGS_lstring  var_cas_cppClassName ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_cppClassName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_empty (HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_empty (HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_empty (HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_41 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (lexique_var_, var_cas_nomMethode, var_cas_errorMessage) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_string var_cas_emptyString ;
              var_cas_emptyString = GGS_string (true, "") ;
              GGS_lastStateList  var_cas_emptyLastStateList ;
              var_cas_emptyLastStateList = GGS_lastStateList::constructor_empty (HERE) ;
              GGS_transitionStatusMap  var_cas_transitionStatusMap ;
              var_cas_transitionStatusMap = GGS_transitionStatusMap::constructor_empty (HERE) ;
              var_cas_insertMethodList.addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_value (), var_cas_emptyString, var_cas_emptyLastStateList, var_cas_transitionStatusMap, GGS_bool (true, true)) ;
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (lexique_var_, var_cas_nomMethode, var_cas_errorMessage) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_string var_cas_emptyString ;
              var_cas_emptyString = GGS_string (true, "") ;
              GGS_lastStateList  var_cas_emptyLastStateList ;
              var_cas_emptyLastStateList = GGS_lastStateList::constructor_empty (HERE) ;
              GGS_transitionStatusMap  var_cas_transitionStatusMap ;
              var_cas_transitionStatusMap = GGS_transitionStatusMap::constructor_empty (HERE) ;
              var_cas_searchMethodList.addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_value (), var_cas_emptyString, var_cas_emptyLastStateList, var_cas_transitionStatusMap, GGS_bool (true, true)) ;
              } break ;
            case 4 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_block) ;
              GGS_lstring  var_cas_nomMethode ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomMethode.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut ;
              var_cas_tableDebut = GGS_typeVariablesMap::constructor_empty (HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin ;
              var_cas_tableFin = GGS_typeVariablesMap::constructor_empty (HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              nt_formal_arguments_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              var_cas_tableMethodesBloc.methode_insertKey (lexique_var_, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin SOURCE_FILE_AT_LINE (3914)) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_empty (HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_empty (HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_empty (HERE) ;
      nt_attributes_definition_list_ (lexique_var_, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapMethodMap  var_cas_mapMethodMap ;
      var_cas_mapMethodMap = GGS_mapMethodMap::constructor_empty (HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (HERE) ;
      GGS_insertOrSearchMethodList::element_type * operand_148881 = var_cas_insertMethodList.firstObject () ;
      while ((operand_148881 != NULL)) {
        macroValidPointer (operand_148881) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_empty (HERE) ;
        var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_149075 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_149075 != NULL)) {
          macroValidPointer (operand_149075) ;
          var_cas_methodSignature.addAssign_operation (operand_149075->mAttributType, var_cas_inPassingMode) ;
          operand_149075 = operand_149075->nextObject () ;
        }
        var_cas_mapMethodMap.methode_insertKey (lexique_var_, operand_148881->mMethodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (3943)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_empty (HERE) ;
        var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_149494 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_149494 != NULL)) {
          macroValidPointer (operand_149494) ;
          var_cas_methodSignature.addAssign_operation (operand_149494->mAttributType, var_cas_inPassingMode) ;
          operand_149494 = operand_149494->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (((operand_148881->mMethodName.reader_value ()) + (GGS_string (true, "GetIndex"))), operand_148881->mMethodName.reader_location () COMMA_HERE) ;
        var_cas_mapMethodMap.methode_insertKey (lexique_var_, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature SOURCE_FILE_AT_LINE (3952)) ;
        operand_148881 = operand_148881->nextObject () ;
      }
      GGS_insertOrSearchMethodList::element_type * operand_149835 = var_cas_searchMethodList.firstObject () ;
      while ((operand_149835 != NULL)) {
        macroValidPointer (operand_149835) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_empty (HERE) ;
        var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_150027 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_150027 != NULL)) {
          macroValidPointer (operand_150027) ;
          var_cas_methodSignature.addAssign_operation (operand_150027->mAttributType, var_cas_outPassingMode) ;
          operand_150027 = operand_150027->nextObject () ;
        }
        var_cas_mapMethodMap.methode_insertKey (lexique_var_, operand_149835->mMethodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (3961)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_empty (HERE) ;
        var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_150444 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_150444 != NULL)) {
          macroValidPointer (operand_150444) ;
          var_cas_methodSignature.addAssign_operation (operand_150444->mAttributType, var_cas_outPassingMode) ;
          operand_150444 = operand_150444->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (((operand_149835->mMethodName.reader_value ()) + (GGS_string (true, "GetIndex"))), operand_149835->mMethodName.reader_location () COMMA_HERE) ;
        var_cas_mapMethodMap.methode_insertKey (lexique_var_, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature SOURCE_FILE_AT_LINE (3970)) ;
        operand_149835 = operand_149835->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_mapTypeName, var_cas_entite SOURCE_FILE_AT_LINE (3978)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_typeDefinitionTableAimplementer::constructor_new (var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_listeTypeeAttributsExternesCourants, var_cas_cppClassName, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_tableMethodesBloc COMMA_HERE) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    case 3 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_empty (HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_empty (HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_empty (HERE) ;
      nt_attributes_definition_list_ (lexique_var_, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_stateMap  var_cas_stateValues ;
      var_cas_stateValues = GGS_stateMap::constructor_empty (HERE) ;
      switch (select_semantics_parser_42 (lexique_var_)) {
        case 1 : {
          } break ;
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_state) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                GGS_lstring  var_cas_idf ;
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                var_cas_idf.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
                var_cas_stateValues.methode_insertKey (lexique_var_, var_cas_idf SOURCE_FILE_AT_LINE (4013)) ;
              switch (select_repeat_semantics_parser_43 (lexique_var_)) {
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          break ;
      }
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_empty (HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_empty (HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_empty (HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (HERE) ;
      GGS_mapMethodMap  var_cas_mapMethodMap ;
      var_cas_mapMethodMap = GGS_mapMethodMap::constructor_empty (HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_44 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (lexique_var_, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage.isBuilt ()) {
                ::routine_check_KL_escapeCharacters (lexique_var_,  var_cas_errorMessage SOURCE_FILE_AT_LINE (4036)) ;
              }
              GGS_string var_cas_firstStateName ;
              GGS_lastStateList  var_cas_emptyLastStateList ;
              GGS_transitionStatusMap  var_cas_transitionStatusMap ;
              var_cas_transitionStatusMap = GGS_transitionStatusMap::constructor_empty (HERE) ;
              nt_parse_states_ (lexique_var_, var_cas_stateValues, var_cas_firstStateName, var_cas_emptyLastStateList, var_cas_transitionStatusMap) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_empty (HERE) ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_154113 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_154113 != NULL)) {
                macroValidPointer (operand_154113) ;
                var_cas_methodSignature.addAssign_operation (operand_154113->mAttributType, var_cas_inPassingMode) ;
                operand_154113 = operand_154113->nextObject () ;
              }
              var_cas_mapMethodMap.methode_insertKey (lexique_var_, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4048)) ;
              var_cas_insertMethodList.addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_value (), var_cas_firstStateName, var_cas_emptyLastStateList, var_cas_transitionStatusMap, GGS_bool (true, false)) ;
              if (((var_cas_getIndexMethodName.reader_value ()) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_empty (HERE) ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_154741 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_154741 != NULL)) {
                  macroValidPointer (operand_154741) ;
                  var_cas_getIndexMethodSignature.addAssign_operation (operand_154741->mAttributType, var_cas_inPassingMode) ;
                  operand_154741 = operand_154741->nextObject () ;
                }
                var_cas_mapMethodMap.methode_insertKey (lexique_var_, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4058)) ;
                var_cas_insertMethodList.addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_value (), var_cas_firstStateName, var_cas_emptyLastStateList, var_cas_transitionStatusMap, GGS_bool (true, true)) ;
              }
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (lexique_var_, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage.isBuilt ()) {
                ::routine_check_K_escapeCharacters (lexique_var_,  var_cas_errorMessage SOURCE_FILE_AT_LINE (4067)) ;
              }
              GGS_string var_cas_firstStateName ;
              GGS_lastStateList  var_cas_emptyLastStateList ;
              GGS_transitionStatusMap  var_cas_transitionStatusMap ;
              var_cas_transitionStatusMap = GGS_transitionStatusMap::constructor_empty (HERE) ;
              nt_parse_states_ (lexique_var_, var_cas_stateValues, var_cas_firstStateName, var_cas_emptyLastStateList, var_cas_transitionStatusMap) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_empty (HERE) ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_155779 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_155779 != NULL)) {
                macroValidPointer (operand_155779) ;
                var_cas_methodSignature.addAssign_operation (operand_155779->mAttributType, var_cas_outPassingMode) ;
                operand_155779 = operand_155779->nextObject () ;
              }
              var_cas_mapMethodMap.methode_insertKey (lexique_var_, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4079)) ;
              var_cas_searchMethodList.addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_value (), var_cas_firstStateName, var_cas_emptyLastStateList, var_cas_transitionStatusMap, GGS_bool (true, false)) ;
              if (((var_cas_getIndexMethodName.reader_value ()) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_empty (HERE) ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_156440 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_156440 != NULL)) {
                  macroValidPointer (operand_156440) ;
                  var_cas_getIndexMethodSignature.addAssign_operation (operand_156440->mAttributType, var_cas_outPassingMode) ;
                  operand_156440 = operand_156440->nextObject () ;
                }
                var_cas_mapMethodMap.methode_insertKey (lexique_var_, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4089)) ;
                var_cas_searchMethodList.addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_value (), var_cas_firstStateName, var_cas_emptyLastStateList, var_cas_transitionStatusMap, GGS_bool (true, true)) ;
              }
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      if (((var_cas_stateValues.reader_count ()) > (GGS_uint (true, 0UL))).isBuiltAndTrue ()) {
        GGS_insertOrSearchMethodList::element_type * operand_156970 = var_cas_insertMethodList.firstObject () ;
        while ((operand_156970 != NULL)) {
          macroValidPointer (operand_156970) ;
          GGS_insertOrSearchMethodList::element_type * operand_157092 = var_cas_insertMethodList.firstObject () ;
          while ((operand_157092 != NULL)) {
            macroValidPointer (operand_157092) ;
            if (((! (operand_156970->mTransitionStatusMap.reader_hasKey (operand_157092->mMethodName.reader_value ())))).isBuiltAndTrue ()) {
                operand_156970->mMethodName.reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "This insert method does not define the '")) + (operand_157092->mMethodName.reader_value ()))) + (GGS_string (true, "' transition"))) SOURCE_FILE_AT_LINE (4098)) ;
            }
            operand_157092 = operand_157092->nextObject () ;
          }
          operand_156970 = operand_156970->nextObject () ;
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_mapTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4109)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_mapToImplement::constructor_new (var_cas_stateValues, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_listeTypeeAttributsExternesCourants, var_cas_insertMethodList, var_cas_searchMethodList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_3831_29_importSemantics (galgas_scanner & lexique_var_,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  GGS_lstring  var_cas_mapTypeName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_mapTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  switch (select_semantics_parser_40 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (var_cas_mapTypeName.reader_value ())) || (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_mapTypeName.reader_value ())))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapType::constructor_new (var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.methode_insertKey (lexique_var_, var_cas_mapTypeName, var_cas_t SOURCE_FILE_AT_LINE (4135)) ;
      }
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
      GGS_lstring  var_cas_cppClassName ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_cppClassName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_empty (HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_empty (HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_empty (HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_41 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (lexique_var_, var_cas_nomMethode, var_cas_errorMessage) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_string var_cas_emptyString ;
              var_cas_emptyString = GGS_string (true, "") ;
              GGS_lastStateList  var_cas_emptyLastStateList ;
              var_cas_emptyLastStateList = GGS_lastStateList::constructor_empty (HERE) ;
              GGS_transitionStatusMap  var_cas_transitionStatusMap ;
              var_cas_transitionStatusMap = GGS_transitionStatusMap::constructor_empty (HERE) ;
              var_cas_insertMethodList.addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_value (), var_cas_emptyString, var_cas_emptyLastStateList, var_cas_transitionStatusMap, GGS_bool (true, true)) ;
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (lexique_var_, var_cas_nomMethode, var_cas_errorMessage) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_string var_cas_emptyString ;
              var_cas_emptyString = GGS_string (true, "") ;
              GGS_lastStateList  var_cas_emptyLastStateList ;
              var_cas_emptyLastStateList = GGS_lastStateList::constructor_empty (HERE) ;
              GGS_transitionStatusMap  var_cas_transitionStatusMap ;
              var_cas_transitionStatusMap = GGS_transitionStatusMap::constructor_empty (HERE) ;
              var_cas_searchMethodList.addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_value (), var_cas_emptyString, var_cas_emptyLastStateList, var_cas_transitionStatusMap, GGS_bool (true, true)) ;
              } break ;
            case 4 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_block) ;
              GGS_lstring  var_cas_nomMethode ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_nomMethode.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut ;
              var_cas_tableDebut = GGS_typeVariablesMap::constructor_empty (HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin ;
              var_cas_tableFin = GGS_typeVariablesMap::constructor_empty (HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              nt_formal_arguments_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              var_cas_tableMethodesBloc.methode_insertKey (lexique_var_, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin SOURCE_FILE_AT_LINE (4202)) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_empty (HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_empty (HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_empty (HERE) ;
      nt_attributes_definition_list_ (lexique_var_, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapMethodMap  var_cas_mapMethodMap ;
      var_cas_mapMethodMap = GGS_mapMethodMap::constructor_empty (HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (HERE) ;
      GGS_insertOrSearchMethodList::element_type * operand_162434 = var_cas_insertMethodList.firstObject () ;
      while ((operand_162434 != NULL)) {
        macroValidPointer (operand_162434) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_empty (HERE) ;
        var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_162628 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_162628 != NULL)) {
          macroValidPointer (operand_162628) ;
          var_cas_methodSignature.addAssign_operation (operand_162628->mAttributType, var_cas_inPassingMode) ;
          operand_162628 = operand_162628->nextObject () ;
        }
        var_cas_mapMethodMap.methode_insertKey (lexique_var_, operand_162434->mMethodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4231)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_empty (HERE) ;
        var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_163047 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_163047 != NULL)) {
          macroValidPointer (operand_163047) ;
          var_cas_methodSignature.addAssign_operation (operand_163047->mAttributType, var_cas_inPassingMode) ;
          operand_163047 = operand_163047->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (((operand_162434->mMethodName.reader_value ()) + (GGS_string (true, "GetIndex"))), operand_162434->mMethodName.reader_location () COMMA_HERE) ;
        var_cas_mapMethodMap.methode_insertKey (lexique_var_, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4240)) ;
        operand_162434 = operand_162434->nextObject () ;
      }
      GGS_insertOrSearchMethodList::element_type * operand_163388 = var_cas_searchMethodList.firstObject () ;
      while ((operand_163388 != NULL)) {
        macroValidPointer (operand_163388) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_empty (HERE) ;
        var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_163582 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_163582 != NULL)) {
          macroValidPointer (operand_163582) ;
          var_cas_methodSignature.addAssign_operation (operand_163582->mAttributType, var_cas_outPassingMode) ;
          operand_163582 = operand_163582->nextObject () ;
        }
        var_cas_mapMethodMap.methode_insertKey (lexique_var_, operand_163388->mMethodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4249)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_empty (HERE) ;
        var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::element_type * operand_164002 = var_cas_listeTousAttributsSemantiques.firstObject () ;
        while ((operand_164002 != NULL)) {
          macroValidPointer (operand_164002) ;
          var_cas_methodSignature.addAssign_operation (operand_164002->mAttributType, var_cas_outPassingMode) ;
          operand_164002 = operand_164002->nextObject () ;
        }
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (((operand_163388->mMethodName.reader_value ()) + (GGS_string (true, "GetIndex"))), operand_163388->mMethodName.reader_location () COMMA_HERE) ;
        var_cas_mapMethodMap.methode_insertKey (lexique_var_, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4258)) ;
        operand_163388 = operand_163388->nextObject () ;
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_mapTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4266)) ;
      GGS_TypeModel  var_cas_type ;
      var_cas_type = GGS_MapModel::constructor_new (var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.methode_insertKey (lexique_var_, var_cas_mapTypeName, var_cas_type SOURCE_FILE_AT_LINE (4268)) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    case 3 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_empty (HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_empty (HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_empty (HERE) ;
      nt_attributes_definition_list_ (lexique_var_, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      switch (select_semantics_parser_42 (lexique_var_)) {
        case 1 : {
          } break ;
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_state) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_repeat_semantics_parser_43 (lexique_var_)) {
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          break ;
      }
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_empty (HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (HERE) ;
      GGS_mapMethodMap  var_cas_mapMethodMap ;
      var_cas_mapMethodMap = GGS_mapMethodMap::constructor_empty (HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_44 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_166262 ;
              nt_map_method_ (lexique_var_, var_cas_methodName, var_cas_getIndexMethodName, var_cas_166262) ;
              nt_parse_states_parse (lexique_var_) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_empty (HERE) ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_166496 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_166496 != NULL)) {
                macroValidPointer (operand_166496) ;
                var_cas_methodSignature.addAssign_operation (operand_166496->mAttributType, var_cas_inPassingMode) ;
                operand_166496 = operand_166496->nextObject () ;
              }
              var_cas_mapMethodMap.methode_insertKey (lexique_var_, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4319)) ;
              if (((var_cas_getIndexMethodName.reader_value ()) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_empty (HERE) ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_167028 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_167028 != NULL)) {
                  macroValidPointer (operand_167028) ;
                  var_cas_getIndexMethodSignature.addAssign_operation (operand_167028->mAttributType, var_cas_inPassingMode) ;
                  operand_167028 = operand_167028->nextObject () ;
                }
                var_cas_mapMethodMap.methode_insertKey (lexique_var_, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4328)) ;
              }
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_167407 ;
              nt_map_method_ (lexique_var_, var_cas_methodName, var_cas_getIndexMethodName, var_cas_167407) ;
              nt_parse_states_parse (lexique_var_) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_empty (HERE) ;
              var_cas_methodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::element_type * operand_167647 = var_cas_listeTousAttributsSemantiques.firstObject () ;
              while ((operand_167647 != NULL)) {
                macroValidPointer (operand_167647) ;
                var_cas_methodSignature.addAssign_operation (operand_167647->mAttributType, var_cas_outPassingMode) ;
                operand_167647 = operand_167647->nextObject () ;
              }
              var_cas_mapMethodMap.methode_insertKey (lexique_var_, var_cas_methodName, var_cas_methodSignature SOURCE_FILE_AT_LINE (4343)) ;
              if (((var_cas_getIndexMethodName.reader_value ()) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_empty (HERE) ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature.addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::element_type * operand_168222 = var_cas_listeTousAttributsSemantiques.firstObject () ;
                while ((operand_168222 != NULL)) {
                  macroValidPointer (operand_168222) ;
                  var_cas_getIndexMethodSignature.addAssign_operation (operand_168222->mAttributType, var_cas_outPassingMode) ;
                  operand_168222 = operand_168222->nextObject () ;
                }
                var_cas_mapMethodMap.methode_insertKey (lexique_var_, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature SOURCE_FILE_AT_LINE (4352)) ;
              }
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_mapTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4361)) ;
      GGS_TypeModel  var_cas_type ;
      var_cas_type = GGS_MapModel::constructor_new (var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.methode_insertKey (lexique_var_, var_cas_mapTypeName, var_cas_type SOURCE_FILE_AT_LINE (4363)) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_3831_29_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  switch (select_semantics_parser_40 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_41 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              nt_ex_map_method_parse (lexique_var_) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              nt_ex_map_method_parse (lexique_var_) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 4 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_block) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              nt_formal_arguments_list_parse (lexique_var_) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              nt_formal_arguments_list_parse (lexique_var_) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      nt_attributes_definition_list_parse (lexique_var_) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    case 3 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      nt_attributes_definition_list_parse (lexique_var_) ;
      switch (select_semantics_parser_42 (lexique_var_)) {
        case 1 : {
          } break ;
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_state) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              switch (select_repeat_semantics_parser_43 (lexique_var_)) {
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          break ;
      }
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
          switch (select_repeat_semantics_parser_44 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
              nt_map_method_parse (lexique_var_) ;
              nt_parse_states_parse (lexique_var_) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              nt_map_method_parse (lexique_var_) ;
              nt_parse_states_parse (lexique_var_) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'ex_map_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_ex_map_method_semantics_parser_4370_21_ (galgas_scanner & lexique_var_,
                                GGS_lstring  &var_cas_nomMethode,
                                GGS_lstring  &var_cas_outMessage) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomMethode.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_outMessage.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_ex_map_method_semantics_parser_4370_21_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'map_method'               *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_map_method_semantics_parser_4382_18_ (galgas_scanner & lexique_var_,
                                GGS_lstring  &var_cas_methodName,
                                GGS_lstring  &var_cas_getIndexMethodName,
                                GGS_lstring  &var_cas_outMessage) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_methodName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  switch (select_semantics_parser_45 (lexique_var_)) {
    case 1 : {
      var_cas_getIndexMethodName = GGS_lstring::constructor_new (GGS_string (true, ""), GGS_location (lexique_var_) COMMA_HERE) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_getIndexMethodName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_outMessage.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_map_method_semantics_parser_4382_18_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  switch (select_semantics_parser_45 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'message_pattern'             *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_message_pattern_semantics_parser_4401_23_ (galgas_scanner & lexique_var_,
                                GGS_L_stringList  &var_cas_outMessageList) {
  var_cas_outMessageList = GGS_L_stringList::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_semantics_parser_47 (lexique_var_)) {
          case 1 : {
            GGS_lstring  var_cas_messageText ;
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
            var_cas_messageText.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
            if (((var_cas_messageText.reader_value ()) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
              var_cas_outMessageList.addAssign_operation (var_cas_messageText.reader_value ()) ;
            }
            } break ;
          case 2 : {
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
            var_cas_outMessageList.addAssign_operation (GGS_string (true, "")) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_semantics_parser_46 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_message_pattern_semantics_parser_4401_23_parse (galgas_scanner & lexique_var_) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_semantics_parser_47 (lexique_var_)) {
          case 1 : {
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
            } break ;
          case 2 : {
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_semantics_parser_46 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4427_29_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  GGS_lstring  var_cas_listTypeName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_listTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  switch (select_semantics_parser_48 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (var_cas_listTypeName.reader_value ())) || (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_listTypeName.reader_value ())))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.methode_insertKey (lexique_var_, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (4442)) ;
      }
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_empty (HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_empty (HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_empty (HERE) ;
      nt_attributes_definition_list_ (lexique_var_, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasListType::constructor_new (var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_listTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4464)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_listTypeToImplement::constructor_new (var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_listeTypeeAttributsExternesCourants COMMA_HERE) ;
      var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4427_29_importSemantics (galgas_scanner & lexique_var_,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  GGS_lstring  var_cas_listTypeName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_listTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  switch (select_semantics_parser_48 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      if (((! (((var_cas_tableEnAvant.reader_hasKey (var_cas_listTypeName.reader_value ())) || (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_listTypeName.reader_value ())))))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.methode_insertKey (lexique_var_, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (4483)) ;
      }
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_empty (HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_empty (HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_L_nameWithType  var_cas_listeTypeeAttributsExternesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_empty (HERE) ;
      nt_attributes_definition_list_ (lexique_var_, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_listeTypeeAttributsExternesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasListType::constructor_new (var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_listTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4505)) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ListModel::constructor_new (var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.methode_insertKey (lexique_var_, var_cas_listTypeName, var_cas_t SOURCE_FILE_AT_LINE (4507)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_4427_29_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  switch (select_semantics_parser_48 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      nt_attributes_definition_list_parse (lexique_var_) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'attributes_definition_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_attributes_definition_list_semantics_parser_4517_34_ (galgas_scanner & lexique_var_,
                                GGS_typeListModel  &var_cas_outAttributeListModel,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeAttributsSemantiquesCourants,
                                GGS_L_nameWithType  &var_cas_listeTypeeAttributsExternesCourants,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_listeTypeeAttributsExternesCourants = GGS_L_nameWithType::constructor_empty (HERE) ;
  var_cas_listeAttributsSemantiquesCourants = GGS_typeListeAttributsSemantiques::constructor_empty (HERE) ;
  var_cas_outAttributeListModel = GGS_typeListModel::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_49 (lexique_var_)) {
        case 2 : {
          GGS_AC_galgasType  var_cas_definitionType ;
          GGS_lstring  var_cas_typeName ;
          nt_type_parsing_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
          if (var_cas_definitionType.isBuilt ()) {
            var_cas_definitionType (HERE)->methode_typeCanBeUsedInObjectDeclaration (lexique_var_) ;
          }
          GGS_lstring  var_cas_attributeName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_attributeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          var_cas_tableAttributs.methode_insertKey (lexique_var_, var_cas_attributeName, var_cas_definitionType SOURCE_FILE_AT_LINE (4543)) ;
          var_cas_listeTousAttributsSemantiques.addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_listeAttributsSemantiquesCourants.addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_outAttributeListModel.addAssign_operation (var_cas_typeName) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_attributes_definition_list_semantics_parser_4517_34_parse (galgas_scanner & lexique_var_) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_49 (lexique_var_)) {
        case 2 : {
          nt_type_parsing_parse (lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4557_29_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extern) ;
  GGS_lstring  var_cas_externTypeName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_externTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_cppClassName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_cppClassName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  GGS_lstring  var_cas_path ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_path.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeTableMethodes  var_cas_modifiersMap ;
  var_cas_modifiersMap = GGS_typeTableMethodes::constructor_empty (HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap ;
  var_cas_readersInInstructionMap = GGS_typeTableMethodes::constructor_empty (HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall ;
  var_cas_acceptAddAssignOperatorCall = GGS_bool (true, false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList ;
  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques::constructor_empty (HERE) ;
  GGS_M_externTypeConstructorMap  var_cas_constructorsMap ;
  var_cas_constructorsMap = GGS_M_externTypeConstructorMap::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_50 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_constructor) ;
          GGS_lstring  var_cas_constructorName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_constructorName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList ;
          var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques::constructor_empty (HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semantics_parser_51 (lexique_var_)) {
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                  var_cas_parameterName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
                  var_cas_constructorArgumentTypesList.addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          var_cas_constructorsMap.methode_insertKey (lexique_var_, var_cas_constructorName, var_cas_constructorArgumentTypesList SOURCE_FILE_AT_LINE (4607)) ;
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
          GGS_lstring  var_cas_methodName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_methodName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
          var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_empty (HERE) ;
          GGS_L_signature  var_cas_signatureForGrammarComponent ;
          nt_formal_arguments_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          var_cas_readersInInstructionMap.methode_insertNotAbstract (lexique_var_, var_cas_methodName, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (4627)) ;
          } break ;
        case 4 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_modifier) ;
          switch (select_semantics_parser_52 (lexique_var_)) {
            case 1 : {
              GGS_lstring  var_cas_methodName ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_methodName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
              var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_empty (HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              var_cas_modifiersMap.methode_insertNotAbstract (lexique_var_, var_cas_methodName, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (4647)) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_3D) ;
              GGS_location  var_cas_errorLocation ;
              var_cas_errorLocation = GGS_location (lexique_var_) ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                  switch (select_repeat_semantics_parser_53 (lexique_var_)) {
                    case 2 : {
                      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_argument_type_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                      var_cas_parameterName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
                      var_cas_addAssignOperatorCallTypeList.addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              if ((var_cas_acceptAddAssignOperatorCall).isBuiltAndTrue ()) {
                  var_cas_errorLocation.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "'+=' operator is already defined") SOURCE_FILE_AT_LINE (4667)) ;
              }else{
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true, true) ;
              }
              } break ;
            default :
              break ;
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_typeEntityToGenerate  var_cas_t ;
  var_cas_t = GGS_typeExternTypeToGenerate::constructor_new (var_cas_externTypeName, var_cas_cppClassName, var_cas_path COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_t) ;
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasExternType::constructor_new (var_cas_externTypeName, var_cas_cppClassName, var_cas_constructorsMap, var_cas_modifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_externTypeName, var_cas_e SOURCE_FILE_AT_LINE (4686)) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extern) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4557_29_importSemantics (galgas_scanner & lexique_var_,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extern) ;
  GGS_lstring  var_cas_externTypeName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_externTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_cppClassName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_cppClassName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeTableMethodes  var_cas_EXmodifiersMap ;
  var_cas_EXmodifiersMap = GGS_typeTableMethodes::constructor_empty (HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap ;
  var_cas_readersInInstructionMap = GGS_typeTableMethodes::constructor_empty (HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall ;
  var_cas_acceptAddAssignOperatorCall = GGS_bool (true, false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList ;
  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques::constructor_empty (HERE) ;
  GGS_M_externTypeConstructorMap  var_cas_EXconstructorsMap ;
  var_cas_EXconstructorsMap = GGS_M_externTypeConstructorMap::constructor_empty (HERE) ;
  GGS_constructorMap  var_cas_constructorMap ;
  var_cas_constructorMap = GGS_constructorMap::constructor_empty (HERE) ;
  GGS_readerMap  var_cas_readerMap ;
  var_cas_readerMap = GGS_readerMap::constructor_empty (HERE) ;
  GGS_modifierMap  var_cas_modifierMap ;
  var_cas_modifierMap = GGS_modifierMap::constructor_empty (HERE) ;
  GGS_typeListModel  var_cas_addAssignFormalInputArgumentList ;
  var_cas_addAssignFormalInputArgumentList = GGS_typeListModel::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_50 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_constructor) ;
          GGS_lstring  var_cas_constructorName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_constructorName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList ;
          var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques::constructor_empty (HERE) ;
          GGS_typeListModel  var_cas_formalInputArgumentList ;
          var_cas_formalInputArgumentList = GGS_typeListModel::constructor_empty (HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semantics_parser_51 (lexique_var_)) {
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                  var_cas_parameterName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
                  var_cas_constructorArgumentTypesList.addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  var_cas_formalInputArgumentList.addAssign_operation (var_cas_galgasTypeName) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          var_cas_EXconstructorsMap.methode_insertKey (lexique_var_, var_cas_constructorName, var_cas_constructorArgumentTypesList SOURCE_FILE_AT_LINE (4745)) ;
          var_cas_constructorMap.methode_insertKey (lexique_var_, var_cas_constructorName, var_cas_formalInputArgumentList SOURCE_FILE_AT_LINE (4746)) ;
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
          GGS_lstring  var_cas_readerName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_readerName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
          var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_empty (HERE) ;
          GGS_L_signature  var_cas_signature ;
          nt_formal_arguments_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          var_cas_readersInInstructionMap.methode_insertNotAbstract (lexique_var_, var_cas_readerName, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (4766)) ;
          var_cas_readerMap.methode_insertKey (lexique_var_, var_cas_readerName, var_cas_signature SOURCE_FILE_AT_LINE (4767)) ;
          } break ;
        case 4 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_modifier) ;
          switch (select_semantics_parser_52 (lexique_var_)) {
            case 1 : {
              GGS_lstring  var_cas_modifierName ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_modifierName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
              var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_empty (HERE) ;
              GGS_L_signature  var_cas_signature ;
              nt_formal_arguments_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
              var_cas_EXmodifiersMap.methode_insertNotAbstract (lexique_var_, var_cas_modifierName, var_cas_listeDeTypes SOURCE_FILE_AT_LINE (4787)) ;
              var_cas_modifierMap.methode_insertKey (lexique_var_, var_cas_modifierName, var_cas_signature SOURCE_FILE_AT_LINE (4788)) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_3D) ;
              if (((var_cas_addAssignFormalInputArgumentList.reader_length ()) > (GGS_uint (true, 0UL))).isBuiltAndTrue ()) {
                  GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "'+=' operator is already defined") SOURCE_FILE_AT_LINE (4792)) ;
              }else{
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true, true) ;
              }
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                  switch (select_repeat_semantics_parser_53 (lexique_var_)) {
                    case 2 : {
                      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_argument_type_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                      var_cas_parameterName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
                      var_cas_addAssignOperatorCallTypeList.addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      var_cas_addAssignFormalInputArgumentList.addAssign_operation (var_cas_galgasTypeName) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasExternType::constructor_new (var_cas_externTypeName, var_cas_cppClassName, var_cas_EXconstructorsMap, var_cas_EXmodifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_externTypeName, var_cas_e SOURCE_FILE_AT_LINE (4824)) ;
  GGS_TypeModel  var_cas_t ;
  var_cas_t = GGS_ExternTypeModel::constructor_new (var_cas_constructorMap, var_cas_readerMap, var_cas_modifierMap, var_cas_addAssignFormalInputArgumentList COMMA_HERE) ;
  var_cas_ioModelMap.methode_insertKey (lexique_var_, var_cas_externTypeName, var_cas_t SOURCE_FILE_AT_LINE (4826)) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extern) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_4557_29_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extern) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_50 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_constructor) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semantics_parser_51 (lexique_var_)) {
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                  nt_formal_argument_type_parse (lexique_var_) ;
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_reader) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          nt_formal_arguments_list_parse (lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 4 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_modifier) ;
          switch (select_semantics_parser_52 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              nt_formal_arguments_list_parse (lexique_var_) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2B_3D) ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                  switch (select_repeat_semantics_parser_53 (lexique_var_)) {
                    case 2 : {
                      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3F) ;
                      nt_formal_argument_type_parse (lexique_var_) ;
                      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extern) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_4836_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_outGalgasTypeName.reader_value ())).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_outGalgasTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4845)) ;
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_type_semantique.drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outGalgasTypeName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (4846)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_type_semantique = ptrExtraire_->aDefType ;
      }
    }
  }else{
    var_cas_tableEnAvant.methode_searchKey (lexique_var_, var_cas_outGalgasTypeName, var_cas_type_semantique SOURCE_FILE_AT_LINE (4848)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_4836_28_importGrammarForSemantics (galgas_scanner & lexique_var_,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_4836_28_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_4858_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_outGalgasTypeName.reader_value ())).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_outGalgasTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4868)) ;
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_type_semantique.drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outGalgasTypeName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (4869)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_type_semantique = ptrExtraire_->aDefType ;
      }
    }
  }else{
    var_cas_tableEnAvant.methode_searchKey (lexique_var_, var_cas_outGalgasTypeName, var_cas_type_semantique SOURCE_FILE_AT_LINE (4871)) ;
    { cPtr_typeGalgasUndefinedListType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasUndefinedListType *> (var_cas_type_semantique.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        if (var_cas_type_semantique.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeGalgasUndefinedListType::static_string_message_messageGalgasType () ;
          message2_ << var_cas_type_semantique (HERE)->message_messageGalgasType () ;
          var_cas_outGalgasTypeName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (4872)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_4858_28_importGrammarForSemantics (galgas_scanner & lexique_var_,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_4858_28_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_list) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_4883_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_outGalgasTypeName.reader_value ())).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_outGalgasTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4893)) ;
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_type_semantique.drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outGalgasTypeName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (4894)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_type_semantique = ptrExtraire_->aDefType ;
      }
    }
  }else{
    var_cas_tableEnAvant.methode_searchKey (lexique_var_, var_cas_outGalgasTypeName, var_cas_type_semantique SOURCE_FILE_AT_LINE (4896)) ;
    { cPtr_typeGalgasUndefinedMapType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasUndefinedMapType *> (var_cas_type_semantique.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        if (var_cas_type_semantique.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeGalgasUndefinedMapType::static_string_message_messageGalgasType () ;
          message2_ << var_cas_type_semantique (HERE)->message_messageGalgasType () ;
          var_cas_outGalgasTypeName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (4897)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_4883_28_importGrammarForSemantics (galgas_scanner & lexique_var_,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_outGalgasTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_4883_28_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_4908_28_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_outGalgasTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (var_cas_outGalgasTypeName.reader_value ())).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_ioComponentSemanticsEntitiesMap.methode_searchKey (lexique_var_, var_cas_outGalgasTypeName, var_cas_entite SOURCE_FILE_AT_LINE (4919)) ;
    { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entite.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        var_cas_type_semantique.drop_operation () ;
        if (var_cas_entite.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
          message2_ << var_cas_entite (HERE)->message_messageTypeEntite () ;
          var_cas_outGalgasTypeName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (4920)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
        var_cas_type_semantique = ptrExtraire_->aDefType ;
      }
    }
  }else{
    var_cas_tableEnAvant.methode_searchKey (lexique_var_, var_cas_outGalgasTypeName, var_cas_type_semantique SOURCE_FILE_AT_LINE (4922)) ;
    { cPtr_typeGalgasUndefinedClassType * ptrExtraire_ = dynamic_cast <cPtr_typeGalgasUndefinedClassType *> (var_cas_type_semantique.getPtr ()) ;
      if (ptrExtraire_ == NULL) {
        if (var_cas_type_semantique.getPtr () != NULL) {
          TC_UniqueArray <C_String> message1_ (1 COMMA_HERE) ;
          C_String message2_ ;
          message1_ (0 COMMA_HERE) << cPtr_typeGalgasUndefinedClassType::static_string_message_messageGalgasType () ;
          message2_ << var_cas_type_semantique (HERE)->message_messageGalgasType () ;
          var_cas_outGalgasTypeName.signalExtractError (lexique_var_, message1_, message2_ SOURCE_FILE_AT_LINE (4923)) ;
        }
      }else{
        macroValidPointer (ptrExtraire_) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_4908_28_importGrammarForSemantics (galgas_scanner & lexique_var_,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_outGalgasTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_4908_28_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4939_29_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_action) ;
  GGS_lstring  var_cas_nomAction ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomAction.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_empty (HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteActionExterne::constructor_new (var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_nomAction, var_cas_entite SOURCE_FILE_AT_LINE (4963)) ;
  GGS_typeEntityToGenerate  var_cas_ea ;
  var_cas_ea = GGS_typeActionExterneAengendrer::constructor_new (var_cas_nomAction, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_ea) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4939_29_importSemantics (galgas_scanner & lexique_var_,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_action) ;
  GGS_lstring  var_cas_actionName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_actionName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_empty (HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  nt_formal_arguments_list_ (lexique_var_, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteActionExterne::constructor_new (var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_actionName, var_cas_entite SOURCE_FILE_AT_LINE (4991)) ;
  var_cas_ioExternActionMap.methode_insertKey (lexique_var_, var_cas_actionName, var_cas_signature, GGS_bool (true, true) SOURCE_FILE_AT_LINE (4992)) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_4939_29_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_action) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  nt_formal_arguments_list_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5002_29_ (galgas_scanner & lexique_var_,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_enum) ;
  GGS_lstring  var_cas_enumTypeName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_enumTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_enumConstantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_enumConstantMap::constructor_empty (HERE) ;
  GGS_typeEnumMessageMap  var_cas_enumMessageMap ;
  var_cas_enumMessageMap = GGS_typeEnumMessageMap::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_constantName ;
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        var_cas_constantName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
        var_cas_constantMap.methode_insertKey (lexique_var_, var_cas_constantName SOURCE_FILE_AT_LINE (5022)) ;
      switch (select_repeat_semantics_parser_54 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_55 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          GGS_lstring  var_cas_messageName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_messageName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          GGS_typeEnumCstMessageStringMap  var_cas_cstMessageStringMap ;
          var_cas_cstMessageStringMap = GGS_typeEnumCstMessageStringMap::constructor_empty (HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                GGS_lstring  var_cas_cstName ;
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                var_cas_cstName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
                GGS_lstring  var_cas_cstString ;
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                var_cas_cstString.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
                var_cas_cstMessageStringMap.methode_insertKey (lexique_var_, var_cas_cstName, var_cas_cstString SOURCE_FILE_AT_LINE (5041)) ;
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              switch (select_repeat_semantics_parser_56 (lexique_var_)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
          GGS_L_lstringList  var_cas_messageStringList ;
          var_cas_messageStringList = GGS_L_lstringList::constructor_empty (HERE) ;
          GGS_enumConstantMap::element_type * operand_194061 = var_cas_constantMap.firstObject () ;
          while ((operand_194061 != NULL)) {
            macroValidPointer (operand_194061) ;
            GGS_lstring  var_cas_name ;
            var_cas_name = GGS_lstring::constructor_new (operand_194061->mKey.reader_value (), GGS_location (lexique_var_) COMMA_HERE) ;
            GGS_lstring  var_cas_cstString ;
            var_cas_cstMessageStringMap.methode_searchKey (lexique_var_, var_cas_name, var_cas_cstString SOURCE_FILE_AT_LINE (5051)) ;
            var_cas_messageStringList.addAssign_operation (var_cas_cstString) ;
            operand_194061 = operand_194061->nextObject () ;
          }
          var_cas_enumMessageMap.methode_insertKey (lexique_var_, var_cas_messageName, var_cas_messageStringList SOURCE_FILE_AT_LINE (5055)) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  GGS_typeEntityToGenerate  var_cas_e ;
  var_cas_e = GGS_enumGalgasType::constructor_new (var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_e) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_enum::constructor_new (var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_ee ;
  var_cas_ee = GGS_typeEntiteType::constructor_new (var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_enumTypeName, var_cas_ee SOURCE_FILE_AT_LINE (5067)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5002_29_importSemantics (galgas_scanner & lexique_var_,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_enum) ;
  GGS_lstring  var_cas_enumTypeName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_enumTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_enumConstantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_enumConstantMap::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_constantName ;
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        var_cas_constantName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
        var_cas_constantMap.methode_insertKey (lexique_var_, var_cas_constantName SOURCE_FILE_AT_LINE (5086)) ;
      switch (select_repeat_semantics_parser_54 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_typeEnumMessageMap  var_cas_exEnumMessageMap ;
  var_cas_exEnumMessageMap = GGS_typeEnumMessageMap::constructor_empty (HERE) ;
  GGS_enumMessageMap  var_cas_enumMessageMap ;
  var_cas_enumMessageMap = GGS_enumMessageMap::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_55 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          GGS_lstring  var_cas_messageName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_messageName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          var_cas_enumMessageMap.methode_insertKey (lexique_var_, var_cas_messageName SOURCE_FILE_AT_LINE (5100)) ;
          GGS_L_lstringList  var_cas_messageStringList ;
          var_cas_messageStringList = GGS_L_lstringList::constructor_empty (HERE) ;
          var_cas_exEnumMessageMap.methode_insertKey (lexique_var_, var_cas_messageName, var_cas_messageStringList SOURCE_FILE_AT_LINE (5102)) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              switch (select_repeat_semantics_parser_56 (lexique_var_)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_enum::constructor_new (var_cas_enumTypeName, var_cas_constantMap, var_cas_exEnumMessageMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.methode_insertKey (lexique_var_, var_cas_enumTypeName, var_cas_e SOURCE_FILE_AT_LINE (5119)) ;
  GGS_TypeModel  var_cas_type ;
  var_cas_type = GGS_EnumModel::constructor_new (var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  var_cas_ioModelMap.methode_insertKey (lexique_var_, var_cas_enumTypeName, var_cas_type SOURCE_FILE_AT_LINE (5121)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5002_29_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_enum) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      switch (select_repeat_semantics_parser_54 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semantics_parser_55 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2D_3E) ;
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
              switch (select_repeat_semantics_parser_56 (lexique_var_)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*

