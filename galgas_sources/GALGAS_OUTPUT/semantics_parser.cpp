//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semantics_parser.cpp'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       june 10th, 2008, at 19h2'49"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "semantics_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semantics_parser.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "galgasTemplateGrammar.h"
#include "galgas_LL1_grammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_549_4_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &var_cas_ioLexiqueMapForUse,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &var_cas_ioTreewalkingComponentMap,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  GGS_lstring  var_cas_componentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_string var_cas_defLexique ;
  var_cas_defLexique = GGS_string (true, "") ;
  GGS_ModelMap  var_cas_modelMap ;
  var_cas_modelMap = GGS_ModelMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_ActionMap  var_cas_actionMap ;
  var_cas_actionMap = GGS_ActionMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_inclusionsForHeaderFile ;
  GGS_stringset  var_cas_inclusionsForImplementationFile ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentEntitiesMap ;
  GGS_stringset  var_cas_classNamesSet ;
  var_cas_classNamesSet = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  GGS_stringset  var_cas_includedGrammarComponents ;
  GGS_entityToImplementMap  var_cas_allMetamodelClassMap ;
  nt_import_headers_semantics_and_grammars_ (_inLexique, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_includedGrammarComponents, var_cas_ioLexiqueMapForUse, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap, var_cas_ioGrammarComponentsMap, var_cas_ioOptionsComponentsMap, var_cas_inclusionsForImplementationFile, var_cas_inclusionsForHeaderFile, var_cas_optionsComponentsMapForUse, var_cas_modelMap, var_cas_actionMap, var_cas_componentEntitiesMap, var_cas_tableEnAvant, var_cas_allMetamodelClassMap, var_cas_ioSemanticContext) ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_24064 = _inLexique.parsingContext () ;
    GGS_typeTableRoutinesAimplementer  var_cas_UNUSED_tableRoutinesAimplementer ;
    var_cas_UNUSED_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer ::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_UNUSED_tableNomRoutinesDeclarees ;
    var_cas_UNUSED_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees ::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableEnAvant  var_cas_UNUSED_tableEnAvant ;
    var_cas_UNUSED_tableEnAvant = var_cas_tableEnAvant ;
    GGS_M_semanticsEntitiesForUse  var_cas_UNUSED_componentSemanticsEntitiesMap ;
    var_cas_UNUSED_componentSemanticsEntitiesMap = var_cas_componentEntitiesMap ;
    GGS_EXsemanticContext var_cas_UNUSED_semanticContext ;
    var_cas_UNUSED_semanticContext = GGS_EXsemanticContext::constructor_new (_inLexique, GGS_M_filewrappers ::constructor_emptyMap (_inLexique COMMA_HERE), GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) COMMA_HERE) ;
    { bool syntaxRepeat_0 = true ;
      while (syntaxRepeat_0) {
        switch (select_repeat_semantics_parser_0 (_inLexique)) {
          case 2 : {
            nt_semantics_declaration_importSemantics (_inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_UNUSED_componentSemanticsEntitiesMap, var_cas_UNUSED_tableNomRoutinesDeclarees, var_cas_UNUSED_tableEnAvant, var_cas_UNUSED_tableRoutinesAimplementer, var_cas_ioTreewalkingComponentMap, var_cas_UNUSED_semanticContext) ;
            } break ;
          default :
            syntaxRepeat_0 = false ;
            break ;
        }
      }
    }
  //--- Branch of parse/rewind instruction
    _inLexique.setParsingContext (context_24064) ;
    GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer ;
    var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer ::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees ;
    var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees ::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
    var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList ::constructor_emptyList (_inLexique COMMA_HERE) ;
    GGS_treewalkingRoutineHeaderMap  var_cas_treewalkingRoutineHeaderMap ;
    var_cas_treewalkingRoutineHeaderMap = GGS_treewalkingRoutineHeaderMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
    { bool syntaxRepeat_0 = true ;
      while (syntaxRepeat_0) {
        switch (select_repeat_semantics_parser_0 (_inLexique)) {
          case 2 : {
            nt_semantics_declaration_ (_inLexique, var_cas_componentEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_optionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioTreewalkingComponentMap, var_cas_ioSemanticContext) ;
            } break ;
          default :
            syntaxRepeat_0 = false ;
            break ;
        }
      }
    }
  //--- End of parse/rewind instruction
  if (((var_cas_ioSemanticsComponentsMap.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (647)) COMMA_SOURCE_FILE_AT_LINE (647)))._operator_not ()).isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap ;
    var_cas_optionsComponentsMap = GGS_M_optionComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
    var_cas_ioSemanticsComponentsMap.modifier_insertKey (_inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentEntitiesMap COMMA_SOURCE_FILE_AT_LINE (649)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  {
    GGS_typeTableNomRoutinesDeclarees::cEnumerator enumerator_24630 (var_cas_tableNomRoutinesDeclarees, true) ;
    const GGS_typeTableNomRoutinesDeclarees::cElement * operand_24630 = NULL ;
    while (((operand_24630 = (GGS_typeTableNomRoutinesDeclarees::cElement *) enumerator_24630.nextObject ()))) {
      macroValidPointer (operand_24630) ;
      if (((var_cas_tableRoutinesAimplementer.reader_hasKey (_inLexique, operand_24630->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (666)) COMMA_SOURCE_FILE_AT_LINE (666)))._operator_not ()).isBuiltAndTrue ()) {
        operand_24630->mKey.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the routine '"))._operator_concat (operand_24630->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (667))))._operator_concat (GGS_string (true, "' is not implemented in the component")) COMMA_SOURCE_FILE_AT_LINE (668)) ;
      }
    }
  }
  {
    GGS_typeTableEnAvant::cEnumerator enumerator_24980 (var_cas_tableEnAvant, true) ;
    const GGS_typeTableEnAvant::cElement * operand_24980 = NULL ;
    while (((operand_24980 = (GGS_typeTableEnAvant::cElement *) enumerator_24980.nextObject ()))) {
      macroValidPointer (operand_24980) ;
      if (((var_cas_componentEntitiesMap.reader_hasKey (_inLexique, operand_24980->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (673)) COMMA_SOURCE_FILE_AT_LINE (673)))._operator_not ()).isBuiltAndTrue ()) {
        operand_24980->mKey.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '@"))._operator_concat (operand_24980->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (674))))._operator_concat (GGS_string (true, "' forward type is not implemented in the component")) COMMA_SOURCE_FILE_AT_LINE (675)) ;
      }
    }
  }
  if (var_cas_componentName._isBuilt () &&
      var_cas_inclusionsForHeaderFile._isBuilt () &&
      var_cas_defLexique._isBuilt () &&
      var_cas_listeEntitesAengendrer._isBuilt () &&
      var_cas_inclusionsForImplementationFile._isBuilt ()) {
    ::routine_generateSemanticsComponent (_inLexique,  var_cas_componentName,  var_cas_inclusionsForHeaderFile,  var_cas_defLexique,  var_cas_listeEntitesAengendrer,  var_cas_inclusionsForImplementationFile COMMA_SOURCE_FILE_AT_LINE (677)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_549_4_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_treewalkingComponents  &/* var_cas_ioTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_549_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &var_cas_ioTreewalkingComponentMap,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext,
                                GGS_stringset  &var_cas_ioImportedSemanticsComponentNameSet) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  GGS_lstring  var_cas_componentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  ::routine_enterBuiltinTypes (_inLexique,  var_cas_componentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (714)) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  var_cas_includedMetamodelComponents = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_ModelMap  var_cas_modelMap ;
  GGS_ActionMap  var_cas_actionMap ;
  nt_import_headers_semantics_and_grammars_importSemantics (_inLexique, var_cas_ioSemanticsComponentsMap, var_cas_includedSemanticsComponents, var_cas_includedOptionComponents, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap, var_cas_ioSemanticContext, var_cas_ioImportedSemanticsComponentNameSet) ;
  GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer ;
  var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees ;
  var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_importSemantics (_inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioTreewalkingComponentMap, var_cas_ioSemanticContext) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  if (((var_cas_ioSemanticsComponentsMap.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (751)) COMMA_SOURCE_FILE_AT_LINE (751)))._operator_not ()).isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap ;
    var_cas_optionsComponentsMap = GGS_M_optionComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
    var_cas_ioSemanticsComponentsMap.modifier_insertKey (_inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (753)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_549_4_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_549_4_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_treewalkingComponents  &/* var_cas_ioTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_549_4_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_semantics_parser_0 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "parse_semantics_component_for_importing"     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_parse_semantics_component_for_importing (C_Compiler & _inLexique,
                                const GGS_lstring   var_cas_inFileName,
                                GGS_M_semanticsComponents  & var_cas_ioSemanticsMapForUse,
                                GGS_M_metamodelsComponents  & var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  & var_cas_ioTreewalkingComponentMap,
                                GGS_EXsemanticContext & var_cas_ioSemanticContext,
                                GGS_stringset  & var_cas_ioImportedSemanticsComponentNameSet COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_parse_semantics_component_for_importing at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  galgas_LL1_grammar::_performSourceFileParsing_importSemantics (_inLexique,
                                  NULL,
                                  var_cas_inFileName,
                                  var_cas_ioSemanticsMapForUse,
                                  var_cas_ioMetamodelComponentMap,
                                  var_cas_ioTreewalkingComponentMap,
                                  var_cas_ioSemanticContext,
                                  var_cas_ioImportedSemanticsComponentNameSet
                                  COMMA_SOURCE_FILE_AT_LINE (829)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_parse_semantics_component_for_importing\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'import_headers_semantics_and_grammars'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_844_4_ (galgas_scanner & _inLexique,
                                GGS_stringset  &var_cas_outImportedSemanticsComponentNameSet,
                                GGS_stringset  &var_cas_outIncludedMetamodelComponents,
                                GGS_stringset  &var_cas_outImportedOptionComponents,
                                GGS_stringset  &var_cas_outImportedGrammarComponents,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &var_cas_ioTreewalkingComponentMap,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_stringset  &var_cas_outInclusionsForImplementationFile,
                                GGS_stringset  &var_cas_outInclusionsForHeaderFile,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_entityToImplementMap  &var_cas_outAllMetamodelClassMap,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  var_cas_outAllMetamodelClassMap = GGS_entityToImplementMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outActionMap = GGS_ActionMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outInclusionsForHeaderFile = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outInclusionsForImplementationFile = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedSemanticsComponentNameSet = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outIncludedMetamodelComponents = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedOptionComponents = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedGrammarComponents = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_ioOptionsComponentsMapForUse = GGS_M_optionComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap = GGS_ModelMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "char"), GGS_location (_inLexique) COMMA_HERE), GGS_CharModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (879)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "string"), GGS_location (_inLexique) COMMA_HERE), GGS_StringModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (881)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "uint"), GGS_location (_inLexique) COMMA_HERE), GGS_UIntModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (883)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "sint"), GGS_location (_inLexique) COMMA_HERE), GGS_SIntModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (885)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "uint64"), GGS_location (_inLexique) COMMA_HERE), GGS_UInt64Model ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (887)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "sint64"), GGS_location (_inLexique) COMMA_HERE), GGS_SInt64Model ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (889)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "bool"), GGS_location (_inLexique) COMMA_HERE), GGS_BoolModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (891)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "double"), GGS_location (_inLexique) COMMA_HERE), GGS_DoubleModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (893)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "lchar"), GGS_location (_inLexique) COMMA_HERE), GGS_LCharModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (895)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "lstring"), GGS_location (_inLexique) COMMA_HERE), GGS_LStringModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (897)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "luint"), GGS_location (_inLexique) COMMA_HERE), GGS_LUIntModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (899)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "lsint"), GGS_location (_inLexique) COMMA_HERE), GGS_LSIntModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (901)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "luint64"), GGS_location (_inLexique) COMMA_HERE), GGS_LUInt64Model ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (903)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "lsint64"), GGS_location (_inLexique) COMMA_HERE), GGS_LSInt64Model ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (905)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "lbool"), GGS_location (_inLexique) COMMA_HERE), GGS_LBoolModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (907)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "ldouble"), GGS_location (_inLexique) COMMA_HERE), GGS_LDoubleModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (909)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "location"), GGS_location (_inLexique) COMMA_HERE), GGS_LocationModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (911)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "stringset"), GGS_location (_inLexique) COMMA_HERE), GGS_StringsetModel ::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (913)) ;
  ::routine_enterBuiltinTypes (_inLexique,  var_cas_ioComponentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (913)) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents ;
  var_cas_alreadyImportedSemanticsComponents = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents ;
  var_cas_alreadyImportedMetamodelComponents = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
              GGS_lstring  var_cas_treewalkingComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_treewalkingComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_treewalkingComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (928))) ;
              var_cas_outInclusionsForImplementationFile._addAssign_operation ((var_cas_treewalkingComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (929)))._operator_concat (GGS_string (true, ".h"))) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              GGS_lstring  var_cas_fileName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_fileName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              ::routine_parse_semantics_component_for_importing (_inLexique,  var_cas_fileName,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_ioTreewalkingComponentMap,  var_cas_ioSemanticContext,  var_cas_outImportedSemanticsComponentNameSet COMMA_SOURCE_FILE_AT_LINE (932)) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              GGS_lstring  var_cas_optionComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_optionComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (945))) ;
              var_cas_outImportedOptionComponents._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (946))) ;
              GGS_M_cli_options  var_cas_boolOptionsMap ;
              GGS_M_cli_options  var_cas_uintOptionsMap ;
              GGS_M_cli_options  var_cas_stringOptionsMap ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              GGS_lstring  var_cas_fileName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_fileName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              GGS_M_optionComponents  var_cas_importedOptionComponentsMap ;
              var_cas_importedOptionComponentsMap = GGS_M_optionComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              nt_parse_option_component_for_importing_ (_inLexique, var_cas_fileName, var_cas_importedOptionComponentsMap) ;
              const GGS_M_optionComponents  _temp_34961 = var_cas_importedOptionComponentsMap ;
              if (_temp_34961._isBuilt ()) {
                _temp_34961 (HERE)->method_searchKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap COMMA_SOURCE_FILE_AT_LINE (958)) ;
              }
              var_cas_ioOptionsComponentsMapForUse.modifier_insertKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap COMMA_SOURCE_FILE_AT_LINE (959)) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              GGS_lstring  var_cas_grammarComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_grammarComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForImplementationFile._addAssign_operation ((var_cas_grammarComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (964)))._operator_concat (GGS_string (true, ".h"))) ;
              var_cas_outImportedGrammarComponents._addAssign_operation (var_cas_grammarComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (965))) ;
              GGS_M_grammarComponents  var_cas_grammarComponentsMap ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              GGS_lstring  var_cas_sourceFile ;
              _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              var_cas_grammarComponentsMap = GGS_M_grammarComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              nt_parse_grammar_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_grammarComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioTreewalkingComponentMap, var_cas_ioSemanticContext) ;
              GGS_M_nonterminalSymbolAltsForGrammar  var_cas_nonterminalSymbolParametersMap ;
              GGS_lstring  var_cas_lexiqueClassName ;
              GGS_M_optionComponents  automatic_var_0 ;
              const GGS_M_grammarComponents  _temp_36001 = var_cas_grammarComponentsMap ;
              if (_temp_36001._isBuilt ()) {
                _temp_36001 (HERE)->method_searchKey (_inLexique, var_cas_grammarComponentName, var_cas_nonterminalSymbolParametersMap, var_cas_lexiqueClassName, automatic_var_0 COMMA_SOURCE_FILE_AT_LINE (981)) ;
              }
              GGS_M_nonterminalSymbolAlts  var_cas_grammarAltMap ;
              var_cas_grammarAltMap = GGS_M_nonterminalSymbolAlts ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              {
                GGS_M_nonterminalSymbolAltsForGrammar::cEnumerator enumerator_36161 (var_cas_nonterminalSymbolParametersMap, true) ;
                const GGS_M_nonterminalSymbolAltsForGrammar::cElement * operand_36161 = NULL ;
                while (((operand_36161 = (GGS_M_nonterminalSymbolAltsForGrammar::cElement *) enumerator_36161.nextObject ()))) {
                  macroValidPointer (operand_36161) ;
                  GGS_L_EXsignature  var_cas_formalParametersList ;
                  var_cas_formalParametersList = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
                  {
                    GGS_L_signature::cEnumerator enumerator_36336 (operand_36161->mInfo.mFormalParametersList, true) ;
                    const GGS_L_signature::cElement * operand_36336 = NULL ;
                    while (((operand_36336 = (GGS_L_signature::cElement *) enumerator_36336.nextObject ()))) {
                      macroValidPointer (operand_36336) ;
                      GGS_AC_semanticsEntity  var_cas_e ;
                      const GGS_M_semanticsEntitiesForUse  _temp_36487 = var_cas_ioComponentSemanticsEntitiesMap ;
                      if (_temp_36487._isBuilt ()) {
                        _temp_36487 (HERE)->method_searchKey (_inLexique, operand_36336->mGalgasTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (987)) ;
                      }
                      GGS_AC_galgasType  var_cas_type ;
                      var_cas_type = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_e.getPtr (), true, operand_36336->mGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (988)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (988)) ;
                      var_cas_formalParametersList._addAssign_operation (var_cas_type, operand_36336->mFormalArgumentPassingMode) ;
                    }
                  }
                  var_cas_grammarAltMap.modifier_insertKey (_inLexique, operand_36161->mKey, var_cas_formalParametersList, operand_36161->mInfo.mReturnedEntityTypeName COMMA_SOURCE_FILE_AT_LINE (991)) ;
                }
              }
              GGS_AC_semanticsEntity  var_cas_e ;
              var_cas_e = GGS_C_grammarForSemantics ::constructor_new (_inLexique, var_cas_grammarAltMap, var_cas_lexiqueClassName COMMA_HERE) ;
              var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_grammarComponentName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (994)) ;
              GGS_lstring  var_cas_path ;
              var_cas_path = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_extension ;
              var_cas_extension = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "h"), GGS_location (_inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_fileNameWithPath ;
              if (var_cas_path._isBuilt () &&
                  var_cas_grammarComponentName._isBuilt () &&
                  var_cas_extension._isBuilt ()) {
                ::routine_buildFileNameWithPath (_inLexique,  var_cas_fileNameWithPath,  var_cas_path,  var_cas_grammarComponentName,  var_cas_extension COMMA_SOURCE_FILE_AT_LINE (997)) ;
              }
              var_cas_outInclusionsForImplementationFile._addAssign_operation (var_cas_fileNameWithPath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (999))) ;
              {
                GGS_M_grammarComponents::cEnumerator enumerator_37281 (var_cas_grammarComponentsMap, true) ;
                const GGS_M_grammarComponents::cElement * operand_37281 = NULL ;
                while (((operand_37281 = (GGS_M_grammarComponents::cElement *) enumerator_37281.nextObject ()))) {
                  macroValidPointer (operand_37281) ;
                  if (((var_cas_ioGrammarComponentsMap.reader_hasKey (_inLexique, operand_37281->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1004)) COMMA_SOURCE_FILE_AT_LINE (1004)))._operator_not ()).isBuiltAndTrue ()) {
                    var_cas_ioGrammarComponentsMap.modifier_insertKey (_inLexique, operand_37281->mKey, operand_37281->mInfo.mNonterminalSymbolParametersMap, operand_37281->mInfo.mLexiqueName, operand_37281->mInfo.mOptionsMap COMMA_SOURCE_FILE_AT_LINE (1005)) ;
                  }
                }
              }
              } break ;
            case 5 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              GGS_lstring  var_cas_componentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1017))) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              GGS_lstring  var_cas_sourceFile ;
              _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              if (((var_cas_outImportedSemanticsComponentNameSet.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1021)) COMMA_SOURCE_FILE_AT_LINE (1021)))._operator_not ()).isBuiltAndTrue ()) {
                var_cas_outImportedSemanticsComponentNameSet._addAssign_operation (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1022))) ;
                ::routine_parse_semantics_component_for_importing (_inLexique,  var_cas_sourceFile,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_ioTreewalkingComponentMap,  var_cas_ioSemanticContext,  var_cas_outImportedSemanticsComponentNameSet COMMA_SOURCE_FILE_AT_LINE (1022)) ;
                GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
                GGS_M_optionComponents  var_cas_importedOptionsComponentsMap ;
                GGS_ModelMap  automatic_var_1 ;
                GGS_ActionMap  automatic_var_2 ;
                GGS_stringset  automatic_var_3 ;
                GGS_stringset  automatic_var_4 ;
                GGS_stringset  automatic_var_5 ;
                const GGS_M_semanticsComponents  _temp_38696 = var_cas_ioSemanticsComponentsMap ;
                if (_temp_38696._isBuilt ()) {
                  _temp_38696 (HERE)->method_searchKey (_inLexique, var_cas_componentName, automatic_var_1, automatic_var_2, automatic_var_3, automatic_var_4, automatic_var_5, var_cas_importedOptionsComponentsMap, var_cas_importedEntities COMMA_SOURCE_FILE_AT_LINE (1034)) ;
                }
                {
                  GGS_M_semanticsEntitiesForUse::cEnumerator enumerator_38792 (var_cas_importedEntities, true) ;
                  const GGS_M_semanticsEntitiesForUse::cElement * operand_38792 = NULL ;
                  while (((operand_38792 = (GGS_M_semanticsEntitiesForUse::cElement *) enumerator_38792.nextObject ()))) {
                    macroValidPointer (operand_38792) ;
                    if (((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, operand_38792->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1036)) COMMA_SOURCE_FILE_AT_LINE (1036)))._operator_not ()).isBuiltAndTrue ()) {
                      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, operand_38792->mKey, operand_38792->mInfo.aDefEntite COMMA_SOURCE_FILE_AT_LINE (1037)) ;
                    }
                  }
                }
                {
                  GGS_M_optionComponents::cEnumerator enumerator_39220 (var_cas_importedOptionsComponentsMap, true) ;
                  const GGS_M_optionComponents::cElement * operand_39220 = NULL ;
                  while (((operand_39220 = (GGS_M_optionComponents::cElement *) enumerator_39220.nextObject ()))) {
                    macroValidPointer (operand_39220) ;
                    if (((var_cas_ioOptionsComponentsMapForUse.reader_hasKey (_inLexique, operand_39220->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1043)) COMMA_SOURCE_FILE_AT_LINE (1043)))._operator_not ()).isBuiltAndTrue ()) {
                      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (operand_39220->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1044))))._operator_concat (GGS_string (true, "' option component must have been imported")) COMMA_SOURCE_FILE_AT_LINE (1044)) ;
                    }
                  }
                }
              }
              ::routine_importSemanticsComponent (_inLexique,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName COMMA_SOURCE_FILE_AT_LINE (1047)) ;
              } break ;
            case 6 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
              GGS_lstring  var_cas_metamodelComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_metamodelComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1063))) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              GGS_lstring  var_cas_sourceFile ;
              _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              ::routine_parse_semantics_component_for_importing (_inLexique,  var_cas_sourceFile,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_ioTreewalkingComponentMap,  var_cas_ioSemanticContext,  var_cas_outImportedSemanticsComponentNameSet COMMA_SOURCE_FILE_AT_LINE (1066)) ;
              if (((var_cas_outIncludedMetamodelComponents.reader_hasKey (_inLexique, var_cas_metamodelComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1075)) COMMA_SOURCE_FILE_AT_LINE (1075)))._operator_not ()).isBuiltAndTrue ()) {
                GGS_entityToImplementMap  var_cas_metamodelClassMap ;
                GGS_lstring  automatic_var_6 ;
                GGS_stringset  automatic_var_7 ;
                const GGS_M_metamodelsComponents  _temp_40543 = var_cas_ioMetamodelComponentMap ;
                if (_temp_40543._isBuilt ()) {
                  _temp_40543 (HERE)->method_searchKey (_inLexique, var_cas_metamodelComponentName, automatic_var_6, var_cas_metamodelClassMap, automatic_var_7 COMMA_SOURCE_FILE_AT_LINE (1077)) ;
                }
                {
                  GGS_entityToImplementMap::cEnumerator enumerator_40621 (var_cas_metamodelClassMap, true) ;
                  const GGS_entityToImplementMap::cElement * operand_40621 = NULL ;
                  while (((operand_40621 = (GGS_entityToImplementMap::cElement *) enumerator_40621.nextObject ()))) {
                    macroValidPointer (operand_40621) ;
                    var_cas_outAllMetamodelClassMap.modifier_insertKey (_inLexique, operand_40621->mKey, operand_40621->mInfo.mAllMetamodelPropertyMap, operand_40621->mInfo.mIsAbstract, operand_40621->mInfo.mCurrentMetamodelPropertyMap, operand_40621->mInfo.mSuperEntityName, operand_40621->mInfo.mAncestorClassesMap, operand_40621->mInfo.mPropertyList, operand_40621->mInfo.mMetamodelName, operand_40621->mInfo.mID COMMA_SOURCE_FILE_AT_LINE (1087)) ;
                    GGS_AC_galgasType  var_cas_t ;
                    var_cas_t = GGS_typeGalgas_singleReferenceEntity ::constructor_new (_inLexique, operand_40621->mKey, operand_40621->mInfo.mPropertyList, operand_40621->mInfo.mAncestorClassesMap.reader_allKeys (_inLexique COMMA_SOURCE_FILE_AT_LINE (1101)) COMMA_HERE) ;
                    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, operand_40621->mKey, GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_t COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (1103)) ;
                    var_cas_t = GGS_typeGalgas_multipleReferenceEntity ::constructor_new (_inLexique, operand_40621->mKey, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint ::constructor_max (_inLexique COMMA_HERE), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
                    GGS_lstring  var_cas_ListOf_entityName ;
                    var_cas_ListOf_entityName = GGS_lstring ::constructor_new (_inLexique, (GGS_string (true, "ListOf"))._operator_concat (operand_40621->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1112)).reader_stringByCapitalizingFirstCharacter (_inLexique COMMA_SOURCE_FILE_AT_LINE (1112))), operand_40621->mKey.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1112)) COMMA_HERE) ;
                    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_ListOf_entityName, GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_t COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (1113)) ;
                  }
                }
              }
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1120))) ;
              var_cas_outIncludedMetamodelComponents._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1121))) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_844_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_stringset  &var_cas_outIncludedSemanticsComponents,
                                GGS_stringset  &var_cas_outIncludedOptionComponents,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &var_cas_ioTreewalkingComponentMap,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext,
                                GGS_stringset  &var_cas_ioImportedSemanticsComponentNameSet) {
  var_cas_outActionMap = GGS_ActionMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap = GGS_ModelMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outIncludedSemanticsComponents = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outIncludedOptionComponents = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents ;
  var_cas_alreadyImportedSemanticsComponents = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents ;
  var_cas_alreadyImportedMetamodelComponents = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              GGS_lstring  var_cas_optionComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_optionComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outIncludedOptionComponents._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1159))) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              nt_parse_option_component_for_importing_parse (_inLexique) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              nt_parse_grammar_component_for_importing_parse (_inLexique) ;
              } break ;
            case 5 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              GGS_lstring  var_cas_componentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outIncludedSemanticsComponents._addAssign_operation (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1173))) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              GGS_lstring  var_cas_sourceFile ;
              _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              ::routine_parse_semantics_component_for_importing (_inLexique,  var_cas_sourceFile,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_ioTreewalkingComponentMap,  var_cas_ioSemanticContext,  var_cas_ioImportedSemanticsComponentNameSet COMMA_SOURCE_FILE_AT_LINE (1176)) ;
              GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
              GGS_ModelMap  automatic_var_8 ;
              GGS_ActionMap  automatic_var_9 ;
              GGS_stringset  automatic_var_10 ;
              GGS_stringset  automatic_var_11 ;
              GGS_stringset  automatic_var_12 ;
              GGS_M_optionComponents  automatic_var_13 ;
              const GGS_M_semanticsComponents  _temp_45813 = var_cas_ioSemanticsComponentsMap ;
              if (_temp_45813._isBuilt ()) {
                _temp_45813 (HERE)->method_searchKey (_inLexique, var_cas_componentName, automatic_var_8, automatic_var_9, automatic_var_10, automatic_var_11, automatic_var_12, automatic_var_13, var_cas_importedEntities COMMA_SOURCE_FILE_AT_LINE (1207)) ;
              }
              {
                GGS_M_semanticsEntitiesForUse::cEnumerator enumerator_45880 (var_cas_importedEntities, true) ;
                const GGS_M_semanticsEntitiesForUse::cElement * operand_45880 = NULL ;
                while (((operand_45880 = (GGS_M_semanticsEntitiesForUse::cElement *) enumerator_45880.nextObject ()))) {
                  macroValidPointer (operand_45880) ;
                  if (((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, operand_45880->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1209)) COMMA_SOURCE_FILE_AT_LINE (1209)))._operator_not ()).isBuiltAndTrue ()) {
                    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, operand_45880->mKey, operand_45880->mInfo.aDefEntite COMMA_SOURCE_FILE_AT_LINE (1210)) ;
                  }
                }
              }
              ::routine_importSemanticsComponent (_inLexique,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName COMMA_SOURCE_FILE_AT_LINE (1212)) ;
              } break ;
            case 6 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
              GGS_lstring  var_cas_metamodelComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_metamodelComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              GGS_lstring  var_cas_sourceFile ;
              _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              ::routine_parse_semantics_component_for_importing (_inLexique,  var_cas_sourceFile,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_ioTreewalkingComponentMap,  var_cas_ioSemanticContext,  var_cas_ioImportedSemanticsComponentNameSet COMMA_SOURCE_FILE_AT_LINE (1229)) ;
              GGS_lstring  automatic_var_14 ;
              GGS_entityToImplementMap  automatic_var_15 ;
              GGS_stringset  automatic_var_16 ;
              const GGS_M_metamodelsComponents  _temp_46930 = var_cas_ioMetamodelComponentMap ;
              if (_temp_46930._isBuilt ()) {
                _temp_46930 (HERE)->method_searchKey (_inLexique, var_cas_metamodelComponentName, automatic_var_14, automatic_var_15, automatic_var_16 COMMA_SOURCE_FILE_AT_LINE (1238)) ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_844_4_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
      switch (select_repeat_semantics_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semantics_parser_2 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              nt_parse_option_component_for_importing_parse (_inLexique) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              nt_parse_grammar_component_for_importing_parse (_inLexique) ;
              } break ;
            case 5 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            case 6 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1250_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_routineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_routineName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1279)) COMMA_SOURCE_FILE_AT_LINE (1279))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  _temp_48741 = var_cas_ioComponentSemanticsEntitiesMap ;
    if (_temp_48741._isBuilt ()) {
      _temp_48741 (HERE)->method_searchKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1281)) ;
    }
    GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
    var_cas_listeDeTypesPrecedenteDeclaration = GGS_typeEntiteRoutine::_castFrom (_inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1283)).reader_aListeArgumentsFormels (_inLexique COMMA_SOURCE_FILE_AT_LINE (1283)) ;
    ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (1283)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1290)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteRoutine ::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1292)) ;
  }
  switch (select_semantics_parser_3 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_ioInstructionList ;
      var_cas_ioInstructionList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_entityPropertyMap  var_cas_propertyMap ;
      var_cas_propertyMap = GGS_entityPropertyMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_treewalkingRoutineHeaderMap  var_cas_treewalkingRoutineHeaderMap ;
      var_cas_treewalkingRoutineHeaderMap = GGS_treewalkingRoutineHeaderMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_entityToImplementMap  var_cas_metamodelEntityMap ;
      var_cas_metamodelEntityMap = GGS_entityToImplementMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_semantic_instructions_list_ (_inLexique, var_cas_treewalkingRoutineHeaderMap, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_tableArgumentsMethode, var_cas_ioInstructionList, var_cas_propertyMap, var_cas_metamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_ioSemanticContext) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      GGS_typeEntityToGenerate  var_cas_ea ;
      var_cas_ea = GGS_typeRoutineAengendrer ::constructor_new (_inLexique, var_cas_routineName, var_cas_listeTypeEtNomsArguments, var_cas_ioInstructionList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_ea) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1325)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1250_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_routineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  var_cas_ioExternActionMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_signature, GGS_bool (true, false) COMMA_SOURCE_FILE_AT_LINE (1354)) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_routineName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1357)) COMMA_SOURCE_FILE_AT_LINE (1357))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  _temp_51842 = var_cas_ioComponentSemanticsEntitiesMap ;
    if (_temp_51842._isBuilt ()) {
      _temp_51842 (HERE)->method_searchKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1359)) ;
    }
    GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
    var_cas_listeDeTypesPrecedenteDeclaration = GGS_typeEntiteRoutine::_castFrom (_inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1361)).reader_aListeArgumentsFormels (_inLexique COMMA_SOURCE_FILE_AT_LINE (1361)) ;
    ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (1361)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1368)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteRoutine ::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1370)) ;
  }
  switch (select_semantics_parser_3 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      nt_semantic_instructions_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1381)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1250_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  switch (select_semantics_parser_3 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      nt_semantic_instructions_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1391_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName,
                                GGS_string &var_cas_outSuperClassMessage) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClassName = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_outSuperClassMessage = GGS_string (true, "") ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1391_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outMessageMap = GGS_classMessageMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClasses = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outAttributeList = GGS_typeListModel ::constructor_emptyList (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1391_4_parse (galgas_scanner & /* _inLexique */) {
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1433_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName,
                                GGS_string &var_cas_outSuperClassMessage) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outSuperClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  _temp_55453 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (_temp_55453._isBuilt ()) {
    _temp_55453 (HERE)->method_searchKey (_inLexique, var_cas_outSuperClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1448)) ;
  }
  GGS_AC_galgasType  var_cas_typeUtilisateur ;
  var_cas_typeUtilisateur = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1450)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (1450)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_typeUtilisateur.getPtr (), true, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1451)) ;
  var_cas_tableDesMethodes = var_cas_classType.reader_mReaderMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1452)) ;
  var_cas_listeTousAttributsSemantiques = var_cas_classType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1453)) ;
  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1454)) ;
  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1455)) ;
  var_cas_tableAttributs = var_cas_classType.reader_mNonExternAttributesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1456)) ;
  var_cas_outSuperClassMessage = var_cas_classType.reader_mClassMessage (_inLexique COMMA_SOURCE_FILE_AT_LINE (1457)) ;
  var_cas_tableDesClassesAncetres.modifier_insertKey (_inLexique, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1459)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1433_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits) {
  GGS_lstring  var_cas_superClassName ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_superClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  _temp_56926 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (_temp_56926._isBuilt ()) {
    _temp_56926 (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1478)) ;
  }
  GGS_AC_galgasType  var_cas_typeUtilisateur ;
  var_cas_typeUtilisateur = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1480)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (1480)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_typeUtilisateur.getPtr (), true, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1481)) ;
  var_cas_tableDesMethodes = var_cas_classType.reader_mReaderMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1482)) ;
  var_cas_listeTousAttributsSemantiques = var_cas_classType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1483)) ;
  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1484)) ;
  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1485)) ;
  var_cas_tableAttributs = var_cas_classType.reader_mNonExternAttributesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1486)) ;
  var_cas_tableDesClassesAncetres.modifier_insertKey (_inLexique, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1489)) ;
  GGS_TypeModel  var_cas_type ;
  const GGS_ModelMap  _temp_57728 = var_cas_ioModelMap ;
  if (_temp_57728._isBuilt ()) {
    _temp_57728 (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (1492)) ;
  }
  { const GGS_TypeModel _var_58189 = var_cas_type ; // CAST instruction
    if (_var_58189.getPtr () != NULL) {
      macroValidPointer (_var_58189.getPtr ()) ;
      if (dynamic_cast <cPtr_ClassModel *> (_var_58189.getPtr ()) != NULL) {
        const GGS_ClassModel var_cas_model (_var_58189.getPtr ()) ;
        var_cas_outSuperClasses = var_cas_model.reader_mSuperClasses (_inLexique COMMA_SOURCE_FILE_AT_LINE (1495)) ;
        var_cas_outAttributeList = var_cas_model.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1496)) ;
        var_cas_outMessageMap = var_cas_model.reader_mMessageMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1497)) ;
      }else{
        var_cas_superClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '@"))._operator_concat (var_cas_superClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1499))))._operator_concat (GGS_string (true, "' type is not a class")) COMMA_SOURCE_FILE_AT_LINE (1500)) ;
        var_cas_outSuperClasses._drop_operation () ;
        var_cas_outAttributeList._drop_operation () ;
        var_cas_outMessageMap._drop_operation () ;
      }
    }
  }
  var_cas_outSuperClasses._addAssign_operation (var_cas_superClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1502))) ;
  var_cas_outMessageMap = GGS_classMessageMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClasses = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outAttributeList = GGS_typeListModel ::constructor_emptyList (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1433_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1516_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_bool var_cas_estAbstraite ;
  switch (select_semantics_parser_4 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      var_cas_estAbstraite = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_estAbstraite = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_abstractClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_abstractClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_5 (_inLexique)) {
    case 1 : {
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1538)) COMMA_SOURCE_FILE_AT_LINE (1538)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1539)) COMMA_SOURCE_FILE_AT_LINE (1539))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType ::constructor_new (_inLexique, var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (1541)) ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_string var_cas_superClassMessage ;
      GGS_lstring  automatic_var_17 ;
      nt_parent_class_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap, automatic_var_17, var_cas_superClassMessage) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
      var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
      var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
      var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes ;
      var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      GGS_string var_cas_classMessage ;
      var_cas_classMessage = GGS_string (true, "") ;
      { bool syntaxRepeat_6 = true ;
        while (syntaxRepeat_6) {
          switch (select_repeat_semantics_parser_6 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              switch (select_semantics_parser_7 (_inLexique)) {
                case 1 : {
                  GGS_lstring  var_cas_messageText ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (((var_cas_classMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1586)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the class message is already defined") COMMA_SOURCE_FILE_AT_LINE (1587)) ;
                  }else if (((var_cas_messageText.ggs_string ().reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1588)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the class message string should not be empty") COMMA_SOURCE_FILE_AT_LINE (1589)) ;
                  }else{
                    var_cas_classMessage = var_cas_messageText.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1591)) ;
                  }
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_messageName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_lstring  var_cas_messageText ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (((var_cas_inheritedMessageMap.reader_hasKey (_inLexique, var_cas_messageName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1600)) COMMA_SOURCE_FILE_AT_LINE (1600)))._operator_not ()).isBuiltAndTrue ()) {
                    var_cas_messageMapForHeirs.modifier_insertKey (_inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (1601)) ;
                  }
                  var_cas_tableMessagesClasseConcrete.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageText COMMA_SOURCE_FILE_AT_LINE (1603)) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_method_ (_inLexique, var_cas_estAbstraite, var_cas_listeAttributsSemantiquesCourants, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_classMessage, var_cas_ioSemanticContext) ;
              } break ;
            case 5 : {
              nt_overrided_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_classMessage, var_cas_ioSemanticContext) ;
              } break ;
            default :
              syntaxRepeat_6 = false ;
              break ;
          }
        }
      }
      if ((((var_cas_superClassMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1654)))._operator_strictSup (GGS_uint (true, 0U)))._operator_and ((var_cas_classMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1654)))._operator_isEqual (GGS_uint (true, 0U)))).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this class should defined a class message, as it inherits from a class that does") COMMA_SOURCE_FILE_AT_LINE (1655)) ;
      }
      {
        GGS_typeClassInheritedMessagesMap::cEnumerator enumerator_63682 (var_cas_inheritedMessageMap, true) ;
        const GGS_typeClassInheritedMessagesMap::cElement * operand_63682 = NULL ;
        while (((operand_63682 = (GGS_typeClassInheritedMessagesMap::cElement *) enumerator_63682.nextObject ()))) {
          macroValidPointer (operand_63682) ;
          if (((var_cas_tableMessagesClasseConcrete.reader_hasKey (_inLexique, operand_63682->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1659)) COMMA_SOURCE_FILE_AT_LINE (1659)))._operator_not ()).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the message '"))._operator_concat (operand_63682->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1660))))._operator_concat (GGS_string (true, "' is not defined")) COMMA_SOURCE_FILE_AT_LINE (1660)) ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasClassType ::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_classMessage COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1674)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_classToImplement ::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_estAbstraite, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesClassesAncetres, var_cas_tableMessagesClasseConcrete, var_cas_classMessage COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1516_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  GGS_bool var_cas_estAbstraite ;
  switch (select_semantics_parser_4 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      var_cas_estAbstraite = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_estAbstraite = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_abstractClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_abstractClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_5 (_inLexique)) {
    case 1 : {
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1712)) COMMA_SOURCE_FILE_AT_LINE (1712)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1713)) COMMA_SOURCE_FILE_AT_LINE (1713))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType ::constructor_new (_inLexique, var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (1715)) ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_stringset  var_cas_superClasses ;
      GGS_typeListModel  var_cas_attributeList ;
      GGS_classMessageMap  var_cas_messageMap ;
      nt_parent_class_importSemantics (_inLexique, var_cas_ioModelMap, var_cas_superClasses, var_cas_attributeList, var_cas_messageMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeList, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
      var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
      var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
      var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes ;
      var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
      var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
      var_cas_optionsComponentsMapForUse = GGS_M_optionComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_string var_cas_classMessage ;
      var_cas_classMessage = GGS_string (true, "") ;
      { bool syntaxRepeat_6 = true ;
        while (syntaxRepeat_6) {
          switch (select_repeat_semantics_parser_6 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              switch (select_semantics_parser_7 (_inLexique)) {
                case 1 : {
                  GGS_lstring  var_cas_messageText ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (((var_cas_classMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1765)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the class message is already defined") COMMA_SOURCE_FILE_AT_LINE (1766)) ;
                  }else if (((var_cas_messageText.ggs_string ().reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1767)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the class message string should not be empty") COMMA_SOURCE_FILE_AT_LINE (1768)) ;
                  }else{
                    var_cas_classMessage = var_cas_messageText.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1770)) ;
                  }
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_messageName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_lstring  var_cas_messageText ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (((var_cas_inheritedMessageMap.reader_hasKey (_inLexique, var_cas_messageName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1779)) COMMA_SOURCE_FILE_AT_LINE (1779)))._operator_not ()).isBuiltAndTrue ()) {
                    var_cas_messageMapForHeirs.modifier_insertKey (_inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (1780)) ;
                  }
                  var_cas_tableMessagesClasseConcrete.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageText COMMA_SOURCE_FILE_AT_LINE (1782)) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_method_ (_inLexique, var_cas_estAbstraite, var_cas_listeAttributsSemantiquesCourants, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_classMessage, var_cas_ioSemanticContext) ;
              } break ;
            case 5 : {
              nt_overrided_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_classMessage, var_cas_ioSemanticContext) ;
              } break ;
            default :
              syntaxRepeat_6 = false ;
              break ;
          }
        }
      }
      {
        GGS_typeClassInheritedMessagesMap::cEnumerator enumerator_69661 (var_cas_inheritedMessageMap, true) ;
        const GGS_typeClassInheritedMessagesMap::cElement * operand_69661 = NULL ;
        while (((operand_69661 = (GGS_typeClassInheritedMessagesMap::cElement *) enumerator_69661.nextObject ()))) {
          macroValidPointer (operand_69661) ;
          if (((var_cas_tableMessagesClasseConcrete.reader_hasKey (_inLexique, operand_69661->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1833)) COMMA_SOURCE_FILE_AT_LINE (1833)))._operator_not ()).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the message '"))._operator_concat (operand_69661->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1834))))._operator_concat (GGS_string (true, "' is not defined")) COMMA_SOURCE_FILE_AT_LINE (1834)) ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasClassType ::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_classMessage COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1848)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ClassModel ::constructor_new (_inLexique, GGS_bool (true, true), var_cas_superClasses, var_cas_attributeList, var_cas_messageMap COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (1851)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1516_4_parse (galgas_scanner & _inLexique) {
  switch (select_semantics_parser_4 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_5 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      nt_parent_class_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      { bool syntaxRepeat_6 = true ;
        while (syntaxRepeat_6) {
          switch (select_repeat_semantics_parser_6 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              switch (select_semantics_parser_7 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_method_parse (_inLexique) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_parse (_inLexique) ;
              } break ;
            case 5 : {
              nt_overrided_method_parse (_inLexique) ;
              } break ;
            default :
              syntaxRepeat_6 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'abstract_method'             *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_abstract_method_semantics_parser_1859_4_ (galgas_scanner & _inLexique,
                                const GGS_bool var_cas_inIsAbstract,
                                GGS_typeListeAttributsSemantiques  &/* var_cas_listeAttributsSemantiquesCourants */,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  if (((var_cas_inIsAbstract)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a concrete class should not declare an abstract method") COMMA_SOURCE_FILE_AT_LINE (1871)) ;
  }
  GGS_lstring  var_cas_nomMethode ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  var_cas_tableDesMethodes.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (1887)) ;
  GGS_typeInstructionList  var_cas_listeInstructions ;
  var_cas_listeInstructions = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableMethodesAimplementer.modifier_insertAbstract (_inLexique, var_cas_nomMethode, var_cas_listeDeTypes, var_cas_listeTypeEtNomsArguments, var_cas_listeInstructions COMMA_SOURCE_FILE_AT_LINE (1889)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_abstract_method_semantics_parser_1859_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parse_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_method_semantics_parser_1895_4_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                const GGS_typeTableMethodes  var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributsHerites,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outMethodName,
                                GGS_typeInstructionList  &var_cas_outInstructionsList,
                                GGS_L_EXsignature  &var_cas_outMethodSignature,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outMethodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap ;
  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  {
    GGS_typeSemanticAttributesMap::cEnumerator enumerator_73385 (var_cas_tableAttributsHerites, true) ;
    const GGS_typeSemanticAttributesMap::cElement * operand_73385 = NULL ;
    while (((operand_73385 = (GGS_typeSemanticAttributesMap::cElement *) enumerator_73385.nextObject ()))) {
      macroValidPointer (operand_73385) ;
      GGS_typeCplusPlusName  var_cas_nomCpp ;
      var_cas_nomCpp = GGS_typeDirectName ::constructor_new (_inLexique, operand_73385->mKey.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1920)), operand_73385->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1920)) COMMA_HERE) ;
      var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_73385->mKey, operand_73385->mInfo.mAttributType, var_cas_nomCpp COMMA_SOURCE_FILE_AT_LINE (1921)) ;
    }
  }
  GGS_lstring  var_cas_me_Constant ;
  var_cas_me_Constant = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "self"), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_me_constantCppName ;
  var_cas_me_constantCppName = GGS_typeCppThisName ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_typeDefinition ;
  var_cas_typeDefinition = GGS_typeGalgasClassType ::constructor_new (_inLexique, var_cas_inCurrentClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, var_cas_me_Constant, var_cas_typeDefinition, var_cas_me_constantCppName COMMA_SOURCE_FILE_AT_LINE (1935)) ;
  GGS_lstring  var_cas_super_Constant ;
  var_cas_super_Constant = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "super"), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_super_constantCppName ;
  var_cas_super_constantCppName = GGS_typeCppInheritedName ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_typeDefinition = GGS_typeGalgasClassType ::constructor_new (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, var_cas_super_Constant, var_cas_typeDefinition, var_cas_super_constantCppName COMMA_SOURCE_FILE_AT_LINE (1949)) ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_outMethodSignature, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  var_cas_componentSemanticsEntitiesMap = var_cas_ioComponentSemanticsEntitiesMap ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_typeDefinition COMMA_HERE) ;
  var_cas_componentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_inCurrentClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1964)) ;
  var_cas_outInstructionsList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_entityPropertyMap  var_cas_propertyMap ;
  var_cas_propertyMap = GGS_entityPropertyMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_treewalkingRoutineHeaderMap  var_cas_treewalkingRoutineHeaderMap ;
  var_cas_treewalkingRoutineHeaderMap = GGS_treewalkingRoutineHeaderMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap  var_cas_metamodelEntityMap ;
  var_cas_metamodelEntityMap = GGS_entityToImplementMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_treewalkingRoutineHeaderMap, var_cas_tableEnAvant, var_cas_componentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_outInstructionsList, var_cas_propertyMap, var_cas_metamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_method_semantics_parser_1895_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'non_abstract_method'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_non_abstract_method_semantics_parser_1986_4_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributs,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_method_ (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_inOptionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_inClassMessage, var_cas_inSemanticContext) ;
  var_cas_tableDesMethodes.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (2028)) ;
  var_cas_tableMethodesAimplementer.modifier_insertNotAbstract (_inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList COMMA_SOURCE_FILE_AT_LINE (2029)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_non_abstract_method_semantics_parser_1986_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  nt_parse_method_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'overrided_method'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_overrided_method_semantics_parser_2037_4_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributs,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_method_ (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_inOptionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_inClassMessage, var_cas_inSemanticContext) ;
  GGS_L_EXsignature  var_cas_listeDeTypesMethodeOriginale ;
  const GGS_typeTableMethodes  _temp_79325 = var_cas_tableDesMethodes ;
  if (_temp_79325._isBuilt ()) {
    _temp_79325 (HERE)->method_searchKey (_inLexique, var_cas_methodName, var_cas_listeDeTypesMethodeOriginale COMMA_SOURCE_FILE_AT_LINE (2082)) ;
  }
  ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesMethodeOriginale,  var_cas_methodSignature,  GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2082)) ;
  var_cas_tableMethodesAimplementer.modifier_insertNotAbstract (_inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList COMMA_SOURCE_FILE_AT_LINE (2089)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_overrided_method_semantics_parser_2037_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  nt_parse_method_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'formal_arguments_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_arguments_list_semantics_parser_2100_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_EXsignature  &var_cas_listeDeTypes,
                                GGS_typeVariablesMap  &var_cas_tableArgumentsMethode,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_L_signature  &var_cas_outSignatureForGrammar) {
  var_cas_listeDeTypes = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_listeTypeEtNomsArguments = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_outSignatureForGrammar = GGS_L_signature ::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_8 = true ;
    while (syntaxRepeat_8) {
      switch (select_repeat_semantics_parser_8 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, true) ;
          switch (select_semantics_parser_9 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2130)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2130)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2132)) ;
              } break ;
            case 2 : {
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2135)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2135)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
              var_cas_tableArgumentsMethode.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2137)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_10 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2156)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2156)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, true)) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2158)) ;
              } break ;
            case 2 : {
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2162)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2162)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, true)) ;
              var_cas_tableArgumentsMethode.modifier_insertInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2164)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          switch (select_semantics_parser_11 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2183)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2183)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, false)) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2185)) ;
              } break ;
            case 2 : {
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2188)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2188)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, false)) ;
              var_cas_tableArgumentsMethode.modifier_insertInOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2190)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_typeCplusPlusName  var_cas_natureNom ;
          var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2207)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2207)) COMMA_HERE) ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, false) ;
          var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
          var_cas_tableArgumentsMethode.modifier_insertOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2210)) ;
          } break ;
        default :
          syntaxRepeat_8 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_arguments_list_semantics_parser_2100_4_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_L_signature  &var_cas_outSignature) {
  var_cas_outSignature = GGS_L_signature ::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_8 = true ;
    while (syntaxRepeat_8) {
      switch (select_repeat_semantics_parser_8 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_9 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_10 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_11 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_EXformalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_8 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_arguments_list_semantics_parser_2100_4_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_8 = true ;
    while (syntaxRepeat_8) {
      switch (select_repeat_semantics_parser_8 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_9 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_10 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_11 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_8 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'type_parsing'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_type_parsing_semantics_parser_2267_4_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_outTypeDefinition,
                                GGS_lstring  &var_cas_outTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2274)) COMMA_SOURCE_FILE_AT_LINE (2274))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  _temp_87135 = var_cas_ioComponentSemanticsEntitiesMap ;
    if (_temp_87135._isBuilt ()) {
      _temp_87135 (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2276)) ;
    }
    var_cas_outTypeDefinition = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (2277)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2277)) ;
  }else if ((var_cas_inTableEnAvant.reader_hasKey (_inLexique, var_cas_outTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2278)) COMMA_SOURCE_FILE_AT_LINE (2278))).isBuiltAndTrue ()) {
    const GGS_typeTableEnAvant  _temp_87345 = var_cas_inTableEnAvant ;
    if (_temp_87345._isBuilt ()) {
      _temp_87345 (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_outTypeDefinition COMMA_SOURCE_FILE_AT_LINE (2279)) ;
    }
  }else{
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '@"))._operator_concat (var_cas_outTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2281))))._operator_concat (GGS_string (true, "' type is not defined")) COMMA_SOURCE_FILE_AT_LINE (2281)) ;
    var_cas_outTypeDefinition._drop_operation () ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_type_parsing_semantics_parser_2267_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2292_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_inTargetVarName,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_AC_galgasType  var_cas_targetVarType ;
  GGS_typeCplusPlusName  var_cas_targetVarCppName ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, var_cas_targetVarType, var_cas_targetVarCppName COMMA_SOURCE_FILE_AT_LINE (2317)) ;
  ::routine_checkAssignmentTypesCompatibility (_inLexique,  var_cas_targetVarType,  var_cas_sourceType,  GGS_location (_inLexique),  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (2317)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_assignmentInstruction ::constructor_new (_inLexique, var_cas_targetVarCppName, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2292_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_2331_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_typeCplusPlusName  var_cas_inTargetVarCppName,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_3D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_string var_cas_sourceExpressionConverter ;
  if (var_cas_inTargetType._isBuilt () && var_cas_sourceType._isBuilt ()) {
    cPtr_AC_galgasType * ptr_90421 = var_cas_inTargetType (HERE) ;
    cPtr_AC_galgasType * ptr_90435 = var_cas_sourceType (HERE) ;
    cPtr_typeGalgas_string * operand_90421 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_90421) ;
    cPtr_typeGalgas_string * operand_90435 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_90435) ;
    if ((operand_90421 != NULL) && (operand_90435 != NULL)) {
      var_cas_sourceExpressionConverter = GGS_string (true, "") ;
    }else{
      cPtr_typeGalgas_string * operand_90421 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_90421) ;
      cPtr_typeGalgas_lstring * operand_90435 = dynamic_cast <cPtr_typeGalgas_lstring *> (ptr_90435) ;
      if ((operand_90421 != NULL) && (operand_90435 != NULL)) {
        var_cas_sourceExpressionConverter = GGS_string (true, "ggs_string") ;
      }else{
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "for '.=' operator, "))._operator_concat (var_cas_inTargetType.reader_messageGalgasType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2363))))._operator_concat (GGS_string (true, " target object type is not compatible with ")))._operator_concat (var_cas_sourceType.reader_messageGalgasType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2364))))._operator_concat (GGS_string (true, " source expression type")) COMMA_SOURCE_FILE_AT_LINE (2365)) ;
        var_cas_sourceExpressionConverter._drop_operation () ;
      }
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_dotEqualInstruction ::constructor_new (_inLexique, var_cas_inTargetVarCppName, var_cas_inStructAttributeList, var_cas_sourceExpression, var_cas_sourceExpressionConverter COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_2331_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_3D) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'input_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_input_parameters_list_semantics_parser_2381_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_assignedVariables  &var_cas_listeAffectationParametresEffectifs,
                                GGS_typeCplusPlusNameList  &var_cas_outAllVariablesList,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  GGS_typeListeCibles  var_cas_listeCibles ;
  var_cas_listeCibles = GGS_typeListeCibles ::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_12 = true ;
    while (syntaxRepeat_12) {
      switch (select_repeat_semantics_parser_12 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          switch (select_semantics_parser_13 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_nomVariableDest ;
              switch (select_semantics_parser_14 (_inLexique)) {
                case 1 : {
                  GGS_AC_galgasType  var_cas_definitionType ;
                  GGS_lstring  var_cas_typeName ;
                  nt_type_parsing_ (_inLexique, GGS_typeTableEnAvant ::constructor_emptyMap (_inLexique COMMA_HERE), var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomVariableDest) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_nomCppVariable ;
                  var_cas_nomCppVariable = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomVariableDest.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2405)), var_cas_nomVariableDest.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2405)) COMMA_HERE) ;
                  var_cas_ioVariablesMap.modifier_insertLocalVariable (_inLexique, var_cas_nomVariableDest, var_cas_definitionType, var_cas_nomCppVariable COMMA_SOURCE_FILE_AT_LINE (2406)) ;
                  var_cas_ioInstructionList._addAssign_operation (GGS_typeInstructionDeclarationVarLocale ::constructor_new (_inLexique, var_cas_nomCppVariable, var_cas_definitionType COMMA_HERE)) ;
                  } break ;
                case 2 : {
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomVariableDest) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              GGS_AC_galgasType  var_cas_typeVarDest ;
              GGS_typeCplusPlusName  var_cas_nomCppDest ;
              var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomVariableDest, var_cas_typeVarDest, var_cas_nomCppDest COMMA_SOURCE_FILE_AT_LINE (2413)) ;
              var_cas_listeCibles._addAssign_operation (GGS_typeEntiteDest ::constructor_new (_inLexique, var_cas_typeVarDest, var_cas_nomCppDest, GGS_location (_inLexique) COMMA_HERE)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              var_cas_listeCibles._addAssign_operation (GGS_typeJoker ::constructor_new (_inLexique COMMA_HERE)) ;
              } break ;
            case 3 : {
              GGS_luint  var_cas_jokerCountWithLocation ;
              _inLexique._assignFromAttribute_uint32value (var_cas_jokerCountWithLocation) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              GGS_uint  var_cas_jokerCount ;
              var_cas_jokerCount = var_cas_jokerCountWithLocation.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (2422)) ;
              GGS_uint _variant_93103 = var_cas_jokerCount._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (2423)) ;
              GGS_bool _condition_93103 (_variant_93103._isBuilt (), true) ;
              while (_condition_93103.isBuiltAndTrue ()) {
                _condition_93103 = (var_cas_jokerCount)._operator_strictSup (GGS_uint (true, 0U)) ;
                if (_condition_93103.isBuiltAndTrue ()) {
                  if (_variant_93103.uintValue () == 0) {
                    _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (2426)) ;
                    _condition_93103 = GGS_bool (true, false) ;
                  }else{
                    _variant_93103._decrement_operation (_inLexique COMMA_HERE) ;
                    var_cas_listeCibles._addAssign_operation (GGS_typeJoker ::constructor_new (_inLexique COMMA_HERE)) ;
                    var_cas_jokerCount._decrement_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (2426)) ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_12 = false ;
          break ;
      }
    }
  }
  GGS_bool var_cas_ellipsis ;
  switch (select_semantics_parser_15 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_2E_2E) COMMA_HERE) ;
      var_cas_ellipsis = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_ellipsis = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  if (((var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2438)))._operator_strictInf (var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2438)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "too much arguments: "))._operator_concat (var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2439)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2439))))._operator_concat (GGS_string (true, " expected, ")))._operator_concat (var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2440)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2440))))._operator_concat (GGS_string (true, " found")) COMMA_SOURCE_FILE_AT_LINE (2441)) ;
    var_cas_outAllVariablesList._drop_operation () ;
    var_cas_listeAffectationParametresEffectifs._drop_operation () ;
  }else if ((((var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2442)))._operator_strictSup (var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2442))))._operator_and ((var_cas_ellipsis)._operator_not ())).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "argument(s) missing: "))._operator_concat (var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2443)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2443))))._operator_concat (GGS_string (true, " expected, ")))._operator_concat (var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2444)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2444))))._operator_concat (GGS_string (true, " found")) COMMA_SOURCE_FILE_AT_LINE (2445)) ;
    var_cas_outAllVariablesList._drop_operation () ;
    var_cas_listeAffectationParametresEffectifs._drop_operation () ;
  }else{
    var_cas_listeAffectationParametresEffectifs = GGS_L_assignedVariables ::constructor_emptyList (_inLexique COMMA_HERE) ;
    var_cas_outAllVariablesList = GGS_typeCplusPlusNameList ::constructor_emptyList (_inLexique COMMA_HERE) ;
    {
      GGS_typeListeAttributsSemantiques::cEnumerator enumerator_94095 (var_cas_listeAttributsSemantiques, true) ;
      const GGS_typeListeAttributsSemantiques::cElement * operand_94095 = NULL ;
      GGS_typeListeCibles::cEnumerator enumerator_94179 (var_cas_listeCibles, true) ;
      const GGS_typeListeCibles::cElement * operand_94179 = NULL ;
      while (((operand_94095 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_94095.nextObject ()))
          && ((operand_94179 = enumerator_94179.nextObject ()))) {
        macroValidPointer (operand_94095) ;
        macroValidPointer (operand_94179) ;
        GGS_lstring  var_cas_nomAttributSource ;
        var_cas_nomAttributSource = operand_94095->aNomAttribut ;
        const GGS_typeCible  _temp_94297 = operand_94179->aCible ;
        if (_temp_94297._isBuilt ()) {
          _temp_94297 (HERE)->method_verifierType (_inLexique, operand_94095->mAttributType, var_cas_nomAttributSource, var_cas_listeAffectationParametresEffectifs, var_cas_outAllVariablesList COMMA_SOURCE_FILE_AT_LINE (2452)) ;
        }
      }
    }
  }
  GGS_typeCplusPlusName  var_cas_nullName ;
  var_cas_nullName = GGS_typeNullName ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  if (var_cas_outAllVariablesList._isBuilt () &&
      var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2459))._isBuilt () &&
      var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2460))._isBuilt () &&
      var_cas_nullName._isBuilt ()) {
    ::routine_appendJokersIfNeeded (_inLexique,  var_cas_outAllVariablesList,  var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2459)),  var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2460)),  var_cas_nullName COMMA_SOURCE_FILE_AT_LINE (2456)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_input_parameters_list_semantics_parser_2381_4_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_12 = true ;
    while (syntaxRepeat_12) {
      switch (select_repeat_semantics_parser_12 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          switch (select_semantics_parser_13 (_inLexique)) {
            case 1 : {
              switch (select_semantics_parser_14 (_inLexique)) {
                case 1 : {
                  nt_type_parsing_parse (_inLexique) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_12 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_15 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_2E_2E) COMMA_HERE) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2477_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_AC_galgasType  var_cas_targetType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetType, var_cas_nomCppVariableSource COMMA_SOURCE_FILE_AT_LINE (2490)) ;
  GGS_lstringlist  var_cas_structAttributeList ;
  var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_16 = true ;
    while (syntaxRepeat_16) {
      switch (select_repeat_semantics_parser_16 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
          GGS_lstring  var_cas_structAttributeName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_structAttributeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_structAttributeList._addAssign_operation (var_cas_structAttributeName) ;
          GGS_typeGalgasStructType  var_cas_structType ;
          var_cas_structType = GGS_typeGalgasStructType::_castFrom (_inLexique, var_cas_targetType.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (2499)) ;
          GGS_bool var_cas_found ;
          var_cas_found = GGS_bool (true, false) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_96542 (var_cas_structType.reader_mAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (2501)), true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_96542 = NULL ;
            while (((operand_96542 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_96542.nextObject ()))
                && ((var_cas_found)._operator_not ().isBuiltAndTrue ())) {
              macroValidPointer (operand_96542) ;
              var_cas_found = (operand_96542->aNomAttribut.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2502)))._operator_isEqual (var_cas_structAttributeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2502))) ;
              var_cas_targetType = operand_96542->mAttributType ;
            }
          }
          if (((var_cas_found)._operator_not ()).isBuiltAndTrue ()) {
            var_cas_structAttributeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '@"))._operator_concat (var_cas_structType.reader_mStructTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (2506))))._operator_concat (GGS_string (true, "' does not define a '")))._operator_concat (var_cas_structAttributeName))._operator_concat (GGS_string (true, "' attribute")) COMMA_SOURCE_FILE_AT_LINE (2506)) ;
          }
          } break ;
        default :
          syntaxRepeat_16 = false ;
          break ;
      }
    }
  }
  nt_instruction_beginning_with_identifier_and_structure_access_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inMetamodelEntityMap, var_cas_inSemanticContext, var_cas_nomCppVariableSource, var_cas_targetType, var_cas_structAttributeList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2477_4_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_16 = true ;
    while (syntaxRepeat_16) {
      switch (select_repeat_semantics_parser_16 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_16 = false ;
          break ;
      }
    }
  }
  nt_instruction_beginning_with_identifier_and_structure_access_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_2533_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_typeCplusPlusName  var_cas_inNomCppVariableSource,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  { const GGS_AC_galgasType _var_99144 = var_cas_inTargetType ; // CAST instruction
    if (_var_99144.getPtr () != NULL) {
      macroValidPointer (_var_99144.getPtr ()) ;
      if (typeid (cPtr_typeGalgas_multipleReferenceEntity) == typeid (* (_var_99144.getPtr ()))) {
        const GGS_typeGalgas_multipleReferenceEntity var_cas_mre (_var_99144.getPtr ()) ;
        var_cas_formalParametersList = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        const GGS_M_semanticsEntitiesForUse  _temp_98847 = var_cas_ioComponentSemanticsEntitiesMap ;
        if (_temp_98847._isBuilt ()) {
          _temp_98847 (HERE)->method_searchKey (_inLexique, var_cas_mre.reader_mEntityTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (2553)), var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2553)) ;
        }
        GGS_AC_galgasType  var_cas_elementType ;
        var_cas_elementType = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2554)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2554)) ;
        var_cas_formalParametersList._addAssign_operation (var_cas_elementType, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE)) ;
      }else{
        const GGS_AC_galgasType  _temp_99085 = var_cas_inTargetType ;
        if (_temp_99085._isBuilt ()) {
          _temp_99085 (HERE)->method_handleAddAssignOperatorCall (_inLexique, GGS_location (_inLexique), var_cas_formalParametersList COMMA_SOURCE_FILE_AT_LINE (2557)) ;
        }
      }
    }
  }
  GGS_typeTypesList  var_cas_typeList ;
  var_cas_typeList = GGS_typeTypesList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeExpressionList  var_cas_expressionList ;
  var_cas_expressionList = GGS_typeExpressionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_17 = true ;
    while (syntaxRepeat_17) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList._addAssign_operation (var_cas_resultType, GGS_location (_inLexique)) ;
        var_cas_expressionList._addAssign_operation (var_cas_expression) ;
      switch (select_repeat_semantics_parser_17 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_17 = false ;
          break ;
      }
    }
  }
  if (((var_cas_formalParametersList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2579)))._operator_isNotEqual (var_cas_typeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2579)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, (((var_cas_typeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2580)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2580)))._operator_concat (GGS_string (true, " argument(s), while ")))._operator_concat (var_cas_formalParametersList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2580)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2580))))._operator_concat (GGS_string (true, " are needed")) COMMA_SOURCE_FILE_AT_LINE (2580)) ;
  }else{
    {
      GGS_typeListeAttributsSemantiques::cEnumerator enumerator_99924 (var_cas_formalParametersList, true) ;
      const GGS_typeListeAttributsSemantiques::cElement * operand_99924 = NULL ;
      GGS_typeTypesList::cEnumerator enumerator_99994 (var_cas_typeList, true) ;
      const GGS_typeTypesList::cElement * operand_99994 = NULL ;
      while (((operand_99924 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_99924.nextObject ()))
          && ((operand_99994 = enumerator_99994.nextObject ()))) {
        macroValidPointer (operand_99924) ;
        macroValidPointer (operand_99994) ;
        ::routine_checkAssignmentTypesCompatibility (_inLexique,  operand_99924->mAttributType,  operand_99994->mType,  operand_99994->mEndOfExpressionLocation,  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (2583)) ;
      }
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeAppendInstruction ::constructor_new (_inLexique, var_cas_inNomCppVariableSource, var_cas_inStructAttributeList, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_2533_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
  { bool syntaxRepeat_17 = true ;
    while (syntaxRepeat_17) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        nt_expression_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_17 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_17 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_2604_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_typeCplusPlusName  var_cas_inNomCppVariableSource,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3D) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  const GGS_AC_galgasType  _temp_101638 = var_cas_inTargetType ;
  if (_temp_101638._isBuilt ()) {
    _temp_101638 (HERE)->method_handleMinusAssignOperatorCall (_inLexique, GGS_location (_inLexique), var_cas_formalParametersList COMMA_SOURCE_FILE_AT_LINE (2619)) ;
  }
  GGS_typeTypesList  var_cas_typeList ;
  var_cas_typeList = GGS_typeTypesList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeExpressionList  var_cas_expressionList ;
  var_cas_expressionList = GGS_typeExpressionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_18 = true ;
    while (syntaxRepeat_18) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList._addAssign_operation (var_cas_resultType, GGS_location (_inLexique)) ;
        var_cas_expressionList._addAssign_operation (var_cas_expression) ;
      switch (select_repeat_semantics_parser_18 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_18 = false ;
          break ;
      }
    }
  }
  if (((var_cas_formalParametersList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2640)))._operator_isNotEqual (var_cas_typeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2640)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, (((var_cas_typeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2641)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2641)))._operator_concat (GGS_string (true, " argument(s), while ")))._operator_concat (var_cas_formalParametersList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2641)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2641))))._operator_concat (GGS_string (true, " are needed")) COMMA_SOURCE_FILE_AT_LINE (2641)) ;
  }else{
    {
      GGS_typeListeAttributsSemantiques::cEnumerator enumerator_102466 (var_cas_formalParametersList, true) ;
      const GGS_typeListeAttributsSemantiques::cElement * operand_102466 = NULL ;
      GGS_typeTypesList::cEnumerator enumerator_102536 (var_cas_typeList, true) ;
      const GGS_typeTypesList::cElement * operand_102536 = NULL ;
      while (((operand_102466 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_102466.nextObject ()))
          && ((operand_102536 = enumerator_102536.nextObject ()))) {
        macroValidPointer (operand_102466) ;
        macroValidPointer (operand_102536) ;
        ::routine_checkAssignmentTypesCompatibility (_inLexique,  operand_102466->mAttributType,  operand_102536->mType,  operand_102536->mEndOfExpressionLocation,  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (2644)) ;
      }
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeRemoveInstruction ::constructor_new (_inLexique, var_cas_inNomCppVariableSource, var_cas_inStructAttributeList, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_2604_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3D) COMMA_HERE) ;
  { bool syntaxRepeat_18 = true ;
    while (syntaxRepeat_18) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        nt_expression_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_18 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_18 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_2665_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */,
                                const GGS_typeCplusPlusName  var_cas_inNomCppVariableSource,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_2B) COMMA_HERE) ;
  const GGS_AC_galgasType  _temp_104152 = var_cas_inTargetType ;
  if (_temp_104152._isBuilt ()) {
    _temp_104152 (HERE)->method_handleIncrementOperatorCall (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2679)) ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeIncrementInstruction ::constructor_new (_inLexique, var_cas_inNomCppVariableSource, var_cas_inStructAttributeList, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_2665_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_2B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier_and_structure_access'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_2693_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */,
                                const GGS_typeCplusPlusName  var_cas_inNomCppVariableSource,
                                const GGS_AC_galgasType  var_cas_inTargetType,
                                const GGS_lstringlist  var_cas_inStructAttributeList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_2D) COMMA_HERE) ;
  const GGS_AC_galgasType  _temp_105586 = var_cas_inTargetType ;
  if (_temp_105586._isBuilt ()) {
    _temp_105586 (HERE)->method_handleDecrementOperatorCall (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2707)) ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeDecrementInstruction ::constructor_new (_inLexique, var_cas_inNomCppVariableSource, var_cas_inStructAttributeList, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_and_structure_access_semantics_parser_2693_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_2D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'actual_parameters_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_actual_parameters_list_semantics_parser_2717_4_ (galgas_scanner & _inLexique,
                                const GGS_L_EXsignature  var_cas_listeTypesParametresFormels,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_outExpressionList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap) ;
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique,  var_cas_listeTypesParametresFormels,  var_cas_listeTypesParametresEffectifs,  GGS_location (_inLexique),  var_cas_ioInstructionList,  var_cas_outExpressionList COMMA_SOURCE_FILE_AT_LINE (2734)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_actual_parameters_list_semantics_parser_2717_4_parse (galgas_scanner & _inLexique) {
  nt_parse_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'parse_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_parameters_list_semantics_parser_2750_4_ (galgas_scanner & _inLexique,
                                GGS_L_actualParametersSignature  &var_cas_listeTypesParametresEffectifs,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_outExpressionList = GGS_typeExpressionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_listeTypesParametresEffectifs = GGS_L_actualParametersSignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_exclusiveVariables ;
  var_cas_exclusiveVariables = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_19 = true ;
    while (syntaxRepeat_19) {
      switch (select_repeat_semantics_parser_19 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_expressionType ;
          GGS_typeExpression  var_cas_expressionValue ;
          nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expressionValue, var_cas_expressionType) ;
          GGS_EXactualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_EXactualParametersPassingMode::constructor_parameterOut (_inLexique COMMA_HERE) ;
          var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_expressionType, var_cas_parameterPassingMode) ;
          var_cas_outExpressionList._addAssign_operation (var_cas_expressionValue) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_EXactualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_EXactualParametersPassingMode::constructor_parameterIn (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_20 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              var_cas_listeTypesParametresEffectifs._addAssign_operation (GGS_typeGalgas_jokerInParameterList ::constructor_new (_inLexique COMMA_HERE), var_cas_parameterPassingMode) ;
              var_cas_outExpressionList._addAssign_operation (GGS_typeJokerInExpression ::constructor_new (_inLexique COMMA_HERE)) ;
              } break ;
            case 2 : {
              GGS_luint  var_cas_jokerCountWithLocation ;
              _inLexique._assignFromAttribute_uint32value (var_cas_jokerCountWithLocation) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              GGS_uint  var_cas_jokerCount ;
              var_cas_jokerCount = var_cas_jokerCountWithLocation.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (2787)) ;
              GGS_uint _variant_108986 = var_cas_jokerCount._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (2788)) ;
              GGS_bool _condition_108986 (_variant_108986._isBuilt (), true) ;
              while (_condition_108986.isBuiltAndTrue ()) {
                _condition_108986 = (var_cas_jokerCount)._operator_strictSup (GGS_uint (true, 0U)) ;
                if (_condition_108986.isBuiltAndTrue ()) {
                  if (_variant_108986.uintValue () == 0) {
                    _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (2792)) ;
                    _condition_108986 = GGS_bool (true, false) ;
                  }else{
                    _variant_108986._decrement_operation (_inLexique COMMA_HERE) ;
                    var_cas_listeTypesParametresEffectifs._addAssign_operation (GGS_typeGalgas_jokerInParameterList ::constructor_new (_inLexique COMMA_HERE), var_cas_parameterPassingMode) ;
                    var_cas_outExpressionList._addAssign_operation (GGS_typeJokerInExpression ::constructor_new (_inLexique COMMA_HERE)) ;
                    var_cas_jokerCount._decrement_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (2792)) ;
                  }
                }
              }
              } break ;
            case 3 : {
              GGS_AC_galgasType  var_cas_typeArgument ;
              GGS_typeCplusPlusName  var_cas_nomCppArgument ;
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument COMMA_SOURCE_FILE_AT_LINE (2799)) ;
              var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
              GGS_typeExpression  var_cas_e ;
              var_cas_e = GGS_typeVarInExpression ::constructor_new (_inLexique, var_cas_nomCppArgument COMMA_HERE) ;
              var_cas_outExpressionList._addAssign_operation (var_cas_e) ;
              if ((var_cas_exclusiveVariables.reader_hasKey (_inLexique, var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2803)) COMMA_SOURCE_FILE_AT_LINE (2803))).isBuiltAndTrue ()) {
                var_cas_nomArgument.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this object is already named as input or output/input effectif argument of current instruction") COMMA_SOURCE_FILE_AT_LINE (2804)) ;
              }else{
                var_cas_exclusiveVariables._addAssign_operation (var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2806))) ;
              }
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_typeArgument ;
          GGS_typeCplusPlusName  var_cas_nomCppArgument ;
          GGS_lstring  var_cas_nomArgument ;
          _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument COMMA_SOURCE_FILE_AT_LINE (2815)) ;
          GGS_EXactualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_EXactualParametersPassingMode::constructor_parameterOutIn (_inLexique COMMA_HERE) ;
          var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
          GGS_typeExpression  var_cas_e ;
          var_cas_e = GGS_typeVarInExpression ::constructor_new (_inLexique, var_cas_nomCppArgument COMMA_HERE) ;
          var_cas_outExpressionList._addAssign_operation (var_cas_e) ;
          if ((var_cas_exclusiveVariables.reader_hasKey (_inLexique, var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2820)) COMMA_SOURCE_FILE_AT_LINE (2820))).isBuiltAndTrue ()) {
            var_cas_nomArgument.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this object is already named as input or output/input effectif argument of current instruction") COMMA_SOURCE_FILE_AT_LINE (2821)) ;
          }else{
            var_cas_exclusiveVariables._addAssign_operation (var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2823))) ;
          }
          } break ;
        default :
          syntaxRepeat_19 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_parameters_list_semantics_parser_2750_4_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_19 = true ;
    while (syntaxRepeat_19) {
      switch (select_repeat_semantics_parser_19 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          nt_expression_parse (_inLexique) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          switch (select_semantics_parser_20 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_19 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'semantic_instructions_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instructions_list_semantics_parser_2832_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  var_cas_ioVariablesMap.prologue_verifyVariableUsing (_inLexique COMMA_SOURCE_FILE_AT_LINE (2844)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_verifyVariableUsing (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2844)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_semantics_parser_2832_4_parse (galgas_scanner & _inLexique) {
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2866_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_call) COMMA_HERE) ;
  GGS_lstring  var_cas_calledPropertyName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_calledPropertyName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_propertyType ;
  const GGS_entityPropertyMap  _temp_112875 = var_cas_inCurrentTreewalkingRoutinePropertyMap ;
  if (_temp_112875._isBuilt ()) {
    _temp_112875 (HERE)->method_searchKey (_inLexique, var_cas_calledPropertyName, var_cas_propertyType COMMA_SOURCE_FILE_AT_LINE (2883)) ;
  }
  GGS_lstring  var_cas_entityName ;
  { const GGS_AC_galgasType _var_113268 = var_cas_propertyType ; // CAST instruction
    if (_var_113268.getPtr () != NULL) {
      macroValidPointer (_var_113268.getPtr ()) ;
      if (dynamic_cast <cPtr_typeGalgas_singleReferenceEntity *> (_var_113268.getPtr ()) != NULL) {
        const GGS_typeGalgas_singleReferenceEntity var_cas_ref (_var_113268.getPtr ()) ;
        var_cas_entityName = var_cas_ref.reader_mEntityTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (2887)) ;
      }else if (dynamic_cast <cPtr_typeGalgas_multipleReferenceEntity *> (_var_113268.getPtr ()) != NULL) {
        const GGS_typeGalgas_multipleReferenceEntity var_cas_ref (_var_113268.getPtr ()) ;
        var_cas_entityName = var_cas_ref.reader_mEntityTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (2889)) ;
      }else{
        var_cas_calledPropertyName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this property should be a single or a multiple reference") COMMA_SOURCE_FILE_AT_LINE (2891)) ;
        var_cas_entityName._drop_operation () ;
      }
    }
  }
  GGS_L_EXsignature  var_cas_routineSignature ;
  if ((var_cas_inTreewalkingRoutineHeaderMap.reader_hasKey (_inLexique, var_cas_entityName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2895)) COMMA_SOURCE_FILE_AT_LINE (2895))).isBuiltAndTrue ()) {
    GGS_typeListeTypesEtNomsArgMethode  automatic_var_18 ;
    const GGS_treewalkingRoutineHeaderMap  _temp_113475 = var_cas_inTreewalkingRoutineHeaderMap ;
    if (_temp_113475._isBuilt ()) {
      _temp_113475 (HERE)->method_searchKey (_inLexique, var_cas_entityName, var_cas_routineSignature, automatic_var_18 COMMA_SOURCE_FILE_AT_LINE (2896)) ;
    }
  }else{
    var_cas_calledPropertyName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "there is no treewalking routine for the '%"))._operator_concat (var_cas_entityName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2899))))._operator_concat (GGS_string (true, "' metamodel class")) COMMA_SOURCE_FILE_AT_LINE (2901)) ;
    var_cas_routineSignature._drop_operation () ;
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_parameters_list_ (_inLexique, var_cas_routineSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_callInstruction ::constructor_new (_inLexique, var_cas_calledPropertyName, var_cas_entityName, var_cas_propertyType, var_cas_expressionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2866_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_call) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_actual_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2931_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_typeVarSource ;
  GGS_typeCplusPlusName  var_cas_sourceVarCppName ;
  GGS_lstring  var_cas_nomVarSource ;
  nt_read_access_ (_inLexique, var_cas_nomVarSource, var_cas_sourceVarCppName, var_cas_typeVarSource, var_cas_ioVariablesMap) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_typeVarSource.getPtr (), true, var_cas_nomVarSource COMMA_SOURCE_FILE_AT_LINE (2950)) ;
  GGS_lstring  var_cas_nomTypeSource ;
  var_cas_nomTypeSource = var_cas_classType.reader_mClassTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (2951)) ;
  GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits ;
  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (2952)) ;
  nt_extract_instruction_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceVarCppName, var_cas_nomTypeSource, var_cas_tableMessagesAbstraits, var_cas_ioInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2931_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
  nt_read_access_parse (_inLexique) ;
  nt_extract_instruction_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_extract_instruction_semantics_parser_2976_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "simple extract instruction is obsolete: use cast expression instead") COMMA_SOURCE_FILE_AT_LINE (2991)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  GGS_lstring  var_cas_nomClasse ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomClasse) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  _temp_117327 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (_temp_117327._isBuilt ()) {
    _temp_117327 (HERE)->method_searchKey (_inLexique, var_cas_nomClasse, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2998)) ;
  }
  GGS_AC_galgasType  var_cas_leType ;
  var_cas_leType = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_nomClasse COMMA_SOURCE_FILE_AT_LINE (2999)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2999)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_leType.getPtr (), true, var_cas_nomClasse COMMA_SOURCE_FILE_AT_LINE (3000)) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  var_cas_listeAttributsSemantiques = var_cas_classType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (3001)) ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (3002)) ;
  if (((var_cas_tableDesClassesAncetres.reader_hasKey (_inLexique, var_cas_nomTypeSource.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3004)) COMMA_SOURCE_FILE_AT_LINE (3004)))._operator_not ()).isBuiltAndTrue ()) {
    var_cas_nomClasse.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This class does not inherit from '@"))._operator_concat (var_cas_nomTypeSource.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3005))))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (3005)) ;
  }
  GGS_L_assignedVariables  var_cas_listeAffectationParametresEffectifs ;
  GGS_typeCplusPlusNameList  var_cas_allVariablesList ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  nt_input_parameters_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeAffectationParametresEffectifs, var_cas_allVariablesList, var_cas_listeAttributsSemantiques, var_cas_ioVariablesMap, var_cas_ioInstructionList) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  const GGS_AC_galgasType  _temp_118746 = var_cas_errorExpressionType ;
  if (_temp_118746._isBuilt ()) {
    _temp_118746 (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (3033)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_lstring  var_cas_messageName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  const GGS_typeClassInheritedMessagesMap  _temp_118883 = var_cas_tableMessagesAbstraits ;
  if (_temp_118883._isBuilt ()) {
    _temp_118883 (HERE)->method_searchKey (_inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (3037)) ;
  }
  var_cas_ioInstructionList._addAssign_operation (GGS_typeSimpleExtractInstruction ::constructor_new (_inLexique, var_cas_inSourceVarCppName, var_cas_nomClasse, var_cas_listeAffectationParametresEffectifs, var_cas_errorExpression, var_cas_messageName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_2976_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  nt_input_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_extract_instruction_semantics_parser_3050_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  /* var_cas_tableMessagesAbstraits */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_typeStructuredExtractCasesList  var_cas_casesList ;
  var_cas_casesList = GGS_typeStructuredExtractCasesList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "structured extract instruction is obsolete: use cast instruction instead") COMMA_SOURCE_FILE_AT_LINE (3067)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3069)) ;
  { bool syntaxRepeat_21 = true ;
    while (syntaxRepeat_21) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3071)) ;
        GGS_location  var_cas_indicatif1 ;
        var_cas_indicatif1 = GGS_location (_inLexique) ;
        GGS_lstring  var_cas_nomType1 ;
        _inLexique._assignFromAttribute_tokenString (var_cas_nomType1) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        const GGS_M_semanticsEntitiesForUse  _temp_120788 = var_cas_ioComponentSemanticsEntitiesMap ;
        if (_temp_120788._isBuilt ()) {
          _temp_120788 (HERE)->method_searchKey (_inLexique, var_cas_nomType1, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3078)) ;
        }
        GGS_AC_galgasType  var_cas_definitionClasse1 ;
        var_cas_definitionClasse1 = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_nomType1 COMMA_SOURCE_FILE_AT_LINE (3079)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (3079)) ;
        GGS_typeGalgasClassType  var_cas_classType1 ;
        var_cas_classType1 = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_definitionClasse1.getPtr (), true, var_cas_nomType1 COMMA_SOURCE_FILE_AT_LINE (3081)) ;
        GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 ;
        var_cas_listeAttributs1 = var_cas_classType1.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (3082)) ;
        GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 ;
        var_cas_tableDesClassesAncetresType1 = var_cas_classType1.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (3083)) ;
        if (((var_cas_tableDesClassesAncetresType1.reader_hasKey (_inLexique, var_cas_nomTypeSource.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3085)) COMMA_SOURCE_FILE_AT_LINE (3085)))._operator_not ()).isBuiltAndTrue ()) {
          var_cas_nomType1.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This class does not inherit from '@"))._operator_concat (var_cas_nomTypeSource.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3086))))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (3086)) ;
        }
        GGS_bool var_cas_noUsedParameter ;
        nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_indicatif1, GGS_localConstantBuildStyleEnum::constructor_listStyle (_inLexique COMMA_HERE), var_cas_noUsedParameter) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_instructionsList ;
        var_cas_instructionsList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
        var_cas_casesList._addAssign_operation (var_cas_nomType1, var_cas_indicatif1, var_cas_instructionsList, var_cas_noUsedParameter) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3071)) ;
      switch (select_repeat_semantics_parser_21 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_21 = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3118)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_elseInstructionList ;
  var_cas_elseInstructionList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
  var_cas_ioInstructionList._addAssign_operation (GGS_typeStructuredExtractInstructionWithElse ::constructor_new (_inLexique, var_cas_inSourceVarCppName, var_cas_casesList, var_cas_elseInstructionList COMMA_HERE)) ;
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3118)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3069)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_3050_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat_21 = true ;
    while (syntaxRepeat_21) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        nt_parse_effective_input_parameters_list_parse (_inLexique) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
        nt_semantic_instructions_list_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_21 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_21 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3148_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
  GGS_typeGalgasClassType  var_cas_sourceClassType ;
  var_cas_sourceClassType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_sourceExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3173)) ;
  GGS_lstring  var_cas_sourceExpressionTypeName ;
  var_cas_sourceExpressionTypeName = var_cas_sourceClassType.reader_mClassTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (3174)) ;
  GGS_string var_cas_sourceClassMessage ;
  var_cas_sourceClassMessage = var_cas_sourceClassType.reader_mClassMessage (_inLexique COMMA_SOURCE_FILE_AT_LINE (3175)) ;
  GGS_typeInstructionList  var_cas_elseBranchInstructionsList ;
  var_cas_elseBranchInstructionsList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeStructuredCastBranchList  var_cas_branchList ;
  var_cas_branchList = GGS_typeStructuredCastBranchList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3180)) ;
  { bool syntaxRepeat_22 = true ;
    while (syntaxRepeat_22) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3182)) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
        GGS_bool var_cas_checkForKindOfClass ;
        switch (select_semantics_parser_23 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E_3D) COMMA_HERE) ;
            var_cas_checkForKindOfClass = GGS_bool (true, true) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3D_3D) COMMA_HERE) ;
            var_cas_checkForKindOfClass = GGS_bool (true, false) ;
            } break ;
          default :
            break ;
        }
        GGS_lstring  var_cas_castedTypeName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_castedTypeName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        const GGS_M_semanticsEntitiesForUse  _temp_125453 = var_cas_ioComponentSemanticsEntitiesMap ;
        if (_temp_125453._isBuilt ()) {
          _temp_125453 (HERE)->method_searchKey (_inLexique, var_cas_castedTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3196)) ;
        }
        GGS_AC_galgasType  var_cas_typeDefinition ;
        var_cas_typeDefinition = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_castedTypeName COMMA_SOURCE_FILE_AT_LINE (3197)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (3197)) ;
        GGS_typeSuperClassesMap  var_cas_superClassMap ;
        var_cas_superClassMap = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_typeDefinition.getPtr (), true, var_cas_castedTypeName COMMA_SOURCE_FILE_AT_LINE (3200)).reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (3200)) ;
        GGS_string var_cas_sourceExpressionTypeNameString ;
        var_cas_sourceExpressionTypeNameString = var_cas_sourceExpressionTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3202)) ;
        if (((var_cas_checkForKindOfClass)._operator_not ()).isBuiltAndTrue ()) {
          if ((((var_cas_castedTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3204)))._operator_isNotEqual (var_cas_sourceExpressionTypeNameString))._operator_and ((var_cas_superClassMap.reader_hasKey (_inLexique, var_cas_sourceExpressionTypeNameString COMMA_SOURCE_FILE_AT_LINE (3204)))._operator_not ())).isBuiltAndTrue ()) {
            var_cas_castedTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This class is not '@"))._operator_concat (var_cas_sourceExpressionTypeNameString))._operator_concat (GGS_string (true, "' and does inherit from it")) COMMA_SOURCE_FILE_AT_LINE (3205)) ;
          }
        }else if (((var_cas_superClassMap.reader_hasKey (_inLexique, var_cas_sourceExpressionTypeNameString COMMA_SOURCE_FILE_AT_LINE (3207)))._operator_not ()).isBuiltAndTrue ()) {
          var_cas_castedTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This class does not inherit from '@"))._operator_concat (var_cas_sourceExpressionTypeNameString))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (3208)) ;
        }
        GGS_typeCplusPlusNameList  var_cas_localConstantCppNameList ;
        var_cas_localConstantCppNameList = GGS_typeCplusPlusNameList ::constructor_emptyList (_inLexique COMMA_HERE) ;
        switch (select_semantics_parser_24 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            GGS_lstring  var_cas_localConstantName ;
            _inLexique._assignFromAttribute_tokenString (var_cas_localConstantName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_localConstantCppName ;
            var_cas_localConstantCppName = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_localConstantName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (3216)), var_cas_localConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3216)) COMMA_HERE) ;
            var_cas_localConstantCppNameList._addAssign_operation (var_cas_localConstantCppName) ;
            var_cas_ioVariablesMap.modifier_insertConstInArgument (_inLexique, var_cas_localConstantName, var_cas_typeDefinition, var_cas_localConstantCppName COMMA_SOURCE_FILE_AT_LINE (3218)) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
            GGS_lstring  var_cas_localConstantName ;
            _inLexique._assignFromAttribute_tokenString (var_cas_localConstantName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_localConstantCppName ;
            var_cas_localConstantCppName = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_localConstantName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (3223)), var_cas_localConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3223)) COMMA_HERE) ;
            var_cas_localConstantCppNameList._addAssign_operation (var_cas_localConstantCppName) ;
            var_cas_ioVariablesMap.modifier_insertUnusedConstInArgument (_inLexique, var_cas_localConstantName, var_cas_typeDefinition, var_cas_localConstantCppName COMMA_SOURCE_FILE_AT_LINE (3225)) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_instructionsList ;
        var_cas_instructionsList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
        var_cas_branchList._addAssign_operation (var_cas_castedTypeName, var_cas_checkForKindOfClass, var_cas_localConstantCppNameList, var_cas_instructionsList) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3182)) ;
      switch (select_repeat_semantics_parser_22 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_22 = false ;
          break ;
      }
    }
  }
  GGS_AC_elseOrDefaultForCastInstruction  var_cas_elseOrDefault ;
  var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3247)) ;
  switch (select_semantics_parser_25 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_default) COMMA_HERE) ;
      if (((var_cas_sourceClassMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (3250)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "for using the 'default' construct, the static class of source expression (@"))._operator_concat (var_cas_sourceExpressionTypeName))._operator_concat (GGS_string (true, ") should define a class message")) COMMA_SOURCE_FILE_AT_LINE (3252)) ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
      GGS_typeExpression  var_cas_errorLocationExpression ;
      GGS_AC_galgasType  var_cas_errorLocationExpressionType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorLocationExpression, var_cas_errorLocationExpressionType) ;
      const GGS_AC_galgasType  _temp_128928 = var_cas_errorLocationExpressionType ;
      if (_temp_128928._isBuilt ()) {
        _temp_128928 (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (3266)) ;
      }
      var_cas_elseOrDefault = GGS_C_defaultForCastInstruction ::constructor_new (_inLexique, var_cas_errorLocationExpression, GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_elseBranchInstructionsList ;
      var_cas_elseBranchInstructionsList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseBranchInstructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
      var_cas_elseOrDefault = GGS_C_elseForCastInstruction ::constructor_new (_inLexique, var_cas_elseBranchInstructionsList COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3247)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3180)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeStructuredCastInstruction ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_sourceExpression, var_cas_sourceExpressionTypeName, var_cas_branchList, var_cas_elseOrDefault COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3148_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat_22 = true ;
    while (syntaxRepeat_22) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
        switch (select_semantics_parser_23 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E_3D) COMMA_HERE) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3D_3D) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        switch (select_semantics_parser_24 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
        nt_semantic_instructions_list_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_22 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_22 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_25 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_default) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3308_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_AC_galgasType  var_cas_definitionType ;
  GGS_lstring  var_cas_typeName ;
  nt_type_parsing_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
  GGS_lstring  var_cas_targetVarName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_targetVarName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_nomCppVariable ;
  var_cas_nomCppVariable = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_targetVarName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (3332)), var_cas_targetVarName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3332)) COMMA_HERE) ;
  var_cas_ioVariablesMap.modifier_insertLocalVariable (_inLexique, var_cas_targetVarName, var_cas_definitionType, var_cas_nomCppVariable COMMA_SOURCE_FILE_AT_LINE (3333)) ;
  nt_optional_assignment_ (_inLexique, var_cas_typeName, var_cas_targetVarName, var_cas_nomCppVariable, var_cas_definitionType, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3308_4_parse (galgas_scanner & _inLexique) {
  nt_type_parsing_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_optional_assignment_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3355_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
  { bool syntaxRepeat_26 = true ;
    while (syntaxRepeat_26) {
        GGS_lstring  var_cas_galgasVariableName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_galgasVariableName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        GGS_typeCplusPlusName  var_cas_nomCppVar ;
        GGS_AC_galgasType  automatic_var_19 ;
        var_cas_ioVariablesMap.modifier_searchForReadOnlyAccess (_inLexique, var_cas_galgasVariableName, automatic_var_19, var_cas_nomCppVar COMMA_SOURCE_FILE_AT_LINE (3372)) ;
        GGS_typeInstruction  var_cas_instruction ;
        var_cas_instruction = GGS_typeLogInstruction ::constructor_new (_inLexique, var_cas_galgasVariableName, var_cas_nomCppVar COMMA_HERE) ;
        var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
      switch (select_repeat_semantics_parser_26 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_26 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3355_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
  { bool syntaxRepeat_26 = true ;
    while (syntaxRepeat_26) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_26 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_26 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3387_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_drop) COMMA_HERE) ;
  { bool syntaxRepeat_27 = true ;
    while (syntaxRepeat_27) {
        GGS_lstring  var_cas_nom ;
        _inLexique._assignFromAttribute_tokenString (var_cas_nom) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        GGS_typeCplusPlusName  var_cas_nomCppVar ;
        GGS_AC_galgasType  automatic_var_20 ;
        var_cas_ioVariablesMap.modifier_searchForDestructiveReadAccess (_inLexique, var_cas_nom, automatic_var_20, var_cas_nomCppVar COMMA_SOURCE_FILE_AT_LINE (3404)) ;
        GGS_typeInstruction  var_cas_instruction ;
        var_cas_instruction = GGS_typeDropInstruction ::constructor_new (_inLexique, var_cas_nomCppVar COMMA_HERE) ;
        var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
      switch (select_repeat_semantics_parser_27 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_27 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3387_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_drop) COMMA_HERE) ;
  { bool syntaxRepeat_27 = true ;
    while (syntaxRepeat_27) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_27 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_27 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_3421_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_L_EXsignature  var_cas_signatureRoutine ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  _temp_135581 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (_temp_135581._isBuilt ()) {
    _temp_135581 (HERE)->method_searchKey (_inLexique, var_cas_nomVarDest, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3434)) ;
  }
  GGS_bool var_cas_isExternActionCall ;
  { const GGS_AC_semanticsEntity _var_136063 = var_cas_entite ; // CAST instruction
    if (_var_136063.getPtr () != NULL) {
      macroValidPointer (_var_136063.getPtr ()) ;
      if (dynamic_cast <cPtr_typeEntiteRoutine *> (_var_136063.getPtr ()) != NULL) {
        const GGS_typeEntiteRoutine var_cas_r (_var_136063.getPtr ()) ;
        var_cas_signatureRoutine = var_cas_r.reader_aListeArgumentsFormels (_inLexique COMMA_SOURCE_FILE_AT_LINE (3438)) ;
        var_cas_isExternActionCall = GGS_bool (true, false) ;
      }else if (dynamic_cast <cPtr_typeEntiteActionExterne *> (_var_136063.getPtr ()) != NULL) {
        const GGS_typeEntiteActionExterne var_cas_ae (_var_136063.getPtr ()) ;
        var_cas_signatureRoutine = var_cas_ae.reader_aSignature (_inLexique COMMA_SOURCE_FILE_AT_LINE (3441)) ;
        var_cas_isExternActionCall = GGS_bool (true, true) ;
      }else{
        var_cas_nomVarDest.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "'"))._operator_concat (var_cas_nomVarDest.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3445))))._operator_concat (GGS_string (true, "' should name a routine or an extern extern routine")) COMMA_SOURCE_FILE_AT_LINE (3447)) ;
        var_cas_signatureRoutine._drop_operation () ;
        var_cas_isExternActionCall._drop_operation () ;
      }
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_parameters_list_ (_inLexique, var_cas_signatureRoutine, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeRoutineCallInstruction ::constructor_new (_inLexique, var_cas_nomVarDest, var_cas_expressionsList, var_cas_signatureRoutine, var_cas_isExternActionCall COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_3421_4_parse (galgas_scanner & _inLexique) {
  nt_actual_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3483_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  switch (select_semantics_parser_28 (_inLexique)) {
    case 1 : {
      GGS_typeExpression  var_cas_expression ;
      GGS_AC_galgasType  var_cas_expressionType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expression, var_cas_expressionType) ;
      GGS_lstring  var_cas_methodName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      const GGS_AC_galgasType  _temp_138586 = var_cas_expressionType ;
      if (_temp_138586._isBuilt ()) {
        _temp_138586 (HERE)->method_handleMethodInstructionCall (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (3513)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeMethodCallInstruction ::constructor_new (_inLexique, var_cas_expressionType, var_cas_expression, var_cas_methodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
      GGS_lstring  var_cas_modifiedObjectName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_modifiedObjectName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_variableType ;
      GGS_typeCplusPlusName  var_cas_cppVariableName ;
      var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_modifiedObjectName, var_cas_variableType, var_cas_cppVariableName COMMA_SOURCE_FILE_AT_LINE (3533)) ;
      GGS_lstringlist  var_cas_structAttributeList ;
      var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_29 = true ;
        while (syntaxRepeat_29) {
          switch (select_repeat_semantics_parser_29 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
              GGS_lstring  var_cas_structAttributeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_structAttributeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_structAttributeList._addAssign_operation (var_cas_structAttributeName) ;
              GGS_typeGalgasStructType  var_cas_structType ;
              var_cas_structType = GGS_typeGalgasStructType::_castFrom (_inLexique, var_cas_variableType.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (3542)) ;
              GGS_bool var_cas_found ;
              var_cas_found = GGS_bool (true, false) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_139776 (var_cas_structType.reader_mAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (3544)), true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_139776 = NULL ;
                while (((operand_139776 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_139776.nextObject ()))
                    && ((var_cas_found)._operator_not ().isBuiltAndTrue ())) {
                  macroValidPointer (operand_139776) ;
                  var_cas_found = (operand_139776->aNomAttribut.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3545)))._operator_isEqual (var_cas_structAttributeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3545))) ;
                  var_cas_variableType = operand_139776->mAttributType ;
                }
              }
              if (((var_cas_found)._operator_not ()).isBuiltAndTrue ()) {
                var_cas_structAttributeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '@"))._operator_concat (var_cas_structType.reader_mStructTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (3549))))._operator_concat (GGS_string (true, "' does not define a '")))._operator_concat (var_cas_structAttributeName))._operator_concat (GGS_string (true, "' attribute")) COMMA_SOURCE_FILE_AT_LINE (3549)) ;
              }
              } break ;
            default :
              syntaxRepeat_29 = false ;
              break ;
          }
        }
      }
      GGS_lstring  var_cas_modifierName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_modifierName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      const GGS_AC_galgasType  _temp_140353 = var_cas_variableType ;
      if (_temp_140353._isBuilt ()) {
        _temp_140353 (HERE)->method_handleModifierCall (_inLexique, var_cas_modifierName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (3556)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeModifierCallInstruction ::constructor_new (_inLexique, var_cas_cppVariableName, var_cas_structAttributeList, var_cas_modifierName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    case 3 : {
      GGS_lstring  var_cas_typeName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_lstring  var_cas_typeMethodName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_typeMethodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_typeMethodSignature ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      const GGS_M_semanticsEntitiesForUse  _temp_141158 = var_cas_ioComponentSemanticsEntitiesMap ;
      if (_temp_141158._isBuilt ()) {
        _temp_141158 (HERE)->method_searchKey (_inLexique, var_cas_typeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (3578)) ;
      }
      GGS_AC_galgasType  var_cas_type ;
      var_cas_type = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_theEntity.getPtr (), true, var_cas_typeName COMMA_SOURCE_FILE_AT_LINE (3579)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (3579)) ;
      const GGS_AC_galgasType  _temp_141301 = var_cas_type ;
      if (_temp_141301._isBuilt ()) {
        _temp_141301 (HERE)->method_handleClassMethodCall (_inLexique, var_cas_typeMethodName, var_cas_typeMethodSignature COMMA_SOURCE_FILE_AT_LINE (3580)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_typeMethodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeCallOfTypeMethodInstruction ::constructor_new (_inLexique, var_cas_typeName, var_cas_typeMethodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3483_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  switch (select_semantics_parser_28 (_inLexique)) {
    case 1 : {
      nt_expression_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      { bool syntaxRepeat_29 = true ;
        while (syntaxRepeat_29) {
          switch (select_repeat_semantics_parser_29 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_29 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3611_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inMetamodelPropertyMap */,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  GGS_lstring  var_cas_nomVarDest ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomVarDest) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_instruction_beginning_with_identifier_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_nomVarDest, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inMetamodelEntityMap, var_cas_inSemanticContext) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3611_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_instruction_beginning_with_identifier_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3644_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  nt_warning_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_ioInstructionList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3644_4_parse (galgas_scanner & _inLexique) {
  nt_warning_instruction_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'warning_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_warning_instruction_semantics_parser_3667_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  const GGS_AC_galgasType  _temp_145101 = var_cas_errorExpressionType ;
  if (_temp_145101._isBuilt ()) {
    _temp_145101 (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (3686)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeExpression  var_cas_warningMessageExpression ;
  GGS_AC_galgasType  var_cas_warningMessageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_warningMessageExpression, var_cas_warningMessageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs ;
  var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_warningMessageExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3700)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeWarningInstruction ::constructor_new (_inLexique, var_cas_errorExpression, var_cas_warningMessageExpression, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_warning_instruction_semantics_parser_3667_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3714_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  nt_error_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_ioInstructionList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3714_4_parse (galgas_scanner & _inLexique) {
  nt_error_instruction_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'error_instruction'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_error_instruction_semantics_parser_3737_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorLocationExpression ;
  GGS_AC_galgasType  var_cas_errorLocationExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorLocationExpression, var_cas_errorLocationExpressionType) ;
  const GGS_AC_galgasType  _temp_147730 = var_cas_errorLocationExpressionType ;
  if (_temp_147730._isBuilt ()) {
    _temp_147730 (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (3756)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorMessageExpression ;
  GGS_AC_galgasType  var_cas_errorMessageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_errorMessageExpression, var_cas_errorMessageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs ;
  var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_errorMessageExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3770)) ;
  GGS_varToDropList  var_cas_variablesToDrop ;
  var_cas_variablesToDrop = GGS_varToDropList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  switch (select_semantics_parser_30 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      { bool syntaxRepeat_31 = true ;
        while (syntaxRepeat_31) {
            GGS_lstring  var_cas_nomVariable ;
            _inLexique._assignFromAttribute_tokenString (var_cas_nomVariable) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_varCppName ;
            GGS_AC_galgasType  automatic_var_21 ;
            var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomVariable, automatic_var_21, var_cas_varCppName COMMA_SOURCE_FILE_AT_LINE (3780)) ;
            var_cas_variablesToDrop._addAssign_operation (var_cas_varCppName) ;
          switch (select_repeat_semantics_parser_31 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_31 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeErrorInstruction ::constructor_new (_inLexique, var_cas_errorLocationExpression, var_cas_errorMessageExpression, GGS_location (_inLexique), var_cas_variablesToDrop COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_error_instruction_semantics_parser_3737_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  switch (select_semantics_parser_30 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      { bool syntaxRepeat_31 = true ;
        while (syntaxRepeat_31) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_repeat_semantics_parser_31 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_31 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3803_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  GGS_location  var_cas_instructionLocation ;
  var_cas_instructionLocation = GGS_location (_inLexique) ;
  GGS_typeExpression  var_cas_messageExpression ;
  GGS_AC_galgasType  var_cas_messageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_messageExpression, var_cas_messageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs ;
  var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_messageExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3829)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeMessageInstruction ::constructor_new (_inLexique, var_cas_messageExpression, var_cas_instructionLocation COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3803_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3842_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  GGS_L_expression_instructionsList_list  var_cas_listeBranchesTest ;
  var_cas_listeBranchesTest = GGS_L_expression_instructionsList_list ::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3856)) ;
  { bool syntaxRepeat_32 = true ;
    while (syntaxRepeat_32) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3858)) ;
        GGS_typeExpression  var_cas_testBranche ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_testBranche, var_cas_resultType) ;
        GGS_typeGalgas_bool  var_cas_b ;
        var_cas_b = GGS_typeGalgas_bool::_castFrom (_inLexique, var_cas_resultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3869)) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_then) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_listeInstructionsBrancheTest ;
        var_cas_listeInstructionsBrancheTest = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheTest, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
        var_cas_listeBranchesTest._addAssign_operation (var_cas_testBranche, var_cas_listeInstructionsBrancheTest) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3858)) ;
      switch (select_repeat_semantics_parser_32 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_elsif) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_32 = false ;
          break ;
      }
    }
  }
  GGS_typeInstructionList  var_cas_listeInstructionsBrancheAutre ;
  var_cas_listeInstructionsBrancheAutre = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3890)) ;
  switch (select_semantics_parser_33 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheAutre, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3890)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3856)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_if_instruction ::constructor_new (_inLexique, var_cas_listeBranchesTest, var_cas_listeInstructionsBrancheAutre COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3842_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  { bool syntaxRepeat_32 = true ;
    while (syntaxRepeat_32) {
        nt_expression_parse (_inLexique) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_then) COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_32 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_elsif) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_32 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_33 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3925_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  GGS_typeExpression  var_cas_switchExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_switchExpression, var_cas_resultType) ;
  GGS_typeGalgas_enum  var_cas_e ;
  var_cas_e = GGS_typeGalgas_enum::_castFrom (_inLexique, var_cas_resultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3950)) ;
  GGS_lstring  var_cas_enumTypeName ;
  var_cas_enumTypeName = var_cas_e.reader_mEnumTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (3951)) ;
  GGS_enumConstantMap  var_cas_enumConstantesMap ;
  var_cas_enumConstantesMap = var_cas_e.reader_mEnumConstantesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (3952)) ;
  GGS_stringset  var_cas_allBranchConstantSet ;
  var_cas_allBranchConstantSet = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_L_switchBranchlist  var_cas_switchBranchlist ;
  var_cas_switchBranchlist = GGS_L_switchBranchlist ::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3956)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat_34 = true ;
    while (syntaxRepeat_34) {
        GGS_stringset  var_cas_branchConstantSet ;
        var_cas_branchConstantSet = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
        { bool syntaxRepeat_35 = true ;
          while (syntaxRepeat_35) {
              GGS_lstring  var_cas_enumConstantName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_enumConstantName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_branchConstantSet._addAssign_operation (var_cas_enumConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3964))) ;
              GGS_bool automatic_var_22 ;
              const GGS_enumConstantMap  _temp_155455 = var_cas_enumConstantesMap ;
              if (_temp_155455._isBuilt ()) {
                _temp_155455 (HERE)->method_searchKey (_inLexique, var_cas_enumConstantName, automatic_var_22 COMMA_SOURCE_FILE_AT_LINE (3965)) ;
              }
              if ((var_cas_allBranchConstantSet.reader_hasKey (_inLexique, var_cas_enumConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3966)) COMMA_SOURCE_FILE_AT_LINE (3966))).isBuiltAndTrue ()) {
                var_cas_enumConstantName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this constant is already used in current switch instruction") COMMA_SOURCE_FILE_AT_LINE (3967)) ;
              }
            switch (select_repeat_semantics_parser_35 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_35 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
        var_cas_allBranchConstantSet = (var_cas_allBranchConstantSet)._operator_or (var_cas_branchConstantSet) ;
        var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3974)) ;
        GGS_typeInstructionList  var_cas_branchInstructionList ;
        var_cas_branchInstructionList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_branchInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
        var_cas_switchBranchlist._addAssign_operation (var_cas_branchConstantSet, var_cas_branchInstructionList) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3974)) ;
      switch (select_repeat_semantics_parser_34 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_34 = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3956)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  GGS_stringset  var_cas_missingConstants ;
  var_cas_missingConstants = var_cas_enumConstantesMap.reader_allKeys (_inLexique COMMA_SOURCE_FILE_AT_LINE (3996))._substract_operation (_inLexique, var_cas_allBranchConstantSet COMMA_SOURCE_FILE_AT_LINE (3996)) ;
  {
    GGS_stringset::cEnumerator enumerator_156625 (var_cas_missingConstants, true) ;
    const GGS_stringset::cElement * operand_156625 = NULL ;
    while (((operand_156625 = (GGS_stringset::cElement *) enumerator_156625.nextObject ()))) {
      macroValidPointer (operand_156625) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (operand_156625->mKey))._operator_concat (GGS_string (true, "' is not used in switch instruction")) COMMA_SOURCE_FILE_AT_LINE (3998)) ;
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_switch_instruction ::constructor_new (_inLexique, var_cas_switchExpression, var_cas_enumTypeName, var_cas_switchBranchlist COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3925_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat_34 = true ;
    while (syntaxRepeat_34) {
        { bool syntaxRepeat_35 = true ;
          while (syntaxRepeat_35) {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_repeat_semantics_parser_35 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_35 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_34 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_34 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_4014_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  GGS_typeExpression  var_cas_variantExpression ;
  GGS_AC_galgasType  var_cas_variantResultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_variantExpression, var_cas_variantResultType) ;
  GGS_typeGalgas_uint  var_cas_ui ;
  var_cas_ui = GGS_typeGalgas_uint::_castFrom (_inLexique, var_cas_variantResultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4038)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList1 ;
  var_cas_instructionList1 = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (4042)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4043)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList1, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4043)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (4042)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
  GGS_typeExpression  var_cas_conditionalExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_conditionalExpression, var_cas_resultType) ;
  GGS_typeGalgas_bool  var_cas_b ;
  var_cas_b = GGS_typeGalgas_bool::_castFrom (_inLexique, var_cas_resultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4070)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList2 ;
  var_cas_instructionList2 = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (4074)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4075)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList2, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4075)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (4074)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_while_instruction ::constructor_new (_inLexique, var_cas_variantExpression, var_cas_instructionList1, var_cas_conditionalExpression, var_cas_instructionList2, GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4014_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_4110_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
  GGS_lstring  var_cas_grammarName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_grammarName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_altName ;
  switch (select_semantics_parser_36 (_inLexique)) {
    case 1 : {
      var_cas_altName = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_label) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_altName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_bool var_cas_sourceIsFile ;
  GGS_typeExpression  var_cas_sourceExpression ;
  switch (select_semantics_parser_37 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
      var_cas_sourceIsFile = GGS_bool (true, true) ;
      GGS_AC_galgasType  var_cas_sourceExpressionType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
      GGS_typeGalgas_lstring  var_cas_gs ;
      var_cas_gs = GGS_typeGalgas_lstring::_castFrom (_inLexique, var_cas_sourceExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4149)) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
      var_cas_sourceIsFile = GGS_bool (true, false) ;
      GGS_AC_galgasType  var_cas_sourceExpressionType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
      GGS_typeGalgas_string  var_cas_gs ;
      var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_sourceExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4162)) ;
      } break ;
    default :
      break ;
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  const GGS_M_semanticsEntitiesForUse  _temp_162638 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (_temp_162638._isBuilt ()) {
    _temp_162638 (HERE)->method_searchKey (_inLexique, var_cas_grammarName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (4177)) ;
  }
  GGS_C_grammarForSemantics  var_cas_gfs ;
  var_cas_gfs = GGS_C_grammarForSemantics::_castFrom (_inLexique, var_cas_e.getPtr (), true, var_cas_grammarName COMMA_SOURCE_FILE_AT_LINE (4178)) ;
  GGS_M_nonterminalSymbolAlts  var_cas_startSymbolAltMap ;
  var_cas_startSymbolAltMap = var_cas_gfs.reader_mGrammarAltMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4179)) ;
  GGS_lstring  var_cas_lexiqueClassName ;
  var_cas_lexiqueClassName = var_cas_gfs.reader_mLexiqueClassName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4180)) ;
  GGS_L_EXsignature  var_cas_startSymbolSignature ;
  GGS_lstring  var_cas_returnedEntity ;
  const GGS_M_nonterminalSymbolAlts  _temp_162979 = var_cas_startSymbolAltMap ;
  if (_temp_162979._isBuilt ()) {
    _temp_162979 (HERE)->method_searchKey (_inLexique, var_cas_altName, var_cas_startSymbolSignature, var_cas_returnedEntity COMMA_SOURCE_FILE_AT_LINE (4183)) ;
  }
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique,  var_cas_startSymbolSignature,  var_cas_listeTypesParametresEffectifs,  GGS_location (_inLexique),  var_cas_ioInstructionList,  var_cas_expressionsList COMMA_SOURCE_FILE_AT_LINE (4183)) ;
  GGS_typeCplusPlusName  var_cas_sentStringName ;
  switch (select_semantics_parser_38 (_inLexique)) {
    case 1 : {
      var_cas_sentStringName = GGS_typeNullName ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_send) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
      GGS_lstring  var_cas_sentVariableName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_sentVariableName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_targetType ;
      var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_sentVariableName, var_cas_targetType, var_cas_sentStringName COMMA_SOURCE_FILE_AT_LINE (4202)) ;
      GGS_typeGalgas_string  var_cas_gs ;
      var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_targetType.getPtr (), true, var_cas_sentVariableName COMMA_SOURCE_FILE_AT_LINE (4203)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  var_cas_metamodelClassVariableName ;
  var_cas_metamodelClassVariableName = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
  switch (select_semantics_parser_39 (_inLexique)) {
    case 1 : {
      if (((var_cas_returnedEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4208)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "this grammar returns an instance of '@"))._operator_concat (var_cas_returnedEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4209))))._operator_concat (GGS_string (true, "' metamodel entity")) COMMA_SOURCE_FILE_AT_LINE (4209)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_metamodelClassVariableName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_type ;
      GGS_typeCplusPlusName  automatic_var_23 ;
      var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_metamodelClassVariableName, var_cas_type, automatic_var_23 COMMA_SOURCE_FILE_AT_LINE (4215)) ;
      GGS_lstring  var_cas_variableEntityName ;
      var_cas_variableEntityName = GGS_typeGalgas_singleReferenceEntity::_castFrom (_inLexique, var_cas_type.getPtr (), true, var_cas_metamodelClassVariableName COMMA_SOURCE_FILE_AT_LINE (4217)).reader_mEntityTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4217)) ;
      if (((var_cas_returnedEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4218)))._operator_isNotEqual (var_cas_variableEntityName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4218)))).isBuiltAndTrue ()) {
        var_cas_metamodelClassVariableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "this variable has the '@"))._operator_concat (var_cas_variableEntityName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4219))))._operator_concat (GGS_string (true, "', but a variable of '@")))._operator_concat (var_cas_returnedEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4220))))._operator_concat (GGS_string (true, "' type is expected")) COMMA_SOURCE_FILE_AT_LINE (4220)) ;
      }
      } break ;
    default :
      break ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_grammarInstruction ::constructor_new (_inLexique, var_cas_sourceIsFile, var_cas_sourceExpression, var_cas_grammarName, var_cas_expressionsList, var_cas_altName, var_cas_metamodelClassVariableName, var_cas_lexiqueClassName, var_cas_sentStringName COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4110_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_36 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_label) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_parser_37 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  nt_parse_parameters_list_parse (_inLexique) ;
  switch (select_semantics_parser_38 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_send) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_parser_39 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_4245_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
  GGS_lstring  var_cas_treewalkingComponentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_treewalkingComponentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_string var_cas_rootEntityName ;
  GGS_L_EXsignature  var_cas_treewalkingRoutineSignature ;
  const GGS_M_treewalkingComponents  _temp_166134 = var_cas_inTreewalkingComponentMap ;
  if (_temp_166134._isBuilt ()) {
    _temp_166134 (HERE)->method_searchKey (_inLexique, var_cas_treewalkingComponentName, var_cas_rootEntityName, var_cas_treewalkingRoutineSignature COMMA_SOURCE_FILE_AT_LINE (4264)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
  GGS_lstring  var_cas_modelVariableName ;
  GGS_typeCplusPlusName  var_cas_cppNameForModelVariable ;
  GGS_AC_galgasType  var_cas_modelVariableType ;
  nt_read_access_ (_inLexique, var_cas_modelVariableName, var_cas_cppNameForModelVariable, var_cas_modelVariableType, var_cas_ioVariablesMap) ;
  GGS_lstring  var_cas_variableEntity ;
  var_cas_variableEntity = GGS_typeGalgas_singleReferenceEntity::_castFrom (_inLexique, var_cas_modelVariableType.getPtr (), true, var_cas_modelVariableName COMMA_SOURCE_FILE_AT_LINE (4282)).reader_mEntityTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4282)) ;
  if (((var_cas_variableEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4283)))._operator_isNotEqual (var_cas_rootEntityName)).isBuiltAndTrue ()) {
    var_cas_modelVariableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "the '"))._operator_concat (var_cas_modelVariableName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4284))))._operator_concat (GGS_string (true, "' variable is an instance of '@")))._operator_concat (var_cas_variableEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4285))))._operator_concat (GGS_string (true, "', but the '")))._operator_concat (var_cas_treewalkingComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4286))))._operator_concat (GGS_string (true, "' component requires an instance of '@")))._operator_concat (var_cas_rootEntityName))._operator_concat (GGS_string (true, "' type")) COMMA_SOURCE_FILE_AT_LINE (4287)) ;
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioComponentSemanticsEntitiesMap) ;
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique,  var_cas_treewalkingRoutineSignature,  var_cas_listeTypesParametresEffectifs,  GGS_location (_inLexique),  var_cas_ioInstructionList,  var_cas_expressionsList COMMA_SOURCE_FILE_AT_LINE (4299)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_treewalkingInstruction ::constructor_new (_inLexique, var_cas_treewalkingComponentName, var_cas_cppNameForModelVariable, var_cas_expressionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4245_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
  nt_read_access_parse (_inLexique) ;
  nt_parse_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_4324_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_send) COMMA_HERE) ;
  GGS_typeExpression  var_cas_expression ;
  GGS_AC_galgasType  var_cas_expressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_expression, var_cas_expressionType) ;
  GGS_typeGalgas_string  var_cas_classType ;
  var_cas_classType = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_expressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4349)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeSendInstruction ::constructor_new (_inLexique, var_cas_expression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4324_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_send) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'constant_while_before_in_foreach_instruction'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_constant_while_before_in_foreach_instruction_semantics_parser_4364_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_typeCplusPlusName  &var_cas_outIndexVariable,
                                GGS_typeInstructionList  &var_cas_out_before_instructionList) {
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4378)) ;
  { bool syntaxRepeat_40 = true ;
    while (syntaxRepeat_40) {
        switch (select_semantics_parser_41 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        nt_expression_parse (_inLexique) ;
        switch (select_semantics_parser_42 (_inLexique)) {
          case 1 : {
            nt_parse_effective_input_parameters_list_parse (_inLexique) ;
            } break ;
          case 2 : {
            } break ;
          default :
            break ;
        }
      switch (select_repeat_semantics_parser_40 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_40 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_43 (_inLexique)) {
    case 1 : {
      var_cas_outIndexVariable = GGS_typeNullName ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      GGS_lstring  var_cas_indexVariableName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_indexVariableName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      var_cas_outIndexVariable = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_indexVariableName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (4404)), var_cas_indexVariableName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4404)) COMMA_HERE) ;
      var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (_inLexique, var_cas_indexVariableName, GGS_typeGalgas_uint ::constructor_new (_inLexique COMMA_HERE), var_cas_outIndexVariable COMMA_SOURCE_FILE_AT_LINE (4405)) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_parser_44 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  var_cas_out_before_instructionList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  switch (select_semantics_parser_45 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_before) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_out_before_instructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4378)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_constant_while_before_in_foreach_instruction_semantics_parser_4364_4_secondPhase (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                GGS_foreachEnumerationList  &var_cas_outForeachEnumerationList,
                                GGS_typeExpression  &var_cas_outWhileExpression,
                                GGS_typeInstructionList  &var_cas_out_do_instructionList) {
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4453)) ;
  var_cas_outForeachEnumerationList = GGS_foreachEnumerationList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_40 = true ;
    while (syntaxRepeat_40) {
        GGS_location  var_cas_magicNumber ;
        var_cas_magicNumber = GGS_location (_inLexique) ;
        GGS_bool var_cas_ascending ;
        switch (select_semantics_parser_41 (_inLexique)) {
          case 1 : {
            var_cas_ascending = GGS_bool (true, true) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
            var_cas_ascending = GGS_bool (true, true) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
            var_cas_ascending = GGS_bool (true, false) ;
            } break ;
          default :
            break ;
        }
        GGS_typeExpression  var_cas_sourceExpression ;
        GGS_AC_galgasType  var_cas_sourceExpressionType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
        GGS_typeListeAttributsSemantiques  var_cas_formalEnumerationList ;
        GGS_localConstantBuildStyleEnum var_cas_localConstantBuildStyleEnum ;
        const GGS_AC_galgasType  _temp_173467 = var_cas_sourceExpressionType ;
        if (_temp_173467._isBuilt ()) {
          _temp_173467 (HERE)->method_acceptForeachInstruction (_inLexique, var_cas_magicNumber, var_cas_formalEnumerationList, var_cas_localConstantBuildStyleEnum COMMA_SOURCE_FILE_AT_LINE (4483)) ;
        }
        GGS_string var_cas_typeName ;
        const GGS_AC_galgasType  _temp_173671 = var_cas_sourceExpressionType ;
        if (_temp_173671._isBuilt ()) {
          _temp_173671 (HERE)->method_getTypeName (_inLexique, var_cas_typeName COMMA_SOURCE_FILE_AT_LINE (4490)) ;
        }
        switch (select_semantics_parser_42 (_inLexique)) {
          case 1 : {
            GGS_bool automatic_var_24 ;
            nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_formalEnumerationList, var_cas_magicNumber, var_cas_localConstantBuildStyleEnum, automatic_var_24) ;
            } break ;
          case 2 : {
            GGS_bool var_cas_mapStyle ;
            var_cas_mapStyle = (var_cas_localConstantBuildStyleEnum)._operator_isNotEqual (GGS_localConstantBuildStyleEnum::constructor_listStyle (_inLexique COMMA_HERE)) ;
            GGS_bool var_cas_firstOne ;
            var_cas_firstOne = GGS_bool (true, true) ;
            {
              GGS_typeListeAttributsSemantiques::cEnumerator enumerator_174106 (var_cas_formalEnumerationList, true) ;
              const GGS_typeListeAttributsSemantiques::cElement * operand_174106 = NULL ;
              while (((operand_174106 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_174106.nextObject ()))) {
                macroValidPointer (operand_174106) ;
                GGS_typeCplusPlusName  var_cas_cppName ;
                if ((((var_cas_localConstantBuildStyleEnum)._operator_isEqual (GGS_localConstantBuildStyleEnum::constructor_firstIsKeyOtherMapStyle (_inLexique COMMA_HERE)))._operator_and (var_cas_firstOne)).isBuiltAndTrue ()) {
                  var_cas_cppName = GGS_typeKeyName ::constructor_new (_inLexique, var_cas_magicNumber COMMA_HERE) ;
                }else{
                  var_cas_cppName = GGS_typeOperandName ::constructor_new (_inLexique, var_cas_magicNumber, operand_174106->aNomAttribut.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4508)), var_cas_mapStyle COMMA_HERE) ;
                }
                var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_174106->aNomAttribut, operand_174106->mAttributType, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (4510)) ;
                var_cas_firstOne = GGS_bool (true, false) ;
              }
            }
            } break ;
          default :
            break ;
        }
        var_cas_outForeachEnumerationList._addAssign_operation (var_cas_sourceExpression, var_cas_magicNumber, var_cas_typeName, var_cas_ascending) ;
      switch (select_repeat_semantics_parser_40 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_40 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_43 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      GGS_lstring  var_cas_indexVariableName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_indexVariableName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_typeCplusPlusName  var_cas_indexVariable ;
      var_cas_indexVariable = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_indexVariableName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (4527)), var_cas_indexVariableName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4527)) COMMA_HERE) ;
      var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (_inLexique, var_cas_indexVariableName, GGS_typeGalgas_uint ::constructor_new (_inLexique COMMA_HERE), var_cas_indexVariable COMMA_SOURCE_FILE_AT_LINE (4528)) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_parser_44 (_inLexique)) {
    case 1 : {
      var_cas_outWhileExpression = GGS_typeTrueBool ::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_resultType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_outWhileExpression, var_cas_resultType) ;
      GGS_typeGalgas_bool  var_cas_b ;
      var_cas_b = GGS_typeGalgas_bool::_castFrom (_inLexique, var_cas_resultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4547)) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_parser_45 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_before) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  var_cas_out_do_instructionList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_out_do_instructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4453)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_constant_while_before_in_foreach_instruction_semantics_parser_4364_4_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_40 = true ;
    while (syntaxRepeat_40) {
        switch (select_semantics_parser_41 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        nt_expression_parse (_inLexique) ;
        switch (select_semantics_parser_42 (_inLexique)) {
          case 1 : {
            nt_parse_effective_input_parameters_list_parse (_inLexique) ;
            } break ;
          case 2 : {
            } break ;
          default :
            break ;
        }
      switch (select_repeat_semantics_parser_40 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_40 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_43 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_parser_44 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_parser_45 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_before) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_4576_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (4590)) ;
  GGS_typeInstructionList  var_cas_before_instructionList ;
  GGS_typeExpression  var_cas_whileExpression ;
  GGS_foreachEnumerationList  var_cas_foreachEnumerationList ;
  GGS_typeInstructionList  var_cas_do_instructionList ;
  GGS_typeCplusPlusName  var_cas_indexVariable ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_178192 = _inLexique.parsingContext () ;
    nt_constant_while_before_in_foreach_instruction_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext, var_cas_indexVariable, var_cas_before_instructionList) ;
  //--- Branch of parse/rewind instruction
    _inLexique.setParsingContext (context_178192) ;
    nt_constant_while_before_in_foreach_instruction_secondPhase (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext, var_cas_foreachEnumerationList, var_cas_whileExpression, var_cas_do_instructionList) ;
  //--- End of parse/rewind instruction
  GGS_typeInstructionList  var_cas_between_instructionList ;
  var_cas_between_instructionList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4628)) ;
  switch (select_semantics_parser_46 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { const GGS_typeCplusPlusName _var_178641 = var_cas_indexVariable ; // CAST instruction
        if (_var_178641.getPtr () != NULL) {
          macroValidPointer (_var_178641.getPtr ()) ;
          if (typeid (cPtr_typeAutomaticName) == typeid (* (_var_178641.getPtr ()))) {
            const GGS_typeAutomaticName var_cas_a (_var_178641.getPtr ()) ;
            var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_a.reader_mName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4634)), var_cas_a.reader_mVariableLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (4634)) COMMA_HERE), GGS_typeGalgas_uint ::constructor_new (_inLexique COMMA_HERE), var_cas_indexVariable COMMA_SOURCE_FILE_AT_LINE (4633)) ;
          }else{
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_between) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_between_instructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4628)) ;
  GGS_typeInstructionList  var_cas_after_instructionList ;
  var_cas_after_instructionList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4657)) ;
  switch (select_semantics_parser_47 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { const GGS_typeCplusPlusName _var_179568 = var_cas_indexVariable ; // CAST instruction
        if (_var_179568.getPtr () != NULL) {
          macroValidPointer (_var_179568.getPtr ()) ;
          if (typeid (cPtr_typeAutomaticName) == typeid (* (_var_179568.getPtr ()))) {
            const GGS_typeAutomaticName var_cas_a (_var_179568.getPtr ()) ;
            var_cas_ioVariablesMap.modifier_insertUsedConstInArgument (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_a.reader_mName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4663)), var_cas_a.reader_mVariableLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (4663)) COMMA_HERE), GGS_typeGalgas_uint ::constructor_new (_inLexique COMMA_HERE), var_cas_indexVariable COMMA_SOURCE_FILE_AT_LINE (4662)) ;
          }else{
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_after) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_after_instructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4657)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (4590)) ;
  var_cas_instruction = GGS_typeForeachInstruction ::constructor_new (_inLexique, var_cas_foreachEnumerationList, var_cas_indexVariable, var_cas_whileExpression, var_cas_before_instructionList, var_cas_do_instructionList, var_cas_between_instructionList, var_cas_after_instructionList COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4576_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_178192 = _inLexique.parsingContext () ;
    nt_constant_while_before_in_foreach_instruction_parse (_inLexique) ;
  //--- Branch of parse/rewind instruction
    _inLexique.setParsingContext (context_178192) ;
    nt_constant_while_before_in_foreach_instruction_parse (_inLexique) ;
  //--- End of parse/rewind instruction
  switch (select_semantics_parser_46 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_between) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_parser_47 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_after) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'parse_match_operand'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_operand_semantics_parser_4706_4_ (galgas_scanner & _inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  &var_cas_outCppName,
                                GGS_lstring  &var_cas_outBaseTypeName,
                                GGS_location  &var_cas_outVarLocation,
                                GGS_bool &var_cas_outIsEnumeration,
                                GGS_enumConstantMap  &var_cas_outEnumMessageMap) {
  GGS_lstring  var_cas_variableName ;
  GGS_AC_galgasType  var_cas_type ;
  nt_read_access_ (_inLexique, var_cas_variableName, var_cas_outCppName, var_cas_type, var_cas_ioVariablesMap) ;
  var_cas_outVarLocation = GGS_location (_inLexique) ;
  { const GGS_AC_galgasType _var_181787 = var_cas_type ; // CAST instruction
    if (_var_181787.getPtr () != NULL) {
      macroValidPointer (_var_181787.getPtr ()) ;
      if (dynamic_cast <cPtr_typeGalgasClassType *> (_var_181787.getPtr ()) != NULL) {
        const GGS_typeGalgasClassType var_cas_t (_var_181787.getPtr ()) ;
        var_cas_outBaseTypeName = var_cas_t.reader_mClassTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4725)) ;
        var_cas_outIsEnumeration = GGS_bool (true, false) ;
        var_cas_outEnumMessageMap = GGS_enumConstantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      }else if (dynamic_cast <cPtr_typeGalgas_enum *> (_var_181787.getPtr ()) != NULL) {
        const GGS_typeGalgas_enum var_cas_e (_var_181787.getPtr ()) ;
        var_cas_outBaseTypeName = var_cas_e.reader_mEnumTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4729)) ;
        var_cas_outIsEnumeration = GGS_bool (true, true) ;
        var_cas_outEnumMessageMap = var_cas_e.reader_mEnumConstantesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4731)) ;
      }else{
        GGS_string var_cas_actualTypeName ;
        const GGS_AC_galgasType  _temp_181545 = var_cas_type ;
        if (_temp_181545._isBuilt ()) {
          _temp_181545 (HERE)->method_getTypeName (_inLexique, var_cas_actualTypeName COMMA_SOURCE_FILE_AT_LINE (4734)) ;
        }
        var_cas_variableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the type of this variable is '@"))._operator_concat (var_cas_actualTypeName))._operator_concat (GGS_string (true, "' ; I was expected an enumeration type or an abstract type")) COMMA_SOURCE_FILE_AT_LINE (4737)) ;
        var_cas_outBaseTypeName._drop_operation () ;
        var_cas_outIsEnumeration._drop_operation () ;
        var_cas_outEnumMessageMap._drop_operation () ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_operand_semantics_parser_4706_4_parse (galgas_scanner & _inLexique) {
  nt_read_access_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_case_semantics_parser_4744_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  var_cas_inVarLocation,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  /* var_cas_inEnumMessageMap */,
                                GGS_lstring  &var_cas_outTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  const GGS_M_semanticsEntitiesForUse  _temp_182331 = var_cas_ioComponentSemanticsEntitiesMap ;
  if (_temp_182331._isBuilt ()) {
    _temp_182331 (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (4757)) ;
  }
  GGS_AC_galgasType  var_cas_definitionClasse1 ;
  var_cas_definitionClasse1 = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (4758)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (4758)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_definitionClasse1.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (4760)) ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 ;
  var_cas_tableDesClassesAncetresType1 = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4761)) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 ;
  var_cas_listeAttributs1 = var_cas_classType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (4762)) ;
  GGS_bool var_cas_isAbstract ;
  var_cas_isAbstract = var_cas_classType.reader_mClassIsAbstract (_inLexique COMMA_SOURCE_FILE_AT_LINE (4763)) ;
  if ((var_cas_isAbstract).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "an abstract class is not allowed here") COMMA_SOURCE_FILE_AT_LINE (4766)) ;
  }
  if ((var_cas_inIsEnumeration).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "a constant of '@"))._operator_concat (var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4770))))._operator_concat (GGS_string (true, "' enumeration type is expected here")) COMMA_SOURCE_FILE_AT_LINE (4770)) ;
  }else if (((var_cas_tableDesClassesAncetresType1.reader_hasKey (_inLexique, var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4771)) COMMA_SOURCE_FILE_AT_LINE (4771)))._operator_not ()).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This type does not inherit from '"))._operator_concat (var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4772))))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (4772)) ;
  }
  GGS_bool automatic_var_25 ;
  nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_inVarLocation, GGS_localConstantBuildStyleEnum::constructor_listStyle (_inLexique COMMA_HERE), automatic_var_25) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_4744_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  nt_parse_effective_input_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_case_semantics_parser_4786_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  /* var_cas_inVarLocation */,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  var_cas_inEnumMessageMap,
                                GGS_lstring  &var_cas_outEnumConstantName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outEnumConstantName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  if ((var_cas_inIsEnumeration).isBuiltAndTrue ()) {
    GGS_bool automatic_var_26 ;
    const GGS_enumConstantMap  _temp_184102 = var_cas_inEnumMessageMap ;
    if (_temp_184102._isBuilt ()) {
      _temp_184102 (HERE)->method_searchKey (_inLexique, var_cas_outEnumConstantName, automatic_var_26 COMMA_SOURCE_FILE_AT_LINE (4799)) ;
    }
  }else{
    var_cas_outEnumConstantName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "a class that inherit from '@"))._operator_concat (var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4801))))._operator_concat (GGS_string (true, "' abstract class is expected here")) COMMA_SOURCE_FILE_AT_LINE (4801)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_4786_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_4807_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_operand1_cppName ;
  GGS_lstring  var_cas_operand1_typeName ;
  GGS_location  var_cas_operand1_location ;
  GGS_bool var_cas_operand1_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand1_enumMessageMap ;
  nt_parse_match_operand_ (_inLexique, var_cas_ioVariablesMap, var_cas_operand1_cppName, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_operand2_cppName ;
  GGS_lstring  var_cas_operand2_typeName ;
  GGS_location  var_cas_operand2_location ;
  GGS_bool var_cas_operand2_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand2_enumMessageMap ;
  nt_parse_match_operand_ (_inLexique, var_cas_ioVariablesMap, var_cas_operand2_cppName, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_L_matchInstructionCasesList  var_cas_casesList ;
  var_cas_casesList = GGS_L_matchInstructionCasesList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (4852)) ;
  { bool syntaxRepeat_48 = true ;
    while (syntaxRepeat_48) {
      switch (select_repeat_semantics_parser_48 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4856)) ;
          GGS_lstring  var_cas_case1_name ;
          nt_parse_match_case_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap, var_cas_case1_name) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
          GGS_lstring  var_cas_case2_name ;
          nt_parse_match_case_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap, var_cas_case2_name) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          GGS_typeInstructionList  var_cas_instructionsList ;
          var_cas_instructionsList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
          nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
          var_cas_casesList._addAssign_operation (var_cas_case1_name, var_cas_case2_name, var_cas_instructionsList) ;
          var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4856)) ;
          } break ;
        default :
          syntaxRepeat_48 = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4900)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_elsePartInstructionsList ;
  var_cas_elsePartInstructionsList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elsePartInstructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4900)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (4852)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeMatchInstruction ::constructor_new (_inLexique, var_cas_operand1_location, var_cas_operand2_location, var_cas_operand1_cppName, var_cas_operand2_cppName, var_cas_operand1_typeName, var_cas_operand2_typeName, var_cas_operand1_isEnumeration, var_cas_operand2_isEnumeration, var_cas_casesList, var_cas_elsePartInstructionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4807_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  nt_parse_match_operand_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
  nt_parse_match_operand_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat_48 = true ;
    while (syntaxRepeat_48) {
      switch (select_repeat_semantics_parser_48 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          nt_parse_match_case_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
          nt_parse_match_case_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          nt_semantic_instructions_list_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_48 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Implementation of production rule 'semantic_instructions_list_no_verif'   *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instructions_list_no_verif_semantics_parser_4936_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext) {
  { bool syntaxRepeat_49 = true ;
    while (syntaxRepeat_49) {
      switch (select_repeat_semantics_parser_49 (_inLexique)) {
        case 2 : {
          nt_semantic_instruction_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inSemanticContext) ;
          } break ;
        default :
          syntaxRepeat_49 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_no_verif_semantics_parser_4936_4_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_49 = true ;
    while (syntaxRepeat_49) {
      switch (select_repeat_semantics_parser_49 (_inLexique)) {
        case 2 : {
          nt_semantic_instruction_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_49 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_4969_4_ (galgas_scanner & _inLexique,
                                const GGS_lstring  /* var_cas_inTypeName */,
                                const GGS_lstring  /* var_cas_inTargetVarName */,
                                const GGS_typeCplusPlusName  var_cas_inVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */) {
  var_cas_ioInstructionList._addAssign_operation (GGS_typeInstructionDeclarationVarLocale ::constructor_new (_inLexique, var_cas_inVariableCppName, var_cas_inVariableType COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_4969_4_parse (galgas_scanner & /* _inLexique */) {
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_4985_4_ (galgas_scanner & _inLexique,
                                const GGS_lstring  /* var_cas_inTypeName */,
                                const GGS_lstring  var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  ::routine_checkAssignmentTypesCompatibility (_inLexique,  var_cas_inVariableType,  var_cas_sourceType,  GGS_location (_inLexique),  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (5007)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_declarationInstructionWithAssignment ::constructor_new (_inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  GGS_AC_galgasType  automatic_var_27 ;
  GGS_typeCplusPlusName  automatic_var_28 ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, automatic_var_27, automatic_var_28 COMMA_SOURCE_FILE_AT_LINE (5014)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_4985_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_5019_4_ (galgas_scanner & _inLexique,
                                const GGS_lstring  /* var_cas_inTypeName */,
                                const GGS_lstring  var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  GGS_lstring  var_cas_constructorName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_constructorName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  const GGS_AC_galgasType  _temp_192362 = var_cas_inVariableType ;
  if (_temp_192362._isBuilt ()) {
    _temp_192362 (HERE)->method_handleConstructorCall (_inLexique, var_cas_constructorName, var_cas_listeAttributsSemantiques COMMA_SOURCE_FILE_AT_LINE (5036)) ;
  }
  GGS_typeExpressionList  var_cas_expressionList ;
  nt_output_expression_list_ (_inLexique, var_cas_expressionList, var_cas_listeAttributsSemantiques, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inSemanticContext, var_cas_ioVariablesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_e ;
  var_cas_e = GGS_typeConstructorExpression ::constructor_new (_inLexique, var_cas_inVariableType, var_cas_constructorName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5051)), var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (GGS_C_declarationInstructionWithAssignment ::constructor_new (_inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_e COMMA_HERE)) ;
  GGS_AC_galgasType  automatic_var_29 ;
  GGS_typeCplusPlusName  automatic_var_30 ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, automatic_var_29, automatic_var_30 COMMA_SOURCE_FILE_AT_LINE (5056)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_5019_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_output_expression_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5065_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  GGS_lstring  var_cas_mapindexTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapindexTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5080)) COMMA_SOURCE_FILE_AT_LINE (5080)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5081)) COMMA_SOURCE_FILE_AT_LINE (5081))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapindexType ::constructor_new (_inLexique, var_cas_mapindexTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5083)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      GGS_lstring  var_cas_mapTypeName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      const GGS_M_semanticsEntitiesForUse  _temp_194512 = var_cas_ioComponentSemanticsEntitiesMap ;
      if (_temp_194512._isBuilt ()) {
        _temp_194512 (HERE)->method_searchKey (_inLexique, var_cas_mapTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (5090)) ;
      }
      GGS_AC_galgasType  var_cas_aType ;
      var_cas_aType = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_theEntity.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5091)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (5091)) ;
      GGS_typeGalgasMapType  var_cas_mapType ;
      var_cas_mapType = GGS_typeGalgasMapType::_castFrom (_inLexique, var_cas_aType.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5092)) ;
      GGS_typeListeAttributsSemantiques  var_cas_mapAttributesList ;
      var_cas_mapAttributesList = var_cas_mapType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (5093)) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesSurcharger ;
      var_cas_tableMethodesSurcharger = var_cas_mapType.reader_aTableMethodesSurcharger (_inLexique COMMA_SOURCE_FILE_AT_LINE (5094)) ;
      GGS_mapModifierMap  var_cas_modifierMethodMap ;
      var_cas_modifierMethodMap = var_cas_mapType.reader_mModifierMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (5095)) ;
      GGS_mapMethodMap  var_cas_readerMethodMap ;
      var_cas_readerMethodMap = var_cas_mapType.reader_mReaderMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (5096)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_mapIndexSearchReaderMap  var_cas_mapIndexSearchReaderMap ;
      var_cas_mapIndexSearchReaderMap = GGS_mapIndexSearchReaderMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_51 = true ;
        while (syntaxRepeat_51) {
          switch (select_repeat_semantics_parser_51 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_searchReaderName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_searchReaderName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              GGS_lstring  var_cas_mapindexErrorMessage ;
              _inLexique._assignFromAttribute_tokenString (var_cas_mapindexErrorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              if (var_cas_mapindexErrorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (5108)) ;
              }
              var_cas_mapIndexSearchReaderMap.modifier_insertKey (_inLexique, var_cas_searchReaderName, var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (5110)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_51 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_t ;
      var_cas_t = GGS_typeGalgasMapindexType ::constructor_new (_inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap, var_cas_tableMethodesSurcharger, var_cas_modifierMethodMap, var_cas_readerMethodMap COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_t COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (5123)) ;
      GGS_typeEntityToGenerate  var_cas_e ;
      var_cas_e = GGS_C_mapindexToImplement ::constructor_new (_inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_e) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5065_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  GGS_lstring  var_cas_mapindexTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapindexTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5147)) COMMA_SOURCE_FILE_AT_LINE (5147)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5148)) COMMA_SOURCE_FILE_AT_LINE (5148))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapindexType ::constructor_new (_inLexique, var_cas_mapindexTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5150)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      GGS_lstring  var_cas_mapTypeName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      const GGS_M_semanticsEntitiesForUse  _temp_197109 = var_cas_ioComponentSemanticsEntitiesMap ;
      if (_temp_197109._isBuilt ()) {
        _temp_197109 (HERE)->method_searchKey (_inLexique, var_cas_mapTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (5157)) ;
      }
      GGS_AC_galgasType  var_cas_aType ;
      var_cas_aType = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_theEntity.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5158)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (5158)) ;
      GGS_typeGalgasMapType  var_cas_mapType ;
      var_cas_mapType = GGS_typeGalgasMapType::_castFrom (_inLexique, var_cas_aType.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (5159)) ;
      GGS_typeListeAttributsSemantiques  var_cas_mapAttributesList ;
      var_cas_mapAttributesList = var_cas_mapType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (5160)) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesSurcharger ;
      var_cas_tableMethodesSurcharger = var_cas_mapType.reader_aTableMethodesSurcharger (_inLexique COMMA_SOURCE_FILE_AT_LINE (5161)) ;
      GGS_mapModifierMap  var_cas_modifierMethodMap ;
      var_cas_modifierMethodMap = var_cas_mapType.reader_mModifierMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (5162)) ;
      GGS_mapMethodMap  var_cas_readerMethodMap ;
      var_cas_readerMethodMap = var_cas_mapType.reader_mReaderMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (5163)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_mapIndexSearchReaderMap  var_cas_mapIndexSearchReaderMap ;
      var_cas_mapIndexSearchReaderMap = GGS_mapIndexSearchReaderMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_51 = true ;
        while (syntaxRepeat_51) {
          switch (select_repeat_semantics_parser_51 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_searchReaderName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_searchReaderName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              GGS_lstring  var_cas_mapindexErrorMessage ;
              _inLexique._assignFromAttribute_tokenString (var_cas_mapindexErrorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              if (var_cas_mapindexErrorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (5175)) ;
              }
              var_cas_mapIndexSearchReaderMap.modifier_insertKey (_inLexique, var_cas_searchReaderName, var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (5177)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_51 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_t ;
      var_cas_t = GGS_typeGalgasMapindexType ::constructor_new (_inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap, var_cas_tableMethodesSurcharger, var_cas_modifierMethodMap, var_cas_readerMethodMap COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_t COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (5190)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5065_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat_51 = true ;
        while (syntaxRepeat_51) {
          switch (select_repeat_semantics_parser_51 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_51 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5200_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mapTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_52 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5215)) COMMA_SOURCE_FILE_AT_LINE (5215)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5216)) COMMA_SOURCE_FILE_AT_LINE (5216))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapType ::constructor_new (_inLexique, var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5218)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
      GGS_lstring  var_cas_cppClassName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_cppClassName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      var_cas_cppClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old style map definition") COMMA_SOURCE_FILE_AT_LINE (5225)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_53 = true ;
        while (syntaxRepeat_53) {
          switch (select_repeat_semantics_parser_53 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5238)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5245)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut ;
              var_cas_tableDebut = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin ;
              var_cas_tableFin = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_tableMethodesBloc.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin COMMA_SOURCE_FILE_AT_LINE (5280)) ;
              } break ;
            default :
              syntaxRepeat_53 = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_EXformalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_EXformalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring ::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint ::constructor_new (_inLexique COMMA_HERE) ;
      {
        GGS_insertOrSearchMethodList::cEnumerator enumerator_202680 (var_cas_insertMethodList, true) ;
        const GGS_insertOrSearchMethodList::cElement * operand_202680 = NULL ;
        while (((operand_202680 = (GGS_insertOrSearchMethodList::cElement *) enumerator_202680.nextObject ()))) {
          macroValidPointer (operand_202680) ;
          GGS_L_EXsignature  var_cas_methodSignature ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
          var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_202864 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_202864 = NULL ;
            while (((operand_202864 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_202864.nextObject ()))) {
              macroValidPointer (operand_202864) ;
              var_cas_methodSignature._addAssign_operation (operand_202864->mAttributType, var_cas_inPassingMode) ;
            }
          }
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_202680->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5308)) ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
          var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_203294 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_203294 = NULL ;
            while (((operand_203294 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_203294.nextObject ()))) {
              macroValidPointer (operand_203294) ;
              var_cas_methodSignature._addAssign_operation (operand_203294->mAttributType, var_cas_inPassingMode) ;
            }
          }
          GGS_lstring  var_cas_insertKeyAndGetIndexName ;
          var_cas_insertKeyAndGetIndexName = GGS_lstring ::constructor_new (_inLexique, (operand_202680->mMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5316)))._operator_concat (GGS_string (true, "GetIndex")), operand_202680->mMethodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (5316)) COMMA_HERE) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5317)) ;
        }
      }
      {
        GGS_insertOrSearchMethodList::cEnumerator enumerator_203656 (var_cas_searchMethodList, true) ;
        const GGS_insertOrSearchMethodList::cElement * operand_203656 = NULL ;
        while (((operand_203656 = (GGS_insertOrSearchMethodList::cElement *) enumerator_203656.nextObject ()))) {
          macroValidPointer (operand_203656) ;
          GGS_L_EXsignature  var_cas_methodSignature ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
          var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_203838 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_203838 = NULL ;
            while (((operand_203838 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_203838.nextObject ()))) {
              macroValidPointer (operand_203838) ;
              var_cas_methodSignature._addAssign_operation (operand_203838->mAttributType, var_cas_outPassingMode) ;
            }
          }
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_203656->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5326)) ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
          var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_204266 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_204266 = NULL ;
            while (((operand_204266 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_204266.nextObject ()))) {
              macroValidPointer (operand_204266) ;
              var_cas_methodSignature._addAssign_operation (operand_204266->mAttributType, var_cas_outPassingMode) ;
            }
          }
          GGS_lstring  var_cas_insertKeyAndGetIndexName ;
          var_cas_insertKeyAndGetIndexName = GGS_lstring ::constructor_new (_inLexique, (operand_203656->mMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5334)))._operator_concat (GGS_string (true, "GetIndex")), operand_203656->mMethodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (5334)) COMMA_HERE) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5335)) ;
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType ::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_mapMethodMap ::constructor_emptyMap (_inLexique COMMA_HERE) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5346)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_typeDefinitionTableAimplementer ::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_cppClassName, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_tableMethodesBloc COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 3 : {
      GGS_lstring  var_cas_enumTypeName ;
      GGS_lstring  var_cas_checkFinalStateMethod ;
      switch (select_semantics_parser_54 (_inLexique)) {
        case 1 : {
          var_cas_enumTypeName = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
          var_cas_checkFinalStateMethod = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
          _inLexique._assignFromAttribute_tokenString (var_cas_enumTypeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          _inLexique._assignFromAttribute_tokenString (var_cas_checkFinalStateMethod) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_removeMethodList ;
      var_cas_removeMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_EXformalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_EXformalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring ::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint ::constructor_new (_inLexique COMMA_HERE) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_mapMethodMap  var_cas_mapReaderMethodMap ;
      var_cas_mapReaderMethodMap = GGS_mapMethodMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_55 = true ;
        while (syntaxRepeat_55) {
          switch (select_repeat_semantics_parser_55 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (5401)) ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_207632 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_207632 = NULL ;
                while (((operand_207632 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_207632.nextObject ()))) {
                  macroValidPointer (operand_207632) ;
                  var_cas_methodSignature._addAssign_operation (operand_207632->mAttributType, var_cas_outPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5410)) ;
              var_cas_removeMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5411)), GGS_bool (true, false), GGS_string (true, "")) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5413)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_208221 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_208221 = NULL ;
                  while (((operand_208221 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_208221.nextObject ()))) {
                    macroValidPointer (operand_208221) ;
                    var_cas_getIndexMethodSignature._addAssign_operation (operand_208221->mAttributType, var_cas_outPassingMode) ;
                  }
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5420)) ;
                var_cas_removeMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5421)), GGS_bool (true, true), GGS_string (true, "")) ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (5428)) ;
              }
              GGS_string var_cas_shadowErrorMessage ;
              switch (select_semantics_parser_56 (_inLexique)) {
                case 1 : {
                  var_cas_shadowErrorMessage = GGS_string (true, "") ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  GGS_lstring  var_cas_shadowErrorMessageString ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_shadowErrorMessageString) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (var_cas_shadowErrorMessageString._isBuilt ()) {
                    ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_shadowErrorMessageString COMMA_SOURCE_FILE_AT_LINE (5436)) ;
                  }
                  var_cas_shadowErrorMessage = var_cas_shadowErrorMessageString.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5438)) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_209317 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_209317 = NULL ;
                while (((operand_209317 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_209317.nextObject ()))) {
                  macroValidPointer (operand_209317) ;
                  var_cas_methodSignature._addAssign_operation (operand_209317->mAttributType, var_cas_inPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5447)) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5448)), GGS_bool (true, false), var_cas_shadowErrorMessage) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5450)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_209921 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_209921 = NULL ;
                  while (((operand_209921 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_209921.nextObject ()))) {
                    macroValidPointer (operand_209921) ;
                    var_cas_getIndexMethodSignature._addAssign_operation (operand_209921->mAttributType, var_cas_inPassingMode) ;
                  }
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5457)) ;
                var_cas_insertMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5458)), GGS_bool (true, true), var_cas_shadowErrorMessage) ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_K_escapeCharacters (_inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (5465)) ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_210703 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_210703 = NULL ;
                while (((operand_210703 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_210703.nextObject ()))) {
                  macroValidPointer (operand_210703) ;
                  var_cas_methodSignature._addAssign_operation (operand_210703->mAttributType, var_cas_outPassingMode) ;
                }
              }
              var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5474)) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5475)), GGS_bool (true, false), GGS_string (true, "")) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5477)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_211322 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_211322 = NULL ;
                  while (((operand_211322 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_211322.nextObject ()))) {
                    macroValidPointer (operand_211322) ;
                    var_cas_getIndexMethodSignature._addAssign_operation (operand_211322->mAttributType, var_cas_outPassingMode) ;
                  }
                }
                var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5484)) ;
                var_cas_searchMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5485)), GGS_bool (true, true), GGS_string (true, "")) ;
              }
              } break ;
            default :
              syntaxRepeat_55 = false ;
              break ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType ::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapReaderMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5497)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_mapToImplement ::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_enumTypeName, var_cas_checkFinalStateMethod, var_cas_listeTousAttributsSemantiques, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_removeMethodList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5200_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mapTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_52 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5526)) COMMA_SOURCE_FILE_AT_LINE (5526)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5526)) COMMA_SOURCE_FILE_AT_LINE (5526))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapType ::constructor_new (_inLexique, var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5528)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
      GGS_lstring  var_cas_cppClassName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_cppClassName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_53 = true ;
        while (syntaxRepeat_53) {
          switch (select_repeat_semantics_parser_53 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5547)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5554)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut ;
              var_cas_tableDebut = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin ;
              var_cas_tableFin = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_tableMethodesBloc.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin COMMA_SOURCE_FILE_AT_LINE (5589)) ;
              } break ;
            default :
              syntaxRepeat_53 = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_EXformalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_EXformalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring ::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint ::constructor_new (_inLexique COMMA_HERE) ;
      {
        GGS_insertOrSearchMethodList::cEnumerator enumerator_216096 (var_cas_insertMethodList, true) ;
        const GGS_insertOrSearchMethodList::cElement * operand_216096 = NULL ;
        while (((operand_216096 = (GGS_insertOrSearchMethodList::cElement *) enumerator_216096.nextObject ()))) {
          macroValidPointer (operand_216096) ;
          GGS_L_EXsignature  var_cas_methodSignature ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
          var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_216280 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_216280 = NULL ;
            while (((operand_216280 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_216280.nextObject ()))) {
              macroValidPointer (operand_216280) ;
              var_cas_methodSignature._addAssign_operation (operand_216280->mAttributType, var_cas_inPassingMode) ;
            }
          }
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_216096->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5617)) ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
          var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_216710 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_216710 = NULL ;
            while (((operand_216710 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_216710.nextObject ()))) {
              macroValidPointer (operand_216710) ;
              var_cas_methodSignature._addAssign_operation (operand_216710->mAttributType, var_cas_inPassingMode) ;
            }
          }
          GGS_lstring  var_cas_insertKeyAndGetIndexName ;
          var_cas_insertKeyAndGetIndexName = GGS_lstring ::constructor_new (_inLexique, (operand_216096->mMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5625)))._operator_concat (GGS_string (true, "GetIndex")), operand_216096->mMethodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (5625)) COMMA_HERE) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5626)) ;
        }
      }
      {
        GGS_insertOrSearchMethodList::cEnumerator enumerator_217072 (var_cas_searchMethodList, true) ;
        const GGS_insertOrSearchMethodList::cElement * operand_217072 = NULL ;
        while (((operand_217072 = (GGS_insertOrSearchMethodList::cElement *) enumerator_217072.nextObject ()))) {
          macroValidPointer (operand_217072) ;
          GGS_L_EXsignature  var_cas_methodSignature ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
          var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_217256 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_217256 = NULL ;
            while (((operand_217256 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_217256.nextObject ()))) {
              macroValidPointer (operand_217256) ;
              var_cas_methodSignature._addAssign_operation (operand_217256->mAttributType, var_cas_outPassingMode) ;
            }
          }
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_217072->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5635)) ;
          var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
          var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
          var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
          {
            GGS_typeListeAttributsSemantiques::cEnumerator enumerator_217687 (var_cas_listeTousAttributsSemantiques, true) ;
            const GGS_typeListeAttributsSemantiques::cElement * operand_217687 = NULL ;
            while (((operand_217687 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_217687.nextObject ()))) {
              macroValidPointer (operand_217687) ;
              var_cas_methodSignature._addAssign_operation (operand_217687->mAttributType, var_cas_outPassingMode) ;
            }
          }
          GGS_lstring  var_cas_insertKeyAndGetIndexName ;
          var_cas_insertKeyAndGetIndexName = GGS_lstring ::constructor_new (_inLexique, (operand_217072->mMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5643)))._operator_concat (GGS_string (true, "GetIndex")), operand_217072->mMethodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (5643)) COMMA_HERE) ;
          var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5644)) ;
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType ::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_mapMethodMap ::constructor_emptyMap (_inLexique COMMA_HERE) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5655)) ;
      GGS_TypeModel  var_cas_type ;
      var_cas_type = GGS_MapModel ::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (5657)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 3 : {
      switch (select_semantics_parser_54 (_inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_EXformalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_EXformalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring ::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint ::constructor_new (_inLexique COMMA_HERE) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_mapMethodMap  var_cas_mapReaderMethodMap ;
      var_cas_mapReaderMethodMap = GGS_mapMethodMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_55 = true ;
        while (syntaxRepeat_55) {
          switch (select_repeat_semantics_parser_55 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_31 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_31) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_220046 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_220046 = NULL ;
                while (((operand_220046 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_220046.nextObject ()))) {
                  macroValidPointer (operand_220046) ;
                  var_cas_methodSignature._addAssign_operation (operand_220046->mAttributType, var_cas_outPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5704)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5706)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_220591 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_220591 = NULL ;
                  while (((operand_220591 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_220591.nextObject ()))) {
                    macroValidPointer (operand_220591) ;
                    var_cas_getIndexMethodSignature._addAssign_operation (operand_220591->mAttributType, var_cas_outPassingMode) ;
                  }
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5713)) ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_32 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_32) ;
              switch (select_semantics_parser_56 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_221272 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_221272 = NULL ;
                while (((operand_221272 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_221272.nextObject ()))) {
                  macroValidPointer (operand_221272) ;
                  var_cas_methodSignature._addAssign_operation (operand_221272->mAttributType, var_cas_inPassingMode) ;
                }
              }
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5732)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5734)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_221816 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_221816 = NULL ;
                  while (((operand_221816 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_221816.nextObject ()))) {
                    macroValidPointer (operand_221816) ;
                    var_cas_getIndexMethodSignature._addAssign_operation (operand_221816->mAttributType, var_cas_inPassingMode) ;
                  }
                }
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5741)) ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_33 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_33) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              {
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_222417 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_222417 = NULL ;
                while (((operand_222417 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_222417.nextObject ()))) {
                  macroValidPointer (operand_222417) ;
                  var_cas_methodSignature._addAssign_operation (operand_222417->mAttributType, var_cas_outPassingMode) ;
                }
              }
              var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5755)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5757)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                {
                  GGS_typeListeAttributsSemantiques::cEnumerator enumerator_223002 (var_cas_listeTousAttributsSemantiques, true) ;
                  const GGS_typeListeAttributsSemantiques::cElement * operand_223002 = NULL ;
                  while (((operand_223002 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_223002.nextObject ()))) {
                    macroValidPointer (operand_223002) ;
                    var_cas_getIndexMethodSignature._addAssign_operation (operand_223002->mAttributType, var_cas_outPassingMode) ;
                  }
                }
                var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5764)) ;
              }
              } break ;
            default :
              syntaxRepeat_55 = false ;
              break ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType ::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapReaderMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5776)) ;
      GGS_TypeModel  var_cas_type ;
      var_cas_type = GGS_MapModel ::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (5778)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5200_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_52 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      { bool syntaxRepeat_53 = true ;
        while (syntaxRepeat_53) {
          switch (select_repeat_semantics_parser_53 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              nt_ex_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              nt_ex_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_53 = false ;
              break ;
          }
        }
      }
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 3 : {
      switch (select_semantics_parser_54 (_inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      { bool syntaxRepeat_55 = true ;
        while (syntaxRepeat_55) {
          switch (select_repeat_semantics_parser_55 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
              nt_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              nt_map_method_parse (_inLexique) ;
              switch (select_semantics_parser_56 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              nt_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_55 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'ex_map_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_ex_map_method_semantics_parser_5785_4_ (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_nomMethode,
                                GGS_lstring  &var_cas_outMessage) {
  _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outMessage) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_ex_map_method_semantics_parser_5785_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'map_method'               *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_map_method_semantics_parser_5797_4_ (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_methodName,
                                GGS_lstring  &var_cas_getIndexMethodName,
                                GGS_lstring  &var_cas_outMessage) {
  _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_57 (_inLexique)) {
    case 1 : {
      var_cas_getIndexMethodName = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_getIndexMethodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outMessage) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_map_method_semantics_parser_5797_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_57 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5820_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_58 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5835)) COMMA_SOURCE_FILE_AT_LINE (5835)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5835)) COMMA_SOURCE_FILE_AT_LINE (5835))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType ::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5837)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_inputSignature ;
      var_cas_inputSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_226366 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_226366 = NULL ;
        while (((operand_226366 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_226366.nextObject ()))) {
          macroValidPointer (operand_226366) ;
          var_cas_extractSignature._addAssign_operation (operand_226366->mAttributType, GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
          var_cas_inputSignature._addAssign_operation (operand_226366->mAttributType, GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE)) ;
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasListType ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature, var_cas_inputSignature COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5869)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_listTypeToImplement ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5820_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_58 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5891)) COMMA_SOURCE_FILE_AT_LINE (5891)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5891)) COMMA_SOURCE_FILE_AT_LINE (5891))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType ::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5893)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_inputSignature ;
      var_cas_inputSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_228619 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_228619 = NULL ;
        while (((operand_228619 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_228619.nextObject ()))) {
          macroValidPointer (operand_228619) ;
          var_cas_extractSignature._addAssign_operation (operand_228619->mAttributType, GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
          var_cas_inputSignature._addAssign_operation (operand_228619->mAttributType, GGS_EXformalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE)) ;
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasListType ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature, var_cas_inputSignature COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5925)) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ListModel ::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5927)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5820_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_58 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5937_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_59 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5952)) COMMA_SOURCE_FILE_AT_LINE (5952)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5952)) COMMA_SOURCE_FILE_AT_LINE (5952))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedSortedListType ::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5954)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_231240 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_231240 = NULL ;
        while (((operand_231240 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_231240.nextObject ()))) {
          macroValidPointer (operand_231240) ;
          var_cas_extractSignature._addAssign_operation (operand_231240->mAttributType, GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasSortedListType ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_EXsortDescriptorList  var_cas_sortDescriptorList ;
      var_cas_sortDescriptorList = GGS_EXsortDescriptorList ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_stringset  var_cas_usedSortedAttributes ;
      var_cas_usedSortedAttributes = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_60 = true ;
        while (syntaxRepeat_60) {
            GGS_lstring  var_cas_sortAttribute ;
            _inLexique._assignFromAttribute_tokenString (var_cas_sortAttribute) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            if ((var_cas_usedSortedAttributes.reader_hasKey (_inLexique, var_cas_sortAttribute.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5989)) COMMA_SOURCE_FILE_AT_LINE (5989))).isBuiltAndTrue ()) {
              var_cas_sortAttribute.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this attribute is already used in sort list") COMMA_SOURCE_FILE_AT_LINE (5990)) ;
            }else{
              GGS_AC_galgasType  var_cas_definitionType ;
              const GGS_typeSemanticAttributesMap  _temp_232077 = var_cas_tableAttributs ;
              if (_temp_232077._isBuilt ()) {
                _temp_232077 (HERE)->method_searchKey (_inLexique, var_cas_sortAttribute, var_cas_definitionType COMMA_SOURCE_FILE_AT_LINE (5993)) ;
              }
              const GGS_AC_galgasType  _temp_232145 = var_cas_definitionType ;
              if (_temp_232145._isBuilt ()) {
                _temp_232145 (HERE)->method_acceptToBeSortKeyInSortedListDefinition (_inLexique, var_cas_sortAttribute COMMA_SOURCE_FILE_AT_LINE (5994)) ;
              }
              var_cas_usedSortedAttributes._addAssign_operation (var_cas_sortAttribute.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5995))) ;
            }
            GGS_bool var_cas_ascendingOrder ;
            switch (select_semantics_parser_61 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
                var_cas_ascendingOrder = GGS_bool (true, true) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
                var_cas_ascendingOrder = GGS_bool (true, false) ;
                } break ;
              default :
                break ;
            }
            var_cas_sortDescriptorList._addAssign_operation (var_cas_sortAttribute, var_cas_ascendingOrder) ;
          switch (select_repeat_semantics_parser_60 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_60 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6011)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_sortedListTypeToImplement ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_sortDescriptorList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5937_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_59 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6034)) COMMA_SOURCE_FILE_AT_LINE (6034)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6034)) COMMA_SOURCE_FILE_AT_LINE (6034))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedSortedListType ::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (6036)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
      {
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_234310 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_234310 = NULL ;
        while (((operand_234310 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_234310.nextObject ()))) {
          macroValidPointer (operand_234310) ;
          var_cas_extractSignature._addAssign_operation (operand_234310->mAttributType, GGS_EXformalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasSortedListType ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat_60 = true ;
        while (syntaxRepeat_60) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_semantics_parser_61 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
          switch (select_repeat_semantics_parser_60 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_60 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6078)) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ListModel ::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (6080)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5937_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_59 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat_60 = true ;
        while (syntaxRepeat_60) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_semantics_parser_61 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
          switch (select_repeat_semantics_parser_60 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_60 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'attributes_definition_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_attributes_definition_list_semantics_parser_6090_4_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                GGS_typeListModel  &var_cas_outAttributeListModel,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeAttributsSemantiquesCourants,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_listeAttributsSemantiquesCourants = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_outAttributeListModel = GGS_typeListModel ::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_62 = true ;
    while (syntaxRepeat_62) {
      switch (select_repeat_semantics_parser_62 (_inLexique)) {
        case 2 : {
          GGS_AC_galgasType  var_cas_definitionType ;
          GGS_lstring  var_cas_typeName ;
          nt_type_parsing_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
          GGS_lstring  var_cas_attributeName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_attributeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_tableAttributs.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_definitionType COMMA_SOURCE_FILE_AT_LINE (6114)) ;
          var_cas_listeTousAttributsSemantiques._addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_listeAttributsSemantiquesCourants._addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_outAttributeListModel._addAssign_operation (var_cas_typeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_62 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_attributes_definition_list_semantics_parser_6090_4_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_62 = true ;
    while (syntaxRepeat_62) {
      switch (select_repeat_semantics_parser_62 (_inLexique)) {
        case 2 : {
          nt_type_parsing_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_62 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_6128_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_struct) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
  GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListModel  var_cas_attributeListModel ;
  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasStructType ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6162)) ;
  GGS_typeEntityToGenerate  var_cas_def ;
  var_cas_def = GGS_C_structToImplement ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_6128_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_struct) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeListModel  var_cas_attributeListModel ;
  var_cas_attributeListModel = GGS_typeListModel ::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
  GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasStructType ::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6202)) ;
  GGS_TypeModel  var_cas_t ;
  var_cas_t = GGS_ListModel ::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (6204)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6128_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_struct) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  nt_attributes_definition_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "recursivelyEnumerateDirectories"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivelyEnumerateDirectories (C_Compiler & _inLexique,
                                const GGS_string  var_cas_inAbsoluteSourcePath,
                                const GGS_string  var_cas_inPathInWrapper,
                                const GGS_wrapperExtensionMap   var_cas_inExtensionMap,
                                GGS_wrapperFileSortedList  & var_cas_outWrapperFileSortedList,
                                GGS_wrapperDirectorySortedList  & var_cas_outWrapperDirectorySortedList,
                                GGS_uint  & var_cas_ioWrapperFileIndex,
                                GGS_uint  & var_cas_ioWrapperDirectoryIndex,
                                GGS_M_regularFiles  & var_cas_ioRegularFileMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_recursivelyEnumerateDirectories at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_uint  var_cas_currentDirectoryIndex ;
  var_cas_currentDirectoryIndex = var_cas_ioWrapperDirectoryIndex ;
  var_cas_ioWrapperDirectoryIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (6224)) ;
  GGS_stringlist  var_cas_files ;
  var_cas_files = var_cas_inAbsoluteSourcePath.reader_regularFiles (_inLexique, GGS_bool (true, false) COMMA_SOURCE_FILE_AT_LINE (6226)) ;
  var_cas_outWrapperFileSortedList = GGS_wrapperFileSortedList ::constructor_emptySortedList (_inLexique COMMA_HERE) ;
  {
    GGS_stringlist::cEnumerator enumerator_241070 (var_cas_files, true) ;
    const GGS_stringlist::cElement * operand_241070 = NULL ;
    while (((operand_241070 = (GGS_stringlist::cElement *) enumerator_241070.nextObject ()))) {
      macroValidPointer (operand_241070) ;
      if ((var_cas_inExtensionMap.reader_hasKey (_inLexique, operand_241070->mValue.reader_pathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (6229)) COMMA_SOURCE_FILE_AT_LINE (6229))).isBuiltAndTrue ()) {
        GGS_string var_cas_absoluteFilePath ;
        var_cas_absoluteFilePath = ((var_cas_inAbsoluteSourcePath)._operator_concat (GGS_string (true, "/")))._operator_concat (operand_241070->mValue) ;
        var_cas_outWrapperFileSortedList._addAssign_operation (operand_241070->mValue, var_cas_absoluteFilePath, var_cas_currentDirectoryIndex, var_cas_ioWrapperFileIndex) ;
        var_cas_ioRegularFileMap.modifier_insertKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, (var_cas_inPathInWrapper)._operator_concat (operand_241070->mValue), GGS_location (_inLexique) COMMA_HERE), var_cas_currentDirectoryIndex, var_cas_ioWrapperFileIndex COMMA_SOURCE_FILE_AT_LINE (6238)) ;
        var_cas_ioWrapperFileIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (6243)) ;
      }
    }
  }
  GGS_stringlist  var_cas_directories ;
  var_cas_directories = var_cas_inAbsoluteSourcePath.reader_directories (_inLexique, GGS_bool (true, false) COMMA_SOURCE_FILE_AT_LINE (6247)) ;
  var_cas_outWrapperDirectorySortedList = GGS_wrapperDirectorySortedList ::constructor_emptySortedList (_inLexique COMMA_HERE) ;
  {
    GGS_stringlist::cEnumerator enumerator_241818 (var_cas_directories, true) ;
    const GGS_stringlist::cElement * operand_241818 = NULL ;
    while (((operand_241818 = (GGS_stringlist::cElement *) enumerator_241818.nextObject ()))) {
      macroValidPointer (operand_241818) ;
      GGS_wrapperFileSortedList  var_cas_internalWrapperFileSortedList ;
      GGS_wrapperDirectorySortedList  var_cas_internalWrapperDirectorySortedList ;
      GGS_uint  var_cas_theDirectoryIndex ;
      var_cas_theDirectoryIndex = var_cas_ioWrapperDirectoryIndex ;
      ::routine_recursivelyEnumerateDirectories (_inLexique,  ((var_cas_inAbsoluteSourcePath)._operator_concat (GGS_string (true, "/")))._operator_concat (operand_241818->mValue),  ((var_cas_inPathInWrapper)._operator_concat (operand_241818->mValue))._operator_concat (GGS_string (true, "/")),  var_cas_inExtensionMap,  var_cas_internalWrapperFileSortedList,  var_cas_internalWrapperDirectorySortedList,  var_cas_ioWrapperFileIndex,  var_cas_ioWrapperDirectoryIndex,  var_cas_ioRegularFileMap COMMA_SOURCE_FILE_AT_LINE (6252)) ;
      var_cas_outWrapperDirectorySortedList._addAssign_operation (operand_241818->mValue, var_cas_internalWrapperFileSortedList, var_cas_internalWrapperDirectorySortedList, var_cas_theDirectoryIndex) ;
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_recursivelyEnumerateDirectories\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_6274_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_filewrapper) COMMA_HERE) ;
  GGS_lstring  var_cas_wrapperName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_wrapperName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  GGS_lstring  var_cas_sourcePath ;
  _inLexique._assignFromAttribute_tokenString (var_cas_sourcePath) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_wrapperExtensionMap  var_cas_extensionMap ;
  var_cas_extensionMap = GGS_wrapperExtensionMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_63 = true ;
    while (syntaxRepeat_63) {
        GGS_lstring  var_cas_extension ;
        _inLexique._assignFromAttribute_tokenString (var_cas_extension) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
        var_cas_extensionMap.modifier_insertKey (_inLexique, var_cas_extension COMMA_SOURCE_FILE_AT_LINE (6295)) ;
      switch (select_repeat_semantics_parser_63 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_63 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_M_regularFiles  var_cas_regularFileMap ;
  var_cas_regularFileMap = GGS_M_regularFiles ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_string var_cas_absoluteSourcePath ;
  if (((var_cas_sourcePath.ggs_string ().reader_firstCharacterOrNul (_inLexique COMMA_SOURCE_FILE_AT_LINE (6303)))._operator_isEqual (GGS_char (true, '/'))).isBuiltAndTrue ()) {
    var_cas_absoluteSourcePath = var_cas_sourcePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6304)) ;
  }else{
    var_cas_absoluteSourcePath = ((GGS_string::constructor_stringWithSourceFilePath (_inLexique COMMA_HERE).reader_stringByDeletingLastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (6306)))._operator_concat (GGS_string (true, "/")))._operator_concat (var_cas_sourcePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6306))) ;
  }
  if (((var_cas_absoluteSourcePath.reader_directoryExists (_inLexique COMMA_SOURCE_FILE_AT_LINE (6308)))._operator_not ()).isBuiltAndTrue ()) {
    var_cas_sourcePath.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "The '"))._operator_concat (var_cas_absoluteSourcePath))._operator_concat (GGS_string (true, "' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (6309)) ;
  }else{
    GGS_wrapperFileSortedList  var_cas_wrapperFileSortedList ;
    GGS_wrapperDirectorySortedList  var_cas_wrapperDirectorySortedList ;
    GGS_uint  var_cas_wrapperFileIndex ;
    var_cas_wrapperFileIndex = GGS_uint (true, 0U) ;
    GGS_uint  var_cas_wrapperDirectoryIndex ;
    var_cas_wrapperDirectoryIndex = GGS_uint (true, 0U) ;
    ::routine_recursivelyEnumerateDirectories (_inLexique,  var_cas_absoluteSourcePath,  GGS_string (true, "/"),  var_cas_extensionMap,  var_cas_wrapperFileSortedList,  var_cas_wrapperDirectorySortedList,  var_cas_wrapperFileIndex,  var_cas_wrapperDirectoryIndex,  var_cas_regularFileMap COMMA_SOURCE_FILE_AT_LINE (6315)) ;
    GGS_typeEntityToGenerate  var_cas_w ;
    var_cas_w = GGS_C_wrapperToImplement ::constructor_new (_inLexique, var_cas_wrapperName, var_cas_sourcePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6329)), var_cas_extensionMap, var_cas_wrapperFileSortedList, var_cas_wrapperDirectorySortedList COMMA_HERE) ;
    var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_w) ;
  }
  GGS_filewrapperTemplateMap  var_cas_templateMap ;
  var_cas_templateMap = GGS_filewrapperTemplateMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_64 = true ;
    while (syntaxRepeat_64) {
      switch (select_repeat_semantics_parser_64 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_template) COMMA_HERE) ;
          GGS_lstring  var_cas_templateName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_templateName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_lstring  var_cas_templatePath ;
          _inLexique._assignFromAttribute_tokenString (var_cas_templatePath) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
          GGS_lstring  var_cas_templateAbsolutePath ;
          var_cas_templateAbsolutePath = GGS_lstring ::constructor_new (_inLexique, ((var_cas_absoluteSourcePath)._operator_concat (GGS_string (true, "/")))._operator_concat (var_cas_templatePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6349))), var_cas_templatePath.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (6350)) COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_templateArgumentTypesList ;
          var_cas_templateArgumentTypesList = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_formalAttributeList ;
          var_cas_formalAttributeList = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeVariablesMap  var_cas_templateVariableMap ;
          var_cas_templateVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_65 = true ;
            while (syntaxRepeat_65) {
              switch (select_repeat_semantics_parser_65 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  var_cas_formalAttributeList._addAssign_operation (var_cas_type_semantique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE)) ;
                  GGS_bool var_cas_parameterIsUsed ;
                  switch (select_semantics_parser_66 (_inLexique)) {
                    case 1 : {
                      var_cas_parameterIsUsed = GGS_bool (true, true) ;
                      } break ;
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                      var_cas_parameterIsUsed = GGS_bool (true, false) ;
                      } break ;
                    default :
                      break ;
                  }
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_cppName ;
                  var_cas_cppName = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_parameterName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (6377)), var_cas_parameterName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6377)) COMMA_HERE) ;
                  var_cas_templateArgumentTypesList._addAssign_operation (var_cas_type_semantique, GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE), var_cas_cppName, GGS_bool (true, true)) ;
                  if ((var_cas_parameterIsUsed).isBuiltAndTrue ()) {
                    var_cas_templateVariableMap.modifier_insertConstInArgument (_inLexique, var_cas_parameterName, var_cas_type_semantique, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (6380)) ;
                  }else{
                    var_cas_templateVariableMap.modifier_insertUnusedConstInArgument (_inLexique, var_cas_parameterName, var_cas_type_semantique, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (6382)) ;
                  }
                  } break ;
                default :
                  syntaxRepeat_65 = false ;
                  break ;
              }
            }
          }
          var_cas_templateMap.modifier_insertKey (_inLexique, var_cas_templateName, var_cas_formalAttributeList COMMA_SOURCE_FILE_AT_LINE (6385)) ;
          GGS_templateInstructionList  var_cas_templateInstructionList ;
          galgasTemplateGrammar::_performSourceFileParsing_ (_inLexique,
                                          NULL,
                                          var_cas_templateAbsolutePath,
                                          var_cas_templateVariableMap,
                                          var_cas_ioComponentSemanticsEntitiesMap,
                                          var_cas_templateInstructionList
                                          COMMA_SOURCE_FILE_AT_LINE (6387)) ;
          var_cas_listeEntitesAengendrer._addAssign_operation (GGS_C_filewrapperTemplateToImplement ::constructor_new (_inLexique, var_cas_wrapperName, var_cas_templateName, var_cas_templateArgumentTypesList, var_cas_templateInstructionList COMMA_HERE)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_64 = false ;
          break ;
      }
    }
  }
  var_cas_ioSemanticContext.mFilewrappers.modifier_insertKey (_inLexique, var_cas_wrapperName, var_cas_regularFileMap, var_cas_templateMap COMMA_SOURCE_FILE_AT_LINE (6401)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_6274_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_filewrapper) COMMA_HERE) ;
  GGS_lstring  var_cas_wrapperName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_wrapperName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  GGS_lstring  var_cas_sourcePath ;
  _inLexique._assignFromAttribute_tokenString (var_cas_sourcePath) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_wrapperExtensionMap  var_cas_extensionMap ;
  var_cas_extensionMap = GGS_wrapperExtensionMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_63 = true ;
    while (syntaxRepeat_63) {
        GGS_lstring  var_cas_extension ;
        _inLexique._assignFromAttribute_tokenString (var_cas_extension) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
        var_cas_extensionMap.modifier_insertKey (_inLexique, var_cas_extension COMMA_SOURCE_FILE_AT_LINE (6424)) ;
      switch (select_repeat_semantics_parser_63 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_63 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_M_regularFiles  var_cas_regularFileMap ;
  var_cas_regularFileMap = GGS_M_regularFiles ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  if (((var_cas_ioSemanticContext.reader_mFilewrappers (_inLexique COMMA_SOURCE_FILE_AT_LINE (6430)).reader_hasKey (_inLexique, var_cas_wrapperName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6430)) COMMA_SOURCE_FILE_AT_LINE (6430)))._operator_not ()).isBuiltAndTrue ()) {
    GGS_string var_cas_absoluteSourcePath ;
    if (((var_cas_sourcePath.ggs_string ().reader_firstCharacterOrNul (_inLexique COMMA_SOURCE_FILE_AT_LINE (6433)))._operator_isEqual (GGS_char (true, '/'))).isBuiltAndTrue ()) {
      var_cas_absoluteSourcePath = var_cas_sourcePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6434)) ;
    }else{
      var_cas_absoluteSourcePath = ((GGS_string::constructor_stringWithSourceFilePath (_inLexique COMMA_HERE).reader_stringByDeletingLastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (6436)))._operator_concat (GGS_string (true, "/")))._operator_concat (var_cas_sourcePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6436))) ;
    }
    if (((var_cas_absoluteSourcePath.reader_directoryExists (_inLexique COMMA_SOURCE_FILE_AT_LINE (6438)))._operator_not ()).isBuiltAndTrue ()) {
      var_cas_sourcePath.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "The '"))._operator_concat (var_cas_absoluteSourcePath))._operator_concat (GGS_string (true, "' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (6439)) ;
    }else{
      GGS_wrapperFileSortedList  var_cas_wrapperFileSortedList ;
      GGS_wrapperDirectorySortedList  var_cas_wrapperDirectorySortedList ;
      GGS_uint  var_cas_wrapperFileIndex ;
      var_cas_wrapperFileIndex = GGS_uint (true, 0U) ;
      GGS_uint  var_cas_wrapperDirectoryIndex ;
      var_cas_wrapperDirectoryIndex = GGS_uint (true, 0U) ;
      ::routine_recursivelyEnumerateDirectories (_inLexique,  var_cas_absoluteSourcePath,  GGS_string (true, "/"),  var_cas_extensionMap,  var_cas_wrapperFileSortedList,  var_cas_wrapperDirectorySortedList,  var_cas_wrapperFileIndex,  var_cas_wrapperDirectoryIndex,  var_cas_regularFileMap COMMA_SOURCE_FILE_AT_LINE (6445)) ;
    }
  }
  GGS_filewrapperTemplateMap  var_cas_templateMap ;
  var_cas_templateMap = GGS_filewrapperTemplateMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_64 = true ;
    while (syntaxRepeat_64) {
      switch (select_repeat_semantics_parser_64 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_template) COMMA_HERE) ;
          GGS_lstring  var_cas_templateName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_templateName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_lstring  var_cas_templatePath ;
          _inLexique._assignFromAttribute_tokenString (var_cas_templatePath) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_templateArgumentTypesList ;
          var_cas_templateArgumentTypesList = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_formalAttributeList ;
          var_cas_formalAttributeList = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_65 = true ;
            while (syntaxRepeat_65) {
              switch (select_repeat_semantics_parser_65 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  var_cas_formalAttributeList._addAssign_operation (var_cas_type_semantique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE)) ;
                  switch (select_semantics_parser_66 (_inLexique)) {
                    case 1 : {
                      } break ;
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                      } break ;
                    default :
                      break ;
                  }
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  var_cas_templateArgumentTypesList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  var_cas_templateMap.modifier_insertKey (_inLexique, var_cas_templateName, var_cas_formalAttributeList COMMA_SOURCE_FILE_AT_LINE (6489)) ;
                  } break ;
                default :
                  syntaxRepeat_65 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_64 = false ;
          break ;
      }
    }
  }
  if (((var_cas_ioSemanticContext.reader_mFilewrappers (_inLexique COMMA_SOURCE_FILE_AT_LINE (6494)).reader_hasKey (_inLexique, var_cas_wrapperName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6494)) COMMA_SOURCE_FILE_AT_LINE (6494)))._operator_not ()).isBuiltAndTrue ()) {
    var_cas_ioSemanticContext.mFilewrappers.modifier_insertKey (_inLexique, var_cas_wrapperName, var_cas_regularFileMap, var_cas_templateMap COMMA_SOURCE_FILE_AT_LINE (6495)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6274_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_filewrapper) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_63 = true ;
    while (syntaxRepeat_63) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_63 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_63 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_64 = true ;
    while (syntaxRepeat_64) {
      switch (select_repeat_semantics_parser_64 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_template) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
          { bool syntaxRepeat_65 = true ;
            while (syntaxRepeat_65) {
              switch (select_repeat_semantics_parser_65 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  nt_formal_argument_type_parse (_inLexique) ;
                  switch (select_semantics_parser_66 (_inLexique)) {
                    case 1 : {
                      } break ;
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                      } break ;
                    default :
                      break ;
                  }
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_65 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_64 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_6506_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  nt_semantics_declaration_begining_by_extern_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_inTreewalkingComponentMap) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_6506_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  nt_semantics_declaration_begining_by_extern_importSemantics (_inLexique, var_cas_ioModelMap, var_cas_ioExternActionMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_inTreewalkingComponentMap) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6506_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  nt_semantics_declaration_begining_by_extern_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_begining_by_extern'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_6554_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  GGS_lstring  var_cas_externTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_externTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_modifiersMap ;
  var_cas_modifiersMap = GGS_typeTableMethodes ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap ;
  var_cas_readersInInstructionMap = GGS_typeTableMethodes ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall ;
  var_cas_acceptAddAssignOperatorCall = GGS_bool (true, false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList ;
  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_externTypeConstructorMap  var_cas_constructorsMap ;
  var_cas_constructorsMap = GGS_M_externTypeConstructorMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_67 = true ;
    while (syntaxRepeat_67) {
      switch (select_repeat_semantics_parser_67 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
          GGS_lstring  var_cas_constructorName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_constructorName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList ;
          var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_68 = true ;
            while (syntaxRepeat_68) {
              switch (select_repeat_semantics_parser_68 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  var_cas_constructorArgumentTypesList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  } break ;
                default :
                  syntaxRepeat_68 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_constructorsMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList COMMA_SOURCE_FILE_AT_LINE (6596)) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          GGS_lstring  var_cas_methodName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
          var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_L_signature  var_cas_signatureForGrammarComponent ;
          nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_readersInInstructionMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6616)) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          switch (select_semantics_parser_69 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_methodName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
              var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              var_cas_modifiersMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6636)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
              GGS_location  var_cas_errorLocation ;
              var_cas_errorLocation = GGS_location (_inLexique) ;
              { bool syntaxRepeat_70 = true ;
                while (syntaxRepeat_70) {
                  switch (select_repeat_semantics_parser_70 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                      var_cas_addAssignOperatorCallTypeList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      } break ;
                    default :
                      syntaxRepeat_70 = false ;
                      break ;
                  }
                }
              }
              if ((var_cas_acceptAddAssignOperatorCall).isBuiltAndTrue ()) {
                var_cas_errorLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'+=' operator is already defined") COMMA_SOURCE_FILE_AT_LINE (6656)) ;
              }else{
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true, true) ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_67 = false ;
          break ;
      }
    }
  }
  GGS_typeEntityToGenerate  var_cas_t ;
  var_cas_t = GGS_typeExternTypeToGenerate ::constructor_new (_inLexique, var_cas_externTypeName, var_cas_constructorsMap, var_cas_modifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_t) ;
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasExternType ::constructor_new (_inLexique, var_cas_externTypeName, var_cas_constructorsMap, var_cas_modifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (6683)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_6554_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  GGS_lstring  var_cas_externTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_externTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_EXmodifiersMap ;
  var_cas_EXmodifiersMap = GGS_typeTableMethodes ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap ;
  var_cas_readersInInstructionMap = GGS_typeTableMethodes ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall ;
  var_cas_acceptAddAssignOperatorCall = GGS_bool (true, false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList ;
  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_externTypeConstructorMap  var_cas_EXconstructorsMap ;
  var_cas_EXconstructorsMap = GGS_M_externTypeConstructorMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_constructorMap  var_cas_constructorMap ;
  var_cas_constructorMap = GGS_constructorMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_readerMap  var_cas_readerMap ;
  var_cas_readerMap = GGS_readerMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_modifierMap  var_cas_modifierMap ;
  var_cas_modifierMap = GGS_modifierMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListModel  var_cas_addAssignFormalInputArgumentList ;
  var_cas_addAssignFormalInputArgumentList = GGS_typeListModel ::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_67 = true ;
    while (syntaxRepeat_67) {
      switch (select_repeat_semantics_parser_67 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
          GGS_lstring  var_cas_constructorName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_constructorName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList ;
          var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeListModel  var_cas_formalInputArgumentList ;
          var_cas_formalInputArgumentList = GGS_typeListModel ::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_68 = true ;
            while (syntaxRepeat_68) {
              switch (select_repeat_semantics_parser_68 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  var_cas_constructorArgumentTypesList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  var_cas_formalInputArgumentList._addAssign_operation (var_cas_galgasTypeName) ;
                  } break ;
                default :
                  syntaxRepeat_68 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_EXconstructorsMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList COMMA_SOURCE_FILE_AT_LINE (6733)) ;
          var_cas_constructorMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_formalInputArgumentList COMMA_SOURCE_FILE_AT_LINE (6734)) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          GGS_lstring  var_cas_readerName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_readerName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
          var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_L_signature  var_cas_signature ;
          nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_readersInInstructionMap.modifier_insertKey (_inLexique, var_cas_readerName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6754)) ;
          var_cas_readerMap.modifier_insertKey (_inLexique, var_cas_readerName, var_cas_signature COMMA_SOURCE_FILE_AT_LINE (6755)) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          switch (select_semantics_parser_69 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_modifierName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_modifierName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
              var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_L_signature  var_cas_signature ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
              var_cas_EXmodifiersMap.modifier_insertKey (_inLexique, var_cas_modifierName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6775)) ;
              var_cas_modifierMap.modifier_insertKey (_inLexique, var_cas_modifierName, var_cas_signature COMMA_SOURCE_FILE_AT_LINE (6776)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
              if (((var_cas_addAssignFormalInputArgumentList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (6779)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'+=' operator is already defined") COMMA_SOURCE_FILE_AT_LINE (6780)) ;
              }else{
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true, true) ;
              }
              { bool syntaxRepeat_70 = true ;
                while (syntaxRepeat_70) {
                  switch (select_repeat_semantics_parser_70 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                      var_cas_addAssignOperatorCallTypeList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      var_cas_addAssignFormalInputArgumentList._addAssign_operation (var_cas_galgasTypeName) ;
                      } break ;
                    default :
                      syntaxRepeat_70 = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_67 = false ;
          break ;
      }
    }
  }
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasExternType ::constructor_new (_inLexique, var_cas_externTypeName, var_cas_EXconstructorsMap, var_cas_EXmodifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (6813)) ;
  GGS_TypeModel  var_cas_t ;
  var_cas_t = GGS_ExternTypeModel ::constructor_new (_inLexique, var_cas_constructorMap, var_cas_readerMap, var_cas_modifierMap, var_cas_addAssignFormalInputArgumentList COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (6815)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_6554_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_67 = true ;
    while (syntaxRepeat_67) {
      switch (select_repeat_semantics_parser_67 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          { bool syntaxRepeat_68 = true ;
            while (syntaxRepeat_68) {
              switch (select_repeat_semantics_parser_68 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  nt_formal_argument_type_parse (_inLexique) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_68 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          nt_formal_arguments_list_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          switch (select_semantics_parser_69 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
              { bool syntaxRepeat_70 = true ;
                while (syntaxRepeat_70) {
                  switch (select_repeat_semantics_parser_70 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                      nt_formal_argument_type_parse (_inLexique) ;
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_70 = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_67 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_6823_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                const GGS_typeTableEnAvant  var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6830)) COMMA_SOURCE_FILE_AT_LINE (6830))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  _temp_261983 = var_cas_inComponentSemanticsEntitiesMap ;
    if (_temp_261983._isBuilt ()) {
      _temp_261983 (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6832)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (6833)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (6833)) ;
  }else{
    const GGS_typeTableEnAvant  _temp_262175 = var_cas_tableEnAvant ;
    if (_temp_262175._isBuilt ()) {
      _temp_262175 (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (6835)) ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_6823_4_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_6823_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_6845_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                const GGS_typeTableEnAvant  var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6853)) COMMA_SOURCE_FILE_AT_LINE (6853))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  _temp_262816 = var_cas_inComponentSemanticsEntitiesMap ;
    if (_temp_262816._isBuilt ()) {
      _temp_262816 (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6855)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (6856)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (6856)) ;
  }else{
    const GGS_typeTableEnAvant  _temp_263008 = var_cas_tableEnAvant ;
    if (_temp_263008._isBuilt ()) {
      _temp_263008 (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (6858)) ;
    }
    GGS_typeGalgasUndefinedListType  var_cas_x ;
    var_cas_x = GGS_typeGalgasUndefinedListType::_castFrom (_inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (6859)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_6845_4_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_6845_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_6870_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                const GGS_typeTableEnAvant  var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6878)) COMMA_SOURCE_FILE_AT_LINE (6878))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  _temp_263786 = var_cas_inComponentSemanticsEntitiesMap ;
    if (_temp_263786._isBuilt ()) {
      _temp_263786 (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6880)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (6881)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (6881)) ;
  }else{
    const GGS_typeTableEnAvant  _temp_263978 = var_cas_tableEnAvant ;
    if (_temp_263978._isBuilt ()) {
      _temp_263978 (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (6883)) ;
    }
    GGS_typeGalgasUndefinedMapType  var_cas_x ;
    var_cas_x = GGS_typeGalgasUndefinedMapType::_castFrom (_inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (6884)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_6870_4_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_6870_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_6895_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                const GGS_typeTableEnAvant  var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6904)) COMMA_SOURCE_FILE_AT_LINE (6904))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    const GGS_M_semanticsEntitiesForUse  _temp_264771 = var_cas_inComponentSemanticsEntitiesMap ;
    if (_temp_264771._isBuilt ()) {
      _temp_264771 (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6906)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (6907)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (6907)) ;
  }else{
    const GGS_typeTableEnAvant  _temp_264963 = var_cas_tableEnAvant ;
    if (_temp_264963._isBuilt ()) {
      _temp_264963 (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (6909)) ;
    }
    GGS_typeGalgasUndefinedClassType  var_cas_x ;
    var_cas_x = GGS_typeGalgasUndefinedClassType::_castFrom (_inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (6910)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_6895_4_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_6895_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_begining_by_extern'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_6926_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_nomAction ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomAction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteActionExterne ::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_nomAction, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6951)) ;
  GGS_typeEntityToGenerate  var_cas_ea ;
  var_cas_ea = GGS_typeActionExterneAengendrer ::constructor_new (_inLexique, var_cas_nomAction, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_ea) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_6926_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_actionName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteActionExterne ::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6980)) ;
  var_cas_ioExternActionMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_signature, GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (6981)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_6926_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_6991_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_EXsemanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  GGS_lstring  var_cas_enumTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_enumTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_enumConstantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_enumConstantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_71 = true ;
    while (syntaxRepeat_71) {
        GGS_bool var_cas_hasConstructor ;
        switch (select_semantics_parser_72 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
            var_cas_hasConstructor = GGS_bool (true, true) ;
            } break ;
          case 2 : {
            var_cas_hasConstructor = GGS_bool (true, false) ;
            } break ;
          default :
            break ;
        }
        { bool syntaxRepeat_73 = true ;
          while (syntaxRepeat_73) {
              GGS_lstring  var_cas_constantName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_constantName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_constantMap.modifier_insertKey (_inLexique, var_cas_constantName, var_cas_hasConstructor COMMA_SOURCE_FILE_AT_LINE (7019)) ;
            switch (select_repeat_semantics_parser_73 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_73 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_71 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_71 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeEnumMessageMap  var_cas_enumMessageMap ;
  var_cas_enumMessageMap = GGS_typeEnumMessageMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumModifierMap  var_cas_modifierMap ;
  var_cas_modifierMap = GGS_enumModifierMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumMethodMap  var_cas_methodMap ;
  var_cas_methodMap = GGS_enumMethodMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumOperatorMap  var_cas_operatorMap ;
  var_cas_operatorMap = GGS_enumOperatorMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_74 = true ;
    while (syntaxRepeat_74) {
      switch (select_repeat_semantics_parser_74 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_operator) COMMA_HERE) ;
          GGS_lstring  var_cas_operatorName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_operatorName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_signature ;
          var_cas_signature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeVariablesMap  var_cas_localVariableMap ;
          var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_argumentList ;
          var_cas_argumentList = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_75 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              GGS_lstring  var_cas_typeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              if (((var_cas_typeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7046)))._operator_isNotEqual (GGS_string (true, "location"))).isBuiltAndTrue ()) {
                var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the type should be '@location'") COMMA_SOURCE_FILE_AT_LINE (7047)) ;
              }
              GGS_AC_galgasType  var_cas_type_semantique ;
              var_cas_type_semantique = GGS_typeGalgas_location ::constructor_new (_inLexique COMMA_HERE) ;
              GGS_EXformalArgumentPassingMode var_cas_argumentConstantIn ;
              var_cas_argumentConstantIn = GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
              switch (select_semantics_parser_76 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (7055)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7055)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true)) ;
                  var_cas_localVariableMap.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (7057)) ;
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (7061)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7061)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true)) ;
                  var_cas_localVariableMap.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (7063)) ;
                  } break ;
                default :
                  break ;
              }
              var_cas_signature._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_enumOperatorDefinitionList  var_cas_enumOperatorDefinitionList ;
          var_cas_enumOperatorDefinitionList = GGS_enumOperatorDefinitionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_77 = true ;
            while (syntaxRepeat_77) {
                GGS_lstring  var_cas_leftConstant ;
                _inLexique._assignFromAttribute_tokenString (var_cas_leftConstant) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_luint  var_cas_leftConstantIndex ;
                GGS_bool automatic_var_34 ;
                const GGS_enumConstantMap  _temp_271249 = var_cas_constantMap ;
                if (_temp_271249._isBuilt ()) {
                  _temp_271249 (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_leftConstant, var_cas_leftConstantIndex, automatic_var_34 COMMA_SOURCE_FILE_AT_LINE (7073)) ;
                }
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                GGS_lstring  var_cas_rightConstant ;
                _inLexique._assignFromAttribute_tokenString (var_cas_rightConstant) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_luint  var_cas_rightConstantIndex ;
                GGS_bool automatic_var_35 ;
                const GGS_enumConstantMap  _temp_271442 = var_cas_constantMap ;
                if (_temp_271442._isBuilt ()) {
                  _temp_271442 (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_rightConstant, var_cas_rightConstantIndex, automatic_var_35 COMMA_SOURCE_FILE_AT_LINE (7078)) ;
                }
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                GGS_lstring  var_cas_targetConstant ;
                _inLexique._assignFromAttribute_tokenString (var_cas_targetConstant) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_luint  var_cas_targetConstantIndex ;
                GGS_bool automatic_var_36 ;
                const GGS_enumConstantMap  _temp_271641 = var_cas_constantMap ;
                if (_temp_271641._isBuilt ()) {
                  _temp_271641 (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_targetConstant, var_cas_targetConstantIndex, automatic_var_36 COMMA_SOURCE_FILE_AT_LINE (7083)) ;
                }
                GGS_typeInstructionList  var_cas_instructionList ;
                var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
                switch (select_semantics_parser_78 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioSemanticContext, var_cas_localVariableMap, var_cas_instructionList) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioSemanticContext, var_cas_localVariableMap, var_cas_instructionList) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_enumOperatorDefinitionList._addAssign_operation (var_cas_leftConstant, var_cas_leftConstantIndex, var_cas_rightConstant, var_cas_rightConstantIndex, var_cas_targetConstant, var_cas_targetConstantIndex, var_cas_instructionList) ;
              switch (select_repeat_semantics_parser_77 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_77 = false ;
                  break ;
              }
            }
          }
          var_cas_operatorMap.modifier_insertKey (_inLexique, var_cas_operatorName, var_cas_enumOperatorDefinitionList, var_cas_signature, var_cas_argumentList COMMA_SOURCE_FILE_AT_LINE (7115)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          GGS_lstring  var_cas_actionName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_signature ;
          var_cas_signature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeVariablesMap  var_cas_localVariableMap ;
          var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_argumentList ;
          var_cas_argumentList = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_79 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              GGS_lstring  var_cas_typeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              if (((var_cas_typeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7129)))._operator_isNotEqual (GGS_string (true, "location"))).isBuiltAndTrue ()) {
                var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the type should be '@location'") COMMA_SOURCE_FILE_AT_LINE (7130)) ;
              }
              GGS_AC_galgasType  var_cas_type_semantique ;
              var_cas_type_semantique = GGS_typeGalgas_location ::constructor_new (_inLexique COMMA_HERE) ;
              GGS_EXformalArgumentPassingMode var_cas_argumentConstantIn ;
              var_cas_argumentConstantIn = GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
              switch (select_semantics_parser_80 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (7138)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7138)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true)) ;
                  var_cas_localVariableMap.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (7140)) ;
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (7144)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7144)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true)) ;
                  var_cas_localVariableMap.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (7146)) ;
                  } break ;
                default :
                  break ;
              }
              var_cas_signature._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_enumUsedConstantMap  var_cas_definedSourceMap ;
          var_cas_definedSourceMap = GGS_enumUsedConstantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_enumModifierDefinitionList  var_cas_enumActionDefinitionList ;
          var_cas_enumActionDefinitionList = GGS_enumModifierDefinitionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_81 = true ;
            while (syntaxRepeat_81) {
                GGS_lstring  var_cas_sourceName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_sourceName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_37 ;
                const GGS_enumConstantMap  _temp_274273 = var_cas_constantMap ;
                if (_temp_274273._isBuilt ()) {
                  _temp_274273 (HERE)->method_searchKey (_inLexique, var_cas_sourceName, automatic_var_37 COMMA_SOURCE_FILE_AT_LINE (7156)) ;
                }
                var_cas_definedSourceMap.modifier_insertKey (_inLexique, var_cas_sourceName COMMA_SOURCE_FILE_AT_LINE (7157)) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                GGS_lstring  var_cas_targetName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_targetName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_38 ;
                const GGS_enumConstantMap  _temp_274446 = var_cas_constantMap ;
                if (_temp_274446._isBuilt ()) {
                  _temp_274446 (HERE)->method_searchKey (_inLexique, var_cas_targetName, automatic_var_38 COMMA_SOURCE_FILE_AT_LINE (7161)) ;
                }
                GGS_typeInstructionList  var_cas_instructionList ;
                var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
                switch (select_semantics_parser_82 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioSemanticContext, var_cas_localVariableMap, var_cas_instructionList) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioSemanticContext, var_cas_localVariableMap, var_cas_instructionList) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_enumActionDefinitionList._addAssign_operation (var_cas_sourceName, var_cas_targetName, var_cas_instructionList) ;
              switch (select_repeat_semantics_parser_81 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_81 = false ;
                  break ;
              }
            }
          }
          {
            GGS_enumConstantMap::cEnumerator enumerator_275177 (var_cas_constantMap, true) ;
            const GGS_enumConstantMap::cElement * operand_275177 = NULL ;
            while (((operand_275177 = (GGS_enumConstantMap::cElement *) enumerator_275177.nextObject ()))) {
              macroValidPointer (operand_275177) ;
              if (((var_cas_definedSourceMap.reader_hasKey (_inLexique, operand_275177->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7187)) COMMA_SOURCE_FILE_AT_LINE (7187)))._operator_not ()).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "The '"))._operator_concat (operand_275177->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7188))))._operator_concat (GGS_string (true, "' is not handled")) COMMA_SOURCE_FILE_AT_LINE (7188)) ;
              }
            }
          }
          var_cas_modifierMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_enumActionDefinitionList, var_cas_signature, var_cas_argumentList COMMA_SOURCE_FILE_AT_LINE (7192)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          GGS_lstring  var_cas_actionName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_signature ;
          var_cas_signature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeVariablesMap  var_cas_localVariableMap ;
          var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_argumentList ;
          var_cas_argumentList = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_83 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              GGS_lstring  var_cas_typeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              if (((var_cas_typeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7206)))._operator_isNotEqual (GGS_string (true, "location"))).isBuiltAndTrue ()) {
                var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the type should be '@location'") COMMA_SOURCE_FILE_AT_LINE (7207)) ;
              }
              GGS_AC_galgasType  var_cas_type_semantique ;
              var_cas_type_semantique = GGS_typeGalgas_location ::constructor_new (_inLexique COMMA_HERE) ;
              GGS_EXformalArgumentPassingMode var_cas_argumentConstantIn ;
              var_cas_argumentConstantIn = GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
              switch (select_semantics_parser_84 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (7215)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7215)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true)) ;
                  var_cas_localVariableMap.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (7217)) ;
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (7221)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7221)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true)) ;
                  var_cas_localVariableMap.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (7223)) ;
                  } break ;
                default :
                  break ;
              }
              var_cas_signature._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_enumUsedConstantMap  var_cas_definedSourceMap ;
          var_cas_definedSourceMap = GGS_enumUsedConstantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_enumMethodDefinitionList  var_cas_enumActionDefinitionList ;
          var_cas_enumActionDefinitionList = GGS_enumMethodDefinitionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_85 = true ;
            while (syntaxRepeat_85) {
                GGS_lstring  var_cas_sourceName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_sourceName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_39 ;
                const GGS_enumConstantMap  _temp_277188 = var_cas_constantMap ;
                if (_temp_277188._isBuilt ()) {
                  _temp_277188 (HERE)->method_searchKey (_inLexique, var_cas_sourceName, automatic_var_39 COMMA_SOURCE_FILE_AT_LINE (7233)) ;
                }
                var_cas_definedSourceMap.modifier_insertKey (_inLexique, var_cas_sourceName COMMA_SOURCE_FILE_AT_LINE (7234)) ;
                GGS_typeInstructionList  var_cas_instructionList ;
                var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
                switch (select_semantics_parser_86 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioSemanticContext, var_cas_localVariableMap, var_cas_instructionList) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioSemanticContext, var_cas_localVariableMap, var_cas_instructionList) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_enumActionDefinitionList._addAssign_operation (var_cas_sourceName, var_cas_instructionList) ;
              switch (select_repeat_semantics_parser_85 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_85 = false ;
                  break ;
              }
            }
          }
          {
            GGS_enumConstantMap::cEnumerator enumerator_277958 (var_cas_constantMap, true) ;
            const GGS_enumConstantMap::cElement * operand_277958 = NULL ;
            while (((operand_277958 = (GGS_enumConstantMap::cElement *) enumerator_277958.nextObject ()))) {
              macroValidPointer (operand_277958) ;
              if (((var_cas_definedSourceMap.reader_hasKey (_inLexique, operand_277958->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7260)) COMMA_SOURCE_FILE_AT_LINE (7260)))._operator_not ()).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "The '"))._operator_concat (operand_277958->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7261))))._operator_concat (GGS_string (true, "' is not handled")) COMMA_SOURCE_FILE_AT_LINE (7261)) ;
              }
            }
          }
          var_cas_methodMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_enumActionDefinitionList, var_cas_signature, var_cas_argumentList COMMA_SOURCE_FILE_AT_LINE (7265)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
          GGS_lstring  var_cas_messageName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_typeEnumCstMessageStringMap  var_cas_cstMessageStringMap ;
          var_cas_cstMessageStringMap = GGS_typeEnumCstMessageStringMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_87 = true ;
            while (syntaxRepeat_87) {
                GGS_lstring  var_cas_cstName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_cstName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                GGS_lstring  var_cas_cstString ;
                _inLexique._assignFromAttribute_tokenString (var_cas_cstString) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                var_cas_cstMessageStringMap.modifier_insertKey (_inLexique, var_cas_cstName, var_cas_cstString COMMA_SOURCE_FILE_AT_LINE (7279)) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              switch (select_repeat_semantics_parser_87 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_87 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          GGS_lstringlist  var_cas_messageStringList ;
          var_cas_messageStringList = GGS_lstringlist ::constructor_emptyList (_inLexique COMMA_HERE) ;
          {
            GGS_enumConstantMap::cEnumerator enumerator_278806 (var_cas_constantMap, true) ;
            const GGS_enumConstantMap::cElement * operand_278806 = NULL ;
            while (((operand_278806 = (GGS_enumConstantMap::cElement *) enumerator_278806.nextObject ()))) {
              macroValidPointer (operand_278806) ;
              GGS_lstring  var_cas_name ;
              var_cas_name = GGS_lstring ::constructor_new (_inLexique, operand_278806->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7287)), GGS_location (_inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_cstString ;
              const GGS_typeEnumCstMessageStringMap  _temp_278970 = var_cas_cstMessageStringMap ;
              if (_temp_278970._isBuilt ()) {
                _temp_278970 (HERE)->method_searchKey (_inLexique, var_cas_name, var_cas_cstString COMMA_SOURCE_FILE_AT_LINE (7289)) ;
              }
              var_cas_messageStringList._addAssign_operation (var_cas_cstString) ;
            }
          }
          var_cas_enumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageStringList COMMA_SOURCE_FILE_AT_LINE (7293)) ;
          } break ;
        default :
          syntaxRepeat_74 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_typeEntityToGenerate  var_cas_e ;
  var_cas_e = GGS_enumGalgasType ::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap, var_cas_modifierMap, var_cas_methodMap, var_cas_operatorMap COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_e) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_enum ::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap, var_cas_modifierMap, var_cas_methodMap, var_cas_operatorMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_ee ;
  var_cas_ee = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_ee COMMA_SOURCE_FILE_AT_LINE (7317)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_6991_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  GGS_lstring  var_cas_enumTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_enumTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_enumConstantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_enumConstantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_71 = true ;
    while (syntaxRepeat_71) {
        GGS_bool var_cas_hasConstructor ;
        switch (select_semantics_parser_72 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
            var_cas_hasConstructor = GGS_bool (true, true) ;
            } break ;
          case 2 : {
            var_cas_hasConstructor = GGS_bool (true, false) ;
            } break ;
          default :
            break ;
        }
        { bool syntaxRepeat_73 = true ;
          while (syntaxRepeat_73) {
              GGS_lstring  var_cas_constantName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_constantName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_constantMap.modifier_insertKey (_inLexique, var_cas_constantName, var_cas_hasConstructor COMMA_SOURCE_FILE_AT_LINE (7346)) ;
            switch (select_repeat_semantics_parser_73 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_73 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_71 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_71 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeEnumMessageMap  var_cas_exEnumMessageMap ;
  var_cas_exEnumMessageMap = GGS_typeEnumMessageMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumModifierMap  var_cas_modifierMap ;
  var_cas_modifierMap = GGS_enumModifierMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumMethodMap  var_cas_methodMap ;
  var_cas_methodMap = GGS_enumMethodMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumMessageMap  var_cas_enumMessageMap ;
  var_cas_enumMessageMap = GGS_enumMessageMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumOperatorMap  var_cas_operatorMap ;
  var_cas_operatorMap = GGS_enumOperatorMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_74 = true ;
    while (syntaxRepeat_74) {
      switch (select_repeat_semantics_parser_74 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_operator) COMMA_HERE) ;
          GGS_lstring  var_cas_operatorName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_operatorName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_signature ;
          var_cas_signature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeVariablesMap  var_cas_localVariableMap ;
          var_cas_localVariableMap = GGS_typeVariablesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_argumentList ;
          var_cas_argumentList = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_75 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              GGS_lstring  var_cas_typeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              if (((var_cas_typeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7374)))._operator_isNotEqual (GGS_string (true, "location"))).isBuiltAndTrue ()) {
                var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the type should be '@location'") COMMA_SOURCE_FILE_AT_LINE (7375)) ;
              }
              GGS_AC_galgasType  var_cas_type_semantique ;
              var_cas_type_semantique = GGS_typeGalgas_location ::constructor_new (_inLexique COMMA_HERE) ;
              GGS_EXformalArgumentPassingMode var_cas_argumentConstantIn ;
              var_cas_argumentConstantIn = GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
              switch (select_semantics_parser_76 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (7383)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7383)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true)) ;
                  var_cas_localVariableMap.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (7385)) ;
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName ::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (7389)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (7389)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true)) ;
                  var_cas_localVariableMap.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (7391)) ;
                  } break ;
                default :
                  break ;
              }
              var_cas_signature._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_enumOperatorDefinitionList  var_cas_enumOperatorDefinitionList ;
          var_cas_enumOperatorDefinitionList = GGS_enumOperatorDefinitionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_77 = true ;
            while (syntaxRepeat_77) {
                GGS_lstring  var_cas_leftConstant ;
                _inLexique._assignFromAttribute_tokenString (var_cas_leftConstant) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_luint  var_cas_leftConstantIndex ;
                GGS_bool automatic_var_40 ;
                const GGS_enumConstantMap  _temp_282714 = var_cas_constantMap ;
                if (_temp_282714._isBuilt ()) {
                  _temp_282714 (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_leftConstant, var_cas_leftConstantIndex, automatic_var_40 COMMA_SOURCE_FILE_AT_LINE (7401)) ;
                }
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                GGS_lstring  var_cas_rightConstant ;
                _inLexique._assignFromAttribute_tokenString (var_cas_rightConstant) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_luint  var_cas_rightConstantIndex ;
                GGS_bool automatic_var_41 ;
                const GGS_enumConstantMap  _temp_282907 = var_cas_constantMap ;
                if (_temp_282907._isBuilt ()) {
                  _temp_282907 (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_rightConstant, var_cas_rightConstantIndex, automatic_var_41 COMMA_SOURCE_FILE_AT_LINE (7406)) ;
                }
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                GGS_lstring  var_cas_targetConstant ;
                _inLexique._assignFromAttribute_tokenString (var_cas_targetConstant) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_luint  var_cas_targetConstantIndex ;
                GGS_bool automatic_var_42 ;
                const GGS_enumConstantMap  _temp_283106 = var_cas_constantMap ;
                if (_temp_283106._isBuilt ()) {
                  _temp_283106 (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_targetConstant, var_cas_targetConstantIndex, automatic_var_42 COMMA_SOURCE_FILE_AT_LINE (7411)) ;
                }
                GGS_typeInstructionList  var_cas_instructionList ;
                var_cas_instructionList = GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
                switch (select_semantics_parser_78 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_parse (_inLexique) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_parse (_inLexique) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_enumOperatorDefinitionList._addAssign_operation (var_cas_leftConstant, var_cas_leftConstantIndex, var_cas_rightConstant, var_cas_rightConstantIndex, var_cas_targetConstant, var_cas_targetConstantIndex, var_cas_instructionList) ;
              switch (select_repeat_semantics_parser_77 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_77 = false ;
                  break ;
              }
            }
          }
          var_cas_operatorMap.modifier_insertKey (_inLexique, var_cas_operatorName, var_cas_enumOperatorDefinitionList, var_cas_signature, var_cas_argumentList COMMA_SOURCE_FILE_AT_LINE (7431)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          GGS_lstring  var_cas_actionName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_signature ;
          var_cas_signature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_argumentList ;
          var_cas_argumentList = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_79 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              var_cas_signature._addAssign_operation (GGS_typeGalgas_location ::constructor_new (_inLexique COMMA_HERE), GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              GGS_lstring  var_cas_typeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              switch (select_semantics_parser_80 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_enumUsedConstantMap  var_cas_definedSourceMap ;
          var_cas_definedSourceMap = GGS_enumUsedConstantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_enumModifierDefinitionList  var_cas_enumActionDefinitionList ;
          var_cas_enumActionDefinitionList = GGS_enumModifierDefinitionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_81 = true ;
            while (syntaxRepeat_81) {
                GGS_lstring  var_cas_sourceName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_sourceName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_43 ;
                const GGS_enumConstantMap  _temp_284459 = var_cas_constantMap ;
                if (_temp_284459._isBuilt ()) {
                  _temp_284459 (HERE)->method_searchKey (_inLexique, var_cas_sourceName, automatic_var_43 COMMA_SOURCE_FILE_AT_LINE (7458)) ;
                }
                var_cas_definedSourceMap.modifier_insertKey (_inLexique, var_cas_sourceName COMMA_SOURCE_FILE_AT_LINE (7459)) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                GGS_lstring  var_cas_targetName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_targetName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_44 ;
                const GGS_enumConstantMap  _temp_284632 = var_cas_constantMap ;
                if (_temp_284632._isBuilt ()) {
                  _temp_284632 (HERE)->method_searchKey (_inLexique, var_cas_targetName, automatic_var_44 COMMA_SOURCE_FILE_AT_LINE (7463)) ;
                }
                switch (select_semantics_parser_82 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_parse (_inLexique) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_parse (_inLexique) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_enumActionDefinitionList._addAssign_operation (var_cas_sourceName, var_cas_targetName, GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE)) ;
              switch (select_repeat_semantics_parser_81 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_81 = false ;
                  break ;
              }
            }
          }
          var_cas_modifierMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_enumActionDefinitionList, var_cas_signature, var_cas_argumentList COMMA_SOURCE_FILE_AT_LINE (7475)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          GGS_lstring  var_cas_actionName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_signature ;
          var_cas_signature = GGS_L_EXsignature ::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_argumentList ;
          var_cas_argumentList = GGS_typeListeTypesEtNomsArgMethode ::constructor_emptyList (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_83 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              var_cas_signature._addAssign_operation (GGS_typeGalgas_location ::constructor_new (_inLexique COMMA_HERE), GGS_EXformalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              GGS_lstring  var_cas_typeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              switch (select_semantics_parser_84 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_enumUsedConstantMap  var_cas_definedSourceMap ;
          var_cas_definedSourceMap = GGS_enumUsedConstantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_enumMethodDefinitionList  var_cas_enumActionDefinitionList ;
          var_cas_enumActionDefinitionList = GGS_enumMethodDefinitionList ::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_85 = true ;
            while (syntaxRepeat_85) {
                GGS_lstring  var_cas_sourceName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_sourceName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_45 ;
                const GGS_enumConstantMap  _temp_285783 = var_cas_constantMap ;
                if (_temp_285783._isBuilt ()) {
                  _temp_285783 (HERE)->method_searchKey (_inLexique, var_cas_sourceName, automatic_var_45 COMMA_SOURCE_FILE_AT_LINE (7502)) ;
                }
                var_cas_definedSourceMap.modifier_insertKey (_inLexique, var_cas_sourceName COMMA_SOURCE_FILE_AT_LINE (7503)) ;
                switch (select_semantics_parser_86 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_parse (_inLexique) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_parse (_inLexique) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_enumActionDefinitionList._addAssign_operation (var_cas_sourceName, GGS_typeInstructionList ::constructor_emptyList (_inLexique COMMA_HERE)) ;
              switch (select_repeat_semantics_parser_85 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_85 = false ;
                  break ;
              }
            }
          }
          var_cas_methodMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_enumActionDefinitionList, var_cas_signature, var_cas_argumentList COMMA_SOURCE_FILE_AT_LINE (7515)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
          GGS_lstring  var_cas_messageName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_enumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (7522)) ;
          GGS_lstringlist  var_cas_messageStringList ;
          var_cas_messageStringList = GGS_lstringlist ::constructor_emptyList (_inLexique COMMA_HERE) ;
          var_cas_exEnumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageStringList COMMA_SOURCE_FILE_AT_LINE (7524)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          { bool syntaxRepeat_87 = true ;
            while (syntaxRepeat_87) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              switch (select_repeat_semantics_parser_87 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_87 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_74 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_enum ::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_exEnumMessageMap, var_cas_modifierMap, var_cas_methodMap, var_cas_operatorMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType ::constructor_new (_inLexique, var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (7546)) ;
  GGS_TypeModel  var_cas_type ;
  var_cas_type = GGS_EnumModel ::constructor_new (_inLexique, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (7548)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6991_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_71 = true ;
    while (syntaxRepeat_71) {
        switch (select_semantics_parser_72 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
            } break ;
          case 2 : {
            } break ;
          default :
            break ;
        }
        { bool syntaxRepeat_73 = true ;
          while (syntaxRepeat_73) {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_repeat_semantics_parser_73 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_73 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_71 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_71 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_74 = true ;
    while (syntaxRepeat_74) {
      switch (select_repeat_semantics_parser_74 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_operator) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_semantics_parser_75 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              switch (select_semantics_parser_76 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          { bool syntaxRepeat_77 = true ;
            while (syntaxRepeat_77) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                switch (select_semantics_parser_78 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_parse (_inLexique) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_parse (_inLexique) ;
                    } break ;
                  default :
                    break ;
                }
              switch (select_repeat_semantics_parser_77 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_77 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_semantics_parser_79 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              switch (select_semantics_parser_80 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          { bool syntaxRepeat_81 = true ;
            while (syntaxRepeat_81) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                switch (select_semantics_parser_82 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_parse (_inLexique) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_parse (_inLexique) ;
                    } break ;
                  default :
                    break ;
                }
              switch (select_repeat_semantics_parser_81 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_81 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_semantics_parser_83 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              switch (select_semantics_parser_84 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          { bool syntaxRepeat_85 = true ;
            while (syntaxRepeat_85) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                switch (select_semantics_parser_86 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_parse (_inLexique) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_parse (_inLexique) ;
                    } break ;
                  default :
                    break ;
                }
              switch (select_repeat_semantics_parser_85 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_85 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          { bool syntaxRepeat_87 = true ;
            while (syntaxRepeat_87) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              switch (select_repeat_semantics_parser_87 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_87 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_74 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

