//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semantics_parser.cpp'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 8th, 2008, at 22h23'23"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "semantics_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semantics_parser.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_508_4_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &var_cas_ioLexiqueMapForUse,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &var_cas_ioTreewalkingComponentMap,
                                GGS_M_filewrappers  &var_cas_ioFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  GGS_lstring  var_cas_componentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_0 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      { bool syntaxRepeat_1 = true ;
        while (syntaxRepeat_1) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_repeat_semantics_parser_1 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_1 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_string var_cas_defLexique ;
  var_cas_defLexique = GGS_string (true, "") ;
  GGS_ModelMap  var_cas_modelMap ;
  var_cas_modelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_ActionMap  var_cas_actionMap ;
  var_cas_actionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_inclusionsForHeaderFile ;
  GGS_stringset  var_cas_inclusionsForImplementationFile ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentEntitiesMap ;
  GGS_stringset  var_cas_classNamesSet ;
  var_cas_classNamesSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  GGS_stringset  var_cas_includedGrammarComponents ;
  GGS_entityToImplementMap  var_cas_allMetamodelClassMap ;
  nt_import_headers_semantics_and_grammars_ (_inLexique, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_includedGrammarComponents, var_cas_ioLexiqueMapForUse, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap, var_cas_ioGrammarComponentsMap, var_cas_ioOptionsComponentsMap, var_cas_inclusionsForImplementationFile, var_cas_inclusionsForHeaderFile, var_cas_optionsComponentsMapForUse, var_cas_modelMap, var_cas_actionMap, var_cas_componentEntitiesMap, var_cas_tableEnAvant, var_cas_allMetamodelClassMap, var_cas_ioFileWrappers) ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_22088 = _inLexique.parsingContext () ;
    GGS_typeTableRoutinesAimplementer  var_cas_UNUSED_tableRoutinesAimplementer ;
    var_cas_UNUSED_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_UNUSED_tableNomRoutinesDeclarees ;
    var_cas_UNUSED_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableEnAvant  var_cas_UNUSED_tableEnAvant ;
    var_cas_UNUSED_tableEnAvant = var_cas_tableEnAvant ;
    GGS_M_semanticsEntitiesForUse  var_cas_UNUSED_componentSemanticsEntitiesMap ;
    var_cas_UNUSED_componentSemanticsEntitiesMap = var_cas_componentEntitiesMap ;
    GGS_M_filewrappers  var_cas_UNUSED_FileWrappers ;
    var_cas_UNUSED_FileWrappers = GGS_M_filewrappers::constructor_emptyMap (_inLexique COMMA_HERE) ;
    { bool syntaxRepeat_2 = true ;
      while (syntaxRepeat_2) {
        switch (select_repeat_semantics_parser_2 (_inLexique)) {
          case 2 : {
            nt_semantics_declaration_importSemantics (_inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_UNUSED_componentSemanticsEntitiesMap, var_cas_UNUSED_tableNomRoutinesDeclarees, var_cas_UNUSED_tableEnAvant, var_cas_UNUSED_tableRoutinesAimplementer, var_cas_ioTreewalkingComponentMap, var_cas_UNUSED_FileWrappers) ;
            } break ;
          default :
            syntaxRepeat_2 = false ;
            break ;
        }
      }
    }
  //--- Branch of parse/rewind instruction
    _inLexique.setParsingContext (context_22088) ;
    GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer ;
    var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees ;
    var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
    var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
    GGS_treewalkingRoutineHeaderMap  var_cas_treewalkingRoutineHeaderMap ;
    var_cas_treewalkingRoutineHeaderMap = GGS_treewalkingRoutineHeaderMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
    { bool syntaxRepeat_2 = true ;
      while (syntaxRepeat_2) {
        switch (select_repeat_semantics_parser_2 (_inLexique)) {
          case 2 : {
            nt_semantics_declaration_ (_inLexique, var_cas_componentEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_optionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioTreewalkingComponentMap, var_cas_ioFileWrappers) ;
            } break ;
          default :
            syntaxRepeat_2 = false ;
            break ;
        }
      }
    }
  //--- End of parse/rewind instruction
  if (((var_cas_ioSemanticsComponentsMap.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (612)) COMMA_SOURCE_FILE_AT_LINE (612)))._operator_not ()).isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap ;
    var_cas_optionsComponentsMap = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
    var_cas_ioSemanticsComponentsMap.modifier_insertKey (_inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentEntitiesMap COMMA_SOURCE_FILE_AT_LINE (614)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeTableNomRoutinesDeclarees::cEnumerator enumerator_22654 (var_cas_tableNomRoutinesDeclarees, true) ;
  const GGS_typeTableNomRoutinesDeclarees::cElement * operand_22654 = NULL ;
  while (((operand_22654 = (GGS_typeTableNomRoutinesDeclarees::cElement *) enumerator_22654.nextObject ()))) {
    macroValidPointer (operand_22654) ;
    if (((var_cas_tableRoutinesAimplementer.reader_hasKey (_inLexique, operand_22654->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (631)) COMMA_SOURCE_FILE_AT_LINE (631)))._operator_not ()).isBuiltAndTrue ()) {
      operand_22654->mKey.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the routine '"))._operator_concat (operand_22654->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (632))))._operator_concat (GGS_string (true, "' is not implemented within the component")) COMMA_SOURCE_FILE_AT_LINE (633)) ;
    }
  }
  enumerator_22654.reset () ;
  if (var_cas_componentName._isBuilt () &&
      var_cas_inclusionsForHeaderFile._isBuilt () &&
      var_cas_defLexique._isBuilt () &&
      var_cas_listeEntitesAengendrer._isBuilt () &&
      var_cas_inclusionsForImplementationFile._isBuilt ()) {
    ::routine_generateSemanticsComponent (_inLexique,  var_cas_componentName,  var_cas_inclusionsForHeaderFile,  var_cas_defLexique,  var_cas_listeEntitesAengendrer,  var_cas_inclusionsForImplementationFile COMMA_SOURCE_FILE_AT_LINE (635)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_508_4_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_treewalkingComponents  &/* var_cas_ioTreewalkingComponentMap */,
                                GGS_M_filewrappers  &/* var_cas_ioFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_0 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      { bool syntaxRepeat_1 = true ;
        while (syntaxRepeat_1) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_repeat_semantics_parser_1 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_1 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat_2 = true ;
    while (syntaxRepeat_2) {
      switch (select_repeat_semantics_parser_2 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_2 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_508_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &var_cas_ioTreewalkingComponentMap,
                                GGS_M_filewrappers  &var_cas_ioFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  GGS_lstring  var_cas_componentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_0 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      { bool syntaxRepeat_1 = true ;
        while (syntaxRepeat_1) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_repeat_semantics_parser_1 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_1 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  ::routine_enterBuiltinTypes (_inLexique,  var_cas_componentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (689)) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  var_cas_includedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_ModelMap  var_cas_modelMap ;
  GGS_ActionMap  var_cas_actionMap ;
  nt_import_headers_semantics_and_grammars_importSemantics (_inLexique, var_cas_ioSemanticsComponentsMap, var_cas_includedSemanticsComponents, var_cas_includedOptionComponents, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap, var_cas_ioFileWrappers) ;
  GGS_typeTableRoutinesAimplementer  var_cas_tableRoutinesAimplementer ;
  var_cas_tableRoutinesAimplementer = GGS_typeTableRoutinesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableNomRoutinesDeclarees  var_cas_tableNomRoutinesDeclarees ;
  var_cas_tableNomRoutinesDeclarees = GGS_typeTableNomRoutinesDeclarees::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_2 = true ;
    while (syntaxRepeat_2) {
      switch (select_repeat_semantics_parser_2 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_importSemantics (_inLexique, var_cas_modelMap, var_cas_actionMap, var_cas_componentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_ioTreewalkingComponentMap, var_cas_ioFileWrappers) ;
          } break ;
        default :
          syntaxRepeat_2 = false ;
          break ;
      }
    }
  }
  if (((var_cas_ioSemanticsComponentsMap.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (725)) COMMA_SOURCE_FILE_AT_LINE (725)))._operator_not ()).isBuiltAndTrue ()) {
    GGS_M_optionComponents  var_cas_optionsComponentsMap ;
    var_cas_optionsComponentsMap = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
    var_cas_ioSemanticsComponentsMap.modifier_insertKey (_inLexique, var_cas_componentName, var_cas_modelMap, var_cas_actionMap, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_optionsComponentsMap, var_cas_componentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (727)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_508_4_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_0 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      { bool syntaxRepeat_1 = true ;
        while (syntaxRepeat_1) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_repeat_semantics_parser_1 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_1 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat_2 = true ;
    while (syntaxRepeat_2) {
      switch (select_repeat_semantics_parser_2 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_2 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_508_4_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_treewalkingComponents  &/* var_cas_ioTreewalkingComponentMap */,
                                GGS_M_filewrappers  &/* var_cas_ioFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_0 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      { bool syntaxRepeat_1 = true ;
        while (syntaxRepeat_1) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_repeat_semantics_parser_1 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_1 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat_2 = true ;
    while (syntaxRepeat_2) {
      switch (select_repeat_semantics_parser_2 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_2 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_galgas_component_semantics_parser_508_4_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_0 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      { bool syntaxRepeat_1 = true ;
        while (syntaxRepeat_1) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_repeat_semantics_parser_1 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_1 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  { bool syntaxRepeat_2 = true ;
    while (syntaxRepeat_2) {
      switch (select_repeat_semantics_parser_2 (_inLexique)) {
        case 2 : {
          nt_semantics_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_2 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'import_headers_semantics_and_grammars'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_822_4_ (galgas_scanner & _inLexique,
                                GGS_stringset  &var_cas_outImportedSemanticsComponents,
                                GGS_stringset  &var_cas_outIncludedMetamodelComponents,
                                GGS_stringset  &var_cas_outImportedOptionComponents,
                                GGS_stringset  &var_cas_outImportedGrammarComponents,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &var_cas_ioTreewalkingComponentMap,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_stringset  &var_cas_outInclusionsForImplementationFile,
                                GGS_stringset  &var_cas_outInclusionsForHeaderFile,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMapForUse,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_entityToImplementMap  &var_cas_outAllMetamodelClassMap,
                                GGS_M_filewrappers  &var_cas_ioFileWrappers) {
  var_cas_outAllMetamodelClassMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outActionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outInclusionsForHeaderFile = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outInclusionsForImplementationFile = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outIncludedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedOptionComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outImportedGrammarComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_ioOptionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "char"), GGS_location (_inLexique) COMMA_HERE), GGS_CharModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (857)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "string"), GGS_location (_inLexique) COMMA_HERE), GGS_StringModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (859)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "uint"), GGS_location (_inLexique) COMMA_HERE), GGS_UIntModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (861)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "sint"), GGS_location (_inLexique) COMMA_HERE), GGS_SIntModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (863)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "uint64"), GGS_location (_inLexique) COMMA_HERE), GGS_UInt64Model::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (865)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "sint64"), GGS_location (_inLexique) COMMA_HERE), GGS_SInt64Model::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (867)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "bool"), GGS_location (_inLexique) COMMA_HERE), GGS_BoolModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (869)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "double"), GGS_location (_inLexique) COMMA_HERE), GGS_DoubleModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (871)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lchar"), GGS_location (_inLexique) COMMA_HERE), GGS_LCharModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (873)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lstring"), GGS_location (_inLexique) COMMA_HERE), GGS_LStringModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (875)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "luint"), GGS_location (_inLexique) COMMA_HERE), GGS_LUIntModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (877)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lsint"), GGS_location (_inLexique) COMMA_HERE), GGS_LSIntModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (879)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "luint64"), GGS_location (_inLexique) COMMA_HERE), GGS_LUInt64Model::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (881)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lsint64"), GGS_location (_inLexique) COMMA_HERE), GGS_LSInt64Model::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (883)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "lbool"), GGS_location (_inLexique) COMMA_HERE), GGS_LBoolModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (885)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "ldouble"), GGS_location (_inLexique) COMMA_HERE), GGS_LDoubleModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (887)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "location"), GGS_location (_inLexique) COMMA_HERE), GGS_LocationModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (889)) ;
  var_cas_outModelMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "stringset"), GGS_location (_inLexique) COMMA_HERE), GGS_StringsetModel::constructor_new (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (891)) ;
  ::routine_enterBuiltinTypes (_inLexique,  var_cas_ioComponentSemanticsEntitiesMap COMMA_SOURCE_FILE_AT_LINE (891)) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents ;
  var_cas_alreadyImportedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents ;
  var_cas_alreadyImportedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_3 = true ;
    while (syntaxRepeat_3) {
      switch (select_repeat_semantics_parser_3 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semantics_parser_4 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
              GGS_lstring  var_cas_treewalkingComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_treewalkingComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_treewalkingComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (906))) ;
              var_cas_outInclusionsForImplementationFile._addAssign_operation ((var_cas_treewalkingComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (907)))._operator_concat (GGS_string (true, ".h"))) ;
              switch (select_semantics_parser_5 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_fileName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_fileName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_fileName, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap, var_cas_ioFileWrappers) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              GGS_lstring  var_cas_optionComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_optionComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (925))) ;
              var_cas_outImportedOptionComponents._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (926))) ;
              GGS_M_cli_options  var_cas_boolOptionsMap ;
              GGS_M_cli_options  var_cas_uintOptionsMap ;
              GGS_M_cli_options  var_cas_stringOptionsMap ;
              switch (select_semantics_parser_6 (_inLexique)) {
                case 1 : {
                  if (var_cas_ioOptionsComponentsMap._isBuilt ()) {
                    var_cas_ioOptionsComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap COMMA_SOURCE_FILE_AT_LINE (931)) ;
                  }
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_fileName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_fileName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  GGS_M_optionComponents  var_cas_importedOptionComponentsMap ;
                  var_cas_importedOptionComponentsMap = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
                  nt_parse_option_component_for_importing_ (_inLexique, var_cas_fileName, var_cas_importedOptionComponentsMap) ;
                  if (var_cas_importedOptionComponentsMap._isBuilt ()) {
                    var_cas_importedOptionComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap COMMA_SOURCE_FILE_AT_LINE (941)) ;
                  }
                  } break ;
                default :
                  break ;
              }
              var_cas_ioOptionsComponentsMapForUse.modifier_insertKey (_inLexique, var_cas_optionComponentName, var_cas_boolOptionsMap, var_cas_uintOptionsMap, var_cas_stringOptionsMap COMMA_SOURCE_FILE_AT_LINE (943)) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              GGS_lstring  var_cas_grammarComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_grammarComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForImplementationFile._addAssign_operation ((var_cas_grammarComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (948)))._operator_concat (GGS_string (true, ".h"))) ;
              var_cas_outImportedGrammarComponents._addAssign_operation (var_cas_grammarComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (949))) ;
              GGS_M_grammarComponents  var_cas_grammarComponentsMap ;
              switch (select_semantics_parser_7 (_inLexique)) {
                case 1 : {
                  var_cas_grammarComponentsMap = var_cas_ioGrammarComponentsMap ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  var_cas_grammarComponentsMap = GGS_M_grammarComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
                  nt_parse_grammar_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_grammarComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioOptionsComponentsMapForUse, var_cas_ioTreewalkingComponentMap, var_cas_ioFileWrappers) ;
                  } break ;
                default :
                  break ;
              }
              GGS_M_nonterminalSymbolAltsForGrammar  var_cas_nonterminalSymbolParametersMap ;
              GGS_lstring  var_cas_lexiqueClassName ;
              GGS_M_optionComponents  automatic_var_0 ;
              if (var_cas_grammarComponentsMap._isBuilt ()) {
                var_cas_grammarComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_grammarComponentName, var_cas_nonterminalSymbolParametersMap, var_cas_lexiqueClassName, automatic_var_0 COMMA_SOURCE_FILE_AT_LINE (969)) ;
              }
              GGS_M_nonterminalSymbolAlts  var_cas_grammarAltMap ;
              var_cas_grammarAltMap = GGS_M_nonterminalSymbolAlts::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_M_nonterminalSymbolAltsForGrammar::cEnumerator enumerator_33693 (var_cas_nonterminalSymbolParametersMap, true) ;
              const GGS_M_nonterminalSymbolAltsForGrammar::cElement * operand_33693 = NULL ;
              while (((operand_33693 = (GGS_M_nonterminalSymbolAltsForGrammar::cElement *) enumerator_33693.nextObject ()))) {
                macroValidPointer (operand_33693) ;
                GGS_L_EXsignature  var_cas_formalParametersList ;
                var_cas_formalParametersList = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                GGS_L_signature::cEnumerator enumerator_33867 (operand_33693->mInfo.mFormalParametersList, true) ;
                const GGS_L_signature::cElement * operand_33867 = NULL ;
                while (((operand_33867 = (GGS_L_signature::cElement *) enumerator_33867.nextObject ()))) {
                  macroValidPointer (operand_33867) ;
                  GGS_AC_semanticsEntity  var_cas_e ;
                  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
                    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, operand_33867->mGalgasTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (975)) ;
                  }
                  GGS_AC_galgasType  var_cas_type ;
                  var_cas_type = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_e.getPtr (), true, operand_33867->mGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (976)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (976)) ;
                  var_cas_formalParametersList._addAssign_operation (var_cas_type, operand_33867->mFormalArgumentPassingMode) ;
                }
                enumerator_33867.reset () ;
                var_cas_grammarAltMap.modifier_insertKey (_inLexique, operand_33693->mKey, var_cas_formalParametersList, operand_33693->mInfo.mReturnedEntityTypeName COMMA_SOURCE_FILE_AT_LINE (979)) ;
              }
              enumerator_33693.reset () ;
              GGS_AC_semanticsEntity  var_cas_e ;
              var_cas_e = GGS_C_grammarForSemantics::constructor_new (_inLexique, var_cas_grammarAltMap, var_cas_lexiqueClassName COMMA_HERE) ;
              var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_grammarComponentName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (982)) ;
              GGS_lstring  var_cas_path ;
              var_cas_path = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_extension ;
              var_cas_extension = GGS_lstring::constructor_new (_inLexique, GGS_string (true, "h"), GGS_location (_inLexique) COMMA_HERE) ;
              GGS_lstring  var_cas_fileNameWithPath ;
              if (var_cas_path._isBuilt () &&
                  var_cas_grammarComponentName._isBuilt () &&
                  var_cas_extension._isBuilt ()) {
                ::routine_buildFileNameWithPath (_inLexique,  var_cas_fileNameWithPath,  var_cas_path,  var_cas_grammarComponentName,  var_cas_extension COMMA_SOURCE_FILE_AT_LINE (985)) ;
              }
              var_cas_outInclusionsForImplementationFile._addAssign_operation (var_cas_fileNameWithPath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (987))) ;
              GGS_M_grammarComponents::cEnumerator enumerator_34809 (var_cas_grammarComponentsMap, true) ;
              const GGS_M_grammarComponents::cElement * operand_34809 = NULL ;
              while (((operand_34809 = (GGS_M_grammarComponents::cElement *) enumerator_34809.nextObject ()))) {
                macroValidPointer (operand_34809) ;
                if (((var_cas_ioGrammarComponentsMap.reader_hasKey (_inLexique, operand_34809->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (992)) COMMA_SOURCE_FILE_AT_LINE (992)))._operator_not ()).isBuiltAndTrue ()) {
                  var_cas_ioGrammarComponentsMap.modifier_insertKey (_inLexique, operand_34809->mKey, operand_34809->mInfo.mNonterminalSymbolParametersMap, operand_34809->mInfo.mLexiqueName, operand_34809->mInfo.mOptionsMap COMMA_SOURCE_FILE_AT_LINE (993)) ;
                }
              }
              enumerator_34809.reset () ;
              } break ;
            case 5 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              GGS_lstring  var_cas_componentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1005))) ;
              switch (select_semantics_parser_8 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap, var_cas_ioFileWrappers) ;
                  } break ;
                default :
                  break ;
              }
              if (((var_cas_outImportedSemanticsComponents.reader_hasKey (_inLexique, var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1019)) COMMA_SOURCE_FILE_AT_LINE (1019)))._operator_not ()).isBuiltAndTrue ()) {
                GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
                GGS_M_optionComponents  var_cas_importedOptionsComponentsMap ;
                GGS_ModelMap  automatic_var_1 ;
                GGS_ActionMap  automatic_var_2 ;
                GGS_stringset  automatic_var_3 ;
                GGS_stringset  automatic_var_4 ;
                GGS_stringset  automatic_var_5 ;
                if (var_cas_ioSemanticsComponentsMap._isBuilt ()) {
                  var_cas_ioSemanticsComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_componentName, automatic_var_1, automatic_var_2, automatic_var_3, automatic_var_4, automatic_var_5, var_cas_importedOptionsComponentsMap, var_cas_importedEntities COMMA_SOURCE_FILE_AT_LINE (1022)) ;
                }
                GGS_M_semanticsEntitiesForUse::cEnumerator enumerator_36182 (var_cas_importedEntities, true) ;
                const GGS_M_semanticsEntitiesForUse::cElement * operand_36182 = NULL ;
                while (((operand_36182 = (GGS_M_semanticsEntitiesForUse::cElement *) enumerator_36182.nextObject ()))) {
                  macroValidPointer (operand_36182) ;
                  if (((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, operand_36182->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1024)) COMMA_SOURCE_FILE_AT_LINE (1024)))._operator_not ()).isBuiltAndTrue ()) {
                    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, operand_36182->mKey, operand_36182->mInfo.aDefEntite COMMA_SOURCE_FILE_AT_LINE (1025)) ;
                  }
                }
                enumerator_36182.reset () ;
                var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1028))) ;
                GGS_M_optionComponents::cEnumerator enumerator_36613 (var_cas_importedOptionsComponentsMap, true) ;
                const GGS_M_optionComponents::cElement * operand_36613 = NULL ;
                while (((operand_36613 = (GGS_M_optionComponents::cElement *) enumerator_36613.nextObject ()))) {
                  macroValidPointer (operand_36613) ;
                  if (((var_cas_ioOptionsComponentsMapForUse.reader_hasKey (_inLexique, operand_36613->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1031)) COMMA_SOURCE_FILE_AT_LINE (1031)))._operator_not ()).isBuiltAndTrue ()) {
                    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (operand_36613->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1032))))._operator_concat (GGS_string (true, "' option component must have been imported")) COMMA_SOURCE_FILE_AT_LINE (1032)) ;
                  }
                }
                enumerator_36613.reset () ;
              }
              ::routine_importSemanticsComponent (_inLexique,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName COMMA_SOURCE_FILE_AT_LINE (1035)) ;
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1047))) ;
              var_cas_outImportedSemanticsComponents._addAssign_operation (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1048))) ;
              } break ;
            case 6 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
              GGS_lstring  var_cas_metamodelComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_metamodelComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1053))) ;
              switch (select_semantics_parser_9 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap, var_cas_ioFileWrappers) ;
                  } break ;
                default :
                  break ;
              }
              if (((var_cas_outIncludedMetamodelComponents.reader_hasKey (_inLexique, var_cas_metamodelComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1067)) COMMA_SOURCE_FILE_AT_LINE (1067)))._operator_not ()).isBuiltAndTrue ()) {
                GGS_entityToImplementMap  var_cas_metamodelClassMap ;
                GGS_lstring  automatic_var_6 ;
                GGS_stringset  automatic_var_7 ;
                if (var_cas_ioMetamodelComponentMap._isBuilt ()) {
                  var_cas_ioMetamodelComponentMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelComponentName, automatic_var_6, var_cas_metamodelClassMap, automatic_var_7 COMMA_SOURCE_FILE_AT_LINE (1069)) ;
                }
                GGS_entityToImplementMap::cEnumerator enumerator_38155 (var_cas_metamodelClassMap, true) ;
                const GGS_entityToImplementMap::cElement * operand_38155 = NULL ;
                while (((operand_38155 = (GGS_entityToImplementMap::cElement *) enumerator_38155.nextObject ()))) {
                  macroValidPointer (operand_38155) ;
                  var_cas_outAllMetamodelClassMap.modifier_insertKey (_inLexique, operand_38155->mKey, operand_38155->mInfo.mAllMetamodelPropertyMap, operand_38155->mInfo.mIsAbstract, operand_38155->mInfo.mCurrentMetamodelPropertyMap, operand_38155->mInfo.mSuperEntityName, operand_38155->mInfo.mAncestorClassesMap, operand_38155->mInfo.mPropertyList, operand_38155->mInfo.mMetamodelName, operand_38155->mInfo.mID COMMA_SOURCE_FILE_AT_LINE (1079)) ;
                  GGS_AC_galgasType  var_cas_t ;
                  var_cas_t = GGS_typeGalgas_singleReferenceEntity::constructor_new (_inLexique, operand_38155->mKey, operand_38155->mInfo.mPropertyList, operand_38155->mInfo.mAncestorClassesMap.reader_allKeys (_inLexique COMMA_SOURCE_FILE_AT_LINE (1093)) COMMA_HERE) ;
                  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, operand_38155->mKey, GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (1095)) ;
                }
                enumerator_38155.reset () ;
              }
              var_cas_outInclusionsForHeaderFile._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1102))) ;
              var_cas_outIncludedMetamodelComponents._addAssign_operation (var_cas_metamodelComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1103))) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_3 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_822_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_stringset  &var_cas_outIncludedSemanticsComponents,
                                GGS_stringset  &var_cas_outIncludedOptionComponents,
                                GGS_ModelMap  &var_cas_outModelMap,
                                GGS_ActionMap  &var_cas_outActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &var_cas_ioTreewalkingComponentMap,
                                GGS_M_filewrappers  &var_cas_ioFileWrappers) {
  var_cas_outActionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outModelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outIncludedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outIncludedOptionComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedSemanticsComponents ;
  var_cas_alreadyImportedSemanticsComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_alreadyImportedMetamodelComponents ;
  var_cas_alreadyImportedMetamodelComponents = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_3 = true ;
    while (syntaxRepeat_3) {
      switch (select_repeat_semantics_parser_3 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semantics_parser_4 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_5 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              GGS_lstring  var_cas_optionComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_optionComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outIncludedOptionComponents._addAssign_operation (var_cas_optionComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1144))) ;
              switch (select_semantics_parser_6 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_option_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_7 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_grammar_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 5 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              GGS_lstring  var_cas_componentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_componentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_outIncludedSemanticsComponents._addAssign_operation (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1164))) ;
              switch (select_semantics_parser_8 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap, var_cas_ioFileWrappers) ;
                  } break ;
                default :
                  break ;
              }
              GGS_M_semanticsEntitiesForUse  var_cas_importedEntities ;
              GGS_ModelMap  automatic_var_8 ;
              GGS_ActionMap  automatic_var_9 ;
              GGS_stringset  automatic_var_10 ;
              GGS_stringset  automatic_var_11 ;
              GGS_stringset  automatic_var_12 ;
              GGS_M_optionComponents  automatic_var_13 ;
              if (var_cas_ioSemanticsComponentsMap._isBuilt ()) {
                var_cas_ioSemanticsComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_componentName, automatic_var_8, automatic_var_9, automatic_var_10, automatic_var_11, automatic_var_12, automatic_var_13, var_cas_importedEntities COMMA_SOURCE_FILE_AT_LINE (1179)) ;
              }
              GGS_M_semanticsEntitiesForUse::cEnumerator enumerator_41949 (var_cas_importedEntities, true) ;
              const GGS_M_semanticsEntitiesForUse::cElement * operand_41949 = NULL ;
              while (((operand_41949 = (GGS_M_semanticsEntitiesForUse::cElement *) enumerator_41949.nextObject ()))) {
                macroValidPointer (operand_41949) ;
                if (((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, operand_41949->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1181)) COMMA_SOURCE_FILE_AT_LINE (1181)))._operator_not ()).isBuiltAndTrue ()) {
                  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, operand_41949->mKey, operand_41949->mInfo.aDefEntite COMMA_SOURCE_FILE_AT_LINE (1182)) ;
                }
              }
              enumerator_41949.reset () ;
              ::routine_importSemanticsComponent (_inLexique,  var_cas_ioSemanticsComponentsMap,  var_cas_ioMetamodelComponentMap,  var_cas_outModelMap,  var_cas_outActionMap,  var_cas_alreadyImportedSemanticsComponents,  var_cas_alreadyImportedMetamodelComponents,  var_cas_componentName COMMA_SOURCE_FILE_AT_LINE (1184)) ;
              } break ;
            case 6 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
              GGS_lstring  var_cas_metamodelComponentName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_metamodelComponentName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_9 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  GGS_lstring  var_cas_sourceFile ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_sourceFile) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioTreewalkingComponentMap, var_cas_ioFileWrappers) ;
                  } break ;
                default :
                  break ;
              }
              GGS_lstring  automatic_var_14 ;
              GGS_entityToImplementMap  automatic_var_15 ;
              GGS_stringset  automatic_var_16 ;
              if (var_cas_ioMetamodelComponentMap._isBuilt ()) {
                var_cas_ioMetamodelComponentMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelComponentName, automatic_var_14, automatic_var_15, automatic_var_16 COMMA_SOURCE_FILE_AT_LINE (1212)) ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_3 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_import_headers_semantics_and_grammars_semantics_parser_822_4_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_3 = true ;
    while (syntaxRepeat_3) {
      switch (select_repeat_semantics_parser_3 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semantics_parser_4 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_5 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_6 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_option_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_7 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_grammar_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 5 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_8 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            case 6 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_semantics_parser_9 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_3 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1224_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                GGS_M_filewrappers  &var_cas_ioFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_routineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_routineName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1253)) COMMA_SOURCE_FILE_AT_LINE (1253))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1255)) ;
    }
    GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
    var_cas_listeDeTypesPrecedenteDeclaration = GGS_typeEntiteRoutine::_castFrom (_inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1257)).reader_aListeArgumentsFormels (_inLexique COMMA_SOURCE_FILE_AT_LINE (1257)) ;
    ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (1257)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1264)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteRoutine::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1266)) ;
  }
  switch (select_semantics_parser_10 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_ioInstructionList ;
      var_cas_ioInstructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_entityPropertyMap  var_cas_propertyMap ;
      var_cas_propertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_treewalkingRoutineHeaderMap  var_cas_treewalkingRoutineHeaderMap ;
      var_cas_treewalkingRoutineHeaderMap = GGS_treewalkingRoutineHeaderMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_entityToImplementMap  var_cas_metamodelEntityMap ;
      var_cas_metamodelEntityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_semantic_instructions_list_ (_inLexique, var_cas_treewalkingRoutineHeaderMap, var_cas_tableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_tableArgumentsMethode, var_cas_ioInstructionList, var_cas_propertyMap, var_cas_metamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_ioFileWrappers) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      GGS_typeEntityToGenerate  var_cas_ea ;
      var_cas_ea = GGS_typeRoutineAengendrer::constructor_new (_inLexique, var_cas_routineName, var_cas_listeTypeEtNomsArguments, var_cas_ioInstructionList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_ea) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1299)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1224_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_M_filewrappers  &/* var_cas_ioFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_routineName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_routineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  var_cas_ioExternActionMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_signature, GGS_bool (true, false) COMMA_SOURCE_FILE_AT_LINE (1328)) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_routineName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1331)) COMMA_SOURCE_FILE_AT_LINE (1331))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1333)) ;
    }
    GGS_L_EXsignature  var_cas_listeDeTypesPrecedenteDeclaration ;
    var_cas_listeDeTypesPrecedenteDeclaration = GGS_typeEntiteRoutine::_castFrom (_inLexique, var_cas_entite.getPtr (), false, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1335)).reader_aListeArgumentsFormels (_inLexique COMMA_SOURCE_FILE_AT_LINE (1335)) ;
    ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesPrecedenteDeclaration,  var_cas_listeDeTypes,  GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (1335)) ;
  }else{
    var_cas_tableNomRoutinesDeclarees.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1342)) ;
    GGS_AC_semanticsEntity  var_cas_entite ;
    var_cas_entite = GGS_typeEntiteRoutine::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
    var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_routineName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1344)) ;
  }
  switch (select_semantics_parser_10 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      nt_semantic_instructions_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      var_cas_tableRoutinesAimplementer.modifier_insertKey (_inLexique, var_cas_routineName COMMA_SOURCE_FILE_AT_LINE (1355)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1224_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  switch (select_semantics_parser_10 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      nt_semantic_instructions_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1365_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName,
                                GGS_string &var_cas_outSuperClassMessage) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClassName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_outSuperClassMessage = GGS_string (true, "") ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1365_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits) {
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableDesClassesAncetres = GGS_typeSuperClassesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableDesMethodes = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableMessagesAbstraits = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outMessageMap = GGS_classMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClasses = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outAttributeList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1365_4_parse (galgas_scanner & /* _inLexique */) {
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parent_class'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1407_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits,
                                GGS_lstring  &var_cas_outSuperClassName,
                                GGS_string &var_cas_outSuperClassMessage) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outSuperClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outSuperClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1422)) ;
  }
  GGS_AC_galgasType  var_cas_typeUtilisateur ;
  var_cas_typeUtilisateur = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1424)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (1424)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_typeUtilisateur.getPtr (), true, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1425)) ;
  var_cas_tableDesMethodes = var_cas_classType.reader_mReaderMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1426)) ;
  var_cas_listeTousAttributsSemantiques = var_cas_classType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1427)) ;
  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1428)) ;
  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1429)) ;
  var_cas_tableAttributs = var_cas_classType.reader_mNonExternAttributesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1430)) ;
  var_cas_outSuperClassMessage = var_cas_classType.reader_mClassMessage (_inLexique COMMA_SOURCE_FILE_AT_LINE (1431)) ;
  var_cas_tableDesClassesAncetres.modifier_insertKey (_inLexique, var_cas_outSuperClassName COMMA_SOURCE_FILE_AT_LINE (1433)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parent_class_semantics_parser_1407_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_stringset  &var_cas_outSuperClasses,
                                GGS_typeListModel  &var_cas_outAttributeList,
                                GGS_classMessageMap  &var_cas_outMessageMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeSuperClassesMap  &var_cas_tableDesClassesAncetres,
                                GGS_typeClassInheritedMessagesMap  &var_cas_tableMessagesAbstraits) {
  GGS_lstring  var_cas_superClassName ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_superClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1452)) ;
  }
  GGS_AC_galgasType  var_cas_typeUtilisateur ;
  var_cas_typeUtilisateur = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1454)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (1454)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_typeUtilisateur.getPtr (), true, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1455)) ;
  var_cas_tableDesMethodes = var_cas_classType.reader_mReaderMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1456)) ;
  var_cas_listeTousAttributsSemantiques = var_cas_classType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1457)) ;
  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1458)) ;
  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1459)) ;
  var_cas_tableAttributs = var_cas_classType.reader_mNonExternAttributesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1460)) ;
  var_cas_tableDesClassesAncetres.modifier_insertKey (_inLexique, var_cas_superClassName COMMA_SOURCE_FILE_AT_LINE (1463)) ;
  GGS_TypeModel  var_cas_type ;
  if (var_cas_ioModelMap._isBuilt ()) {
    var_cas_ioModelMap (HERE)->method_searchKey (_inLexique, var_cas_superClassName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (1466)) ;
  }
  { const GGS_TypeModel _var_54257 = var_cas_type ; // CAST instruction
    if (_var_54257.getPtr () != NULL) {
      macroValidPointer (_var_54257.getPtr ()) ;
      if (dynamic_cast <cPtr_ClassModel *> (_var_54257.getPtr ()) != NULL) {
        const GGS_ClassModel var_cas_model (_var_54257.getPtr ()) ;
        var_cas_outSuperClasses = var_cas_model.reader_mSuperClasses (_inLexique COMMA_SOURCE_FILE_AT_LINE (1469)) ;
        var_cas_outAttributeList = var_cas_model.reader_mAttributeList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1470)) ;
        var_cas_outMessageMap = var_cas_model.reader_mMessageMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (1471)) ;
      }else{
        var_cas_superClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '@"))._operator_concat (var_cas_superClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1473))))._operator_concat (GGS_string (true, "' type is not a class")) COMMA_SOURCE_FILE_AT_LINE (1474)) ;
        var_cas_outSuperClasses._drop_operation () ;
        var_cas_outAttributeList._drop_operation () ;
        var_cas_outMessageMap._drop_operation () ;
      }
    }
  }
  var_cas_outSuperClasses._addAssign_operation (var_cas_superClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1476))) ;
  var_cas_outMessageMap = GGS_classMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outSuperClasses = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_outAttributeList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parent_class_semantics_parser_1407_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1490_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                GGS_M_filewrappers  &var_cas_ioFileWrappers) {
  GGS_bool var_cas_estAbstraite ;
  switch (select_semantics_parser_11 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      var_cas_estAbstraite = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_estAbstraite = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_abstractClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_abstractClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_12 (_inLexique)) {
    case 1 : {
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1512)) COMMA_SOURCE_FILE_AT_LINE (1512)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1513)) COMMA_SOURCE_FILE_AT_LINE (1513))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType::constructor_new (_inLexique, var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (1515)) ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_string var_cas_superClassMessage ;
      GGS_lstring  automatic_var_17 ;
      nt_parent_class_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap, automatic_var_17, var_cas_superClassMessage) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
      var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
      var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
      var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes ;
      var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      GGS_string var_cas_classMessage ;
      var_cas_classMessage = GGS_string (true, "") ;
      { bool syntaxRepeat_13 = true ;
        while (syntaxRepeat_13) {
          switch (select_repeat_semantics_parser_13 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              switch (select_semantics_parser_14 (_inLexique)) {
                case 1 : {
                  GGS_lstring  var_cas_messageText ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (((var_cas_classMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1560)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the class message is already defined") COMMA_SOURCE_FILE_AT_LINE (1561)) ;
                  }else if (((var_cas_messageText.ggs_string ().reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1562)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the class message string should not be empty") COMMA_SOURCE_FILE_AT_LINE (1563)) ;
                  }else{
                    var_cas_classMessage = var_cas_messageText.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1565)) ;
                  }
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_messageName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_lstring  var_cas_messageText ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (((var_cas_inheritedMessageMap.reader_hasKey (_inLexique, var_cas_messageName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1574)) COMMA_SOURCE_FILE_AT_LINE (1574)))._operator_not ()).isBuiltAndTrue ()) {
                    var_cas_messageMapForHeirs.modifier_insertKey (_inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (1575)) ;
                  }
                  var_cas_tableMessagesClasseConcrete.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageText COMMA_SOURCE_FILE_AT_LINE (1577)) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_method_ (_inLexique, var_cas_estAbstraite, var_cas_listeAttributsSemantiquesCourants, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_classMessage, var_cas_ioFileWrappers) ;
              } break ;
            case 5 : {
              nt_overrided_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_inOptionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_classMessage, var_cas_ioFileWrappers) ;
              } break ;
            default :
              syntaxRepeat_13 = false ;
              break ;
          }
        }
      }
      if ((((var_cas_superClassMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1628)))._operator_strictSup (GGS_uint (true, 0U)))._operator_and ((var_cas_classMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1628)))._operator_isEqual (GGS_uint (true, 0U)))).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this class should defined a class message, as it inherits from a class that does") COMMA_SOURCE_FILE_AT_LINE (1629)) ;
      }
      GGS_typeClassInheritedMessagesMap::cEnumerator enumerator_59738 (var_cas_inheritedMessageMap, true) ;
      const GGS_typeClassInheritedMessagesMap::cElement * operand_59738 = NULL ;
      while (((operand_59738 = (GGS_typeClassInheritedMessagesMap::cElement *) enumerator_59738.nextObject ()))) {
        macroValidPointer (operand_59738) ;
        if (((var_cas_tableMessagesClasseConcrete.reader_hasKey (_inLexique, operand_59738->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1633)) COMMA_SOURCE_FILE_AT_LINE (1633)))._operator_not ()).isBuiltAndTrue ()) {
          GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the message '"))._operator_concat (operand_59738->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1634))))._operator_concat (GGS_string (true, "' is not defined")) COMMA_SOURCE_FILE_AT_LINE (1634)) ;
        }
      }
      enumerator_59738.reset () ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_classMessage COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1648)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_classToImplement::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_estAbstraite, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_listeAttributsSemantiquesCourants, var_cas_tableDesClassesAncetres, var_cas_tableMessagesClasseConcrete, var_cas_classMessage COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_1490_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                GGS_M_filewrappers  &var_cas_ioFileWrappers) {
  GGS_bool var_cas_estAbstraite ;
  switch (select_semantics_parser_11 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      var_cas_estAbstraite = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_estAbstraite = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_abstractClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_abstractClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_12 (_inLexique)) {
    case 1 : {
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1686)) COMMA_SOURCE_FILE_AT_LINE (1686)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_abstractClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1687)) COMMA_SOURCE_FILE_AT_LINE (1687))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedClassType::constructor_new (_inLexique, var_cas_abstractClassName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (1689)) ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      GGS_typeTableMethodes  var_cas_ancestorClassMethodsMap ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
      GGS_typeClassInheritedMessagesMap  var_cas_inheritedMessageMap ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      GGS_stringset  var_cas_superClasses ;
      GGS_typeListModel  var_cas_attributeList ;
      GGS_classMessageMap  var_cas_messageMap ;
      nt_parent_class_importSemantics (_inLexique, var_cas_ioModelMap, var_cas_superClasses, var_cas_attributeList, var_cas_messageMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_ancestorClassMethodsMap, var_cas_tableDesClassesAncetres, var_cas_inheritedMessageMap) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeList, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableMethodesAimplementer  var_cas_tableMethodesAimplementer ;
      var_cas_tableMethodesAimplementer = GGS_typeTableMethodesAimplementer::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassMessagesMap  var_cas_tableMessagesClasseConcrete ;
      var_cas_tableMessagesClasseConcrete = GGS_typeClassMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs ;
      var_cas_messageMapForHeirs = GGS_typeClassInheritedMessagesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeTableMethodes  var_cas_tableDesMethodes ;
      var_cas_tableDesMethodes = var_cas_ancestorClassMethodsMap ;
      GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
      var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
      var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_string var_cas_classMessage ;
      var_cas_classMessage = GGS_string (true, "") ;
      { bool syntaxRepeat_13 = true ;
        while (syntaxRepeat_13) {
          switch (select_repeat_semantics_parser_13 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              switch (select_semantics_parser_14 (_inLexique)) {
                case 1 : {
                  GGS_lstring  var_cas_messageText ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (((var_cas_classMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1739)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the class message is already defined") COMMA_SOURCE_FILE_AT_LINE (1740)) ;
                  }else if (((var_cas_messageText.ggs_string ().reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1741)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                    var_cas_messageText.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the class message string should not be empty") COMMA_SOURCE_FILE_AT_LINE (1742)) ;
                  }else{
                    var_cas_classMessage = var_cas_messageText.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1744)) ;
                  }
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_messageName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_lstring  var_cas_messageText ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_messageText) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (((var_cas_inheritedMessageMap.reader_hasKey (_inLexique, var_cas_messageName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1754)) COMMA_SOURCE_FILE_AT_LINE (1754)))._operator_not ()).isBuiltAndTrue ()) {
                    var_cas_messageMapForHeirs.modifier_insertKey (_inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (1755)) ;
                  }
                  var_cas_tableMessagesClasseConcrete.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageText COMMA_SOURCE_FILE_AT_LINE (1757)) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_method_ (_inLexique, var_cas_estAbstraite, var_cas_listeAttributsSemantiquesCourants, var_cas_listeEntitesAengendrer, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableDesMethodes, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_classMessage, var_cas_ioFileWrappers) ;
              } break ;
            case 5 : {
              nt_overrided_method_ (_inLexique, var_cas_abstractClassName, var_cas_ancestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableMethodesAimplementer, var_cas_tableEnAvant, var_cas_optionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_classMessage, var_cas_ioFileWrappers) ;
              } break ;
            default :
              syntaxRepeat_13 = false ;
              break ;
          }
        }
      }
      GGS_typeClassInheritedMessagesMap::cEnumerator enumerator_65756 (var_cas_inheritedMessageMap, true) ;
      const GGS_typeClassInheritedMessagesMap::cElement * operand_65756 = NULL ;
      while (((operand_65756 = (GGS_typeClassInheritedMessagesMap::cElement *) enumerator_65756.nextObject ()))) {
        macroValidPointer (operand_65756) ;
        if (((var_cas_tableMessagesClasseConcrete.reader_hasKey (_inLexique, operand_65756->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1808)) COMMA_SOURCE_FILE_AT_LINE (1808)))._operator_not ()).isBuiltAndTrue ()) {
          GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the message '"))._operator_concat (operand_65756->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1809))))._operator_concat (GGS_string (true, "' is not defined")) COMMA_SOURCE_FILE_AT_LINE (1809)) ;
        }
      }
      enumerator_65756.reset () ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_abstractClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_estAbstraite, var_cas_classMessage COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1823)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ClassModel::constructor_new (_inLexique, GGS_bool (true, true), var_cas_superClasses, var_cas_attributeList, var_cas_messageMap COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_abstractClassName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (1826)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_1490_4_parse (galgas_scanner & _inLexique) {
  switch (select_semantics_parser_11 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_12 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      nt_parent_class_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      { bool syntaxRepeat_13 = true ;
        while (syntaxRepeat_13) {
          switch (select_repeat_semantics_parser_13 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              switch (select_semantics_parser_14 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              nt_abstract_method_parse (_inLexique) ;
              } break ;
            case 4 : {
              nt_non_abstract_method_parse (_inLexique) ;
              } break ;
            case 5 : {
              nt_overrided_method_parse (_inLexique) ;
              } break ;
            default :
              syntaxRepeat_13 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'abstract_method'             *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_abstract_method_semantics_parser_1834_4_ (galgas_scanner & _inLexique,
                                const GGS_bool var_cas_inIsAbstract,
                                GGS_typeListeAttributsSemantiques  &/* var_cas_listeAttributsSemantiquesCourants */,
                                GGS_typeEntitiesToGenerateList  &/* var_cas_listeEntitesAengendrer */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  if (((var_cas_inIsAbstract)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a concrete class should not declare an abstract method") COMMA_SOURCE_FILE_AT_LINE (1846)) ;
  }
  GGS_lstring  var_cas_nomMethode ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  var_cas_tableDesMethodes.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (1862)) ;
  GGS_typeInstructionList  var_cas_listeInstructions ;
  var_cas_listeInstructions = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_tableMethodesAimplementer.modifier_insertAbstract (_inLexique, var_cas_nomMethode, var_cas_listeDeTypes, var_cas_listeTypeEtNomsArguments, var_cas_listeInstructions COMMA_SOURCE_FILE_AT_LINE (1864)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_abstract_method_semantics_parser_1834_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'parse_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_method_semantics_parser_1870_4_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                const GGS_typeTableMethodes  var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributsHerites,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outMethodName,
                                GGS_typeInstructionList  &var_cas_outInstructionsList,
                                GGS_L_EXsignature  &var_cas_outMethodSignature,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outMethodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_methodLocalVariablesMap ;
  var_cas_methodLocalVariablesMap = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeSemanticAttributesMap::cEnumerator enumerator_69473 (var_cas_tableAttributsHerites, true) ;
  const GGS_typeSemanticAttributesMap::cElement * operand_69473 = NULL ;
  while (((operand_69473 = (GGS_typeSemanticAttributesMap::cElement *) enumerator_69473.nextObject ()))) {
    macroValidPointer (operand_69473) ;
    GGS_typeCplusPlusName  var_cas_nomCpp ;
    var_cas_nomCpp = GGS_typeDirectName::constructor_new (_inLexique, operand_69473->mKey.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1895)), operand_69473->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1895)) COMMA_HERE) ;
    var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_69473->mKey, operand_69473->mInfo.mAttributType, var_cas_nomCpp COMMA_SOURCE_FILE_AT_LINE (1896)) ;
  }
  enumerator_69473.reset () ;
  GGS_lstring  var_cas_me_Constant ;
  var_cas_me_Constant = GGS_lstring::constructor_new (_inLexique, GGS_string (true, "self"), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_me_constantCppName ;
  var_cas_me_constantCppName = GGS_typeCppThisName::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_typeDefinition ;
  var_cas_typeDefinition = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_inCurrentClassName, var_cas_tableDesMethodes, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, var_cas_me_Constant, var_cas_typeDefinition, var_cas_me_constantCppName COMMA_SOURCE_FILE_AT_LINE (1910)) ;
  GGS_lstring  var_cas_super_Constant ;
  var_cas_super_Constant = GGS_lstring::constructor_new (_inLexique, GGS_string (true, "super"), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_super_constantCppName ;
  var_cas_super_constantCppName = GGS_typeCppInheritedName::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_typeDefinition = GGS_typeGalgasClassType::constructor_new (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributsHerites, var_cas_inClassIsAbstract, var_cas_inClassMessage COMMA_HERE) ;
  var_cas_methodLocalVariablesMap.modifier_insertUsedConstInArgument (_inLexique, var_cas_super_Constant, var_cas_typeDefinition, var_cas_super_constantCppName COMMA_SOURCE_FILE_AT_LINE (1924)) ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_outMethodSignature, var_cas_methodLocalVariablesMap, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  var_cas_componentSemanticsEntitiesMap = var_cas_ioComponentSemanticsEntitiesMap ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_typeDefinition COMMA_HERE) ;
  var_cas_componentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_inCurrentClassName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (1939)) ;
  var_cas_outInstructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_entityPropertyMap  var_cas_propertyMap ;
  var_cas_propertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_treewalkingRoutineHeaderMap  var_cas_treewalkingRoutineHeaderMap ;
  var_cas_treewalkingRoutineHeaderMap = GGS_treewalkingRoutineHeaderMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap  var_cas_metamodelEntityMap ;
  var_cas_metamodelEntityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_treewalkingRoutineHeaderMap, var_cas_tableEnAvant, var_cas_componentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_methodLocalVariablesMap, var_cas_outInstructionsList, var_cas_propertyMap, var_cas_metamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inFileWrappers) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_method_semantics_parser_1870_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'non_abstract_method'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_non_abstract_method_semantics_parser_1961_4_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributs,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  switch (select_semantics_parser_15 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old syntax: from GALGAS 1.5.1, use 'method' instead of 'reader'") COMMA_SOURCE_FILE_AT_LINE (1982)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_method_ (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_inOptionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_inClassMessage, var_cas_inFileWrappers) ;
  var_cas_tableDesMethodes.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (2008)) ;
  var_cas_tableMethodesAimplementer.modifier_insertNotAbstract (_inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList COMMA_SOURCE_FILE_AT_LINE (2009)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  switch (select_semantics_parser_16 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old syntax: from GALGAS 1.5.1, use 'method' instead of 'reader'") COMMA_SOURCE_FILE_AT_LINE (2015)) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_non_abstract_method_semantics_parser_1961_4_parse (galgas_scanner & _inLexique) {
  switch (select_semantics_parser_15 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  nt_parse_method_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  switch (select_semantics_parser_16 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'overrided_method'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_overrided_method_semantics_parser_2022_4_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inCurrentClassName,
                                const GGS_typeTableMethodes  var_cas_inAncestorClassMethodsMap,
                                const GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques,
                                GGS_typeTableMethodes  &var_cas_tableDesMethodes,
                                const GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres,
                                const GGS_typeClassInheritedMessagesMap  var_cas_messageMapForHeirs,
                                const GGS_typeSemanticAttributesMap  var_cas_tableAttributs,
                                const GGS_bool var_cas_inClassIsAbstract,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableMethodesAimplementer  &var_cas_tableMethodesAimplementer,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_string var_cas_inClassMessage,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
  switch (select_semantics_parser_17 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old syntax: from GALGAS 1.5.1, use 'method' instead of 'reader'") COMMA_SOURCE_FILE_AT_LINE (2044)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  var_cas_methodName ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  GGS_L_EXsignature  var_cas_methodSignature ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  nt_parse_method_ (_inLexique, var_cas_inCurrentClassName, var_cas_inAncestorClassMethodsMap, var_cas_listeTousAttributsSemantiques, var_cas_tableDesMethodes, var_cas_tableDesClassesAncetres, var_cas_messageMapForHeirs, var_cas_tableAttributs, var_cas_inClassIsAbstract, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableEnAvant, var_cas_methodName, var_cas_instructionsList, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_inOptionsComponentsMapForUse, var_cas_inTreewalkingComponentMap, var_cas_inClassMessage, var_cas_inFileWrappers) ;
  GGS_L_EXsignature  var_cas_listeDeTypesMethodeOriginale ;
  if (var_cas_tableDesMethodes._isBuilt ()) {
    var_cas_tableDesMethodes (HERE)->method_searchKey (_inLexique, var_cas_methodName, var_cas_listeDeTypesMethodeOriginale COMMA_SOURCE_FILE_AT_LINE (2072)) ;
  }
  ::routine_verifierCompatibiliteSignatures (_inLexique,  var_cas_listeDeTypesMethodeOriginale,  var_cas_methodSignature,  GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2072)) ;
  var_cas_tableMethodesAimplementer.modifier_insertNotAbstract (_inLexique, var_cas_methodName, var_cas_methodSignature, var_cas_listeTypeEtNomsArguments, var_cas_instructionsList COMMA_SOURCE_FILE_AT_LINE (2079)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  switch (select_semantics_parser_18 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old syntax: from GALGAS 1.5.1, use 'method' instead of 'reader'") COMMA_SOURCE_FILE_AT_LINE (2085)) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_overrided_method_semantics_parser_2022_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
  switch (select_semantics_parser_17 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  nt_parse_method_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  switch (select_semantics_parser_18 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'formal_arguments_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_arguments_list_semantics_parser_2095_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_L_EXsignature  &var_cas_listeDeTypes,
                                GGS_typeVariablesMap  &var_cas_tableArgumentsMethode,
                                GGS_typeListeTypesEtNomsArgMethode  &var_cas_listeTypeEtNomsArguments,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_L_signature  &var_cas_outSignatureForGrammar) {
  var_cas_listeDeTypes = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_listeTypeEtNomsArguments = GGS_typeListeTypesEtNomsArgMethode::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_outSignatureForGrammar = GGS_L_signature::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_19 = true ;
    while (syntaxRepeat_19) {
      switch (select_repeat_semantics_parser_19 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, true) ;
          switch (select_semantics_parser_20 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2125)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2125)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2127)) ;
              } break ;
            case 2 : {
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2130)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2130)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
              var_cas_tableArgumentsMethode.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2132)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_21 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2151)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2151)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, true)) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2153)) ;
              } break ;
            case 2 : {
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2157)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2157)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, true)) ;
              var_cas_tableArgumentsMethode.modifier_insertInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2159)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          switch (select_semantics_parser_22 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2178)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2178)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, false)) ;
              var_cas_tableArgumentsMethode.modifier_insertUnusedInOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2180)) ;
              } break ;
            case 2 : {
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_typeCplusPlusName  var_cas_natureNom ;
              var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2183)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2183)) COMMA_HERE) ;
              var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, GGS_bool (true, false)) ;
              var_cas_tableArgumentsMethode.modifier_insertInOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2185)) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_type_semantique ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
          var_cas_listeDeTypes._addAssign_operation (var_cas_type_semantique, var_cas_passingMode) ;
          var_cas_outSignatureForGrammar._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          GGS_lstring  var_cas_nomArgument ;
          _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_typeCplusPlusName  var_cas_natureNom ;
          var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2202)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2202)) COMMA_HERE) ;
          GGS_bool var_cas_modeIn ;
          var_cas_modeIn = GGS_bool (true, false) ;
          var_cas_listeTypeEtNomsArguments._addAssign_operation (var_cas_type_semantique, var_cas_passingMode, var_cas_natureNom, var_cas_modeIn) ;
          var_cas_tableArgumentsMethode.modifier_insertOutArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (2205)) ;
          } break ;
        default :
          syntaxRepeat_19 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_arguments_list_semantics_parser_2095_4_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_L_signature  &var_cas_outSignature) {
  var_cas_outSignature = GGS_L_signature::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_19 = true ;
    while (syntaxRepeat_19) {
      switch (select_repeat_semantics_parser_19 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_20 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_21 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          switch (select_semantics_parser_22 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_formalArgumentPassingMode var_cas_passingMode ;
          var_cas_passingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
          GGS_lstring  var_cas_galgasTypeName ;
          nt_formal_argument_type_importGrammarForSemantics (_inLexique, var_cas_galgasTypeName) ;
          var_cas_outSignature._addAssign_operation (var_cas_passingMode, var_cas_galgasTypeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_19 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_arguments_list_semantics_parser_2095_4_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_19 = true ;
    while (syntaxRepeat_19) {
      switch (select_repeat_semantics_parser_19 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_20 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_21 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          switch (select_semantics_parser_22 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          nt_formal_argument_type_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_19 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'type_parsing'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_type_parsing_semantics_parser_2262_4_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_outTypeDefinition,
                                GGS_lstring  &var_cas_outTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2269)) COMMA_SOURCE_FILE_AT_LINE (2269))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2271)) ;
    }
    var_cas_outTypeDefinition = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (2272)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2272)) ;
  }else if ((var_cas_inTableEnAvant.reader_hasKey (_inLexique, var_cas_outTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2273)) COMMA_SOURCE_FILE_AT_LINE (2273))).isBuiltAndTrue ()) {
    if (var_cas_inTableEnAvant._isBuilt ()) {
      var_cas_inTableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_outTypeDefinition COMMA_SOURCE_FILE_AT_LINE (2274)) ;
    }
  }else{
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '@"))._operator_concat (var_cas_outTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2276))))._operator_concat (GGS_string (true, "' type is not defined")) COMMA_SOURCE_FILE_AT_LINE (2276)) ;
    var_cas_outTypeDefinition._drop_operation () ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_type_parsing_semantics_parser_2262_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2287_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_inTargetVarName,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_AC_galgasType  var_cas_targetVarType ;
  GGS_typeCplusPlusName  var_cas_targetVarCppName ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, var_cas_targetVarType, var_cas_targetVarCppName COMMA_SOURCE_FILE_AT_LINE (2312)) ;
  ::routine_checkAssignmentTypesCompatibility (_inLexique,  var_cas_targetVarType,  var_cas_sourceType,  GGS_location (_inLexique),  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (2312)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_assignmentInstruction::constructor_new (_inLexique, var_cas_targetVarCppName, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2287_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2326_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_inTargetVarName,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_3D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  GGS_AC_galgasType  var_cas_targetVarType ;
  GGS_typeCplusPlusName  var_cas_targetVarCppName ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_inTargetVarName, var_cas_targetVarType, var_cas_targetVarCppName COMMA_SOURCE_FILE_AT_LINE (2351)) ;
  GGS_string var_cas_sourceExpressionConverter ;
  if (var_cas_targetVarType._isBuilt () && var_cas_sourceType._isBuilt ()) {
    cPtr_AC_galgasType * ptr_87064 = var_cas_targetVarType (HERE) ;
    cPtr_AC_galgasType * ptr_87078 = var_cas_sourceType (HERE) ;
    cPtr_typeGalgas_string * operand_87064 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_87064) ;
    cPtr_typeGalgas_string * operand_87078 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_87078) ;
    if ((operand_87064 != NULL) && (operand_87078 != NULL)) {
      var_cas_sourceExpressionConverter = GGS_string (true, "") ;
    }else{
      cPtr_typeGalgas_string * operand_87064 = dynamic_cast <cPtr_typeGalgas_string *> (ptr_87064) ;
      cPtr_typeGalgas_lstring * operand_87078 = dynamic_cast <cPtr_typeGalgas_lstring *> (ptr_87078) ;
      if ((operand_87064 != NULL) && (operand_87078 != NULL)) {
        var_cas_sourceExpressionConverter = GGS_string (true, "ggs_string") ;
      }else{
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "for '.=' operator, "))._operator_concat (var_cas_targetVarType.reader_messageGalgasType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2360))))._operator_concat (GGS_string (true, " target object type is not compatible with ")))._operator_concat (var_cas_sourceType.reader_messageGalgasType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2361))))._operator_concat (GGS_string (true, " source expression type")) COMMA_SOURCE_FILE_AT_LINE (2362)) ;
        var_cas_sourceExpressionConverter._drop_operation () ;
      }
    }
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_dotEqualInstruction::constructor_new (_inLexique, var_cas_targetVarCppName, var_cas_sourceExpression, var_cas_sourceExpressionConverter COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2326_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_3D) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'input_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_input_parameters_list_semantics_parser_2377_4_ (galgas_scanner & _inLexique,
                                GGS_L_assignedVariables  &var_cas_listeAffectationParametresEffectifs,
                                GGS_typeCplusPlusNameList  &var_cas_outAllVariablesList,
                                GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap) {
  GGS_typeListeCibles  var_cas_listeCibles ;
  var_cas_listeCibles = GGS_typeListeCibles::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_23 = true ;
    while (syntaxRepeat_23) {
      switch (select_repeat_semantics_parser_23 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          switch (select_semantics_parser_24 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_nomVariableDest ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomVariableDest) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_AC_galgasType  var_cas_typeVarDest ;
              GGS_typeCplusPlusName  var_cas_nomCppDest ;
              var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomVariableDest, var_cas_typeVarDest, var_cas_nomCppDest COMMA_SOURCE_FILE_AT_LINE (2392)) ;
              var_cas_listeCibles._addAssign_operation (GGS_typeEntiteDest::constructor_new (_inLexique, var_cas_typeVarDest, var_cas_nomCppDest, GGS_location (_inLexique) COMMA_HERE)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              var_cas_listeCibles._addAssign_operation (GGS_typeJoker::constructor_new (_inLexique COMMA_HERE)) ;
              } break ;
            case 3 : {
              GGS_luint  var_cas_jokerCountWithLocation ;
              _inLexique._assignFromAttribute_uint32value (var_cas_jokerCountWithLocation) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              GGS_uint  var_cas_jokerCount ;
              var_cas_jokerCount = var_cas_jokerCountWithLocation.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (2401)) ;
              GGS_uint _variant_88965 = var_cas_jokerCount._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (2402)) ;
              GGS_bool _condition_88965 (_variant_88965._isBuilt (), true) ;
              while (_condition_88965.isBuiltAndTrue ()) {
                _condition_88965 = (var_cas_jokerCount)._operator_strictSup (GGS_uint (true, 0U)) ;
                if (_condition_88965.isBuiltAndTrue ()) {
                  if (_variant_88965.uintValue () == 0) {
                    _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (2405)) ;
                    _condition_88965 = GGS_bool (true, false) ;
                  }else{
                    _variant_88965._decrement_operation (_inLexique COMMA_HERE) ;
                    var_cas_listeCibles._addAssign_operation (GGS_typeJoker::constructor_new (_inLexique COMMA_HERE)) ;
                    var_cas_jokerCount._decrement_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (2405)) ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_23 = false ;
          break ;
      }
    }
  }
  GGS_bool var_cas_ellipsis ;
  switch (select_semantics_parser_25 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_2E_2E) COMMA_HERE) ;
      var_cas_ellipsis = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_ellipsis = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  if (((var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2417)))._operator_strictInf (var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2417)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "too much arguments: "))._operator_concat (var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2418)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2418))))._operator_concat (GGS_string (true, " expected, ")))._operator_concat (var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2419)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2419))))._operator_concat (GGS_string (true, " found")) COMMA_SOURCE_FILE_AT_LINE (2420)) ;
    var_cas_outAllVariablesList._drop_operation () ;
    var_cas_listeAffectationParametresEffectifs._drop_operation () ;
  }else if ((((var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2421)))._operator_strictSup (var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2421))))._operator_and ((var_cas_ellipsis)._operator_not ())).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "argument(s) missing: "))._operator_concat (var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2422)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2422))))._operator_concat (GGS_string (true, " expected, ")))._operator_concat (var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2423)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2423))))._operator_concat (GGS_string (true, " found")) COMMA_SOURCE_FILE_AT_LINE (2424)) ;
    var_cas_outAllVariablesList._drop_operation () ;
    var_cas_listeAffectationParametresEffectifs._drop_operation () ;
  }else{
    var_cas_listeAffectationParametresEffectifs = GGS_L_assignedVariables::constructor_emptyList (_inLexique COMMA_HERE) ;
    var_cas_outAllVariablesList = GGS_typeCplusPlusNameList::constructor_emptyList (_inLexique COMMA_HERE) ;
    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_89957 (var_cas_listeAttributsSemantiques, true) ;
    const GGS_typeListeAttributsSemantiques::cElement * operand_89957 = NULL ;
    GGS_typeListeCibles::cEnumerator enumerator_90041 (var_cas_listeCibles, true) ;
    const GGS_typeListeCibles::cElement * operand_90041 = NULL ;
    while (((operand_89957 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_89957.nextObject ()))
        && ((operand_90041 = enumerator_90041.nextObject ()))) {
      macroValidPointer (operand_89957) ;
      macroValidPointer (operand_90041) ;
      GGS_lstring  var_cas_nomAttributSource ;
      var_cas_nomAttributSource = operand_89957->aNomAttribut ;
      if (operand_90041->aCible._isBuilt ()) {
        operand_90041->aCible (HERE)->method_verifierType (_inLexique, operand_89957->mAttributType, var_cas_nomAttributSource, var_cas_listeAffectationParametresEffectifs, var_cas_outAllVariablesList COMMA_SOURCE_FILE_AT_LINE (2431)) ;
      }
    }
    enumerator_89957.reset () ;
    enumerator_90041.reset () ;
  }
  GGS_typeCplusPlusName  var_cas_nullName ;
  var_cas_nullName = GGS_typeNullName::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  if (var_cas_outAllVariablesList._isBuilt () &&
      var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2438))._isBuilt () &&
      var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2439))._isBuilt () &&
      var_cas_nullName._isBuilt ()) {
    ::routine_appendJokersIfNeeded (_inLexique,  var_cas_outAllVariablesList,  var_cas_listeCibles.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2438)),  var_cas_listeAttributsSemantiques.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2439)),  var_cas_nullName COMMA_SOURCE_FILE_AT_LINE (2435)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_input_parameters_list_semantics_parser_2377_4_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_23 = true ;
    while (syntaxRepeat_23) {
      switch (select_repeat_semantics_parser_23 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          switch (select_semantics_parser_24 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat_23 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_25 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_2E_2E) COMMA_HERE) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2452_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource COMMA_SOURCE_FILE_AT_LINE (2466)) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  { const GGS_AC_galgasType _var_92378 = var_cas_targetVariableType ; // CAST instruction
    if (_var_92378.getPtr () != NULL) {
      macroValidPointer (_var_92378.getPtr ()) ;
      if (typeid (cPtr_typeGalgas_multipleReferenceEntity) == typeid (* (_var_92378.getPtr ()))) {
        const GGS_typeGalgas_multipleReferenceEntity var_cas_mre (_var_92378.getPtr ()) ;
        var_cas_formalParametersList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
          var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_mre.reader_mEntityTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (2473)), var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2473)) ;
        }
        GGS_AC_galgasType  var_cas_elementType ;
        var_cas_elementType = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2474)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2474)) ;
        var_cas_formalParametersList._addAssign_operation (var_cas_elementType, GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE)) ;
      }else{
        if (var_cas_targetVariableType._isBuilt ()) {
          var_cas_targetVariableType (HERE)->method_handleAddAssignOperatorCall (_inLexique, GGS_location (_inLexique), var_cas_formalParametersList COMMA_SOURCE_FILE_AT_LINE (2477)) ;
        }
      }
    }
  }
  GGS_typeTypesList  var_cas_typeList ;
  var_cas_typeList = GGS_typeTypesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeExpressionList  var_cas_expressionList ;
  var_cas_expressionList = GGS_typeExpressionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_26 = true ;
    while (syntaxRepeat_26) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList._addAssign_operation (var_cas_resultType, GGS_location (_inLexique)) ;
        var_cas_expressionList._addAssign_operation (var_cas_expression) ;
      switch (select_repeat_semantics_parser_26 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_26 = false ;
          break ;
      }
    }
  }
  if (((var_cas_formalParametersList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2499)))._operator_isNotEqual (var_cas_typeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2499)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, (((var_cas_typeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2500)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2500)))._operator_concat (GGS_string (true, " argument(s), while ")))._operator_concat (var_cas_formalParametersList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2500)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2500))))._operator_concat (GGS_string (true, " are needed")) COMMA_SOURCE_FILE_AT_LINE (2500)) ;
  }else{
    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_93155 (var_cas_formalParametersList, true) ;
    const GGS_typeListeAttributsSemantiques::cElement * operand_93155 = NULL ;
    GGS_typeTypesList::cEnumerator enumerator_93225 (var_cas_typeList, true) ;
    const GGS_typeTypesList::cElement * operand_93225 = NULL ;
    while (((operand_93155 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_93155.nextObject ()))
        && ((operand_93225 = enumerator_93225.nextObject ()))) {
      macroValidPointer (operand_93155) ;
      macroValidPointer (operand_93225) ;
      ::routine_checkAssignmentTypesCompatibility (_inLexique,  operand_93155->mAttributType,  operand_93225->mType,  operand_93225->mEndOfExpressionLocation,  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (2503)) ;
    }
    enumerator_93155.reset () ;
    enumerator_93225.reset () ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeAppendInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2452_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
  { bool syntaxRepeat_26 = true ;
    while (syntaxRepeat_26) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        nt_expression_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_26 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_26 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2524_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource COMMA_SOURCE_FILE_AT_LINE (2538)) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalParametersList ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleMinusAssignOperatorCall (_inLexique, GGS_location (_inLexique), var_cas_formalParametersList COMMA_SOURCE_FILE_AT_LINE (2541)) ;
  }
  GGS_typeTypesList  var_cas_typeList ;
  var_cas_typeList = GGS_typeTypesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeExpressionList  var_cas_expressionList ;
  var_cas_expressionList = GGS_typeExpressionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_27 = true ;
    while (syntaxRepeat_27) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_expression, var_cas_resultType) ;
        var_cas_typeList._addAssign_operation (var_cas_resultType, GGS_location (_inLexique)) ;
        var_cas_expressionList._addAssign_operation (var_cas_expression) ;
      switch (select_repeat_semantics_parser_27 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_27 = false ;
          break ;
      }
    }
  }
  if (((var_cas_formalParametersList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2562)))._operator_isNotEqual (var_cas_typeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2562)))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, (((var_cas_typeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2563)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2563)))._operator_concat (GGS_string (true, " argument(s), while ")))._operator_concat (var_cas_formalParametersList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2563)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2563))))._operator_concat (GGS_string (true, " are needed")) COMMA_SOURCE_FILE_AT_LINE (2563)) ;
  }else{
    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_95783 (var_cas_formalParametersList, true) ;
    const GGS_typeListeAttributsSemantiques::cElement * operand_95783 = NULL ;
    GGS_typeTypesList::cEnumerator enumerator_95853 (var_cas_typeList, true) ;
    const GGS_typeTypesList::cElement * operand_95853 = NULL ;
    while (((operand_95783 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_95783.nextObject ()))
        && ((operand_95853 = enumerator_95853.nextObject ()))) {
      macroValidPointer (operand_95783) ;
      macroValidPointer (operand_95853) ;
      ::routine_checkAssignmentTypesCompatibility (_inLexique,  operand_95783->mAttributType,  operand_95853->mType,  operand_95853->mEndOfExpressionLocation,  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (2566)) ;
    }
    enumerator_95783.reset () ;
    enumerator_95853.reset () ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeRemoveInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2524_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3D) COMMA_HERE) ;
  { bool syntaxRepeat_27 = true ;
    while (syntaxRepeat_27) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
        nt_expression_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_27 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_27 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2587_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_filewrappers  /* var_cas_inFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_2B) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource COMMA_SOURCE_FILE_AT_LINE (2601)) ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleIncrementOperatorCall (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2603)) ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeIncrementInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2587_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_2B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2617_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_filewrappers  /* var_cas_inFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_2D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_targetVariableType ;
  GGS_typeCplusPlusName  var_cas_nomCppVariableSource ;
  var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomVarDest, var_cas_targetVariableType, var_cas_nomCppVariableSource COMMA_SOURCE_FILE_AT_LINE (2631)) ;
  if (var_cas_targetVariableType._isBuilt ()) {
    var_cas_targetVariableType (HERE)->method_handleDecrementOperatorCall (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2633)) ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeDecrementInstruction::constructor_new (_inLexique, var_cas_nomCppVariableSource, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_2617_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_2D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'actual_parameters_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_actual_parameters_list_semantics_parser_2643_4_ (galgas_scanner & _inLexique,
                                const GGS_L_EXsignature  var_cas_listeTypesParametresFormels,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_filewrappers  var_cas_inFileWrappers,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_outExpressionList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioComponentSemanticsEntitiesMap) ;
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique,  var_cas_listeTypesParametresFormels,  var_cas_listeTypesParametresEffectifs,  GGS_location (_inLexique),  var_cas_ioInstructionList,  var_cas_outExpressionList COMMA_SOURCE_FILE_AT_LINE (2660)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_actual_parameters_list_semantics_parser_2643_4_parse (galgas_scanner & _inLexique) {
  nt_parse_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'parse_parameters_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_parameters_list_semantics_parser_2676_4_ (galgas_scanner & _inLexique,
                                GGS_L_actualParametersSignature  &var_cas_listeTypesParametresEffectifs,
                                GGS_typeExpressionList  &var_cas_outExpressionList,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_filewrappers  var_cas_inFileWrappers,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_outExpressionList = GGS_typeExpressionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_listeTypesParametresEffectifs = GGS_L_actualParametersSignature::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_exclusiveVariables ;
  var_cas_exclusiveVariables = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_28 = true ;
    while (syntaxRepeat_28) {
      switch (select_repeat_semantics_parser_28 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_expressionType ;
          GGS_typeExpression  var_cas_expressionValue ;
          nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_expressionValue, var_cas_expressionType) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterOut (_inLexique COMMA_HERE) ;
          var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_expressionType, var_cas_parameterPassingMode) ;
          var_cas_outExpressionList._addAssign_operation (var_cas_expressionValue) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterIn (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_29 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              var_cas_listeTypesParametresEffectifs._addAssign_operation (GGS_typeGalgas_jokerInParameterList::constructor_new (_inLexique COMMA_HERE), var_cas_parameterPassingMode) ;
              var_cas_outExpressionList._addAssign_operation (GGS_typeJokerInExpression::constructor_new (_inLexique COMMA_HERE)) ;
              } break ;
            case 2 : {
              GGS_luint  var_cas_jokerCountWithLocation ;
              _inLexique._assignFromAttribute_uint32value (var_cas_jokerCountWithLocation) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              GGS_uint  var_cas_jokerCount ;
              var_cas_jokerCount = var_cas_jokerCountWithLocation.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (2713)) ;
              GGS_uint _variant_102417 = var_cas_jokerCount._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (2714)) ;
              GGS_bool _condition_102417 (_variant_102417._isBuilt (), true) ;
              while (_condition_102417.isBuiltAndTrue ()) {
                _condition_102417 = (var_cas_jokerCount)._operator_strictSup (GGS_uint (true, 0U)) ;
                if (_condition_102417.isBuiltAndTrue ()) {
                  if (_variant_102417.uintValue () == 0) {
                    _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (2718)) ;
                    _condition_102417 = GGS_bool (true, false) ;
                  }else{
                    _variant_102417._decrement_operation (_inLexique COMMA_HERE) ;
                    var_cas_listeTypesParametresEffectifs._addAssign_operation (GGS_typeGalgas_jokerInParameterList::constructor_new (_inLexique COMMA_HERE), var_cas_parameterPassingMode) ;
                    var_cas_outExpressionList._addAssign_operation (GGS_typeJokerInExpression::constructor_new (_inLexique COMMA_HERE)) ;
                    var_cas_jokerCount._decrement_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (2718)) ;
                  }
                }
              }
              } break ;
            case 3 : {
              GGS_AC_galgasType  var_cas_typeArgument ;
              GGS_typeCplusPlusName  var_cas_nomCppArgument ;
              GGS_lstring  var_cas_nomArgument ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument COMMA_SOURCE_FILE_AT_LINE (2725)) ;
              var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
              GGS_typeExpression  var_cas_e ;
              var_cas_e = GGS_typeVarInExpression::constructor_new (_inLexique, var_cas_nomCppArgument COMMA_HERE) ;
              var_cas_outExpressionList._addAssign_operation (var_cas_e) ;
              if ((var_cas_exclusiveVariables.reader_hasKey (_inLexique, var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2729)) COMMA_SOURCE_FILE_AT_LINE (2729))).isBuiltAndTrue ()) {
                var_cas_nomArgument.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this object is already named as input or output/input effectif argument of current instruction") COMMA_SOURCE_FILE_AT_LINE (2730)) ;
              }else{
                var_cas_exclusiveVariables._addAssign_operation (var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2732))) ;
              }
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_typeArgument ;
          GGS_typeCplusPlusName  var_cas_nomCppArgument ;
          GGS_lstring  var_cas_nomArgument ;
          _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_nomArgument, var_cas_typeArgument, var_cas_nomCppArgument COMMA_SOURCE_FILE_AT_LINE (2741)) ;
          GGS_actualParametersPassingMode var_cas_parameterPassingMode ;
          var_cas_parameterPassingMode = GGS_actualParametersPassingMode::constructor_parameterOutIn (_inLexique COMMA_HERE) ;
          var_cas_listeTypesParametresEffectifs._addAssign_operation (var_cas_typeArgument, var_cas_parameterPassingMode) ;
          GGS_typeExpression  var_cas_e ;
          var_cas_e = GGS_typeVarInExpression::constructor_new (_inLexique, var_cas_nomCppArgument COMMA_HERE) ;
          var_cas_outExpressionList._addAssign_operation (var_cas_e) ;
          if ((var_cas_exclusiveVariables.reader_hasKey (_inLexique, var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2746)) COMMA_SOURCE_FILE_AT_LINE (2746))).isBuiltAndTrue ()) {
            var_cas_nomArgument.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this object is already named as input or output/input effectif argument of current instruction") COMMA_SOURCE_FILE_AT_LINE (2747)) ;
          }else{
            var_cas_exclusiveVariables._addAssign_operation (var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2749))) ;
          }
          } break ;
        default :
          syntaxRepeat_28 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_parameters_list_semantics_parser_2676_4_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_28 = true ;
    while (syntaxRepeat_28) {
      switch (select_repeat_semantics_parser_28 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          nt_expression_parse (_inLexique) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          switch (select_semantics_parser_29 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_28 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'semantic_instructions_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instructions_list_semantics_parser_2758_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  var_cas_ioVariablesMap.prologue_verifyVariableUsing (_inLexique COMMA_SOURCE_FILE_AT_LINE (2770)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inFileWrappers) ;
  var_cas_ioVariablesMap.epilogue_verifyVariableUsing (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2770)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_semantics_parser_2758_4_parse (galgas_scanner & _inLexique) {
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2792_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_call) COMMA_HERE) ;
  GGS_lstring  var_cas_calledPropertyName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_calledPropertyName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_propertyType ;
  if (var_cas_inCurrentTreewalkingRoutinePropertyMap._isBuilt ()) {
    var_cas_inCurrentTreewalkingRoutinePropertyMap (HERE)->method_searchKey (_inLexique, var_cas_calledPropertyName, var_cas_propertyType COMMA_SOURCE_FILE_AT_LINE (2809)) ;
  }
  GGS_lstring  var_cas_entityName ;
  { const GGS_AC_galgasType _var_106680 = var_cas_propertyType ; // CAST instruction
    if (_var_106680.getPtr () != NULL) {
      macroValidPointer (_var_106680.getPtr ()) ;
      if (dynamic_cast <cPtr_typeGalgas_singleReferenceEntity *> (_var_106680.getPtr ()) != NULL) {
        const GGS_typeGalgas_singleReferenceEntity var_cas_ref (_var_106680.getPtr ()) ;
        var_cas_entityName = var_cas_ref.reader_mEntityTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (2813)) ;
      }else if (dynamic_cast <cPtr_typeGalgas_multipleReferenceEntity *> (_var_106680.getPtr ()) != NULL) {
        const GGS_typeGalgas_multipleReferenceEntity var_cas_ref (_var_106680.getPtr ()) ;
        var_cas_entityName = var_cas_ref.reader_mEntityTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (2815)) ;
      }else{
        var_cas_calledPropertyName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this property should be a single or a multiple reference") COMMA_SOURCE_FILE_AT_LINE (2817)) ;
        var_cas_entityName._drop_operation () ;
      }
    }
  }
  GGS_L_EXsignature  var_cas_routineSignature ;
  if ((var_cas_inTreewalkingRoutineHeaderMap.reader_hasKey (_inLexique, var_cas_entityName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2821)) COMMA_SOURCE_FILE_AT_LINE (2821))).isBuiltAndTrue ()) {
    GGS_typeListeTypesEtNomsArgMethode  automatic_var_18 ;
    if (var_cas_inTreewalkingRoutineHeaderMap._isBuilt ()) {
      var_cas_inTreewalkingRoutineHeaderMap (HERE)->method_searchKey (_inLexique, var_cas_entityName, var_cas_routineSignature, automatic_var_18 COMMA_SOURCE_FILE_AT_LINE (2822)) ;
    }
  }else{
    var_cas_calledPropertyName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "there is no treewalking routine for the '%"))._operator_concat (var_cas_entityName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2825))))._operator_concat (GGS_string (true, "' metamodel class")) COMMA_SOURCE_FILE_AT_LINE (2827)) ;
    var_cas_routineSignature._drop_operation () ;
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_parameters_list_ (_inLexique, var_cas_routineSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_callInstruction::constructor_new (_inLexique, var_cas_calledPropertyName, var_cas_entityName, var_cas_propertyType, var_cas_expressionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2792_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_call) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_actual_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_2857_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_typeVarSource ;
  GGS_typeCplusPlusName  var_cas_sourceVarCppName ;
  GGS_lstring  var_cas_nomVarSource ;
  nt_read_access_ (_inLexique, var_cas_nomVarSource, var_cas_sourceVarCppName, var_cas_typeVarSource, var_cas_ioVariablesMap) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_typeVarSource.getPtr (), true, var_cas_nomVarSource COMMA_SOURCE_FILE_AT_LINE (2876)) ;
  GGS_lstring  var_cas_nomTypeSource ;
  var_cas_nomTypeSource = var_cas_classType.reader_mClassTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (2877)) ;
  GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits ;
  var_cas_tableMessagesAbstraits = var_cas_classType.reader_mMessagesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (2878)) ;
  GGS_typeInstruction  var_cas_instruction ;
  nt_extract_instruction_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_sourceVarCppName, var_cas_nomTypeSource, var_cas_tableMessagesAbstraits, var_cas_instruction, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inFileWrappers) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_2857_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
  nt_read_access_parse (_inLexique) ;
  nt_extract_instruction_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_extract_instruction_semantics_parser_2904_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  var_cas_tableMessagesAbstraits,
                                GGS_typeInstruction  &var_cas_outInstruction,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "simple extract instruction is obsolete: use cast expression instead") COMMA_SOURCE_FILE_AT_LINE (2919)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  GGS_lstring  var_cas_nomClasse ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomClasse) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomClasse, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (2927)) ;
  }
  GGS_AC_galgasType  var_cas_leType ;
  var_cas_leType = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_nomClasse COMMA_SOURCE_FILE_AT_LINE (2928)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (2928)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_leType.getPtr (), true, var_cas_nomClasse COMMA_SOURCE_FILE_AT_LINE (2929)) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  var_cas_listeAttributsSemantiques = var_cas_classType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (2930)) ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetres ;
  var_cas_tableDesClassesAncetres = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (2931)) ;
  if (((var_cas_tableDesClassesAncetres.reader_hasKey (_inLexique, var_cas_nomTypeSource.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2933)) COMMA_SOURCE_FILE_AT_LINE (2933)))._operator_not ()).isBuiltAndTrue ()) {
    var_cas_nomClasse.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This class does not inherit from '@"))._operator_concat (var_cas_nomTypeSource.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2934))))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (2934)) ;
  }
  GGS_L_assignedVariables  var_cas_listeAffectationParametresEffectifs ;
  GGS_typeCplusPlusNameList  var_cas_allVariablesList ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  nt_input_parameters_list_ (_inLexique, var_cas_listeAffectationParametresEffectifs, var_cas_allVariablesList, var_cas_listeAttributsSemantiques, var_cas_ioVariablesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  if (var_cas_errorExpressionType._isBuilt ()) {
    var_cas_errorExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (2960)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_lstring  var_cas_messageName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  if (var_cas_tableMessagesAbstraits._isBuilt ()) {
    var_cas_tableMessagesAbstraits (HERE)->method_searchKey (_inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (2964)) ;
  }
  var_cas_outInstruction = GGS_typeSimpleExtractInstruction::constructor_new (_inLexique, var_cas_inSourceVarCppName, var_cas_nomClasse, var_cas_listeAffectationParametresEffectifs, var_cas_errorExpression, var_cas_messageName COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_2904_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  nt_input_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'extract_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_extract_instruction_semantics_parser_2977_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  var_cas_inSourceVarCppName,
                                GGS_lstring  var_cas_nomTypeSource,
                                GGS_typeClassInheritedMessagesMap  /* var_cas_tableMessagesAbstraits */,
                                GGS_typeInstruction  &var_cas_outInstruction,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  GGS_typeStructuredExtractCasesList  var_cas_casesList ;
  var_cas_casesList = GGS_typeStructuredExtractCasesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "structured extract instruction is obsolete: use cast instruction instead") COMMA_SOURCE_FILE_AT_LINE (2994)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (2996)) ;
  { bool syntaxRepeat_30 = true ;
    while (syntaxRepeat_30) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (2998)) ;
        GGS_location  var_cas_indicatif1 ;
        var_cas_indicatif1 = GGS_location (_inLexique) ;
        GGS_lstring  var_cas_nomType1 ;
        _inLexique._assignFromAttribute_tokenString (var_cas_nomType1) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
          var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomType1, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3005)) ;
        }
        GGS_AC_galgasType  var_cas_definitionClasse1 ;
        var_cas_definitionClasse1 = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_nomType1 COMMA_SOURCE_FILE_AT_LINE (3006)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (3006)) ;
        GGS_typeGalgasClassType  var_cas_classType1 ;
        var_cas_classType1 = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_definitionClasse1.getPtr (), true, var_cas_nomType1 COMMA_SOURCE_FILE_AT_LINE (3008)) ;
        GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 ;
        var_cas_listeAttributs1 = var_cas_classType1.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (3009)) ;
        GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 ;
        var_cas_tableDesClassesAncetresType1 = var_cas_classType1.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (3010)) ;
        if (((var_cas_tableDesClassesAncetresType1.reader_hasKey (_inLexique, var_cas_nomTypeSource.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3012)) COMMA_SOURCE_FILE_AT_LINE (3012)))._operator_not ()).isBuiltAndTrue ()) {
          var_cas_nomType1.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This class does not inherit from '@"))._operator_concat (var_cas_nomTypeSource.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3013))))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (3013)) ;
        }
        GGS_bool var_cas_noUsedParameter ;
        nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_indicatif1, GGS_localConstantBuildStyleEnum::constructor_listStyle (_inLexique COMMA_HERE), var_cas_noUsedParameter) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_instructionsList ;
        var_cas_instructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inFileWrappers) ;
        var_cas_casesList._addAssign_operation (var_cas_nomType1, var_cas_indicatif1, var_cas_instructionsList, var_cas_noUsedParameter) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (2998)) ;
      switch (select_repeat_semantics_parser_30 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_30 = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3045)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_elseInstructionList ;
  var_cas_elseInstructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inFileWrappers) ;
  var_cas_outInstruction = GGS_typeStructuredExtractInstructionWithElse::constructor_new (_inLexique, var_cas_inSourceVarCppName, var_cas_casesList, var_cas_elseInstructionList COMMA_HERE) ;
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3045)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (2996)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_extract_instruction_semantics_parser_2977_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat_30 = true ;
    while (syntaxRepeat_30) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        nt_parse_effective_input_parameters_list_parse (_inLexique) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
        nt_semantic_instructions_list_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_30 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_30 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extract) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3075_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
  GGS_typeGalgasClassType  var_cas_sourceClassType ;
  var_cas_sourceClassType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_sourceExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3100)) ;
  GGS_lstring  var_cas_sourceExpressionTypeName ;
  var_cas_sourceExpressionTypeName = var_cas_sourceClassType.reader_mClassTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (3101)) ;
  GGS_string var_cas_sourceClassMessage ;
  var_cas_sourceClassMessage = var_cas_sourceClassType.reader_mClassMessage (_inLexique COMMA_SOURCE_FILE_AT_LINE (3102)) ;
  GGS_typeInstructionList  var_cas_elseBranchInstructionsList ;
  var_cas_elseBranchInstructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeStructuredCastBranchList  var_cas_branchList ;
  var_cas_branchList = GGS_typeStructuredCastBranchList::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3107)) ;
  { bool syntaxRepeat_31 = true ;
    while (syntaxRepeat_31) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3109)) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
        GGS_bool var_cas_checkForKindOfClass ;
        switch (select_semantics_parser_32 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E_3D) COMMA_HERE) ;
            var_cas_checkForKindOfClass = GGS_bool (true, true) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3D_3D) COMMA_HERE) ;
            var_cas_checkForKindOfClass = GGS_bool (true, false) ;
            } break ;
          default :
            break ;
        }
        GGS_lstring  var_cas_castedTypeName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_castedTypeName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        GGS_AC_semanticsEntity  var_cas_entite ;
        if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
          var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_castedTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3123)) ;
        }
        GGS_AC_galgasType  var_cas_typeDefinition ;
        var_cas_typeDefinition = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_castedTypeName COMMA_SOURCE_FILE_AT_LINE (3124)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (3124)) ;
        GGS_typeSuperClassesMap  var_cas_superClassMap ;
        var_cas_superClassMap = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_typeDefinition.getPtr (), true, var_cas_castedTypeName COMMA_SOURCE_FILE_AT_LINE (3127)).reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (3127)) ;
        GGS_string var_cas_sourceExpressionTypeNameString ;
        var_cas_sourceExpressionTypeNameString = var_cas_sourceExpressionTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3129)) ;
        if (((var_cas_checkForKindOfClass)._operator_not ()).isBuiltAndTrue ()) {
          if ((((var_cas_castedTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3131)))._operator_isNotEqual (var_cas_sourceExpressionTypeNameString))._operator_and ((var_cas_superClassMap.reader_hasKey (_inLexique, var_cas_sourceExpressionTypeNameString COMMA_SOURCE_FILE_AT_LINE (3131)))._operator_not ())).isBuiltAndTrue ()) {
            var_cas_castedTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This class is not '@"))._operator_concat (var_cas_sourceExpressionTypeNameString))._operator_concat (GGS_string (true, "' and does inherit from it")) COMMA_SOURCE_FILE_AT_LINE (3132)) ;
          }
        }else if (((var_cas_superClassMap.reader_hasKey (_inLexique, var_cas_sourceExpressionTypeNameString COMMA_SOURCE_FILE_AT_LINE (3134)))._operator_not ()).isBuiltAndTrue ()) {
          var_cas_castedTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This class does not inherit from '@"))._operator_concat (var_cas_sourceExpressionTypeNameString))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (3135)) ;
        }
        GGS_typeCplusPlusNameList  var_cas_localConstantCppNameList ;
        var_cas_localConstantCppNameList = GGS_typeCplusPlusNameList::constructor_emptyList (_inLexique COMMA_HERE) ;
        switch (select_semantics_parser_33 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            GGS_lstring  var_cas_localConstantName ;
            _inLexique._assignFromAttribute_tokenString (var_cas_localConstantName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_localConstantCppName ;
            var_cas_localConstantCppName = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_localConstantName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (3143)), var_cas_localConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3143)) COMMA_HERE) ;
            var_cas_localConstantCppNameList._addAssign_operation (var_cas_localConstantCppName) ;
            var_cas_ioVariablesMap.modifier_insertConstInArgument (_inLexique, var_cas_localConstantName, var_cas_typeDefinition, var_cas_localConstantCppName COMMA_SOURCE_FILE_AT_LINE (3145)) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
            GGS_lstring  var_cas_localConstantName ;
            _inLexique._assignFromAttribute_tokenString (var_cas_localConstantName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_localConstantCppName ;
            var_cas_localConstantCppName = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_localConstantName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (3150)), var_cas_localConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3150)) COMMA_HERE) ;
            var_cas_localConstantCppNameList._addAssign_operation (var_cas_localConstantCppName) ;
            var_cas_ioVariablesMap.modifier_insertUnusedConstInArgument (_inLexique, var_cas_localConstantName, var_cas_typeDefinition, var_cas_localConstantCppName COMMA_SOURCE_FILE_AT_LINE (3152)) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_instructionsList ;
        var_cas_instructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inFileWrappers) ;
        var_cas_branchList._addAssign_operation (var_cas_castedTypeName, var_cas_checkForKindOfClass, var_cas_localConstantCppNameList, var_cas_instructionsList) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3109)) ;
      switch (select_repeat_semantics_parser_31 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_31 = false ;
          break ;
      }
    }
  }
  GGS_AC_elseOrDefaultForCastInstruction  var_cas_elseOrDefault ;
  var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3174)) ;
  switch (select_semantics_parser_34 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_default) COMMA_HERE) ;
      if (((var_cas_sourceClassMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (3177)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "for using the 'default' construct, the static class of source expression (@"))._operator_concat (var_cas_sourceExpressionTypeName))._operator_concat (GGS_string (true, ") should define a class message")) COMMA_SOURCE_FILE_AT_LINE (3179)) ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
      GGS_typeExpression  var_cas_errorLocationExpression ;
      GGS_AC_galgasType  var_cas_errorLocationExpressionType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_errorLocationExpression, var_cas_errorLocationExpressionType) ;
      if (var_cas_errorLocationExpressionType._isBuilt ()) {
        var_cas_errorLocationExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (3193)) ;
      }
      var_cas_elseOrDefault = GGS_C_defaultForCastInstruction::constructor_new (_inLexique, var_cas_errorLocationExpression, GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      GGS_typeInstructionList  var_cas_elseBranchInstructionsList ;
      var_cas_elseBranchInstructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elseBranchInstructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inFileWrappers) ;
      var_cas_elseOrDefault = GGS_C_elseForCastInstruction::constructor_new (_inLexique, var_cas_elseBranchInstructionsList COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3174)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3107)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeStructuredCastInstruction::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_sourceExpression, var_cas_sourceExpressionTypeName, var_cas_branchList, var_cas_elseOrDefault COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3075_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat_31 = true ;
    while (syntaxRepeat_31) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
        switch (select_semantics_parser_32 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E_3D) COMMA_HERE) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3D_3D) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        switch (select_semantics_parser_33 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
        nt_semantic_instructions_list_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_31 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_31 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_34 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_default) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3235_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  GGS_AC_galgasType  var_cas_definitionType ;
  GGS_lstring  var_cas_typeName ;
  nt_type_parsing_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
  GGS_lstring  var_cas_targetVarName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_targetVarName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_nomCppVariable ;
  var_cas_nomCppVariable = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_targetVarName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (3259)), var_cas_targetVarName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3259)) COMMA_HERE) ;
  var_cas_ioVariablesMap.modifier_insertLocalVariable (_inLexique, var_cas_targetVarName, var_cas_definitionType, var_cas_nomCppVariable COMMA_SOURCE_FILE_AT_LINE (3260)) ;
  nt_optional_assignment_ (_inLexique, var_cas_typeName, var_cas_targetVarName, var_cas_nomCppVariable, var_cas_definitionType, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioComponentSemanticsEntitiesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3235_4_parse (galgas_scanner & _inLexique) {
  nt_type_parsing_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_optional_assignment_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3282_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_M_filewrappers  /* var_cas_inFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
  { bool syntaxRepeat_35 = true ;
    while (syntaxRepeat_35) {
        GGS_lstring  var_cas_galgasVariableName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_galgasVariableName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        GGS_typeCplusPlusName  var_cas_nomCppVar ;
        GGS_AC_galgasType  automatic_var_19 ;
        var_cas_ioVariablesMap.modifier_searchForReadOnlyAccess (_inLexique, var_cas_galgasVariableName, automatic_var_19, var_cas_nomCppVar COMMA_SOURCE_FILE_AT_LINE (3299)) ;
        GGS_typeInstruction  var_cas_instruction ;
        var_cas_instruction = GGS_typeLogInstruction::constructor_new (_inLexique, var_cas_galgasVariableName, var_cas_nomCppVar COMMA_HERE) ;
        var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
      switch (select_repeat_semantics_parser_35 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_35 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3282_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
  { bool syntaxRepeat_35 = true ;
    while (syntaxRepeat_35) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_35 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_35 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3314_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_M_filewrappers  /* var_cas_inFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_drop) COMMA_HERE) ;
  { bool syntaxRepeat_36 = true ;
    while (syntaxRepeat_36) {
        GGS_lstring  var_cas_nom ;
        _inLexique._assignFromAttribute_tokenString (var_cas_nom) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        GGS_typeCplusPlusName  var_cas_nomCppVar ;
        GGS_AC_galgasType  automatic_var_20 ;
        var_cas_ioVariablesMap.modifier_searchForDestructiveReadAccess (_inLexique, var_cas_nom, automatic_var_20, var_cas_nomCppVar COMMA_SOURCE_FILE_AT_LINE (3331)) ;
        GGS_typeInstruction  var_cas_instruction ;
        var_cas_instruction = GGS_typeDropInstruction::constructor_new (_inLexique, var_cas_nomCppVar COMMA_HERE) ;
        var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
      switch (select_repeat_semantics_parser_36 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_36 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3314_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_drop) COMMA_HERE) ;
  { bool syntaxRepeat_36 = true ;
    while (syntaxRepeat_36) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_36 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_36 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'instruction_beginning_with_identifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_3348_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                GGS_lstring  var_cas_nomVarDest,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  GGS_L_EXsignature  var_cas_signatureRoutine ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_nomVarDest, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (3361)) ;
  }
  GGS_bool var_cas_isExternActionCall ;
  { const GGS_AC_semanticsEntity _var_129436 = var_cas_entite ; // CAST instruction
    if (_var_129436.getPtr () != NULL) {
      macroValidPointer (_var_129436.getPtr ()) ;
      if (dynamic_cast <cPtr_typeEntiteRoutine *> (_var_129436.getPtr ()) != NULL) {
        const GGS_typeEntiteRoutine var_cas_r (_var_129436.getPtr ()) ;
        var_cas_signatureRoutine = var_cas_r.reader_aListeArgumentsFormels (_inLexique COMMA_SOURCE_FILE_AT_LINE (3365)) ;
        var_cas_isExternActionCall = GGS_bool (true, false) ;
      }else if (dynamic_cast <cPtr_typeEntiteActionExterne *> (_var_129436.getPtr ()) != NULL) {
        const GGS_typeEntiteActionExterne var_cas_ae (_var_129436.getPtr ()) ;
        var_cas_signatureRoutine = var_cas_ae.reader_aSignature (_inLexique COMMA_SOURCE_FILE_AT_LINE (3368)) ;
        var_cas_isExternActionCall = GGS_bool (true, true) ;
      }else{
        var_cas_nomVarDest.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "'"))._operator_concat (var_cas_nomVarDest.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3372))))._operator_concat (GGS_string (true, "' should name a routine or an extern extern routine")) COMMA_SOURCE_FILE_AT_LINE (3374)) ;
        var_cas_signatureRoutine._drop_operation () ;
        var_cas_isExternActionCall._drop_operation () ;
      }
    }
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  nt_actual_parameters_list_ (_inLexique, var_cas_signatureRoutine, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeRoutineCallInstruction::constructor_new (_inLexique, var_cas_nomVarDest, var_cas_expressionsList, var_cas_signatureRoutine, var_cas_isExternActionCall COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_instruction_beginning_with_identifier_semantics_parser_3348_4_parse (galgas_scanner & _inLexique) {
  nt_actual_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3410_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  switch (select_semantics_parser_37 (_inLexique)) {
    case 1 : {
      GGS_lstring  var_cas_readObjectName ;
      GGS_AC_galgasType  var_cas_variableType ;
      GGS_typeCplusPlusName  var_cas_cppVariableName ;
      nt_read_access_ (_inLexique, var_cas_readObjectName, var_cas_cppVariableName, var_cas_variableType, var_cas_ioVariablesMap) ;
      GGS_lstring  var_cas_methodName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      if (var_cas_variableType._isBuilt ()) {
        var_cas_variableType (HERE)->method_handleMethodInstructionCall (_inLexique, var_cas_readObjectName, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (3434)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeMethodCallInstruction::constructor_new (_inLexique, var_cas_cppVariableName, var_cas_methodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
      GGS_lstring  var_cas_modifiedObjectName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_modifiedObjectName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_variableType ;
      GGS_typeCplusPlusName  var_cas_cppVariableName ;
      var_cas_ioVariablesMap.modifier_searchForReadWriteAccess (_inLexique, var_cas_modifiedObjectName, var_cas_variableType, var_cas_cppVariableName COMMA_SOURCE_FILE_AT_LINE (3454)) ;
      GGS_lstringlist  var_cas_structAttributeList ;
      var_cas_structAttributeList = GGS_lstringlist::constructor_emptyList (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_38 = true ;
        while (syntaxRepeat_38) {
          switch (select_repeat_semantics_parser_38 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
              GGS_lstring  var_cas_structAttributeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_structAttributeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_structAttributeList._addAssign_operation (var_cas_structAttributeName) ;
              GGS_typeGalgasStructType  var_cas_structType ;
              var_cas_structType = GGS_typeGalgasStructType::_castFrom (_inLexique, var_cas_variableType.getPtr (), true, var_cas_structAttributeName COMMA_SOURCE_FILE_AT_LINE (3463)) ;
              GGS_bool var_cas_found ;
              var_cas_found = GGS_bool (true, false) ;
              GGS_typeListeAttributsSemantiques::cEnumerator enumerator_133074 (var_cas_structType.reader_mAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (3465)), true) ;
              const GGS_typeListeAttributsSemantiques::cElement * operand_133074 = NULL ;
              while (((operand_133074 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_133074.nextObject ()))
                  && ((var_cas_found)._operator_not ().isBuiltAndTrue ())) {
                macroValidPointer (operand_133074) ;
                var_cas_found = (operand_133074->aNomAttribut.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3466)))._operator_isEqual (var_cas_structAttributeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3466))) ;
                var_cas_variableType = operand_133074->mAttributType ;
              }
              enumerator_133074.reset () ;
              if (((var_cas_found)._operator_not ()).isBuiltAndTrue ()) {
                var_cas_structAttributeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '@"))._operator_concat (var_cas_structType.reader_mStructTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (3470))))._operator_concat (GGS_string (true, "' does not define a '")))._operator_concat (var_cas_structAttributeName))._operator_concat (GGS_string (true, "' attribute")) COMMA_SOURCE_FILE_AT_LINE (3470)) ;
              }
              } break ;
            default :
              syntaxRepeat_38 = false ;
              break ;
          }
        }
      }
      GGS_lstring  var_cas_modifierName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_modifierName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_methodSignature ;
      if (var_cas_variableType._isBuilt ()) {
        var_cas_variableType (HERE)->method_handleModifierCall (_inLexique, var_cas_modifierName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (3477)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_methodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeModifierCallInstruction::constructor_new (_inLexique, var_cas_cppVariableName, var_cas_structAttributeList, var_cas_modifierName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    case 3 : {
      GGS_lstring  var_cas_typeName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_lstring  var_cas_typeMethodName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_typeMethodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_typeMethodSignature ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
        var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_typeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (3499)) ;
      }
      GGS_AC_galgasType  var_cas_type ;
      var_cas_type = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_theEntity.getPtr (), true, var_cas_typeName COMMA_SOURCE_FILE_AT_LINE (3500)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (3500)) ;
      if (var_cas_type._isBuilt ()) {
        var_cas_type (HERE)->method_handleClassMethodCall (_inLexique, var_cas_typeMethodName, var_cas_typeMethodSignature COMMA_SOURCE_FILE_AT_LINE (3501)) ;
      }
      GGS_typeExpressionList  var_cas_expressionsList ;
      nt_actual_parameters_list_ (_inLexique, var_cas_typeMethodSignature, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioInstructionList) ;
      var_cas_instruction = GGS_typeCallOfTypeMethodInstruction::constructor_new (_inLexique, var_cas_typeName, var_cas_typeMethodName, var_cas_expressionsList COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3410_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  switch (select_semantics_parser_37 (_inLexique)) {
    case 1 : {
      nt_read_access_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      { bool syntaxRepeat_38 = true ;
        while (syntaxRepeat_38) {
          switch (select_repeat_semantics_parser_38 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_38 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      nt_actual_parameters_list_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3532_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inMetamodelPropertyMap */,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  GGS_lstring  var_cas_nomVarDest ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomVarDest) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_instruction_beginning_with_identifier_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_nomVarDest, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inOptionsComponentsMapForUse, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inMetamodelEntityMap, var_cas_inFileWrappers) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3532_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_instruction_beginning_with_identifier_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3565_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  nt_warning_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_ioInstructionList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3565_4_parse (galgas_scanner & _inLexique) {
  nt_warning_instruction_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'warning_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_warning_instruction_semantics_parser_3588_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_filewrappers  var_cas_inFileWrappers,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorExpression ;
  GGS_AC_galgasType  var_cas_errorExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_errorExpression, var_cas_errorExpressionType) ;
  if (var_cas_errorExpressionType._isBuilt ()) {
    var_cas_errorExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (3607)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeExpression  var_cas_warningMessageExpression ;
  GGS_AC_galgasType  var_cas_warningMessageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_warningMessageExpression, var_cas_warningMessageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs ;
  var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_warningMessageExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3621)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeWarningInstruction::constructor_new (_inLexique, var_cas_errorExpression, var_cas_warningMessageExpression, GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_warning_instruction_semantics_parser_3588_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3635_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  nt_error_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_ioInstructionList) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3635_4_parse (galgas_scanner & _inLexique) {
  nt_error_instruction_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'error_instruction'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_error_instruction_semantics_parser_3658_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_filewrappers  var_cas_inFileWrappers,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorLocationExpression ;
  GGS_AC_galgasType  var_cas_errorLocationExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_errorLocationExpression, var_cas_errorLocationExpressionType) ;
  if (var_cas_errorLocationExpressionType._isBuilt ()) {
    var_cas_errorLocationExpressionType (HERE)->method_checkAbilityToBeSilentlyConvertedToLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (3677)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeExpression  var_cas_errorMessageExpression ;
  GGS_AC_galgasType  var_cas_errorMessageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_errorMessageExpression, var_cas_errorMessageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs ;
  var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_errorMessageExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3691)) ;
  GGS_varToDropList  var_cas_variablesToDrop ;
  var_cas_variablesToDrop = GGS_varToDropList::constructor_emptyList (_inLexique COMMA_HERE) ;
  switch (select_semantics_parser_39 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      { bool syntaxRepeat_40 = true ;
        while (syntaxRepeat_40) {
            GGS_lstring  var_cas_nomVariable ;
            _inLexique._assignFromAttribute_tokenString (var_cas_nomVariable) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            GGS_typeCplusPlusName  var_cas_varCppName ;
            GGS_AC_galgasType  automatic_var_21 ;
            var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_nomVariable, automatic_var_21, var_cas_varCppName COMMA_SOURCE_FILE_AT_LINE (3701)) ;
            var_cas_variablesToDrop._addAssign_operation (var_cas_varCppName) ;
          switch (select_repeat_semantics_parser_40 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_40 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeErrorInstruction::constructor_new (_inLexique, var_cas_errorLocationExpression, var_cas_errorMessageExpression, GGS_location (_inLexique), var_cas_variablesToDrop COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_error_instruction_semantics_parser_3658_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  switch (select_semantics_parser_39 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      { bool syntaxRepeat_40 = true ;
        while (syntaxRepeat_40) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_repeat_semantics_parser_40 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_40 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3724_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  GGS_location  var_cas_instructionLocation ;
  var_cas_instructionLocation = GGS_location (_inLexique) ;
  GGS_typeExpression  var_cas_messageExpression ;
  GGS_AC_galgasType  var_cas_messageExpressionType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_messageExpression, var_cas_messageExpressionType) ;
  GGS_typeGalgas_string  var_cas_gs ;
  var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_messageExpressionType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3750)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeMessageInstruction::constructor_new (_inLexique, var_cas_messageExpression, var_cas_instructionLocation COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3724_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3763_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  GGS_L_expression_instructionsList_list  var_cas_listeBranchesTest ;
  var_cas_listeBranchesTest = GGS_L_expression_instructionsList_list::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3777)) ;
  { bool syntaxRepeat_41 = true ;
    while (syntaxRepeat_41) {
        var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3779)) ;
        GGS_typeExpression  var_cas_testBranche ;
        GGS_AC_galgasType  var_cas_resultType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_testBranche, var_cas_resultType) ;
        GGS_typeGalgas_bool  var_cas_b ;
        var_cas_b = GGS_typeGalgas_bool::_castFrom (_inLexique, var_cas_resultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3790)) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_then) COMMA_HERE) ;
        GGS_typeInstructionList  var_cas_listeInstructionsBrancheTest ;
        var_cas_listeInstructionsBrancheTest = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheTest, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inFileWrappers) ;
        var_cas_listeBranchesTest._addAssign_operation (var_cas_testBranche, var_cas_listeInstructionsBrancheTest) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3779)) ;
      switch (select_repeat_semantics_parser_41 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_elsif) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_41 = false ;
          break ;
      }
    }
  }
  GGS_typeInstructionList  var_cas_listeInstructionsBrancheAutre ;
  var_cas_listeInstructionsBrancheAutre = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3811)) ;
  switch (select_semantics_parser_42 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_listeInstructionsBrancheAutre, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inFileWrappers) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3811)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3777)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_if_instruction::constructor_new (_inLexique, var_cas_listeBranchesTest, var_cas_listeInstructionsBrancheAutre COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3763_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  { bool syntaxRepeat_41 = true ;
    while (syntaxRepeat_41) {
        nt_expression_parse (_inLexique) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_then) COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_41 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_elsif) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_41 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_42 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3846_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  GGS_typeExpression  var_cas_switchExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_switchExpression, var_cas_resultType) ;
  GGS_typeGalgas_enum  var_cas_e ;
  var_cas_e = GGS_typeGalgas_enum::_castFrom (_inLexique, var_cas_resultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3871)) ;
  GGS_lstring  var_cas_enumTypeName ;
  var_cas_enumTypeName = var_cas_e.reader_mEnumTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (3872)) ;
  GGS_enumConstantMap  var_cas_enumConstantesMap ;
  var_cas_enumConstantesMap = var_cas_e.reader_mEnumConstantesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (3873)) ;
  GGS_stringset  var_cas_allBranchConstantSet ;
  var_cas_allBranchConstantSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_L_switchBranchlist  var_cas_switchBranchlist ;
  var_cas_switchBranchlist = GGS_L_switchBranchlist::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3877)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat_43 = true ;
    while (syntaxRepeat_43) {
        GGS_stringset  var_cas_branchConstantSet ;
        var_cas_branchConstantSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
        { bool syntaxRepeat_44 = true ;
          while (syntaxRepeat_44) {
              GGS_lstring  var_cas_enumConstantName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_enumConstantName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_branchConstantSet._addAssign_operation (var_cas_enumConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3885))) ;
              GGS_bool automatic_var_22 ;
              if (var_cas_enumConstantesMap._isBuilt ()) {
                var_cas_enumConstantesMap (HERE)->method_searchKey (_inLexique, var_cas_enumConstantName, automatic_var_22 COMMA_SOURCE_FILE_AT_LINE (3886)) ;
              }
              if ((var_cas_allBranchConstantSet.reader_hasKey (_inLexique, var_cas_enumConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (3887)) COMMA_SOURCE_FILE_AT_LINE (3887))).isBuiltAndTrue ()) {
                var_cas_enumConstantName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this constant is already used in current switch instruction") COMMA_SOURCE_FILE_AT_LINE (3888)) ;
              }
            switch (select_repeat_semantics_parser_44 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_44 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
        var_cas_allBranchConstantSet = (var_cas_allBranchConstantSet)._operator_or (var_cas_branchConstantSet) ;
        var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3895)) ;
        GGS_typeInstructionList  var_cas_branchInstructionList ;
        var_cas_branchInstructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_branchInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inFileWrappers) ;
        var_cas_switchBranchlist._addAssign_operation (var_cas_branchConstantSet, var_cas_branchInstructionList) ;
        var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3895)) ;
      switch (select_repeat_semantics_parser_43 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_43 = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (3877)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  GGS_stringset  var_cas_missingConstants ;
  var_cas_missingConstants = var_cas_enumConstantesMap.reader_allKeys (_inLexique COMMA_SOURCE_FILE_AT_LINE (3917))._substract_operation (_inLexique, var_cas_allBranchConstantSet COMMA_SOURCE_FILE_AT_LINE (3917)) ;
  GGS_stringset::cEnumerator enumerator_149829 (var_cas_missingConstants, true) ;
  const GGS_stringset::cElement * operand_149829 = NULL ;
  while (((operand_149829 = (GGS_stringset::cElement *) enumerator_149829.nextObject ()))) {
    macroValidPointer (operand_149829) ;
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (operand_149829->mKey))._operator_concat (GGS_string (true, "' is not used in switch instruction")) COMMA_SOURCE_FILE_AT_LINE (3919)) ;
  }
  enumerator_149829.reset () ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_switch_instruction::constructor_new (_inLexique, var_cas_switchExpression, var_cas_enumTypeName, var_cas_switchBranchlist COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3846_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat_43 = true ;
    while (syntaxRepeat_43) {
        { bool syntaxRepeat_44 = true ;
          while (syntaxRepeat_44) {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_repeat_semantics_parser_44 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_44 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
        nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_43 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_43 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_3935_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  GGS_typeExpression  var_cas_variantExpression ;
  GGS_AC_galgasType  var_cas_variantResultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_variantExpression, var_cas_variantResultType) ;
  GGS_typeGalgas_uint  var_cas_ui ;
  var_cas_ui = GGS_typeGalgas_uint::_castFrom (_inLexique, var_cas_variantResultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3959)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList1 ;
  var_cas_instructionList1 = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (3963)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3964)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList1, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inFileWrappers) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3964)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (3963)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
  GGS_typeExpression  var_cas_conditionalExpression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_conditionalExpression, var_cas_resultType) ;
  GGS_typeGalgas_bool  var_cas_b ;
  var_cas_b = GGS_typeGalgas_bool::_castFrom (_inLexique, var_cas_resultType.getPtr (), true, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3991)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList2 ;
  var_cas_instructionList2 = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (3995)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (3996)) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList2, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inFileWrappers) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (3996)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (3995)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_while_instruction::constructor_new (_inLexique, var_cas_variantExpression, var_cas_instructionList1, var_cas_conditionalExpression, var_cas_instructionList2, GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_3935_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_4031_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
  GGS_lstring  var_cas_grammarName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_grammarName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_altName ;
  switch (select_semantics_parser_45 (_inLexique)) {
    case 1 : {
      var_cas_altName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_label) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_altName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_bool var_cas_sourceIsFile ;
  GGS_typeCplusPlusName  var_cas_nomCppSource ;
  switch (select_semantics_parser_46 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
      var_cas_sourceIsFile = GGS_bool (true, true) ;
      GGS_lstring  var_cas_nomFichierSource ;
      GGS_AC_galgasType  var_cas_typeNomFichierSource ;
      nt_read_access_ (_inLexique, var_cas_nomFichierSource, var_cas_nomCppSource, var_cas_typeNomFichierSource, var_cas_ioVariablesMap) ;
      GGS_typeGalgas_lstring  var_cas_gs ;
      var_cas_gs = GGS_typeGalgas_lstring::_castFrom (_inLexique, var_cas_typeNomFichierSource.getPtr (), true, var_cas_nomFichierSource COMMA_SOURCE_FILE_AT_LINE (4064)) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
      var_cas_sourceIsFile = GGS_bool (true, false) ;
      GGS_lstring  var_cas_nomFichierSource ;
      GGS_AC_galgasType  var_cas_typeNomFichierSource ;
      nt_read_access_ (_inLexique, var_cas_nomFichierSource, var_cas_nomCppSource, var_cas_typeNomFichierSource, var_cas_ioVariablesMap) ;
      GGS_typeGalgas_string  var_cas_gs ;
      var_cas_gs = GGS_typeGalgas_string::_castFrom (_inLexique, var_cas_typeNomFichierSource.getPtr (), true, var_cas_nomFichierSource COMMA_SOURCE_FILE_AT_LINE (4071)) ;
      } break ;
    default :
      break ;
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioComponentSemanticsEntitiesMap) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_grammarName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (4086)) ;
  }
  GGS_C_grammarForSemantics  var_cas_gfs ;
  var_cas_gfs = GGS_C_grammarForSemantics::_castFrom (_inLexique, var_cas_e.getPtr (), true, var_cas_grammarName COMMA_SOURCE_FILE_AT_LINE (4087)) ;
  GGS_M_nonterminalSymbolAlts  var_cas_startSymbolAltMap ;
  var_cas_startSymbolAltMap = var_cas_gfs.reader_mGrammarAltMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4088)) ;
  GGS_lstring  var_cas_lexiqueClassName ;
  var_cas_lexiqueClassName = var_cas_gfs.reader_mLexiqueClassName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4089)) ;
  GGS_L_EXsignature  var_cas_startSymbolSignature ;
  GGS_lstring  var_cas_returnedEntity ;
  if (var_cas_startSymbolAltMap._isBuilt ()) {
    var_cas_startSymbolAltMap (HERE)->method_searchKey (_inLexique, var_cas_altName, var_cas_startSymbolSignature, var_cas_returnedEntity COMMA_SOURCE_FILE_AT_LINE (4092)) ;
  }
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique,  var_cas_startSymbolSignature,  var_cas_listeTypesParametresEffectifs,  GGS_location (_inLexique),  var_cas_ioInstructionList,  var_cas_expressionsList COMMA_SOURCE_FILE_AT_LINE (4092)) ;
  GGS_lstring  var_cas_metamodelClassVariableName ;
  var_cas_metamodelClassVariableName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
  switch (select_semantics_parser_47 (_inLexique)) {
    case 1 : {
      if (((var_cas_returnedEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4104)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "this grammar returns an instance of '@"))._operator_concat (var_cas_returnedEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4105))))._operator_concat (GGS_string (true, "' metamodel entity")) COMMA_SOURCE_FILE_AT_LINE (4105)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_metamodelClassVariableName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_type ;
      GGS_typeCplusPlusName  automatic_var_23 ;
      var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_metamodelClassVariableName, var_cas_type, automatic_var_23 COMMA_SOURCE_FILE_AT_LINE (4111)) ;
      GGS_lstring  var_cas_variableEntityName ;
      var_cas_variableEntityName = GGS_typeGalgas_singleReferenceEntity::_castFrom (_inLexique, var_cas_type.getPtr (), true, var_cas_metamodelClassVariableName COMMA_SOURCE_FILE_AT_LINE (4113)).reader_mEntityTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4113)) ;
      if (((var_cas_returnedEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4114)))._operator_isNotEqual (var_cas_variableEntityName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4114)))).isBuiltAndTrue ()) {
        var_cas_metamodelClassVariableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "this variable has the '@"))._operator_concat (var_cas_variableEntityName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4115))))._operator_concat (GGS_string (true, "', but a variable of '@")))._operator_concat (var_cas_returnedEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4116))))._operator_concat (GGS_string (true, "' type is expected")) COMMA_SOURCE_FILE_AT_LINE (4116)) ;
      }
      } break ;
    default :
      break ;
  }
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_grammarInstruction::constructor_new (_inLexique, var_cas_sourceIsFile, var_cas_nomCppSource, var_cas_grammarName, var_cas_expressionsList, var_cas_altName, var_cas_metamodelClassVariableName, var_cas_lexiqueClassName COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4031_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_45 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_label) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  switch (select_semantics_parser_46 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
      nt_read_access_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
      nt_read_access_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  nt_parse_parameters_list_parse (_inLexique) ;
  switch (select_semantics_parser_47 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_4140_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  /* var_cas_inTreewalkingRoutineHeaderMap */,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  /* var_cas_inCurrentTreewalkingRoutinePropertyMap */,
                                const GGS_entityToImplementMap  /* var_cas_inMetamodelEntityMap */,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
  GGS_lstring  var_cas_treewalkingComponentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_treewalkingComponentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_string var_cas_rootEntityName ;
  GGS_L_EXsignature  var_cas_treewalkingRoutineSignature ;
  if (var_cas_inTreewalkingComponentMap._isBuilt ()) {
    var_cas_inTreewalkingComponentMap (HERE)->method_searchKey (_inLexique, var_cas_treewalkingComponentName, var_cas_rootEntityName, var_cas_treewalkingRoutineSignature COMMA_SOURCE_FILE_AT_LINE (4159)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
  GGS_lstring  var_cas_modelVariableName ;
  GGS_typeCplusPlusName  var_cas_cppNameForModelVariable ;
  GGS_AC_galgasType  var_cas_modelVariableType ;
  nt_read_access_ (_inLexique, var_cas_modelVariableName, var_cas_cppNameForModelVariable, var_cas_modelVariableType, var_cas_ioVariablesMap) ;
  GGS_lstring  var_cas_variableEntity ;
  var_cas_variableEntity = GGS_typeGalgas_singleReferenceEntity::_castFrom (_inLexique, var_cas_modelVariableType.getPtr (), true, var_cas_modelVariableName COMMA_SOURCE_FILE_AT_LINE (4177)).reader_mEntityTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4177)) ;
  if (((var_cas_variableEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4178)))._operator_isNotEqual (var_cas_rootEntityName)).isBuiltAndTrue ()) {
    var_cas_modelVariableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "the '"))._operator_concat (var_cas_modelVariableName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4179))))._operator_concat (GGS_string (true, "' variable is an instance of '@")))._operator_concat (var_cas_variableEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4180))))._operator_concat (GGS_string (true, "', but the '")))._operator_concat (var_cas_treewalkingComponentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4181))))._operator_concat (GGS_string (true, "' component requires an instance of '@")))._operator_concat (var_cas_rootEntityName))._operator_concat (GGS_string (true, "' type")) COMMA_SOURCE_FILE_AT_LINE (4182)) ;
  }
  GGS_typeExpressionList  var_cas_expressionsList ;
  GGS_L_actualParametersSignature  var_cas_listeTypesParametresEffectifs ;
  nt_parse_parameters_list_ (_inLexique, var_cas_listeTypesParametresEffectifs, var_cas_expressionsList, var_cas_ioVariablesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioComponentSemanticsEntitiesMap) ;
  ::routine_verifierCompatibiliteArgEffectifsSignature (_inLexique,  var_cas_treewalkingRoutineSignature,  var_cas_listeTypesParametresEffectifs,  GGS_location (_inLexique),  var_cas_ioInstructionList,  var_cas_expressionsList COMMA_SOURCE_FILE_AT_LINE (4194)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_treewalkingInstruction::constructor_new (_inLexique, var_cas_treewalkingComponentName, var_cas_cppNameForModelVariable, var_cas_expressionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4140_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_treewalking) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
  nt_read_access_parse (_inLexique) ;
  nt_parse_parameters_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_4219_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_ioVariablesMap.prologue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (4233)) ;
  var_cas_ioVariablesMap.prologue_repeatPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4234)) ;
  GGS_foreachEnumerationList  var_cas_foreachEnumerationList ;
  var_cas_foreachEnumerationList = GGS_foreachEnumerationList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_48 = true ;
    while (syntaxRepeat_48) {
        GGS_location  var_cas_magicNumber ;
        var_cas_magicNumber = GGS_location (_inLexique) ;
        GGS_bool var_cas_ascending ;
        switch (select_semantics_parser_49 (_inLexique)) {
          case 1 : {
            var_cas_ascending = GGS_bool (true, true) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
            var_cas_ascending = GGS_bool (true, true) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
            var_cas_ascending = GGS_bool (true, false) ;
            } break ;
          default :
            break ;
        }
        GGS_typeExpression  var_cas_sourceExpression ;
        GGS_AC_galgasType  var_cas_sourceExpressionType ;
        nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceExpressionType) ;
        GGS_typeListeAttributsSemantiques  var_cas_formalEnumerationList ;
        GGS_localConstantBuildStyleEnum var_cas_localConstantBuildStyleEnum ;
        if (var_cas_sourceExpressionType._isBuilt ()) {
          var_cas_sourceExpressionType (HERE)->method_acceptForeachInstruction (_inLexique, var_cas_magicNumber, var_cas_formalEnumerationList, var_cas_localConstantBuildStyleEnum COMMA_SOURCE_FILE_AT_LINE (4264)) ;
        }
        GGS_string var_cas_typeName ;
        if (var_cas_sourceExpressionType._isBuilt ()) {
          var_cas_sourceExpressionType (HERE)->method_getTypeName (_inLexique, var_cas_typeName COMMA_SOURCE_FILE_AT_LINE (4271)) ;
        }
        GGS_bool automatic_var_24 ;
        nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_formalEnumerationList, var_cas_magicNumber, var_cas_localConstantBuildStyleEnum, automatic_var_24) ;
        var_cas_foreachEnumerationList._addAssign_operation (var_cas_sourceExpression, var_cas_magicNumber, var_cas_typeName, var_cas_ascending) ;
      switch (select_repeat_semantics_parser_48 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_48 = false ;
          break ;
      }
    }
  }
  GGS_typeExpression  var_cas_whileExpression ;
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      var_cas_whileExpression = GGS_typeTrueBool::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_resultType ;
      nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_whileExpression, var_cas_resultType) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionList ;
  var_cas_instructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inFileWrappers) ;
  var_cas_ioVariablesMap.epilogue_repeatPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4234)) ;
  var_cas_ioVariablesMap.epilogue_repeatBlock (_inLexique COMMA_SOURCE_FILE_AT_LINE (4233)) ;
  var_cas_instruction = GGS_typeForeachInstruction::constructor_new (_inLexique, var_cas_foreachEnumerationList, var_cas_whileExpression, var_cas_instructionList COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4219_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  { bool syntaxRepeat_48 = true ;
    while (syntaxRepeat_48) {
        switch (select_semantics_parser_49 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
        nt_expression_parse (_inLexique) ;
        nt_parse_effective_input_parameters_list_parse (_inLexique) ;
      switch (select_repeat_semantics_parser_48 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_48 = false ;
          break ;
      }
    }
  }
  switch (select_semantics_parser_50 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
      nt_expression_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_semantic_instructions_list_no_verif_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'parse_match_operand'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_operand_semantics_parser_4335_4_ (galgas_scanner & _inLexique,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeCplusPlusName  &var_cas_outCppName,
                                GGS_lstring  &var_cas_outBaseTypeName,
                                GGS_location  &var_cas_outVarLocation,
                                GGS_bool &var_cas_outIsEnumeration,
                                GGS_enumConstantMap  &var_cas_outEnumMessageMap) {
  GGS_lstring  var_cas_variableName ;
  GGS_AC_galgasType  var_cas_type ;
  nt_read_access_ (_inLexique, var_cas_variableName, var_cas_outCppName, var_cas_type, var_cas_ioVariablesMap) ;
  var_cas_outVarLocation = GGS_location (_inLexique) ;
  { const GGS_AC_galgasType _var_165538 = var_cas_type ; // CAST instruction
    if (_var_165538.getPtr () != NULL) {
      macroValidPointer (_var_165538.getPtr ()) ;
      if (dynamic_cast <cPtr_typeGalgasClassType *> (_var_165538.getPtr ()) != NULL) {
        const GGS_typeGalgasClassType var_cas_t (_var_165538.getPtr ()) ;
        var_cas_outBaseTypeName = var_cas_t.reader_mClassTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4354)) ;
        var_cas_outIsEnumeration = GGS_bool (true, false) ;
        var_cas_outEnumMessageMap = GGS_enumConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      }else if (dynamic_cast <cPtr_typeGalgas_enum *> (_var_165538.getPtr ()) != NULL) {
        const GGS_typeGalgas_enum var_cas_e (_var_165538.getPtr ()) ;
        var_cas_outBaseTypeName = var_cas_e.reader_mEnumTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (4358)) ;
        var_cas_outIsEnumeration = GGS_bool (true, true) ;
        var_cas_outEnumMessageMap = var_cas_e.reader_mEnumConstantesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4360)) ;
      }else{
        GGS_string var_cas_actualTypeName ;
        if (var_cas_type._isBuilt ()) {
          var_cas_type (HERE)->method_getTypeName (_inLexique, var_cas_actualTypeName COMMA_SOURCE_FILE_AT_LINE (4363)) ;
        }
        var_cas_variableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the type of this variable is '@"))._operator_concat (var_cas_actualTypeName))._operator_concat (GGS_string (true, "' ; I was expected an enumeration type or an abstract type")) COMMA_SOURCE_FILE_AT_LINE (4366)) ;
        var_cas_outBaseTypeName._drop_operation () ;
        var_cas_outIsEnumeration._drop_operation () ;
        var_cas_outEnumMessageMap._drop_operation () ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_operand_semantics_parser_4335_4_parse (galgas_scanner & _inLexique) {
  nt_read_access_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_case_semantics_parser_4373_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  var_cas_inVarLocation,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  /* var_cas_inEnumMessageMap */,
                                GGS_lstring  &var_cas_outTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
    var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (4386)) ;
  }
  GGS_AC_galgasType  var_cas_definitionClasse1 ;
  var_cas_definitionClasse1 = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (4387)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (4387)) ;
  GGS_typeGalgasClassType  var_cas_classType ;
  var_cas_classType = GGS_typeGalgasClassType::_castFrom (_inLexique, var_cas_definitionClasse1.getPtr (), true, var_cas_outTypeName COMMA_SOURCE_FILE_AT_LINE (4389)) ;
  GGS_typeSuperClassesMap  var_cas_tableDesClassesAncetresType1 ;
  var_cas_tableDesClassesAncetresType1 = var_cas_classType.reader_mAncestorClassesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4390)) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributs1 ;
  var_cas_listeAttributs1 = var_cas_classType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (4391)) ;
  GGS_bool var_cas_isAbstract ;
  var_cas_isAbstract = var_cas_classType.reader_mClassIsAbstract (_inLexique COMMA_SOURCE_FILE_AT_LINE (4392)) ;
  if ((var_cas_isAbstract).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "an abstract class is not allowed here") COMMA_SOURCE_FILE_AT_LINE (4395)) ;
  }
  if ((var_cas_inIsEnumeration).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "a constant of '@"))._operator_concat (var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4399))))._operator_concat (GGS_string (true, "' enumeration type is expected here")) COMMA_SOURCE_FILE_AT_LINE (4399)) ;
  }else if (((var_cas_tableDesClassesAncetresType1.reader_hasKey (_inLexique, var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4400)) COMMA_SOURCE_FILE_AT_LINE (4400)))._operator_not ()).isBuiltAndTrue ()) {
    var_cas_outTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "This type does not inherit from '"))._operator_concat (var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4401))))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (4401)) ;
  }
  GGS_bool automatic_var_25 ;
  nt_parse_effective_input_parameters_list_ (_inLexique, var_cas_ioVariablesMap, var_cas_listeAttributs1, var_cas_inVarLocation, GGS_localConstantBuildStyleEnum::constructor_listStyle (_inLexique COMMA_HERE), automatic_var_25) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_4373_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  nt_parse_effective_input_parameters_list_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_match_case'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_parse_match_case_semantics_parser_4415_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_lstring  var_cas_inTypeName,
                                GGS_location  /* var_cas_inVarLocation */,
                                GGS_bool var_cas_inIsEnumeration,
                                GGS_enumConstantMap  var_cas_inEnumMessageMap,
                                GGS_lstring  &var_cas_outEnumConstantName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outEnumConstantName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  if ((var_cas_inIsEnumeration).isBuiltAndTrue ()) {
    GGS_bool automatic_var_26 ;
    if (var_cas_inEnumMessageMap._isBuilt ()) {
      var_cas_inEnumMessageMap (HERE)->method_searchKey (_inLexique, var_cas_outEnumConstantName, automatic_var_26 COMMA_SOURCE_FILE_AT_LINE (4428)) ;
    }
  }else{
    var_cas_outEnumConstantName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "a class that inherit from '@"))._operator_concat (var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4430))))._operator_concat (GGS_string (true, "' abstract class is expected here")) COMMA_SOURCE_FILE_AT_LINE (4430)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_parse_match_case_semantics_parser_4415_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instruction_semantics_parser_4436_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_operand1_cppName ;
  GGS_lstring  var_cas_operand1_typeName ;
  GGS_location  var_cas_operand1_location ;
  GGS_bool var_cas_operand1_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand1_enumMessageMap ;
  nt_parse_match_operand_ (_inLexique, var_cas_ioVariablesMap, var_cas_operand1_cppName, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_operand2_cppName ;
  GGS_lstring  var_cas_operand2_typeName ;
  GGS_location  var_cas_operand2_location ;
  GGS_bool var_cas_operand2_isEnumeration ;
  GGS_enumConstantMap  var_cas_operand2_enumMessageMap ;
  nt_parse_match_operand_ (_inLexique, var_cas_ioVariablesMap, var_cas_operand2_cppName, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_L_matchInstructionCasesList  var_cas_casesList ;
  var_cas_casesList = GGS_L_matchInstructionCasesList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_ioVariablesMap.prologue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (4481)) ;
  { bool syntaxRepeat_51 = true ;
    while (syntaxRepeat_51) {
      switch (select_repeat_semantics_parser_51 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4485)) ;
          GGS_lstring  var_cas_case1_name ;
          nt_parse_match_case_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand1_typeName, var_cas_operand1_location, var_cas_operand1_isEnumeration, var_cas_operand1_enumMessageMap, var_cas_case1_name) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
          GGS_lstring  var_cas_case2_name ;
          nt_parse_match_case_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_ioVariablesMap, var_cas_operand2_typeName, var_cas_operand2_location, var_cas_operand2_isEnumeration, var_cas_operand2_enumMessageMap, var_cas_case2_name) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          GGS_typeInstructionList  var_cas_instructionsList ;
          var_cas_instructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
          nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_instructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inFileWrappers) ;
          var_cas_casesList._addAssign_operation (var_cas_case1_name, var_cas_case2_name, var_cas_instructionsList) ;
          var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4485)) ;
          } break ;
        default :
          syntaxRepeat_51 = false ;
          break ;
      }
    }
  }
  var_cas_ioVariablesMap.prologue_testPart (_inLexique COMMA_SOURCE_FILE_AT_LINE (4529)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_elsePartInstructionsList ;
  var_cas_elsePartInstructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_elsePartInstructionsList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inFileWrappers) ;
  var_cas_ioVariablesMap.epilogue_testPart (_inLexique, GGS_location (_inLexique) COMMA_SOURCE_FILE_AT_LINE (4529)) ;
  var_cas_ioVariablesMap.epilogue_testBloc (_inLexique COMMA_SOURCE_FILE_AT_LINE (4481)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeMatchInstruction::constructor_new (_inLexique, var_cas_operand1_location, var_cas_operand2_location, var_cas_operand1_cppName, var_cas_operand2_cppName, var_cas_operand1_typeName, var_cas_operand2_typeName, var_cas_operand1_isEnumeration, var_cas_operand2_isEnumeration, var_cas_casesList, var_cas_elsePartInstructionsList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instruction_semantics_parser_4436_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  nt_parse_match_operand_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
  nt_parse_match_operand_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat_51 = true ;
    while (syntaxRepeat_51) {
      switch (select_repeat_semantics_parser_51 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          nt_parse_match_case_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3A) COMMA_HERE) ;
          nt_parse_match_case_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          nt_semantic_instructions_list_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_51 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Implementation of production rule 'semantic_instructions_list_no_verif'   *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantic_instructions_list_no_verif_semantics_parser_4565_4_ (galgas_scanner & _inLexique,
                                const GGS_treewalkingRoutineHeaderMap  var_cas_inTreewalkingRoutineHeaderMap,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_entityPropertyMap  var_cas_inCurrentTreewalkingRoutinePropertyMap,
                                const GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                const GGS_M_filewrappers  var_cas_inFileWrappers) {
  { bool syntaxRepeat_52 = true ;
    while (syntaxRepeat_52) {
      switch (select_repeat_semantics_parser_52 (_inLexique)) {
        case 2 : {
          nt_semantic_instruction_ (_inLexique, var_cas_inTreewalkingRoutineHeaderMap, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioVariablesMap, var_cas_ioInstructionList, var_cas_inCurrentTreewalkingRoutinePropertyMap, var_cas_inMetamodelEntityMap, var_cas_inTreewalkingComponentMap, var_cas_inFileWrappers) ;
          } break ;
        default :
          syntaxRepeat_52 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantic_instructions_list_no_verif_semantics_parser_4565_4_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_52 = true ;
    while (syntaxRepeat_52) {
      switch (select_repeat_semantics_parser_52 (_inLexique)) {
        case 2 : {
          nt_semantic_instruction_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_52 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_4598_4_ (galgas_scanner & _inLexique,
                                const GGS_lstring  /* var_cas_inTypeName */,
                                const GGS_lstring  /* var_cas_inTargetVarName */,
                                const GGS_typeCplusPlusName  var_cas_inVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                const GGS_M_filewrappers  /* var_cas_inFileWrappers */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */) {
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_typeInstructionDeclarationVarLocale::constructor_new (_inLexique, var_cas_inVariableCppName, var_cas_inVariableType COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_4598_4_parse (galgas_scanner & /* _inLexique */) {
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_4615_4_ (galgas_scanner & _inLexique,
                                const GGS_lstring  /* var_cas_inTypeName */,
                                const GGS_lstring  var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_filewrappers  var_cas_inFileWrappers,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_sourceExpression ;
  GGS_AC_galgasType  var_cas_sourceType ;
  nt_expression_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap, var_cas_sourceExpression, var_cas_sourceType) ;
  ::routine_checkAssignmentTypesCompatibility (_inLexique,  var_cas_inVariableType,  var_cas_sourceType,  GGS_location (_inLexique),  GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (4637)) ;
  GGS_typeInstruction  var_cas_instruction ;
  var_cas_instruction = GGS_C_declarationInstructionWithAssignment::constructor_new (_inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_sourceExpression COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (var_cas_instruction) ;
  GGS_AC_galgasType  automatic_var_27 ;
  GGS_typeCplusPlusName  automatic_var_28 ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, automatic_var_27, automatic_var_28 COMMA_SOURCE_FILE_AT_LINE (4644)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_4615_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_3D) COMMA_HERE) ;
  nt_expression_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'optional_assignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_optional_assignment_semantics_parser_4649_4_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inTypeName,
                                const GGS_lstring  var_cas_inTargetVarName,
                                const GGS_typeCplusPlusName  var_cas_inTargetVariableCppName,
                                const GGS_AC_galgasType  var_cas_inVariableType,
                                GGS_typeVariablesMap  &var_cas_ioVariablesMap,
                                GGS_typeInstructionList  &var_cas_ioInstructionList,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                const GGS_M_filewrappers  var_cas_inFileWrappers,
                                const GGS_M_semanticsEntitiesForUse  var_cas_ioComponentSemanticsEntitiesMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  GGS_lstring  var_cas_constructorName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_constructorName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiques ;
  if (var_cas_inVariableType._isBuilt ()) {
    var_cas_inVariableType (HERE)->method_handleConstructorCall (_inLexique, var_cas_constructorName, var_cas_listeAttributsSemantiques COMMA_SOURCE_FILE_AT_LINE (4666)) ;
  }
  GGS_typeExpressionList  var_cas_expressionList ;
  nt_output_expression_list_ (_inLexique, var_cas_expressionList, var_cas_listeAttributsSemantiques, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_inFileWrappers, var_cas_ioVariablesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
  GGS_typeExpression  var_cas_e ;
  var_cas_e = GGS_typeConstructorExpression::constructor_new (_inLexique, var_cas_inTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4680)), var_cas_constructorName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4681)), var_cas_expressionList COMMA_HERE) ;
  var_cas_ioInstructionList._addAssign_operation (GGS_C_declarationInstructionWithAssignment::constructor_new (_inLexique, var_cas_inVariableType, var_cas_inTargetVariableCppName, var_cas_e COMMA_HERE)) ;
  GGS_AC_galgasType  automatic_var_29 ;
  GGS_typeCplusPlusName  automatic_var_30 ;
  var_cas_ioVariablesMap.modifier_searchForWriteAccess (_inLexique, var_cas_inTargetVarName, automatic_var_29, automatic_var_30 COMMA_SOURCE_FILE_AT_LINE (4686)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_optional_assignment_semantics_parser_4649_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_output_expression_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4695_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_M_filewrappers  &/* var_cas_ioFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  GGS_lstring  var_cas_mapindexTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapindexTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_53 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4710)) COMMA_SOURCE_FILE_AT_LINE (4710)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4711)) COMMA_SOURCE_FILE_AT_LINE (4711))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapindexType::constructor_new (_inLexique, var_cas_mapindexTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (4713)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      GGS_lstring  var_cas_mapTypeName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
        var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_mapTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (4720)) ;
      }
      GGS_AC_galgasType  var_cas_aType ;
      var_cas_aType = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_theEntity.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (4721)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (4721)) ;
      GGS_typeGalgasMapType  var_cas_mapType ;
      var_cas_mapType = GGS_typeGalgasMapType::_castFrom (_inLexique, var_cas_aType.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (4722)) ;
      GGS_typeListeAttributsSemantiques  var_cas_mapAttributesList ;
      var_cas_mapAttributesList = var_cas_mapType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (4723)) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesSurcharger ;
      var_cas_tableMethodesSurcharger = var_cas_mapType.reader_aTableMethodesSurcharger (_inLexique COMMA_SOURCE_FILE_AT_LINE (4724)) ;
      GGS_mapModifierMap  var_cas_modifierMethodMap ;
      var_cas_modifierMethodMap = var_cas_mapType.reader_mModifierMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4725)) ;
      GGS_mapMethodMap  var_cas_readerMethodMap ;
      var_cas_readerMethodMap = var_cas_mapType.reader_mReaderMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4726)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_mapIndexSearchReaderMap  var_cas_mapIndexSearchReaderMap ;
      var_cas_mapIndexSearchReaderMap = GGS_mapIndexSearchReaderMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_54 = true ;
        while (syntaxRepeat_54) {
          switch (select_repeat_semantics_parser_54 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_searchReaderName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_searchReaderName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              GGS_lstring  var_cas_mapindexErrorMessage ;
              _inLexique._assignFromAttribute_tokenString (var_cas_mapindexErrorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              if (var_cas_mapindexErrorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (4738)) ;
              }
              var_cas_mapIndexSearchReaderMap.modifier_insertKey (_inLexique, var_cas_searchReaderName, var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (4740)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_54 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_t ;
      var_cas_t = GGS_typeGalgasMapindexType::constructor_new (_inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap, var_cas_tableMethodesSurcharger, var_cas_modifierMethodMap, var_cas_readerMethodMap COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (4753)) ;
      GGS_typeEntityToGenerate  var_cas_e ;
      var_cas_e = GGS_C_mapindexToImplement::constructor_new (_inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_e) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4695_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_M_filewrappers  &/* var_cas_ioFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  GGS_lstring  var_cas_mapindexTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapindexTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_53 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4777)) COMMA_SOURCE_FILE_AT_LINE (4777)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapindexTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4778)) COMMA_SOURCE_FILE_AT_LINE (4778))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapindexType::constructor_new (_inLexique, var_cas_mapindexTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (4780)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      GGS_lstring  var_cas_mapTypeName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_theEntity ;
      if (var_cas_ioComponentSemanticsEntitiesMap._isBuilt ()) {
        var_cas_ioComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_mapTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (4787)) ;
      }
      GGS_AC_galgasType  var_cas_aType ;
      var_cas_aType = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_theEntity.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (4788)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (4788)) ;
      GGS_typeGalgasMapType  var_cas_mapType ;
      var_cas_mapType = GGS_typeGalgasMapType::_castFrom (_inLexique, var_cas_aType.getPtr (), true, var_cas_mapTypeName COMMA_SOURCE_FILE_AT_LINE (4789)) ;
      GGS_typeListeAttributsSemantiques  var_cas_mapAttributesList ;
      var_cas_mapAttributesList = var_cas_mapType.reader_mNonExternAttributesList (_inLexique COMMA_SOURCE_FILE_AT_LINE (4790)) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesSurcharger ;
      var_cas_tableMethodesSurcharger = var_cas_mapType.reader_aTableMethodesSurcharger (_inLexique COMMA_SOURCE_FILE_AT_LINE (4791)) ;
      GGS_mapModifierMap  var_cas_modifierMethodMap ;
      var_cas_modifierMethodMap = var_cas_mapType.reader_mModifierMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4792)) ;
      GGS_mapMethodMap  var_cas_readerMethodMap ;
      var_cas_readerMethodMap = var_cas_mapType.reader_mReaderMethodMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (4793)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_mapIndexSearchReaderMap  var_cas_mapIndexSearchReaderMap ;
      var_cas_mapIndexSearchReaderMap = GGS_mapIndexSearchReaderMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_54 = true ;
        while (syntaxRepeat_54) {
          switch (select_repeat_semantics_parser_54 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_searchReaderName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_searchReaderName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              GGS_lstring  var_cas_mapindexErrorMessage ;
              _inLexique._assignFromAttribute_tokenString (var_cas_mapindexErrorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              if (var_cas_mapindexErrorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (4805)) ;
              }
              var_cas_mapIndexSearchReaderMap.modifier_insertKey (_inLexique, var_cas_searchReaderName, var_cas_mapindexErrorMessage COMMA_SOURCE_FILE_AT_LINE (4807)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_54 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_t ;
      var_cas_t = GGS_typeGalgasMapindexType::constructor_new (_inLexique, var_cas_mapindexTypeName, var_cas_mapTypeName, var_cas_mapAttributesList, var_cas_mapIndexSearchReaderMap, var_cas_tableMethodesSurcharger, var_cas_modifierMethodMap, var_cas_readerMethodMap COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapindexTypeName, GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (4820)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_4695_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_53 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat_54 = true ;
        while (syntaxRepeat_54) {
          switch (select_repeat_semantics_parser_54 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_54 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4830_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_M_filewrappers  &/* var_cas_ioFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mapTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_55 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4845)) COMMA_SOURCE_FILE_AT_LINE (4845)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4846)) COMMA_SOURCE_FILE_AT_LINE (4846))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapType::constructor_new (_inLexique, var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (4848)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
      GGS_lstring  var_cas_cppClassName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_cppClassName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      var_cas_cppClassName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "old style map definition") COMMA_SOURCE_FILE_AT_LINE (4855)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_56 = true ;
        while (syntaxRepeat_56) {
          switch (select_repeat_semantics_parser_56 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4868)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4875)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut ;
              var_cas_tableDebut = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin ;
              var_cas_tableFin = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_tableMethodesBloc.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin COMMA_SOURCE_FILE_AT_LINE (4910)) ;
              } break ;
            default :
              syntaxRepeat_56 = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList::cEnumerator enumerator_186410 (var_cas_insertMethodList, true) ;
      const GGS_insertOrSearchMethodList::cElement * operand_186410 = NULL ;
      while (((operand_186410 = (GGS_insertOrSearchMethodList::cElement *) enumerator_186410.nextObject ()))) {
        macroValidPointer (operand_186410) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_186593 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_186593 = NULL ;
        while (((operand_186593 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_186593.nextObject ()))) {
          macroValidPointer (operand_186593) ;
          var_cas_methodSignature._addAssign_operation (operand_186593->mAttributType, var_cas_inPassingMode) ;
        }
        enumerator_186593.reset () ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_186410->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (4938)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_187022 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_187022 = NULL ;
        while (((operand_187022 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_187022.nextObject ()))) {
          macroValidPointer (operand_187022) ;
          var_cas_methodSignature._addAssign_operation (operand_187022->mAttributType, var_cas_inPassingMode) ;
        }
        enumerator_187022.reset () ;
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, (operand_186410->mMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4946)))._operator_concat (GGS_string (true, "GetIndex")), operand_186410->mMethodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (4946)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (4947)) ;
      }
      enumerator_186410.reset () ;
      GGS_insertOrSearchMethodList::cEnumerator enumerator_187383 (var_cas_searchMethodList, true) ;
      const GGS_insertOrSearchMethodList::cElement * operand_187383 = NULL ;
      while (((operand_187383 = (GGS_insertOrSearchMethodList::cElement *) enumerator_187383.nextObject ()))) {
        macroValidPointer (operand_187383) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_187564 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_187564 = NULL ;
        while (((operand_187564 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_187564.nextObject ()))) {
          macroValidPointer (operand_187564) ;
          var_cas_methodSignature._addAssign_operation (operand_187564->mAttributType, var_cas_outPassingMode) ;
        }
        enumerator_187564.reset () ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_187383->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (4956)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_187991 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_187991 = NULL ;
        while (((operand_187991 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_187991.nextObject ()))) {
          macroValidPointer (operand_187991) ;
          var_cas_methodSignature._addAssign_operation (operand_187991->mAttributType, var_cas_outPassingMode) ;
        }
        enumerator_187991.reset () ;
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, (operand_187383->mMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (4964)))._operator_concat (GGS_string (true, "GetIndex")), operand_187383->mMethodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (4964)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (4965)) ;
      }
      enumerator_187383.reset () ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (4976)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_typeDefinitionTableAimplementer::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_cppClassName, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_tableMethodesBloc COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_removeMethodList ;
      var_cas_removeMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_mapMethodMap  var_cas_mapReaderMethodMap ;
      var_cas_mapReaderMethodMap = GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_57 = true ;
        while (syntaxRepeat_57) {
          switch (select_repeat_semantics_parser_57 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (5019)) ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::cEnumerator enumerator_191029 (var_cas_listeTousAttributsSemantiques, true) ;
              const GGS_typeListeAttributsSemantiques::cElement * operand_191029 = NULL ;
              while (((operand_191029 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_191029.nextObject ()))) {
                macroValidPointer (operand_191029) ;
                var_cas_methodSignature._addAssign_operation (operand_191029->mAttributType, var_cas_outPassingMode) ;
              }
              enumerator_191029.reset () ;
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5028)) ;
              var_cas_removeMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5029)), GGS_bool (true, false), GGS_string (true, "")) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5031)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_191617 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_191617 = NULL ;
                while (((operand_191617 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_191617.nextObject ()))) {
                  macroValidPointer (operand_191617) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_191617->mAttributType, var_cas_outPassingMode) ;
                }
                enumerator_191617.reset () ;
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5038)) ;
                var_cas_removeMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5039)), GGS_bool (true, true), GGS_string (true, "")) ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (5046)) ;
              }
              GGS_string var_cas_shadowErrorMessage ;
              switch (select_semantics_parser_58 (_inLexique)) {
                case 1 : {
                  var_cas_shadowErrorMessage = GGS_string (true, "") ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  GGS_lstring  var_cas_shadowErrorMessageString ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_shadowErrorMessageString) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  if (var_cas_shadowErrorMessageString._isBuilt ()) {
                    ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_shadowErrorMessageString COMMA_SOURCE_FILE_AT_LINE (5054)) ;
                  }
                  var_cas_shadowErrorMessage = var_cas_shadowErrorMessageString.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5056)) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::cEnumerator enumerator_192712 (var_cas_listeTousAttributsSemantiques, true) ;
              const GGS_typeListeAttributsSemantiques::cElement * operand_192712 = NULL ;
              while (((operand_192712 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_192712.nextObject ()))) {
                macroValidPointer (operand_192712) ;
                var_cas_methodSignature._addAssign_operation (operand_192712->mAttributType, var_cas_inPassingMode) ;
              }
              enumerator_192712.reset () ;
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5065)) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5066)), GGS_bool (true, false), var_cas_shadowErrorMessage) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5068)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_193315 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_193315 = NULL ;
                while (((operand_193315 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_193315.nextObject ()))) {
                  macroValidPointer (operand_193315) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_193315->mAttributType, var_cas_inPassingMode) ;
                }
                enumerator_193315.reset () ;
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5075)) ;
                var_cas_insertMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5076)), GGS_bool (true, true), var_cas_shadowErrorMessage) ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  var_cas_errorMessage ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, var_cas_errorMessage) ;
              if (var_cas_errorMessage._isBuilt ()) {
                ::routine_check_K_escapeCharacters (_inLexique,  var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (5083)) ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::cEnumerator enumerator_194096 (var_cas_listeTousAttributsSemantiques, true) ;
              const GGS_typeListeAttributsSemantiques::cElement * operand_194096 = NULL ;
              while (((operand_194096 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_194096.nextObject ()))) {
                macroValidPointer (operand_194096) ;
                var_cas_methodSignature._addAssign_operation (operand_194096->mAttributType, var_cas_outPassingMode) ;
              }
              enumerator_194096.reset () ;
              var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5092)) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_methodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5093)), GGS_bool (true, false), GGS_string (true, "")) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5095)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_194714 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_194714 = NULL ;
                while (((operand_194714 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_194714.nextObject ()))) {
                  macroValidPointer (operand_194714) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_194714->mAttributType, var_cas_outPassingMode) ;
                }
                enumerator_194714.reset () ;
                var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5102)) ;
                var_cas_searchMethodList._addAssign_operation (var_cas_getIndexMethodName, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5103)), GGS_bool (true, true), GGS_string (true, "")) ;
              }
              } break ;
            default :
              syntaxRepeat_57 = false ;
              break ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapReaderMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5115)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_mapToImplement::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_insertMethodList, var_cas_searchMethodList, var_cas_removeMethodList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_4830_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_M_filewrappers  &/* var_cas_ioFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mapTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_55 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5142)) COMMA_SOURCE_FILE_AT_LINE (5142)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_mapTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5142)) COMMA_SOURCE_FILE_AT_LINE (5142))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedMapType::constructor_new (_inLexique, var_cas_mapTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5144)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
      GGS_lstring  var_cas_cppClassName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_cppClassName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_insertMethodList ;
      var_cas_insertMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList  var_cas_searchMethodList ;
      var_cas_searchMethodList = GGS_insertOrSearchMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_56 = true ;
        while (syntaxRepeat_56) {
          switch (select_repeat_semantics_parser_56 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_insertMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5163)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              GGS_lstring  var_cas_errorMessage ;
              nt_ex_map_method_ (_inLexique, var_cas_nomMethode, var_cas_errorMessage) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_searchMethodList._addAssign_operation (var_cas_nomMethode, var_cas_errorMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5170)), GGS_bool (true, true), GGS_string (true, "")) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
              GGS_lstring  var_cas_nomMethode ;
              _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureDebut ;
              GGS_typeVariablesMap  var_cas_tableDebut ;
              var_cas_tableDebut = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeDebut ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureDebut, var_cas_tableDebut, var_cas_listeTypesEtNomsArgMethodeDebut, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_signatureFin ;
              GGS_typeVariablesMap  var_cas_tableFin ;
              var_cas_tableFin = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypesEtNomsArgMethodeFin ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_signatureFin, var_cas_tableFin, var_cas_listeTypesEtNomsArgMethodeFin, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              var_cas_tableMethodesBloc.modifier_insertKey (_inLexique, var_cas_nomMethode, var_cas_signatureDebut, var_cas_signatureFin COMMA_SOURCE_FILE_AT_LINE (5205)) ;
              } break ;
            default :
              syntaxRepeat_56 = false ;
              break ;
          }
        }
      }
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_insertOrSearchMethodList::cEnumerator enumerator_199428 (var_cas_insertMethodList, true) ;
      const GGS_insertOrSearchMethodList::cElement * operand_199428 = NULL ;
      while (((operand_199428 = (GGS_insertOrSearchMethodList::cElement *) enumerator_199428.nextObject ()))) {
        macroValidPointer (operand_199428) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_199611 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_199611 = NULL ;
        while (((operand_199611 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_199611.nextObject ()))) {
          macroValidPointer (operand_199611) ;
          var_cas_methodSignature._addAssign_operation (operand_199611->mAttributType, var_cas_inPassingMode) ;
        }
        enumerator_199611.reset () ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_199428->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5233)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_200040 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_200040 = NULL ;
        while (((operand_200040 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_200040.nextObject ()))) {
          macroValidPointer (operand_200040) ;
          var_cas_methodSignature._addAssign_operation (operand_200040->mAttributType, var_cas_inPassingMode) ;
        }
        enumerator_200040.reset () ;
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, (operand_199428->mMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5241)))._operator_concat (GGS_string (true, "GetIndex")), operand_199428->mMethodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (5241)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5242)) ;
      }
      enumerator_199428.reset () ;
      GGS_insertOrSearchMethodList::cEnumerator enumerator_200401 (var_cas_searchMethodList, true) ;
      const GGS_insertOrSearchMethodList::cElement * operand_200401 = NULL ;
      while (((operand_200401 = (GGS_insertOrSearchMethodList::cElement *) enumerator_200401.nextObject ()))) {
        macroValidPointer (operand_200401) ;
        GGS_L_EXsignature  var_cas_methodSignature ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_200584 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_200584 = NULL ;
        while (((operand_200584 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_200584.nextObject ()))) {
          macroValidPointer (operand_200584) ;
          var_cas_methodSignature._addAssign_operation (operand_200584->mAttributType, var_cas_outPassingMode) ;
        }
        enumerator_200584.reset () ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, operand_200401->mMethodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5251)) ;
        var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
        var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
        var_cas_methodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
        GGS_typeListeAttributsSemantiques::cEnumerator enumerator_201014 (var_cas_listeTousAttributsSemantiques, true) ;
        const GGS_typeListeAttributsSemantiques::cElement * operand_201014 = NULL ;
        while (((operand_201014 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_201014.nextObject ()))) {
          macroValidPointer (operand_201014) ;
          var_cas_methodSignature._addAssign_operation (operand_201014->mAttributType, var_cas_outPassingMode) ;
        }
        enumerator_201014.reset () ;
        GGS_lstring  var_cas_insertKeyAndGetIndexName ;
        var_cas_insertKeyAndGetIndexName = GGS_lstring::constructor_new (_inLexique, (operand_200401->mMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5259)))._operator_concat (GGS_string (true, "GetIndex")), operand_200401->mMethodName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (5259)) COMMA_HERE) ;
        var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_insertKeyAndGetIndexName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5260)) ;
      }
      enumerator_200401.reset () ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5271)) ;
      GGS_TypeModel  var_cas_type ;
      var_cas_type = GGS_MapModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (5273)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_typeTableBlocsDeTable  var_cas_tableMethodesBloc ;
      var_cas_tableMethodesBloc = GGS_typeTableBlocsDeTable::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_inPassingMode ;
      var_cas_inPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      GGS_formalArgumentPassingMode var_cas_outPassingMode ;
      var_cas_outPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_lstringType ;
      var_cas_lstringType = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_luintType ;
      var_cas_luintType = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
      GGS_mapModifierMap  var_cas_mapModifierMethodMap ;
      var_cas_mapModifierMethodMap = GGS_mapModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_mapMethodMap  var_cas_mapReaderMethodMap ;
      var_cas_mapReaderMethodMap = GGS_mapMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_57 = true ;
        while (syntaxRepeat_57) {
          switch (select_repeat_semantics_parser_57 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_31 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_31) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::cEnumerator enumerator_203248 (var_cas_listeTousAttributsSemantiques, true) ;
              const GGS_typeListeAttributsSemantiques::cElement * operand_203248 = NULL ;
              while (((operand_203248 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_203248.nextObject ()))) {
                macroValidPointer (operand_203248) ;
                var_cas_methodSignature._addAssign_operation (operand_203248->mAttributType, var_cas_outPassingMode) ;
              }
              enumerator_203248.reset () ;
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5312)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5314)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_203792 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_203792 = NULL ;
                while (((operand_203792 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_203792.nextObject ()))) {
                  macroValidPointer (operand_203792) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_203792->mAttributType, var_cas_outPassingMode) ;
                }
                enumerator_203792.reset () ;
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5321)) ;
              }
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_32 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_32) ;
              switch (select_semantics_parser_58 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::cEnumerator enumerator_204472 (var_cas_listeTousAttributsSemantiques, true) ;
              const GGS_typeListeAttributsSemantiques::cElement * operand_204472 = NULL ;
              while (((operand_204472 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_204472.nextObject ()))) {
                macroValidPointer (operand_204472) ;
                var_cas_methodSignature._addAssign_operation (operand_204472->mAttributType, var_cas_inPassingMode) ;
              }
              enumerator_204472.reset () ;
              var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5340)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5342)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_205015 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_205015 = NULL ;
                while (((operand_205015 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_205015.nextObject ()))) {
                  macroValidPointer (operand_205015) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_205015->mAttributType, var_cas_inPassingMode) ;
                }
                enumerator_205015.reset () ;
                var_cas_mapModifierMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5349)) ;
              }
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              GGS_lstring  var_cas_methodName ;
              GGS_lstring  var_cas_getIndexMethodName ;
              GGS_lstring  automatic_var_33 ;
              nt_map_method_ (_inLexique, var_cas_methodName, var_cas_getIndexMethodName, automatic_var_33) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_methodSignature ;
              var_cas_methodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
              var_cas_methodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
              GGS_typeListeAttributsSemantiques::cEnumerator enumerator_205615 (var_cas_listeTousAttributsSemantiques, true) ;
              const GGS_typeListeAttributsSemantiques::cElement * operand_205615 = NULL ;
              while (((operand_205615 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_205615.nextObject ()))) {
                macroValidPointer (operand_205615) ;
                var_cas_methodSignature._addAssign_operation (operand_205615->mAttributType, var_cas_outPassingMode) ;
              }
              enumerator_205615.reset () ;
              var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_methodSignature COMMA_SOURCE_FILE_AT_LINE (5363)) ;
              if (((var_cas_getIndexMethodName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5365)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_L_EXsignature  var_cas_getIndexMethodSignature ;
                var_cas_getIndexMethodSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_lstringType, var_cas_inPassingMode) ;
                var_cas_getIndexMethodSignature._addAssign_operation (var_cas_luintType, var_cas_outPassingMode) ;
                GGS_typeListeAttributsSemantiques::cEnumerator enumerator_206199 (var_cas_listeTousAttributsSemantiques, true) ;
                const GGS_typeListeAttributsSemantiques::cElement * operand_206199 = NULL ;
                while (((operand_206199 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_206199.nextObject ()))) {
                  macroValidPointer (operand_206199) ;
                  var_cas_getIndexMethodSignature._addAssign_operation (operand_206199->mAttributType, var_cas_outPassingMode) ;
                }
                enumerator_206199.reset () ;
                var_cas_mapReaderMethodMap.modifier_insertKey (_inLexique, var_cas_getIndexMethodName, var_cas_getIndexMethodSignature COMMA_SOURCE_FILE_AT_LINE (5372)) ;
              }
              } break ;
            default :
              syntaxRepeat_57 = false ;
              break ;
          }
        }
      }
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasMapType::constructor_new (_inLexique, var_cas_mapTypeName, var_cas_listeTousAttributsSemantiques, var_cas_tableMethodesBloc, var_cas_mapModifierMethodMap, var_cas_mapReaderMethodMap COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5384)) ;
      GGS_TypeModel  var_cas_type ;
      var_cas_type = GGS_MapModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_mapTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (5386)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_4830_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_55 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      { bool syntaxRepeat_56 = true ;
        while (syntaxRepeat_56) {
          switch (select_repeat_semantics_parser_56 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              nt_ex_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              nt_ex_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_56 = false ;
              break ;
          }
        }
      }
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      { bool syntaxRepeat_57 = true ;
        while (syntaxRepeat_57) {
          switch (select_repeat_semantics_parser_57 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
              nt_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
              nt_map_method_parse (_inLexique) ;
              switch (select_semantics_parser_58 (_inLexique)) {
                case 1 : {
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
              nt_map_method_parse (_inLexique) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_57 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'ex_map_method'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_ex_map_method_semantics_parser_5393_4_ (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_nomMethode,
                                GGS_lstring  &var_cas_outMessage) {
  _inLexique._assignFromAttribute_tokenString (var_cas_nomMethode) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outMessage) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_ex_map_method_semantics_parser_5393_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'map_method'               *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_map_method_semantics_parser_5405_4_ (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_methodName,
                                GGS_lstring  &var_cas_getIndexMethodName,
                                GGS_lstring  &var_cas_outMessage) {
  _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_59 (_inLexique)) {
    case 1 : {
      var_cas_getIndexMethodName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_getIndexMethodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outMessage) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_map_method_semantics_parser_5405_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semantics_parser_59 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5428_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_M_filewrappers  &/* var_cas_ioFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_60 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5443)) COMMA_SOURCE_FILE_AT_LINE (5443)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5443)) COMMA_SOURCE_FILE_AT_LINE (5443))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5445)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_inputSignature ;
      var_cas_inputSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques::cEnumerator enumerator_209556 (var_cas_listeTousAttributsSemantiques, true) ;
      const GGS_typeListeAttributsSemantiques::cElement * operand_209556 = NULL ;
      while (((operand_209556 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_209556.nextObject ()))) {
        macroValidPointer (operand_209556) ;
        var_cas_extractSignature._addAssign_operation (operand_209556->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        var_cas_inputSignature._addAssign_operation (operand_209556->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE)) ;
      }
      enumerator_209556.reset () ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature, var_cas_inputSignature COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5477)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_listTypeToImplement::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5428_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_M_filewrappers  &/* var_cas_ioFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_60 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5499)) COMMA_SOURCE_FILE_AT_LINE (5499)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5499)) COMMA_SOURCE_FILE_AT_LINE (5499))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5501)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_L_EXsignature  var_cas_inputSignature ;
      var_cas_inputSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques::cEnumerator enumerator_211798 (var_cas_listeTousAttributsSemantiques, true) ;
      const GGS_typeListeAttributsSemantiques::cElement * operand_211798 = NULL ;
      while (((operand_211798 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_211798.nextObject ()))) {
        macroValidPointer (operand_211798) ;
        var_cas_extractSignature._addAssign_operation (operand_211798->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
        var_cas_inputSignature._addAssign_operation (operand_211798->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE)) ;
      }
      enumerator_211798.reset () ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature, var_cas_inputSignature COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5533)) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ListModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5535)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5428_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_60 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5545_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_M_filewrappers  &/* var_cas_ioFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_61 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5560)) COMMA_SOURCE_FILE_AT_LINE (5560)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5560)) COMMA_SOURCE_FILE_AT_LINE (5560))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedSortedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5562)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques::cEnumerator enumerator_214408 (var_cas_listeTousAttributsSemantiques, true) ;
      const GGS_typeListeAttributsSemantiques::cElement * operand_214408 = NULL ;
      while (((operand_214408 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_214408.nextObject ()))) {
        macroValidPointer (operand_214408) ;
        var_cas_extractSignature._addAssign_operation (operand_214408->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
      }
      enumerator_214408.reset () ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasSortedListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_EXsortDescriptorList  var_cas_sortDescriptorList ;
      var_cas_sortDescriptorList = GGS_EXsortDescriptorList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_stringset  var_cas_usedSortedAttributes ;
      var_cas_usedSortedAttributes = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat_62 = true ;
        while (syntaxRepeat_62) {
            GGS_lstring  var_cas_sortAttribute ;
            _inLexique._assignFromAttribute_tokenString (var_cas_sortAttribute) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            if ((var_cas_usedSortedAttributes.reader_hasKey (_inLexique, var_cas_sortAttribute.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5597)) COMMA_SOURCE_FILE_AT_LINE (5597))).isBuiltAndTrue ()) {
              var_cas_sortAttribute.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this attribute is already used in sort list") COMMA_SOURCE_FILE_AT_LINE (5598)) ;
            }else{
              GGS_AC_galgasType  var_cas_definitionType ;
              if (var_cas_tableAttributs._isBuilt ()) {
                var_cas_tableAttributs (HERE)->method_searchKey (_inLexique, var_cas_sortAttribute, var_cas_definitionType COMMA_SOURCE_FILE_AT_LINE (5601)) ;
              }
              if (var_cas_definitionType._isBuilt ()) {
                var_cas_definitionType (HERE)->method_acceptToBeSortKeyInSortedListDefinition (_inLexique, var_cas_sortAttribute COMMA_SOURCE_FILE_AT_LINE (5602)) ;
              }
              var_cas_usedSortedAttributes._addAssign_operation (var_cas_sortAttribute.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5603))) ;
            }
            GGS_bool var_cas_ascendingOrder ;
            switch (select_semantics_parser_63 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
                var_cas_ascendingOrder = GGS_bool (true, true) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
                var_cas_ascendingOrder = GGS_bool (true, false) ;
                } break ;
              default :
                break ;
            }
            var_cas_sortDescriptorList._addAssign_operation (var_cas_sortAttribute, var_cas_ascendingOrder) ;
          switch (select_repeat_semantics_parser_62 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_62 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5619)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_sortedListTypeToImplement::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_sortDescriptorList COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5545_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_M_filewrappers  &/* var_cas_ioFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_61 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      if ((((var_cas_tableEnAvant.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5642)) COMMA_SOURCE_FILE_AT_LINE (5642)))._operator_or (var_cas_ioComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_listTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5642)) COMMA_SOURCE_FILE_AT_LINE (5642))))._operator_not ()).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgasUndefinedSortedListType::constructor_new (_inLexique, var_cas_listTypeName COMMA_HERE) ;
        var_cas_tableEnAvant.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5644)) ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_typeListModel  var_cas_attributeListModel ;
      var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
      GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
      var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
      GGS_L_EXsignature  var_cas_extractSignature ;
      var_cas_extractSignature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_typeListeAttributsSemantiques::cEnumerator enumerator_217469 (var_cas_listeTousAttributsSemantiques, true) ;
      const GGS_typeListeAttributsSemantiques::cElement * operand_217469 = NULL ;
      while (((operand_217469 = (GGS_typeListeAttributsSemantiques::cElement *) enumerator_217469.nextObject ()))) {
        macroValidPointer (operand_217469) ;
        var_cas_extractSignature._addAssign_operation (operand_217469->mAttributType, GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE)) ;
      }
      enumerator_217469.reset () ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_galgasType  var_cas_c ;
      var_cas_c = GGS_typeGalgasSortedListType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques, var_cas_extractSignature COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat_62 = true ;
        while (syntaxRepeat_62) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_semantics_parser_63 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
          switch (select_repeat_semantics_parser_62 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_62 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      GGS_AC_semanticsEntity  var_cas_entite ;
      var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
      var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5686)) ;
      GGS_TypeModel  var_cas_t ;
      var_cas_t = GGS_ListModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
      var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5688)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5545_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semantics_parser_61 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      nt_attributes_definition_list_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat_62 = true ;
        while (syntaxRepeat_62) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_semantics_parser_63 (_inLexique)) {
              case 1 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
          switch (select_repeat_semantics_parser_62 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_62 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'attributes_definition_list'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_attributes_definition_list_semantics_parser_5698_4_ (galgas_scanner & _inLexique,
                                const GGS_typeTableEnAvant  var_cas_inTableEnAvant,
                                GGS_typeListModel  &var_cas_outAttributeListModel,
                                GGS_typeSemanticAttributesMap  &var_cas_tableAttributs,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeTousAttributsSemantiques,
                                GGS_typeListeAttributsSemantiques  &var_cas_listeAttributsSemantiquesCourants,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap) {
  var_cas_listeAttributsSemantiquesCourants = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_outAttributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_64 = true ;
    while (syntaxRepeat_64) {
      switch (select_repeat_semantics_parser_64 (_inLexique)) {
        case 2 : {
          GGS_AC_galgasType  var_cas_definitionType ;
          GGS_lstring  var_cas_typeName ;
          nt_type_parsing_ (_inLexique, var_cas_inTableEnAvant, var_cas_ioComponentSemanticsEntitiesMap, var_cas_definitionType, var_cas_typeName) ;
          GGS_lstring  var_cas_attributeName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_attributeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_tableAttributs.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_definitionType COMMA_SOURCE_FILE_AT_LINE (5722)) ;
          var_cas_listeTousAttributsSemantiques._addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_listeAttributsSemantiquesCourants._addAssign_operation (var_cas_definitionType, var_cas_attributeName) ;
          var_cas_outAttributeListModel._addAssign_operation (var_cas_typeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_64 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_attributes_definition_list_semantics_parser_5698_4_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat_64 = true ;
    while (syntaxRepeat_64) {
      switch (select_repeat_semantics_parser_64 (_inLexique)) {
        case 2 : {
          nt_type_parsing_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_64 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5736_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_M_filewrappers  &/* var_cas_ioFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_struct) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
  GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListModel  var_cas_attributeListModel ;
  var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasStructType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5770)) ;
  GGS_typeEntityToGenerate  var_cas_def ;
  var_cas_def = GGS_C_structToImplement::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5736_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_M_filewrappers  &/* var_cas_ioFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_struct) COMMA_HERE) ;
  GGS_lstring  var_cas_listTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_listTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeListModel  var_cas_attributeListModel ;
  var_cas_attributeListModel = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
  var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
  GGS_typeSemanticAttributesMap  var_cas_tableAttributs ;
  var_cas_tableAttributs = GGS_typeSemanticAttributesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_attributes_definition_list_ (_inLexique, var_cas_tableEnAvant, var_cas_attributeListModel, var_cas_tableAttributs, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_ioComponentSemanticsEntitiesMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasStructType::constructor_new (_inLexique, var_cas_listTypeName, var_cas_listeTousAttributsSemantiques COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (5810)) ;
  GGS_TypeModel  var_cas_t ;
  var_cas_t = GGS_ListModel::constructor_new (_inLexique, var_cas_attributeListModel COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_listTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (5812)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5736_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_struct) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  nt_attributes_definition_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "recursivelyEnumerateDirectories"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivelyEnumerateDirectories (C_Compiler & _inLexique,
                                const GGS_string  var_cas_inAbsoluteSourcePath,
                                const GGS_string  var_cas_inPathInWrapper,
                                const GGS_wrapperExtensionMap   var_cas_inExtensionMap,
                                GGS_wrapperFileSortedList  & var_cas_outWrapperFileSortedList,
                                GGS_wrapperDirectorySortedList  & var_cas_outWrapperDirectorySortedList,
                                GGS_uint  & var_cas_ioWrapperFileIndex,
                                GGS_uint  & var_cas_ioWrapperDirectoryIndex,
                                GGS_M_regularFiles  & var_cas_ioRegularFileMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_recursivelyEnumerateDirectories at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_uint  var_cas_currentDirectoryIndex ;
  var_cas_currentDirectoryIndex = var_cas_ioWrapperDirectoryIndex ;
  var_cas_ioWrapperDirectoryIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (5832)) ;
  GGS_stringlist  var_cas_files ;
  var_cas_files = var_cas_inAbsoluteSourcePath.reader_regularFiles (_inLexique, GGS_bool (true, false) COMMA_SOURCE_FILE_AT_LINE (5834)) ;
  var_cas_outWrapperFileSortedList = GGS_wrapperFileSortedList::constructor_emptySortedList (_inLexique COMMA_HERE) ;
  GGS_stringlist::cEnumerator enumerator_224214 (var_cas_files, true) ;
  const GGS_stringlist::cElement * operand_224214 = NULL ;
  while (((operand_224214 = (GGS_stringlist::cElement *) enumerator_224214.nextObject ()))) {
    macroValidPointer (operand_224214) ;
    if ((var_cas_inExtensionMap.reader_hasKey (_inLexique, operand_224214->mValue.reader_pathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (5837)) COMMA_SOURCE_FILE_AT_LINE (5837))).isBuiltAndTrue ()) {
      GGS_string var_cas_absoluteFilePath ;
      var_cas_absoluteFilePath = ((var_cas_inAbsoluteSourcePath)._operator_concat (GGS_string (true, "/")))._operator_concat (operand_224214->mValue) ;
      var_cas_outWrapperFileSortedList._addAssign_operation (operand_224214->mValue, var_cas_absoluteFilePath, var_cas_currentDirectoryIndex, var_cas_ioWrapperFileIndex) ;
      var_cas_ioRegularFileMap.modifier_insertKey (_inLexique, GGS_lstring::constructor_new (_inLexique, (var_cas_inPathInWrapper)._operator_concat (operand_224214->mValue), GGS_location (_inLexique) COMMA_HERE), var_cas_currentDirectoryIndex, var_cas_ioWrapperFileIndex COMMA_SOURCE_FILE_AT_LINE (5846)) ;
      var_cas_ioWrapperFileIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (5851)) ;
    }
  }
  enumerator_224214.reset () ;
  GGS_stringlist  var_cas_directories ;
  var_cas_directories = var_cas_inAbsoluteSourcePath.reader_directories (_inLexique, GGS_bool (true, false) COMMA_SOURCE_FILE_AT_LINE (5855)) ;
  var_cas_outWrapperDirectorySortedList = GGS_wrapperDirectorySortedList::constructor_emptySortedList (_inLexique COMMA_HERE) ;
  GGS_stringlist::cEnumerator enumerator_224961 (var_cas_directories, true) ;
  const GGS_stringlist::cElement * operand_224961 = NULL ;
  while (((operand_224961 = (GGS_stringlist::cElement *) enumerator_224961.nextObject ()))) {
    macroValidPointer (operand_224961) ;
    GGS_wrapperFileSortedList  var_cas_internalWrapperFileSortedList ;
    GGS_wrapperDirectorySortedList  var_cas_internalWrapperDirectorySortedList ;
    GGS_uint  var_cas_theDirectoryIndex ;
    var_cas_theDirectoryIndex = var_cas_ioWrapperDirectoryIndex ;
    ::routine_recursivelyEnumerateDirectories (_inLexique,  ((var_cas_inAbsoluteSourcePath)._operator_concat (GGS_string (true, "/")))._operator_concat (operand_224961->mValue),  ((var_cas_inPathInWrapper)._operator_concat (operand_224961->mValue))._operator_concat (GGS_string (true, "/")),  var_cas_inExtensionMap,  var_cas_internalWrapperFileSortedList,  var_cas_internalWrapperDirectorySortedList,  var_cas_ioWrapperFileIndex,  var_cas_ioWrapperDirectoryIndex,  var_cas_ioRegularFileMap COMMA_SOURCE_FILE_AT_LINE (5860)) ;
    var_cas_outWrapperDirectorySortedList._addAssign_operation (operand_224961->mValue, var_cas_internalWrapperFileSortedList, var_cas_internalWrapperDirectorySortedList, var_cas_theDirectoryIndex) ;
  }
  enumerator_224961.reset () ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_recursivelyEnumerateDirectories\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5882_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_M_filewrappers  &var_cas_ioFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_filewrapper) COMMA_HERE) ;
  GGS_lstring  var_cas_wrapperName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_wrapperName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  GGS_lstring  var_cas_sourcePath ;
  _inLexique._assignFromAttribute_tokenString (var_cas_sourcePath) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_wrapperExtensionMap  var_cas_extensionMap ;
  var_cas_extensionMap = GGS_wrapperExtensionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_65 = true ;
    while (syntaxRepeat_65) {
        GGS_lstring  var_cas_extension ;
        _inLexique._assignFromAttribute_tokenString (var_cas_extension) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
        var_cas_extensionMap.modifier_insertKey (_inLexique, var_cas_extension COMMA_SOURCE_FILE_AT_LINE (5903)) ;
      switch (select_repeat_semantics_parser_65 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_65 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_string var_cas_absoluteSourcePath ;
  if (((var_cas_sourcePath.ggs_string ().reader_firstCharacterOrNul (_inLexique COMMA_SOURCE_FILE_AT_LINE (5910)))._operator_isEqual (GGS_char (true, '/'))).isBuiltAndTrue ()) {
    var_cas_absoluteSourcePath = var_cas_sourcePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5911)) ;
  }else{
    var_cas_absoluteSourcePath = ((GGS_string::constructor_stringWithSourceFilePath (_inLexique COMMA_HERE).reader_stringByDeletingLastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (5913)))._operator_concat (GGS_string (true, "/")))._operator_concat (var_cas_sourcePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5913))) ;
  }
  if (((var_cas_absoluteSourcePath.reader_directoryExists (_inLexique COMMA_SOURCE_FILE_AT_LINE (5915)))._operator_not ()).isBuiltAndTrue ()) {
    var_cas_sourcePath.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "The '"))._operator_concat (var_cas_absoluteSourcePath))._operator_concat (GGS_string (true, "' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (5916)) ;
  }else{
    GGS_wrapperFileSortedList  var_cas_wrapperFileSortedList ;
    GGS_wrapperDirectorySortedList  var_cas_wrapperDirectorySortedList ;
    GGS_uint  var_cas_wrapperFileIndex ;
    var_cas_wrapperFileIndex = GGS_uint (true, 0U) ;
    GGS_uint  var_cas_wrapperDirectoryIndex ;
    var_cas_wrapperDirectoryIndex = GGS_uint (true, 0U) ;
    GGS_M_regularFiles  var_cas_regularFileMap ;
    var_cas_regularFileMap = GGS_M_regularFiles::constructor_emptyMap (_inLexique COMMA_HERE) ;
    ::routine_recursivelyEnumerateDirectories (_inLexique,  var_cas_absoluteSourcePath,  GGS_string (true, "/"),  var_cas_extensionMap,  var_cas_wrapperFileSortedList,  var_cas_wrapperDirectorySortedList,  var_cas_wrapperFileIndex,  var_cas_wrapperDirectoryIndex,  var_cas_regularFileMap COMMA_SOURCE_FILE_AT_LINE (5923)) ;
    GGS_typeEntityToGenerate  var_cas_w ;
    var_cas_w = GGS_C_wrapperToImplement::constructor_new (_inLexique, var_cas_wrapperName, var_cas_sourcePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5937)), var_cas_extensionMap, var_cas_wrapperFileSortedList, var_cas_wrapperDirectorySortedList COMMA_HERE) ;
    var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_w) ;
    var_cas_ioFileWrappers.modifier_insertKey (_inLexique, var_cas_wrapperName, var_cas_regularFileMap COMMA_SOURCE_FILE_AT_LINE (5944)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_5882_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &/* var_cas_ioComponentSemanticsEntitiesMap */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_M_filewrappers  &var_cas_ioFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_filewrapper) COMMA_HERE) ;
  GGS_lstring  var_cas_wrapperName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_wrapperName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  GGS_lstring  var_cas_sourcePath ;
  _inLexique._assignFromAttribute_tokenString (var_cas_sourcePath) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_wrapperExtensionMap  var_cas_extensionMap ;
  var_cas_extensionMap = GGS_wrapperExtensionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_65 = true ;
    while (syntaxRepeat_65) {
        GGS_lstring  var_cas_extension ;
        _inLexique._assignFromAttribute_tokenString (var_cas_extension) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
        var_cas_extensionMap.modifier_insertKey (_inLexique, var_cas_extension COMMA_SOURCE_FILE_AT_LINE (5967)) ;
      switch (select_repeat_semantics_parser_65 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_65 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  if (((var_cas_ioFileWrappers.reader_hasKey (_inLexique, var_cas_wrapperName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5972)) COMMA_SOURCE_FILE_AT_LINE (5972)))._operator_not ()).isBuiltAndTrue ()) {
    GGS_string var_cas_absoluteSourcePath ;
    if (((var_cas_sourcePath.ggs_string ().reader_firstCharacterOrNul (_inLexique COMMA_SOURCE_FILE_AT_LINE (5975)))._operator_isEqual (GGS_char (true, '/'))).isBuiltAndTrue ()) {
      var_cas_absoluteSourcePath = var_cas_sourcePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5976)) ;
    }else{
      var_cas_absoluteSourcePath = ((GGS_string::constructor_stringWithSourceFilePath (_inLexique COMMA_HERE).reader_stringByDeletingLastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (5978)))._operator_concat (GGS_string (true, "/")))._operator_concat (var_cas_sourcePath.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (5978))) ;
    }
    if (((var_cas_absoluteSourcePath.reader_directoryExists (_inLexique COMMA_SOURCE_FILE_AT_LINE (5980)))._operator_not ()).isBuiltAndTrue ()) {
      var_cas_sourcePath.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "The '"))._operator_concat (var_cas_absoluteSourcePath))._operator_concat (GGS_string (true, "' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (5981)) ;
    }else{
      GGS_wrapperFileSortedList  var_cas_wrapperFileSortedList ;
      GGS_wrapperDirectorySortedList  var_cas_wrapperDirectorySortedList ;
      GGS_uint  var_cas_wrapperFileIndex ;
      var_cas_wrapperFileIndex = GGS_uint (true, 0U) ;
      GGS_uint  var_cas_wrapperDirectoryIndex ;
      var_cas_wrapperDirectoryIndex = GGS_uint (true, 0U) ;
      GGS_M_regularFiles  var_cas_regularFileMap ;
      var_cas_regularFileMap = GGS_M_regularFiles::constructor_emptyMap (_inLexique COMMA_HERE) ;
      ::routine_recursivelyEnumerateDirectories (_inLexique,  var_cas_absoluteSourcePath,  GGS_string (true, "/"),  var_cas_extensionMap,  var_cas_wrapperFileSortedList,  var_cas_wrapperDirectorySortedList,  var_cas_wrapperFileIndex,  var_cas_wrapperDirectoryIndex,  var_cas_regularFileMap COMMA_SOURCE_FILE_AT_LINE (5988)) ;
      var_cas_ioFileWrappers.modifier_insertKey (_inLexique, var_cas_wrapperName, var_cas_regularFileMap COMMA_SOURCE_FILE_AT_LINE (6000)) ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_5882_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_filewrapper) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_65 = true ;
    while (syntaxRepeat_65) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_65 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_65 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_6011_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                GGS_M_filewrappers  &/* var_cas_ioFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  nt_semantics_declaration_begining_by_extern_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_inOptionsComponentsMapForUse, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_inTreewalkingComponentMap) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_6011_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &var_cas_tableNomRoutinesDeclarees,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &var_cas_tableRoutinesAimplementer,
                                const GGS_M_treewalkingComponents  var_cas_inTreewalkingComponentMap,
                                GGS_M_filewrappers  &/* var_cas_ioFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  nt_semantics_declaration_begining_by_extern_importSemantics (_inLexique, var_cas_ioModelMap, var_cas_ioExternActionMap, var_cas_ioComponentSemanticsEntitiesMap, var_cas_tableNomRoutinesDeclarees, var_cas_tableEnAvant, var_cas_tableRoutinesAimplementer, var_cas_inTreewalkingComponentMap) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6011_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  nt_semantics_declaration_begining_by_extern_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_begining_by_extern'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_6059_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  GGS_lstring  var_cas_externTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_externTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_modifiersMap ;
  var_cas_modifiersMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap ;
  var_cas_readersInInstructionMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall ;
  var_cas_acceptAddAssignOperatorCall = GGS_bool (true, false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList ;
  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_externTypeConstructorMap  var_cas_constructorsMap ;
  var_cas_constructorsMap = GGS_M_externTypeConstructorMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_66 = true ;
    while (syntaxRepeat_66) {
      switch (select_repeat_semantics_parser_66 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
          GGS_lstring  var_cas_constructorName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_constructorName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList ;
          var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_67 = true ;
            while (syntaxRepeat_67) {
              switch (select_repeat_semantics_parser_67 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  var_cas_constructorArgumentTypesList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  } break ;
                default :
                  syntaxRepeat_67 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_constructorsMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList COMMA_SOURCE_FILE_AT_LINE (6101)) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          GGS_lstring  var_cas_methodName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
          var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_L_signature  var_cas_signatureForGrammarComponent ;
          nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_readersInInstructionMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6121)) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          switch (select_semantics_parser_68 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_methodName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_methodName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
              var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_L_signature  var_cas_signatureForGrammarComponent ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
              var_cas_modifiersMap.modifier_insertKey (_inLexique, var_cas_methodName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6141)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
              GGS_location  var_cas_errorLocation ;
              var_cas_errorLocation = GGS_location (_inLexique) ;
              { bool syntaxRepeat_69 = true ;
                while (syntaxRepeat_69) {
                  switch (select_repeat_semantics_parser_69 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                      var_cas_addAssignOperatorCallTypeList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      } break ;
                    default :
                      syntaxRepeat_69 = false ;
                      break ;
                  }
                }
              }
              if ((var_cas_acceptAddAssignOperatorCall).isBuiltAndTrue ()) {
                var_cas_errorLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'+=' operator is already defined") COMMA_SOURCE_FILE_AT_LINE (6161)) ;
              }else{
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true, true) ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_66 = false ;
          break ;
      }
    }
  }
  GGS_typeEntityToGenerate  var_cas_t ;
  var_cas_t = GGS_typeExternTypeToGenerate::constructor_new (_inLexique, var_cas_externTypeName, var_cas_constructorsMap, var_cas_modifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_t) ;
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasExternType::constructor_new (_inLexique, var_cas_externTypeName, var_cas_constructorsMap, var_cas_modifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (6188)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_6059_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  GGS_lstring  var_cas_externTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_externTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_EXmodifiersMap ;
  var_cas_EXmodifiersMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeTableMethodes  var_cas_readersInInstructionMap ;
  var_cas_readersInInstructionMap = GGS_typeTableMethodes::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_acceptAddAssignOperatorCall ;
  var_cas_acceptAddAssignOperatorCall = GGS_bool (true, false) ;
  GGS_typeListeAttributsSemantiques  var_cas_addAssignOperatorCallTypeList ;
  var_cas_addAssignOperatorCallTypeList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_externTypeConstructorMap  var_cas_EXconstructorsMap ;
  var_cas_EXconstructorsMap = GGS_M_externTypeConstructorMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_constructorMap  var_cas_constructorMap ;
  var_cas_constructorMap = GGS_constructorMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_readerMap  var_cas_readerMap ;
  var_cas_readerMap = GGS_readerMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_modifierMap  var_cas_modifierMap ;
  var_cas_modifierMap = GGS_modifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListModel  var_cas_addAssignFormalInputArgumentList ;
  var_cas_addAssignFormalInputArgumentList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_66 = true ;
    while (syntaxRepeat_66) {
      switch (select_repeat_semantics_parser_66 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
          GGS_lstring  var_cas_constructorName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_constructorName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_typeListeAttributsSemantiques  var_cas_constructorArgumentTypesList ;
          var_cas_constructorArgumentTypesList = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeListModel  var_cas_formalInputArgumentList ;
          var_cas_formalInputArgumentList = GGS_typeListModel::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_67 = true ;
            while (syntaxRepeat_67) {
              switch (select_repeat_semantics_parser_67 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  GGS_AC_galgasType  var_cas_type_semantique ;
                  GGS_lstring  var_cas_galgasTypeName ;
                  nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                  GGS_lstring  var_cas_parameterName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  var_cas_constructorArgumentTypesList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                  var_cas_formalInputArgumentList._addAssign_operation (var_cas_galgasTypeName) ;
                  } break ;
                default :
                  syntaxRepeat_67 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_EXconstructorsMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_constructorArgumentTypesList COMMA_SOURCE_FILE_AT_LINE (6238)) ;
          var_cas_constructorMap.modifier_insertKey (_inLexique, var_cas_constructorName, var_cas_formalInputArgumentList COMMA_SOURCE_FILE_AT_LINE (6239)) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          GGS_lstring  var_cas_readerName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_readerName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_listeDeTypes ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
          GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
          var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_L_signature  var_cas_signature ;
          nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_readersInInstructionMap.modifier_insertKey (_inLexique, var_cas_readerName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6259)) ;
          var_cas_readerMap.modifier_insertKey (_inLexique, var_cas_readerName, var_cas_signature COMMA_SOURCE_FILE_AT_LINE (6260)) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          switch (select_semantics_parser_68 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_modifierName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_modifierName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_L_EXsignature  var_cas_listeDeTypes ;
              GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
              GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
              var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
              GGS_L_signature  var_cas_signature ;
              nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
              var_cas_EXmodifiersMap.modifier_insertKey (_inLexique, var_cas_modifierName, var_cas_listeDeTypes COMMA_SOURCE_FILE_AT_LINE (6280)) ;
              var_cas_modifierMap.modifier_insertKey (_inLexique, var_cas_modifierName, var_cas_signature COMMA_SOURCE_FILE_AT_LINE (6281)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
              if (((var_cas_addAssignFormalInputArgumentList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (6284)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "'+=' operator is already defined") COMMA_SOURCE_FILE_AT_LINE (6285)) ;
              }else{
                var_cas_acceptAddAssignOperatorCall = GGS_bool (true, true) ;
              }
              { bool syntaxRepeat_69 = true ;
                while (syntaxRepeat_69) {
                  switch (select_repeat_semantics_parser_69 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                      GGS_AC_galgasType  var_cas_type_semantique ;
                      GGS_lstring  var_cas_galgasTypeName ;
                      nt_formal_argument_type_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_type_semantique, var_cas_tableEnAvant, var_cas_galgasTypeName) ;
                      GGS_lstring  var_cas_parameterName ;
                      _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                      var_cas_addAssignOperatorCallTypeList._addAssign_operation (var_cas_type_semantique, var_cas_parameterName) ;
                      var_cas_addAssignFormalInputArgumentList._addAssign_operation (var_cas_galgasTypeName) ;
                      } break ;
                    default :
                      syntaxRepeat_69 = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_66 = false ;
          break ;
      }
    }
  }
  GGS_AC_galgasType  var_cas_c ;
  var_cas_c = GGS_typeGalgasExternType::constructor_new (_inLexique, var_cas_externTypeName, var_cas_EXconstructorsMap, var_cas_EXmodifiersMap, var_cas_readersInInstructionMap, var_cas_acceptAddAssignOperatorCall, var_cas_addAssignOperatorCallTypeList COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_c COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (6318)) ;
  GGS_TypeModel  var_cas_t ;
  var_cas_t = GGS_ExternTypeModel::constructor_new (_inLexique, var_cas_constructorMap, var_cas_readerMap, var_cas_modifierMap, var_cas_addAssignFormalInputArgumentList COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_externTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (6320)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_6059_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_66 = true ;
    while (syntaxRepeat_66) {
      switch (select_repeat_semantics_parser_66 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          { bool syntaxRepeat_67 = true ;
            while (syntaxRepeat_67) {
              switch (select_repeat_semantics_parser_67 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  nt_formal_argument_type_parse (_inLexique) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_67 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          nt_formal_arguments_list_parse (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          switch (select_semantics_parser_68 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              nt_formal_arguments_list_parse (_inLexique) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3D) COMMA_HERE) ;
              { bool syntaxRepeat_69 = true ;
                while (syntaxRepeat_69) {
                  switch (select_repeat_semantics_parser_69 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                      nt_formal_argument_type_parse (_inLexique) ;
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_69 = false ;
                      break ;
                  }
                }
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_66 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_6328_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6335)) COMMA_SOURCE_FILE_AT_LINE (6335))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_inComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_inComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6337)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (6338)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (6338)) ;
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (6340)) ;
    }
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_6328_4_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_6328_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_6350_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6358)) COMMA_SOURCE_FILE_AT_LINE (6358))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_inComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_inComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6360)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (6361)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (6361)) ;
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (6363)) ;
    }
    GGS_typeGalgasUndefinedListType  var_cas_x ;
    var_cas_x = GGS_typeGalgasUndefinedListType::_castFrom (_inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (6364)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_6350_4_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_6350_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_6375_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6383)) COMMA_SOURCE_FILE_AT_LINE (6383))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_inComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_inComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6385)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (6386)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (6386)) ;
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (6388)) ;
    }
    GGS_typeGalgasUndefinedMapType  var_cas_x ;
    var_cas_x = GGS_typeGalgasUndefinedMapType::_castFrom (_inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (6389)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_6375_4_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_6375_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'formal_argument_type'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_6400_4_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                GGS_AC_galgasType  &var_cas_type_semantique,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  if ((var_cas_inComponentSemanticsEntitiesMap.reader_hasKey (_inLexique, var_cas_outGalgasTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6409)) COMMA_SOURCE_FILE_AT_LINE (6409))).isBuiltAndTrue ()) {
    GGS_AC_semanticsEntity  var_cas_entite ;
    if (var_cas_inComponentSemanticsEntitiesMap._isBuilt ()) {
      var_cas_inComponentSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6411)) ;
    }
    var_cas_type_semantique = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_entite.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (6412)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (6412)) ;
  }else{
    if (var_cas_tableEnAvant._isBuilt ()) {
      var_cas_tableEnAvant (HERE)->method_searchKey (_inLexique, var_cas_outGalgasTypeName, var_cas_type_semantique COMMA_SOURCE_FILE_AT_LINE (6414)) ;
    }
    GGS_typeGalgasUndefinedClassType  var_cas_x ;
    var_cas_x = GGS_typeGalgasUndefinedClassType::_castFrom (_inLexique, var_cas_type_semantique.getPtr (), true, var_cas_outGalgasTypeName COMMA_SOURCE_FILE_AT_LINE (6415)) ;
  }
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_formal_argument_type_semantics_parser_6400_4_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_lstring  &var_cas_outGalgasTypeName) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_outGalgasTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_formal_argument_type_semantics_parser_6400_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'semantics_declaration_begining_by_extern'*
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_6431_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_nomAction ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomAction) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signatureForGrammarComponent ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signatureForGrammarComponent) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteActionExterne::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_nomAction, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6456)) ;
  GGS_typeEntityToGenerate  var_cas_ea ;
  var_cas_ea = GGS_typeActionExterneAengendrer::constructor_new (_inLexique, var_cas_nomAction, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_ea) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_6431_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &var_cas_ioExternActionMap,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &var_cas_tableEnAvant,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_actionName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_L_EXsignature  var_cas_listeDeTypes ;
  GGS_typeVariablesMap  var_cas_tableArgumentsMethode ;
  var_cas_tableArgumentsMethode = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeTypesEtNomsArgMethode  var_cas_listeTypeEtNomsArguments ;
  GGS_L_signature  var_cas_signature ;
  nt_formal_arguments_list_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeDeTypes, var_cas_tableArgumentsMethode, var_cas_listeTypeEtNomsArguments, var_cas_tableEnAvant, var_cas_signature) ;
  GGS_AC_semanticsEntity  var_cas_entite ;
  var_cas_entite = GGS_typeEntiteActionExterne::constructor_new (_inLexique, var_cas_listeDeTypes COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_entite COMMA_SOURCE_FILE_AT_LINE (6485)) ;
  var_cas_ioExternActionMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_signature, GGS_bool (true, true) COMMA_SOURCE_FILE_AT_LINE (6486)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_begining_by_extern_semantics_parser_6431_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_formal_arguments_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_6496_4_ (galgas_scanner & _inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_M_filewrappers  &var_cas_ioFileWrappers) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  GGS_lstring  var_cas_enumTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_enumTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_enumConstantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_enumConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_70 = true ;
    while (syntaxRepeat_70) {
        GGS_bool var_cas_hasConstructor ;
        switch (select_semantics_parser_71 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
            var_cas_hasConstructor = GGS_bool (true, true) ;
            } break ;
          case 2 : {
            var_cas_hasConstructor = GGS_bool (true, false) ;
            } break ;
          default :
            break ;
        }
        { bool syntaxRepeat_72 = true ;
          while (syntaxRepeat_72) {
              GGS_lstring  var_cas_constantName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_constantName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_constantMap.modifier_insertKey (_inLexique, var_cas_constantName, var_cas_hasConstructor COMMA_SOURCE_FILE_AT_LINE (6524)) ;
            switch (select_repeat_semantics_parser_72 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_72 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_70 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_70 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeEnumMessageMap  var_cas_enumMessageMap ;
  var_cas_enumMessageMap = GGS_typeEnumMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumModifierMap  var_cas_modifierMap ;
  var_cas_modifierMap = GGS_enumModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumMethodMap  var_cas_methodMap ;
  var_cas_methodMap = GGS_enumMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_73 = true ;
    while (syntaxRepeat_73) {
      switch (select_repeat_semantics_parser_73 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          GGS_lstring  var_cas_actionName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_signature ;
          var_cas_signature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeVariablesMap  var_cas_localVariableMap ;
          var_cas_localVariableMap = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_argumentList ;
          var_cas_argumentList = GGS_typeListeTypesEtNomsArgMethode::constructor_emptyList (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_74 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              GGS_lstring  var_cas_typeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              if (((var_cas_typeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6550)))._operator_isNotEqual (GGS_string (true, "location"))).isBuiltAndTrue ()) {
                var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the type should be '@location'") COMMA_SOURCE_FILE_AT_LINE (6551)) ;
              }
              GGS_AC_galgasType  var_cas_type_semantique ;
              var_cas_type_semantique = GGS_typeGalgas_location::constructor_new (_inLexique COMMA_HERE) ;
              GGS_formalArgumentPassingMode var_cas_argumentConstantIn ;
              var_cas_argumentConstantIn = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
              switch (select_semantics_parser_75 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (6559)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6559)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true)) ;
                  var_cas_localVariableMap.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (6561)) ;
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (6565)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6565)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true)) ;
                  var_cas_localVariableMap.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (6567)) ;
                  } break ;
                default :
                  break ;
              }
              var_cas_signature._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_enumUsedConstantMap  var_cas_definedSourceMap ;
          var_cas_definedSourceMap = GGS_enumUsedConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_enumModifierDefinitionList  var_cas_enumActionDefinitionList ;
          var_cas_enumActionDefinitionList = GGS_enumModifierDefinitionList::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_76 = true ;
            while (syntaxRepeat_76) {
                GGS_lstring  var_cas_sourceName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_sourceName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_34 ;
                if (var_cas_constantMap._isBuilt ()) {
                  var_cas_constantMap (HERE)->method_searchKey (_inLexique, var_cas_sourceName, automatic_var_34 COMMA_SOURCE_FILE_AT_LINE (6577)) ;
                }
                var_cas_definedSourceMap.modifier_insertKey (_inLexique, var_cas_sourceName COMMA_SOURCE_FILE_AT_LINE (6578)) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                GGS_lstring  var_cas_targetName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_targetName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_35 ;
                if (var_cas_constantMap._isBuilt ()) {
                  var_cas_constantMap (HERE)->method_searchKey (_inLexique, var_cas_targetName, automatic_var_35 COMMA_SOURCE_FILE_AT_LINE (6582)) ;
                }
                GGS_typeInstructionList  var_cas_instructionList ;
                var_cas_instructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
                switch (select_semantics_parser_77 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioFileWrappers, var_cas_localVariableMap, var_cas_instructionList) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioFileWrappers, var_cas_localVariableMap, var_cas_instructionList) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_enumActionDefinitionList._addAssign_operation (var_cas_sourceName, var_cas_targetName, var_cas_instructionList) ;
              switch (select_repeat_semantics_parser_76 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_76 = false ;
                  break ;
              }
            }
          }
          GGS_enumConstantMap::cEnumerator enumerator_251835 (var_cas_constantMap, true) ;
          const GGS_enumConstantMap::cElement * operand_251835 = NULL ;
          while (((operand_251835 = (GGS_enumConstantMap::cElement *) enumerator_251835.nextObject ()))) {
            macroValidPointer (operand_251835) ;
            if (((var_cas_definedSourceMap.reader_hasKey (_inLexique, operand_251835->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6608)) COMMA_SOURCE_FILE_AT_LINE (6608)))._operator_not ()).isBuiltAndTrue ()) {
              GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "The '"))._operator_concat (operand_251835->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6609))))._operator_concat (GGS_string (true, "' is not handled")) COMMA_SOURCE_FILE_AT_LINE (6609)) ;
            }
          }
          enumerator_251835.reset () ;
          var_cas_modifierMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_enumActionDefinitionList, var_cas_signature, var_cas_argumentList COMMA_SOURCE_FILE_AT_LINE (6613)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          GGS_lstring  var_cas_actionName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_signature ;
          var_cas_signature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeVariablesMap  var_cas_localVariableMap ;
          var_cas_localVariableMap = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_argumentList ;
          var_cas_argumentList = GGS_typeListeTypesEtNomsArgMethode::constructor_emptyList (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_78 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              GGS_lstring  var_cas_typeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              if (((var_cas_typeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6627)))._operator_isNotEqual (GGS_string (true, "location"))).isBuiltAndTrue ()) {
                var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the type should be '@location'") COMMA_SOURCE_FILE_AT_LINE (6628)) ;
              }
              GGS_AC_galgasType  var_cas_type_semantique ;
              var_cas_type_semantique = GGS_typeGalgas_location::constructor_new (_inLexique COMMA_HERE) ;
              GGS_formalArgumentPassingMode var_cas_argumentConstantIn ;
              var_cas_argumentConstantIn = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
              switch (select_semantics_parser_79 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (6636)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6636)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true)) ;
                  var_cas_localVariableMap.modifier_insertUnusedConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (6638)) ;
                  } break ;
                case 2 : {
                  GGS_lstring  var_cas_nomArgument ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_nomArgument) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_typeCplusPlusName  var_cas_natureNom ;
                  var_cas_natureNom = GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_nomArgument.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (6642)), var_cas_nomArgument.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6642)) COMMA_HERE) ;
                  var_cas_argumentList._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn, var_cas_natureNom, GGS_bool (true, true)) ;
                  var_cas_localVariableMap.modifier_insertConstInArgument (_inLexique, var_cas_nomArgument, var_cas_type_semantique, var_cas_natureNom COMMA_SOURCE_FILE_AT_LINE (6644)) ;
                  } break ;
                default :
                  break ;
              }
              var_cas_signature._addAssign_operation (var_cas_type_semantique, var_cas_argumentConstantIn) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_enumUsedConstantMap  var_cas_definedSourceMap ;
          var_cas_definedSourceMap = GGS_enumUsedConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_enumMethodDefinitionList  var_cas_enumActionDefinitionList ;
          var_cas_enumActionDefinitionList = GGS_enumMethodDefinitionList::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_80 = true ;
            while (syntaxRepeat_80) {
                GGS_lstring  var_cas_sourceName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_sourceName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_36 ;
                if (var_cas_constantMap._isBuilt ()) {
                  var_cas_constantMap (HERE)->method_searchKey (_inLexique, var_cas_sourceName, automatic_var_36 COMMA_SOURCE_FILE_AT_LINE (6654)) ;
                }
                var_cas_definedSourceMap.modifier_insertKey (_inLexique, var_cas_sourceName COMMA_SOURCE_FILE_AT_LINE (6655)) ;
                GGS_typeInstructionList  var_cas_instructionList ;
                var_cas_instructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
                switch (select_semantics_parser_81 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioFileWrappers, var_cas_localVariableMap, var_cas_instructionList) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_ (_inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioFileWrappers, var_cas_localVariableMap, var_cas_instructionList) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_enumActionDefinitionList._addAssign_operation (var_cas_sourceName, var_cas_instructionList) ;
              switch (select_repeat_semantics_parser_80 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_80 = false ;
                  break ;
              }
            }
          }
          GGS_enumConstantMap::cEnumerator enumerator_254607 (var_cas_constantMap, true) ;
          const GGS_enumConstantMap::cElement * operand_254607 = NULL ;
          while (((operand_254607 = (GGS_enumConstantMap::cElement *) enumerator_254607.nextObject ()))) {
            macroValidPointer (operand_254607) ;
            if (((var_cas_definedSourceMap.reader_hasKey (_inLexique, operand_254607->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6681)) COMMA_SOURCE_FILE_AT_LINE (6681)))._operator_not ()).isBuiltAndTrue ()) {
              GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "The '"))._operator_concat (operand_254607->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6682))))._operator_concat (GGS_string (true, "' is not handled")) COMMA_SOURCE_FILE_AT_LINE (6682)) ;
            }
          }
          enumerator_254607.reset () ;
          var_cas_methodMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_enumActionDefinitionList, var_cas_signature, var_cas_argumentList COMMA_SOURCE_FILE_AT_LINE (6686)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
          GGS_lstring  var_cas_messageName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_typeEnumCstMessageStringMap  var_cas_cstMessageStringMap ;
          var_cas_cstMessageStringMap = GGS_typeEnumCstMessageStringMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_82 = true ;
            while (syntaxRepeat_82) {
                GGS_lstring  var_cas_cstName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_cstName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                GGS_lstring  var_cas_cstString ;
                _inLexique._assignFromAttribute_tokenString (var_cas_cstString) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                var_cas_cstMessageStringMap.modifier_insertKey (_inLexique, var_cas_cstName, var_cas_cstString COMMA_SOURCE_FILE_AT_LINE (6700)) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              switch (select_repeat_semantics_parser_82 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_82 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          GGS_L_lstringList  var_cas_messageStringList ;
          var_cas_messageStringList = GGS_L_lstringList::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_enumConstantMap::cEnumerator enumerator_255456 (var_cas_constantMap, true) ;
          const GGS_enumConstantMap::cElement * operand_255456 = NULL ;
          while (((operand_255456 = (GGS_enumConstantMap::cElement *) enumerator_255456.nextObject ()))) {
            macroValidPointer (operand_255456) ;
            GGS_lstring  var_cas_name ;
            var_cas_name = GGS_lstring::constructor_new (_inLexique, operand_255456->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (6708)), GGS_location (_inLexique) COMMA_HERE) ;
            GGS_lstring  var_cas_cstString ;
            if (var_cas_cstMessageStringMap._isBuilt ()) {
              var_cas_cstMessageStringMap (HERE)->method_searchKey (_inLexique, var_cas_name, var_cas_cstString COMMA_SOURCE_FILE_AT_LINE (6710)) ;
            }
            var_cas_messageStringList._addAssign_operation (var_cas_cstString) ;
          }
          enumerator_255456.reset () ;
          var_cas_enumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageStringList COMMA_SOURCE_FILE_AT_LINE (6714)) ;
          } break ;
        default :
          syntaxRepeat_73 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_typeEntityToGenerate  var_cas_e ;
  var_cas_e = GGS_enumGalgasType::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap, var_cas_modifierMap, var_cas_methodMap COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_e) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_enum::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_enumMessageMap, var_cas_modifierMap, var_cas_methodMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_ee ;
  var_cas_ee = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_ee COMMA_SOURCE_FILE_AT_LINE (6724)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
semantics_parser::
pr_semantics_declaration_semantics_parser_6496_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_ModelMap  &var_cas_ioModelMap,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                const GGS_M_treewalkingComponents  /* var_cas_inTreewalkingComponentMap */,
                                GGS_M_filewrappers  &/* var_cas_ioFileWrappers */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  GGS_lstring  var_cas_enumTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_enumTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_enumConstantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_enumConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_70 = true ;
    while (syntaxRepeat_70) {
        GGS_bool var_cas_hasConstructor ;
        switch (select_semantics_parser_71 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
            var_cas_hasConstructor = GGS_bool (true, true) ;
            } break ;
          case 2 : {
            var_cas_hasConstructor = GGS_bool (true, false) ;
            } break ;
          default :
            break ;
        }
        { bool syntaxRepeat_72 = true ;
          while (syntaxRepeat_72) {
              GGS_lstring  var_cas_constantName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_constantName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_constantMap.modifier_insertKey (_inLexique, var_cas_constantName, var_cas_hasConstructor COMMA_SOURCE_FILE_AT_LINE (6753)) ;
            switch (select_repeat_semantics_parser_72 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_72 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_70 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_70 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeEnumMessageMap  var_cas_exEnumMessageMap ;
  var_cas_exEnumMessageMap = GGS_typeEnumMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumModifierMap  var_cas_modifierMap ;
  var_cas_modifierMap = GGS_enumModifierMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumMethodMap  var_cas_methodMap ;
  var_cas_methodMap = GGS_enumMethodMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_enumMessageMap  var_cas_enumMessageMap ;
  var_cas_enumMessageMap = GGS_enumMessageMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_73 = true ;
    while (syntaxRepeat_73) {
      switch (select_repeat_semantics_parser_73 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          GGS_lstring  var_cas_actionName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_signature ;
          var_cas_signature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_argumentList ;
          var_cas_argumentList = GGS_typeListeTypesEtNomsArgMethode::constructor_emptyList (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_74 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              var_cas_signature._addAssign_operation (GGS_typeGalgas_location::constructor_new (_inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              GGS_lstring  var_cas_typeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              switch (select_semantics_parser_75 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_enumUsedConstantMap  var_cas_definedSourceMap ;
          var_cas_definedSourceMap = GGS_enumUsedConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_enumModifierDefinitionList  var_cas_enumActionDefinitionList ;
          var_cas_enumActionDefinitionList = GGS_enumModifierDefinitionList::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_76 = true ;
            while (syntaxRepeat_76) {
                GGS_lstring  var_cas_sourceName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_sourceName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_37 ;
                if (var_cas_constantMap._isBuilt ()) {
                  var_cas_constantMap (HERE)->method_searchKey (_inLexique, var_cas_sourceName, automatic_var_37 COMMA_SOURCE_FILE_AT_LINE (6793)) ;
                }
                var_cas_definedSourceMap.modifier_insertKey (_inLexique, var_cas_sourceName COMMA_SOURCE_FILE_AT_LINE (6794)) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                GGS_lstring  var_cas_targetName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_targetName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_38 ;
                if (var_cas_constantMap._isBuilt ()) {
                  var_cas_constantMap (HERE)->method_searchKey (_inLexique, var_cas_targetName, automatic_var_38 COMMA_SOURCE_FILE_AT_LINE (6798)) ;
                }
                switch (select_semantics_parser_77 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_parse (_inLexique) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_parse (_inLexique) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_enumActionDefinitionList._addAssign_operation (var_cas_sourceName, var_cas_targetName, GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE)) ;
              switch (select_repeat_semantics_parser_76 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_76 = false ;
                  break ;
              }
            }
          }
          var_cas_modifierMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_enumActionDefinitionList, var_cas_signature, var_cas_argumentList COMMA_SOURCE_FILE_AT_LINE (6810)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          GGS_lstring  var_cas_actionName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_actionName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_signature ;
          var_cas_signature = GGS_L_EXsignature::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_typeListeTypesEtNomsArgMethode  var_cas_argumentList ;
          var_cas_argumentList = GGS_typeListeTypesEtNomsArgMethode::constructor_emptyList (_inLexique COMMA_HERE) ;
          switch (select_semantics_parser_78 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              var_cas_signature._addAssign_operation (GGS_typeGalgas_location::constructor_new (_inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE)) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              GGS_lstring  var_cas_typeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              switch (select_semantics_parser_79 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          GGS_enumUsedConstantMap  var_cas_definedSourceMap ;
          var_cas_definedSourceMap = GGS_enumUsedConstantMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_enumMethodDefinitionList  var_cas_enumActionDefinitionList ;
          var_cas_enumActionDefinitionList = GGS_enumMethodDefinitionList::constructor_emptyList (_inLexique COMMA_HERE) ;
          { bool syntaxRepeat_80 = true ;
            while (syntaxRepeat_80) {
                GGS_lstring  var_cas_sourceName ;
                _inLexique._assignFromAttribute_tokenString (var_cas_sourceName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                GGS_bool automatic_var_39 ;
                if (var_cas_constantMap._isBuilt ()) {
                  var_cas_constantMap (HERE)->method_searchKey (_inLexique, var_cas_sourceName, automatic_var_39 COMMA_SOURCE_FILE_AT_LINE (6837)) ;
                }
                var_cas_definedSourceMap.modifier_insertKey (_inLexique, var_cas_sourceName COMMA_SOURCE_FILE_AT_LINE (6838)) ;
                switch (select_semantics_parser_81 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_parse (_inLexique) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_parse (_inLexique) ;
                    } break ;
                  default :
                    break ;
                }
                var_cas_enumActionDefinitionList._addAssign_operation (var_cas_sourceName, GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE)) ;
              switch (select_repeat_semantics_parser_80 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_80 = false ;
                  break ;
              }
            }
          }
          var_cas_methodMap.modifier_insertKey (_inLexique, var_cas_actionName, var_cas_enumActionDefinitionList, var_cas_signature, var_cas_argumentList COMMA_SOURCE_FILE_AT_LINE (6850)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
          GGS_lstring  var_cas_messageName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_messageName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_enumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName COMMA_SOURCE_FILE_AT_LINE (6857)) ;
          GGS_L_lstringList  var_cas_messageStringList ;
          var_cas_messageStringList = GGS_L_lstringList::constructor_emptyList (_inLexique COMMA_HERE) ;
          var_cas_exEnumMessageMap.modifier_insertKey (_inLexique, var_cas_messageName, var_cas_messageStringList COMMA_SOURCE_FILE_AT_LINE (6859)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          { bool syntaxRepeat_82 = true ;
            while (syntaxRepeat_82) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              switch (select_repeat_semantics_parser_82 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_82 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_73 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_enum::constructor_new (_inLexique, var_cas_enumTypeName, var_cas_constantMap, var_cas_exEnumMessageMap, var_cas_modifierMap, var_cas_methodMap COMMA_HERE) ;
  GGS_AC_semanticsEntity  var_cas_e ;
  var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_e COMMA_SOURCE_FILE_AT_LINE (6874)) ;
  GGS_TypeModel  var_cas_type ;
  var_cas_type = GGS_EnumModel::constructor_new (_inLexique, var_cas_constantMap, var_cas_enumMessageMap COMMA_HERE) ;
  var_cas_ioModelMap.modifier_insertKey (_inLexique, var_cas_enumTypeName, var_cas_type COMMA_SOURCE_FILE_AT_LINE (6876)) ;
}

//---------------------------------------------------------------------------*

void semantics_parser::
pr_semantics_declaration_semantics_parser_6496_4_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_70 = true ;
    while (syntaxRepeat_70) {
        switch (select_semantics_parser_71 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
            } break ;
          case 2 : {
            } break ;
          default :
            break ;
        }
        { bool syntaxRepeat_72 = true ;
          while (syntaxRepeat_72) {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            switch (select_repeat_semantics_parser_72 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_72 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      switch (select_repeat_semantics_parser_70 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_70 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_73 = true ;
    while (syntaxRepeat_73) {
      switch (select_repeat_semantics_parser_73 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_semantics_parser_74 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              switch (select_semantics_parser_75 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          { bool syntaxRepeat_76 = true ;
            while (syntaxRepeat_76) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                switch (select_semantics_parser_77 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_parse (_inLexique) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_parse (_inLexique) ;
                    } break ;
                  default :
                    break ;
                }
              switch (select_repeat_semantics_parser_76 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_76 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_semantics_parser_78 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
              switch (select_semantics_parser_79 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          { bool syntaxRepeat_80 = true ;
            while (syntaxRepeat_80) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                switch (select_semantics_parser_81 (_inLexique)) {
                  case 1 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
                    } break ;
                  case 2 : {
                    nt_error_instruction_parse (_inLexique) ;
                    } break ;
                  case 3 : {
                    nt_warning_instruction_parse (_inLexique) ;
                    } break ;
                  default :
                    break ;
                }
              switch (select_repeat_semantics_parser_80 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_80 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
          { bool syntaxRepeat_82 = true ;
            while (syntaxRepeat_82) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
              switch (select_repeat_semantics_parser_82 (_inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_82 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_73 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

