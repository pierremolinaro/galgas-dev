//---------------------------------------------------------------------------*
//                                                                           *
//                 File 'generateHeadersOfBuiltinTypes.cpp'                  *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     january 24th, 2010, at 19h45'27"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "generateHeadersOfBuiltinTypes.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "generateHeadersOfBuiltinTypes.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@builtinTypeAttributeList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_builtinTypeAttributeList::
elementOf_GGS_builtinTypeAttributeList (const GGS_string& argument_0,
                                const GGS_bool& argument_1,
                                const GGS_string& argument_2,
                                const GGS_bool& argument_3,
                                const GGS_string& argument_4
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mCppClassName (argument_0),
mIsPointer (argument_1),
mAttributeName (argument_2),
mUseReferenceForConstructor (argument_3),
mGetterName (argument_4) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_builtinTypeAttributeList::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_builtinTypeAttributeList * ptr = dynamic_cast <const elementOf_GGS_builtinTypeAttributeList *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mCppClassName.operator_isEqual (ptr->mCppClassName).boolValue ()
         && mIsPointer.operator_isEqual (ptr->mIsPointer).boolValue ()
         && mAttributeName.operator_isEqual (ptr->mAttributeName).boolValue ()
         && mUseReferenceForConstructor.operator_isEqual (ptr->mUseReferenceForConstructor).boolValue ()
         && mGetterName.operator_isEqual (ptr->mGetterName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_builtinTypeAttributeList::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mCppClassName.reader_description (inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mIsPointer.reader_description (inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mAttributeName.reader_description (inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mUseReferenceForConstructor.reader_description (inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mGetterName.reader_description (inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                     List '@builtinTypeAttributeList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptorEX kTypeDescriptor_GGS_builtinTypeAttributeList ("builtinTypeAttributeList", false, NULL) ;

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
internalAppendValues (const GGS_string& argument_0,
                    const GGS_bool& argument_1,
                    const GGS_string& argument_2,
                    const GGS_bool& argument_3,
                    const GGS_string& argument_4
                    COMMA_LOCATION_ARGS) {
  cElement * newElement = (cElement *) NULL ;
  macroMyNew (newElement, cElement (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4
                                COMMA_THERE)) ;
  internalAppendItem (newElement) ;
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
internalPrependValues (const GGS_string& argument_0,
                    const GGS_bool& argument_1,
                    const GGS_string& argument_2,
                    const GGS_bool& argument_3,
                    const GGS_string& argument_4
                    COMMA_LOCATION_ARGS) {
  cElement * newElement = (cElement *) NULL ;
  macroMyNew (newElement, cElement (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4
                                COMMA_THERE)) ;
  internalPrependItem (newElement) ;
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
addAssign_operation (const GGS_string& argument_0,
                                const GGS_bool& argument_1,
                                const GGS_string& argument_2,
                                const GGS_bool& argument_3,
                                const GGS_string& argument_4) {
  if (isBuilt ()&& argument_0.isBuilt ()&& argument_1.isBuilt ()&& argument_2.isBuilt ()&& argument_3.isBuilt ()&& argument_4.isBuilt ()) {
    insulateList () ;
    internalAppendValues (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_builtinTypeAttributeList GGS_builtinTypeAttributeList::
operator_concat (const GGS_builtinTypeAttributeList & inOperand) const {
  GGS_builtinTypeAttributeList result = * this ;
  result.dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
dotAssign_operation (const GGS_builtinTypeAttributeList inOperand) {
  if (isBuilt () && inOperand.isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        insulateList () ;
        elementOf_GGS_builtinTypeAttributeList * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_string p_0 = p->mCppClassName ;
          GGS_bool p_1 = p->mIsPointer ;
          GGS_string p_2 = p->mAttributeName ;
          GGS_bool p_3 = p->mUseReferenceForConstructor ;
          GGS_string p_4 = p->mGetterName ;
          internalAppendValues (p_0, p_1, p_2, p_3, p_4 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_string& argument_0,
                     const GGS_bool& argument_1,
                     const GGS_string& argument_2,
                     const GGS_bool& argument_3,
                     const GGS_string& argument_4
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt ()) {
    insulateList () ;
    internalPrependValues (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
insulateList (void) {
  if (isShared ()) {
    cElement * ptr = firstObject () ;
    alloc () ;
    while (ptr != NULL) {
      macroValidPointer (ptr) ;
      internalAppendValues (ptr->mCppClassName,
                                ptr->mIsPointer,
                                ptr->mAttributeName,
                                ptr->mUseReferenceForConstructor,
                                ptr->mGetterName
                                COMMA_HERE) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_builtinTypeAttributeList  GGS_builtinTypeAttributeList::
constructor_emptyList (void) {
  GGS_builtinTypeAttributeList result ;
  result.alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_builtinTypeAttributeList  GGS_builtinTypeAttributeList::
constructor_listWithValue (const GGS_string& argument_0,
                                const GGS_bool& argument_1,
                                const GGS_string& argument_2,
                                const GGS_bool& argument_3,
                                const GGS_string& argument_4) {
  GGS_builtinTypeAttributeList result ;
  result.alloc () ;
  result.addAssign_operation (argument_0, argument_1, argument_2, argument_3, argument_4) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
internalSubListWithRange (GGS_builtinTypeAttributeList & ioList,
                          const PMSInt32 inFirstIndex,
                          const PMSInt32 inCount) const {
  ioList.alloc () ;
  if (inCount > 0) {
    cElement * ptr = firstObject () ;
    for (PMSInt32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (ptr) ;
      ptr = ptr->nextObject () ;
    }
    for (PMSInt32 i=0 ; i<inCount ; i++) {
      macroValidPointer (ptr) ;
      ioList.addAssign_operation (ptr->mCppClassName, ptr->mIsPointer, ptr->mAttributeName, ptr->mUseReferenceForConstructor, ptr->mGetterName) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_builtinTypeAttributeList GGS_builtinTypeAttributeList::
reader_subListWithRange (C_Compiler & inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_builtinTypeAttributeList result ;
  if (isBuilt () && inFirstIndex.isBuilt () && inCount.isBuilt ()) {
    const PMSInt32 firstIndex = (PMSInt32) inFirstIndex.uintValue () ;
    const PMSInt32 rangeCount = (PMSInt32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_builtinTypeAttributeList GGS_builtinTypeAttributeList::
reader_subListFromIndex (C_Compiler & inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_builtinTypeAttributeList result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    const PMSInt32 startIndex = (PMSInt32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_builtinTypeAttributeList::
reader_description (const PMSInt32 inIndentation) const {
  return performDescription ("@builtinTypeAttributeList", inIndentation) ;
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
method_first (C_Compiler & inLexique,
              GGS_string& _out_0,
              GGS_bool& _out_1,
              GGS_string& _out_2,
              GGS_bool& _out_3,
              GGS_string& _out_4
              COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mCppClassName ;
    _out_1 = ptr->mIsPointer ;
    _out_2 = ptr->mAttributeName ;
    _out_3 = ptr->mUseReferenceForConstructor ;
    _out_4 = ptr->mGetterName ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
    _out_2.drop () ;
    _out_3.drop () ;
    _out_4.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
method_last (C_Compiler & inLexique,
             GGS_string& _out_0,
             GGS_bool& _out_1,
             GGS_string& _out_2,
             GGS_bool& _out_3,
             GGS_string& _out_4
             COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mCppClassName ;
    _out_1 = ptr->mIsPointer ;
    _out_2 = ptr->mAttributeName ;
    _out_3 = ptr->mUseReferenceForConstructor ;
    _out_4 = ptr->mGetterName ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
    _out_2.drop () ;
    _out_3.drop () ;
    _out_4.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
modifier_popFirst (C_Compiler & inLexique,
                 GGS_string& _out_0,
                 GGS_bool& _out_1,
                 GGS_string& _out_2,
                 GGS_bool& _out_3,
                 GGS_string& _out_4
                 COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mCppClassName ;
    _out_1 = ptr->mIsPointer ;
    _out_2 = ptr->mAttributeName ;
    _out_3 = ptr->mUseReferenceForConstructor ;
    _out_4 = ptr->mGetterName ;
    insulateList () ;
    internalRemoveFirst () ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
    _out_2.drop () ;
    _out_3.drop () ;
    _out_4.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
modifier_popLast (C_Compiler & inLexique,
                GGS_string& _out_0,
                GGS_bool& _out_1,
                GGS_string& _out_2,
                GGS_bool& _out_3,
                GGS_string& _out_4
                COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mCppClassName ;
    _out_1 = ptr->mIsPointer ;
    _out_2 = ptr->mAttributeName ;
    _out_3 = ptr->mUseReferenceForConstructor ;
    _out_4 = ptr->mGetterName ;
    insulateList () ;
    internalRemoveLast () ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
    _out_2.drop () ;
    _out_3.drop () ;
    _out_4.drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_string GGS_builtinTypeAttributeList::
reader_mCppClassNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mCppClassName ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_builtinTypeAttributeList::
reader_mIsPointerAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_bool result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mIsPointer ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_builtinTypeAttributeList::
reader_mAttributeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mAttributeName ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_builtinTypeAttributeList::
reader_mUseReferenceForConstructorAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_bool result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mUseReferenceForConstructor ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_builtinTypeAttributeList::
reader_mGetterNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mGetterName ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
modifier_setMCppClassNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mCppClassName = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
modifier_setMIsPointerAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mIsPointer = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
modifier_setMAttributeNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mAttributeName = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
modifier_setMUseReferenceForConstructorAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mUseReferenceForConstructor = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
modifier_setMGetterNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mGetterName = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_builtinTypeAttributeList::cEnumerator::_mCppClassName (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mCppClassName ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_bool & GGS_builtinTypeAttributeList::cEnumerator::_mIsPointer (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mIsPointer ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_builtinTypeAttributeList::cEnumerator::_mAttributeName (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mAttributeName ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_bool & GGS_builtinTypeAttributeList::cEnumerator::_mUseReferenceForConstructor (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mUseReferenceForConstructor ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_builtinTypeAttributeList::cEnumerator::_mGetterName (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mGetterName ;
}

//---------------------------------------------------------------------------*

GGS_object GGS_builtinTypeAttributeList::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_builtinTypeAttributeList * p = NULL ;
    macroMyNew (p, GGS_builtinTypeAttributeList (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_builtinTypeAttributeList GGS_builtinTypeAttributeList::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_builtinTypeAttributeList * p = dynamic_cast <const GGS_builtinTypeAttributeList *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_builtinTypeAttributeList, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptorEX * GGS_builtinTypeAttributeList::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_builtinTypeAttributeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category reader '@ACGalgasType.attributeDescriptionList'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__ACGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_ACGalgasType * operand_2869
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_2869 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@ACGalgasType.attributeDescriptionList' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__attributeDescriptionList> gDispatchTableForReader__ACGalgasType__attributeDescriptionList ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__attributeDescriptionList (typeCategoryReader__ACGalgasType__attributeDescriptionList inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__attributeDescriptionList.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__ACGalgasType_defaultReader_attributeDescriptionList (C_Compiler &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_builtinTypeAttributeList  () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__attributeDescriptionList
findCategoryReader__ACGalgasType__attributeDescriptionList (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__attributeDescriptionList result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__attributeDescriptionList.count ()) {
    result = gDispatchTableForReader__ACGalgasType__attributeDescriptionList (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__attributeDescriptionList (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__attributeDescriptionList.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_attributeDescriptionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@boolGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__boolGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_boolGalgasType * operand_3111
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_3111 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("bool"), GGS_bool (false), GGS_string ("mBoolValue"), GGS_bool (false), GGS_string ("boolValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@charGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__charGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_charGalgasType * operand_3417
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_3417 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("utf32"), GGS_bool (false), GGS_string ("mCharValue"), GGS_bool (false), GGS_string ("charValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@stringGalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__stringGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_stringGalgasType * operand_3726
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_3726 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("C_String"), GGS_bool (false), GGS_string ("mString"), GGS_bool (true), GGS_string ("stringValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@uintGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__uintGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_uintGalgasType * operand_4034
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_4034 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("PMUInt32"), GGS_bool (false), GGS_string ("mUIntValue"), GGS_bool (false), GGS_string ("uintValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@sintGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__sintGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_sintGalgasType * operand_4344
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_4344 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("PMSInt32"), GGS_bool (false), GGS_string ("mSIntValue"), GGS_bool (false), GGS_string ("sintValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@uint64GalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__uint64GalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_uint64GalgasType * operand_4656
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_4656 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("PMUInt64"), GGS_bool (false), GGS_string ("mUInt64Value"), GGS_bool (false), GGS_string ("uint64Value")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@sint64GalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__sint64GalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_sint64GalgasType * operand_4972
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_4972 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("PMSInt64"), GGS_bool (false), GGS_string ("mSInt64Value"), GGS_bool (false), GGS_string ("sint64Value")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@doubleGalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__doubleGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_doubleGalgasType * operand_5288
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_5288 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("double"), GGS_bool (false), GGS_string ("mDoubleValue"), GGS_bool (false), GGS_string ("doubleValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@locationGalgasType.attributeDescriptionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__locationGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_locationGalgasType * operand_5604
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_5604 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("C_LocationInSource"), GGS_bool (false), GGS_string ("mLocationInSource"), GGS_bool (true), GGS_string ("location")) ;
    var_cas_outList.addAssign_operation (GGS_string ("C_SourceTextInString"), GGS_bool (true), GGS_string ("mSourceText"), GGS_bool (false), GGS_string ("sourceText")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@objectGalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__objectGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_objectGalgasType * operand_6012
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_6012 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("AC_GALGAS__root"), GGS_bool (true), GGS_string ("mEmbeddedObject"), GGS_bool (false), GGS_string ("embeddedObject")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@typeGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__typeGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_typeGalgasType * operand_6338
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_6338 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("C_galgas_type_descriptor"), GGS_bool (true), GGS_string ("mTypeDescriptor"), GGS_bool (false), GGS_string ("embeddedTypeDescriptor")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@functionGalgasType.attributeDescriptionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__functionGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_functionGalgasType * operand_6685
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_6685 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("C_galgas_function_descriptor"), GGS_bool (true), GGS_string ("mFunctionDescriptor"), GGS_bool (false), GGS_string ("functionDescriptor")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@lstringGalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__lstringGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_lstringGalgasType * operand_7035
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_7035 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_string"), GGS_bool (true), GGS_string ("mString"), GGS_bool (false), GGS_string ("stringValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lcharGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__lcharGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_lcharGalgasType * operand_7426
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_7426 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_char"), GGS_bool (true), GGS_string ("mChar"), GGS_bool (false), GGS_string ("charValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@luintGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__luintGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_luintGalgasType * operand_7811
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_7811 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_uint"), GGS_bool (true), GGS_string ("mUInt"), GGS_bool (false), GGS_string ("uintValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lsintGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__lsintGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_lsintGalgasType * operand_8196
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_8196 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_sint"), GGS_bool (true), GGS_string ("mSInt"), GGS_bool (false), GGS_string ("sintValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@luint64GalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__luint64GalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_luint64GalgasType * operand_8583
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_8583 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_uint_36__34_"), GGS_bool (true), GGS_string ("mUInt64"), GGS_bool (false), GGS_string ("uint64Value")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@lsint64GalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__lsint64GalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_lsint64GalgasType * operand_8982
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_8982 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_sint_36__34_"), GGS_bool (true), GGS_string ("mSInt64"), GGS_bool (false), GGS_string ("sint64Value")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lboolGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__lboolGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_lboolGalgasType * operand_9379
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_9379 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_bool"), GGS_bool (true), GGS_string ("mBool"), GGS_bool (false), GGS_string ("boolValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@ldoubleGalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__ldoubleGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_ldoubleGalgasType * operand_9766
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_9766 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_double"), GGS_bool (true), GGS_string ("mDouble"), GGS_bool (false), GGS_string ("doubleValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@binarysetGalgasType.attributeDescriptionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__binarysetGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_binarysetGalgasType * operand_10161
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_10161 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("C_BDD"), GGS_bool (false), GGS_string ("mBDD"), GGS_bool (true), GGS_string ("bdd")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@dataGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__dataGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_dataGalgasType * operand_10455
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_10455 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("uint8UniqueArray"), GGS_bool (false), GGS_string ("mData"), GGS_bool (true), GGS_string ("")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category reader '@ACGalgasType.generate_new_constructor'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__ACGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_ACGalgasType * operand_11059
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_11059 != NULL) {
    var_cas_outGenerate = GGS_bool (true) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@ACGalgasType.generate_new_constructor' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__generate_new_constructor> gDispatchTableForReader__ACGalgasType__generate_new_constructor ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__generate_new_constructor (typeCategoryReader__ACGalgasType__generate_new_constructor inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__generate_new_constructor.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_bool
category_reader__ACGalgasType_defaultReader_generate_new_constructor (C_Compiler &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_bool () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__generate_new_constructor
findCategoryReader__ACGalgasType__generate_new_constructor (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__generate_new_constructor result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__generate_new_constructor.count ()) {
    result = gDispatchTableForReader__ACGalgasType__generate_new_constructor (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__generate_new_constructor (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__generate_new_constructor.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_generate_new_constructor ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@lstringGalgasType.generate_new_constructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__lstringGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_lstringGalgasType * operand_11259
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_11259 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lboolGalgasType.generate_new_constructor'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__lboolGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_lboolGalgasType * operand_11459
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_11459 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lcharGalgasType.generate_new_constructor'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__lcharGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_lcharGalgasType * operand_11659
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_11659 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@luintGalgasType.generate_new_constructor'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__luintGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_luintGalgasType * operand_11859
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_11859 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lsintGalgasType.generate_new_constructor'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__lsintGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_lsintGalgasType * operand_12059
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_12059 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@luint64GalgasType.generate_new_constructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__luint64GalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_luint64GalgasType * operand_12261
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_12261 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@lsint64GalgasType.generate_new_constructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__lsint64GalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_lsint64GalgasType * operand_12463
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_12463 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@ldoubleGalgasType.generate_new_constructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__ldoubleGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_ldoubleGalgasType * operand_12665
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_12665 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@stringsetGalgasType.generate_new_constructor'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__stringsetGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_stringsetGalgasType * operand_12869
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_12869 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of wrapper 'builtinTypeGenerationTemplate'          *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_builtinTypeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_builtinTypeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_builtinTypeGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_builtinTypeGenerationTemplate_0,
  0,
  gWrapperAllDirectories_builtinTypeGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'primitiveTypeHeader' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_primitiveTypeHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_ACGalgasType & var_cas_TYPE) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " ;\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "class GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " : public AC_GALGAS__root {\n"
      "//--------------------------------- Native constructor\n"
      "  protected : GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " (" ;
    const GGS_string var_cas_COL_00 = GGS_string::stringWithColumnCount (result) ;
    GGS_builtinTypeAttributeList::cEnumerator enumerator_745 ((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (15))), true) ;
    const GGS_builtinTypeAttributeList::cElement * operand_745 = NULL ;
    while (((operand_745 = enumerator_745.nextObject ()))) {
      macroValidPointer (operand_745) ;
      result << "const " ;
      result << operand_745->mCppClassName ;
      if (operand_745->mIsPointer.boolValue ()) {
        result << " *" ;
      }else {
      }
      if (operand_745->mUseReferenceForConstructor.boolValue ()) {
        result << " &" ;
      }else {
      }
      result << " inOperand_" ;
      result << operand_745->mAttributeName ;
      if (enumerator_745.hasNextObject ()) {
        result << ",\n" ;
        result << var_cas_COL_00 ;
      }
    }
    if (((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (19))).reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
      result << "LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
      result << "\n" ;
      result << var_cas_COL_00 ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }
    if ((findCategoryReader__ACGalgasType__generate_new_constructor (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (25))).boolValue ()) {
      result << "  public : static GALGAS_" ;
      result << var_cas_TYPE_NAME ;
      result << " * constructor_new (" ;
      const GGS_string var_cas_COL_01 = GGS_string::stringWithColumnCount (result) ;
      GGS_builtinTypeAttributeList::cEnumerator enumerator_1205 ((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (27))), true) ;
      const GGS_builtinTypeAttributeList::cElement * operand_1205 = NULL ;
      while (((operand_1205 = enumerator_1205.nextObject ()))) {
        macroValidPointer (operand_1205) ;
        result << "const " ;
        result << operand_1205->mCppClassName ;
        if (operand_1205->mIsPointer.boolValue ()) {
          result << " *" ;
        }else {
        }
        if (operand_1205->mUseReferenceForConstructor.boolValue ()) {
          result << " &" ;
        }else {
        }
        result << " inOperand_" ;
        result << operand_1205->mAttributeName ;
        if (enumerator_1205.hasNextObject ()) {
          result << ",\n" ;
          result << var_cas_COL_01 ;
        }
      }
      result << "\n" ;
      result << var_cas_COL_01 ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    GGS_constructorMap::cEnumerator enumerator_1464 ((findCategoryReader__ACGalgasType__constructorMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (34))), true) ;
    const GGS_constructorMap::cElement * operand_1464 = NULL ;
    if (enumerator_1464.hasCurrentObject ()) {
      result << "//--------------------------------- GALGAS constructors\n" ;
      while (((operand_1464 = enumerator_1464.nextObject ()))) {
        macroValidPointer (operand_1464) ;
        result << "  public : static GALGAS_" ;
        result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_1464->mInfo.mReturnedType (HERE)->galgasRTTI ()) (inLexique, operand_1464->mInfo.mReturnedType.getPtr () COMMA_SOURCE_FILE_AT_LINE (37))) ;
        result << " * constructor_" ;
        result << operand_1464->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
        result << " (" ;
        const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
        GGS_typeList::cEnumerator enumerator_1675 (operand_1464->mInfo.mArgumentTypeList, true) ;
        const GGS_typeList::cElement * operand_1675 = NULL ;
        { GGS_uint var_cas_IDX (true, 0) ;
      while (((operand_1675 = enumerator_1675.nextObject ()))) {
        macroValidPointer (operand_1675) ;
        result << "const GALGAS_" ;
        result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_1675->mType (HERE)->galgasRTTI ()) (inLexique, operand_1675->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (39))) ;
        result << " * inOperand" ;
        result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
        if (enumerator_1675.hasNextObject ()) {
          result << ",\n" ;
          result << var_cas_COL ;
        }
        var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
      }
    }
    if ((operand_1464->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
      if (operand_1464->mInfo.mHasLexique.boolValue ()) {
        result << "C_Compiler * inCompiler\n" ;
        result << var_cas_COL ;
        result << "COMMA_LOCATION_ARGS" ;
      }else {
        result << "LOCATION_ARGS" ;
      }
    }else {
      if (operand_1464->mInfo.mHasLexique.boolValue ()) {
        result << ",\n" ;
        result << var_cas_COL ;
        result << "C_Compiler * inCompiler\n" ;
        result << var_cas_COL ;
        result << "COMMA_LOCATION_ARGS" ;
      }else {
        result << "\n" ;
        result << var_cas_COL ;
        result << "COMMA_LOCATION_ARGS" ;
      }
    }
    result << ") ;\n"
      "\n" ;
  }
}
result << "\n"
  "//--------------------------------- No copy\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "\n"
  "//--------------------------------- Implementation of reader 'description'\n"
  "  public : virtual void description (C_String & ioString,\n"
  "                                     const PMSInt32 inIndentation) const ;\n"
  "\n"
  "//--------------------------------- Modifiers\n" ;
GGS_modifierMap::cEnumerator enumerator_2642 ((findCategoryReader__ACGalgasType__modifierMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (69))), true) ;
const GGS_modifierMap::cElement * operand_2642 = NULL ;
while (((operand_2642 = enumerator_2642.nextObject ()))) {
  macroValidPointer (operand_2642) ;
  result << "  protected : void modifier_" ;
  result << operand_2642->mKey.ggs_string ().reader_identifierRepresentation () ;
  result << " (" ;
  const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
  GGS_formalParameterSignature::cEnumerator enumerator_2742 (operand_2642->mInfo.mParameterList, true) ;
  const GGS_formalParameterSignature::cElement * operand_2742 = NULL ;
  { GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2742 = enumerator_2742.nextObject ()))) {
  macroValidPointer (operand_2742) ;
  if ((operand_2742->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
    result << "const GALGAS_" ;
    result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_2742->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_2742->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (73))) ;
    result << " * inArgument" ;
    result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (73)) ;
  }else if ((operand_2742->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
    result << "GALGAS_" ;
    result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_2742->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_2742->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (75))) ;
    result << " * & ioArgument" ;
    result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (75)) ;
  }else if ((operand_2742->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
    result << "GALGAS_" ;
    result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_2742->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_2742->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (77))) ;
    result << " * & outArgument" ;
    result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (77)) ;
  }else {
    result << "GALGAS_" ;
    result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_2742->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_2742->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (79))) ;
    result << " * inArgument" ;
    result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (79)) ;
  }
  if (enumerator_2742.hasNextObject ()) {
    result << ",\n" ;
    result << var_cas_COL ;
  }
  var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_2642->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_2642->mInfo.mHasCompilerArgument.boolValue ()) {
  result << "C_Compiler * inCompiler\n" ;
  result << var_cas_COL ;
  result << "COMMA_LOCATION_ARGS" ;
}else {
  result << var_cas_COL ;
  result << "LOCATION_ARGS" ;
}
}else {
if (operand_2642->mInfo.mHasCompilerArgument.boolValue ()) {
  result << ",\n" ;
  result << var_cas_COL ;
  result << "C_Compiler * inCompiler\n" ;
  result << var_cas_COL ;
  result << "COMMA_LOCATION_ARGS" ;
}else {
  result << "\n" ;
  result << var_cas_COL ;
  result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Instance Methods\n" ;
GGS_modifierMap::cEnumerator enumerator_3954 ((findCategoryReader__ACGalgasType__instanceMethodMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (103))), true) ;
const GGS_modifierMap::cElement * operand_3954 = NULL ;
while (((operand_3954 = enumerator_3954.nextObject ()))) {
macroValidPointer (operand_3954) ;
result << "  protected : void method_" ;
result << operand_3954->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
GGS_formalParameterSignature::cEnumerator enumerator_4052 (operand_3954->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_4052 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4052 = enumerator_4052.nextObject ()))) {
macroValidPointer (operand_4052) ;
if ((operand_4052->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_4052->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_4052->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (107))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (107)) ;
}else if ((operand_4052->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_4052->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_4052->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (109))) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (109)) ;
}else if ((operand_4052->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_4052->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_4052->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (111))) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (111)) ;
}else {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_4052->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_4052->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (113))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (113)) ;
}
if (enumerator_4052.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_3954->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_3954->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << var_cas_COL ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_3954->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Class Methods\n" ;
GGS_modifierMap::cEnumerator enumerator_5264 ((findCategoryReader__ACGalgasType__classMethodMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (137))), true) ;
const GGS_modifierMap::cElement * operand_5264 = NULL ;
while (((operand_5264 = enumerator_5264.nextObject ()))) {
macroValidPointer (operand_5264) ;
result << "  public : static void class_method_" ;
result << operand_5264->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
GGS_formalParameterSignature::cEnumerator enumerator_5372 (operand_5264->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_5372 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5372 = enumerator_5372.nextObject ()))) {
macroValidPointer (operand_5372) ;
if ((operand_5372->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_5372->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_5372->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (141))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (141)) ;
}else if ((operand_5372->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_5372->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_5372->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (143))) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (143)) ;
}else if ((operand_5372->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_5372->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_5372->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (145))) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (145)) ;
}else {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_5372->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_5372->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (147))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
}
if (enumerator_5372.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_5264->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_5264->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << var_cas_COL ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_5264->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Readers\n" ;
GGS_readerMap::cEnumerator enumerator_6567 ((findCategoryReader__ACGalgasType__readerMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (171))), true) ;
const GGS_readerMap::cElement * operand_6567 = NULL ;
while (((operand_6567 = enumerator_6567.nextObject ()))) {
macroValidPointer (operand_6567) ;
if ((operand_6567->mInfo.mQualifier).operator_isNotEqual (GGS_readerQualifier::constructor_isInherited (inLexique COMMA_HERE)).boolValue ()) {
result << "  protected : virtual GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_6567->mInfo.mReturnedType (HERE)->galgasRTTI ()) (inLexique, operand_6567->mInfo.mReturnedType.getPtr () COMMA_SOURCE_FILE_AT_LINE (173))) ;
result << " * reader_" ;
result << operand_6567->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (173)) ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
GGS_typeList::cEnumerator enumerator_6779 (operand_6567->mInfo.mArgumentTypeList, true) ;
const GGS_typeList::cElement * operand_6779 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6779 = enumerator_6779.nextObject ()))) {
macroValidPointer (operand_6779) ;
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_6779->mType (HERE)->galgasRTTI ()) (inLexique, operand_6779->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (175))) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
if (enumerator_6779.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_6567->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_6567->mInfo.mHasLexiqueArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else {
if (operand_6567->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const" ;
if ((operand_6567->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isAbstract (inLexique COMMA_HERE)).boolValue ()) {
result << " = 0" ;
}else {
}
result << " ;\n"
  "\n" ;
}else {
}
}
if ((findCategoryReader__ACGalgasType__accept_and_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (199))).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_and (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_or_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (206))).boolValue ()) {
result << "//--------------------------------- | operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_or (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_xor_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (213))).boolValue ()) {
result << "//--------------------------------- ^ operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_xor (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_not_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (220))).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_not (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_tilde_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (226))).boolValue ()) {
result << "//--------------------------------- ~ operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_tilde (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
result << "//--------------------------------- Comparison\n"
  "  public : static GALGAS_bool * operator_isEqual (" ;
const GGS_string var_cas_COL_A = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL_A ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL_A ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_isNotEqual (" ;
const GGS_string var_cas_COL_B = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL_B ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL_B ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
if ((findCategoryReader__ACGalgasType__isComparable (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (241))).boolValue ()) {
result << "  public : static GALGAS_bool * operator_infOrEqual (" ;
const GGS_string var_cas_COL3 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL3 ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL3 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_supOrEqual (" ;
const GGS_string var_cas_COL4 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL4 ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL4 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_strictInf (" ;
const GGS_string var_cas_COL5 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL5 ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL5 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_strictSup (" ;
const GGS_string var_cas_COL6 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL6 ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL6 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
result << "  public : virtual PMSInt32 compareForSortedList (const AC_GALGAS__root * inOperand\n"
  "                                                   COMMA_LOCATION_ARGS) const ;\n"
  "\n"
  "//--- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n" ;
if ((findCategoryReader__ACGalgasType__accept_concat_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (268))).boolValue ()) {
result << "//--------------------------------- . (concat) operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_concat (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_add_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (275))).boolValue ()) {
result << "//--------------------------------- + operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * add_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_sub_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (283))).boolValue ()) {
result << "//--------------------------------- - operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * substract_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_mul_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (291))).boolValue ()) {
result << "//--------------------------------- * operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * multiply_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_div_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (299))).boolValue ()) {
result << "//--------------------------------- / operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * divide_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_mod_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (307))).boolValue ()) {
result << "//--------------------------------- mod operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * modulo_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_unary_minus_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (315))).boolValue ()) {
result << "//--------------------------------- unary - operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_unary_minus (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_inc_dec_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (322))).boolValue ()) {
result << "//--------------------------------- ++, -- operators\n"
  "  public : static void increment_operation (" ;
const GGS_string var_cas_COL1 = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioOperand,\n" ;
result << var_cas_COL1 ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL1 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static void decrement_operation (" ;
const GGS_string var_cas_COL2 = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioOperand,\n" ;
result << var_cas_COL2 ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL2 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_shift_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (332))).boolValue ()) {
result << "//--------------------------------- << and >> shift operators\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * left_shift_operation (" ;
const GGS_string var_cas_COL1 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand,\n" ;
result << var_cas_COL1 ;
result << "const GALGAS_uint * inShiftOperand,\n" ;
result << var_cas_COL1 ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL1 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * right_shift_operation (" ;
const GGS_string var_cas_COL2 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand,\n" ;
result << var_cas_COL2 ;
result << "const GALGAS_uint * inShiftOperand,\n" ;
result << var_cas_COL2 ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL2 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_append_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (345))).boolValue ()) {
result << "//--------------------------------- Append operator\n"
  "  protected : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * dotAssign_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((((findCategoryReader__ACGalgasType__accept_inc_dec_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (352)))).operator_or ((findCategoryReader__ACGalgasType__accept_append_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (352))))).operator_or (((findCategoryReader__ACGalgasType__modifierMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (352))).reader_count ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//--------------------------------- Modifier utility method\n"
  "  protected : static void insulate (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioOperand\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
result << "//--------------------------------- Private data member\n" ;
GGS_builtinTypeAttributeList::cEnumerator enumerator_14515 ((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (359))), true) ;
const GGS_builtinTypeAttributeList::cElement * operand_14515 = NULL ;
while (((operand_14515 = enumerator_14515.nextObject ()))) {
macroValidPointer (operand_14515) ;
result << "  private : " ;
if (operand_14515->mIsPointer.boolValue ()) {
result << "const " ;
}else {
}
result << operand_14515->mCppClassName ;
result << " " ;
if (operand_14515->mIsPointer.boolValue ()) {
result << "* " ;
}else {
}
result << operand_14515->mAttributeName ;
result << " ;\n" ;
if ((operand_14515->mGetterName.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "  public : inline " ;
if (operand_14515->mIsPointer.boolValue ()) {
result << "const " ;
}else {
}
result << operand_14515->mCppClassName ;
result << " " ;
if (operand_14515->mIsPointer.boolValue ()) {
result << " * " ;
}else {
}
result << operand_14515->mGetterName ;
result << " (void) const { return " ;
result << operand_14515->mAttributeName ;
result << " ; }\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Instance Method Invocation\n"
  "\n" ;
GGS_modifierMap::cEnumerator enumerator_14970 ((findCategoryReader__ACGalgasType__instanceMethodMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (367))), true) ;
const GGS_modifierMap::cElement * operand_14970 = NULL ;
while (((operand_14970 = enumerator_14970.nextObject ()))) {
macroValidPointer (operand_14970) ;
result << "  friend inline void method_" ;
result << operand_14970->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inObject" ;
GGS_formalParameterSignature::cEnumerator enumerator_15102 (operand_14970->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_15102 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_15102 = enumerator_15102.nextObject ()))) {
macroValidPointer (operand_15102) ;
result << ",\n" ;
result << var_cas_COL ;
if ((operand_15102->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_15102->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_15102->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (372))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (372)) ;
}else if ((operand_15102->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_15102->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_15102->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (374))) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (374)) ;
}else if ((operand_15102->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_15102->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_15102->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (376))) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (376)) ;
}else {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_15102->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_15102->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (378))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (378)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_14970->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}
result << "//--------------------------------- Modifier invocation\n" ;
GGS_modifierMap::cEnumerator enumerator_16091 ((findCategoryReader__ACGalgasType__modifierMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (390))), true) ;
const GGS_modifierMap::cElement * operand_16091 = NULL ;
while (((operand_16091 = enumerator_16091.nextObject ()))) {
macroValidPointer (operand_16091) ;
result << "  friend inline void modifier_" ;
result << operand_16091->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_formalParameterSignature::cEnumerator enumerator_16227 (operand_16091->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_16227 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_16227 = enumerator_16227.nextObject ()))) {
macroValidPointer (operand_16227) ;
result << ",\n" ;
result << var_cas_COL ;
if ((operand_16227->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_16227->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_16227->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (395))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (395)) ;
}else if ((operand_16227->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_16227->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_16227->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (397))) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (397)) ;
}else if ((operand_16227->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_16227->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_16227->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (399))) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (399)) ;
}else {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_16227->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_16227->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (401))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (401)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_16091->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}
result << "//--------------------------------- Reader invocation\n" ;
GGS_readerMap::cEnumerator enumerator_17212 ((findCategoryReader__ACGalgasType__readerMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (413))), true) ;
const GGS_readerMap::cElement * operand_17212 = NULL ;
while (((operand_17212 = enumerator_17212.nextObject ()))) {
macroValidPointer (operand_17212) ;
if ((operand_17212->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_HERE)).boolValue ()) {
result << "  friend inline GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_17212->mInfo.mReturnedType (HERE)->galgasRTTI ()) (inLexique, operand_17212->mInfo.mReturnedType.getPtr () COMMA_SOURCE_FILE_AT_LINE (415))) ;
result << " * reader_" ;
result << operand_17212->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (415)) ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inObject" ;
GGS_typeList::cEnumerator enumerator_17457 (operand_17212->mInfo.mArgumentTypeList, true) ;
const GGS_typeList::cElement * operand_17457 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_17457 = enumerator_17457.nextObject ()))) {
macroValidPointer (operand_17457) ;
result << ",\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_17457->mType (HERE)->galgasRTTI ()) (inLexique, operand_17457->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (418))) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (418)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_17212->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "} ;\n"
  "\n" ;
GGS_readerMap::cEnumerator enumerator_17808 ((findCategoryReader__ACGalgasType__readerMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (430))), true) ;
const GGS_readerMap::cElement * operand_17808 = NULL ;
while (((operand_17808 = enumerator_17808.nextObject ()))) {
macroValidPointer (operand_17808) ;
if ((operand_17808->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_HERE)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "inline GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_17808->mInfo.mReturnedType (HERE)->galgasRTTI ()) (inLexique, operand_17808->mInfo.mReturnedType.getPtr () COMMA_SOURCE_FILE_AT_LINE (433))) ;
result << " * reader_" ;
result << operand_17808->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (433)) ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inObject" ;
GGS_typeList::cEnumerator enumerator_18133 (operand_17808->mInfo.mArgumentTypeList, true) ;
const GGS_typeList::cElement * operand_18133 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_18133 = enumerator_18133.nextObject ()))) {
macroValidPointer (operand_18133) ;
result << ",\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_18133->mType (HERE)->galgasRTTI ()) (inLexique, operand_18133->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (436))) ;
result << " * inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (436)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_17808->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_17808->mInfo.mReturnedType (HERE)->galgasRTTI ()) (inLexique, operand_17808->mInfo.mReturnedType.getPtr () COMMA_SOURCE_FILE_AT_LINE (444))) ;
result << " * result = NULL ;\n"
  "  if (inObject != NULL) {\n"
  "    result = inObject->reader_" ;
result << operand_17808->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (446)) ;
result << " (" ;
GGS_typeList::cEnumerator enumerator_18636 (operand_17808->mInfo.mArgumentTypeList, true) ;
const GGS_typeList::cElement * operand_18636 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_18636 = enumerator_18636.nextObject ()))) {
macroValidPointer (operand_18636) ;
result << "inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (448)) ;
if (enumerator_18636.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_17808->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_17808->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_17808->mInfo.mHasLexiqueArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
}
GGS_modifierMap::cEnumerator enumerator_19107 ((findCategoryReader__ACGalgasType__modifierMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (470))), true) ;
const GGS_modifierMap::cElement * operand_19107 = NULL ;
while (((operand_19107 = enumerator_19107.nextObject ()))) {
macroValidPointer (operand_19107) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "inline void modifier_" ;
result << operand_19107->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_formalParameterSignature::cEnumerator enumerator_19321 (operand_19107->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_19321 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_19321 = enumerator_19321.nextObject ()))) {
macroValidPointer (operand_19321) ;
result << ",\n" ;
result << var_cas_COL ;
if ((operand_19321->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_19321->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_19321->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (476))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (476)) ;
}else if ((operand_19321->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_19321->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_19321->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (478))) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (478)) ;
}else if ((operand_19321->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_19321->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_19321->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (480))) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (480)) ;
}else {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_19321->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_19321->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (482))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (482)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_19107->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    ioResult->modifier_" ;
result << operand_19107->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_20378 (operand_19107->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_20378 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_20378 = enumerator_20378.nextObject ()))) {
macroValidPointer (operand_20378) ;
if ((operand_20378->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (497)) ;
}else if ((operand_20378->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (499)) ;
}else if ((operand_20378->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (501)) ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (503)) ;
}
if (enumerator_20378.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_19107->mInfo.mParameterList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_19107->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_19107->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;  \n"
  "  }\n"
  "}\n"
  "\n" ;
}
GGS_modifierMap::cEnumerator enumerator_21180 ((findCategoryReader__ACGalgasType__instanceMethodMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (525))), true) ;
const GGS_modifierMap::cElement * operand_21180 = NULL ;
while (((operand_21180 = enumerator_21180.nextObject ()))) {
macroValidPointer (operand_21180) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "inline void method_" ;
result << operand_21180->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inObject" ;
GGS_formalParameterSignature::cEnumerator enumerator_21390 (operand_21180->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_21390 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_21390 = enumerator_21390.nextObject ()))) {
macroValidPointer (operand_21390) ;
result << ",\n" ;
result << var_cas_COL ;
if ((operand_21390->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_21390->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_21390->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (531))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (531)) ;
}else if ((operand_21390->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_21390->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_21390->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (533))) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (533)) ;
}else if ((operand_21390->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_21390->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_21390->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (535))) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (535)) ;
}else {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_21390->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_21390->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (537))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (537)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_21180->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "\n"
  "  if (inObject != NULL) {\n"
  "    macroRetainObjectThere (inObject) ;\n"
  "    inObject->method_" ;
result << operand_21180->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_22426 (operand_21180->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_22426 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_22426 = enumerator_22426.nextObject ()))) {
macroValidPointer (operand_22426) ;
if ((operand_22426->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (552)) ;
}else if ((operand_22426->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (554)) ;
}else if ((operand_22426->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (556)) ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (558)) ;
}
if (enumerator_22426.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_21180->mInfo.mParameterList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_21180->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_21180->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;  \n"
  "    macroReleaseObjectThere (inObject) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'primitiveTypeImplementation' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_primitiveTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_ACGalgasType & var_cas_TYPE) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (\"" ;
result << (findCategoryReader__ACGalgasType__typeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (7))) ;
result << "\", NULL) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " ;\n"
  "}\n" ;
if ((findCategoryReader__ACGalgasType__generate_new_constructor (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (14))).boolValue ()) {
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_new (" ;
const GGS_string var_cas_COL_01 = GGS_string::stringWithColumnCount (result) ;
GGS_builtinTypeAttributeList::cEnumerator enumerator_942 ((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (18))), true) ;
const GGS_builtinTypeAttributeList::cElement * operand_942 = NULL ;
while (((operand_942 = enumerator_942.nextObject ()))) {
macroValidPointer (operand_942) ;
result << "const " ;
result << operand_942->mCppClassName ;
if (operand_942->mIsPointer.boolValue ()) {
result << " *" ;
}else {
}
if (operand_942->mUseReferenceForConstructor.boolValue ()) {
result << " &" ;
}else {
}
result << " inOperand_" ;
result << operand_942->mAttributeName ;
if (enumerator_942.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL_01 ;
}
}
result << "\n" ;
result << var_cas_COL_01 ;
result << "COMMA_LOCATION_ARGS) {\n"
  "\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (" ;
GGS_builtinTypeAttributeList::cEnumerator enumerator_1287 ((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (25))), true) ;
const GGS_builtinTypeAttributeList::cElement * operand_1287 = NULL ;
while (((operand_1287 = enumerator_1287.nextObject ()))) {
macroValidPointer (operand_1287) ;
result << "inOperand_" ;
result << operand_1287->mAttributeName ;
if (enumerator_1287.hasNextObject ()) {
result << ", " ;
}
}
if (((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (29))).reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "THERE" ;
}else {
result << " COMMA_THERE" ;
}
result << ")) ;\n"
  "  return result ;\n"
  "}" ;
}else {
}
if ((((findCategoryReader__ACGalgasType__accept_inc_dec_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (39)))).operator_or ((findCategoryReader__ACGalgasType__accept_append_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (39))))).operator_or (((findCategoryReader__ACGalgasType__modifierMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (39))).reader_count ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (" ;
const GGS_string var_cas_COL_0 = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioOperand\n" ;
result << var_cas_COL_0 ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioOperand->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * p = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_new (" ;
GGS_builtinTypeAttributeList::cEnumerator enumerator_1979 ((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (46))), true) ;
const GGS_builtinTypeAttributeList::cElement * operand_1979 = NULL ;
while (((operand_1979 = enumerator_1979.nextObject ()))) {
macroValidPointer (operand_1979) ;
result << "ioOperand->" ;
result << operand_1979->mAttributeName ;
if (enumerator_1979.hasNextObject ()) {
result << ", " ;
}
}
if (((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (50))).reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "THERE" ;
}else {
result << " COMMA_THERE" ;
}
result << ") ;\n"
  "    macroReleaseObject (ioOperand) ;\n"
  "    macroRetainObject (p) ;\n"
  "    ioOperand = p ;\n"
  "  }\n"
  "}" ;
}else {
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypesHeader' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_predefinedTypesHeader (C_Compiler & /* inLexique */,
                                const GGS_typeMap & var_cas_TYPE_MAP) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_MAP.isBuilt () ;
  if (isBuilt) {
result << "\n"
  "#ifndef GALGAS2_PREDEFINED_TYPES\n"
  "#define GALGAS2_PREDEFINED_TYPES\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "#include \"galgas2/AC_GALGAS_Array.h\"\n"
  "#include \"strings/C_String.h\"\n"
  "#include \"collections/TC_UniqueArray.h\"\n"
  "#include \"galgas-utilities/C_LocationInSource.h\"\n"
  "#include \"bdd/C_BDD.h\"\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class C_galgas_function_descriptor ;\n"
  "class C_galgas_type_descriptor ;\n"
  "class C_SourceTextInString ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "typedef TC_UniqueArray <PMUInt8> uint8UniqueArray ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
GGS_typeMap::cEnumerator enumerator_741 (var_cas_TYPE_MAP, true) ;
const GGS_typeMap::cElement * operand_741 = NULL ;
while (((operand_741 = enumerator_741.nextObject ()))) {
macroValidPointer (operand_741) ;
result << "class GALGAS_" ;
result << operand_741->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "class C_Compiler ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'listTypeHeader' template of 'builtinTypeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_listTypeHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_attributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " : public AC_GALGAS_Array {\n"
  "//--- Constructor\n"
  "  protected : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (LOCATION_ARGS) ;\n"
  "\n"
  "//--- No copy\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "\n"
  "//--- GALGAS constructors\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * constructor_emptyList (LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * constructor_listWithValue (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_attributeList::cEnumerator enumerator_1036 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_1036 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1036 = enumerator_1036.nextObject ()))) {
macroValidPointer (operand_1036) ;
result << "const GALGAS_" ;
result << operand_1036->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (24)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (24)) ;
if (enumerator_1036.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--------------------------------- . (concat) operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_concat (" ;
const GGS_string var_cas_COL1 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL1 ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL1 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Modifier handling\n"
  "  protected : static void insulate (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioObject) ;\n"
  "  \n"
  "//--- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n"
  "//--- Friend\n"
  "  friend void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_1758 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_1758 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1758 = enumerator_1758.nextObject ()))) {
macroValidPointer (operand_1758) ;
result << ",\n"
  "                                   const GALGAS_" ;
result << operand_1758->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (43)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (43)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "  \n"
  "  friend void modifier_prependValue (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_2018 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2018 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2018 = enumerator_2018.nextObject ()))) {
macroValidPointer (operand_2018) ;
result << "                                     const GALGAS_" ;
result << operand_2018->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (50)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (50)) ;
if (enumerator_2018.hasNextObject ()) {
result << "," ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "                                     COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void modifier_popFirst (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_2340 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2340 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2340 = enumerator_2340.nextObject ()))) {
macroValidPointer (operand_2340) ;
result << "                                 GALGAS_" ;
result << operand_2340->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (58)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (58)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                                 C_Compiler * inCompiler\n"
  "                                 COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void modifier_popLast (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_2698 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2698 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2698 = enumerator_2698.nextObject ()))) {
macroValidPointer (operand_2698) ;
result << "                                GALGAS_" ;
result << operand_2698->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                                C_Compiler * inCompiler\n"
  "                                COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                                   const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                                   COMMA_LOCATION_ARGS) ;\n" ;
GGS_attributeList::cEnumerator enumerator_3185 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3185 = NULL ;
while (((operand_3185 = enumerator_3185.nextObject ()))) {
macroValidPointer (operand_3185) ;
result << "\n"
  "  friend void modifier_set" ;
result << operand_3185->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (76)).reader_stringByCapitalizingFirstCharacter () ;
result << "AtIndex (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioList,\n"
  "                                         const GALGAS_" ;
result << operand_3185->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (77)) ;
result << " * inAttributeValue,\n"
  "                                         const GALGAS_uint * inIndex,\n"
  "                                         C_Compiler * inCompiler\n"
  "                                         COMMA_LOCATION_ARGS) ;\n" ;
}
GGS_attributeList::cEnumerator enumerator_3680 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3680 = NULL ;
while (((operand_3680 = enumerator_3680.nextObject ()))) {
macroValidPointer (operand_3680) ;
result << "\n"
  "  friend GALGAS_" ;
result << operand_3680->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
result << " * reader_" ;
result << operand_3680->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
result << "AtIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                               const GALGAS_uint * inIndex,\n"
  "                                               C_Compiler * inCompiler\n"
  "                                               COMMA_LOCATION_ARGS) ;\n" ;
}
result << "\n"
  "  friend void method_first (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_4152 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4152 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4152 = enumerator_4152.nextObject ()))) {
macroValidPointer (operand_4152) ;
result << "                            GALGAS_" ;
result << operand_4152->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (94)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (94)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                            C_Compiler * inCompiler\n"
  "                            COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void method_last (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_4492 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4492 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4492 = enumerator_4492.nextObject ()))) {
macroValidPointer (operand_4492) ;
result << "                           GALGAS_" ;
result << operand_4492->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                           C_Compiler * inCompiler\n"
  "                           COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * reader_subListWithRange (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                                      const GALGAS_uint * inIndex,\n"
  "                                                      const GALGAS_uint * inLength,\n"
  "                                                      C_Compiler * inCompiler\n"
  "                                                      COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * reader_subListFromIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                                      const GALGAS_uint * inIndex,\n"
  "                                                      C_Compiler * inCompiler\n"
  "                                                      COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Enumerator class\n"
  "  public : class cEnumerator : public AC_GALGAS_Enumerator {\n"
  "    public : cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inEnumeratedObject,\n"
  "                          const bool inAscending) ;\n"
  "  \n"
  "  //--- Attribute access\n" ;
GGS_attributeList::cEnumerator enumerator_5748 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5748 = NULL ;
while (((operand_5748 = enumerator_5748.nextObject ()))) {
macroValidPointer (operand_5748) ;
result << "    public : const GALGAS_" ;
result << operand_5748->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (125)) ;
result << " * attribute_" ;
result << operand_5748->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (125)) ;
result << " (void) const ;\n" ;
}
result << "  } ;\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                          const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                          COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_6250 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6250 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6250 = enumerator_6250.nextObject ()))) {
macroValidPointer (operand_6250) ;
result << ",\n"
  "                          const GALGAS_" ;
result << operand_6250->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "\n"
  "void modifier_popFirst (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_6486 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6486 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6486 = enumerator_6486.nextObject ()))) {
macroValidPointer (operand_6486) ;
result << "                        GALGAS_" ;
result << operand_6486->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (145)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (145)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                        C_Compiler * inCompiler\n"
  "                        COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void modifier_popLast (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_6808 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6808 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6808 = enumerator_6808.nextObject ()))) {
macroValidPointer (operand_6808) ;
result << "                       GALGAS_" ;
result << operand_6808->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                       C_Compiler * inCompiler\n"
  "                       COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void modifier_prependValue (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_7133 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7133 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7133 = enumerator_7133.nextObject ()))) {
macroValidPointer (operand_7133) ;
result << ",\n"
  "                          const GALGAS_" ;
result << operand_7133->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (160)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (160)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "                            COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void method_first (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_7414 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7414 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7414 = enumerator_7414.nextObject ()))) {
macroValidPointer (operand_7414) ;
result << "                   GALGAS_" ;
result << operand_7414->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                   C_Compiler * inCompiler\n"
  "                   COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void method_last (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_7718 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7718 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7718 = enumerator_7718.nextObject ()))) {
macroValidPointer (operand_7718) ;
result << "                  GALGAS_" ;
result << operand_7718->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (176)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (176)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                  C_Compiler * inCompiler\n"
  "                  COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
GGS_attributeList::cEnumerator enumerator_7963 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7963 = NULL ;
while (((operand_7963 = enumerator_7963.nextObject ()))) {
macroValidPointer (operand_7963) ;
result << "\n"
  "void modifier_set" ;
result << operand_7963->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (183)).reader_stringByCapitalizingFirstCharacter () ;
result << "AtIndex (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioList,\n"
  "                                         const GALGAS_" ;
result << operand_7963->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (184)) ;
result << " * inAttributeValue,\n"
  "                                         const GALGAS_uint * inIndex,\n"
  "                                         C_Compiler * inCompiler\n"
  "                                         COMMA_LOCATION_ARGS) ;\n" ;
}
GGS_attributeList::cEnumerator enumerator_8449 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_8449 = NULL ;
while (((operand_8449 = enumerator_8449.nextObject ()))) {
macroValidPointer (operand_8449) ;
result << "\n"
  "GALGAS_" ;
result << operand_8449->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
result << " * reader_" ;
result << operand_8449->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
result << "AtIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                               const GALGAS_uint * inIndex,\n"
  "                                               C_Compiler * inCompiler\n"
  "                                               COMMA_LOCATION_ARGS) ;\n" ;
}
result << "\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * reader_subListWithRange (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             const GALGAS_uint * inLength,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * reader_subListFromIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listTypeImplementation' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_listTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_attributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (\"" ;
result << var_cas_TYPE_NAME ;
result << "\", NULL) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (LOCATION_ARGS) :\n"
  "AC_GALGAS_Array (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_listWithValue (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_attributeList::cEnumerator enumerator_1155 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_1155 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1155 = enumerator_1155.nextObject ()))) {
macroValidPointer (operand_1155) ;
result << "const GALGAS_" ;
result << operand_1155->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (27)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (27)) ;
if (enumerator_1155.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (THERE) ;\n"
  "  const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_1525 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_1525 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1525 = enumerator_1525.nextObject ()))) {
macroValidPointer (operand_1525) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (34)) ;
if (enumerator_1525.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "  result->addObject (attributeArray) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioObject) {\n"
  "  if (ioObject->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * source = ioObject ;\n"
  "    release (ioObject COMMA_HERE) ;\n"
  "    ioObject = constructor_emptyList (HERE) ;\n"
  "    retain (ioObject COMMA_HERE) ;\n"
  "    ioObject->copyFrom (source) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_2434 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2434 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2434 = enumerator_2434.nextObject ()))) {
macroValidPointer (operand_2434) ;
result << ",\n"
  "                          const GALGAS_" ;
result << operand_2434->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (69)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_2775 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2775 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2775 = enumerator_2775.nextObject ()))) {
macroValidPointer (operand_2775) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
if (enumerator_2775.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_prependValue (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_3074 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3074 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3074 = enumerator_3074.nextObject ()))) {
macroValidPointer (operand_3074) ;
result << ",\n"
  "                            const GALGAS_" ;
result << operand_3074->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (83)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (83)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "                            COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if ((ioResult != NULL) && (inOperand0 != NULL)) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (89)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_3498 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3498 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3498 = enumerator_3498.nextObject ()))) {
macroValidPointer (operand_3498) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (91)) ;
if (enumerator_3498.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->prependAttributeArray (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_popFirst (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_3808 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3808 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3808 = enumerator_3808.nextObject ()))) {
macroValidPointer (operand_3808) ;
result << "                        GALGAS_" ;
result << operand_3808->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (103)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (103)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                        C_Compiler * inCompiler\n"
  "                        COMMA_LOCATION_ARGS) {\n" ;
GGS_attributeList::cEnumerator enumerator_4077 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4077 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4077 = enumerator_4077.nextObject ()))) {
macroValidPointer (operand_4077) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (109)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (113)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_4353 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4353 = NULL ;
while (((operand_4353 = enumerator_4353.nextObject ()))) {
macroValidPointer (operand_4353) ;
result << "NULL" ;
if (enumerator_4353.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    ioResult->removeFirstObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_4506 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4506 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4506 = enumerator_4506.nextObject ()))) {
macroValidPointer (operand_4506) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (120)) ;
result << " = (GALGAS_" ;
result << operand_4506->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (120)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (120)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (121)) ;
result << ", GALGAS_" ;
result << operand_4506->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (121)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_popLast (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_4958 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4958 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4958 = enumerator_4958.nextObject ()))) {
macroValidPointer (operand_4958) ;
result << "                        GALGAS_" ;
result << operand_4958->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (130)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (130)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                       C_Compiler * inCompiler\n"
  "                       COMMA_LOCATION_ARGS) {\n" ;
GGS_attributeList::cEnumerator enumerator_5225 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5225 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5225 = enumerator_5225.nextObject ()))) {
macroValidPointer (operand_5225) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (136)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (140)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_5501 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5501 = NULL ;
while (((operand_5501 = enumerator_5501.nextObject ()))) {
macroValidPointer (operand_5501) ;
result << "NULL" ;
if (enumerator_5501.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    ioResult->removeLastObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_5653 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5653 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5653 = enumerator_5653.nextObject ()))) {
macroValidPointer (operand_5653) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
result << " = (GALGAS_" ;
result << operand_5653->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (148)) ;
result << ", GALGAS_" ;
result << operand_5653->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (148)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void method_first (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_6103 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6103 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6103 = enumerator_6103.nextObject ()))) {
macroValidPointer (operand_6103) ;
result << "                   GALGAS_" ;
result << operand_6103->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                   C_Compiler * inCompiler\n"
  "                   COMMA_LOCATION_ARGS) {\n" ;
GGS_attributeList::cEnumerator enumerator_6357 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6357 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6357 = enumerator_6357.nextObject ()))) {
macroValidPointer (operand_6357) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (163)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  if (inList != NULL) {\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_6584 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6584 = NULL ;
while (((operand_6584 = enumerator_6584.nextObject ()))) {
macroValidPointer (operand_6584) ;
result << "NULL" ;
if (enumerator_6584.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    inList->readFirst (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_6727 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6727 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6727 = enumerator_6727.nextObject ()))) {
macroValidPointer (operand_6727) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (173)) ;
result << " = (GALGAS_" ;
result << operand_6727->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (173)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (173)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << ", GALGAS_" ;
result << operand_6727->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void method_last (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_7176 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7176 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7176 = enumerator_7176.nextObject ()))) {
macroValidPointer (operand_7176) ;
result << "                  GALGAS_" ;
result << operand_7176->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (183)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (183)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                  C_Compiler * inCompiler\n"
  "                  COMMA_LOCATION_ARGS) {\n" ;
GGS_attributeList::cEnumerator enumerator_7427 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7427 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7427 = enumerator_7427.nextObject ()))) {
macroValidPointer (operand_7427) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (189)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  if (inList != NULL) {\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_7654 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7654 = NULL ;
while (((operand_7654 = enumerator_7654.nextObject ()))) {
macroValidPointer (operand_7654) ;
result << "NULL" ;
if (enumerator_7654.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    inList->readLast (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_7796 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7796 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7796 = enumerator_7796.nextObject ()))) {
macroValidPointer (operand_7796) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (199)) ;
result << " = (GALGAS_" ;
result << operand_7796->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (199)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (199)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << ", GALGAS_" ;
result << operand_7796->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n" ;
GGS_attributeList::cEnumerator enumerator_8104 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_8104 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8104 = enumerator_8104.nextObject ()))) {
macroValidPointer (operand_8104) ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_8104->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (208)) ;
result << " * reader_" ;
result << operand_8104->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (208)) ;
result << "AtIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                        const GALGAS_uint * inIndex,\n"
  "                                        C_Compiler * inCompiler\n"
  "                                        COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << operand_8104->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (212)) ;
result << " * result = NULL ;\n"
  "  if ((inList != NULL) && (inIndex != NULL)) {\n"
  "    result = (GALGAS_" ;
result << operand_8104->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (214)) ;
result << " *) inList->attributeDirectRead (inIndex, " ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (214)) ;
result << ", inCompiler COMMA_THERE) ;\n"
  "    macroValidObject (result, GALGAS_" ;
result << operand_8104->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (215)) ;
result << ") ;\n"
  "  }\n"
  "  return result ; \n"
  "}\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_attributeList::cEnumerator enumerator_8963 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_8963 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8963 = enumerator_8963.nextObject ()))) {
macroValidPointer (operand_8963) ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_set" ;
result << operand_8963->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (225)).reader_stringByCapitalizingFirstCharacter () ;
result << "AtIndex (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioList,\n"
  "                                         const GALGAS_" ;
result << operand_8963->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
result << " * inAttributeValue,\n"
  "                                         const GALGAS_uint * inIndex,\n"
  "                                         C_Compiler * inCompiler\n"
  "                                         COMMA_LOCATION_ARGS) {\n"
  "  if (ioList != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioList) ;\n"
  "    ioList->attributeDirectWrite (inAttributeValue, inIndex, " ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (232)) ;
result << ", inCompiler COMMA_THERE) ;\n"
  "  }\n"
  "}\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * reader_subListWithRange (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             const GALGAS_uint * inLength,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  if (inList != NULL) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = inList->subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result = NULL ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * reader_subListFromIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  if (inList != NULL) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = inList->subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result = NULL ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_concat (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                        const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                        COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  if ((inOperand1 != NULL) && (inOperand2 != NULL)) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (THERE) ;\n"
  "    result->appendList (inOperand1) ;\n"
  "    result->appendList (inOperand2) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                          const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                          COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if ((ioResult != NULL) && (inOperand != NULL)) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    ioResult->appendList (inOperand) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::cEnumerator::cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inEnumeratedObject,\n"
  "                                             const bool inAscending) :\n"
  "AC_GALGAS_Enumerator (inEnumeratedObject, inAscending) {\n"
  "}\n"
  "\n" ;
GGS_attributeList::cEnumerator enumerator_12454 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_12454 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12454 = enumerator_12454.nextObject ()))) {
macroValidPointer (operand_12454) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "const GALGAS_" ;
result << operand_12454->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (307)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::cEnumerator::attribute_" ;
result << operand_12454->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (307)) ;
result << " (void) const {\n"
  "  const GALGAS_" ;
result << operand_12454->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (308)) ;
result << " * result = (const GALGAS_" ;
result << operand_12454->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (308)) ;
result << " *) directAccess (" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (308)) ;
result << " COMMA_HERE) ;\n"
  "  macroValidObject (result, const GALGAS_" ;
result << operand_12454->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (309)) ;
result << ") ;\n"
  "  return result ;\n"
  "}\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypesImplementation' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_predefinedTypesImplementation (C_Compiler & /* inLexique */) {
  C_String result ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "#include \"galgas2/predefined-types.h\"\n"
  "#include \"galgas-utilities/C_Compiler.h\"\n"
  "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@ACGalgasType.appendGeneratedHeader'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ACGalgasType__appendGeneratedHeader (C_Compiler &,
                                const cPtr_ACGalgasType * operand_14506,
                                GGS_string & /* var_cas_ioHeader */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14506 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Virtual Table for category method '@ACGalgasType.appendGeneratedHeader'   *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__ACGalgasType__appendGeneratedHeader> gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ACGalgasType__appendGeneratedHeader (typeCategoryMethod__ACGalgasType__appendGeneratedHeader inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__ACGalgasType__appendGeneratedHeader
findCategoryMethod__ACGalgasType__appendGeneratedHeader (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__ACGalgasType__appendGeneratedHeader result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.count ()) {
    result = gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__ACGalgasType__appendGeneratedHeader (superClassPtr) ;
      gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@primitiveGalgasType.appendGeneratedHeader'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__primitiveGalgasType__appendGeneratedHeader (C_Compiler & inLexique,
                                const cPtr_primitiveGalgasType * operand_14686,
                                GGS_string & var_cas_ioHeader
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14686 != NULL) {
GGS_ACGalgasType  var_cas_t = operand_14686 ;
var_cas_ioHeader.dotAssign_operation (template_filewrapper_builtinTypeGenerationTemplate_primitiveTypeHeader (inLexique, (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (var_cas_t (HERE)->galgasRTTI ()) (inLexique, var_cas_t.getPtr () COMMA_SOURCE_FILE_AT_LINE (326))), var_cas_t)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@listGalgasType.appendGeneratedHeader'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listGalgasType__appendGeneratedHeader (C_Compiler & inLexique,
                                const cPtr_listGalgasType * operand_15027,
                                GGS_string & var_cas_ioHeader
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15027 != NULL) {
GGS_ACGalgasType  var_cas_t = operand_15027 ;
GGS_listGalgasType  var_cas_tt = operand_15027 ;
var_cas_ioHeader.dotAssign_operation (template_filewrapper_builtinTypeGenerationTemplate_listTypeHeader (inLexique, (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (var_cas_t (HERE)->galgasRTTI ()) (inLexique, var_cas_t.getPtr () COMMA_SOURCE_FILE_AT_LINE (337))), var_cas_tt.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (338)))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@ACGalgasType.appendGeneratedImplementation'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ACGalgasType__appendGeneratedImplementation (C_Compiler &,
                                const cPtr_ACGalgasType * operand_15739,
                                GGS_string & /* var_cas_ioImplementation */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15739 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@ACGalgasType.appendGeneratedImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__ACGalgasType__appendGeneratedImplementation> gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ACGalgasType__appendGeneratedImplementation (typeCategoryMethod__ACGalgasType__appendGeneratedImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__ACGalgasType__appendGeneratedImplementation
findCategoryMethod__ACGalgasType__appendGeneratedImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__ACGalgasType__appendGeneratedImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation.count ()) {
    result = gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__ACGalgasType__appendGeneratedImplementation (superClassPtr) ;
      gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@listGalgasType.appendGeneratedImplementation'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listGalgasType__appendGeneratedImplementation (C_Compiler & inLexique,
                                const cPtr_listGalgasType * operand_15930,
                                GGS_string & var_cas_ioImplementation
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15930 != NULL) {
GGS_ACGalgasType  var_cas_t = operand_15930 ;
GGS_listGalgasType  var_cas_tt = operand_15930 ;
var_cas_ioImplementation.dotAssign_operation (template_filewrapper_builtinTypeGenerationTemplate_listTypeImplementation (inLexique, (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (var_cas_t (HERE)->galgasRTTI ()) (inLexique, var_cas_t.getPtr () COMMA_SOURCE_FILE_AT_LINE (357))), var_cas_tt.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (358)))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@primitiveGalgasType.appendGeneratedImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__primitiveGalgasType__appendGeneratedImplementation (C_Compiler & inLexique,
                                const cPtr_primitiveGalgasType * operand_16370,
                                GGS_string & var_cas_ioImplementation
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16370 != NULL) {
GGS_ACGalgasType  var_cas_t = operand_16370 ;
var_cas_ioImplementation.dotAssign_operation (template_filewrapper_builtinTypeGenerationTemplate_primitiveTypeImplementation (inLexique, (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (var_cas_t (HERE)->galgasRTTI ()) (inLexique, var_cas_t.getPtr () COMMA_SOURCE_FILE_AT_LINE (367))), var_cas_t)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "generateHeadersOfBuiltinTypes"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateHeadersOfBuiltinTypes (C_Compiler & inLexique,
                                const GGS_string  var_cas_inDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateHeadersOfBuiltinTypes at %s:%d\n", __FILE__, __LINE__) ;
  #endif
const GGS_bool cond_18232 = (var_cas_inDirectory).operator_isNotEqual (GGS_string ("")) ;
if (cond_18232.isBuiltAndTrue ()) {
const GGS_bool cond_17212 = (var_cas_inDirectory.reader_directoryExists ()).operator_not () ;
if (cond_17212.isBuiltAndTrue ()) {
GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (var_cas_inDirectory)).operator_concat (GGS_string ("' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (382)) ;
}else if (cond_17212.isBuiltAndFalse ()) {
GGS_string var_cas_generatedCode = template_filewrapper_builtinTypeGenerationTemplate_predefinedTypesHeader (inLexique, function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (385))) ;
{
GGS_typeMap::cEnumerator enumerator_17426 (function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (387)), true) ;
const GGS_typeMap::cElement * operand_17426 = NULL ;
while (((operand_17426 = enumerator_17426.nextObject ()))) {
  macroValidPointer (operand_17426) ;
const GGS_ACGalgasType  temp_17469 = operand_17426->mInfo.mType ;
if (temp_17469.isBuilt ()) {
  typeCategoryMethod__ACGalgasType__appendGeneratedHeader method = findCategoryMethod__ACGalgasType__appendGeneratedHeader (temp_17469.galgasObjectRunTimeInfo ()) ;
  if (method != NULL) {
    method (inLexique, temp_17469 (HERE), var_cas_generatedCode COMMA_SOURCE_FILE_AT_LINE (388)) ;
  }
}
}
}
GGS_string::class_method_generateFile (inLexique, var_cas_inDirectory, GGS_string ("predefined-types.h"), GGS_string ("//"), GGS_string ("\n"
  "\n"), var_cas_generatedCode, GGS_string ("\n"
  "\n"), GGS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (390)) ;
var_cas_generatedCode = template_filewrapper_builtinTypeGenerationTemplate_predefinedTypesImplementation (inLexique) ;
{
GGS_typeMap::cEnumerator enumerator_17911 (function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (402)), true) ;
const GGS_typeMap::cElement * operand_17911 = NULL ;
while (((operand_17911 = enumerator_17911.nextObject ()))) {
  macroValidPointer (operand_17911) ;
const GGS_ACGalgasType  temp_17962 = operand_17911->mInfo.mType ;
if (temp_17962.isBuilt ()) {
  typeCategoryMethod__ACGalgasType__appendGeneratedImplementation method = findCategoryMethod__ACGalgasType__appendGeneratedImplementation (temp_17962.galgasObjectRunTimeInfo ()) ;
  if (method != NULL) {
    method (inLexique, temp_17962 (HERE), var_cas_generatedCode COMMA_SOURCE_FILE_AT_LINE (403)) ;
  }
}
}
}
GGS_string::class_method_generateFile (inLexique, var_cas_inDirectory, GGS_string ("predefined-types.cpp"), GGS_string ("//"), GGS_string ("\n"
  "\n"), var_cas_generatedCode, GGS_string ("\n"
  "\n"), GGS_string ("") COMMA_SOURCE_FILE_AT_LINE (405)) ;
}
}
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateHeadersOfBuiltinTypes\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_generateHeadersOfBuiltinTypes (void) {
  enterCategoryReader__ACGalgasType__attributeDescriptionList (category_reader__ACGalgasType__attributeDescriptionList, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__boolGalgasType__attributeDescriptionList, gClassInfoFor__boolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__charGalgasType__attributeDescriptionList, gClassInfoFor__charGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__stringGalgasType__attributeDescriptionList, gClassInfoFor__stringGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__uintGalgasType__attributeDescriptionList, gClassInfoFor__uintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__sintGalgasType__attributeDescriptionList, gClassInfoFor__sintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__uint64GalgasType__attributeDescriptionList, gClassInfoFor__uint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__sint64GalgasType__attributeDescriptionList, gClassInfoFor__sint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__doubleGalgasType__attributeDescriptionList, gClassInfoFor__doubleGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__locationGalgasType__attributeDescriptionList, gClassInfoFor__locationGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__objectGalgasType__attributeDescriptionList, gClassInfoFor__objectGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__typeGalgasType__attributeDescriptionList, gClassInfoFor__typeGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__functionGalgasType__attributeDescriptionList, gClassInfoFor__functionGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__lstringGalgasType__attributeDescriptionList, gClassInfoFor__lstringGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__lcharGalgasType__attributeDescriptionList, gClassInfoFor__lcharGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__luintGalgasType__attributeDescriptionList, gClassInfoFor__luintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__lsintGalgasType__attributeDescriptionList, gClassInfoFor__lsintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__luint64GalgasType__attributeDescriptionList, gClassInfoFor__luint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__lsint64GalgasType__attributeDescriptionList, gClassInfoFor__lsint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__lboolGalgasType__attributeDescriptionList, gClassInfoFor__lboolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__ldoubleGalgasType__attributeDescriptionList, gClassInfoFor__ldoubleGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__binarysetGalgasType__attributeDescriptionList, gClassInfoFor__binarysetGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__dataGalgasType__attributeDescriptionList, gClassInfoFor__dataGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor (category_reader__ACGalgasType__generate_new_constructor, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__lstringGalgasType__generate_new_constructor, gClassInfoFor__lstringGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__lboolGalgasType__generate_new_constructor, gClassInfoFor__lboolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__lcharGalgasType__generate_new_constructor, gClassInfoFor__lcharGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__luintGalgasType__generate_new_constructor, gClassInfoFor__luintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__lsintGalgasType__generate_new_constructor, gClassInfoFor__lsintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__luint64GalgasType__generate_new_constructor, gClassInfoFor__luint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__lsint64GalgasType__generate_new_constructor, gClassInfoFor__lsint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__ldoubleGalgasType__generate_new_constructor, gClassInfoFor__ldoubleGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__stringsetGalgasType__generate_new_constructor, gClassInfoFor__stringsetGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedHeader (category_method__ACGalgasType__appendGeneratedHeader, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedHeader ((typeCategoryMethod__ACGalgasType__appendGeneratedHeader) category_method__primitiveGalgasType__appendGeneratedHeader, gClassInfoFor__primitiveGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedHeader ((typeCategoryMethod__ACGalgasType__appendGeneratedHeader) category_method__listGalgasType__appendGeneratedHeader, gClassInfoFor__listGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedImplementation (category_method__ACGalgasType__appendGeneratedImplementation, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedImplementation ((typeCategoryMethod__ACGalgasType__appendGeneratedImplementation) category_method__listGalgasType__appendGeneratedImplementation, gClassInfoFor__listGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedImplementation ((typeCategoryMethod__ACGalgasType__appendGeneratedImplementation) category_method__primitiveGalgasType__appendGeneratedImplementation, gClassInfoFor__primitiveGalgasType.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_generateHeadersOfBuiltinTypes (void) {
  gDispatchTableForReader__ACGalgasType__attributeDescriptionList.free () ;
  gDispatchTableForReader__ACGalgasType__generate_new_constructor.free () ;
  gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.free () ;
  gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_generateHeadersOfBuiltinTypes (prologueRoutineFor_generateHeadersOfBuiltinTypes, epilogueRoutineFor_generateHeadersOfBuiltinTypes) ;

//---------------------------------------------------------------------------*

