//---------------------------------------------------------------------------*
//                                                                           *
//                 File 'generateHeadersOfBuiltinTypes.cpp'                  *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     january 20th, 2010, at 17h53'33"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "generateHeadersOfBuiltinTypes.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "generateHeadersOfBuiltinTypes.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@ACGalgasType.scalarAttributeCppTypeName'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__ACGalgasType__scalarAttributeCppTypeName (C_Compiler &,
                                const cPtr_ACGalgasType * operand_2357
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_2357 != NULL) {
    var_cas_outTypeName = GGS_string ("") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@ACGalgasType.scalarAttributeCppTypeName'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName> gDispatchTableForReader__ACGalgasType__scalarAttributeCppTypeName ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName (typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__scalarAttributeCppTypeName.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__ACGalgasType_defaultReader_scalarAttributeCppTypeName (C_Compiler &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName
findCategoryReader__ACGalgasType__scalarAttributeCppTypeName (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__scalarAttributeCppTypeName.count ()) {
    result = gDispatchTableForReader__ACGalgasType__scalarAttributeCppTypeName (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__scalarAttributeCppTypeName (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__scalarAttributeCppTypeName.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_scalarAttributeCppTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@boolGalgasType.scalarAttributeCppTypeName'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__boolGalgasType__scalarAttributeCppTypeName (C_Compiler &,
                                const cPtr_boolGalgasType * operand_2584
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_2584 != NULL) {
    var_cas_outTypeName = GGS_string ("bool") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@charGalgasType.scalarAttributeCppTypeName'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__charGalgasType__scalarAttributeCppTypeName (C_Compiler &,
                                const cPtr_charGalgasType * operand_2787
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_2787 != NULL) {
    var_cas_outTypeName = GGS_string ("utf32") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@uintGalgasType.scalarAttributeCppTypeName'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__uintGalgasType__scalarAttributeCppTypeName (C_Compiler &,
                                const cPtr_uintGalgasType * operand_2991
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_2991 != NULL) {
    var_cas_outTypeName = GGS_string ("PMUInt32") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@sintGalgasType.scalarAttributeCppTypeName'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sintGalgasType__scalarAttributeCppTypeName (C_Compiler &,
                                const cPtr_sintGalgasType * operand_3198
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_3198 != NULL) {
    var_cas_outTypeName = GGS_string ("PMSInt32") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@uint64GalgasType.scalarAttributeCppTypeName'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__uint64GalgasType__scalarAttributeCppTypeName (C_Compiler &,
                                const cPtr_uint64GalgasType * operand_3407
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_3407 != NULL) {
    var_cas_outTypeName = GGS_string ("PMUInt64") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@sint64GalgasType.scalarAttributeCppTypeName'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sint64GalgasType__scalarAttributeCppTypeName (C_Compiler &,
                                const cPtr_sint64GalgasType * operand_3616
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_3616 != NULL) {
    var_cas_outTypeName = GGS_string ("PMSInt64") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@doubleGalgasType.scalarAttributeCppTypeName'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__doubleGalgasType__scalarAttributeCppTypeName (C_Compiler &,
                                const cPtr_doubleGalgasType * operand_3825
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_3825 != NULL) {
    var_cas_outTypeName = GGS_string ("double") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@ACGalgasType.pointerAttributeCppTypeName'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__ACGalgasType__pointerAttributeCppTypeName (C_Compiler &,
                                const cPtr_ACGalgasType * operand_4332
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_4332 != NULL) {
    var_cas_outTypeName = GGS_string ("") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@ACGalgasType.pointerAttributeCppTypeName'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__pointerAttributeCppTypeName> gDispatchTableForReader__ACGalgasType__pointerAttributeCppTypeName ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__pointerAttributeCppTypeName (typeCategoryReader__ACGalgasType__pointerAttributeCppTypeName inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__pointerAttributeCppTypeName.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__ACGalgasType_defaultReader_pointerAttributeCppTypeName (C_Compiler &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__pointerAttributeCppTypeName
findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__pointerAttributeCppTypeName result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__pointerAttributeCppTypeName.count ()) {
    result = gDispatchTableForReader__ACGalgasType__pointerAttributeCppTypeName (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__pointerAttributeCppTypeName.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_pointerAttributeCppTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@objectGalgasType.pointerAttributeCppTypeName'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__objectGalgasType__pointerAttributeCppTypeName (C_Compiler &,
                                const cPtr_objectGalgasType * operand_4562
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_4562 != NULL) {
    var_cas_outTypeName = GGS_string ("AC_GALGAS__root") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@typeGalgasType.pointerAttributeCppTypeName'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__typeGalgasType__pointerAttributeCppTypeName (C_Compiler &,
                                const cPtr_typeGalgasType * operand_4777
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_4777 != NULL) {
    var_cas_outTypeName = GGS_string ("C_galgas_type_descriptor") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@ACGalgasType.classAttributeCppTypeName'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__ACGalgasType__classAttributeCppTypeName (C_Compiler &,
                                const cPtr_ACGalgasType * operand_5300
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_5300 != NULL) {
    var_cas_outTypeName = GGS_string ("") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@ACGalgasType.classAttributeCppTypeName'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__classAttributeCppTypeName> gDispatchTableForReader__ACGalgasType__classAttributeCppTypeName ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__classAttributeCppTypeName (typeCategoryReader__ACGalgasType__classAttributeCppTypeName inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__classAttributeCppTypeName.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__ACGalgasType_defaultReader_classAttributeCppTypeName (C_Compiler &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__classAttributeCppTypeName
findCategoryReader__ACGalgasType__classAttributeCppTypeName (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__classAttributeCppTypeName result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__classAttributeCppTypeName.count ()) {
    result = gDispatchTableForReader__ACGalgasType__classAttributeCppTypeName (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__classAttributeCppTypeName (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__classAttributeCppTypeName.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_classAttributeCppTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@stringGalgasType.classAttributeCppTypeName'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__stringGalgasType__classAttributeCppTypeName (C_Compiler &,
                                const cPtr_stringGalgasType * operand_5528
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_5528 != NULL) {
    var_cas_outTypeName = GGS_string ("C_String") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category reader '@ACGalgasType.embeddedObjectTypeNames'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__ACGalgasType__embeddedObjectTypeNames (C_Compiler &,
                                const cPtr_ACGalgasType * operand_6033
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_6033 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@ACGalgasType.embeddedObjectTypeNames'  *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__embeddedObjectTypeNames> gDispatchTableForReader__ACGalgasType__embeddedObjectTypeNames ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__embeddedObjectTypeNames (typeCategoryReader__ACGalgasType__embeddedObjectTypeNames inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__embeddedObjectTypeNames.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__ACGalgasType_defaultReader_embeddedObjectTypeNames (C_Compiler &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_stringlist  () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__embeddedObjectTypeNames
findCategoryReader__ACGalgasType__embeddedObjectTypeNames (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__embeddedObjectTypeNames result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__embeddedObjectTypeNames.count ()) {
    result = gDispatchTableForReader__ACGalgasType__embeddedObjectTypeNames (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__embeddedObjectTypeNames (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__embeddedObjectTypeNames.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_embeddedObjectTypeNames ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lstringGalgasType.embeddedObjectTypeNames'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__lstringGalgasType__embeddedObjectTypeNames (C_Compiler &,
                                const cPtr_lstringGalgasType * operand_6257
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_6257 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("string")) ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("location")) ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@lcharGalgasType.embeddedObjectTypeNames'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__lcharGalgasType__embeddedObjectTypeNames (C_Compiler &,
                                const cPtr_lcharGalgasType * operand_6539
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_6539 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("char")) ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("location")) ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@luintGalgasType.embeddedObjectTypeNames'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__luintGalgasType__embeddedObjectTypeNames (C_Compiler &,
                                const cPtr_luintGalgasType * operand_6819
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_6819 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("uint")) ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("location")) ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@lsintGalgasType.embeddedObjectTypeNames'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__lsintGalgasType__embeddedObjectTypeNames (C_Compiler &,
                                const cPtr_lsintGalgasType * operand_7099
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_7099 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("sint")) ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("location")) ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@luint64GalgasType.embeddedObjectTypeNames'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__luint64GalgasType__embeddedObjectTypeNames (C_Compiler &,
                                const cPtr_luint64GalgasType * operand_7381
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_7381 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("uint64")) ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("location")) ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lsint64GalgasType.embeddedObjectTypeNames'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__lsint64GalgasType__embeddedObjectTypeNames (C_Compiler &,
                                const cPtr_lsint64GalgasType * operand_7665
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_7665 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("sint64")) ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("location")) ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@lboolGalgasType.embeddedObjectTypeNames'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__lboolGalgasType__embeddedObjectTypeNames (C_Compiler &,
                                const cPtr_lboolGalgasType * operand_7947
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_7947 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("bool")) ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("location")) ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@ldoubleGalgasType.embeddedObjectTypeNames'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__ldoubleGalgasType__embeddedObjectTypeNames (C_Compiler &,
                                const cPtr_ldoubleGalgasType * operand_8229
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_8229 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("double")) ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("location")) ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of wrapper 'builtinTypeGenerationTemplate'          *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_builtinTypeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_builtinTypeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_builtinTypeGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_builtinTypeGenerationTemplate_0,
  0,
  gWrapperAllDirectories_builtinTypeGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'primitiveTypeHeaderFile' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_primitiveTypeHeaderFile (C_Compiler & inLexique,
                                const GGS_stringlist & var_cas_PREDEFINED_TYPE_LIST,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_ACGalgasType & var_cas_TYPE) {
  C_String result ;
  const bool isBuilt = var_cas_PREDEFINED_TYPE_LIST.isBuilt ()
    && var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE.isBuilt () ;
  if (isBuilt) {
    result << "#ifndef " ;
    result << var_cas_TYPE_NAME ;
    result << "_CLASS_DEFINED\n"
      "#define " ;
    result << var_cas_TYPE_NAME ;
    result << "_CLASS_DEFINED\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "#include \"galgas2/AC_GALGAS__root.h\"\n" ;
    if (((findCategoryReader__ACGalgasType__classAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (8))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "#include \"" ;
      result << (findCategoryReader__ACGalgasType__classAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (9))) ;
      result << ".h\"\n" ;
    }else {
    }
    result << "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n" ;
    GGS_stringlist::cEnumerator enumerator_428 (var_cas_PREDEFINED_TYPE_LIST, true) ;
    const GGS_stringlist::cElement * operand_428 = NULL ;
    while (((operand_428 = enumerator_428.nextObject ()))) {
      macroValidPointer (operand_428) ;
      result << "class " ;
      result << operand_428->mValue ;
      result << " ;\n" ;
    }
    if (((findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (18))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "class " ;
      result << (findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (19))) ;
      result << " ;\n" ;
    }else {
    }
    result << "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "extern const C_galgas_type_descriptor kTypeDescriptor_" ;
    result << var_cas_TYPE_NAME ;
    result << " ;\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "class " ;
    result << var_cas_TYPE_NAME ;
    result << " : public AC_GALGAS__root {\n"
      "//--------------------------------- Native constructor\n" ;
    if (((findCategoryReader__ACGalgasType__scalarAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (35))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "  protected : " ;
      result << var_cas_TYPE_NAME ;
      result << " (const " ;
      result << (findCategoryReader__ACGalgasType__scalarAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (36))) ;
      result << " inValue COMMA_LOCATION_ARGS) ;\n"
        "\n"
        "  public : static " ;
      result << var_cas_TYPE_NAME ;
      result << " * constructor_new (const " ;
      result << (findCategoryReader__ACGalgasType__scalarAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (37))) ;
      result << " inValue COMMA_LOCATION_ARGS) ;\n" ;
    }else if (((findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (38))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "  protected : " ;
      result << var_cas_TYPE_NAME ;
      result << " (const " ;
      result << (findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (39))) ;
      result << " * inValue COMMA_LOCATION_ARGS) ;\n"
        "\n"
        "  public : static " ;
      result << var_cas_TYPE_NAME ;
      result << " * constructor_new (const " ;
      result << (findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (40))) ;
      result << " * inValue COMMA_LOCATION_ARGS) ;\n" ;
    }else if (((findCategoryReader__ACGalgasType__classAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (41))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "  protected : " ;
      result << var_cas_TYPE_NAME ;
      result << " (const " ;
      result << (findCategoryReader__ACGalgasType__classAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (42))) ;
      result << " & inValue COMMA_LOCATION_ARGS) ;\n"
        "\n"
        "  public : static " ;
      result << var_cas_TYPE_NAME ;
      result << " * constructor_new (const " ;
      result << (findCategoryReader__ACGalgasType__classAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (43))) ;
      result << " & inValue COMMA_LOCATION_ARGS) ;\n" ;
    }else if (((findCategoryReader__ACGalgasType__embeddedObjectTypeNames (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (44))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "  protected : " ;
      result << var_cas_TYPE_NAME ;
      result << " (" ;
      const GGS_string var_cas_COL1 = GGS_string::stringWithColumnCount (result) ;
      GGS_stringlist::cEnumerator enumerator_2302 ((findCategoryReader__ACGalgasType__embeddedObjectTypeNames (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (46))), true) ;
      const GGS_stringlist::cElement * operand_2302 = NULL ;
      while (((operand_2302 = enumerator_2302.nextObject ()))) {
        macroValidPointer (operand_2302) ;
        result << "const " ;
        result << function_cppTypeNameForGalgasTypeName (inLexique, operand_2302->mValue COMMA_SOURCE_FILE_AT_LINE (47)) ;
        result << " * in" ;
        result << operand_2302->mValue.reader_stringByCapitalizingFirstCharacter () ;
        result << "Value" ;
        if (enumerator_2302.hasNextObject ()) {
          result << ",\n" ;
          result << var_cas_COL1 ;
        }
      }
      result << "\n" ;
      result << var_cas_COL1 ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n"
        "  public : static " ;
      result << var_cas_TYPE_NAME ;
      result << " * constructor_new (" ;
      const GGS_string var_cas_COL2 = GGS_string::stringWithColumnCount (result) ;
      GGS_stringlist::cEnumerator enumerator_2611 ((findCategoryReader__ACGalgasType__embeddedObjectTypeNames (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (52))), true) ;
      const GGS_stringlist::cElement * operand_2611 = NULL ;
      while (((operand_2611 = enumerator_2611.nextObject ()))) {
        macroValidPointer (operand_2611) ;
        result << "const " ;
        result << function_cppTypeNameForGalgasTypeName (inLexique, operand_2611->mValue COMMA_SOURCE_FILE_AT_LINE (53)) ;
        result << " * in" ;
        result << operand_2611->mValue.reader_stringByCapitalizingFirstCharacter () ;
        result << "Value" ;
        if (enumerator_2611.hasNextObject ()) {
          result << ",\n" ;
          result << var_cas_COL2 ;
        }
      }
      result << "\n" ;
      result << var_cas_COL2 ;
      result << "COMMA_LOCATION_ARGS) ;\n" ;
    }else {
      result << "  protected : " ;
      result << var_cas_TYPE_NAME ;
      result << " (LOCATION_ARGS) ;\n" ;
    }
    GGS_constructorMap::cEnumerator enumerator_2923 ((findCategoryReader__ACGalgasType__constructorMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (61))), true) ;
    const GGS_constructorMap::cElement * operand_2923 = NULL ;
    if (enumerator_2923.hasCurrentObject ()) {
      result << "//--------------------------------- GALGAS constructors\n" ;
      while (((operand_2923 = enumerator_2923.nextObject ()))) {
        macroValidPointer (operand_2923) ;
        result << "  public : static " ;
        result << function_cppTypeName (inLexique, operand_2923->mInfo.mReturnedType COMMA_SOURCE_FILE_AT_LINE (64)) ;
        result << " * constructor_" ;
        result << operand_2923->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) ;
        result << " (" ;
        const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
        GGS_typeList::cEnumerator enumerator_3111 (operand_2923->mInfo.mArgumentTypeList, true) ;
        const GGS_typeList::cElement * operand_3111 = NULL ;
        { GGS_uint var_cas_IDX (true, 0) ;
      while (((operand_3111 = enumerator_3111.nextObject ()))) {
        macroValidPointer (operand_3111) ;
        result << "const " ;
        result << function_cppTypeName (inLexique, operand_3111->mType COMMA_SOURCE_FILE_AT_LINE (66)) ;
        result << " * inOperand" ;
        result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
        if (enumerator_3111.hasNextObject ()) {
          result << ",\n" ;
          result << var_cas_COL ;
        }
        var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
      }
    }
    if ((operand_2923->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
      if (operand_2923->mInfo.mHasLexique.boolValue ()) {
        result << "C_Compiler * inCompiler\n" ;
        result << var_cas_COL ;
        result << "COMMA_LOCATION_ARGS" ;
      }else {
        result << "LOCATION_ARGS" ;
      }
    }else {
      if (operand_2923->mInfo.mHasLexique.boolValue ()) {
        result << ",\n" ;
        result << var_cas_COL ;
        result << "C_Compiler * inCompiler\n" ;
        result << var_cas_COL ;
        result << "COMMA_LOCATION_ARGS" ;
      }else {
        result << "\n" ;
        result << var_cas_COL ;
        result << "COMMA_LOCATION_ARGS" ;
      }
    }
    result << ") ;\n"
      "\n" ;
  }
}
result << "\n"
  "//--------------------------------- No copy\n"
  "  private : " ;
result << var_cas_TYPE_NAME ;
result << " (const " ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "  private : " ;
result << var_cas_TYPE_NAME ;
result << " & operator = (const " ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "\n"
  "//--------------------------------- Implementation of reader 'description'\n"
  "  public : virtual void description (C_String & ioString,\n"
  "                                     const PMSInt32 inIndentation) const ;\n"
  "\n"
  "//--------------------------------- Readers\n" ;
GGS_readerMap::cEnumerator enumerator_4023 ((findCategoryReader__ACGalgasType__readerMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (96))), true) ;
const GGS_readerMap::cElement * operand_4023 = NULL ;
while (((operand_4023 = enumerator_4023.nextObject ()))) {
  macroValidPointer (operand_4023) ;
  if ((operand_4023->mInfo.mQualifier).operator_isNotEqual (GGS_readerQualifier::constructor_isInherited (inLexique COMMA_HERE)).boolValue ()) {
    result << "  protected : virtual " ;
    result << function_cppTypeName (inLexique, operand_4023->mInfo.mReturnedType COMMA_SOURCE_FILE_AT_LINE (98)) ;
    result << " * reader_" ;
    result << operand_4023->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (98)) ;
    result << " (" ;
    const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
    GGS_typeList::cEnumerator enumerator_4212 (operand_4023->mInfo.mArgumentTypeList, true) ;
    const GGS_typeList::cElement * operand_4212 = NULL ;
    { GGS_uint var_cas_IDX (true, 0) ;
  while (((operand_4212 = enumerator_4212.nextObject ()))) {
    macroValidPointer (operand_4212) ;
    result << "const " ;
    result << function_cppTypeName (inLexique, operand_4212->mType COMMA_SOURCE_FILE_AT_LINE (100)) ;
    result << " * inOperand" ;
    result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
    if (enumerator_4212.hasNextObject ()) {
      result << ",\n" ;
      result << var_cas_COL ;
    }
    var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
  }
}
if ((operand_4023->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
  if (operand_4023->mInfo.mHasLexiqueArgument.boolValue ()) {
    result << "C_Compiler * inCompiler\n" ;
    result << var_cas_COL ;
    result << "COMMA_LOCATION_ARGS" ;
  }else {
    result << "LOCATION_ARGS" ;
  }
}else {
  if (operand_4023->mInfo.mHasLexiqueArgument.boolValue ()) {
    result << ",\n" ;
    result << var_cas_COL ;
    result << "C_Compiler * inCompiler\n" ;
    result << var_cas_COL ;
    result << "COMMA_LOCATION_ARGS" ;
  }else {
    result << "\n" ;
    result << var_cas_COL ;
    result << "COMMA_LOCATION_ARGS" ;
  }
}
result << ") const" ;
if ((operand_4023->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isAbstract (inLexique COMMA_HERE)).boolValue ()) {
  result << " = 0" ;
}else {
}
result << " ;\n"
  "\n" ;
}else {
}
}
if ((findCategoryReader__ACGalgasType__accept_and_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (124))).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : static " ;
result << var_cas_TYPE_NAME ;
result << " * operator_and (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_or_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (131))).boolValue ()) {
result << "//--------------------------------- | operator\n"
  "  public : static " ;
result << var_cas_TYPE_NAME ;
result << " * operator_or (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_xor_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (138))).boolValue ()) {
result << "//--------------------------------- ^ operator\n"
  "  public : static " ;
result << var_cas_TYPE_NAME ;
result << " * operator_xor (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_not_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (145))).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : static " ;
result << var_cas_TYPE_NAME ;
result << " * operator_not (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_tilde_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (151))).boolValue ()) {
result << "//--------------------------------- ~ operator\n"
  "  public : static " ;
result << var_cas_TYPE_NAME ;
result << " * operator_tilde (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
result << "//--------------------------------- Comparison\n"
  "  public : static " ;
result << function_cppTypeNameForGalgasTypeName (inLexique, GGS_string ("bool") COMMA_SOURCE_FILE_AT_LINE (158)) ;
result << " * operator_isEqual (" ;
const GGS_string var_cas_COL_A = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL_A ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL_A ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static " ;
result << function_cppTypeNameForGalgasTypeName (inLexique, GGS_string ("bool") COMMA_SOURCE_FILE_AT_LINE (162)) ;
result << " * operator_isNotEqual (" ;
const GGS_string var_cas_COL_B = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL_B ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL_B ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
if ((findCategoryReader__ACGalgasType__isComparable (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (166))).boolValue ()) {
result << "  public : static " ;
result << function_cppTypeNameForGalgasTypeName (inLexique, GGS_string ("bool") COMMA_SOURCE_FILE_AT_LINE (167)) ;
result << " * operator_infOrEqual (" ;
const GGS_string var_cas_COL3 = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL3 ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL3 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static " ;
result << function_cppTypeNameForGalgasTypeName (inLexique, GGS_string ("bool") COMMA_SOURCE_FILE_AT_LINE (171)) ;
result << " * operator_supOrEqual (" ;
const GGS_string var_cas_COL4 = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL4 ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL4 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static " ;
result << function_cppTypeNameForGalgasTypeName (inLexique, GGS_string ("bool") COMMA_SOURCE_FILE_AT_LINE (175)) ;
result << " * operator_strictInf (" ;
const GGS_string var_cas_COL5 = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL5 ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL5 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static " ;
result << function_cppTypeNameForGalgasTypeName (inLexique, GGS_string ("bool") COMMA_SOURCE_FILE_AT_LINE (179)) ;
result << " * operator_strictSup (" ;
const GGS_string var_cas_COL6 = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL6 ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL6 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
result << "  public : virtual PMSInt32 compareForSortedList (const AC_GALGAS__root * inOperand\n"
  "                                                   COMMA_LOCATION_ARGS) const ;\n"
  "\n"
  "//--- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n" ;
if ((findCategoryReader__ACGalgasType__accept_concat_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (193))).boolValue ()) {
result << "//--------------------------------- . (concat) operator\n"
  "  public : static " ;
result << var_cas_TYPE_NAME ;
result << " * operator_concat (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_add_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (200))).boolValue ()) {
result << "//--------------------------------- + operator\n"
  "  public : static " ;
result << var_cas_TYPE_NAME ;
result << " * add_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_sub_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (208))).boolValue ()) {
result << "//--------------------------------- - operator\n"
  "  public : static " ;
result << var_cas_TYPE_NAME ;
result << " * substract_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_mul_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (216))).boolValue ()) {
result << "//--------------------------------- * operator\n"
  "  public : static " ;
result << var_cas_TYPE_NAME ;
result << " * multiply_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_div_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (224))).boolValue ()) {
result << "//--------------------------------- / operator\n"
  "  public : static " ;
result << var_cas_TYPE_NAME ;
result << " * divide_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_mod_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (232))).boolValue ()) {
result << "//--------------------------------- mod operator\n"
  "  public : static " ;
result << var_cas_TYPE_NAME ;
result << " * modulo_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_unary_minus_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (240))).boolValue ()) {
result << "//--------------------------------- unary - operator\n"
  "  public : static " ;
result << var_cas_TYPE_NAME ;
result << " * operator_unary_minus (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_inc_dec_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (247))).boolValue ()) {
result << "//--------------------------------- ++, -- operators\n"
  "  public : static void increment_operation (" ;
const GGS_string var_cas_COL1 = GGS_string::stringWithColumnCount (result) ;
result << var_cas_TYPE_NAME ;
result << " * & ioOperand,\n" ;
result << var_cas_COL1 ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL1 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static void decrement_operation (" ;
const GGS_string var_cas_COL2 = GGS_string::stringWithColumnCount (result) ;
result << var_cas_TYPE_NAME ;
result << " * & ioOperand,\n" ;
result << var_cas_COL2 ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL2 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_shift_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (257))).boolValue ()) {
result << "//--------------------------------- << and >> shift operators\n"
  "  public : static " ;
result << var_cas_TYPE_NAME ;
result << " * left_shift_operation (" ;
const GGS_string var_cas_COL1 = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand,\n" ;
result << var_cas_COL1 ;
result << "const " ;
result << function_cppTypeNameForGalgasTypeName (inLexique, GGS_string ("uint") COMMA_SOURCE_FILE_AT_LINE (260)) ;
result << " * inShiftOperand,\n" ;
result << var_cas_COL1 ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL1 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static " ;
result << var_cas_TYPE_NAME ;
result << " * right_shift_operation (" ;
const GGS_string var_cas_COL2 = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inOperand,\n" ;
result << var_cas_COL2 ;
result << "const " ;
result << function_cppTypeNameForGalgasTypeName (inLexique, GGS_string ("uint") COMMA_SOURCE_FILE_AT_LINE (264)) ;
result << " * inShiftOperand,\n" ;
result << var_cas_COL2 ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL2 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_inc_dec_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (270))).boolValue ()) {
result << "//--------------------------------- Modifier utility method\n"
  "  protected : static void insulate (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << var_cas_TYPE_NAME ;
result << " * & ioOperand\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((findCategoryReader__ACGalgasType__scalarAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (276))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Private data member\n"
  "  private : " ;
result << (findCategoryReader__ACGalgasType__scalarAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (278))) ;
result << " mValue ;\n"
  "  public : inline " ;
result << (findCategoryReader__ACGalgasType__scalarAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (279))) ;
result << " value (void) const { return mValue ; }\n" ;
}else if (((findCategoryReader__ACGalgasType__classAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (280))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Private data member\n"
  "  private : " ;
result << (findCategoryReader__ACGalgasType__classAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (282))) ;
result << " mValue ;\n"
  "  public : inline " ;
result << (findCategoryReader__ACGalgasType__classAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (283))) ;
result << " value (void) const { return mValue ; }\n" ;
}else if (((findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (284))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Private data member\n"
  "  private : const " ;
result << (findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (286))) ;
result << " * mValue ;\n"
  "  public : inline const " ;
result << (findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (287))) ;
result << " * value (void) const { return mValue ; }\n" ;
}else if (((findCategoryReader__ACGalgasType__embeddedObjectTypeNames (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (288))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Private data members\n" ;
GGS_stringlist::cEnumerator enumerator_12264 ((findCategoryReader__ACGalgasType__embeddedObjectTypeNames (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (290))), true) ;
const GGS_stringlist::cElement * operand_12264 = NULL ;
while (((operand_12264 = enumerator_12264.nextObject ()))) {
macroValidPointer (operand_12264) ;
result << "  private : const " ;
result << function_cppTypeNameForGalgasTypeName (inLexique, operand_12264->mValue COMMA_SOURCE_FILE_AT_LINE (291)) ;
result << " * m" ;
result << operand_12264->mValue.reader_stringByCapitalizingFirstCharacter () ;
result << "Value ;\n"
  "  public : inline const " ;
result << function_cppTypeNameForGalgasTypeName (inLexique, operand_12264->mValue COMMA_SOURCE_FILE_AT_LINE (292)) ;
result << " * value (void) const { return m" ;
result << operand_12264->mValue.reader_stringByCapitalizingFirstCharacter () ;
result << "Value ; }\n" ;
}
}else {
}
result << "//--------------------------------- Friends\n" ;
GGS_readerMap::cEnumerator enumerator_12659 ((findCategoryReader__ACGalgasType__readerMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (296))), true) ;
const GGS_readerMap::cElement * operand_12659 = NULL ;
while (((operand_12659 = enumerator_12659.nextObject ()))) {
macroValidPointer (operand_12659) ;
if ((operand_12659->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_HERE)).boolValue ()) {
result << "  friend " ;
result << function_cppTypeName (inLexique, operand_12659->mInfo.mReturnedType COMMA_SOURCE_FILE_AT_LINE (298)) ;
result << " * readerCall_" ;
result << operand_12659->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (298)) ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inObject" ;
GGS_typeList::cEnumerator enumerator_12871 (operand_12659->mInfo.mArgumentTypeList, true) ;
const GGS_typeList::cElement * operand_12871 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12871 = enumerator_12871.nextObject ()))) {
macroValidPointer (operand_12871) ;
result << ",\n" ;
result << var_cas_COL ;
result << "const " ;
result << function_cppTypeName (inLexique, operand_12871->mType COMMA_SOURCE_FILE_AT_LINE (301)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (301)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_12659->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' readers")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
GGS_readerMap::cEnumerator enumerator_13591 ((findCategoryReader__ACGalgasType__readerMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (319))), true) ;
const GGS_readerMap::cElement * operand_13591 = NULL ;
while (((operand_13591 = enumerator_13591.nextObject ()))) {
macroValidPointer (operand_13591) ;
if ((operand_13591->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_HERE)).boolValue ()) {
result << "inline " ;
result << function_cppTypeName (inLexique, operand_13591->mInfo.mReturnedType COMMA_SOURCE_FILE_AT_LINE (321)) ;
result << " * readerCall_" ;
result << operand_13591->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (321)) ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const " ;
result << var_cas_TYPE_NAME ;
result << " * inObject" ;
GGS_typeList::cEnumerator enumerator_13801 (operand_13591->mInfo.mArgumentTypeList, true) ;
const GGS_typeList::cElement * operand_13801 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_13801 = enumerator_13801.nextObject ()))) {
macroValidPointer (operand_13801) ;
result << ",\n" ;
result << var_cas_COL ;
result << "const " ;
result << function_cppTypeName (inLexique, operand_13801->mType COMMA_SOURCE_FILE_AT_LINE (324)) ;
result << " * inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (324)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_13591->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  " ;
result << function_cppTypeName (inLexique, operand_13591->mInfo.mReturnedType COMMA_SOURCE_FILE_AT_LINE (332)) ;
result << " * result = NULL ;\n"
  "  if (inObject != NULL) {\n"
  "    result = inObject->reader_" ;
result << operand_13591->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (334)) ;
result << " (" ;
GGS_typeList::cEnumerator enumerator_14258 (operand_13591->mInfo.mArgumentTypeList, true) ;
const GGS_typeList::cElement * operand_14258 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_14258 = enumerator_14258.nextObject ()))) {
macroValidPointer (operand_14258) ;
result << "inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (336)) ;
if (enumerator_14258.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_13591->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_13591->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_13591->mInfo.mHasLexiqueArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
}else {
}
}
result << "\n"
  "\n"
  "#endif\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'prefinedTypesHeader' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_prefinedTypesHeader (C_Compiler & /* inLexique */,
                                const GGS_stringlist & var_cas_PREDEFINED_TYPE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_PREDEFINED_TYPE_LIST.isBuilt () ;
  if (isBuilt) {
result << "\n"
  "#ifndef GALGAS2_PREDEFINED_TYPES\n"
  "#define GALGAS2_PREDEFINED_TYPES\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "#include \"galgas2/AC_GALGAS_Array.h\"\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
GGS_stringlist::cEnumerator enumerator_298 (var_cas_PREDEFINED_TYPE_LIST, true) ;
const GGS_stringlist::cElement * operand_298 = NULL ;
while (((operand_298 = enumerator_298.nextObject ()))) {
macroValidPointer (operand_298) ;
result << "class " ;
result << operand_298->mValue ;
result << " ;\n" ;
}
result << "class C_Compiler ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'listTypeHeader' template of 'builtinTypeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_listTypeHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_attributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " : public AC_GALGAS_Array {\n"
  "//--- Constructor\n"
  "  protected : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (LOCATION_ARGS) ;\n"
  "\n"
  "//--- No copy\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "\n"
  "//--- GALGAS constructors\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * constructor_emptyList (LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * constructor_listWithValue (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_attributeList::cEnumerator enumerator_963 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_963 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_963 = enumerator_963.nextObject ()))) {
macroValidPointer (operand_963) ;
result << "const GALGAS_" ;
result << operand_963->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (23)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (23)) ;
if (enumerator_963.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--------------------------------- . (concat) operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_concat (" ;
const GGS_string var_cas_COL1 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL1 ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL1 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Modifier handling\n"
  "  protected : static void insulate (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioObject) ;\n"
  "  \n"
  "//--- += operator\n"
  "  protected : void addAssign_operation (" ;
const GGS_string var_cas_COL2 = GGS_string::stringWithColumnCount (result) ;
GGS_attributeList::cEnumerator enumerator_1565 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_1565 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1565 = enumerator_1565.nextObject ()))) {
macroValidPointer (operand_1565) ;
result << "const GALGAS_" ;
result << operand_1565->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
if (enumerator_1565.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL2 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "\n"
  "//--- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n"
  "//--- Friend\n"
  "  friend void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                                   const GALGAS_string * inOperand0) ;\n"
  "  \n"
  "  friend void modifier_prependValue (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_2067 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2067 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2067 = enumerator_2067.nextObject ()))) {
macroValidPointer (operand_2067) ;
result << "                                     const GALGAS_" ;
result << operand_2067->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (54)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (54)) ;
if (enumerator_2067.hasNextObject ()) {
result << "," ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "                                     COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void modifier_popFirst (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_2389 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2389 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2389 = enumerator_2389.nextObject ()))) {
macroValidPointer (operand_2389) ;
result << "                                 GALGAS_" ;
result << operand_2389->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (62)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (62)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                                 C_Compiler * inCompiler\n"
  "                                 COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void modifier_popLast (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_2747 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2747 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2747 = enumerator_2747.nextObject ()))) {
macroValidPointer (operand_2747) ;
result << "                                GALGAS_" ;
result << operand_2747->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (70)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (70)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                                C_Compiler * inCompiler\n"
  "                                COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                                   const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                                   COMMA_LOCATION_ARGS) ;\n" ;
GGS_attributeList::cEnumerator enumerator_3234 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3234 = NULL ;
while (((operand_3234 = enumerator_3234.nextObject ()))) {
macroValidPointer (operand_3234) ;
result << "\n"
  "  friend void modifier_set" ;
result << operand_3234->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (80)).reader_stringByCapitalizingFirstCharacter () ;
result << "AtIndex (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioList,\n"
  "                                         const GALGAS_" ;
result << operand_3234->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (81)) ;
result << " * inAttributeValue,\n"
  "                                         const GALGAS_uint * inIndex,\n"
  "                                         C_Compiler * inCompiler\n"
  "                                         COMMA_LOCATION_ARGS) ;\n" ;
}
GGS_attributeList::cEnumerator enumerator_3729 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3729 = NULL ;
while (((operand_3729 = enumerator_3729.nextObject ()))) {
macroValidPointer (operand_3729) ;
result << "\n"
  "  friend const GALGAS_" ;
result << operand_3729->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (89)) ;
result << " * reader_" ;
result << operand_3729->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (89)) ;
result << "AtIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                                     const GALGAS_uint * inIndex,\n"
  "                                                     C_Compiler * inCompiler\n"
  "                                                     COMMA_LOCATION_ARGS) ;\n" ;
}
result << "\n"
  "  friend void method_first (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_4225 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4225 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4225 = enumerator_4225.nextObject ()))) {
macroValidPointer (operand_4225) ;
result << "                            GALGAS_" ;
result << operand_4225->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (98)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (98)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                            C_Compiler * inCompiler\n"
  "                            COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void method_last (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_4565 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4565 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4565 = enumerator_4565.nextObject ()))) {
macroValidPointer (operand_4565) ;
result << "                           GALGAS_" ;
result << operand_4565->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (106)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (106)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                           C_Compiler * inCompiler\n"
  "                           COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * reader_subListWithRange (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                                      const GALGAS_uint * inIndex,\n"
  "                                                      const GALGAS_uint * inLength,\n"
  "                                                      C_Compiler * inCompiler\n"
  "                                                      COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * reader_subListFromIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                                      const GALGAS_uint * inIndex,\n"
  "                                                      C_Compiler * inCompiler\n"
  "                                                      COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Enumerator class\n"
  "  public : class cEnumerator : public AC_GALGAS_Enumerator {\n"
  "    public : cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inEnumeratedObject,\n"
  "                          const bool inAscending) ;\n"
  "  \n"
  "  //--- Attribute access\n" ;
GGS_attributeList::cEnumerator enumerator_5821 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5821 = NULL ;
while (((operand_5821 = enumerator_5821.nextObject ()))) {
macroValidPointer (operand_5821) ;
result << "    public : const GALGAS_" ;
result << operand_5821->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (129)) ;
result << " * attribute_" ;
result << operand_5821->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (129)) ;
result << " (void) const ;\n" ;
}
result << "  } ;\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                          const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                          COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                          const GALGAS_string * inOperand0) ;\n"
  "\n"
  "void modifier_popFirst (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_6443 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6443 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6443 = enumerator_6443.nextObject ()))) {
macroValidPointer (operand_6443) ;
result << "                        GALGAS_" ;
result << operand_6443->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (146)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (146)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                        C_Compiler * inCompiler\n"
  "                        COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void modifier_popLast (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_6765 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6765 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6765 = enumerator_6765.nextObject ()))) {
macroValidPointer (operand_6765) ;
result << "                       GALGAS_" ;
result << operand_6765->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (154)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (154)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                       C_Compiler * inCompiler\n"
  "                       COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void modifier_prependValue (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                            const GALGAS_string * inOperand0\n"
  "                            COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void method_first (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_7257 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7257 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7257 = enumerator_7257.nextObject ()))) {
macroValidPointer (operand_7257) ;
result << "                   GALGAS_" ;
result << operand_7257->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                   C_Compiler * inCompiler\n"
  "                   COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void method_last (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_7561 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7561 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7561 = enumerator_7561.nextObject ()))) {
macroValidPointer (operand_7561) ;
result << "                  GALGAS_" ;
result << operand_7561->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                  C_Compiler * inCompiler\n"
  "                  COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
GGS_attributeList::cEnumerator enumerator_7806 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7806 = NULL ;
while (((operand_7806 = enumerator_7806.nextObject ()))) {
macroValidPointer (operand_7806) ;
result << "\n"
  "void modifier_set" ;
result << operand_7806->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (181)).reader_stringByCapitalizingFirstCharacter () ;
result << "AtIndex (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioList,\n"
  "                                         const GALGAS_" ;
result << operand_7806->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (182)) ;
result << " * inAttributeValue,\n"
  "                                         const GALGAS_uint * inIndex,\n"
  "                                         C_Compiler * inCompiler\n"
  "                                         COMMA_LOCATION_ARGS) ;\n" ;
}
GGS_attributeList::cEnumerator enumerator_8292 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_8292 = NULL ;
while (((operand_8292 = enumerator_8292.nextObject ()))) {
macroValidPointer (operand_8292) ;
result << "\n"
  "const GALGAS_" ;
result << operand_8292->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (190)) ;
result << " * reader_" ;
result << operand_8292->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (190)) ;
result << "AtIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                                     const GALGAS_uint * inIndex,\n"
  "                                                     C_Compiler * inCompiler\n"
  "                                                     COMMA_LOCATION_ARGS) ;\n" ;
}
result << "\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * reader_subListWithRange (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             const GALGAS_uint * inLength,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * reader_subListFromIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@ACGalgasType.appendGeneratedHeader'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ACGalgasType__appendGeneratedHeader (C_Compiler &,
                                const cPtr_ACGalgasType * operand_9676,
                                GGS_string & /* var_cas_ioHeader */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9676 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Virtual Table for category method '@ACGalgasType.appendGeneratedHeader'   *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__ACGalgasType__appendGeneratedHeader> gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ACGalgasType__appendGeneratedHeader (typeCategoryMethod__ACGalgasType__appendGeneratedHeader inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__ACGalgasType__appendGeneratedHeader
findCategoryMethod__ACGalgasType__appendGeneratedHeader (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__ACGalgasType__appendGeneratedHeader result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.count ()) {
    result = gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__ACGalgasType__appendGeneratedHeader (superClassPtr) ;
      gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@listGalgasType.appendGeneratedHeader'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listGalgasType__appendGeneratedHeader (C_Compiler & inLexique,
                                const cPtr_listGalgasType * operand_9851,
                                GGS_string & var_cas_ioHeader
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9851 != NULL) {
GGS_ACGalgasType  var_cas_t = operand_9851 ;
GGS_listGalgasType  var_cas_tt = operand_9851 ;
var_cas_ioHeader.dotAssign_operation (template_filewrapper_builtinTypeGenerationTemplate_listTypeHeader (inLexique, (findCategoryReader__ACGalgasType__typeName (var_cas_t (HERE)->galgasRTTI ()) (inLexique, var_cas_t.getPtr () COMMA_SOURCE_FILE_AT_LINE (231))), var_cas_tt.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (232)))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "generateHeadersOfBuiltinTypes"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateHeadersOfBuiltinTypes (C_Compiler & inLexique,
                                const GGS_string  var_cas_inDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateHeadersOfBuiltinTypes at %s:%d\n", __FILE__, __LINE__) ;
  #endif
const GGS_bool cond_11781 = (var_cas_inDirectory).operator_isNotEqual (GGS_string ("")) ;
if (cond_11781.isBuiltAndTrue ()) {
const GGS_bool cond_10399 = (var_cas_inDirectory.reader_directoryExists ()).operator_not () ;
if (cond_10399.isBuiltAndTrue ()) {
GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (var_cas_inDirectory)).operator_concat (GGS_string ("' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (242)) ;
}else if (cond_10399.isBuiltAndFalse ()) {
GGS_stringlist  var_cas_cppTypeNameList = GGS_stringlist ::constructor_emptyList () ;
{
GGS_typeMap::cEnumerator enumerator_10521 (function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (245)), true) ;
const GGS_typeMap::cElement * operand_10521 = NULL ;
while (((operand_10521 = enumerator_10521.nextObject ()))) {
  macroValidPointer (operand_10521) ;
var_cas_cppTypeNameList.addAssign_operation (function_cppTypeNameForGalgasTypeName (inLexique, operand_10521->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (246)) COMMA_SOURCE_FILE_AT_LINE (246))) ;
}
}
const GGS_typeMap  var_cas_primitiveTypeMap = function_constructPrimitiveTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (249)) ;
{
GGS_typeMap::cEnumerator enumerator_10751 (var_cas_primitiveTypeMap, true) ;
const GGS_typeMap::cElement * operand_10751 = NULL ;
while (((operand_10751 = enumerator_10751.nextObject ()))) {
  macroValidPointer (operand_10751) ;
const GGS_string var_cas_typeName = function_cppTypeName (inLexique, operand_10751->mInfo.mType COMMA_SOURCE_FILE_AT_LINE (251)) ;
GGS_string::class_method_generateFile (inLexique, var_cas_inDirectory, (var_cas_typeName).operator_concat (GGS_string (".h")), GGS_string ("//"), GGS_string ("\n"
  "\n"), template_filewrapper_builtinTypeGenerationTemplate_primitiveTypeHeaderFile (inLexique, var_cas_cppTypeNameList, var_cas_typeName, operand_10751->mInfo.mType), GGS_string ("\n"
  "\n"), GGS_string ("") COMMA_SOURCE_FILE_AT_LINE (252)) ;
}
}
GGS_string var_cas_generatedCode = template_filewrapper_builtinTypeGenerationTemplate_prefinedTypesHeader (inLexique, var_cas_cppTypeNameList) ;
{
GGS_typeMap::cEnumerator enumerator_11383 (function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (270)), true) ;
const GGS_typeMap::cElement * operand_11383 = NULL ;
while (((operand_11383 = enumerator_11383.nextObject ()))) {
  macroValidPointer (operand_11383) ;
const GGS_bool cond_11519 = (var_cas_primitiveTypeMap.reader_hasKey (operand_11383->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (271)))).operator_not () ;
if (cond_11519.isBuiltAndTrue ()) {
const GGS_ACGalgasType  temp_11488 = operand_11383->mInfo.mType ;
if (temp_11488.isBuilt ()) {
  typeCategoryMethod__ACGalgasType__appendGeneratedHeader method = findCategoryMethod__ACGalgasType__appendGeneratedHeader (temp_11488.galgasObjectRunTimeInfo ()) ;
  if (method != NULL) {
    method (inLexique, temp_11488 (HERE), var_cas_generatedCode COMMA_SOURCE_FILE_AT_LINE (272)) ;
  }
}
}
}
}
GGS_string::class_method_generateFile (inLexique, var_cas_inDirectory, GGS_string ("predefinedTypes2.h"), GGS_string ("//"), GGS_string ("\n"
  "\n"), var_cas_generatedCode, GGS_string ("\n"
  "\n"), GGS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (275)) ;
}
}
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateHeadersOfBuiltinTypes\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_generateHeadersOfBuiltinTypes (void) {
 enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName (category_reader__ACGalgasType__scalarAttributeCppTypeName, gClassInfoFor__ACGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName ((typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName) category_reader__boolGalgasType__scalarAttributeCppTypeName, gClassInfoFor__boolGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName ((typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName) category_reader__charGalgasType__scalarAttributeCppTypeName, gClassInfoFor__charGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName ((typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName) category_reader__uintGalgasType__scalarAttributeCppTypeName, gClassInfoFor__uintGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName ((typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName) category_reader__sintGalgasType__scalarAttributeCppTypeName, gClassInfoFor__sintGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName ((typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName) category_reader__uint64GalgasType__scalarAttributeCppTypeName, gClassInfoFor__uint64GalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName ((typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName) category_reader__sint64GalgasType__scalarAttributeCppTypeName, gClassInfoFor__sint64GalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName ((typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName) category_reader__doubleGalgasType__scalarAttributeCppTypeName, gClassInfoFor__doubleGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__pointerAttributeCppTypeName (category_reader__ACGalgasType__pointerAttributeCppTypeName, gClassInfoFor__ACGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__pointerAttributeCppTypeName ((typeCategoryReader__ACGalgasType__pointerAttributeCppTypeName) category_reader__objectGalgasType__pointerAttributeCppTypeName, gClassInfoFor__objectGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__pointerAttributeCppTypeName ((typeCategoryReader__ACGalgasType__pointerAttributeCppTypeName) category_reader__typeGalgasType__pointerAttributeCppTypeName, gClassInfoFor__typeGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__classAttributeCppTypeName (category_reader__ACGalgasType__classAttributeCppTypeName, gClassInfoFor__ACGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__classAttributeCppTypeName ((typeCategoryReader__ACGalgasType__classAttributeCppTypeName) category_reader__stringGalgasType__classAttributeCppTypeName, gClassInfoFor__stringGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__embeddedObjectTypeNames (category_reader__ACGalgasType__embeddedObjectTypeNames, gClassInfoFor__ACGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__embeddedObjectTypeNames ((typeCategoryReader__ACGalgasType__embeddedObjectTypeNames) category_reader__lstringGalgasType__embeddedObjectTypeNames, gClassInfoFor__lstringGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__embeddedObjectTypeNames ((typeCategoryReader__ACGalgasType__embeddedObjectTypeNames) category_reader__lcharGalgasType__embeddedObjectTypeNames, gClassInfoFor__lcharGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__embeddedObjectTypeNames ((typeCategoryReader__ACGalgasType__embeddedObjectTypeNames) category_reader__luintGalgasType__embeddedObjectTypeNames, gClassInfoFor__luintGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__embeddedObjectTypeNames ((typeCategoryReader__ACGalgasType__embeddedObjectTypeNames) category_reader__lsintGalgasType__embeddedObjectTypeNames, gClassInfoFor__lsintGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__embeddedObjectTypeNames ((typeCategoryReader__ACGalgasType__embeddedObjectTypeNames) category_reader__luint64GalgasType__embeddedObjectTypeNames, gClassInfoFor__luint64GalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__embeddedObjectTypeNames ((typeCategoryReader__ACGalgasType__embeddedObjectTypeNames) category_reader__lsint64GalgasType__embeddedObjectTypeNames, gClassInfoFor__lsint64GalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__embeddedObjectTypeNames ((typeCategoryReader__ACGalgasType__embeddedObjectTypeNames) category_reader__lboolGalgasType__embeddedObjectTypeNames, gClassInfoFor__lboolGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__embeddedObjectTypeNames ((typeCategoryReader__ACGalgasType__embeddedObjectTypeNames) category_reader__ldoubleGalgasType__embeddedObjectTypeNames, gClassInfoFor__ldoubleGalgasType.slotID ()) ;
 enterCategoryMethod__ACGalgasType__appendGeneratedHeader (category_method__ACGalgasType__appendGeneratedHeader, gClassInfoFor__ACGalgasType.slotID ()) ;
 enterCategoryMethod__ACGalgasType__appendGeneratedHeader ((typeCategoryMethod__ACGalgasType__appendGeneratedHeader) category_method__listGalgasType__appendGeneratedHeader, gClassInfoFor__listGalgasType.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_generateHeadersOfBuiltinTypes (prologueRoutineFor_generateHeadersOfBuiltinTypes,
                                   NULL) ;

//---------------------------------------------------------------------------*

