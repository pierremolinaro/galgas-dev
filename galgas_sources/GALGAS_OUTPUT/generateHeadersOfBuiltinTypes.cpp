//---------------------------------------------------------------------------*
//                                                                           *
//                 File 'generateHeadersOfBuiltinTypes.cpp'                  *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     january 23th, 2010, at 13h41'8"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "generateHeadersOfBuiltinTypes.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "generateHeadersOfBuiltinTypes.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@ACGalgasType.scalarAttributeCppTypeName'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__ACGalgasType__scalarAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_ACGalgasType * operand_2357
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_2357 != NULL) {
    var_cas_outTypeName = GGS_string ("") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@ACGalgasType.scalarAttributeCppTypeName'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName> gDispatchTableForReader__ACGalgasType__scalarAttributeCppTypeName ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName (typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__scalarAttributeCppTypeName.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__ACGalgasType_defaultReader_scalarAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName
findCategoryReader__ACGalgasType__scalarAttributeCppTypeName (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__scalarAttributeCppTypeName.count ()) {
    result = gDispatchTableForReader__ACGalgasType__scalarAttributeCppTypeName (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__scalarAttributeCppTypeName (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__scalarAttributeCppTypeName.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_scalarAttributeCppTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@boolGalgasType.scalarAttributeCppTypeName'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__boolGalgasType__scalarAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_boolGalgasType * operand_2584
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_2584 != NULL) {
    var_cas_outTypeName = GGS_string ("bool") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@charGalgasType.scalarAttributeCppTypeName'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__charGalgasType__scalarAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_charGalgasType * operand_2787
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_2787 != NULL) {
    var_cas_outTypeName = GGS_string ("utf32") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@uintGalgasType.scalarAttributeCppTypeName'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__uintGalgasType__scalarAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_uintGalgasType * operand_2991
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_2991 != NULL) {
    var_cas_outTypeName = GGS_string ("PMUInt32") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@sintGalgasType.scalarAttributeCppTypeName'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sintGalgasType__scalarAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_sintGalgasType * operand_3198
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_3198 != NULL) {
    var_cas_outTypeName = GGS_string ("PMSInt32") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@uint64GalgasType.scalarAttributeCppTypeName'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__uint64GalgasType__scalarAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_uint64GalgasType * operand_3407
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_3407 != NULL) {
    var_cas_outTypeName = GGS_string ("PMUInt64") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@sint64GalgasType.scalarAttributeCppTypeName'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sint64GalgasType__scalarAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_sint64GalgasType * operand_3616
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_3616 != NULL) {
    var_cas_outTypeName = GGS_string ("PMSInt64") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@doubleGalgasType.scalarAttributeCppTypeName'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__doubleGalgasType__scalarAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_doubleGalgasType * operand_3825
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_3825 != NULL) {
    var_cas_outTypeName = GGS_string ("double") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@ACGalgasType.pointerAttributeCppTypeName'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__ACGalgasType__pointerAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_ACGalgasType * operand_4332
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_4332 != NULL) {
    var_cas_outTypeName = GGS_string ("") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@ACGalgasType.pointerAttributeCppTypeName'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__pointerAttributeCppTypeName> gDispatchTableForReader__ACGalgasType__pointerAttributeCppTypeName ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__pointerAttributeCppTypeName (typeCategoryReader__ACGalgasType__pointerAttributeCppTypeName inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__pointerAttributeCppTypeName.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__ACGalgasType_defaultReader_pointerAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__pointerAttributeCppTypeName
findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__pointerAttributeCppTypeName result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__pointerAttributeCppTypeName.count ()) {
    result = gDispatchTableForReader__ACGalgasType__pointerAttributeCppTypeName (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__pointerAttributeCppTypeName.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_pointerAttributeCppTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@objectGalgasType.pointerAttributeCppTypeName'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__objectGalgasType__pointerAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_objectGalgasType * operand_4562
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_4562 != NULL) {
    var_cas_outTypeName = GGS_string ("AC_GALGAS__root") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@typeGalgasType.pointerAttributeCppTypeName'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__typeGalgasType__pointerAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_typeGalgasType * operand_4777
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_4777 != NULL) {
    var_cas_outTypeName = GGS_string ("C_galgas_type_descriptor") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@functionGalgasType.pointerAttributeCppTypeName'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__functionGalgasType__pointerAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_functionGalgasType * operand_5005
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_5005 != NULL) {
    var_cas_outTypeName = GGS_string ("C_galgas_function_descriptor") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@locationGalgasType.pointerAttributeCppTypeName'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__locationGalgasType__pointerAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_locationGalgasType * operand_5237
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_5237 != NULL) {
    var_cas_outTypeName = GGS_string ("C_Compiler") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@ACGalgasType.classAttributeCppTypeName'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__ACGalgasType__classAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_ACGalgasType * operand_5746
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_5746 != NULL) {
    var_cas_outTypeName = GGS_string ("") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@ACGalgasType.classAttributeCppTypeName'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__classAttributeCppTypeName> gDispatchTableForReader__ACGalgasType__classAttributeCppTypeName ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__classAttributeCppTypeName (typeCategoryReader__ACGalgasType__classAttributeCppTypeName inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__classAttributeCppTypeName.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__ACGalgasType_defaultReader_classAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__classAttributeCppTypeName
findCategoryReader__ACGalgasType__classAttributeCppTypeName (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__classAttributeCppTypeName result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__classAttributeCppTypeName.count ()) {
    result = gDispatchTableForReader__ACGalgasType__classAttributeCppTypeName (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__classAttributeCppTypeName (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__classAttributeCppTypeName.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_classAttributeCppTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@stringGalgasType.classAttributeCppTypeName'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__stringGalgasType__classAttributeCppTypeName (C_CompilerEx &,
                                const cPtr_stringGalgasType * operand_5974
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outTypeName ;
  if (operand_5974 != NULL) {
    var_cas_outTypeName = GGS_string ("C_String") ;
  }
  return var_cas_outTypeName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category reader '@ACGalgasType.embeddedObjectTypeNames'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__ACGalgasType__embeddedObjectTypeNames (C_CompilerEx &,
                                const cPtr_ACGalgasType * operand_6479
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_6479 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@ACGalgasType.embeddedObjectTypeNames'  *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__embeddedObjectTypeNames> gDispatchTableForReader__ACGalgasType__embeddedObjectTypeNames ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__embeddedObjectTypeNames (typeCategoryReader__ACGalgasType__embeddedObjectTypeNames inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__embeddedObjectTypeNames.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__ACGalgasType_defaultReader_embeddedObjectTypeNames (C_CompilerEx &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_stringlist  () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__embeddedObjectTypeNames
findCategoryReader__ACGalgasType__embeddedObjectTypeNames (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__embeddedObjectTypeNames result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__embeddedObjectTypeNames.count ()) {
    result = gDispatchTableForReader__ACGalgasType__embeddedObjectTypeNames (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__embeddedObjectTypeNames (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__embeddedObjectTypeNames.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_embeddedObjectTypeNames ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lstringGalgasType.embeddedObjectTypeNames'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__lstringGalgasType__embeddedObjectTypeNames (C_CompilerEx &,
                                const cPtr_lstringGalgasType * operand_6703
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_6703 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("string")) ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("location")) ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@lcharGalgasType.embeddedObjectTypeNames'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__lcharGalgasType__embeddedObjectTypeNames (C_CompilerEx &,
                                const cPtr_lcharGalgasType * operand_6985
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_6985 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("char")) ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("location")) ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@luintGalgasType.embeddedObjectTypeNames'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__luintGalgasType__embeddedObjectTypeNames (C_CompilerEx &,
                                const cPtr_luintGalgasType * operand_7265
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_7265 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("uint")) ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("location")) ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@lsintGalgasType.embeddedObjectTypeNames'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__lsintGalgasType__embeddedObjectTypeNames (C_CompilerEx &,
                                const cPtr_lsintGalgasType * operand_7545
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_7545 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("sint")) ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("location")) ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@luint64GalgasType.embeddedObjectTypeNames'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__luint64GalgasType__embeddedObjectTypeNames (C_CompilerEx &,
                                const cPtr_luint64GalgasType * operand_7827
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_7827 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("uint64")) ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("location")) ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lsint64GalgasType.embeddedObjectTypeNames'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__lsint64GalgasType__embeddedObjectTypeNames (C_CompilerEx &,
                                const cPtr_lsint64GalgasType * operand_8111
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_8111 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("sint64")) ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("location")) ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@lboolGalgasType.embeddedObjectTypeNames'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__lboolGalgasType__embeddedObjectTypeNames (C_CompilerEx &,
                                const cPtr_lboolGalgasType * operand_8393
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_8393 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("bool")) ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("location")) ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@ldoubleGalgasType.embeddedObjectTypeNames'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_stringlist 
category_reader__ldoubleGalgasType__embeddedObjectTypeNames (C_CompilerEx &,
                                const cPtr_ldoubleGalgasType * operand_8675
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_stringlist  var_cas_outTypeList ;
  if (operand_8675 != NULL) {
    var_cas_outTypeList = GGS_stringlist ::constructor_emptyList () ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("double")) ;
    var_cas_outTypeList.addAssign_operation (GGS_string ("location")) ;
  }
  return var_cas_outTypeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of wrapper 'builtinTypeGenerationTemplate'          *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_builtinTypeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_builtinTypeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_builtinTypeGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_builtinTypeGenerationTemplate_0,
  0,
  gWrapperAllDirectories_builtinTypeGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'primitiveTypeHeader' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_primitiveTypeHeader (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_ACGalgasType & var_cas_TYPE) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " ;\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "class GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " : public AC_GALGAS__root {\n"
      "//--------------------------------- Native constructor\n" ;
    if (((findCategoryReader__ACGalgasType__scalarAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (14))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "  protected : GALGAS_" ;
      result << var_cas_TYPE_NAME ;
      result << " (const " ;
      result << (findCategoryReader__ACGalgasType__scalarAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (15))) ;
      result << " inValue COMMA_LOCATION_ARGS) ;\n"
        "\n"
        "  public : static GALGAS_" ;
      result << var_cas_TYPE_NAME ;
      result << " * constructor_new (const " ;
      result << (findCategoryReader__ACGalgasType__scalarAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (16))) ;
      result << " inValue COMMA_LOCATION_ARGS) ;\n" ;
    }else if (((findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (17))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "  protected : GALGAS_" ;
      result << var_cas_TYPE_NAME ;
      result << " (const " ;
      result << (findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (18))) ;
      result << " * inValue COMMA_LOCATION_ARGS) ;\n"
        "\n"
        "  public : static GALGAS_" ;
      result << var_cas_TYPE_NAME ;
      result << " * constructor_new (const " ;
      result << (findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (19))) ;
      result << " * inValue COMMA_LOCATION_ARGS) ;\n" ;
    }else if (((findCategoryReader__ACGalgasType__classAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (20))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "  protected : GALGAS_" ;
      result << var_cas_TYPE_NAME ;
      result << " (const " ;
      result << (findCategoryReader__ACGalgasType__classAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (21))) ;
      result << " & inValue COMMA_LOCATION_ARGS) ;\n"
        "\n"
        "  public : static GALGAS_" ;
      result << var_cas_TYPE_NAME ;
      result << " * constructor_new (const " ;
      result << (findCategoryReader__ACGalgasType__classAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (22))) ;
      result << " & inValue COMMA_LOCATION_ARGS) ;\n" ;
    }else if (((findCategoryReader__ACGalgasType__embeddedObjectTypeNames (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (23))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "  protected : GALGAS_" ;
      result << var_cas_TYPE_NAME ;
      result << " (" ;
      const GGS_string var_cas_COL1 = GGS_string::stringWithColumnCount (result) ;
      GGS_stringlist::cEnumerator enumerator_1772 ((findCategoryReader__ACGalgasType__embeddedObjectTypeNames (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (25))), true) ;
      const GGS_stringlist::cElement * operand_1772 = NULL ;
      while (((operand_1772 = enumerator_1772.nextObject ()))) {
        macroValidPointer (operand_1772) ;
        result << "const GALGAS_" ;
        result << operand_1772->mValue.reader_identifierRepresentation () ;
        result << " * in" ;
        result << operand_1772->mValue.reader_stringByCapitalizingFirstCharacter () ;
        result << "Value" ;
        if (enumerator_1772.hasNextObject ()) {
          result << ",\n" ;
          result << var_cas_COL1 ;
        }
      }
      result << "\n" ;
      result << var_cas_COL1 ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
      result << "  protected : GALGAS_" ;
      result << var_cas_TYPE_NAME ;
      result << " (LOCATION_ARGS) ;\n" ;
    }
    GGS_constructorMap::cEnumerator enumerator_2087 ((findCategoryReader__ACGalgasType__constructorMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (34))), true) ;
    const GGS_constructorMap::cElement * operand_2087 = NULL ;
    if (enumerator_2087.hasCurrentObject ()) {
      result << "//--------------------------------- GALGAS constructors\n" ;
      while (((operand_2087 = enumerator_2087.nextObject ()))) {
        macroValidPointer (operand_2087) ;
        result << "  public : static GALGAS_" ;
        result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_2087->mInfo.mReturnedType (HERE)->galgasRTTI ()) (inLexique, operand_2087->mInfo.mReturnedType.getPtr () COMMA_SOURCE_FILE_AT_LINE (37))) ;
        result << " * constructor_" ;
        result << operand_2087->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
        result << " (" ;
        const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
        GGS_typeList::cEnumerator enumerator_2298 (operand_2087->mInfo.mArgumentTypeList, true) ;
        const GGS_typeList::cElement * operand_2298 = NULL ;
        { GGS_uint var_cas_IDX (true, 0) ;
      while (((operand_2298 = enumerator_2298.nextObject ()))) {
        macroValidPointer (operand_2298) ;
        result << "const GALGAS_" ;
        result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_2298->mType (HERE)->galgasRTTI ()) (inLexique, operand_2298->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (39))) ;
        result << " * inOperand" ;
        result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
        if (enumerator_2298.hasNextObject ()) {
          result << ",\n" ;
          result << var_cas_COL ;
        }
        var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
      }
    }
    if ((operand_2087->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
      if (operand_2087->mInfo.mHasLexique.boolValue ()) {
        result << "C_CompilerEx * inCompiler\n" ;
        result << var_cas_COL ;
        result << "COMMA_LOCATION_ARGS" ;
      }else {
        result << "LOCATION_ARGS" ;
      }
    }else {
      if (operand_2087->mInfo.mHasLexique.boolValue ()) {
        result << ",\n" ;
        result << var_cas_COL ;
        result << "C_CompilerEx * inCompiler\n" ;
        result << var_cas_COL ;
        result << "COMMA_LOCATION_ARGS" ;
      }else {
        result << "\n" ;
        result << var_cas_COL ;
        result << "COMMA_LOCATION_ARGS" ;
      }
    }
    result << ") ;\n"
      "\n" ;
  }
}
result << "\n"
  "//--------------------------------- No copy\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "\n"
  "//--------------------------------- Implementation of reader 'description'\n"
  "  public : virtual void description (C_String & ioString,\n"
  "                                     const PMSInt32 inIndentation) const ;\n"
  "\n"
  "//--------------------------------- Readers\n" ;
GGS_readerMap::cEnumerator enumerator_3265 ((findCategoryReader__ACGalgasType__readerMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (69))), true) ;
const GGS_readerMap::cElement * operand_3265 = NULL ;
while (((operand_3265 = enumerator_3265.nextObject ()))) {
  macroValidPointer (operand_3265) ;
  if ((operand_3265->mInfo.mQualifier).operator_isNotEqual (GGS_readerQualifier::constructor_isInherited (inLexique COMMA_HERE)).boolValue ()) {
    result << "  protected : virtual GALGAS_" ;
    result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_3265->mInfo.mReturnedType (HERE)->galgasRTTI ()) (inLexique, operand_3265->mInfo.mReturnedType.getPtr () COMMA_SOURCE_FILE_AT_LINE (71))) ;
    result << " * reader_" ;
    result << operand_3265->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
    result << " (" ;
    const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
    GGS_typeList::cEnumerator enumerator_3477 (operand_3265->mInfo.mArgumentTypeList, true) ;
    const GGS_typeList::cElement * operand_3477 = NULL ;
    { GGS_uint var_cas_IDX (true, 0) ;
  while (((operand_3477 = enumerator_3477.nextObject ()))) {
    macroValidPointer (operand_3477) ;
    result << "const GALGAS_" ;
    result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_3477->mType (HERE)->galgasRTTI ()) (inLexique, operand_3477->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (73))) ;
    result << " * inOperand" ;
    result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (73)) ;
    if (enumerator_3477.hasNextObject ()) {
      result << ",\n" ;
      result << var_cas_COL ;
    }
    var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
  }
}
if ((operand_3265->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
  if (operand_3265->mInfo.mHasLexiqueArgument.boolValue ()) {
    result << "C_CompilerEx * inCompiler\n" ;
    result << var_cas_COL ;
    result << "COMMA_LOCATION_ARGS" ;
  }else {
    result << "LOCATION_ARGS" ;
  }
}else {
  if (operand_3265->mInfo.mHasLexiqueArgument.boolValue ()) {
    result << ",\n" ;
    result << var_cas_COL ;
    result << "C_CompilerEx * inCompiler\n" ;
    result << var_cas_COL ;
    result << "COMMA_LOCATION_ARGS" ;
  }else {
    result << "\n" ;
    result << var_cas_COL ;
    result << "COMMA_LOCATION_ARGS" ;
  }
}
result << ") const" ;
if ((operand_3265->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isAbstract (inLexique COMMA_HERE)).boolValue ()) {
  result << " = 0" ;
}else {
}
result << " ;\n"
  "\n" ;
}else {
}
}
if ((findCategoryReader__ACGalgasType__accept_and_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (97))).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_and (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_or_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (104))).boolValue ()) {
result << "//--------------------------------- | operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_or (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_xor_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (111))).boolValue ()) {
result << "//--------------------------------- ^ operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_xor (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_not_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (118))).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_not (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_tilde_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (124))).boolValue ()) {
result << "//--------------------------------- ~ operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_tilde (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
result << "//--------------------------------- Comparison\n"
  "  public : static GALGAS_bool * operator_isEqual (" ;
const GGS_string var_cas_COL_A = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL_A ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL_A ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_isNotEqual (" ;
const GGS_string var_cas_COL_B = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL_B ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL_B ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
if ((findCategoryReader__ACGalgasType__isComparable (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (139))).boolValue ()) {
result << "  public : static GALGAS_bool * operator_infOrEqual (" ;
const GGS_string var_cas_COL3 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL3 ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL3 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_supOrEqual (" ;
const GGS_string var_cas_COL4 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL4 ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL4 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_strictInf (" ;
const GGS_string var_cas_COL5 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL5 ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL5 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_strictSup (" ;
const GGS_string var_cas_COL6 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL6 ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL6 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
result << "  public : virtual PMSInt32 compareForSortedList (const AC_GALGAS__root * inOperand\n"
  "                                                   COMMA_LOCATION_ARGS) const ;\n"
  "\n"
  "//--- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n" ;
if ((findCategoryReader__ACGalgasType__accept_concat_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (166))).boolValue ()) {
result << "//--------------------------------- . (concat) operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_concat (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_add_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (173))).boolValue ()) {
result << "//--------------------------------- + operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * add_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_CompilerEx * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_sub_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (181))).boolValue ()) {
result << "//--------------------------------- - operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * substract_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_CompilerEx * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_mul_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (189))).boolValue ()) {
result << "//--------------------------------- * operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * multiply_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_CompilerEx * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_div_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (197))).boolValue ()) {
result << "//--------------------------------- / operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * divide_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_CompilerEx * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_mod_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (205))).boolValue ()) {
result << "//--------------------------------- mod operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * modulo_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_CompilerEx * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_unary_minus_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (213))).boolValue ()) {
result << "//--------------------------------- unary - operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_unary_minus (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand,\n" ;
result << var_cas_COL ;
result << "C_CompilerEx * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_inc_dec_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (220))).boolValue ()) {
result << "//--------------------------------- ++, -- operators\n"
  "  public : static void increment_operation (" ;
const GGS_string var_cas_COL1 = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioOperand,\n" ;
result << var_cas_COL1 ;
result << "C_CompilerEx * inCompiler\n" ;
result << var_cas_COL1 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static void decrement_operation (" ;
const GGS_string var_cas_COL2 = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioOperand,\n" ;
result << var_cas_COL2 ;
result << "C_CompilerEx * inCompiler\n" ;
result << var_cas_COL2 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_shift_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (230))).boolValue ()) {
result << "//--------------------------------- << and >> shift operators\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * left_shift_operation (" ;
const GGS_string var_cas_COL1 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand,\n" ;
result << var_cas_COL1 ;
result << "const GALGAS_uint * inShiftOperand,\n" ;
result << var_cas_COL1 ;
result << "C_CompilerEx * inCompiler\n" ;
result << var_cas_COL1 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * right_shift_operation (" ;
const GGS_string var_cas_COL2 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand,\n" ;
result << var_cas_COL2 ;
result << "const GALGAS_uint * inShiftOperand,\n" ;
result << var_cas_COL2 ;
result << "C_CompilerEx * inCompiler\n" ;
result << var_cas_COL2 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_inc_dec_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (243))).boolValue ()) {
result << "//--------------------------------- Modifier utility method\n"
  "  protected : static void insulate (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioOperand\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((findCategoryReader__ACGalgasType__scalarAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (249))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Private data member\n"
  "  private : " ;
result << (findCategoryReader__ACGalgasType__scalarAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (251))) ;
result << " mValue ;\n"
  "  public : inline " ;
result << (findCategoryReader__ACGalgasType__scalarAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (252))) ;
result << " value (void) const { return mValue ; }\n" ;
}else if (((findCategoryReader__ACGalgasType__classAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (253))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Private data member\n"
  "  private : " ;
result << (findCategoryReader__ACGalgasType__classAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (255))) ;
result << " mValue ;\n"
  "  public : inline " ;
result << (findCategoryReader__ACGalgasType__classAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (256))) ;
result << " value (void) const { return mValue ; }\n" ;
}else if (((findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (257))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Private data member\n"
  "  private : const " ;
result << (findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (259))) ;
result << " * mValue ;\n"
  "  public : inline const " ;
result << (findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (260))) ;
result << " * value (void) const { return mValue ; }\n" ;
}else if (((findCategoryReader__ACGalgasType__embeddedObjectTypeNames (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (261))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Private data members\n" ;
GGS_stringlist::cEnumerator enumerator_11703 ((findCategoryReader__ACGalgasType__embeddedObjectTypeNames (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (263))), true) ;
const GGS_stringlist::cElement * operand_11703 = NULL ;
while (((operand_11703 = enumerator_11703.nextObject ()))) {
macroValidPointer (operand_11703) ;
result << "  private : const GALGAS_" ;
result << operand_11703->mValue.reader_identifierRepresentation () ;
result << " * m" ;
result << operand_11703->mValue.reader_stringByCapitalizingFirstCharacter () ;
result << "Value ;\n"
  "  public : inline const GALGAS_" ;
result << operand_11703->mValue.reader_identifierRepresentation () ;
result << " * " ;
result << operand_11703->mValue.reader_identifierRepresentation () ;
result << "Value (void) const { return m" ;
result << operand_11703->mValue.reader_stringByCapitalizingFirstCharacter () ;
result << "Value ; }\n" ;
}
}else {
}
result << "//--------------------------------- Friends\n" ;
GGS_readerMap::cEnumerator enumerator_12138 ((findCategoryReader__ACGalgasType__readerMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (269))), true) ;
const GGS_readerMap::cElement * operand_12138 = NULL ;
while (((operand_12138 = enumerator_12138.nextObject ()))) {
macroValidPointer (operand_12138) ;
if ((operand_12138->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_HERE)).boolValue ()) {
result << "  friend GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_12138->mInfo.mReturnedType (HERE)->galgasRTTI ()) (inLexique, operand_12138->mInfo.mReturnedType.getPtr () COMMA_SOURCE_FILE_AT_LINE (271))) ;
result << " * readerCall_" ;
result << operand_12138->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (271)) ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inObject" ;
GGS_typeList::cEnumerator enumerator_12380 (operand_12138->mInfo.mArgumentTypeList, true) ;
const GGS_typeList::cElement * operand_12380 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12380 = enumerator_12380.nextObject ()))) {
macroValidPointer (operand_12380) ;
result << ",\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_12380->mType (HERE)->galgasRTTI ()) (inLexique, operand_12380->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (274))) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (274)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_12138->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_CompilerEx * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
GGS_readerMap::cEnumerator enumerator_12813 ((findCategoryReader__ACGalgasType__readerMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (288))), true) ;
const GGS_readerMap::cElement * operand_12813 = NULL ;
while (((operand_12813 = enumerator_12813.nextObject ()))) {
macroValidPointer (operand_12813) ;
if ((operand_12813->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_HERE)).boolValue ()) {
result << "inline GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_12813->mInfo.mReturnedType (HERE)->galgasRTTI ()) (inLexique, operand_12813->mInfo.mReturnedType.getPtr () COMMA_SOURCE_FILE_AT_LINE (290))) ;
result << " * readerCall_" ;
result << operand_12813->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (290)) ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inObject" ;
GGS_typeList::cEnumerator enumerator_13053 (operand_12813->mInfo.mArgumentTypeList, true) ;
const GGS_typeList::cElement * operand_13053 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_13053 = enumerator_13053.nextObject ()))) {
macroValidPointer (operand_13053) ;
result << ",\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_13053->mType (HERE)->galgasRTTI ()) (inLexique, operand_13053->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (293))) ;
result << " * inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (293)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_12813->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_CompilerEx * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_12813->mInfo.mReturnedType (HERE)->galgasRTTI ()) (inLexique, operand_12813->mInfo.mReturnedType.getPtr () COMMA_SOURCE_FILE_AT_LINE (301))) ;
result << " * result = NULL ;\n"
  "  if (inObject != NULL) {\n"
  "    result = inObject->reader_" ;
result << operand_12813->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (303)) ;
result << " (" ;
GGS_typeList::cEnumerator enumerator_13558 (operand_12813->mInfo.mArgumentTypeList, true) ;
const GGS_typeList::cElement * operand_13558 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_13558 = enumerator_13558.nextObject ()))) {
macroValidPointer (operand_13558) ;
result << "inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (305)) ;
if (enumerator_13558.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_12813->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_12813->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_12813->mInfo.mHasLexiqueArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypesHeader' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_predefinedTypesHeader (C_CompilerEx & inLexique,
                                const GGS_typeMap & var_cas_TYPE_MAP) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_MAP.isBuilt () ;
  if (isBuilt) {
result << "\n"
  "#ifndef GALGAS2_PREDEFINED_TYPES\n"
  "#define GALGAS2_PREDEFINED_TYPES\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "#include \"galgas2/AC_GALGAS_Array.h\"\n"
  "#include \"strings/C_String.h\"\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
GGS_typeMap::cEnumerator enumerator_316 (var_cas_TYPE_MAP, true) ;
const GGS_typeMap::cElement * operand_316 = NULL ;
while (((operand_316 = enumerator_316.nextObject ()))) {
macroValidPointer (operand_316) ;
result << "class GALGAS_" ;
result << operand_316->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
if (((findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (operand_316->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_316->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (15))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "class " ;
result << (findCategoryReader__ACGalgasType__pointerAttributeCppTypeName (operand_316->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_316->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (16))) ;
result << " ;\n" ;
}else {
}
}
result << "class C_Compiler ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'listTypeHeader' template of 'builtinTypeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_listTypeHeader (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_attributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " : public AC_GALGAS_Array {\n"
  "//--- Constructor\n"
  "  protected : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (LOCATION_ARGS) ;\n"
  "\n"
  "//--- No copy\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "\n"
  "//--- GALGAS constructors\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * constructor_emptyList (LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * constructor_listWithValue (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_attributeList::cEnumerator enumerator_1036 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_1036 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1036 = enumerator_1036.nextObject ()))) {
macroValidPointer (operand_1036) ;
result << "const GALGAS_" ;
result << operand_1036->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (24)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (24)) ;
if (enumerator_1036.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--------------------------------- . (concat) operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_concat (" ;
const GGS_string var_cas_COL1 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL1 ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL1 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Modifier handling\n"
  "  protected : static void insulate (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioObject) ;\n"
  "  \n"
  "//--- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n"
  "//--- Friend\n"
  "  friend void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_1758 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_1758 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1758 = enumerator_1758.nextObject ()))) {
macroValidPointer (operand_1758) ;
result << ",\n"
  "                                   const GALGAS_" ;
result << operand_1758->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (43)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (43)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "  \n"
  "  friend void modifier_prependValue (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_2018 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2018 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2018 = enumerator_2018.nextObject ()))) {
macroValidPointer (operand_2018) ;
result << "                                     const GALGAS_" ;
result << operand_2018->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (50)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (50)) ;
if (enumerator_2018.hasNextObject ()) {
result << "," ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "                                     COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void modifier_popFirst (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_2340 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2340 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2340 = enumerator_2340.nextObject ()))) {
macroValidPointer (operand_2340) ;
result << "                                 GALGAS_" ;
result << operand_2340->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (58)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (58)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                                 C_Compiler * inCompiler\n"
  "                                 COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void modifier_popLast (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_2698 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2698 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2698 = enumerator_2698.nextObject ()))) {
macroValidPointer (operand_2698) ;
result << "                                GALGAS_" ;
result << operand_2698->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                                C_Compiler * inCompiler\n"
  "                                COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                                   const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                                   COMMA_LOCATION_ARGS) ;\n" ;
GGS_attributeList::cEnumerator enumerator_3185 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3185 = NULL ;
while (((operand_3185 = enumerator_3185.nextObject ()))) {
macroValidPointer (operand_3185) ;
result << "\n"
  "  friend void modifier_set" ;
result << operand_3185->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (76)).reader_stringByCapitalizingFirstCharacter () ;
result << "AtIndex (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioList,\n"
  "                                         const GALGAS_" ;
result << operand_3185->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (77)) ;
result << " * inAttributeValue,\n"
  "                                         const GALGAS_uint * inIndex,\n"
  "                                         C_Compiler * inCompiler\n"
  "                                         COMMA_LOCATION_ARGS) ;\n" ;
}
GGS_attributeList::cEnumerator enumerator_3680 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3680 = NULL ;
while (((operand_3680 = enumerator_3680.nextObject ()))) {
macroValidPointer (operand_3680) ;
result << "\n"
  "  friend GALGAS_" ;
result << operand_3680->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
result << " * reader_" ;
result << operand_3680->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
result << "AtIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                               const GALGAS_uint * inIndex,\n"
  "                                               C_Compiler * inCompiler\n"
  "                                               COMMA_LOCATION_ARGS) ;\n" ;
}
result << "\n"
  "  friend void method_first (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_4152 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4152 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4152 = enumerator_4152.nextObject ()))) {
macroValidPointer (operand_4152) ;
result << "                            GALGAS_" ;
result << operand_4152->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (94)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (94)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                            C_Compiler * inCompiler\n"
  "                            COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void method_last (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_4492 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4492 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4492 = enumerator_4492.nextObject ()))) {
macroValidPointer (operand_4492) ;
result << "                           GALGAS_" ;
result << operand_4492->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                           C_Compiler * inCompiler\n"
  "                           COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * reader_subListWithRange (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                                      const GALGAS_uint * inIndex,\n"
  "                                                      const GALGAS_uint * inLength,\n"
  "                                                      C_Compiler * inCompiler\n"
  "                                                      COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * reader_subListFromIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                                      const GALGAS_uint * inIndex,\n"
  "                                                      C_Compiler * inCompiler\n"
  "                                                      COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Enumerator class\n"
  "  public : class cEnumerator : public AC_GALGAS_Enumerator {\n"
  "    public : cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inEnumeratedObject,\n"
  "                          const bool inAscending) ;\n"
  "  \n"
  "  //--- Attribute access\n" ;
GGS_attributeList::cEnumerator enumerator_5748 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5748 = NULL ;
while (((operand_5748 = enumerator_5748.nextObject ()))) {
macroValidPointer (operand_5748) ;
result << "    public : const GALGAS_" ;
result << operand_5748->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (125)) ;
result << " * attribute_" ;
result << operand_5748->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (125)) ;
result << " (void) const ;\n" ;
}
result << "  } ;\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                          const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                          COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_6250 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6250 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6250 = enumerator_6250.nextObject ()))) {
macroValidPointer (operand_6250) ;
result << ",\n"
  "                          const GALGAS_" ;
result << operand_6250->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "\n"
  "void modifier_popFirst (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_6486 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6486 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6486 = enumerator_6486.nextObject ()))) {
macroValidPointer (operand_6486) ;
result << "                        GALGAS_" ;
result << operand_6486->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (145)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (145)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                        C_Compiler * inCompiler\n"
  "                        COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void modifier_popLast (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_6808 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6808 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6808 = enumerator_6808.nextObject ()))) {
macroValidPointer (operand_6808) ;
result << "                       GALGAS_" ;
result << operand_6808->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                       C_Compiler * inCompiler\n"
  "                       COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void modifier_prependValue (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_7133 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7133 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7133 = enumerator_7133.nextObject ()))) {
macroValidPointer (operand_7133) ;
result << ",\n"
  "                          const GALGAS_" ;
result << operand_7133->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (160)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (160)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "                            COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void method_first (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_7414 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7414 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7414 = enumerator_7414.nextObject ()))) {
macroValidPointer (operand_7414) ;
result << "                   GALGAS_" ;
result << operand_7414->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                   C_Compiler * inCompiler\n"
  "                   COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void method_last (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_7718 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7718 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7718 = enumerator_7718.nextObject ()))) {
macroValidPointer (operand_7718) ;
result << "                  GALGAS_" ;
result << operand_7718->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (176)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (176)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                  C_Compiler * inCompiler\n"
  "                  COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
GGS_attributeList::cEnumerator enumerator_7963 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7963 = NULL ;
while (((operand_7963 = enumerator_7963.nextObject ()))) {
macroValidPointer (operand_7963) ;
result << "\n"
  "void modifier_set" ;
result << operand_7963->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (183)).reader_stringByCapitalizingFirstCharacter () ;
result << "AtIndex (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioList,\n"
  "                                         const GALGAS_" ;
result << operand_7963->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (184)) ;
result << " * inAttributeValue,\n"
  "                                         const GALGAS_uint * inIndex,\n"
  "                                         C_Compiler * inCompiler\n"
  "                                         COMMA_LOCATION_ARGS) ;\n" ;
}
GGS_attributeList::cEnumerator enumerator_8449 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_8449 = NULL ;
while (((operand_8449 = enumerator_8449.nextObject ()))) {
macroValidPointer (operand_8449) ;
result << "\n"
  "GALGAS_" ;
result << operand_8449->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
result << " * reader_" ;
result << operand_8449->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
result << "AtIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                               const GALGAS_uint * inIndex,\n"
  "                                               C_Compiler * inCompiler\n"
  "                                               COMMA_LOCATION_ARGS) ;\n" ;
}
result << "\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * reader_subListWithRange (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             const GALGAS_uint * inLength,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * reader_subListFromIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listTypeImplementation' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_listTypeImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_attributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (\"" ;
result << var_cas_TYPE_NAME ;
result << "\", NULL) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (LOCATION_ARGS) :\n"
  "AC_GALGAS_Array (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_listWithValue (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_attributeList::cEnumerator enumerator_1155 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_1155 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1155 = enumerator_1155.nextObject ()))) {
macroValidPointer (operand_1155) ;
result << "const GALGAS_" ;
result << operand_1155->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (27)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (27)) ;
if (enumerator_1155.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (THERE) ;\n"
  "  const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_1525 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_1525 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1525 = enumerator_1525.nextObject ()))) {
macroValidPointer (operand_1525) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (34)) ;
if (enumerator_1525.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "  result->addObject (attributeArray) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioObject) {\n"
  "  if (ioObject->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * source = ioObject ;\n"
  "    release (ioObject COMMA_HERE) ;\n"
  "    ioObject = constructor_emptyList (HERE) ;\n"
  "    retain (ioObject COMMA_HERE) ;\n"
  "    ioObject->copyFrom (source) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_2434 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2434 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2434 = enumerator_2434.nextObject ()))) {
macroValidPointer (operand_2434) ;
result << ",\n"
  "                          const GALGAS_" ;
result << operand_2434->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (69)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_2775 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2775 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2775 = enumerator_2775.nextObject ()))) {
macroValidPointer (operand_2775) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
if (enumerator_2775.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_prependValue (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_3074 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3074 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3074 = enumerator_3074.nextObject ()))) {
macroValidPointer (operand_3074) ;
result << ",\n"
  "                            const GALGAS_" ;
result << operand_3074->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (83)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (83)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "                            COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if ((ioResult != NULL) && (inOperand0 != NULL)) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (89)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_3498 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3498 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3498 = enumerator_3498.nextObject ()))) {
macroValidPointer (operand_3498) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (91)) ;
if (enumerator_3498.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->prependAttributeArray (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_popFirst (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_3808 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3808 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3808 = enumerator_3808.nextObject ()))) {
macroValidPointer (operand_3808) ;
result << "                        GALGAS_" ;
result << operand_3808->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (103)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (103)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                        C_Compiler * inCompiler\n"
  "                        COMMA_LOCATION_ARGS) {\n"
  "  C_Object::release (outOperand0 COMMA_HERE) ;\n"
  "  outOperand0 = NULL ;\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (111)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_4310 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4310 = NULL ;
while (((operand_4310 = enumerator_4310.nextObject ()))) {
macroValidPointer (operand_4310) ;
result << "NULL" ;
if (enumerator_4310.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    ioResult->removeFirstObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_4463 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4463 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4463 = enumerator_4463.nextObject ()))) {
macroValidPointer (operand_4463) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (118)) ;
result << " = (GALGAS_" ;
result << operand_4463->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (118)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (118)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (119)) ;
result << ", GALGAS_" ;
result << operand_4463->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (119)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_popLast (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_4915 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4915 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4915 = enumerator_4915.nextObject ()))) {
macroValidPointer (operand_4915) ;
result << "                        GALGAS_" ;
result << operand_4915->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (128)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (128)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                       C_Compiler * inCompiler\n"
  "                       COMMA_LOCATION_ARGS) {\n"
  "  C_Object::release (outOperand0 COMMA_HERE) ;\n"
  "  outOperand0 = NULL ;\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (136)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_5415 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5415 = NULL ;
while (((operand_5415 = enumerator_5415.nextObject ()))) {
macroValidPointer (operand_5415) ;
result << "NULL" ;
if (enumerator_5415.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    ioResult->removeLastObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_5567 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5567 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5567 = enumerator_5567.nextObject ()))) {
macroValidPointer (operand_5567) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (143)) ;
result << " = (GALGAS_" ;
result << operand_5567->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (143)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (143)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (144)) ;
result << ", GALGAS_" ;
result << operand_5567->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (144)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void method_first (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_6017 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6017 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6017 = enumerator_6017.nextObject ()))) {
macroValidPointer (operand_6017) ;
result << "                   GALGAS_" ;
result << operand_6017->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                   C_Compiler * inCompiler\n"
  "                   COMMA_LOCATION_ARGS) {\n"
  "  C_Object::release (outOperand0 COMMA_HERE) ;\n"
  "  outOperand0 = NULL ;\n"
  "  if (inList != NULL) {\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (160)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_6455 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6455 = NULL ;
while (((operand_6455 = enumerator_6455.nextObject ()))) {
macroValidPointer (operand_6455) ;
result << "NULL" ;
if (enumerator_6455.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    inList->readFirst (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_6598 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6598 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6598 = enumerator_6598.nextObject ()))) {
macroValidPointer (operand_6598) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (167)) ;
result << " = (GALGAS_" ;
result << operand_6598->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (167)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (167)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
result << ", GALGAS_" ;
result << operand_6598->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void method_last (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_7047 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7047 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7047 = enumerator_7047.nextObject ()))) {
macroValidPointer (operand_7047) ;
result << "                  GALGAS_" ;
result << operand_7047->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (177)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (177)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                  C_Compiler * inCompiler\n"
  "                  COMMA_LOCATION_ARGS) {\n"
  "  C_Object::release (outOperand0 COMMA_HERE) ;\n"
  "  outOperand0 = NULL ;\n"
  "  if (inList != NULL) {\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (184)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_7482 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7482 = NULL ;
while (((operand_7482 = enumerator_7482.nextObject ()))) {
macroValidPointer (operand_7482) ;
result << "NULL" ;
if (enumerator_7482.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    inList->readLast (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_7624 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7624 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7624 = enumerator_7624.nextObject ()))) {
macroValidPointer (operand_7624) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (191)) ;
result << " = (GALGAS_" ;
result << operand_7624->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (191)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (191)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
result << ", GALGAS_" ;
result << operand_7624->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n" ;
GGS_attributeList::cEnumerator enumerator_7932 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7932 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7932 = enumerator_7932.nextObject ()))) {
macroValidPointer (operand_7932) ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_7932->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << " * reader_" ;
result << operand_7932->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << "AtIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                        const GALGAS_uint * inIndex,\n"
  "                                        C_Compiler * inCompiler\n"
  "                                        COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << operand_7932->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (204)) ;
result << " * result = NULL ;\n"
  "  if ((inList != NULL) && (inIndex != NULL)) {\n"
  "    result = (GALGAS_" ;
result << operand_7932->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (206)) ;
result << " *) inList->attributeDirectRead (inIndex, " ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (206)) ;
result << ", inCompiler COMMA_THERE) ;\n"
  "    macroValidObject (result, GALGAS_" ;
result << operand_7932->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (207)) ;
result << ") ;\n"
  "  }\n"
  "  return result ; \n"
  "}\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_attributeList::cEnumerator enumerator_8791 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_8791 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8791 = enumerator_8791.nextObject ()))) {
macroValidPointer (operand_8791) ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_set" ;
result << operand_8791->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (217)).reader_stringByCapitalizingFirstCharacter () ;
result << "AtIndex (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioList,\n"
  "                                         const GALGAS_" ;
result << operand_8791->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (218)) ;
result << " * inAttributeValue,\n"
  "                                         const GALGAS_uint * inIndex,\n"
  "                                         C_Compiler * inCompiler\n"
  "                                         COMMA_LOCATION_ARGS) {\n"
  "  if (ioList != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioList) ;\n"
  "    ioList->attributeDirectWrite (inAttributeValue, inIndex, " ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (224)) ;
result << ", inCompiler COMMA_THERE) ;\n"
  "  }\n"
  "}\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * reader_subListWithRange (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             const GALGAS_uint * inLength,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  if (inList != NULL) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = inList->subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result = NULL ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * reader_subListFromIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  if (inList != NULL) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = inList->subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result = NULL ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_concat (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                        const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                        COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  if ((inOperand1 != NULL) && (inOperand2 != NULL)) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (THERE) ;\n"
  "    result->appendList (inOperand1) ;\n"
  "    result->appendList (inOperand2) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                          const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                          COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if ((ioResult != NULL) && (inOperand != NULL)) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    ioResult->appendList (inOperand) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::cEnumerator::cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inEnumeratedObject,\n"
  "                                             const bool inAscending) :\n"
  "AC_GALGAS_Enumerator (inEnumeratedObject, inAscending) {\n"
  "}\n"
  "\n" ;
GGS_attributeList::cEnumerator enumerator_12282 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_12282 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12282 = enumerator_12282.nextObject ()))) {
macroValidPointer (operand_12282) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "const GALGAS_" ;
result << operand_12282->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (299)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::cEnumerator::attribute_" ;
result << operand_12282->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (299)) ;
result << " (void) const {\n"
  "  const GALGAS_" ;
result << operand_12282->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (300)) ;
result << " * result = (const GALGAS_" ;
result << operand_12282->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (300)) ;
result << " *) directAccess (" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (300)) ;
result << " COMMA_HERE) ;\n"
  "  macroValidObject (result, const GALGAS_" ;
result << operand_12282->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (301)) ;
result << ") ;\n"
  "  return result ;\n"
  "}\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypesImplementation' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_predefinedTypesImplementation (C_CompilerEx & /* inLexique */) {
  C_String result ;
result << "\n"
  "#include \"galgas2/predefinedTypes2.h\"\n"
  "#include \"galgas2/C_Compiler.h\"\n"
  "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@ACGalgasType.appendGeneratedHeader'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ACGalgasType__appendGeneratedHeader (C_CompilerEx &,
                                const cPtr_ACGalgasType * operand_10269,
                                GGS_string & /* var_cas_ioHeader */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10269 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Virtual Table for category method '@ACGalgasType.appendGeneratedHeader'   *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__ACGalgasType__appendGeneratedHeader> gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ACGalgasType__appendGeneratedHeader (typeCategoryMethod__ACGalgasType__appendGeneratedHeader inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__ACGalgasType__appendGeneratedHeader
findCategoryMethod__ACGalgasType__appendGeneratedHeader (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__ACGalgasType__appendGeneratedHeader result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.count ()) {
    result = gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__ACGalgasType__appendGeneratedHeader (superClassPtr) ;
      gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@primitiveGalgasType.appendGeneratedHeader'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__primitiveGalgasType__appendGeneratedHeader (C_CompilerEx & inLexique,
                                const cPtr_primitiveGalgasType * operand_10449,
                                GGS_string & var_cas_ioHeader
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10449 != NULL) {
GGS_ACGalgasType  var_cas_t = operand_10449 ;
var_cas_ioHeader.dotAssign_operation (template_filewrapper_builtinTypeGenerationTemplate_primitiveTypeHeader (inLexique, (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (var_cas_t (HERE)->galgasRTTI ()) (inLexique, var_cas_t.getPtr () COMMA_SOURCE_FILE_AT_LINE (247))), var_cas_t)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@listGalgasType.appendGeneratedHeader'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listGalgasType__appendGeneratedHeader (C_CompilerEx & inLexique,
                                const cPtr_listGalgasType * operand_10790,
                                GGS_string & var_cas_ioHeader
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10790 != NULL) {
GGS_ACGalgasType  var_cas_t = operand_10790 ;
GGS_listGalgasType  var_cas_tt = operand_10790 ;
var_cas_ioHeader.dotAssign_operation (template_filewrapper_builtinTypeGenerationTemplate_listTypeHeader (inLexique, (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (var_cas_t (HERE)->galgasRTTI ()) (inLexique, var_cas_t.getPtr () COMMA_SOURCE_FILE_AT_LINE (258))), var_cas_tt.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (259)))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@ACGalgasType.appendGeneratedImplementation'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ACGalgasType__appendGeneratedImplementation (C_CompilerEx &,
                                const cPtr_ACGalgasType * operand_11502,
                                GGS_string & /* var_cas_ioImplementation */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11502 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@ACGalgasType.appendGeneratedImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__ACGalgasType__appendGeneratedImplementation> gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ACGalgasType__appendGeneratedImplementation (typeCategoryMethod__ACGalgasType__appendGeneratedImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__ACGalgasType__appendGeneratedImplementation
findCategoryMethod__ACGalgasType__appendGeneratedImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__ACGalgasType__appendGeneratedImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation.count ()) {
    result = gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__ACGalgasType__appendGeneratedImplementation (superClassPtr) ;
      gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@primitiveGalgasType.appendGeneratedImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__primitiveGalgasType__appendGeneratedImplementation (C_CompilerEx &,
                                const cPtr_primitiveGalgasType * operand_11698,
                                GGS_string & /* var_cas_ioImplementation */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11698 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@listGalgasType.appendGeneratedImplementation'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listGalgasType__appendGeneratedImplementation (C_CompilerEx & inLexique,
                                const cPtr_listGalgasType * operand_11889,
                                GGS_string & var_cas_ioImplementation
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11889 != NULL) {
GGS_ACGalgasType  var_cas_t = operand_11889 ;
GGS_listGalgasType  var_cas_tt = operand_11889 ;
var_cas_ioImplementation.dotAssign_operation (template_filewrapper_builtinTypeGenerationTemplate_listTypeImplementation (inLexique, (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (var_cas_t (HERE)->galgasRTTI ()) (inLexique, var_cas_t.getPtr () COMMA_SOURCE_FILE_AT_LINE (283))), var_cas_tt.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (284)))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "generateHeadersOfBuiltinTypes"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateHeadersOfBuiltinTypes (C_CompilerEx & inLexique,
                                const GGS_string  var_cas_inDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateHeadersOfBuiltinTypes at %s:%d\n", __FILE__, __LINE__) ;
  #endif
const GGS_bool cond_13813 = (var_cas_inDirectory).operator_isNotEqual (GGS_string ("")) ;
if (cond_13813.isBuiltAndTrue ()) {
const GGS_bool cond_12793 = (var_cas_inDirectory.reader_directoryExists ()).operator_not () ;
if (cond_12793.isBuiltAndTrue ()) {
GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (var_cas_inDirectory)).operator_concat (GGS_string ("' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (298)) ;
}else if (cond_12793.isBuiltAndFalse ()) {
GGS_string var_cas_generatedCode = template_filewrapper_builtinTypeGenerationTemplate_predefinedTypesHeader (inLexique, function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (301))) ;
{
GGS_typeMap::cEnumerator enumerator_13007 (function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (303)), true) ;
const GGS_typeMap::cElement * operand_13007 = NULL ;
while (((operand_13007 = enumerator_13007.nextObject ()))) {
  macroValidPointer (operand_13007) ;
const GGS_ACGalgasType  temp_13050 = operand_13007->mInfo.mType ;
if (temp_13050.isBuilt ()) {
  typeCategoryMethod__ACGalgasType__appendGeneratedHeader method = findCategoryMethod__ACGalgasType__appendGeneratedHeader (temp_13050.galgasObjectRunTimeInfo ()) ;
  if (method != NULL) {
    method (inLexique, temp_13050 (HERE), var_cas_generatedCode COMMA_SOURCE_FILE_AT_LINE (304)) ;
  }
}
}
}
GGS_string::class_method_generateFile (inLexique, var_cas_inDirectory, GGS_string ("predefinedTypes2.h"), GGS_string ("//"), GGS_string ("\n"
  "\n"), var_cas_generatedCode, GGS_string ("\n"
  "\n"), GGS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (306)) ;
var_cas_generatedCode = template_filewrapper_builtinTypeGenerationTemplate_predefinedTypesImplementation (inLexique) ;
{
GGS_typeMap::cEnumerator enumerator_13492 (function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (318)), true) ;
const GGS_typeMap::cElement * operand_13492 = NULL ;
while (((operand_13492 = enumerator_13492.nextObject ()))) {
  macroValidPointer (operand_13492) ;
const GGS_ACGalgasType  temp_13543 = operand_13492->mInfo.mType ;
if (temp_13543.isBuilt ()) {
  typeCategoryMethod__ACGalgasType__appendGeneratedImplementation method = findCategoryMethod__ACGalgasType__appendGeneratedImplementation (temp_13543.galgasObjectRunTimeInfo ()) ;
  if (method != NULL) {
    method (inLexique, temp_13543 (HERE), var_cas_generatedCode COMMA_SOURCE_FILE_AT_LINE (319)) ;
  }
}
}
}
GGS_string::class_method_generateFile (inLexique, var_cas_inDirectory, GGS_string ("predefinedTypes2.cpp"), GGS_string ("//"), GGS_string ("\n"
  "\n"), var_cas_generatedCode, GGS_string ("\n"
  "\n"), GGS_string ("") COMMA_SOURCE_FILE_AT_LINE (321)) ;
}
}
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateHeadersOfBuiltinTypes\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_generateHeadersOfBuiltinTypes (void) {
  enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName (category_reader__ACGalgasType__scalarAttributeCppTypeName, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName ((typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName) category_reader__boolGalgasType__scalarAttributeCppTypeName, gClassInfoFor__boolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName ((typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName) category_reader__charGalgasType__scalarAttributeCppTypeName, gClassInfoFor__charGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName ((typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName) category_reader__uintGalgasType__scalarAttributeCppTypeName, gClassInfoFor__uintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName ((typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName) category_reader__sintGalgasType__scalarAttributeCppTypeName, gClassInfoFor__sintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName ((typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName) category_reader__uint64GalgasType__scalarAttributeCppTypeName, gClassInfoFor__uint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName ((typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName) category_reader__sint64GalgasType__scalarAttributeCppTypeName, gClassInfoFor__sint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__scalarAttributeCppTypeName ((typeCategoryReader__ACGalgasType__scalarAttributeCppTypeName) category_reader__doubleGalgasType__scalarAttributeCppTypeName, gClassInfoFor__doubleGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__pointerAttributeCppTypeName (category_reader__ACGalgasType__pointerAttributeCppTypeName, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__pointerAttributeCppTypeName ((typeCategoryReader__ACGalgasType__pointerAttributeCppTypeName) category_reader__objectGalgasType__pointerAttributeCppTypeName, gClassInfoFor__objectGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__pointerAttributeCppTypeName ((typeCategoryReader__ACGalgasType__pointerAttributeCppTypeName) category_reader__typeGalgasType__pointerAttributeCppTypeName, gClassInfoFor__typeGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__pointerAttributeCppTypeName ((typeCategoryReader__ACGalgasType__pointerAttributeCppTypeName) category_reader__functionGalgasType__pointerAttributeCppTypeName, gClassInfoFor__functionGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__pointerAttributeCppTypeName ((typeCategoryReader__ACGalgasType__pointerAttributeCppTypeName) category_reader__locationGalgasType__pointerAttributeCppTypeName, gClassInfoFor__locationGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__classAttributeCppTypeName (category_reader__ACGalgasType__classAttributeCppTypeName, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__classAttributeCppTypeName ((typeCategoryReader__ACGalgasType__classAttributeCppTypeName) category_reader__stringGalgasType__classAttributeCppTypeName, gClassInfoFor__stringGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__embeddedObjectTypeNames (category_reader__ACGalgasType__embeddedObjectTypeNames, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__embeddedObjectTypeNames ((typeCategoryReader__ACGalgasType__embeddedObjectTypeNames) category_reader__lstringGalgasType__embeddedObjectTypeNames, gClassInfoFor__lstringGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__embeddedObjectTypeNames ((typeCategoryReader__ACGalgasType__embeddedObjectTypeNames) category_reader__lcharGalgasType__embeddedObjectTypeNames, gClassInfoFor__lcharGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__embeddedObjectTypeNames ((typeCategoryReader__ACGalgasType__embeddedObjectTypeNames) category_reader__luintGalgasType__embeddedObjectTypeNames, gClassInfoFor__luintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__embeddedObjectTypeNames ((typeCategoryReader__ACGalgasType__embeddedObjectTypeNames) category_reader__lsintGalgasType__embeddedObjectTypeNames, gClassInfoFor__lsintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__embeddedObjectTypeNames ((typeCategoryReader__ACGalgasType__embeddedObjectTypeNames) category_reader__luint64GalgasType__embeddedObjectTypeNames, gClassInfoFor__luint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__embeddedObjectTypeNames ((typeCategoryReader__ACGalgasType__embeddedObjectTypeNames) category_reader__lsint64GalgasType__embeddedObjectTypeNames, gClassInfoFor__lsint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__embeddedObjectTypeNames ((typeCategoryReader__ACGalgasType__embeddedObjectTypeNames) category_reader__lboolGalgasType__embeddedObjectTypeNames, gClassInfoFor__lboolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__embeddedObjectTypeNames ((typeCategoryReader__ACGalgasType__embeddedObjectTypeNames) category_reader__ldoubleGalgasType__embeddedObjectTypeNames, gClassInfoFor__ldoubleGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedHeader (category_method__ACGalgasType__appendGeneratedHeader, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedHeader ((typeCategoryMethod__ACGalgasType__appendGeneratedHeader) category_method__primitiveGalgasType__appendGeneratedHeader, gClassInfoFor__primitiveGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedHeader ((typeCategoryMethod__ACGalgasType__appendGeneratedHeader) category_method__listGalgasType__appendGeneratedHeader, gClassInfoFor__listGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedImplementation (category_method__ACGalgasType__appendGeneratedImplementation, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedImplementation ((typeCategoryMethod__ACGalgasType__appendGeneratedImplementation) category_method__primitiveGalgasType__appendGeneratedImplementation, gClassInfoFor__primitiveGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedImplementation ((typeCategoryMethod__ACGalgasType__appendGeneratedImplementation) category_method__listGalgasType__appendGeneratedImplementation, gClassInfoFor__listGalgasType.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_generateHeadersOfBuiltinTypes (void) {
  gDispatchTableForReader__ACGalgasType__scalarAttributeCppTypeName.free () ;
  gDispatchTableForReader__ACGalgasType__pointerAttributeCppTypeName.free () ;
  gDispatchTableForReader__ACGalgasType__classAttributeCppTypeName.free () ;
  gDispatchTableForReader__ACGalgasType__embeddedObjectTypeNames.free () ;
  gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.free () ;
  gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_generateHeadersOfBuiltinTypes (prologueRoutineFor_generateHeadersOfBuiltinTypes, epilogueRoutineFor_generateHeadersOfBuiltinTypes) ;

//---------------------------------------------------------------------------*

