//---------------------------------------------------------------------------*
//                                                                           *
//           File 'include_typeLexicalRewindAndSendInstruction.h'            *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       may 21th, 2009, at 15h9'46"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//        abstract class 'cPtr_typeLexicalRewindAndSendInstruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeLexicalRewindAndSendInstruction : public cPtr_typeInstructionLexicale {
  private : typedef cPtr_typeInstructionLexicale inherited ;
//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_typeLexicalRewindAndSendInstruction (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_typeLexicalRewindAndSendInstruction (void) {}
  #endif

//--- Attributes
  public : GGS_lstring  mLexicalTagName ;
  public : GGS_lstring  mTerminal ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*

