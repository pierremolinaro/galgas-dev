//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'projectMetamodel.cpp'                         *
//             Generated by version version GALGAS_BETA_VERSION              *
//                      april 4th, 2011, at 20h32'35"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "projectMetamodel.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "projectMetamodel.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*

GALGAS_sourceFileKind::GALGAS_sourceFileKind (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------*

GALGAS_sourceFileKind GALGAS_sourceFileKind::constructor_externSourceFile (UNUSED_LOCATION_ARGS) {
  GALGAS_sourceFileKind result ;
  result.mEnum = kEnum_externSourceFile ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_sourceFileKind GALGAS_sourceFileKind::constructor_lexiqueSourceFile (UNUSED_LOCATION_ARGS) {
  GALGAS_sourceFileKind result ;
  result.mEnum = kEnum_lexiqueSourceFile ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_sourceFileKind GALGAS_sourceFileKind::constructor_guiSourceFile (UNUSED_LOCATION_ARGS) {
  GALGAS_sourceFileKind result ;
  result.mEnum = kEnum_guiSourceFile ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_sourceFileKind GALGAS_sourceFileKind::constructor_optionSourceFile (UNUSED_LOCATION_ARGS) {
  GALGAS_sourceFileKind result ;
  result.mEnum = kEnum_optionSourceFile ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_sourceFileKind GALGAS_sourceFileKind::constructor_syntaxSourceFile (UNUSED_LOCATION_ARGS) {
  GALGAS_sourceFileKind result ;
  result.mEnum = kEnum_syntaxSourceFile ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_sourceFileKind GALGAS_sourceFileKind::constructor_semanticsSourceFile (UNUSED_LOCATION_ARGS) {
  GALGAS_sourceFileKind result ;
  result.mEnum = kEnum_semanticsSourceFile ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_sourceFileKind GALGAS_sourceFileKind::constructor_grammarSourceFile (UNUSED_LOCATION_ARGS) {
  GALGAS_sourceFileKind result ;
  result.mEnum = kEnum_grammarSourceFile ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_sourceFileKind GALGAS_sourceFileKind::constructor_programSourceFile (UNUSED_LOCATION_ARGS) {
  GALGAS_sourceFileKind result ;
  result.mEnum = kEnum_programSourceFile ;
  return result ;
}

//---------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_sourceFileKind [9] = {
  "(not built)",
  "externSourceFile",
  "lexiqueSourceFile",
  "guiSourceFile",
  "optionSourceFile",
  "syntaxSourceFile",
  "semanticsSourceFile",
  "grammarSourceFile",
  "programSourceFile"
} ;

//---------------------------------------------------------------------------*

void GALGAS_sourceFileKind::description (C_String & ioString,
                                         const PMSInt32 /* inIndentation */) const {
  ioString << "<enum @sourceFileKind: " << gEnumNameArrayFor_sourceFileKind [mEnum] << ">" ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_sourceFileKind::objectCompare (const GALGAS_sourceFileKind & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                           @sourceFileKind type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_sourceFileKind ("sourceFileKind",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_sourceFileKind::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_sourceFileKind ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_sourceFileKind::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_sourceFileKind (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_sourceFileKind GALGAS_sourceFileKind::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_sourceFileKind result ;
  const GALGAS_sourceFileKind * p = (const GALGAS_sourceFileKind *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_sourceFileKind *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "sourceFileKind", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Class for element of '@projectSourceList' list               *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_projectSourceList : public cCollectionElement {
//--- List attributes
  public : GALGAS_sourceFileKind mAttribute_mSourceKind ;
  public : GALGAS_lstring mAttribute_mFilePath ;

//--- Constructor
  public : cCollectionElement_projectSourceList (const GALGAS_sourceFileKind & in_mSourceKind,
                                                 const GALGAS_lstring & in_mFilePath
                                                 COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_projectSourceList::cCollectionElement_projectSourceList (const GALGAS_sourceFileKind & in_mSourceKind,
                                                                            const GALGAS_lstring & in_mFilePath
                                                                            COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mSourceKind (in_mSourceKind),
mAttribute_mFilePath (in_mFilePath) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_projectSourceList::isValid (void) const {
  return mAttribute_mSourceKind.isValid () && mAttribute_mFilePath.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_projectSourceList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_projectSourceList (mAttribute_mSourceKind, mAttribute_mFilePath COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_projectSourceList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSourceKind" ":" ;
  mAttribute_mSourceKind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFilePath" ":" ;
  mAttribute_mFilePath.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_projectSourceList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_projectSourceList * operand = (cCollectionElement_projectSourceList *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mSourceKind.objectCompare (operand->mAttribute_mSourceKind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFilePath.objectCompare (operand->mAttribute_mFilePath) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_projectSourceList::GALGAS_projectSourceList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_projectSourceList::GALGAS_projectSourceList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_projectSourceList GALGAS_projectSourceList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_projectSourceList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_projectSourceList GALGAS_projectSourceList::constructor_listWithValue (const GALGAS_sourceFileKind & inOperand0,
                                                                              const GALGAS_lstring & inOperand1
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_projectSourceList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_projectSourceList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_projectSourceList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                          const GALGAS_sourceFileKind & in_mSourceKind,
                                                          const GALGAS_lstring & in_mFilePath
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement_projectSourceList * p = NULL ;
  macroMyNew (p, cCollectionElement_projectSourceList (in_mSourceKind,
                                                          in_mFilePath COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_projectSourceList::addAssign_operation (const GALGAS_sourceFileKind & inOperand0,
                                                    const GALGAS_lstring & inOperand1
                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_projectSourceList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_projectSourceList::modifier_prependValue (GALGAS_sourceFileKind inOperand0,
                                                      GALGAS_lstring inOperand1
                                                      COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_projectSourceList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_projectSourceList::modifier_popFirst (GALGAS_sourceFileKind & outOperand0,
                                                  GALGAS_lstring & outOperand1,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_projectSourceList * p = (cCollectionElement_projectSourceList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_projectSourceList) ;
    outOperand0 = p->mAttribute_mSourceKind ;
    outOperand1 = p->mAttribute_mFilePath ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_projectSourceList::modifier_popLast (GALGAS_sourceFileKind & outOperand0,
                                                 GALGAS_lstring & outOperand1,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_projectSourceList * p = (cCollectionElement_projectSourceList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_projectSourceList) ;
    outOperand0 = p->mAttribute_mSourceKind ;
    outOperand1 = p->mAttribute_mFilePath ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_projectSourceList::method_first (GALGAS_sourceFileKind & outOperand0,
                                             GALGAS_lstring & outOperand1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_projectSourceList * p = (cCollectionElement_projectSourceList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_projectSourceList) ;
    outOperand0 = p->mAttribute_mSourceKind ;
    outOperand1 = p->mAttribute_mFilePath ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_projectSourceList::method_last (GALGAS_sourceFileKind & outOperand0,
                                            GALGAS_lstring & outOperand1,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_projectSourceList * p = (cCollectionElement_projectSourceList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_projectSourceList) ;
    outOperand0 = p->mAttribute_mSourceKind ;
    outOperand1 = p->mAttribute_mFilePath ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_projectSourceList GALGAS_projectSourceList::operator_concat (const GALGAS_projectSourceList & inOperand
                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_projectSourceList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_projectSourceList GALGAS_projectSourceList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                            const GALGAS_uint & inLength,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_projectSourceList result = GALGAS_projectSourceList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_projectSourceList GALGAS_projectSourceList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_projectSourceList result = GALGAS_projectSourceList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_projectSourceList::dotAssign_operation (const GALGAS_projectSourceList inOperand
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

void GALGAS_projectSourceList::modifier_setMSourceKindAtIndex (GALGAS_sourceFileKind inOperand,
                                                               GALGAS_uint inIndex,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement_projectSourceList * p = (cCollectionElement_projectSourceList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_projectSourceList) ;
    p->mAttribute_mSourceKind = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_projectSourceList::modifier_setMFilePathAtIndex (GALGAS_lstring inOperand,
                                                             GALGAS_uint inIndex,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_projectSourceList * p = (cCollectionElement_projectSourceList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_projectSourceList) ;
    p->mAttribute_mFilePath = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_sourceFileKind GALGAS_projectSourceList::reader_mSourceKindAtIndex (const GALGAS_uint & inIndex,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_projectSourceList * p = (cCollectionElement_projectSourceList *) attributes.ptr () ;
  GALGAS_sourceFileKind result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_projectSourceList) ;
    result = p->mAttribute_mSourceKind ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_projectSourceList::reader_mFilePathAtIndex (const GALGAS_uint & inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_projectSourceList * p = (cCollectionElement_projectSourceList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_projectSourceList) ;
    result = p->mAttribute_mFilePath ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_projectSourceList::cEnumerator_projectSourceList (const GALGAS_projectSourceList & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_sourceFileKind cEnumerator_projectSourceList::current_mSourceKind (LOCATION_ARGS) const {
  const cCollectionElement_projectSourceList * p = (const cCollectionElement_projectSourceList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_projectSourceList) ;
  return p->mAttribute_mSourceKind ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_projectSourceList::current_mFilePath (LOCATION_ARGS) const {
  const cCollectionElement_projectSourceList * p = (const cCollectionElement_projectSourceList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_projectSourceList) ;
  return p->mAttribute_mFilePath ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                          @projectSourceList type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_projectSourceList ("projectSourceList",
                                          NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_projectSourceList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_projectSourceList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_projectSourceList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_projectSourceList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_projectSourceList GALGAS_projectSourceList::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler,
                                                                  const GALGAS_location & inErrorLocation
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_projectSourceList result ;
  const GALGAS_projectSourceList * p = (const GALGAS_projectSourceList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_projectSourceList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "projectSourceList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_projectComponentAST::GALGAS_projectComponentAST (void) :
mAttribute_mProjectSourceList (),
mAttribute_mGenerationFeatureList (),
mAttribute_mProjectName (),
mAttribute_mTargetName (),
mAttribute_mEndOfSourceFile () {
}

//---------------------------------------------------------------------------*

GALGAS_projectComponentAST::~ GALGAS_projectComponentAST (void) {
}

//---------------------------------------------------------------------------*

/* GALGAS_projectComponentAST::GALGAS_projectComponentAST (const GALGAS_projectComponentAST & inSource) :
//mAttribute_mProjectSourceList (inSource.mAttribute_mProjectSourceList),
//mAttribute_mGenerationFeatureList (inSource.mAttribute_mGenerationFeatureList),
//mAttribute_mProjectName (inSource.mAttribute_mProjectName),
//mAttribute_mTargetName (inSource.mAttribute_mTargetName),
//mAttribute_mEndOfSourceFile (inSource.mAttribute_mEndOfSourceFile) {
} */

//---------------------------------------------------------------------------*

GALGAS_projectComponentAST::GALGAS_projectComponentAST (const GALGAS_projectSourceList & inOperand0,
                                                        const GALGAS_lstringlist & inOperand1,
                                                        const GALGAS_lstring & inOperand2,
                                                        const GALGAS_lstring & inOperand3,
                                                        const GALGAS_location & inOperand4) :
mAttribute_mProjectSourceList (inOperand0),
mAttribute_mGenerationFeatureList (inOperand1),
mAttribute_mProjectName (inOperand2),
mAttribute_mTargetName (inOperand3),
mAttribute_mEndOfSourceFile (inOperand4) {
}

//---------------------------------------------------------------------------*

/* GALGAS_projectComponentAST & GALGAS_projectComponentAST::operator = (const GALGAS_projectComponentAST & inOperand) {
  mAttribute_mProjectSourceList = inOperand.mAttribute_mProjectSourceList ;
  mAttribute_mGenerationFeatureList = inOperand.mAttribute_mGenerationFeatureList ;
  mAttribute_mProjectName = inOperand.mAttribute_mProjectName ;
  mAttribute_mTargetName = inOperand.mAttribute_mTargetName ;
  mAttribute_mEndOfSourceFile = inOperand.mAttribute_mEndOfSourceFile ;
  return *this ;
} */

//---------------------------------------------------------------------------*

GALGAS_projectComponentAST GALGAS_projectComponentAST::constructor_new (const GALGAS_projectSourceList & inOperand0,
                                                                        const GALGAS_lstringlist & inOperand1,
                                                                        const GALGAS_lstring & inOperand2,
                                                                        const GALGAS_lstring & inOperand3,
                                                                        const GALGAS_location & inOperand4 
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_projectComponentAST result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_projectComponentAST (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_projectComponentAST::objectCompare (const GALGAS_projectComponentAST & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mProjectSourceList.objectCompare (inOperand.mAttribute_mProjectSourceList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGenerationFeatureList.objectCompare (inOperand.mAttribute_mGenerationFeatureList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mProjectName.objectCompare (inOperand.mAttribute_mProjectName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTargetName.objectCompare (inOperand.mAttribute_mTargetName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEndOfSourceFile.objectCompare (inOperand.mAttribute_mEndOfSourceFile) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_projectComponentAST::isValid (void) const {
  return mAttribute_mProjectSourceList.isValid () && mAttribute_mGenerationFeatureList.isValid () && mAttribute_mProjectName.isValid () && mAttribute_mTargetName.isValid () && mAttribute_mEndOfSourceFile.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_projectComponentAST::drop (void) {
  mAttribute_mProjectSourceList.drop () ;
  mAttribute_mGenerationFeatureList.drop () ;
  mAttribute_mProjectName.drop () ;
  mAttribute_mTargetName.drop () ;
  mAttribute_mEndOfSourceFile.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_projectComponentAST::description (C_String & ioString,
                                              const PMSInt32 inIndentation) const {
  ioString << "<struct @projectComponentAST:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mProjectSourceList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGenerationFeatureList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mProjectName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTargetName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEndOfSourceFile.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_projectSourceList GALGAS_projectComponentAST::reader_mProjectSourceList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mProjectSourceList ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_projectComponentAST::reader_mGenerationFeatureList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGenerationFeatureList ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_projectComponentAST::reader_mProjectName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mProjectName ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_projectComponentAST::reader_mTargetName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTargetName ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_projectComponentAST::reader_mEndOfSourceFile (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEndOfSourceFile ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @projectComponentAST type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_projectComponentAST ("projectComponentAST",
                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_projectComponentAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_projectComponentAST ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_projectComponentAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_projectComponentAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_projectComponentAST GALGAS_projectComponentAST::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler,
                                                                      const GALGAS_location & inErrorLocation
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_projectComponentAST result ;
  const GALGAS_projectComponentAST * p = (const GALGAS_projectComponentAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_projectComponentAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "projectComponentAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


