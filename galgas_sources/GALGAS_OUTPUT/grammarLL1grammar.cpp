//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'grammarLL1grammar.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     november 9th, 2009, at 17h40'24"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include "utilities/MF_MemoryControl.h"

//---------------------------------------------------------------------------*

#include "grammarLL1grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "all_galgas.ggs", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//              L L ( 1 )    P R O D U C T I O N    R U L E S                *
//                                                                           *
//---------------------------------------------------------------------------*

#define TERMINAL(t)     ((t)+1)
#define NONTERMINAL(nt) ((-nt)-1)
#define END_PRODUCTION  (0)

static const PMSInt16 gProductions [] = {
// At index 0 : <grammar_component_start_symbol>, in file 'grammarModelBuilder.ggs', line 48
  TERMINAL (galgas_scanner::galgas_scanner_1_grammar) // $grammar$
, TERMINAL (galgas_scanner::galgas_scanner_1_identifier) // $identifier$
, TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) // $literal_string$
, TERMINAL (galgas_scanner::galgas_scanner_1__3A_) // $:$
, TERMINAL (galgas_scanner::galgas_scanner_1_with) // $with$
, TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) // $literal_string$
, TERMINAL (galgas_scanner::galgas_scanner_1__3B_) // $;$
, NONTERMINAL (3) // <select_repeat_grammarModelBuilder_0>
, NONTERMINAL (4) // <select_repeat_grammarModelBuilder_1>
, TERMINAL (galgas_scanner::galgas_scanner_1_root) // $root$
, TERMINAL (galgas_scanner::galgas_scanner_1_non_5F_terminal_5F_symbol) // $non_terminal_symbol$
, NONTERMINAL (1) // <grammar_start_symbol_label>
, NONTERMINAL (6) // <select_repeat_grammarModelBuilder_3>
, TERMINAL (galgas_scanner::galgas_scanner_1__3B_) // $;$
, NONTERMINAL (7) // <select_repeat_grammarModelBuilder_4>
, TERMINAL (galgas_scanner::galgas_scanner_1_end) // $end$
, TERMINAL (galgas_scanner::galgas_scanner_1_grammar) // $grammar$
, TERMINAL (galgas_scanner::galgas_scanner_1__3B_) // $;$
, END_PRODUCTION
// At index 19 : <grammar_start_symbol_label>, in file 'grammarModelBuilder.ggs', line 126
, NONTERMINAL (9) // <select_repeat_grammarModelBuilder_6>
, END_PRODUCTION
// At index 21 : <label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 146
, TERMINAL (galgas_scanner::galgas_scanner_1__3F_) // $?$
, TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) // $type_name$
, NONTERMINAL (10) // <select_grammarModelBuilder_7>
, TERMINAL (galgas_scanner::galgas_scanner_1_identifier) // $identifier$
, END_PRODUCTION
// At index 26 : <label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 167
, TERMINAL (galgas_scanner::galgas_scanner_1__3F__3F_) // $??$
, TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) // $type_name$
, NONTERMINAL (11) // <select_grammarModelBuilder_8>
, TERMINAL (galgas_scanner::galgas_scanner_1_identifier) // $identifier$
, END_PRODUCTION
// At index 31 : <label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 188
, TERMINAL (galgas_scanner::galgas_scanner_1__3F__21_) // $?!$
, TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) // $type_name$
, NONTERMINAL (12) // <select_grammarModelBuilder_9>
, TERMINAL (galgas_scanner::galgas_scanner_1_identifier) // $identifier$
, END_PRODUCTION
// At index 36 : <label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 209
, TERMINAL (galgas_scanner::galgas_scanner_1__21_) // $!$
, TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) // $type_name$
, TERMINAL (galgas_scanner::galgas_scanner_1_identifier) // $identifier$
, END_PRODUCTION
//---- Added productions from 'select' and 'repeat' instructions
// At index 40 : <select_repeat_grammarModelBuilder_0>, in file 'grammarModelBuilder.ggs', line 58
, END_PRODUCTION
// At index 41 : <select_repeat_grammarModelBuilder_0>, in file 'grammarModelBuilder.ggs', line 58
, TERMINAL (galgas_scanner::galgas_scanner_1_with) // $with$
, TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) // $literal_string$
, TERMINAL (galgas_scanner::galgas_scanner_1__3B_) // $;$
, NONTERMINAL (3) // <select_repeat_grammarModelBuilder_0>
, END_PRODUCTION
// At index 46 : <select_repeat_grammarModelBuilder_1>, in file 'grammarModelBuilder.ggs', line 66
, END_PRODUCTION
// At index 47 : <select_repeat_grammarModelBuilder_1>, in file 'grammarModelBuilder.ggs', line 66
, TERMINAL (galgas_scanner::galgas_scanner_1_import) // $import$
, NONTERMINAL (5) // <select_grammarModelBuilder_2>
, TERMINAL (galgas_scanner::galgas_scanner_1_identifier) // $identifier$
, TERMINAL (galgas_scanner::galgas_scanner_1_in) // $in$
, TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) // $literal_string$
, TERMINAL (galgas_scanner::galgas_scanner_1__3B_) // $;$
, NONTERMINAL (4) // <select_repeat_grammarModelBuilder_1>
, END_PRODUCTION
// At index 55 : <select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 69
, TERMINAL (galgas_scanner::galgas_scanner_1_semantics) // $semantics$
, END_PRODUCTION
// At index 57 : <select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 69
, TERMINAL (galgas_scanner::galgas_scanner_1_lexique) // $lexique$
, END_PRODUCTION
// At index 59 : <select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 69
, TERMINAL (galgas_scanner::galgas_scanner_1_grammar) // $grammar$
, END_PRODUCTION
// At index 61 : <select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 69
, TERMINAL (galgas_scanner::galgas_scanner_1_syntax) // $syntax$
, END_PRODUCTION
// At index 63 : <select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 69
, TERMINAL (galgas_scanner::galgas_scanner_1_option) // $option$
, END_PRODUCTION
// At index 65 : <select_repeat_grammarModelBuilder_3>, in file 'grammarModelBuilder.ggs', line 90
, END_PRODUCTION
// At index 66 : <select_repeat_grammarModelBuilder_3>, in file 'grammarModelBuilder.ggs', line 90
, TERMINAL (galgas_scanner::galgas_scanner_1_label) // $label$
, TERMINAL (galgas_scanner::galgas_scanner_1_identifier) // $identifier$
, NONTERMINAL (1) // <grammar_start_symbol_label>
, NONTERMINAL (6) // <select_repeat_grammarModelBuilder_3>
, END_PRODUCTION
// At index 71 : <select_repeat_grammarModelBuilder_4>, in file 'grammarModelBuilder.ggs', line 99
, END_PRODUCTION
// At index 72 : <select_repeat_grammarModelBuilder_4>, in file 'grammarModelBuilder.ggs', line 99
, TERMINAL (galgas_scanner::galgas_scanner_1_unused) // $unused$
, TERMINAL (galgas_scanner::galgas_scanner_1_non_5F_terminal_5F_symbol) // $non_terminal_symbol$
, NONTERMINAL (8) // <select_repeat_grammarModelBuilder_5>
, TERMINAL (galgas_scanner::galgas_scanner_1__3B_) // $;$
, NONTERMINAL (7) // <select_repeat_grammarModelBuilder_4>
, END_PRODUCTION
// At index 78 : <select_repeat_grammarModelBuilder_5>, in file 'grammarModelBuilder.ggs', line 102
, END_PRODUCTION
// At index 79 : <select_repeat_grammarModelBuilder_5>, in file 'grammarModelBuilder.ggs', line 102
, TERMINAL (galgas_scanner::galgas_scanner_1__2C_) // $,$
, TERMINAL (galgas_scanner::galgas_scanner_1_non_5F_terminal_5F_symbol) // $non_terminal_symbol$
, NONTERMINAL (8) // <select_repeat_grammarModelBuilder_5>
, END_PRODUCTION
// At index 83 : <select_repeat_grammarModelBuilder_6>, in file 'grammarModelBuilder.ggs', line 133
, END_PRODUCTION
// At index 84 : <select_repeat_grammarModelBuilder_6>, in file 'grammarModelBuilder.ggs', line 133
, NONTERMINAL (2) // <label_formal_parameter>
, NONTERMINAL (9) // <select_repeat_grammarModelBuilder_6>
, END_PRODUCTION
// At index 87 : <select_grammarModelBuilder_7>, in file 'grammarModelBuilder.ggs', line 153
, END_PRODUCTION
// At index 88 : <select_grammarModelBuilder_7>, in file 'grammarModelBuilder.ggs', line 153
, TERMINAL (galgas_scanner::galgas_scanner_1_unused) // $unused$
, END_PRODUCTION
// At index 90 : <select_grammarModelBuilder_8>, in file 'grammarModelBuilder.ggs', line 174
, END_PRODUCTION
// At index 91 : <select_grammarModelBuilder_8>, in file 'grammarModelBuilder.ggs', line 174
, TERMINAL (galgas_scanner::galgas_scanner_1_unused) // $unused$
, END_PRODUCTION
// At index 93 : <select_grammarModelBuilder_9>, in file 'grammarModelBuilder.ggs', line 195
, END_PRODUCTION
// At index 94 : <select_grammarModelBuilder_9>, in file 'grammarModelBuilder.ggs', line 195
, TERMINAL (galgas_scanner::galgas_scanner_1_unused) // $unused$
, END_PRODUCTION
// At index 96 : <>, in file '.ggs', line 0
, NONTERMINAL (0) // <grammar_component_start_symbol>
, END_PRODUCTION
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     P R O D U C T I O N    N A M E S                      *
//                                                                           *
//---------------------------------------------------------------------------*

static const char * gProductionNames [30] = {
 "<grammar_component_start_symbol>, in file 'grammarModelBuilder.ggs', line 48", // at index 0
 "<grammar_start_symbol_label>, in file 'grammarModelBuilder.ggs', line 126", // at index 1
 "<label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 146", // at index 2
 "<label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 167", // at index 3
 "<label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 188", // at index 4
 "<label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 209", // at index 5
 "<select_repeat_grammarModelBuilder_0>, in file 'grammarModelBuilder.ggs', line 58", // at index 6
 "<select_repeat_grammarModelBuilder_0>, in file 'grammarModelBuilder.ggs', line 58", // at index 7
 "<select_repeat_grammarModelBuilder_1>, in file 'grammarModelBuilder.ggs', line 66", // at index 8
 "<select_repeat_grammarModelBuilder_1>, in file 'grammarModelBuilder.ggs', line 66", // at index 9
 "<select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 69", // at index 10
 "<select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 69", // at index 11
 "<select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 69", // at index 12
 "<select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 69", // at index 13
 "<select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 69", // at index 14
 "<select_repeat_grammarModelBuilder_3>, in file 'grammarModelBuilder.ggs', line 90", // at index 15
 "<select_repeat_grammarModelBuilder_3>, in file 'grammarModelBuilder.ggs', line 90", // at index 16
 "<select_repeat_grammarModelBuilder_4>, in file 'grammarModelBuilder.ggs', line 99", // at index 17
 "<select_repeat_grammarModelBuilder_4>, in file 'grammarModelBuilder.ggs', line 99", // at index 18
 "<select_repeat_grammarModelBuilder_5>, in file 'grammarModelBuilder.ggs', line 102", // at index 19
 "<select_repeat_grammarModelBuilder_5>, in file 'grammarModelBuilder.ggs', line 102", // at index 20
 "<select_repeat_grammarModelBuilder_6>, in file 'grammarModelBuilder.ggs', line 133", // at index 21
 "<select_repeat_grammarModelBuilder_6>, in file 'grammarModelBuilder.ggs', line 133", // at index 22
 "<select_grammarModelBuilder_7>, in file 'grammarModelBuilder.ggs', line 153", // at index 23
 "<select_grammarModelBuilder_7>, in file 'grammarModelBuilder.ggs', line 153", // at index 24
 "<select_grammarModelBuilder_8>, in file 'grammarModelBuilder.ggs', line 174", // at index 25
 "<select_grammarModelBuilder_8>, in file 'grammarModelBuilder.ggs', line 174", // at index 26
 "<select_grammarModelBuilder_9>, in file 'grammarModelBuilder.ggs', line 195", // at index 27
 "<select_grammarModelBuilder_9>, in file 'grammarModelBuilder.ggs', line 195", // at index 28
 "<>, in file '.ggs', line 0" // at index 29
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            L L ( 1 )    P R O D U C T I O N    I N D E X E S              *
//                                                                           *
//---------------------------------------------------------------------------*

static const PMSInt16 gProductionIndexes [30] = {
0, // index 0 : <grammar_component_start_symbol>, in file 'grammarModelBuilder.ggs', line 48
19, // index 1 : <grammar_start_symbol_label>, in file 'grammarModelBuilder.ggs', line 126
21, // index 2 : <label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 146
26, // index 3 : <label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 167
31, // index 4 : <label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 188
36, // index 5 : <label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 209
40, // index 6 : <select_repeat_grammarModelBuilder_0>, in file 'grammarModelBuilder.ggs', line 58
41, // index 7 : <select_repeat_grammarModelBuilder_0>, in file 'grammarModelBuilder.ggs', line 58
46, // index 8 : <select_repeat_grammarModelBuilder_1>, in file 'grammarModelBuilder.ggs', line 66
47, // index 9 : <select_repeat_grammarModelBuilder_1>, in file 'grammarModelBuilder.ggs', line 66
55, // index 10 : <select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 69
57, // index 11 : <select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 69
59, // index 12 : <select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 69
61, // index 13 : <select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 69
63, // index 14 : <select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 69
65, // index 15 : <select_repeat_grammarModelBuilder_3>, in file 'grammarModelBuilder.ggs', line 90
66, // index 16 : <select_repeat_grammarModelBuilder_3>, in file 'grammarModelBuilder.ggs', line 90
71, // index 17 : <select_repeat_grammarModelBuilder_4>, in file 'grammarModelBuilder.ggs', line 99
72, // index 18 : <select_repeat_grammarModelBuilder_4>, in file 'grammarModelBuilder.ggs', line 99
78, // index 19 : <select_repeat_grammarModelBuilder_5>, in file 'grammarModelBuilder.ggs', line 102
79, // index 20 : <select_repeat_grammarModelBuilder_5>, in file 'grammarModelBuilder.ggs', line 102
83, // index 21 : <select_repeat_grammarModelBuilder_6>, in file 'grammarModelBuilder.ggs', line 133
84, // index 22 : <select_repeat_grammarModelBuilder_6>, in file 'grammarModelBuilder.ggs', line 133
87, // index 23 : <select_grammarModelBuilder_7>, in file 'grammarModelBuilder.ggs', line 153
88, // index 24 : <select_grammarModelBuilder_7>, in file 'grammarModelBuilder.ggs', line 153
90, // index 25 : <select_grammarModelBuilder_8>, in file 'grammarModelBuilder.ggs', line 174
91, // index 26 : <select_grammarModelBuilder_8>, in file 'grammarModelBuilder.ggs', line 174
93, // index 27 : <select_grammarModelBuilder_9>, in file 'grammarModelBuilder.ggs', line 195
94, // index 28 : <select_grammarModelBuilder_9>, in file 'grammarModelBuilder.ggs', line 195
96 // index 29 : <>, in file '.ggs', line 0
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//      L L ( 1 )    F I R S T    P R O D U C T I O N    I N D E X E S       *
//                                                                           *
//---------------------------------------------------------------------------*

static const PMSInt16 gFirstProductionIndexes [15] = {
0, // at 0 : <grammar_component_start_symbol>
1, // at 1 : <grammar_start_symbol_label>
2, // at 2 : <label_formal_parameter>
6, // at 3 : <select_repeat_grammarModelBuilder_0>
8, // at 4 : <select_repeat_grammarModelBuilder_1>
10, // at 5 : <select_grammarModelBuilder_2>
15, // at 6 : <select_repeat_grammarModelBuilder_3>
17, // at 7 : <select_repeat_grammarModelBuilder_4>
19, // at 8 : <select_repeat_grammarModelBuilder_5>
21, // at 9 : <select_repeat_grammarModelBuilder_6>
23, // at 10 : <select_grammarModelBuilder_7>
25, // at 11 : <select_grammarModelBuilder_8>
27, // at 12 : <select_grammarModelBuilder_9>
29, // at 13 : <>
0} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               L L ( 1 )    D E C I S I O N    T A B L E S                 *
//                                                                           *
//---------------------------------------------------------------------------*

static const PMSInt16 gDecision [] = {
// At index 0 : <grammar_component_start_symbol> only one production, no choice
  -1,
// At index 1 : <grammar_start_symbol_label> only one production, no choice
  -1,
// At index 2 : <label_formal_parameter>
galgas_scanner::galgas_scanner_1__3F_, -1, // Choice 1
galgas_scanner::galgas_scanner_1__3F__3F_, -1, // Choice 2
galgas_scanner::galgas_scanner_1__3F__21_, -1, // Choice 3
galgas_scanner::galgas_scanner_1__21_, -1, // Choice 4
  -1,
//---- Added non terminal symbols from 'select' and 'repeat' instructions
// At index 11 : <select_repeat_grammarModelBuilder_0>
galgas_scanner::galgas_scanner_1_import, galgas_scanner::galgas_scanner_1_root, -1, // Choice 1
galgas_scanner::galgas_scanner_1_with, -1, // Choice 2
  -1,
// At index 17 : <select_repeat_grammarModelBuilder_1>
galgas_scanner::galgas_scanner_1_root, -1, // Choice 1
galgas_scanner::galgas_scanner_1_import, -1, // Choice 2
  -1,
// At index 22 : <select_grammarModelBuilder_2>
galgas_scanner::galgas_scanner_1_semantics, -1, // Choice 1
galgas_scanner::galgas_scanner_1_lexique, -1, // Choice 2
galgas_scanner::galgas_scanner_1_grammar, -1, // Choice 3
galgas_scanner::galgas_scanner_1_syntax, -1, // Choice 4
galgas_scanner::galgas_scanner_1_option, -1, // Choice 5
  -1,
// At index 33 : <select_repeat_grammarModelBuilder_3>
galgas_scanner::galgas_scanner_1__3B_, -1, // Choice 1
galgas_scanner::galgas_scanner_1_label, -1, // Choice 2
  -1,
// At index 38 : <select_repeat_grammarModelBuilder_4>
galgas_scanner::galgas_scanner_1_end, -1, // Choice 1
galgas_scanner::galgas_scanner_1_unused, -1, // Choice 2
  -1,
// At index 43 : <select_repeat_grammarModelBuilder_5>
galgas_scanner::galgas_scanner_1__3B_, -1, // Choice 1
galgas_scanner::galgas_scanner_1__2C_, -1, // Choice 2
  -1,
// At index 48 : <select_repeat_grammarModelBuilder_6>
galgas_scanner::galgas_scanner_1__3B_, galgas_scanner::galgas_scanner_1_label, -1, // Choice 1
galgas_scanner::galgas_scanner_1__3F_, galgas_scanner::galgas_scanner_1__3F__3F_, galgas_scanner::galgas_scanner_1__3F__21_, galgas_scanner::galgas_scanner_1__21_, -1, // Choice 2
  -1,
// At index 57 : <select_grammarModelBuilder_7>
galgas_scanner::galgas_scanner_1_identifier, -1, // Choice 1
galgas_scanner::galgas_scanner_1_unused, -1, // Choice 2
  -1,
// At index 62 : <select_grammarModelBuilder_8>
galgas_scanner::galgas_scanner_1_identifier, -1, // Choice 1
galgas_scanner::galgas_scanner_1_unused, -1, // Choice 2
  -1,
// At index 67 : <select_grammarModelBuilder_9>
galgas_scanner::galgas_scanner_1_identifier, -1, // Choice 1
galgas_scanner::galgas_scanner_1_unused, -1, // Choice 2
  -1,
// At index 72 : <> only one production, no choice
  -1,
0} ;

//---------------------------------------------------------------------------*
//                                                                           *
//       L L ( 1 )    D E C I S I O N    T A B L E S    I N D E X E S        *
//                                                                           *
//---------------------------------------------------------------------------*

static const PMSInt16 gDecisionIndexes [15] = {
0, // at 0 : <grammar_component_start_symbol>
1, // at 1 : <grammar_start_symbol_label>
2, // at 2 : <label_formal_parameter>
11, // at 3 : <select_repeat_grammarModelBuilder_0>
17, // at 4 : <select_repeat_grammarModelBuilder_1>
22, // at 5 : <select_grammarModelBuilder_2>
33, // at 6 : <select_repeat_grammarModelBuilder_3>
38, // at 7 : <select_repeat_grammarModelBuilder_4>
43, // at 8 : <select_repeat_grammarModelBuilder_5>
48, // at 9 : <select_repeat_grammarModelBuilder_6>
57, // at 10 : <select_grammarModelBuilder_7>
62, // at 11 : <select_grammarModelBuilder_8>
67, // at 12 : <select_grammarModelBuilder_9>
72, // at 13 : <>
0} ;

//---------------------------------------------------------------------------*
//                                                                           *
//       'grammar_component_start_symbol' non terminal implementation        *
//                                                                           *
//---------------------------------------------------------------------------*

void grammarLL1grammar::
nt_grammar_component_start_symbol_ (galgas_scanner & inLexique,
                                GGS_grammarComponentRoot & parameter_1) {
pr_grammar_component_start_symbol_grammarModelBuilder_48_37_ (inLexique, parameter_1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Grammar start symbol implementation                     *
//                                                                           *
//---------------------------------------------------------------------------*

void grammarLL1grammar::_performSourceFileParsing_ (C_Compiler & inCompiler,
                                const C_String & inDependancyExtension,
                                const C_String & inDependancyPath,
                                GGS_string * inSentStringPtr,
                                const GGS_lstring _inFileName,
                                GGS_grammarComponentRoot & parameter_1
                                COMMA_LOCATION_ARGS) {
  const C_String sourceFileName = _inFileName.string ().isAbsolutePath ()
    ? _inFileName.string ()
    : inCompiler.sourceFileName ().stringByDeletingLastPathComponent ().stringByAppendingPathComponent (_inFileName.string ()) ;
  if (sourceFileName.fileExists ()) {
    galgas_scanner * scanner_ = NULL ;
    macroMyNew (scanner_, galgas_scanner (& inCompiler, inDependancyExtension, inDependancyPath, inCompiler.ioParametersPtr (), sourceFileName COMMA_HERE)) ;
    if (scanner_->needsCompiling ()) {
      if (scanner_->sourceText () != NULL) {
        scanner_->mPerformGeneration = inCompiler.mPerformGeneration ;
        const bool ok = scanner_->performTopDownParsing (gProductions, gProductionNames, gProductionIndexes,
                                                         gFirstProductionIndexes, gDecision, gDecisionIndexes, 96) ;
        if (ok && ! scanner_->mParseOnlyFlag) {
          grammarLL1grammar _grammar ;
          _grammar.nt_grammar_component_start_symbol_ (*scanner_, parameter_1) ;
          if (inSentStringPtr != NULL) {
            inSentStringPtr->dotAssign_operation (scanner_->sentString ()) ;
          }
        }
      }else{
        C_String message ;
        message << "the '" << sourceFileName << "' file exits, but cannot be read" ;
        _inFileName.signalSemanticError (inCompiler, message COMMA_THERE) ;
        parameter_1.drop () ;
      }
    }
    macroDetachPointer (scanner_, galgas_scanner) ;
  }else{
    C_String message ;
    message << "the '" << sourceFileName << "' file does not exist" ;
    _inFileName.signalSemanticError (inCompiler, message COMMA_THERE) ;
    parameter_1.drop () ;
  }
}

//---------------------------------------------------------------------------*

void grammarLL1grammar::_performSourceStringParsing_ (C_Compiler & inCompiler,
                                GGS_string * inSentStringPtr,
                                const GGS_string _inSourceString,
                                GGS_grammarComponentRoot & parameter_1
                                COMMA_UNUSED_LOCATION_ARGS) {
  galgas_scanner * scanner_ = NULL ;
  macroMyNew (scanner_, galgas_scanner (& inCompiler, inCompiler.ioParametersPtr (), _inSourceString.string (), "Error when parsing dynamic string" COMMA_HERE)) ;
  scanner_->mPerformGeneration = inCompiler.mPerformGeneration ;
  const bool ok = scanner_->performTopDownParsing (gProductions, gProductionNames, gProductionIndexes,
                                                   gFirstProductionIndexes, gDecision, gDecisionIndexes, 96) ;
  if (ok && ! scanner_->mParseOnlyFlag) {
    grammarLL1grammar _grammar ;
    _grammar.nt_grammar_component_start_symbol_ (*scanner_, parameter_1) ;
    if (inSentStringPtr != NULL) {
      inSentStringPtr->dotAssign_operation (scanner_->sentString ()) ;
    }
  }
  macroDetachPointer (scanner_, galgas_scanner) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         'grammar_start_symbol_label' non terminal implementation          *
//                                                                           *
//---------------------------------------------------------------------------*

void grammarLL1grammar::
nt_grammar_start_symbol_label_ (galgas_scanner & inLexique,
                                const GGS_lstring parameter_1,
                                GGS_nonTerminalLabelList & parameter_2) {
pr_grammar_start_symbol_label_grammarModelBuilder_126_33_ (inLexique, parameter_1, parameter_2) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           'label_formal_parameter' non terminal implementation            *
//                                                                           *
//---------------------------------------------------------------------------*

void grammarLL1grammar::
nt_label_formal_parameter_ (galgas_scanner & inLexique,
                                GGS_lstring & parameter_1,
                                GGS_formalParameterList & parameter_2) {
  switch (inLexique.nextProductionIndex ()) {
  case 1 :
  pr_label_formal_parameter_grammarModelBuilder_146_29_ (inLexique, parameter_1, parameter_2) ;
    break ;
  case 2 :
  pr_label_formal_parameter_grammarModelBuilder_167_29_ (inLexique, parameter_1, parameter_2) ;
    break ;
  case 3 :
  pr_label_formal_parameter_grammarModelBuilder_188_29_ (inLexique, parameter_1, parameter_2) ;
    break ;
  case 4 :
  pr_label_formal_parameter_grammarModelBuilder_209_29_ (inLexique, parameter_1, parameter_2) ;
    break ;
  default :
    break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'select_repeat_grammarModelBuilder_0' added non terminal implementation   *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 grammarLL1grammar::select_repeat_grammarModelBuilder_0 (galgas_scanner & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'select_repeat_grammarModelBuilder_1' added non terminal implementation   *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 grammarLL1grammar::select_repeat_grammarModelBuilder_1 (galgas_scanner & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     'select_grammarModelBuilder_2' added non terminal implementation      *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 grammarLL1grammar::select_grammarModelBuilder_2 (galgas_scanner & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'select_repeat_grammarModelBuilder_3' added non terminal implementation   *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 grammarLL1grammar::select_repeat_grammarModelBuilder_3 (galgas_scanner & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'select_repeat_grammarModelBuilder_4' added non terminal implementation   *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 grammarLL1grammar::select_repeat_grammarModelBuilder_4 (galgas_scanner & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'select_repeat_grammarModelBuilder_5' added non terminal implementation   *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 grammarLL1grammar::select_repeat_grammarModelBuilder_5 (galgas_scanner & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'select_repeat_grammarModelBuilder_6' added non terminal implementation   *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 grammarLL1grammar::select_repeat_grammarModelBuilder_6 (galgas_scanner & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     'select_grammarModelBuilder_7' added non terminal implementation      *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 grammarLL1grammar::select_grammarModelBuilder_7 (galgas_scanner & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     'select_grammarModelBuilder_8' added non terminal implementation      *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 grammarLL1grammar::select_grammarModelBuilder_8 (galgas_scanner & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     'select_grammarModelBuilder_9' added non terminal implementation      *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 grammarLL1grammar::select_grammarModelBuilder_9 (galgas_scanner & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*

