//-----------------------------------------------------------------------------*
//                                                                             *
//                        File 'grammarLL1grammar.cpp'                         *
//                         Generated by version 2.6.0                          *
//                       june 19th, 2014, at 23h41'53"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//-----------------------------------------------------------------------------*

#include "utilities/MF_MemoryControl.h"
#include "galgas2/C_galgas_CLI_Options.h"

#include "files/C_FileManager.h"

//-----------------------------------------------------------------------------*

#include "grammarLL1grammar.h"

//-----------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//-----------------------------------------------------------------------------*
//                                                                             *
//               L L ( 1 )    P R O D U C T I O N    R U L E S                 *
//                                                                             *
//-----------------------------------------------------------------------------*

#define TERMINAL(t)     ((t)+1)
#define NONTERMINAL(nt) ((-nt)-1)
#define END_PRODUCTION  (0)

static const int16_t gProductions [] = {
// At index 0 : <grammar_component_start_symbol>, in file 'grammarModelBuilder.ggs', line 30
  NONTERMINAL (3) // <select_grammarModelBuilder_0>
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) // $grammar$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) // $identifier$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) // $literal_string$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) // $:$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_with) // $with$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) // $literal_string$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) // $;$
, NONTERMINAL (4) // <select_grammarModelBuilder_1>
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_root) // $root$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_non_5F_terminal_5F_symbol) // $non_terminal_symbol$
, NONTERMINAL (1) // <grammar_start_symbol_label>
, NONTERMINAL (5) // <select_grammarModelBuilder_2>
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) // $;$
, NONTERMINAL (6) // <select_grammarModelBuilder_3>
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) // $end$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) // $grammar$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) // $;$
, END_PRODUCTION
// At index 19 : <grammar_start_symbol_label>, in file 'grammarModelBuilder.ggs', line 96
, NONTERMINAL (8) // <select_grammarModelBuilder_5>
, END_PRODUCTION
// At index 21 : <label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 116
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) // $?$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) // $type_name$
, NONTERMINAL (9) // <select_grammarModelBuilder_6>
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) // $identifier$
, END_PRODUCTION
// At index 26 : <label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 137
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__3F_) // $??$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) // $type_name$
, NONTERMINAL (10) // <select_grammarModelBuilder_7>
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) // $identifier$
, END_PRODUCTION
// At index 31 : <label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 158
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__21_) // $?!$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) // $type_name$
, NONTERMINAL (11) // <select_grammarModelBuilder_8>
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) // $identifier$
, END_PRODUCTION
// At index 36 : <label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 179
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) // $!$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) // $type_name$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) // $identifier$
, END_PRODUCTION
//---- Added productions from 'select' and 'repeat' instructions
// At index 40 : <select_grammarModelBuilder_0>, in file 'grammarModelBuilder.ggs', line 34
, END_PRODUCTION
// At index 41 : <select_grammarModelBuilder_0>, in file 'grammarModelBuilder.ggs', line 34
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_indexing) // $indexing$
, END_PRODUCTION
// At index 43 : <select_grammarModelBuilder_1>, in file 'grammarModelBuilder.ggs', line 46
, END_PRODUCTION
// At index 44 : <select_grammarModelBuilder_1>, in file 'grammarModelBuilder.ggs', line 46
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_with) // $with$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) // $literal_string$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) // $;$
, NONTERMINAL (4) // <select_grammarModelBuilder_1>
, END_PRODUCTION
// At index 49 : <select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 58
, END_PRODUCTION
// At index 50 : <select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 58
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_label) // $label$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) // $identifier$
, NONTERMINAL (1) // <grammar_start_symbol_label>
, NONTERMINAL (5) // <select_grammarModelBuilder_2>
, END_PRODUCTION
// At index 55 : <select_grammarModelBuilder_3>, in file 'grammarModelBuilder.ggs', line 67
, END_PRODUCTION
// At index 56 : <select_grammarModelBuilder_3>, in file 'grammarModelBuilder.ggs', line 67
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) // $unused$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_non_5F_terminal_5F_symbol) // $non_terminal_symbol$
, NONTERMINAL (7) // <select_grammarModelBuilder_4>
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) // $;$
, NONTERMINAL (6) // <select_grammarModelBuilder_3>
, END_PRODUCTION
// At index 62 : <select_grammarModelBuilder_4>, in file 'grammarModelBuilder.ggs', line 70
, END_PRODUCTION
// At index 63 : <select_grammarModelBuilder_4>, in file 'grammarModelBuilder.ggs', line 70
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) // $,$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_non_5F_terminal_5F_symbol) // $non_terminal_symbol$
, NONTERMINAL (7) // <select_grammarModelBuilder_4>
, END_PRODUCTION
// At index 67 : <select_grammarModelBuilder_5>, in file 'grammarModelBuilder.ggs', line 102
, END_PRODUCTION
// At index 68 : <select_grammarModelBuilder_5>, in file 'grammarModelBuilder.ggs', line 102
, NONTERMINAL (2) // <label_formal_parameter>
, NONTERMINAL (8) // <select_grammarModelBuilder_5>
, END_PRODUCTION
// At index 71 : <select_grammarModelBuilder_6>, in file 'grammarModelBuilder.ggs', line 122
, END_PRODUCTION
// At index 72 : <select_grammarModelBuilder_6>, in file 'grammarModelBuilder.ggs', line 122
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) // $unused$
, END_PRODUCTION
// At index 74 : <select_grammarModelBuilder_7>, in file 'grammarModelBuilder.ggs', line 143
, END_PRODUCTION
// At index 75 : <select_grammarModelBuilder_7>, in file 'grammarModelBuilder.ggs', line 143
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) // $unused$
, END_PRODUCTION
// At index 77 : <select_grammarModelBuilder_8>, in file 'grammarModelBuilder.ggs', line 164
, END_PRODUCTION
// At index 78 : <select_grammarModelBuilder_8>, in file 'grammarModelBuilder.ggs', line 164
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) // $unused$
, END_PRODUCTION
// At index 80 : <>, in file '.ggs', line 0
, NONTERMINAL (0) // <grammar_component_start_symbol>
, END_PRODUCTION
} ;

//-----------------------------------------------------------------------------*
//                                                                             *
//                      P R O D U C T I O N    N A M E S                       *
//                                                                             *
//-----------------------------------------------------------------------------*

static const cProductionNameDescriptor gProductionNames [25] = {
 {"<grammar_component_start_symbol>", "grammarModelBuilder", 0}, // at index 0
 {"<grammar_start_symbol_label>", "grammarModelBuilder", 19}, // at index 1
 {"<label_formal_parameter>", "grammarModelBuilder", 21}, // at index 2
 {"<label_formal_parameter>", "grammarModelBuilder", 26}, // at index 3
 {"<label_formal_parameter>", "grammarModelBuilder", 31}, // at index 4
 {"<label_formal_parameter>", "grammarModelBuilder", 36}, // at index 5
 {"<select_grammarModelBuilder_0>", "grammarModelBuilder", 40}, // at index 6
 {"<select_grammarModelBuilder_0>", "grammarModelBuilder", 41}, // at index 7
 {"<select_grammarModelBuilder_1>", "grammarModelBuilder", 43}, // at index 8
 {"<select_grammarModelBuilder_1>", "grammarModelBuilder", 44}, // at index 9
 {"<select_grammarModelBuilder_2>", "grammarModelBuilder", 49}, // at index 10
 {"<select_grammarModelBuilder_2>", "grammarModelBuilder", 50}, // at index 11
 {"<select_grammarModelBuilder_3>", "grammarModelBuilder", 55}, // at index 12
 {"<select_grammarModelBuilder_3>", "grammarModelBuilder", 56}, // at index 13
 {"<select_grammarModelBuilder_4>", "grammarModelBuilder", 62}, // at index 14
 {"<select_grammarModelBuilder_4>", "grammarModelBuilder", 63}, // at index 15
 {"<select_grammarModelBuilder_5>", "grammarModelBuilder", 67}, // at index 16
 {"<select_grammarModelBuilder_5>", "grammarModelBuilder", 68}, // at index 17
 {"<select_grammarModelBuilder_6>", "grammarModelBuilder", 71}, // at index 18
 {"<select_grammarModelBuilder_6>", "grammarModelBuilder", 72}, // at index 19
 {"<select_grammarModelBuilder_7>", "grammarModelBuilder", 74}, // at index 20
 {"<select_grammarModelBuilder_7>", "grammarModelBuilder", 75}, // at index 21
 {"<select_grammarModelBuilder_8>", "grammarModelBuilder", 77}, // at index 22
 {"<select_grammarModelBuilder_8>", "grammarModelBuilder", 78}, // at index 23
 {"<>", "", 80} // at index 24
} ;

//-----------------------------------------------------------------------------*
//                                                                             *
//             L L ( 1 )    P R O D U C T I O N    I N D E X E S               *
//                                                                             *
//-----------------------------------------------------------------------------*

static const int16_t gProductionIndexes [25] = {
0, // index 0 : <grammar_component_start_symbol>, in file 'grammarModelBuilder.ggs', line 30
19, // index 1 : <grammar_start_symbol_label>, in file 'grammarModelBuilder.ggs', line 96
21, // index 2 : <label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 116
26, // index 3 : <label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 137
31, // index 4 : <label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 158
36, // index 5 : <label_formal_parameter>, in file 'grammarModelBuilder.ggs', line 179
40, // index 6 : <select_grammarModelBuilder_0>, in file 'grammarModelBuilder.ggs', line 34
41, // index 7 : <select_grammarModelBuilder_0>, in file 'grammarModelBuilder.ggs', line 34
43, // index 8 : <select_grammarModelBuilder_1>, in file 'grammarModelBuilder.ggs', line 46
44, // index 9 : <select_grammarModelBuilder_1>, in file 'grammarModelBuilder.ggs', line 46
49, // index 10 : <select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 58
50, // index 11 : <select_grammarModelBuilder_2>, in file 'grammarModelBuilder.ggs', line 58
55, // index 12 : <select_grammarModelBuilder_3>, in file 'grammarModelBuilder.ggs', line 67
56, // index 13 : <select_grammarModelBuilder_3>, in file 'grammarModelBuilder.ggs', line 67
62, // index 14 : <select_grammarModelBuilder_4>, in file 'grammarModelBuilder.ggs', line 70
63, // index 15 : <select_grammarModelBuilder_4>, in file 'grammarModelBuilder.ggs', line 70
67, // index 16 : <select_grammarModelBuilder_5>, in file 'grammarModelBuilder.ggs', line 102
68, // index 17 : <select_grammarModelBuilder_5>, in file 'grammarModelBuilder.ggs', line 102
71, // index 18 : <select_grammarModelBuilder_6>, in file 'grammarModelBuilder.ggs', line 122
72, // index 19 : <select_grammarModelBuilder_6>, in file 'grammarModelBuilder.ggs', line 122
74, // index 20 : <select_grammarModelBuilder_7>, in file 'grammarModelBuilder.ggs', line 143
75, // index 21 : <select_grammarModelBuilder_7>, in file 'grammarModelBuilder.ggs', line 143
77, // index 22 : <select_grammarModelBuilder_8>, in file 'grammarModelBuilder.ggs', line 164
78, // index 23 : <select_grammarModelBuilder_8>, in file 'grammarModelBuilder.ggs', line 164
80 // index 24 : <>, in file '.ggs', line 0
} ;

//-----------------------------------------------------------------------------*
//                                                                             *
//       L L ( 1 )    F I R S T    P R O D U C T I O N    I N D E X E S        *
//                                                                             *
//-----------------------------------------------------------------------------*

static const int16_t gFirstProductionIndexes [14] = {
0, // at 0 : <grammar_component_start_symbol>
1, // at 1 : <grammar_start_symbol_label>
2, // at 2 : <label_formal_parameter>
6, // at 3 : <select_grammarModelBuilder_0>
8, // at 4 : <select_grammarModelBuilder_1>
10, // at 5 : <select_grammarModelBuilder_2>
12, // at 6 : <select_grammarModelBuilder_3>
14, // at 7 : <select_grammarModelBuilder_4>
16, // at 8 : <select_grammarModelBuilder_5>
18, // at 9 : <select_grammarModelBuilder_6>
20, // at 10 : <select_grammarModelBuilder_7>
22, // at 11 : <select_grammarModelBuilder_8>
24, // at 12 : <>
0} ;

//-----------------------------------------------------------------------------*
//                                                                             *
//                L L ( 1 )    D E C I S I O N    T A B L E S                  *
//                                                                             *
//-----------------------------------------------------------------------------*

static const int16_t gDecision [] = {
// At index 0 : <grammar_component_start_symbol> only one production, no choice
  -1,
// At index 1 : <grammar_start_symbol_label> only one production, no choice
  -1,
// At index 2 : <label_formal_parameter>
C_Lexique_galgas_5F_scanner::kToken__3F_, -1, // Choice 1
C_Lexique_galgas_5F_scanner::kToken__3F__3F_, -1, // Choice 2
C_Lexique_galgas_5F_scanner::kToken__3F__21_, -1, // Choice 3
C_Lexique_galgas_5F_scanner::kToken__21_, -1, // Choice 4
  -1,
//---- Added non terminal symbols from 'select' and 'repeat' instructions
// At index 11 : <select_grammarModelBuilder_0>
C_Lexique_galgas_5F_scanner::kToken_grammar, -1, // Choice 1
C_Lexique_galgas_5F_scanner::kToken_indexing, -1, // Choice 2
  -1,
// At index 16 : <select_grammarModelBuilder_1>
C_Lexique_galgas_5F_scanner::kToken_root, -1, // Choice 1
C_Lexique_galgas_5F_scanner::kToken_with, -1, // Choice 2
  -1,
// At index 21 : <select_grammarModelBuilder_2>
C_Lexique_galgas_5F_scanner::kToken__3B_, -1, // Choice 1
C_Lexique_galgas_5F_scanner::kToken_label, -1, // Choice 2
  -1,
// At index 26 : <select_grammarModelBuilder_3>
C_Lexique_galgas_5F_scanner::kToken_end, -1, // Choice 1
C_Lexique_galgas_5F_scanner::kToken_unused, -1, // Choice 2
  -1,
// At index 31 : <select_grammarModelBuilder_4>
C_Lexique_galgas_5F_scanner::kToken__3B_, -1, // Choice 1
C_Lexique_galgas_5F_scanner::kToken__2C_, -1, // Choice 2
  -1,
// At index 36 : <select_grammarModelBuilder_5>
C_Lexique_galgas_5F_scanner::kToken__3B_, C_Lexique_galgas_5F_scanner::kToken_label, -1, // Choice 1
C_Lexique_galgas_5F_scanner::kToken__3F_, C_Lexique_galgas_5F_scanner::kToken__3F__3F_, C_Lexique_galgas_5F_scanner::kToken__3F__21_, C_Lexique_galgas_5F_scanner::kToken__21_, -1, // Choice 2
  -1,
// At index 45 : <select_grammarModelBuilder_6>
C_Lexique_galgas_5F_scanner::kToken_identifier, -1, // Choice 1
C_Lexique_galgas_5F_scanner::kToken_unused, -1, // Choice 2
  -1,
// At index 50 : <select_grammarModelBuilder_7>
C_Lexique_galgas_5F_scanner::kToken_identifier, -1, // Choice 1
C_Lexique_galgas_5F_scanner::kToken_unused, -1, // Choice 2
  -1,
// At index 55 : <select_grammarModelBuilder_8>
C_Lexique_galgas_5F_scanner::kToken_identifier, -1, // Choice 1
C_Lexique_galgas_5F_scanner::kToken_unused, -1, // Choice 2
  -1,
// At index 60 : <> only one production, no choice
  -1,
0} ;

//-----------------------------------------------------------------------------*
//                                                                             *
//        L L ( 1 )    D E C I S I O N    T A B L E S    I N D E X E S         *
//                                                                             *
//-----------------------------------------------------------------------------*

static const int16_t gDecisionIndexes [14] = {
0, // at 0 : <grammar_component_start_symbol>
1, // at 1 : <grammar_start_symbol_label>
2, // at 2 : <label_formal_parameter>
11, // at 3 : <select_grammarModelBuilder_0>
16, // at 4 : <select_grammarModelBuilder_1>
21, // at 5 : <select_grammarModelBuilder_2>
26, // at 6 : <select_grammarModelBuilder_3>
31, // at 7 : <select_grammarModelBuilder_4>
36, // at 8 : <select_grammarModelBuilder_5>
45, // at 9 : <select_grammarModelBuilder_6>
50, // at 10 : <select_grammarModelBuilder_7>
55, // at 11 : <select_grammarModelBuilder_8>
60, // at 12 : <>
0} ;

//-----------------------------------------------------------------------------*
//                                                                             *
//        'grammar_component_start_symbol' non terminal implementation         *
//                                                                             *
//-----------------------------------------------------------------------------*

void cGrammar_grammarLL_31_grammar::nt_grammar_5F_component_5F_start_5F_symbol_parse (C_Lexique_galgas_5F_scanner * inLexique) {
  rule_grammarModelBuilder_grammar_5F_component_5F_start_5F_symbol_i0_parse(inLexique) ;
}

void cGrammar_grammarLL_31_grammar::nt_grammar_5F_component_5F_start_5F_symbol_indexing (C_Lexique_galgas_5F_scanner * inLexique) {
  rule_grammarModelBuilder_grammar_5F_component_5F_start_5F_symbol_i0_indexing(inLexique) ;
}

void cGrammar_grammarLL_31_grammar::nt_grammar_5F_component_5F_start_5F_symbol_ (GALGAS_grammarComponentAST & parameter_1,
                                C_Lexique_galgas_5F_scanner * inLexique) {
  rule_grammarModelBuilder_grammar_5F_component_5F_start_5F_symbol_i0_(parameter_1, inLexique) ;
}

void cGrammar_grammarLL_31_grammar::performIndexing (C_Compiler * inCompiler,
             const C_String & inSourceFilePath) {
  C_Lexique_galgas_5F_scanner * scanner = NULL ;
  macroMyNew (scanner, C_Lexique_galgas_5F_scanner (inCompiler, "", "", inSourceFilePath COMMA_HERE)) ;
  scanner->enableIndexing () ;
  if (scanner->sourceText () != NULL) {
    const bool ok = scanner->performTopDownParsing (gProductions, gProductionNames, gProductionIndexes,
                                                    gFirstProductionIndexes, gDecision, gDecisionIndexes, 80) ;
    if (ok) {
      cGrammar_grammarLL_31_grammar grammar ;
      grammar.nt_grammar_5F_component_5F_start_5F_symbol_indexing (scanner) ;
    }
    scanner->generateIndexFile () ;
  }
  macroDetachSharedObject (scanner) ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                    Grammar start symbol implementation                      *
//                                                                             *
//-----------------------------------------------------------------------------*

void cGrammar_grammarLL_31_grammar::_performSourceFileParsing_ (C_Compiler * inCompiler,
                                GALGAS_lstring inFilePath,
                                GALGAS_grammarComponentAST &  parameter_1
                                COMMA_LOCATION_ARGS) {
  if (inFilePath.isValid ()) {
    const GALGAS_string filePathAsString = inFilePath.reader_string (HERE) ;
    C_String filePath = filePathAsString.stringValue () ;
    if (! C_FileManager::isAbsolutePath (filePath)) {
      filePath = inCompiler->sourceFilePath ().stringByDeletingLastPathComponent ().stringByAppendingPathComponent (filePath) ;
    }
    if (C_FileManager::fileExistsAtPath (filePath)) {
    C_Lexique_galgas_5F_scanner * scanner = NULL ;
    macroMyNew (scanner, C_Lexique_galgas_5F_scanner (inCompiler, "", "", filePath COMMA_HERE)) ;
    if (scanner->sourceText () != NULL) {
      const bool ok = scanner->performTopDownParsing (gProductions, gProductionNames, gProductionIndexes,
                                                      gFirstProductionIndexes, gDecision, gDecisionIndexes, 80) ;
      if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
        cGrammar_grammarLL_31_grammar grammar ;
          grammar.nt_grammar_5F_component_5F_start_5F_symbol_ (parameter_1, scanner) ;
      }
    }else{
      C_String message ;
      message << "the '" << filePath << "' file exists, but cannot be read" ;
      const GALGAS_location errorLocation (inFilePath.reader_location (THERE)) ;
      inCompiler->semanticErrorAtLocation (errorLocation, message COMMA_THERE) ;
      parameter_1.drop () ;
    }
    macroDetachSharedObject (scanner) ;
  }else{
    C_String message ;
    message << "the '" << filePath << "' file does not exist" ;
    const GALGAS_location errorLocation (inFilePath.reader_location (THERE)) ;
    inCompiler->semanticErrorAtLocation (errorLocation, message COMMA_THERE) ;
    parameter_1.drop () ;
    }
  }
}

//-----------------------------------------------------------------------------*

void cGrammar_grammarLL_31_grammar::_performSourceStringParsing_ (C_Compiler * inCompiler,
                                GALGAS_string inSourceString,
                                GALGAS_grammarComponentAST &  parameter_1
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (inSourceString.isValid ()) {
    const C_String sourceString = inSourceString.stringValue () ;
    C_Lexique_galgas_5F_scanner * scanner = NULL ;
    macroMyNew (scanner, C_Lexique_galgas_5F_scanner (inCompiler, sourceString, "" COMMA_HERE)) ;
    const bool ok = scanner->performTopDownParsing (gProductions, gProductionNames, gProductionIndexes,
                                                    gFirstProductionIndexes, gDecision, gDecisionIndexes, 80) ;
    if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
      cGrammar_grammarLL_31_grammar grammar ;
      grammar.nt_grammar_5F_component_5F_start_5F_symbol_ (parameter_1, scanner) ;
    }
    macroDetachSharedObject (scanner) ;
  }
}

//-----------------------------------------------------------------------------*
//                                                                             *
//          'grammar_start_symbol_label' non terminal implementation           *
//                                                                             *
//-----------------------------------------------------------------------------*

void cGrammar_grammarLL_31_grammar::nt_grammar_5F_start_5F_symbol_5F_label_parse (C_Lexique_galgas_5F_scanner * inLexique) {
  rule_grammarModelBuilder_grammar_5F_start_5F_symbol_5F_label_i1_parse(inLexique) ;
}

void cGrammar_grammarLL_31_grammar::nt_grammar_5F_start_5F_symbol_5F_label_indexing (C_Lexique_galgas_5F_scanner * inLexique) {
  rule_grammarModelBuilder_grammar_5F_start_5F_symbol_5F_label_i1_indexing(inLexique) ;
}

void cGrammar_grammarLL_31_grammar::nt_grammar_5F_start_5F_symbol_5F_label_ (const GALGAS_lstring parameter_1,
                                GALGAS_nonTerminalLabelListAST & parameter_2,
                                C_Lexique_galgas_5F_scanner * inLexique) {
  rule_grammarModelBuilder_grammar_5F_start_5F_symbol_5F_label_i1_(parameter_1, parameter_2, inLexique) ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//            'label_formal_parameter' non terminal implementation             *
//                                                                             *
//-----------------------------------------------------------------------------*

void cGrammar_grammarLL_31_grammar::nt_label_5F_formal_5F_parameter_parse (C_Lexique_galgas_5F_scanner * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 1 :
    rule_grammarModelBuilder_label_5F_formal_5F_parameter_i2_parse(inLexique) ;
    break ;
  case 2 :
    rule_grammarModelBuilder_label_5F_formal_5F_parameter_i3_parse(inLexique) ;
    break ;
  case 3 :
    rule_grammarModelBuilder_label_5F_formal_5F_parameter_i4_parse(inLexique) ;
    break ;
  case 4 :
    rule_grammarModelBuilder_label_5F_formal_5F_parameter_i5_parse(inLexique) ;
    break ;
  default :
    break ;
  }
}

void cGrammar_grammarLL_31_grammar::nt_label_5F_formal_5F_parameter_indexing (C_Lexique_galgas_5F_scanner * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 1 :
    rule_grammarModelBuilder_label_5F_formal_5F_parameter_i2_indexing(inLexique) ;
    break ;
  case 2 :
    rule_grammarModelBuilder_label_5F_formal_5F_parameter_i3_indexing(inLexique) ;
    break ;
  case 3 :
    rule_grammarModelBuilder_label_5F_formal_5F_parameter_i4_indexing(inLexique) ;
    break ;
  case 4 :
    rule_grammarModelBuilder_label_5F_formal_5F_parameter_i5_indexing(inLexique) ;
    break ;
  default :
    break ;
  }
}

void cGrammar_grammarLL_31_grammar::nt_label_5F_formal_5F_parameter_ (GALGAS_lstring & parameter_1,
                                GALGAS_formalParameterListAST & parameter_2,
                                C_Lexique_galgas_5F_scanner * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 1 :
    rule_grammarModelBuilder_label_5F_formal_5F_parameter_i2_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 2 :
    rule_grammarModelBuilder_label_5F_formal_5F_parameter_i3_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 3 :
    rule_grammarModelBuilder_label_5F_formal_5F_parameter_i4_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 4 :
    rule_grammarModelBuilder_label_5F_formal_5F_parameter_i5_(parameter_1, parameter_2, inLexique) ;
    break ;
  default :
    break ;
  }
}

//-----------------------------------------------------------------------------*
//                                                                             *
//      'select_grammarModelBuilder_0' added non terminal implementation       *
//                                                                             *
//-----------------------------------------------------------------------------*

int32_t cGrammar_grammarLL_31_grammar::select_grammarModelBuilder_0 (C_Lexique_galgas_5F_scanner * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//      'select_grammarModelBuilder_1' added non terminal implementation       *
//                                                                             *
//-----------------------------------------------------------------------------*

int32_t cGrammar_grammarLL_31_grammar::select_grammarModelBuilder_1 (C_Lexique_galgas_5F_scanner * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//      'select_grammarModelBuilder_2' added non terminal implementation       *
//                                                                             *
//-----------------------------------------------------------------------------*

int32_t cGrammar_grammarLL_31_grammar::select_grammarModelBuilder_2 (C_Lexique_galgas_5F_scanner * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//      'select_grammarModelBuilder_3' added non terminal implementation       *
//                                                                             *
//-----------------------------------------------------------------------------*

int32_t cGrammar_grammarLL_31_grammar::select_grammarModelBuilder_3 (C_Lexique_galgas_5F_scanner * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//      'select_grammarModelBuilder_4' added non terminal implementation       *
//                                                                             *
//-----------------------------------------------------------------------------*

int32_t cGrammar_grammarLL_31_grammar::select_grammarModelBuilder_4 (C_Lexique_galgas_5F_scanner * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//      'select_grammarModelBuilder_5' added non terminal implementation       *
//                                                                             *
//-----------------------------------------------------------------------------*

int32_t cGrammar_grammarLL_31_grammar::select_grammarModelBuilder_5 (C_Lexique_galgas_5F_scanner * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//      'select_grammarModelBuilder_6' added non terminal implementation       *
//                                                                             *
//-----------------------------------------------------------------------------*

int32_t cGrammar_grammarLL_31_grammar::select_grammarModelBuilder_6 (C_Lexique_galgas_5F_scanner * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//      'select_grammarModelBuilder_7' added non terminal implementation       *
//                                                                             *
//-----------------------------------------------------------------------------*

int32_t cGrammar_grammarLL_31_grammar::select_grammarModelBuilder_7 (C_Lexique_galgas_5F_scanner * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//      'select_grammarModelBuilder_8' added non terminal implementation       *
//                                                                             *
//-----------------------------------------------------------------------------*

int32_t cGrammar_grammarLL_31_grammar::select_grammarModelBuilder_8 (C_Lexique_galgas_5F_scanner * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//-----------------------------------------------------------------------------*

