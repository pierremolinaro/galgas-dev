//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'include_AC_galgasType.h'                       *
//                Generated by version GALGAS_BETA_VERSION (LL(1) grammar)                 *
//                     october 29th, 2005, at 20h9'41"                       *
//                                                                           *
// This program is free software; you can redistribute it and/or modify it   *
// under the terms of the GNU General Public License as published by the     *
// Free Software Foundation.                                                 *
//                                                                           *
// This program is distributed in the hope it will be useful, but WITHOUT    *
// ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or     *
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for  *
// more details.                                                             *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_AC_galgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

#ifndef AC_galgasType_DEFINED
#define AC_galgasType_DEFINED

//---------------------------------------------------------------------------*

class cPtr_AC_galgasType : public C_GGS_Object {
//--- START OF USER ZONE 2

public : virtual void generateAttributeDeclaration (const GGS_lstring & nom,
                                                    AC_OutputStream & inHfile) = 0 ;
public : virtual void generateAttributeInitialization (const GGS_lstring & nom, \
                                                       AC_OutputStream & inCppFile) = 0 ;
public : virtual void generatePublicDeclaration (AC_OutputStream & inHfile,
                                                 const GGS_lstring & nomAttribut) ;
public : virtual void generateFormalParameter (AC_OutputStream & fichier, const bool reference) ;
public : virtual void generateCppClassName (AC_OutputStream & fichier) const = 0 ;


//--- END OF USER ZONE 2

  public : virtual void methode_getTypeName (C_Lexique &,
                                GGS_string& ) = 0 ;
  public : virtual void methode_acceptAssignmentFromHere (C_Lexique &,
                                GGS_lstring  ) ;
  public : virtual void methode_acceptForeachInstruction (C_Lexique &,
                                GGS_lstring  ,
                                GGS_typeListeAttributsSemantiques & ,
                                GGS_localConstantBuildStyleEnum& ) ;
  public : virtual void methode_acceptToBeKeyForMap (C_Lexique &) ;
  public : virtual void methode_handleModifierCall (C_Lexique &,
                                GGS_lstring  ,
                                GGS_L_signature & ) ;
  public : virtual void methode_handleReaderInstructionCall (C_Lexique &,
                                GGS_lstring  ,
                                GGS_L_signature & ) ;
  public : virtual void methode_handleConstructorCall (C_Lexique &,
                                GGS_lstring  ,
                                GGS_typeListeAttributsSemantiques & ) ;
  public : virtual void methode_handleAddAssignOperatorCall (C_Lexique &,
                                GGS_location  ,
                                GGS_typeListeAttributsSemantiques & ,
                                GGS_bool& ) ;
  public : virtual void methode_handleIncrementOperatorCall (C_Lexique &,
                                GGS_location  ) ;
  public : virtual void methode_checkAbilityToBeSilentlyConvertedToLocation (C_Lexique &) ;
  public : virtual void methode_typeCanBeUsedInObjectDeclaration (C_Lexique &) ;
  public : virtual const char * message_messageGalgasType (void) const ;
  public : static const char * static_string_message_messageGalgasType (void) ;
} ;

//---------------------------------------------------------------------------*

#endif

