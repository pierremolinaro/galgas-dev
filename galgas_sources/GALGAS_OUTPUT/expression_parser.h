//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'expression_parser.h'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      june 18th, 2008, at 21h40'40"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef expression_parser_DEFINED
#define expression_parser_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/C_GGS_Object.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/GGS_binaryset.h"
#include "galgas/GGS_filewrapper.h"
#include "galgas/predefined_types.h"
#include "galgas/AC_galgas_class.h"
#include "galgas/AC_galgas_domain.h"
#include "galgas/AC_galgas_mapindex.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/AC_galgas_listmap.h"
#include "galgas/AC_galgas_list.h"
#include "galgas/AC_galgas_sortedlist.h"

//---------------------------------------------------------------------------*

#include "galgas_scanner.h"

// Include imported semantics
#include "semantics_semantics.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'matchAndOperator'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_matchAndOperator (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                const GGS_AC_galgasType  ,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'matchOrOperator'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_matchOrOperator (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                const GGS_AC_galgasType  ,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'matchXorOperator'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_matchXorOperator (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                const GGS_AC_galgasType  ,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'matchConcatOperator'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_matchConcatOperator (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                const GGS_AC_galgasType  ,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'checkNotOperator'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkNotOperator (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'checkLogicalNegateOperator'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkLogicalNegateOperator (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'comparison_types_check'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_comparison_types_check (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                const GGS_AC_galgasType   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'magnitude_comparison_types_check'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_magnitude_comparison_types_check (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                const GGS_AC_galgasType   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'left_shift_types_check'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_left_shift_types_check (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                const GGS_AC_galgasType  ,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'right_shift_types_check'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_right_shift_types_check (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                const GGS_AC_galgasType  ,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'addition_types_check'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addition_types_check (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                const GGS_AC_galgasType  ,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'substraction_types_check'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_substraction_types_check (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                const GGS_AC_galgasType  ,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'multiply_types_check'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_multiply_types_check (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                const GGS_AC_galgasType  ,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'divide_types_check'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_divide_types_check (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                const GGS_AC_galgasType  ,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'modulo_types_check'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_modulo_types_check (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                const GGS_AC_galgasType  ,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'unary_minus_type_check'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_unary_minus_type_check (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Parser class expression_parser declaration                 *
//                                                                           *
//---------------------------------------------------------------------------*

class expression_parser {
  public : virtual ~expression_parser (void) {}

  protected : virtual void nt_expression_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) = 0 ;

  protected : virtual void nt_expression_parse (galgas_scanner &) = 0 ;

  protected : virtual void nt_concatenation_term_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) = 0 ;

  protected : virtual void nt_concatenation_term_parse (galgas_scanner &) = 0 ;

  protected : virtual void nt_relation_term_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) = 0 ;

  protected : virtual void nt_relation_term_parse (galgas_scanner &) = 0 ;

  protected : virtual void nt_relation_factor_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) = 0 ;

  protected : virtual void nt_relation_factor_parse (galgas_scanner &) = 0 ;

  protected : virtual void nt_simple_expression_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) = 0 ;

  protected : virtual void nt_simple_expression_parse (galgas_scanner &) = 0 ;

  protected : virtual void nt_term_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) = 0 ;

  protected : virtual void nt_term_parse (galgas_scanner &) = 0 ;

  protected : virtual void nt_factor_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) = 0 ;

  protected : virtual void nt_factor_parse (galgas_scanner &) = 0 ;

  protected : virtual void nt_read_access_ (galgas_scanner &,
                                GGS_lstring  &,
                                GGS_typeCplusPlusName  &,
                                GGS_AC_galgasType  &,
                                GGS_typeVariablesMap  &) = 0 ;

  protected : virtual void nt_read_access_parse (galgas_scanner &) = 0 ;

  protected : virtual void nt_output_expression_list_ (galgas_scanner &,
                                GGS_typeExpressionList  &,
                                const GGS_typeListeAttributsSemantiques  ,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &) = 0 ;

  protected : virtual void nt_output_expression_list_parse (galgas_scanner &) = 0 ;

  protected : virtual void nt_parse_effective_input_parameters_list_ (galgas_scanner &,
                                GGS_typeVariablesMap  &,
                                GGS_typeListeAttributsSemantiques  ,
                                GGS_location  ,
                                GGS_localConstantBuildStyleEnum ,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_parse_effective_input_parameters_list_parse (galgas_scanner &) = 0 ;

  protected : void pr_expression_expression_parser_615_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : virtual sint16 select_repeat_expression_parser_0 (galgas_scanner &) = 0 ;

  protected : void pr_expression_expression_parser_615_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_concatenation_term_expression_parser_662_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : virtual sint16 select_repeat_expression_parser_1 (galgas_scanner &) = 0 ;

  protected : void pr_concatenation_term_expression_parser_662_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_relation_term_expression_parser_730_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : virtual sint16 select_repeat_expression_parser_2 (galgas_scanner &) = 0 ;

  protected : void pr_relation_term_expression_parser_730_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_relation_factor_expression_parser_777_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : virtual sint16 select_expression_parser_3 (galgas_scanner &) = 0 ;

  protected : void pr_relation_factor_expression_parser_777_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_simple_expression_expression_parser_910_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : virtual sint16 select_repeat_expression_parser_4 (galgas_scanner &) = 0 ;

  protected : void pr_simple_expression_expression_parser_910_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_term_expression_parser_1004_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : virtual sint16 select_repeat_expression_parser_5 (galgas_scanner &) = 0 ;

  protected : void pr_term_expression_parser_1004_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_factor_expression_parser_1081_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : void pr_factor_expression_parser_1081_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_factor_expression_parser_1111_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : void pr_factor_expression_parser_1111_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_factor_expression_parser_1132_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : virtual sint16 select_expression_parser_6 (galgas_scanner &) = 0 ;

  protected : virtual sint16 select_expression_parser_7 (galgas_scanner &) = 0 ;

  protected : void pr_factor_expression_parser_1132_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_factor_expression_parser_1228_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : void pr_factor_expression_parser_1228_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_factor_expression_parser_1258_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : void pr_factor_expression_parser_1258_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_factor_expression_parser_1288_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : void pr_factor_expression_parser_1288_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_factor_expression_parser_1307_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : void pr_factor_expression_parser_1307_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_factor_expression_parser_1326_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : virtual sint16 select_repeat_expression_parser_8 (galgas_scanner &) = 0 ;

  protected : void pr_factor_expression_parser_1326_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_factor_expression_parser_1351_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : void pr_factor_expression_parser_1351_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_factor_expression_parser_1371_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : void pr_factor_expression_parser_1371_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_factor_expression_parser_1391_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : void pr_factor_expression_parser_1391_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_factor_expression_parser_1411_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : void pr_factor_expression_parser_1411_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_factor_expression_parser_1431_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : void pr_factor_expression_parser_1431_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_factor_expression_parser_1451_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : void pr_factor_expression_parser_1451_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_factor_expression_parser_1471_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : void pr_factor_expression_parser_1471_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_factor_expression_parser_1496_4_ (galgas_scanner &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &,
                                GGS_typeExpression  &,
                                GGS_AC_galgasType  &) ;

  protected : virtual sint16 select_expression_parser_9 (galgas_scanner &) = 0 ;

  protected : virtual sint16 select_expression_parser_10 (galgas_scanner &) = 0 ;

  protected : virtual sint16 select_expression_parser_11 (galgas_scanner &) = 0 ;

  protected : virtual sint16 select_expression_parser_12 (galgas_scanner &) = 0 ;

  protected : virtual sint16 select_expression_parser_13 (galgas_scanner &) = 0 ;

  protected : void pr_factor_expression_parser_1496_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_read_access_expression_parser_1658_4_ (galgas_scanner &,
                                GGS_lstring  &,
                                GGS_typeCplusPlusName  &,
                                GGS_AC_galgasType  &,
                                GGS_typeVariablesMap  &) ;

  protected : void pr_read_access_expression_parser_1658_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_read_access_expression_parser_1674_4_ (galgas_scanner &,
                                GGS_lstring  &,
                                GGS_typeCplusPlusName  &,
                                GGS_AC_galgasType  &,
                                GGS_typeVariablesMap  &) ;

  protected : void pr_read_access_expression_parser_1674_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_output_expression_list_expression_parser_1696_4_ (galgas_scanner &,
                                GGS_typeExpressionList  &,
                                const GGS_typeListeAttributsSemantiques  ,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_M_optionComponents  ,
                                const GGS_EXsemanticContext ,
                                GGS_typeVariablesMap  &) ;

  protected : virtual sint16 select_repeat_expression_parser_14 (galgas_scanner &) = 0 ;

  protected : void pr_output_expression_list_expression_parser_1696_4_parse (galgas_scanner & _inLexique) ;

  protected : void pr_parse_effective_input_parameters_list_expression_parser_1743_4_ (galgas_scanner &,
                                GGS_typeVariablesMap  &,
                                GGS_typeListeAttributsSemantiques  ,
                                GGS_location  ,
                                GGS_localConstantBuildStyleEnum ,
                                GGS_bool &) ;

  protected : virtual sint16 select_repeat_expression_parser_15 (galgas_scanner &) = 0 ;

  protected : virtual sint16 select_expression_parser_16 (galgas_scanner &) = 0 ;

  protected : virtual sint16 select_expression_parser_17 (galgas_scanner &) = 0 ;

  protected : void pr_parse_effective_input_parameters_list_expression_parser_1743_4_parse (galgas_scanner & _inLexique) ;

} ;

//---------------------------------------------------------------------------*

#endif
