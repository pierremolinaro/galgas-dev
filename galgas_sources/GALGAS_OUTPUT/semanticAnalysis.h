//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'semanticAnalysis.h'                          *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    november 10th, 2010, at 17h16'17"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semanticAnalysis_DEFINED
#define semanticAnalysis_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "semanticInstructionsAnalysis.h"
#include "templateAnalysis.h"
#include "templateTypesForAST.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_attributeIndexMap ;
class GGS_constantIndexMap ;
class GGS_insertMethodMap ;
class GGS_searchMethodMap ;
class GGS_mapAutomatonStateMap ;
class GGS_mapAutomatonActionMap ;
class GGS_mapStateTransitionSortedList ;
class GGS_mapStateSortedList ;
class GGS_branchBehaviourSortedListForMapOverride ;
class GGS_mapOverrideList ;
class GGS_declaredMethodMap ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'checkMethodSignatures'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkMethodSignatures (C_CompilerEx &,
                                const GGS_formalParameterListForGeneration  ,
                                const GGS_location  ,
                                const GGS_formalParameterSignature  ,
                                const GGS_location   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'checkReaderSignatures'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkReaderSignatures (C_CompilerEx &,
                                const GGS_formalInputParameterListForGeneration  ,
                                const GGS_unifiedTypeMapProxy  ,
                                const GGS_location  ,
                                const GGS_unifiedTypeMapProxyList  ,
                                const GGS_unifiedTypeMapProxy  ,
                                const GGS_location   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@semanticDeclarationAST.performSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__semanticDeclarationAST__performSemanticAnalysis)  (C_CompilerEx & inLexique,
                                const cPtr_semanticDeclarationAST * inObjectPtr,
                                const GGS_semanticContext  var_cas_inSemanticContext,
                                const GGS_predefinedTypes  var_cas_inPredefinedTypes,
                                GGS_semanticDeclarationSortedListForGeneration  & var_cas_ioSemanticDeclarationListForGeneration
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclarationAST__performSemanticAnalysis (typeCategoryMethod__semanticDeclarationAST__performSemanticAnalysis inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclarationAST__performSemanticAnalysis
findCategoryMethod__semanticDeclarationAST__performSemanticAnalysis (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@attributeIndexMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_attributeIndexMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_attributeIndexMap ;

//---------------------------------------------------------------------------*

class GGS_attributeIndexMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_attributeIndexMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_attributeIndexMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_attributeIndexMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_attributeIndexMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_attributeIndexMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_attributeIndexMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_attributeIndexMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_attributeIndexMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_unifiedTypeMapProxy & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxy &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_unifiedTypeMapProxy   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_unifiedTypeMapProxy & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_unifiedTypeMapProxy & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_attributeIndexMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_attributeIndexMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_attributeIndexMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_attributeIndexMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_attributeIndexMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapProxy   & _mAttributeTypeIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@constantIndexMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_constantIndexMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_constantIndexMap ;

//---------------------------------------------------------------------------*

class GGS_constantIndexMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_constantIndexMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_constantIndexMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_constantIndexMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_constantIndexMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_constantIndexMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_constantIndexMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_constantIndexMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_constantIndexMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_uint & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_constantIndexMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_constantIndexMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_constantIndexMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_constantIndexMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_constantIndexMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@insertMethodMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_insertMethodMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_insertMethodMap ;

//---------------------------------------------------------------------------*

class GGS_insertMethodMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_insertMethodMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_insertMethodMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_insertMethodMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_insertMethodMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_insertMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_insertMethodMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_insertMethodMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_insertMethodMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey

                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_insertMethodMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_insertMethodMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_insertMethodMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_insertMethodMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_insertMethodMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@searchMethodMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_searchMethodMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_searchMethodMap ;

//---------------------------------------------------------------------------*

class GGS_searchMethodMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_searchMethodMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_searchMethodMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_searchMethodMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_searchMethodMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_searchMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_searchMethodMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_searchMethodMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_searchMethodMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey

                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_searchMethodMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_searchMethodMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_searchMethodMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_searchMethodMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_searchMethodMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@mapAutomatonStateMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapAutomatonStateMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapAutomatonStateMap ;

//---------------------------------------------------------------------------*

class GGS_mapAutomatonStateMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_mapAutomatonStateMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_mapAutomatonStateMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_mapAutomatonStateMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapAutomatonStateMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_mapAutomatonStateMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapAutomatonStateMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_mapAutomatonStateMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_mapAutomatonStateMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_uint & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_mapAutomatonStateMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_mapAutomatonStateMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapAutomatonStateMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_mapAutomatonStateMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_mapAutomatonStateMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mStateIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@mapAutomatonActionMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapAutomatonActionMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapAutomatonActionMap ;

//---------------------------------------------------------------------------*

class GGS_mapAutomatonActionMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_mapAutomatonActionMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_mapAutomatonActionMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_mapAutomatonActionMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapAutomatonActionMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_mapAutomatonActionMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapAutomatonActionMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_mapAutomatonActionMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_mapAutomatonActionMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_uint & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_mapAutomatonActionMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_mapAutomatonActionMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapAutomatonActionMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_mapAutomatonActionMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_mapAutomatonActionMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mActionIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               sorted list '@mapStateTransitionSortedList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapStateTransitionSortedList ;
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapStateTransitionSortedList ;

//---------------------------------------------------------------------------*


class GGS_mapStateTransitionSortedList : public AC_GGS_sortedlist {
  public : typedef elementOf_GGS_mapStateTransitionSortedList cElement ;
//--- Default Constructor
  public : GGS_mapStateTransitionSortedList (void) ;
//--- Copy Constructor
  public : GGS_mapStateTransitionSortedList (const GGS_mapStateTransitionSortedList & inSource) ;
//--- Comparison Operators
  public : GGS_bool operator_isEqual (const GGS_mapStateTransitionSortedList & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_mapStateTransitionSortedList & inOperand) const ;
//--- Constructor 'emptySortedList'
  public : static GGS_mapStateTransitionSortedList constructor_emptySortedList (void) ;
  public : static GGS_mapStateTransitionSortedList constructor_sortedListWithValue (const GGS_uint & argument_0,
                           const GGS_string& argument_1,
                           const GGS_uint & argument_2,
                           const GGS_string& argument_3,
                           const GGS_mapAutomatonMessageKind& argument_4,
                           const GGS_string& argument_5) ;
//--- Get smallest object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalSmallestObject () ;
  }
//--- Get greatest object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalGreatestObject () ;
  }
//--- Operators () used for method call
  public : const GGS_mapStateTransitionSortedList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'smallest'
  public : void method_smallest (C_CompilerEx & inLexique,
                              GGS_uint & _out_0,
                              GGS_string& _out_1,
                              GGS_uint & _out_2,
                              GGS_string& _out_3,
                              GGS_mapAutomatonMessageKind& _out_4,
                              GGS_string& _out_5
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'greatest'
  public : void method_greatest (C_CompilerEx & inLexique,
                             GGS_uint & _out_0,
                             GGS_string& _out_1,
                             GGS_uint & _out_2,
                             GGS_string& _out_3,
                             GGS_mapAutomatonMessageKind& _out_4,
                             GGS_string& _out_5
                             COMMA_LOCATION_ARGS) const ;
//--- Method 'popGreatest'
  public : void modifier_popGreatest (C_CompilerEx & inLexique,
                                GGS_uint & _out_0,
                                GGS_string& _out_1,
                                GGS_uint & _out_2,
                                GGS_string& _out_3,
                                GGS_mapAutomatonMessageKind& _out_4,
                                GGS_string& _out_5
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popSmallest'
  public : void modifier_popSmallest (C_CompilerEx & inLexique,
                                 GGS_uint & _out_0,
                                 GGS_string& _out_1,
                                 GGS_uint & _out_2,
                                 GGS_string& _out_3,
                                 GGS_mapAutomatonMessageKind& _out_4,
                                 GGS_string& _out_5
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_mapStateTransitionSortedList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_uint & argument_0,
                                const GGS_string& argument_1,
                                const GGS_uint & argument_2,
                                const GGS_string& argument_3,
                                const GGS_mapAutomatonMessageKind& argument_4,
                                const GGS_string& argument_5) ;
//--- Handling '.' GALGAS operator
  public : GGS_mapStateTransitionSortedList operator_concat (const GGS_mapStateTransitionSortedList & inOperand) const ;

//--- Internal Methods
  protected : void internalAppendValues (const GGS_uint & argument_0,
                                const GGS_string& argument_1,
                                const GGS_uint & argument_2,
                                const GGS_string& argument_3,
                                const GGS_mapAutomatonMessageKind& argument_4,
                                const GGS_string& argument_5) ;
//--- List Insulation
  protected : void insulateList (void) ;
//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapStateTransitionSortedList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- Sorted List Enumerator
  public : class cEnumerator : public cAbstractSortedListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_mapStateTransitionSortedList & inList,
                                 const bool inAscending) :
    cAbstractSortedListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint  & _mActionIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mActionName (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint  & _mTargetStateIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mTargetStateName (LOCATION_ARGS) const ;
    public : /* const */ GGS_mapAutomatonMessageKind & _mTransitionMessageKind (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mTransitionMessage (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    sorted list '@mapStateSortedList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapStateSortedList ;
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapStateSortedList ;

//---------------------------------------------------------------------------*


class GGS_mapStateSortedList : public AC_GGS_sortedlist {
  public : typedef elementOf_GGS_mapStateSortedList cElement ;
//--- Default Constructor
  public : GGS_mapStateSortedList (void) ;
//--- Copy Constructor
  public : GGS_mapStateSortedList (const GGS_mapStateSortedList & inSource) ;
//--- Comparison Operators
  public : GGS_bool operator_isEqual (const GGS_mapStateSortedList & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_mapStateSortedList & inOperand) const ;
//--- Constructor 'emptySortedList'
  public : static GGS_mapStateSortedList constructor_emptySortedList (void) ;
  public : static GGS_mapStateSortedList constructor_sortedListWithValue (const GGS_uint & argument_0,
                           const GGS_string& argument_1,
                           const GGS_mapAutomatonMessageKind& argument_2,
                           const GGS_string& argument_3,
                           const GGS_mapStateTransitionSortedList & argument_4) ;
//--- Get smallest object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalSmallestObject () ;
  }
//--- Get greatest object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalGreatestObject () ;
  }
//--- Operators () used for method call
  public : const GGS_mapStateSortedList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'smallest'
  public : void method_smallest (C_CompilerEx & inLexique,
                              GGS_uint & _out_0,
                              GGS_string& _out_1,
                              GGS_mapAutomatonMessageKind& _out_2,
                              GGS_string& _out_3,
                              GGS_mapStateTransitionSortedList & _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'greatest'
  public : void method_greatest (C_CompilerEx & inLexique,
                             GGS_uint & _out_0,
                             GGS_string& _out_1,
                             GGS_mapAutomatonMessageKind& _out_2,
                             GGS_string& _out_3,
                             GGS_mapStateTransitionSortedList & _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Method 'popGreatest'
  public : void modifier_popGreatest (C_CompilerEx & inLexique,
                                GGS_uint & _out_0,
                                GGS_string& _out_1,
                                GGS_mapAutomatonMessageKind& _out_2,
                                GGS_string& _out_3,
                                GGS_mapStateTransitionSortedList & _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popSmallest'
  public : void modifier_popSmallest (C_CompilerEx & inLexique,
                                 GGS_uint & _out_0,
                                 GGS_string& _out_1,
                                 GGS_mapAutomatonMessageKind& _out_2,
                                 GGS_string& _out_3,
                                 GGS_mapStateTransitionSortedList & _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_mapStateSortedList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_uint & argument_0,
                                const GGS_string& argument_1,
                                const GGS_mapAutomatonMessageKind& argument_2,
                                const GGS_string& argument_3,
                                const GGS_mapStateTransitionSortedList & argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_mapStateSortedList operator_concat (const GGS_mapStateSortedList & inOperand) const ;

//--- Internal Methods
  protected : void internalAppendValues (const GGS_uint & argument_0,
                                const GGS_string& argument_1,
                                const GGS_mapAutomatonMessageKind& argument_2,
                                const GGS_string& argument_3,
                                const GGS_mapStateTransitionSortedList & argument_4) ;
//--- List Insulation
  protected : void insulateList (void) ;
//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapStateSortedList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- Sorted List Enumerator
  public : class cEnumerator : public cAbstractSortedListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_mapStateSortedList & inList,
                                 const bool inAscending) :
    cAbstractSortedListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint  & _mStateIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mStateName (LOCATION_ARGS) const ;
    public : /* const */ GGS_mapAutomatonMessageKind & _mStateMessageKind (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mStateMessage (LOCATION_ARGS) const ;
    public : /* const */ GGS_mapStateTransitionSortedList  & _mTransitionList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          sorted list '@branchBehaviourSortedListForMapOverride'           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_branchBehaviourSortedListForMapOverride ;
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_branchBehaviourSortedListForMapOverride ;

//---------------------------------------------------------------------------*


class GGS_branchBehaviourSortedListForMapOverride : public AC_GGS_sortedlist {
  public : typedef elementOf_GGS_branchBehaviourSortedListForMapOverride cElement ;
//--- Default Constructor
  public : GGS_branchBehaviourSortedListForMapOverride (void) ;
//--- Copy Constructor
  public : GGS_branchBehaviourSortedListForMapOverride (const GGS_branchBehaviourSortedListForMapOverride & inSource) ;
//--- Comparison Operators
  public : GGS_bool operator_isEqual (const GGS_branchBehaviourSortedListForMapOverride & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_branchBehaviourSortedListForMapOverride & inOperand) const ;
//--- Constructor 'emptySortedList'
  public : static GGS_branchBehaviourSortedListForMapOverride constructor_emptySortedList (void) ;
  public : static GGS_branchBehaviourSortedListForMapOverride constructor_sortedListWithValue (const GGS_uint & argument_0,
                           const GGS_string& argument_1,
                           const GGS_uint & argument_2,
                           const GGS_string& argument_3,
                           const GGS_uint & argument_4,
                           const GGS_string& argument_5,
                           const GGS_mapAutomatonMessageKind& argument_6,
                           const GGS_string& argument_7) ;
//--- Get smallest object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalSmallestObject () ;
  }
//--- Get greatest object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalGreatestObject () ;
  }
//--- Operators () used for method call
  public : const GGS_branchBehaviourSortedListForMapOverride * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'smallest'
  public : void method_smallest (C_CompilerEx & inLexique,
                              GGS_uint & _out_0,
                              GGS_string& _out_1,
                              GGS_uint & _out_2,
                              GGS_string& _out_3,
                              GGS_uint & _out_4,
                              GGS_string& _out_5,
                              GGS_mapAutomatonMessageKind& _out_6,
                              GGS_string& _out_7
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'greatest'
  public : void method_greatest (C_CompilerEx & inLexique,
                             GGS_uint & _out_0,
                             GGS_string& _out_1,
                             GGS_uint & _out_2,
                             GGS_string& _out_3,
                             GGS_uint & _out_4,
                             GGS_string& _out_5,
                             GGS_mapAutomatonMessageKind& _out_6,
                             GGS_string& _out_7
                             COMMA_LOCATION_ARGS) const ;
//--- Method 'popGreatest'
  public : void modifier_popGreatest (C_CompilerEx & inLexique,
                                GGS_uint & _out_0,
                                GGS_string& _out_1,
                                GGS_uint & _out_2,
                                GGS_string& _out_3,
                                GGS_uint & _out_4,
                                GGS_string& _out_5,
                                GGS_mapAutomatonMessageKind& _out_6,
                                GGS_string& _out_7
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popSmallest'
  public : void modifier_popSmallest (C_CompilerEx & inLexique,
                                 GGS_uint & _out_0,
                                 GGS_string& _out_1,
                                 GGS_uint & _out_2,
                                 GGS_string& _out_3,
                                 GGS_uint & _out_4,
                                 GGS_string& _out_5,
                                 GGS_mapAutomatonMessageKind& _out_6,
                                 GGS_string& _out_7
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_branchBehaviourSortedListForMapOverride inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_uint & argument_0,
                                const GGS_string& argument_1,
                                const GGS_uint & argument_2,
                                const GGS_string& argument_3,
                                const GGS_uint & argument_4,
                                const GGS_string& argument_5,
                                const GGS_mapAutomatonMessageKind& argument_6,
                                const GGS_string& argument_7) ;
//--- Handling '.' GALGAS operator
  public : GGS_branchBehaviourSortedListForMapOverride operator_concat (const GGS_branchBehaviourSortedListForMapOverride & inOperand) const ;

//--- Internal Methods
  protected : void internalAppendValues (const GGS_uint & argument_0,
                                const GGS_string& argument_1,
                                const GGS_uint & argument_2,
                                const GGS_string& argument_3,
                                const GGS_uint & argument_4,
                                const GGS_string& argument_5,
                                const GGS_mapAutomatonMessageKind& argument_6,
                                const GGS_string& argument_7) ;
//--- List Insulation
  protected : void insulateList (void) ;
//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_branchBehaviourSortedListForMapOverride castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- Sorted List Enumerator
  public : class cEnumerator : public cAbstractSortedListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_branchBehaviourSortedListForMapOverride & inList,
                                 const bool inAscending) :
    cAbstractSortedListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint  & _mStartStateIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mStartStateName (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint  & _mCurrentStateIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mCurrentStateName (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint  & _mFinalStateIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mFinalStateName (LOCATION_ARGS) const ;
    public : /* const */ GGS_mapAutomatonMessageKind & _mStateMessageKind (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mBehaviourMessage (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@mapOverrideList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapOverrideList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapOverrideList ;

//---------------------------------------------------------------------------*

class GGS_mapOverrideList : public AC_GGS_list {
  public : typedef elementOf_GGS_mapOverrideList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_mapOverrideList constructor_emptyList (void) ;
  public : static GGS_mapOverrideList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_1,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_mapOverrideList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_mapOverrideList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_mapOverrideList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_mapOverrideList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_lstring & _out_0,
                              GGS_branchBehaviourSortedListForMapOverride & _out_1,
                              GGS_branchBehaviourSortedListForMapOverride & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_lstring & _out_0,
                             GGS_branchBehaviourSortedListForMapOverride & _out_1,
                             GGS_branchBehaviourSortedListForMapOverride & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_lstring & _out_0,
                                GGS_branchBehaviourSortedListForMapOverride & _out_1,
                                GGS_branchBehaviourSortedListForMapOverride & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_branchBehaviourSortedListForMapOverride & _out_1,
                                 GGS_branchBehaviourSortedListForMapOverride & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_mapOverrideList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_1,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_mapOverrideList operator_concat (const GGS_mapOverrideList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_1,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_1,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_1,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mOverrideNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_branchBehaviourSortedListForMapOverride 
  reader_mBranchBehaviourSortedListForMapOverrideAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_branchBehaviourSortedListForMapOverride 
  reader_mBranchCombinationSortedListForMapOverrideAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMOverrideNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMBranchBehaviourSortedListForMapOverrideAtIndex (C_CompilerEx & inLexique,
                              const GGS_branchBehaviourSortedListForMapOverride  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMBranchCombinationSortedListForMapOverrideAtIndex (C_CompilerEx & inLexique,
                              const GGS_branchBehaviourSortedListForMapOverride  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapOverrideList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_mapOverrideList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mOverrideName (LOCATION_ARGS) const ;
    public : /* const */ GGS_branchBehaviourSortedListForMapOverride   & _mBranchBehaviourSortedListForMapOverride (LOCATION_ARGS) const ;
    public : /* const */ GGS_branchBehaviourSortedListForMapOverride   & _mBranchCombinationSortedListForMapOverride (LOCATION_ARGS) const ;
  } ;

} ;

void routine_check_K_escapeCharacters (C_CompilerEx &,
                                GGS_lstring   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@declaredMethodMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_declaredMethodMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_declaredMethodMap ;

//---------------------------------------------------------------------------*

class GGS_declaredMethodMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_declaredMethodMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_declaredMethodMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_declaredMethodMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_declaredMethodMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_declaredMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_declaredMethodMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_declaredMethodMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_declaredMethodMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey

                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_declaredMethodMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_declaredMethodMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_declaredMethodMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_declaredMethodMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_declaredMethodMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'buildLocalVariableMapAndSignature'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildLocalVariableMapAndSignature (C_CompilerEx &,
                                const GGS_semanticContext ,
                                const GGS_formalParameterListAST  ,
                                GGS_variableMap  &,
                                GGS_formalParameterListForGeneration  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'analyzeRoutineBody'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeRoutineBody (C_CompilerEx &,
                                const GGS_analysisContext ,
                                const GGS_formalParameterListAST  ,
                                const GGS_localConstantList  ,
                                const GGS_typedAttributeList  ,
                                const GGS_string ,
                                const GGS_semanticInstructionListAST  ,
                                const GGS_location  ,
                                GGS_semanticInstructionListForGeneration  &,
                                GGS_formalParameterListForGeneration  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'analyzeFunctionBody'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeFunctionBody (C_CompilerEx &,
                                const GGS_analysisContext ,
                                const GGS_formalInputParameterListAST  ,
                                const GGS_typedAttributeList  ,
                                const GGS_string ,
                                const GGS_semanticInstructionListAST  ,
                                const GGS_lstring  ,
                                const GGS_lstring  ,
                                const GGS_location  ,
                                GGS_formalInputParameterListForGeneration  &,
                                GGS_unifiedTypeMapProxy  &,
                                GGS_string &,
                                GGS_semanticInstructionListForGeneration  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Function 'buildPredefinedTypes'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_buildPredefinedTypes ;

//---------------------------------------------------------------------------*

GGS_predefinedTypes function_buildPredefinedTypes (C_CompilerEx &,
                                const GGS_semanticContext  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'performSemanticAnalysis'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_performSemanticAnalysis (C_CompilerEx &,
                                const GGS_semanticDeclarationListAST  ,
                                const GGS_semanticContext ,
                                GGS_semanticDeclarationSortedListForGeneration  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@attributeIndexMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_attributeIndexMap {
  public : GGS_unifiedTypeMapProxy  mAttributeTypeIndex ;

  public : e_attributeIndexMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_attributeIndexMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_attributeIndexMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_attributeIndexMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_attributeIndexMap * nextObject (void) const { return (elementOf_GGS_attributeIndexMap *) mNextItem ; }
  public : inline elementOf_GGS_attributeIndexMap * infObject (void) const { return (elementOf_GGS_attributeIndexMap *) mInfPtr ; }
  public : inline elementOf_GGS_attributeIndexMap * supObject (void) const { return (elementOf_GGS_attributeIndexMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_attributeIndexMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@constantIndexMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_constantIndexMap {
  public : GGS_uint  mIndex ;

  public : e_constantIndexMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_constantIndexMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_constantIndexMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_constantIndexMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_constantIndexMap * nextObject (void) const { return (elementOf_GGS_constantIndexMap *) mNextItem ; }
  public : inline elementOf_GGS_constantIndexMap * infObject (void) const { return (elementOf_GGS_constantIndexMap *) mInfPtr ; }
  public : inline elementOf_GGS_constantIndexMap * supObject (void) const { return (elementOf_GGS_constantIndexMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_constantIndexMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@insertMethodMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_insertMethodMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_insertMethodMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_insertMethodMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_insertMethodMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_insertMethodMap * nextObject (void) const { return (elementOf_GGS_insertMethodMap *) mNextItem ; }
  public : inline elementOf_GGS_insertMethodMap * infObject (void) const { return (elementOf_GGS_insertMethodMap *) mInfPtr ; }
  public : inline elementOf_GGS_insertMethodMap * supObject (void) const { return (elementOf_GGS_insertMethodMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_insertMethodMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@searchMethodMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_searchMethodMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_searchMethodMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_searchMethodMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_searchMethodMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_searchMethodMap * nextObject (void) const { return (elementOf_GGS_searchMethodMap *) mNextItem ; }
  public : inline elementOf_GGS_searchMethodMap * infObject (void) const { return (elementOf_GGS_searchMethodMap *) mInfPtr ; }
  public : inline elementOf_GGS_searchMethodMap * supObject (void) const { return (elementOf_GGS_searchMethodMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_searchMethodMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@mapAutomatonStateMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapAutomatonStateMap {
  public : GGS_uint  mStateIndex ;

  public : e_mapAutomatonStateMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapAutomatonStateMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapAutomatonStateMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_mapAutomatonStateMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_mapAutomatonStateMap * nextObject (void) const { return (elementOf_GGS_mapAutomatonStateMap *) mNextItem ; }
  public : inline elementOf_GGS_mapAutomatonStateMap * infObject (void) const { return (elementOf_GGS_mapAutomatonStateMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapAutomatonStateMap * supObject (void) const { return (elementOf_GGS_mapAutomatonStateMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_mapAutomatonStateMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@mapAutomatonActionMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapAutomatonActionMap {
  public : GGS_uint  mActionIndex ;

  public : e_mapAutomatonActionMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapAutomatonActionMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapAutomatonActionMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_mapAutomatonActionMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_mapAutomatonActionMap * nextObject (void) const { return (elementOf_GGS_mapAutomatonActionMap *) mNextItem ; }
  public : inline elementOf_GGS_mapAutomatonActionMap * infObject (void) const { return (elementOf_GGS_mapAutomatonActionMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapAutomatonActionMap * supObject (void) const { return (elementOf_GGS_mapAutomatonActionMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_mapAutomatonActionMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Element of sorted list '@mapStateTransitionSortedList'           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapStateTransitionSortedList : public AC_GGS_sortedlist::cSortedListElement {
//--- Attributes
  public : GGS_uint  mActionIndex ;
  public : GGS_string mActionName ;
  public : GGS_uint  mTargetStateIndex ;
  public : GGS_string mTargetStateName ;
  public : GGS_mapAutomatonMessageKind mTransitionMessageKind ;
  public : GGS_string mTransitionMessage ;
//--- Constructor
  public : elementOf_GGS_mapStateTransitionSortedList (const GGS_uint & ,
                                const GGS_string& ,
                                const GGS_uint & ,
                                const GGS_string& ,
                                const GGS_mapAutomatonMessageKind& ,
                                const GGS_string& ) ;

//--- Access to next
  public : inline elementOf_GGS_mapStateTransitionSortedList * nextObject (void) const { return (elementOf_GGS_mapStateTransitionSortedList *) internalNextItem () ; }
//--- Access to previous
  public : inline elementOf_GGS_mapStateTransitionSortedList * previousObject (void) const { return (elementOf_GGS_mapStateTransitionSortedList *) internalPreviousItem () ; }
//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cSortedListElement * inOperand) const ;
//--- Method used for sorting elements
  protected : virtual PMSInt32 compareForSorting (const cSortedListElement * inOperand) const ;
//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;
  friend class GGS_mapStateTransitionSortedList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of sorted list '@mapStateSortedList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapStateSortedList : public AC_GGS_sortedlist::cSortedListElement {
//--- Attributes
  public : GGS_uint  mStateIndex ;
  public : GGS_string mStateName ;
  public : GGS_mapAutomatonMessageKind mStateMessageKind ;
  public : GGS_string mStateMessage ;
  public : GGS_mapStateTransitionSortedList  mTransitionList ;
//--- Constructor
  public : elementOf_GGS_mapStateSortedList (const GGS_uint & ,
                                const GGS_string& ,
                                const GGS_mapAutomatonMessageKind& ,
                                const GGS_string& ,
                                const GGS_mapStateTransitionSortedList & ) ;

//--- Access to next
  public : inline elementOf_GGS_mapStateSortedList * nextObject (void) const { return (elementOf_GGS_mapStateSortedList *) internalNextItem () ; }
//--- Access to previous
  public : inline elementOf_GGS_mapStateSortedList * previousObject (void) const { return (elementOf_GGS_mapStateSortedList *) internalPreviousItem () ; }
//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cSortedListElement * inOperand) const ;
//--- Method used for sorting elements
  protected : virtual PMSInt32 compareForSorting (const cSortedListElement * inOperand) const ;
//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;
  friend class GGS_mapStateSortedList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Element of sorted list '@branchBehaviourSortedListForMapOverride'      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_branchBehaviourSortedListForMapOverride : public AC_GGS_sortedlist::cSortedListElement {
//--- Attributes
  public : GGS_uint  mStartStateIndex ;
  public : GGS_string mStartStateName ;
  public : GGS_uint  mCurrentStateIndex ;
  public : GGS_string mCurrentStateName ;
  public : GGS_uint  mFinalStateIndex ;
  public : GGS_string mFinalStateName ;
  public : GGS_mapAutomatonMessageKind mStateMessageKind ;
  public : GGS_string mBehaviourMessage ;
//--- Constructor
  public : elementOf_GGS_branchBehaviourSortedListForMapOverride (const GGS_uint & ,
                                const GGS_string& ,
                                const GGS_uint & ,
                                const GGS_string& ,
                                const GGS_uint & ,
                                const GGS_string& ,
                                const GGS_mapAutomatonMessageKind& ,
                                const GGS_string& ) ;

//--- Access to next
  public : inline elementOf_GGS_branchBehaviourSortedListForMapOverride * nextObject (void) const { return (elementOf_GGS_branchBehaviourSortedListForMapOverride *) internalNextItem () ; }
//--- Access to previous
  public : inline elementOf_GGS_branchBehaviourSortedListForMapOverride * previousObject (void) const { return (elementOf_GGS_branchBehaviourSortedListForMapOverride *) internalPreviousItem () ; }
//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cSortedListElement * inOperand) const ;
//--- Method used for sorting elements
  protected : virtual PMSInt32 compareForSorting (const cSortedListElement * inOperand) const ;
//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;
  friend class GGS_branchBehaviourSortedListForMapOverride ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@mapOverrideList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapOverrideList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mOverrideName ;
  public : GGS_branchBehaviourSortedListForMapOverride  mBranchBehaviourSortedListForMapOverride ;
  public : GGS_branchBehaviourSortedListForMapOverride  mBranchCombinationSortedListForMapOverride ;
//--- Constructor
  public : elementOf_GGS_mapOverrideList (const GGS_lstring & ,
                                const GGS_branchBehaviourSortedListForMapOverride & ,
                                const GGS_branchBehaviourSortedListForMapOverride & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_mapOverrideList * nextObject (void) const { return (elementOf_GGS_mapOverrideList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_mapOverrideList * previousObject (void) const { return (elementOf_GGS_mapOverrideList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_mapOverrideList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@declaredMethodMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_declaredMethodMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_declaredMethodMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_declaredMethodMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_declaredMethodMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_declaredMethodMap * nextObject (void) const { return (elementOf_GGS_declaredMethodMap *) mNextItem ; }
  public : inline elementOf_GGS_declaredMethodMap * infObject (void) const { return (elementOf_GGS_declaredMethodMap *) mInfPtr ; }
  public : inline elementOf_GGS_declaredMethodMap * supObject (void) const { return (elementOf_GGS_declaredMethodMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_declaredMethodMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#endif
