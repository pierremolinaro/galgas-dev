//---------------------------------------------------------------------------*
//                                                                           *
//                 File 'include_typeInstructionLexicale.h'                  *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 20th, 2007, at 12h37'18"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_typeInstructionLexicale'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeInstructionLexicale : public C_GGS_Object {
//--- START OF USER ZONE 2

  public : virtual bool
  instruction__uses_loop_variable (void) const = 0 ;

  public : virtual void
  generate_scanner_instruction (const C_String & inLexiqueName,
                                const bool inGenerateEnterToken,
                                AC_OutputStream & inCppFile) const = 0 ;

  public : virtual void
  generateDecoderFromInstruction (C_Lexique & inLexique,
                                  cDecoderTargetState & ioCurrentState,
                                  cDecoderController & ioDecoderController) ;

//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_typeInstructionLexicale (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_typeInstructionLexicale (void) {}
  #endif

//--- Attributes
//--- Method for 'description' reader
  public : virtual void appendForDescription (C_Compiler & _inLexique,
                                              C_String & ioString,
                                              const sint32 inIndentation
                                              COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (C_Compiler & inLexique,
                   const C_GGS_Object * inOperand
                   COMMA_LOCATION_ARGS) const = 0 ;
} ;

//---------------------------------------------------------------------------*

