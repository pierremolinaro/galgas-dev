//---------------------------------------------------------------------------*
//                                                                           *
//                  File 'semanticExpressionAnalysis.cpp'                    *
//             Generated by version version GALGAS_BETA_VERSION              *
//                       june 3rd, 2011, at 17h46'59"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "semanticExpressionAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "optionLL1grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticExpressionAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*

cMapElement_variableMap::cMapElement_variableMap (const GALGAS_lstring & inKey,
                                                  const GALGAS_unifiedTypeMapProxy & in_mTypeProxy,
                                                  const GALGAS_string & in_mCppName,
                                                  const GALGAS_string & in_mNameForCheckingFormalParameterUsing
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mTypeProxy (in_mTypeProxy),
mAttribute_mCppName (in_mCppName),
mAttribute_mNameForCheckingFormalParameterUsing (in_mNameForCheckingFormalParameterUsing) {
}

//---------------------------------------------------------------------------*

bool cMapElement_variableMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mTypeProxy.isValid () && mAttribute_mCppName.isValid () && mAttribute_mNameForCheckingFormalParameterUsing.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_variableMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_variableMap (mAttribute_lkey, mAttribute_mTypeProxy, mAttribute_mCppName, mAttribute_mNameForCheckingFormalParameterUsing COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_variableMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTypeProxy" ":" ;
  mAttribute_mTypeProxy.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCppName" ":" ;
  mAttribute_mCppName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mNameForCheckingFormalParameterUsing" ":" ;
  mAttribute_mNameForCheckingFormalParameterUsing.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_variableMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_variableMap * operand = (cMapElement_variableMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mTypeProxy.objectCompare (operand->mAttribute_mTypeProxy) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCppName.objectCompare (operand->mAttribute_mCppName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mNameForCheckingFormalParameterUsing.objectCompare (operand->mAttribute_mNameForCheckingFormalParameterUsing) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_variableMap::GALGAS_variableMap (void) :
AC_GALGAS_uniqueMap () {
}

//---------------------------------------------------------------------------*

GALGAS_variableMap::GALGAS_variableMap (const GALGAS_variableMap & inSource) :
AC_GALGAS_uniqueMap (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_variableMap & GALGAS_variableMap::operator = (const GALGAS_variableMap & inSource) {
  * ((AC_GALGAS_uniqueMap *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_variableMap GALGAS_variableMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_variableMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

/*GALGAS_variableMap GALGAS_variableMap::constructor_mapWithMapToOverride (const GALGAS_variableMap & inMapToOverride
                                                                           COMMA_LOCATION_ARGS) {
  GALGAS_variableMap result ;
  result.makeNewEmptyMap (inMapToOverride COMMA_THERE) ;
  return result ;
}*/

//---------------------------------------------------------------------------*

/*GALGAS_variableMap GALGAS_variableMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_variableMap result ;
  overridenMap (result) ;
  return result ;
}*/

//---------------------------------------------------------------------------*
//  Map automaton states                                                     *
//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const PMUInt32 kMapStateCount_variableMap = 22 ;
#endif
static const PMUInt32 kMapState_variableMap_constantInputFormalArgument = 12 ;
static const PMUInt32 kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused = 14 ;
static const PMUInt32 kMapState_variableMap_currentInstanceAttribute = 19 ;
static const PMUInt32 kMapState_variableMap_currentInstanceAttributeInModifier = 20 ;
static const PMUInt32 kMapState_variableMap_currentInstanceDroppedAttributeInModifier = 21 ;
static const PMUInt32 kMapState_variableMap_definedLocalVariable = 3 ;
static const PMUInt32 kMapState_variableMap_definedOutputFormalArgument = 7 ;
static const PMUInt32 kMapState_variableMap_droppedInputFormalArgument = 17 ;
static const PMUInt32 kMapState_variableMap_droppedInputOutputFormalArgument = 10 ;
static const PMUInt32 kMapState_variableMap_droppedLocalVariable = 5 ;
static const PMUInt32 kMapState_variableMap_inputFormalArgumentDeclaredAsUnused = 18 ;
static const PMUInt32 kMapState_variableMap_inputFormalParameter = 15 ;
static const PMUInt32 kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused = 11 ;
static const PMUInt32 kMapState_variableMap_localConstant = 1 ;
static const PMUInt32 kMapState_variableMap_undefinedLocalVariable = 2 ;
static const PMUInt32 kMapState_variableMap_undefinedOutputFormalArgument = 6 ;
static const PMUInt32 kMapState_variableMap_unusedInputOutputFormalArgument = 8 ;
static const PMUInt32 kMapState_variableMap_usedConstantInputFormalArgument = 13 ;
static const PMUInt32 kMapState_variableMap_usedInputFormalArgument = 16 ;
static const PMUInt32 kMapState_variableMap_usedInputOutputFormalArgument = 9 ;
static const PMUInt32 kMapState_variableMap_usedLocalConstant = 0 ;
static const PMUInt32 kMapState_variableMap_usedLocalVariable = 4 ;

//---------------------------------------------------------------------------*
//  Map automaton state names                                                *
//---------------------------------------------------------------------------*

static const char * kMapStateNames_variableMap [22] = {
  "constantInputFormalArgument",
  "constantInputFormalArgumentDeclaredAsUnused",
  "currentInstanceAttribute",
  "currentInstanceAttributeInModifier",
  "currentInstanceDroppedAttributeInModifier",
  "definedLocalVariable",
  "definedOutputFormalArgument",
  "droppedInputFormalArgument",
  "droppedInputOutputFormalArgument",
  "droppedLocalVariable",
  "inputFormalArgumentDeclaredAsUnused",
  "inputFormalParameter",
  "inputOutputFormalArgumentDeclaredAsUnused",
  "localConstant",
  "undefinedLocalVariable",
  "undefinedOutputFormalArgument",
  "unusedInputOutputFormalArgument",
  "usedConstantInputFormalArgument",
  "usedInputFormalArgument",
  "usedInputOutputFormalArgument",
  "usedLocalConstant",
  "usedLocalVariable"
} ;

//---------------------------------------------------------------------------*
//  Map automaton actions                                                    *
//---------------------------------------------------------------------------*

static const PMUInt32 kMapActionCount_variableMap = 4 ;
static const PMUInt32 kMapAction_variableMap_dropAccess = 3 ;
static const PMUInt32 kMapAction_variableMap_readAccess = 0 ;
static const PMUInt32 kMapAction_variableMap_readWriteAccess = 2 ;
static const PMUInt32 kMapAction_variableMap_writeAccess = 1 ;

//---------------------------------------------------------------------------*
//  Map automaton action names                                               *
//---------------------------------------------------------------------------*

static const char * kMapActionNames_variableMap [4] = {
  "dropAccess",
  "readAccess",
  "readWriteAccess",
  "writeAccess"
} ;

//---------------------------------------------------------------------------*
//  Map automaton transitions                                                *
//---------------------------------------------------------------------------*

static const cMapAutomatonTransition kMapTransitions_variableMap [22 * 4] = {
// State 'usedLocalConstant', index 0 
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonIssueError, "a constant cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonIssueError, "a constant cannot be written"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonIssueError, "a constant cannot be drop"}, // for action 'dropAccess', (index 3)
// State 'localConstant', index 1 
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonIssueError, "a constant cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonIssueError, "a constant cannot be written"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonIssueError, "a constant cannot be drop"}, // for action 'dropAccess', (index 3)
// State 'undefinedLocalVariable', index 2 
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapAutomatonIssueError, "an undefined local variable cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapAutomatonIssueError, "an undefined local variable cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapAutomatonIssueWarning, "the local variable has no value"}, // for action 'dropAccess', (index 3)
// State 'definedLocalVariable', index 3 
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonIssueWarning, "the local variable has been dropped without any read"}, // for action 'dropAccess', (index 3)
// State 'usedLocalVariable', index 4 
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
// State 'droppedLocalVariable', index 5 
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonIssueError, "a dropped local variable cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonIssueError, "a dropped local variable cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonIssueWarning, "the local variable is already dropped"}, // for action 'dropAccess', (index 3)
// State 'undefinedOutputFormalArgument', index 6 
  {kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapAutomatonIssueError, "an undefined output formal parameter cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapAutomatonIssueError, "an undefined output formal parameter cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapAutomatonIssueWarning, "the output formal parameter has no value"}, // for action 'dropAccess', (index 3)
// State 'definedOutputFormalArgument', index 7 
  {kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
// State 'unusedInputOutputFormalArgument', index 8 
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
// State 'usedInputOutputFormalArgument', index 9 
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
// State 'droppedInputOutputFormalArgument', index 10 
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonIssueError, "a dropped input/output formal argument cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonIssueError, "a dropped input/output formal argument cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonIssueWarning, "the input/output formal argument is already dropped"}, // for action 'dropAccess', (index 3)
// State 'inputOutputFormalArgumentDeclaredAsUnused', index 11 
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'dropAccess', (index 3)
// State 'constantInputFormalArgument', index 12 
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be dropped"}, // for action 'dropAccess', (index 3)
// State 'usedConstantInputFormalArgument', index 13 
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be dropped"}, // for action 'dropAccess', (index 3)
// State 'constantInputFormalArgumentDeclaredAsUnused', index 14 
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueWarning, "the constant input formal parameter is declared as unused"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be dropped"}, // for action 'dropAccess', (index 3)
// State 'inputFormalParameter', index 15 
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
// State 'usedInputFormalArgument', index 16 
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
// State 'droppedInputFormalArgument', index 17 
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonIssueError, "a dropped input formal parameter cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonIssueError, "a dropped input formal parameter cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonIssueWarning, "the input formal parameter is already dropped"}, // for action 'dropAccess', (index 3)
// State 'inputFormalArgumentDeclaredAsUnused', index 18 
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'dropAccess', (index 3)
// State 'currentInstanceAttribute', index 19 
  {kMapState_variableMap_currentInstanceAttribute /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_currentInstanceAttribute /* 19 */, kMapAutomatonIssueError, "an attribute cannot be written within a method or a reader"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_currentInstanceAttribute /* 19 */, kMapAutomatonIssueError, "an attribute cannot be modified within a method or a reader"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_currentInstanceAttribute /* 19 */, kMapAutomatonIssueError, "an attribute cannot be dropped within a method or a reader"}, // for action 'dropAccess', (index 3)
// State 'currentInstanceAttributeInModifier', index 20 
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 21 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
// State 'currentInstanceDroppedAttributeInModifier', index 21 
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 21 */, kMapAutomatonIssueError, "the attribute cannot be read, it has been dropped"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 21 */, kMapAutomatonIssueError, "the attribute cannot be read/written, it has been dropped"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 21 */, kMapAutomatonIssueWarning, "the attribute is already dropped"}, // for action 'dropAccess', (index 3)
} ;

//---------------------------------------------------------------------------*
//  Map automaton final state issues                                         *
//---------------------------------------------------------------------------*

static const cMapAutomatonFinalIssue kMapAutomatonFinalIssue_variableMap [22] = {
  {kMapAutomatonNoIssue, ""},// state 'usedLocalConstant' (index 0)
  {kMapAutomatonIssueWarning, "the '%K' constant value is unused"},// state 'localConstant' (index 1)
  {kMapAutomatonIssueWarning, "the '%K' local variable is unused"},// state 'undefinedLocalVariable' (index 2)
  {kMapAutomatonNoIssue, ""},// state 'definedLocalVariable' (index 3)
  {kMapAutomatonNoIssue, ""},// state 'usedLocalVariable' (index 4)
  {kMapAutomatonNoIssue, ""},// state 'droppedLocalVariable' (index 5)
  {kMapAutomatonIssueError, "the '%K' output formal parameter is undefined"},// state 'undefinedOutputFormalArgument' (index 6)
  {kMapAutomatonNoIssue, ""},// state 'definedOutputFormalArgument' (index 7)
  {kMapAutomatonIssueWarning, "the '%K' input/output formal parameter is unused"},// state 'unusedInputOutputFormalArgument' (index 8)
  {kMapAutomatonNoIssue, ""},// state 'usedInputOutputFormalArgument' (index 9)
  {kMapAutomatonIssueError, "the '%K' input/ouput formal argument should be valuated at the end of the routine"},// state 'droppedInputOutputFormalArgument' (index 10)
  {kMapAutomatonNoIssue, ""},// state 'inputOutputFormalArgumentDeclaredAsUnused' (index 11)
  {kMapAutomatonIssueWarning, "the constant '%K' input formal parameter is not used and is not declared as unused"},// state 'constantInputFormalArgument' (index 12)
  {kMapAutomatonNoIssue, ""},// state 'usedConstantInputFormalArgument' (index 13)
  {kMapAutomatonNoIssue, ""},// state 'constantInputFormalArgumentDeclaredAsUnused' (index 14)
  {kMapAutomatonIssueWarning, "the '%K' input formal parameter is not used and is not declared as unused"},// state 'inputFormalParameter' (index 15)
  {kMapAutomatonNoIssue, ""},// state 'usedInputFormalArgument' (index 16)
  {kMapAutomatonNoIssue, ""},// state 'droppedInputFormalArgument' (index 17)
  {kMapAutomatonNoIssue, ""},// state 'inputFormalArgumentDeclaredAsUnused' (index 18)
  {kMapAutomatonNoIssue, ""},// state 'currentInstanceAttribute' (index 19)
  {kMapAutomatonNoIssue, ""},// state 'currentInstanceAttributeInModifier' (index 20)
  {kMapAutomatonIssueWarning, "the '%K' attribute is in the dropped state at the end of the modifier"},// state 'currentInstanceDroppedAttributeInModifier' (index 21)
} ;
//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_closeBranch (GALGAS_location inErrorLocation,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  closeBranch (inErrorLocation,
               kMapAutomatonFinalIssue_variableMap,
               #ifndef DO_NOT_GENERATE_CHECKINGS
                 kMapStateCount_variableMap,
               #endif
               inCompiler COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::method_checkAutomatonStates (GALGAS_location inErrorLocation,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  checkAutomatonStates (inErrorLocation, kMapAutomatonFinalIssue_variableMap, inCompiler COMMA_THERE) ;
}

//---------------------------------------------------------------------------*
//                        map override 'selectBlock'                         *
//---------------------------------------------------------------------------*

static const cBranchOverrideTransformationDescriptor kBranchBehaviourForOverride_variableMap_selectBlock [28] = {
  {kMapState_variableMap_localConstant /* 1 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgument /* 12 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 21 */, kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 21 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 21 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapAutomatonNoIssue, ""},
} ;

//---------------------------------------------------------------------------*

static const cBranchOverrideCompatibilityDescriptor kBranchCombinationForOverride_variableMap_selectBlock [42] = {
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapState_variableMap_localConstant /* 1 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_localConstant /* 1 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones let it undefined"},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones let it undefined"},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonIssueError, "this branch lets the '%K' variable undefined, while previous ones define it"},
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonIssueError, "this branch drops the '%K' variable, while previous ones let it defined"},
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonIssueError, "this branch lets the '%K' variable undefined, while previous defines let it"},
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonIssueError, "this branch drops the '%K' variable, while previous ones let it defined"},
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones drop it"},
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones drop it"},
  {kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapAutomatonIssueError, "this branch defines the '%K' output formal argument, while previous ones let it undefined"},
  {kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapAutomatonIssueError, "this branch lets the '%K' variable undefined, while previous ones define it"},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapAutomatonIssueError, "this branch drops the '%K' input/output formal argument, while previous ones let it undefined"},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonIssueError, "this branch drops the '%K' input/output formal argument, while previous ones let it defined"},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapAutomatonIssueError, "this branch lets the '%K' input/output formal argument defined, while previous ones drop it"},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonIssueError, "this branch lets the '%K' input/output formal argument defined, while previous ones drop it"},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapAutomatonIssueError, "this branch lets the '%K' input formal argument defined, while previous ones drop it"},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapAutomatonIssueError, "this branch drops the '%K' input formal argument defined, while previous ones let it defined"},
  {kMapState_variableMap_constantInputFormalArgument /* 12 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_constantInputFormalArgument /* 12 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_inputFormalParameter /* 15 */, kMapAutomatonIssueError, "this branch drops the '%K' input formal argument, while previous let it defined"},
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonIssueError, "this branch drops the '%K' input formal argument, while previous ones let it defined"},
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonIssueError, "this branch drops the '%K' input formal argument, while previous ones let it defined"},
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonIssueError, "this branch defines the '%K' input formal argument, while previous ones let it dropped"},
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 21 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapAutomatonIssueError, "this branch drops the '%K' attribute, while previous ones let it defined"},
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 21 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapAutomatonIssueError, "this branch lets the '%K' attribute defined, while previous ones drop it"},
} ;

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_openOverrideForSelectBlock (C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  openOverride (kBranchBehaviourForOverride_variableMap_selectBlock, 28,
                kBranchCombinationForOverride_variableMap_selectBlock, 42,
                "selectBlock",
                inCompiler
                COMMA_THERE) ;
}

//---------------------------------------------------------------------------*
//                        map override 'repeatBlock'                         *
//---------------------------------------------------------------------------*

static const cBranchOverrideTransformationDescriptor kBranchBehaviourForOverride_variableMap_repeatBlock [28] = {
  {kMapState_variableMap_localConstant /* 1 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapAutomatonIssueError, "the repeated branch should not define the '%K' variable"},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapAutomatonIssueError, "the repeated branch should not define the '%K' variable"},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' variable"},
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' variable"},
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' variable"},
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonIssueError, "the repeated branch should not define the dropped '%K' variable"},
  {kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapAutomatonIssueError, "the repeated branch should not define the '%K' output formal argument"},
  {kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' output formal argument"},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input/output formal argument"},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input/output formal argument"},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonIssueError, "the repeated branch should define the '%K' input formal argument"},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input/output formal argument"},
  {kMapState_variableMap_constantInputFormalArgument /* 12 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_inputFormalParameter /* 15 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input formal argument"},
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input formal argument"},
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input formal argument"},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input formal argument"},
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 21 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' attribute"},
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 21 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapAutomatonNoIssue, ""},
} ;

//---------------------------------------------------------------------------*

static const cBranchOverrideCompatibilityDescriptor kBranchCombinationForOverride_variableMap_repeatBlock [20] = {
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapState_variableMap_localConstant /* 1 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_localConstant /* 1 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgument /* 12 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_constantInputFormalArgument /* 12 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 21 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 21 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 20 */, kMapAutomatonNoIssue, ""},
} ;

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_openOverrideForRepeatBlock (C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  openOverride (kBranchBehaviourForOverride_variableMap_repeatBlock, 28,
                kBranchCombinationForOverride_variableMap_repeatBlock, 20,
                "repeatBlock",
                inCompiler
                COMMA_THERE) ;
}


//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertMutableAttribute (GALGAS_lstring inKey,
                                                          GALGAS_unifiedTypeMapProxy inArgument0,
                                                          GALGAS_string inArgument1,
                                                          GALGAS_string inArgument2,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' attribute (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_currentInstanceAttributeInModifier, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertNonMutableAttribute (GALGAS_lstring inKey,
                                                             GALGAS_unifiedTypeMapProxy inArgument0,
                                                             GALGAS_string inArgument1,
                                                             GALGAS_string inArgument2,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' attribute (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_currentInstanceAttribute, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertUndefinedLocalVariable (GALGAS_lstring inKey,
                                                                GALGAS_unifiedTypeMapProxy inArgument0,
                                                                GALGAS_string inArgument1,
                                                                GALGAS_string inArgument2,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_undefinedLocalVariable, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertDefinedLocalVariable (GALGAS_lstring inKey,
                                                              GALGAS_unifiedTypeMapProxy inArgument0,
                                                              GALGAS_string inArgument1,
                                                              GALGAS_string inArgument2,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_definedLocalVariable, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertLocalConstant (GALGAS_lstring inKey,
                                                       GALGAS_unifiedTypeMapProxy inArgument0,
                                                       GALGAS_string inArgument1,
                                                       GALGAS_string inArgument2,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_localConstant, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertUsedLocalConstant (GALGAS_lstring inKey,
                                                           GALGAS_unifiedTypeMapProxy inArgument0,
                                                           GALGAS_string inArgument1,
                                                           GALGAS_string inArgument2,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_usedLocalConstant, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertInputFormalArgument (GALGAS_lstring inKey,
                                                             GALGAS_unifiedTypeMapProxy inArgument0,
                                                             GALGAS_string inArgument1,
                                                             GALGAS_string inArgument2,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_inputFormalParameter, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertInputFormalArgumentDeclaredAsUnused (GALGAS_lstring inKey,
                                                                             GALGAS_unifiedTypeMapProxy inArgument0,
                                                                             GALGAS_string inArgument1,
                                                                             GALGAS_string inArgument2,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertConstantInputFormalArgument (GALGAS_lstring inKey,
                                                                     GALGAS_unifiedTypeMapProxy inArgument0,
                                                                     GALGAS_string inArgument1,
                                                                     GALGAS_string inArgument2,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_constantInputFormalArgument, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertConstantInputFormalArgumentDeclaredAsUnused (GALGAS_lstring inKey,
                                                                                     GALGAS_unifiedTypeMapProxy inArgument0,
                                                                                     GALGAS_string inArgument1,
                                                                                     GALGAS_string inArgument2,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertOutputFormalArgument (GALGAS_lstring inKey,
                                                              GALGAS_unifiedTypeMapProxy inArgument0,
                                                              GALGAS_string inArgument1,
                                                              GALGAS_string inArgument2,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_undefinedOutputFormalArgument, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertInputOutputFormalArgument (GALGAS_lstring inKey,
                                                                   GALGAS_unifiedTypeMapProxy inArgument0,
                                                                   GALGAS_string inArgument1,
                                                                   GALGAS_string inArgument2,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_unusedInputOutputFormalArgument, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertInputOutputFormalArgumentDeclaredAsUnused (GALGAS_lstring inKey,
                                                                                   GALGAS_unifiedTypeMapProxy inArgument0,
                                                                                   GALGAS_string inArgument1,
                                                                                   GALGAS_string inArgument2,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForReadAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_searchForReadAccess (GALGAS_lstring inKey,
                                                       GALGAS_unifiedTypeMapProxy & outArgument0,
                                                       GALGAS_string & outArgument1,
                                                       GALGAS_string & outArgument2,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_readAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         kMapStateNames_variableMap,
                                                                                         kMapActionNames_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForReadAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_mTypeProxy ;
    outArgument1 = p->mAttribute_mCppName ;
    outArgument2 = p->mAttribute_mNameForCheckingFormalParameterUsing ;
  }
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForWriteAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_searchForWriteAccess (GALGAS_lstring inKey,
                                                        GALGAS_unifiedTypeMapProxy & outArgument0,
                                                        GALGAS_string & outArgument1,
                                                        GALGAS_string & outArgument2,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_writeAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         kMapStateNames_variableMap,
                                                                                         kMapActionNames_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForWriteAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_mTypeProxy ;
    outArgument1 = p->mAttribute_mCppName ;
    outArgument2 = p->mAttribute_mNameForCheckingFormalParameterUsing ;
  }
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForReadWriteAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_searchForReadWriteAccess (GALGAS_lstring inKey,
                                                            GALGAS_unifiedTypeMapProxy & outArgument0,
                                                            GALGAS_string & outArgument1,
                                                            GALGAS_string & outArgument2,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_readWriteAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         kMapStateNames_variableMap,
                                                                                         kMapActionNames_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForReadWriteAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_mTypeProxy ;
    outArgument1 = p->mAttribute_mCppName ;
    outArgument2 = p->mAttribute_mNameForCheckingFormalParameterUsing ;
  }
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForDropAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_searchForDropAccess (GALGAS_lstring inKey,
                                                       GALGAS_unifiedTypeMapProxy & outArgument0,
                                                       GALGAS_string & outArgument1,
                                                       GALGAS_string & outArgument2,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_dropAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         kMapStateNames_variableMap,
                                                                                         kMapActionNames_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForDropAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_mTypeProxy ;
    outArgument1 = p->mAttribute_mCppName ;
    outArgument2 = p->mAttribute_mNameForCheckingFormalParameterUsing ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_variableMap::reader_mTypeProxyForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_unifiedTypeMapProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_variableMap) ;
    result = p->mAttribute_mTypeProxy ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_variableMap::reader_mCppNameForKey (const GALGAS_string & inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_variableMap) ;
    result = p->mAttribute_mCppName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_variableMap::reader_mNameForCheckingFormalParameterUsingForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_variableMap) ;
    result = p->mAttribute_mNameForCheckingFormalParameterUsing ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_setMTypeProxyForKey (GALGAS_unifiedTypeMapProxy inAttributeValue,
                                                       GALGAS_string inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_mTypeProxy = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_setMCppNameForKey (GALGAS_string inAttributeValue,
                                                     GALGAS_string inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_mCppName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_setMNameForCheckingFormalParameterUsingForKey (GALGAS_string inAttributeValue,
                                                                                 GALGAS_string inKey,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_mNameForCheckingFormalParameterUsing = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_variableMap * GALGAS_variableMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                        const GALGAS_string & inKey
                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * result = (cMapElement_variableMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_variableMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_variableMap * GALGAS_variableMap::readWriteAccessForWithInstruction_searchForDropAccess (C_Compiler * inCompiler,
                                                                                                     const GALGAS_lstring & inKey
                                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_variableMap_searchForDropAccess COMMA_THERE) ;
  cMapElement_variableMap * result = (cMapElement_variableMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_variableMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_variableMap * GALGAS_variableMap::readWriteAccessForWithInstruction_searchForReadAccess (C_Compiler * inCompiler,
                                                                                                     const GALGAS_lstring & inKey
                                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_variableMap_searchForReadAccess COMMA_THERE) ;
  cMapElement_variableMap * result = (cMapElement_variableMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_variableMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_variableMap * GALGAS_variableMap::readWriteAccessForWithInstruction_searchForReadWriteAccess (C_Compiler * inCompiler,
                                                                                                          const GALGAS_lstring & inKey
                                                                                                          COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_variableMap_searchForReadWriteAccess COMMA_THERE) ;
  cMapElement_variableMap * result = (cMapElement_variableMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_variableMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_variableMap * GALGAS_variableMap::readWriteAccessForWithInstruction_searchForWriteAccess (C_Compiler * inCompiler,
                                                                                                      const GALGAS_lstring & inKey
                                                                                                      COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_variableMap_searchForWriteAccess COMMA_THERE) ;
  cMapElement_variableMap * result = (cMapElement_variableMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_variableMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_variableMap::cEnumerator_variableMap (const GALGAS_variableMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_variableMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy cEnumerator_variableMap::current_mTypeProxy (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_variableMap) ;
  return p->mAttribute_mTypeProxy ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_variableMap::current_mCppName (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_variableMap) ;
  return p->mAttribute_mCppName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_variableMap::current_mNameForCheckingFormalParameterUsing (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_variableMap) ;
  return p->mAttribute_mNameForCheckingFormalParameterUsing ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @variableMap type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_variableMap ("variableMap",
                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_variableMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_variableMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_variableMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_variableMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_variableMap GALGAS_variableMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler,
                                                      const GALGAS_location & inErrorLocation
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_variableMap result ;
  const GALGAS_variableMap * p = (const GALGAS_variableMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_variableMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "variableMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'checkAssignmentTypes'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkAssignmentTypes (const GALGAS_unifiedTypeMapProxy constinArgument_inTargetType,
                                   const GALGAS_unifiedTypeMapProxy constinArgument_inSourceType,
                                   const GALGAS_location constinArgument_inErrorLocation,
                                   C_Compiler * inCompiler
                                   COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_sourceType = constinArgument_inSourceType ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_ok = GALGAS_bool (kIsEqual, constinArgument_inTargetType.objectCompare (constinArgument_inSourceType)) ;
  //-------- @loopInstructionForGeneration
  if (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (330)).isValid ()) {
    PMUInt32 variant_26161 = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (330)).uintValue () ;
    bool loop_26161 = true ;
    while (loop_26161) {
      loop_26161 = var_ok.operator_not (SOURCE_FILE_AT_LINE (330)).operator_and (var_sourceType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (330)).reader_isNull (SOURCE_FILE_AT_LINE (330)).operator_not (SOURCE_FILE_AT_LINE (330)) COMMA_SOURCE_FILE_AT_LINE (330)).isValid () ;
      if (loop_26161) {
        loop_26161 = var_ok.operator_not (SOURCE_FILE_AT_LINE (330)).operator_and (var_sourceType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (330)).reader_isNull (SOURCE_FILE_AT_LINE (330)).operator_not (SOURCE_FILE_AT_LINE (330)) COMMA_SOURCE_FILE_AT_LINE (330)).boolValue () ;
      }
      if (loop_26161 && (0 == variant_26161)) {
        loop_26161 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (330)) ;
      }
      if (loop_26161) {
        variant_26161 -- ;
        //-------- @assignmentInstructionForGeneration
        var_sourceType = var_sourceType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (331)) ;
        //-------- @assignmentInstructionForGeneration
        var_ok = GALGAS_bool (kIsEqual, constinArgument_inTargetType.objectCompare (var_sourceType)) ;
      }
    }
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = var_ok.operator_not (SOURCE_FILE_AT_LINE (334)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("target object type is '@").operator_concat (constinArgument_inTargetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (335)) COMMA_SOURCE_FILE_AT_LINE (335)).operator_concat (GALGAS_string ("' and cannot be assigned by an '@") COMMA_SOURCE_FILE_AT_LINE (335)).operator_concat (constinArgument_inSourceType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (335)) COMMA_SOURCE_FILE_AT_LINE (335)).operator_concat (GALGAS_string ("' object") COMMA_SOURCE_FILE_AT_LINE (335)) COMMA_SOURCE_FILE_AT_LINE (335)) ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_predefinedTypes::GALGAS_predefinedTypes (void) :
mAttribute_mLocationType (),
mAttribute_mBoolType (),
mAttribute_mCharType (),
mAttribute_mStringType (),
mAttribute_mUIntType (),
mAttribute_mSIntType (),
mAttribute_mUInt_36__34_Type (),
mAttribute_mSInt_36__34_Type (),
mAttribute_mDoubleType (),
mAttribute_mLBoolType (),
mAttribute_mLCharType (),
mAttribute_mLStringType (),
mAttribute_mLUIntType (),
mAttribute_mLSIntType (),
mAttribute_mLUInt_36__34_Type (),
mAttribute_mLSInt_36__34_Type (),
mAttribute_mLDoubleType () {
}

//---------------------------------------------------------------------------*

GALGAS_predefinedTypes::~ GALGAS_predefinedTypes (void) {
}

//---------------------------------------------------------------------------*

/* GALGAS_predefinedTypes::GALGAS_predefinedTypes (const GALGAS_predefinedTypes & inSource) :
//mAttribute_mLocationType (inSource.mAttribute_mLocationType),
//mAttribute_mBoolType (inSource.mAttribute_mBoolType),
//mAttribute_mCharType (inSource.mAttribute_mCharType),
//mAttribute_mStringType (inSource.mAttribute_mStringType),
//mAttribute_mUIntType (inSource.mAttribute_mUIntType),
//mAttribute_mSIntType (inSource.mAttribute_mSIntType),
//mAttribute_mUInt_36__34_Type (inSource.mAttribute_mUInt_36__34_Type),
//mAttribute_mSInt_36__34_Type (inSource.mAttribute_mSInt_36__34_Type),
//mAttribute_mDoubleType (inSource.mAttribute_mDoubleType),
//mAttribute_mLBoolType (inSource.mAttribute_mLBoolType),
//mAttribute_mLCharType (inSource.mAttribute_mLCharType),
//mAttribute_mLStringType (inSource.mAttribute_mLStringType),
//mAttribute_mLUIntType (inSource.mAttribute_mLUIntType),
//mAttribute_mLSIntType (inSource.mAttribute_mLSIntType),
//mAttribute_mLUInt_36__34_Type (inSource.mAttribute_mLUInt_36__34_Type),
//mAttribute_mLSInt_36__34_Type (inSource.mAttribute_mLSInt_36__34_Type),
//mAttribute_mLDoubleType (inSource.mAttribute_mLDoubleType) {
} */

//---------------------------------------------------------------------------*

GALGAS_predefinedTypes::GALGAS_predefinedTypes (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                const GALGAS_unifiedTypeMapProxy & inOperand1,
                                                const GALGAS_unifiedTypeMapProxy & inOperand2,
                                                const GALGAS_unifiedTypeMapProxy & inOperand3,
                                                const GALGAS_unifiedTypeMapProxy & inOperand4,
                                                const GALGAS_unifiedTypeMapProxy & inOperand5,
                                                const GALGAS_unifiedTypeMapProxy & inOperand6,
                                                const GALGAS_unifiedTypeMapProxy & inOperand7,
                                                const GALGAS_unifiedTypeMapProxy & inOperand8,
                                                const GALGAS_unifiedTypeMapProxy & inOperand9,
                                                const GALGAS_unifiedTypeMapProxy & inOperand10,
                                                const GALGAS_unifiedTypeMapProxy & inOperand11,
                                                const GALGAS_unifiedTypeMapProxy & inOperand12,
                                                const GALGAS_unifiedTypeMapProxy & inOperand13,
                                                const GALGAS_unifiedTypeMapProxy & inOperand14,
                                                const GALGAS_unifiedTypeMapProxy & inOperand15,
                                                const GALGAS_unifiedTypeMapProxy & inOperand16) :
mAttribute_mLocationType (inOperand0),
mAttribute_mBoolType (inOperand1),
mAttribute_mCharType (inOperand2),
mAttribute_mStringType (inOperand3),
mAttribute_mUIntType (inOperand4),
mAttribute_mSIntType (inOperand5),
mAttribute_mUInt_36__34_Type (inOperand6),
mAttribute_mSInt_36__34_Type (inOperand7),
mAttribute_mDoubleType (inOperand8),
mAttribute_mLBoolType (inOperand9),
mAttribute_mLCharType (inOperand10),
mAttribute_mLStringType (inOperand11),
mAttribute_mLUIntType (inOperand12),
mAttribute_mLSIntType (inOperand13),
mAttribute_mLUInt_36__34_Type (inOperand14),
mAttribute_mLSInt_36__34_Type (inOperand15),
mAttribute_mLDoubleType (inOperand16) {
}

//---------------------------------------------------------------------------*

/* GALGAS_predefinedTypes & GALGAS_predefinedTypes::operator = (const GALGAS_predefinedTypes & inOperand) {
  mAttribute_mLocationType = inOperand.mAttribute_mLocationType ;
  mAttribute_mBoolType = inOperand.mAttribute_mBoolType ;
  mAttribute_mCharType = inOperand.mAttribute_mCharType ;
  mAttribute_mStringType = inOperand.mAttribute_mStringType ;
  mAttribute_mUIntType = inOperand.mAttribute_mUIntType ;
  mAttribute_mSIntType = inOperand.mAttribute_mSIntType ;
  mAttribute_mUInt_36__34_Type = inOperand.mAttribute_mUInt_36__34_Type ;
  mAttribute_mSInt_36__34_Type = inOperand.mAttribute_mSInt_36__34_Type ;
  mAttribute_mDoubleType = inOperand.mAttribute_mDoubleType ;
  mAttribute_mLBoolType = inOperand.mAttribute_mLBoolType ;
  mAttribute_mLCharType = inOperand.mAttribute_mLCharType ;
  mAttribute_mLStringType = inOperand.mAttribute_mLStringType ;
  mAttribute_mLUIntType = inOperand.mAttribute_mLUIntType ;
  mAttribute_mLSIntType = inOperand.mAttribute_mLSIntType ;
  mAttribute_mLUInt_36__34_Type = inOperand.mAttribute_mLUInt_36__34_Type ;
  mAttribute_mLSInt_36__34_Type = inOperand.mAttribute_mLSInt_36__34_Type ;
  mAttribute_mLDoubleType = inOperand.mAttribute_mLDoubleType ;
  return *this ;
} */

//---------------------------------------------------------------------------*

GALGAS_predefinedTypes GALGAS_predefinedTypes::constructor_new (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand1,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand2,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand3,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand4,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand5,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand6,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand7,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand8,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand9,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand10,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand11,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand12,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand13,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand14,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand15,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand16 
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_predefinedTypes result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid () && inOperand10.isValid () && inOperand11.isValid () && inOperand12.isValid () && inOperand13.isValid () && inOperand14.isValid () && inOperand15.isValid () && inOperand16.isValid ()) {
    result = GALGAS_predefinedTypes (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9, inOperand10, inOperand11, inOperand12, inOperand13, inOperand14, inOperand15, inOperand16) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_predefinedTypes::objectCompare (const GALGAS_predefinedTypes & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mLocationType.objectCompare (inOperand.mAttribute_mLocationType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBoolType.objectCompare (inOperand.mAttribute_mBoolType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCharType.objectCompare (inOperand.mAttribute_mCharType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mStringType.objectCompare (inOperand.mAttribute_mStringType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mUIntType.objectCompare (inOperand.mAttribute_mUIntType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSIntType.objectCompare (inOperand.mAttribute_mSIntType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mUInt_36__34_Type.objectCompare (inOperand.mAttribute_mUInt_36__34_Type) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSInt_36__34_Type.objectCompare (inOperand.mAttribute_mSInt_36__34_Type) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDoubleType.objectCompare (inOperand.mAttribute_mDoubleType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLBoolType.objectCompare (inOperand.mAttribute_mLBoolType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLCharType.objectCompare (inOperand.mAttribute_mLCharType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLStringType.objectCompare (inOperand.mAttribute_mLStringType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLUIntType.objectCompare (inOperand.mAttribute_mLUIntType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLSIntType.objectCompare (inOperand.mAttribute_mLSIntType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLUInt_36__34_Type.objectCompare (inOperand.mAttribute_mLUInt_36__34_Type) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLSInt_36__34_Type.objectCompare (inOperand.mAttribute_mLSInt_36__34_Type) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLDoubleType.objectCompare (inOperand.mAttribute_mLDoubleType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_predefinedTypes::isValid (void) const {
  return mAttribute_mLocationType.isValid () && mAttribute_mBoolType.isValid () && mAttribute_mCharType.isValid () && mAttribute_mStringType.isValid () && mAttribute_mUIntType.isValid () && mAttribute_mSIntType.isValid () && mAttribute_mUInt_36__34_Type.isValid () && mAttribute_mSInt_36__34_Type.isValid () && mAttribute_mDoubleType.isValid () && mAttribute_mLBoolType.isValid () && mAttribute_mLCharType.isValid () && mAttribute_mLStringType.isValid () && mAttribute_mLUIntType.isValid () && mAttribute_mLSIntType.isValid () && mAttribute_mLUInt_36__34_Type.isValid () && mAttribute_mLSInt_36__34_Type.isValid () && mAttribute_mLDoubleType.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_predefinedTypes::drop (void) {
  mAttribute_mLocationType.drop () ;
  mAttribute_mBoolType.drop () ;
  mAttribute_mCharType.drop () ;
  mAttribute_mStringType.drop () ;
  mAttribute_mUIntType.drop () ;
  mAttribute_mSIntType.drop () ;
  mAttribute_mUInt_36__34_Type.drop () ;
  mAttribute_mSInt_36__34_Type.drop () ;
  mAttribute_mDoubleType.drop () ;
  mAttribute_mLBoolType.drop () ;
  mAttribute_mLCharType.drop () ;
  mAttribute_mLStringType.drop () ;
  mAttribute_mLUIntType.drop () ;
  mAttribute_mLSIntType.drop () ;
  mAttribute_mLUInt_36__34_Type.drop () ;
  mAttribute_mLSInt_36__34_Type.drop () ;
  mAttribute_mLDoubleType.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_predefinedTypes::description (C_String & ioString,
                                          const PMSInt32 inIndentation) const {
  ioString << "<struct @predefinedTypes:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mLocationType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBoolType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCharType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mStringType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mUIntType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSIntType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mUInt_36__34_Type.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSInt_36__34_Type.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDoubleType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLBoolType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLCharType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLStringType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLUIntType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLSIntType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLUInt_36__34_Type.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLSInt_36__34_Type.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLDoubleType.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLocationType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLocationType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mBoolType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBoolType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mCharType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCharType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mStringType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mStringType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mUIntType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mUIntType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mSIntType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSIntType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mUInt_36__34_Type (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mUInt_36__34_Type ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mSInt_36__34_Type (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSInt_36__34_Type ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mDoubleType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDoubleType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLBoolType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLBoolType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLCharType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLCharType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLStringType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLStringType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLUIntType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLUIntType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLSIntType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLSIntType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLUInt_36__34_Type (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLUInt_36__34_Type ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLSInt_36__34_Type (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLSInt_36__34_Type ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLDoubleType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLDoubleType ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @predefinedTypes type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_predefinedTypes ("predefinedTypes",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_predefinedTypes::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_predefinedTypes ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_predefinedTypes::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_predefinedTypes (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_predefinedTypes GALGAS_predefinedTypes::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler,
                                                              const GALGAS_location & inErrorLocation
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_predefinedTypes result ;
  const GALGAS_predefinedTypes * p = (const GALGAS_predefinedTypes *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_predefinedTypes *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "predefinedTypes", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_analysisContext::GALGAS_analysisContext (void) :
mAttribute_mSemanticContext (),
mAttribute_mPredefinedTypes (),
mAttribute_mSelfCopyTypeProxy (),
mAttribute_mSelfObjectCppName (),
mAttribute_mSelfTypeProxy () {
}

//---------------------------------------------------------------------------*

GALGAS_analysisContext::~ GALGAS_analysisContext (void) {
}

//---------------------------------------------------------------------------*

/* GALGAS_analysisContext::GALGAS_analysisContext (const GALGAS_analysisContext & inSource) :
//mAttribute_mSemanticContext (inSource.mAttribute_mSemanticContext),
//mAttribute_mPredefinedTypes (inSource.mAttribute_mPredefinedTypes),
//mAttribute_mSelfCopyTypeProxy (inSource.mAttribute_mSelfCopyTypeProxy),
//mAttribute_mSelfObjectCppName (inSource.mAttribute_mSelfObjectCppName),
//mAttribute_mSelfTypeProxy (inSource.mAttribute_mSelfTypeProxy) {
} */

//---------------------------------------------------------------------------*

GALGAS_analysisContext::GALGAS_analysisContext (const GALGAS_semanticContext & inOperand0,
                                                const GALGAS_predefinedTypes & inOperand1,
                                                const GALGAS_unifiedTypeMapProxy & inOperand2,
                                                const GALGAS_string & inOperand3,
                                                const GALGAS_unifiedTypeMapProxy & inOperand4) :
mAttribute_mSemanticContext (inOperand0),
mAttribute_mPredefinedTypes (inOperand1),
mAttribute_mSelfCopyTypeProxy (inOperand2),
mAttribute_mSelfObjectCppName (inOperand3),
mAttribute_mSelfTypeProxy (inOperand4) {
}

//---------------------------------------------------------------------------*

/* GALGAS_analysisContext & GALGAS_analysisContext::operator = (const GALGAS_analysisContext & inOperand) {
  mAttribute_mSemanticContext = inOperand.mAttribute_mSemanticContext ;
  mAttribute_mPredefinedTypes = inOperand.mAttribute_mPredefinedTypes ;
  mAttribute_mSelfCopyTypeProxy = inOperand.mAttribute_mSelfCopyTypeProxy ;
  mAttribute_mSelfObjectCppName = inOperand.mAttribute_mSelfObjectCppName ;
  mAttribute_mSelfTypeProxy = inOperand.mAttribute_mSelfTypeProxy ;
  return *this ;
} */

//---------------------------------------------------------------------------*

GALGAS_analysisContext GALGAS_analysisContext::constructor_new (const GALGAS_semanticContext & inOperand0,
                                                                const GALGAS_predefinedTypes & inOperand1,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand2,
                                                                const GALGAS_string & inOperand3,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand4 
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_analysisContext result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_analysisContext (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_analysisContext::objectCompare (const GALGAS_analysisContext & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mSemanticContext.objectCompare (inOperand.mAttribute_mSemanticContext) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPredefinedTypes.objectCompare (inOperand.mAttribute_mPredefinedTypes) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSelfCopyTypeProxy.objectCompare (inOperand.mAttribute_mSelfCopyTypeProxy) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSelfObjectCppName.objectCompare (inOperand.mAttribute_mSelfObjectCppName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSelfTypeProxy.objectCompare (inOperand.mAttribute_mSelfTypeProxy) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_analysisContext::isValid (void) const {
  return mAttribute_mSemanticContext.isValid () && mAttribute_mPredefinedTypes.isValid () && mAttribute_mSelfCopyTypeProxy.isValid () && mAttribute_mSelfObjectCppName.isValid () && mAttribute_mSelfTypeProxy.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_analysisContext::drop (void) {
  mAttribute_mSemanticContext.drop () ;
  mAttribute_mPredefinedTypes.drop () ;
  mAttribute_mSelfCopyTypeProxy.drop () ;
  mAttribute_mSelfObjectCppName.drop () ;
  mAttribute_mSelfTypeProxy.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_analysisContext::description (C_String & ioString,
                                          const PMSInt32 inIndentation) const {
  ioString << "<struct @analysisContext:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mSemanticContext.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPredefinedTypes.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSelfCopyTypeProxy.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSelfObjectCppName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSelfTypeProxy.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticContext GALGAS_analysisContext::reader_mSemanticContext (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSemanticContext ;
}

//---------------------------------------------------------------------------*

GALGAS_predefinedTypes GALGAS_analysisContext::reader_mPredefinedTypes (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPredefinedTypes ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_analysisContext::reader_mSelfCopyTypeProxy (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSelfCopyTypeProxy ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_analysisContext::reader_mSelfObjectCppName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSelfObjectCppName ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_analysisContext::reader_mSelfTypeProxy (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSelfTypeProxy ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @analysisContext type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_analysisContext ("analysisContext",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_analysisContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_analysisContext ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_analysisContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_analysisContext (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_analysisContext GALGAS_analysisContext::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler,
                                                              const GALGAS_location & inErrorLocation
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_analysisContext result ;
  const GALGAS_analysisContext * p = (const GALGAS_analysisContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_analysisContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "analysisContext", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'analyzeConstructorInvocation'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeConstructorInvocation (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                           GALGAS_variableMap & ioArgument_ioVariableMap,
                                           const GALGAS_lstring constinArgument_inTypeName,
                                           const GALGAS_lstring constinArgument_inConstructorName,
                                           const GALGAS_semanticExpressionListAST constinArgument_inConstuctorEffectiveParameterExpressions,
                                           GALGAS_unifiedTypeMapProxy & outArgument_outReturnedType,
                                           GALGAS_unifiedTypeMapProxy & outArgument_outConstructorType,
                                           GALGAS_semanticExpressionListForGeneration & outArgument_outConstructorEffectiveParameterList,
                                           GALGAS_bool & outArgument_outHasCompilerArgument,
                                           C_Compiler * inCompiler
                                           COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outReturnedType.drop () ; // Release 'out' argument
  outArgument_outConstructorType.drop () ; // Release 'out' argument
  outArgument_outConstructorEffectiveParameterList.drop () ; // Release 'out' argument
  outArgument_outHasCompilerArgument.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outConstructorType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, constinArgument_inTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (523)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_constructorMap var_constructorMap = outArgument_outConstructorType.reader_mConstructorMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (525)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxyList var_constructorFormalArgumentTypeList ;
  //-------- @readOnlyWithInstructionForGeneration
  const cMapElement_constructorMap * objectArray_34680 = (const cMapElement_constructorMap *) var_constructorMap.readAccessForWithInstruction_hasKey (constinArgument_inConstructorName.reader_string (SOURCE_FILE_AT_LINE (528))) ;
  if (NULL != objectArray_34680) {
      macroValidSharedObject (objectArray_34680, const cMapElement_constructorMap) ;
    //-------- @assignmentInstructionForGeneration
    var_constructorFormalArgumentTypeList = objectArray_34680->mAttribute_mArgumentTypeList ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outHasCompilerArgument = objectArray_34680->mAttribute_mHasCompilerArgument ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outReturnedType = objectArray_34680->mAttribute_mReturnedType ;
  }else{
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_constructorMap.reader_count (SOURCE_FILE_AT_LINE (533)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_1 (constinArgument_inConstructorName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '@").operator_concat (constinArgument_inTypeName.reader_string (SOURCE_FILE_AT_LINE (535)) COMMA_SOURCE_FILE_AT_LINE (535)).operator_concat (GALGAS_string ("' type does not define any constructor") COMMA_SOURCE_FILE_AT_LINE (535)) COMMA_SOURCE_FILE_AT_LINE (534)) ;
      var_constructorFormalArgumentTypeList.drop () ; // Release error dropped variable
      outArgument_outHasCompilerArgument.drop () ; // Release error dropped variable
      outArgument_outReturnedType.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_0) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_constructorMap enumerator_35176 (var_constructorMap, kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_35176.hasCurrentObject ()) {
        //-------- @concatInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - ").operator_concat (enumerator_35176.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (541)) COMMA_SOURCE_FILE_AT_LINE (541)) COMMA_SOURCE_FILE_AT_LINE (541)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_unifiedTypeMapProxyList enumerator_35244 (enumerator_35176.current_mArgumentTypeList (HERE), kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_35244.hasCurrentObject ()) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string (" \?@").operator_concat (enumerator_35244.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (543)) COMMA_SOURCE_FILE_AT_LINE (543)) COMMA_SOURCE_FILE_AT_LINE (543)) ;
          enumerator_35244.gotoNextObject () ;
        }
        //-------- @concatInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string (" -> @").operator_concat (enumerator_35176.current_mReturnedType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (545)) COMMA_SOURCE_FILE_AT_LINE (545)) COMMA_SOURCE_FILE_AT_LINE (545)) ;
        enumerator_35176.gotoNextObject () ;
      }
      //-------- @errorInstructionForGeneration
      //--- @ifExpressionForGeneration
      GALGAS_string temp_2 ;
      const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, var_constructorMap.reader_count (SOURCE_FILE_AT_LINE (549)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
      if (kBoolTrue == test_3) {
        temp_2 = GALGAS_string ("available constructors are") ;
      }else if (kBoolFalse == test_3) {
        temp_2 = GALGAS_string ("available constructor is") ;
      }
      GALGAS_location location_4 (constinArgument_inConstructorName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("the '@").operator_concat (constinArgument_inTypeName.reader_string (SOURCE_FILE_AT_LINE (548)) COMMA_SOURCE_FILE_AT_LINE (548)).operator_concat (GALGAS_string ("' type does not define the '") COMMA_SOURCE_FILE_AT_LINE (548)).operator_concat (constinArgument_inConstructorName.reader_string (SOURCE_FILE_AT_LINE (548)) COMMA_SOURCE_FILE_AT_LINE (548)).operator_concat (GALGAS_string ("' constructor; ") COMMA_SOURCE_FILE_AT_LINE (548)).operator_concat (temp_2 COMMA_SOURCE_FILE_AT_LINE (549)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (550)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (550)) COMMA_SOURCE_FILE_AT_LINE (547)) ;
      var_constructorFormalArgumentTypeList.drop () ; // Release error dropped variable
      outArgument_outHasCompilerArgument.drop () ; // Release error dropped variable
      outArgument_outReturnedType.drop () ; // Release error dropped variable
    }
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, constinArgument_inConstuctorEffectiveParameterExpressions.reader_length (SOURCE_FILE_AT_LINE (556)).objectCompare (var_constructorFormalArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (556)))).boolEnum () ;
  if (kBoolTrue == test_5) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_6 (constinArgument_inConstructorName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_6, GALGAS_string ("calling the '").operator_concat (constinArgument_inConstructorName.reader_string (SOURCE_FILE_AT_LINE (558)) COMMA_SOURCE_FILE_AT_LINE (558)).operator_concat (GALGAS_string ("' constructor of '@") COMMA_SOURCE_FILE_AT_LINE (558)).operator_concat (constinArgument_inTypeName.reader_string (SOURCE_FILE_AT_LINE (558)) COMMA_SOURCE_FILE_AT_LINE (558)).operator_concat (GALGAS_string ("' requires ") COMMA_SOURCE_FILE_AT_LINE (558)).operator_concat (var_constructorFormalArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (559)).reader_string (SOURCE_FILE_AT_LINE (559)) COMMA_SOURCE_FILE_AT_LINE (559)).operator_concat (GALGAS_string (" parameter(s), while this call has ") COMMA_SOURCE_FILE_AT_LINE (559)).operator_concat (constinArgument_inConstuctorEffectiveParameterExpressions.reader_length (SOURCE_FILE_AT_LINE (560)).reader_string (SOURCE_FILE_AT_LINE (560)) COMMA_SOURCE_FILE_AT_LINE (560)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (560)) COMMA_SOURCE_FILE_AT_LINE (557)) ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outConstructorEffectiveParameterList = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (562)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_semanticExpressionListAST enumerator_36336 (constinArgument_inConstuctorEffectiveParameterExpressions, kEnumeration_up) ;
  cEnumerator_unifiedTypeMapProxyList enumerator_36373 (var_constructorFormalArgumentTypeList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_36336.hasCurrentObject () && enumerator_36373.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_semanticExpressionForGeneration var_exp ;
    //-------- @methodCallInstructionForGeneration
    callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_36336.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_exp, inCompiler COMMA_SOURCE_FILE_AT_LINE (565)) ;
    //-------- END @methodCallInstructionForGeneration
    { //-------- @routineCallInstructionForGeneration
    routine_checkAssignmentTypes (enumerator_36373.current_mType (HERE), var_exp.reader_mType (SOURCE_FILE_AT_LINE (566)), enumerator_36336.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (566)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @plusEqualnstructionForGeneration
    outArgument_outConstructorEffectiveParameterList.addAssign_operation (var_exp COMMA_SOURCE_FILE_AT_LINE (567)) ;
    enumerator_36336.gotoNextObject () ;
    enumerator_36373.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//            Function 'checkReaderImplementationInSuperClasses'             *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string function_checkReaderImplementationInSuperClasses (const GALGAS_lstring & constinArgument_inReaderName,
                                                                const GALGAS_unifiedTypeMapProxy & constinArgument_inSuperClass,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = constinArgument_inSuperClass.reader_isNull (SOURCE_FILE_AT_LINE (726)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @assignmentInstructionForGeneration
    result_outResult = GALGAS_string::makeEmptyString () ;
  }else if (kBoolFalse == test_0) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_methodQualifier var_qualifier ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_methodKind joker_42872_5 ; // Joker input parameter
    GALGAS_unifiedTypeMapProxyList joker_42872_4 ; // Joker input parameter
    GALGAS_location joker_42872_3 ; // Joker input parameter
    GALGAS_bool joker_42872_2 ; // Joker input parameter
    GALGAS_unifiedTypeMapProxy joker_42872_1 ; // Joker input parameter
    GALGAS_string joker_42887_0 ; // Joker input parameter
    constinArgument_inSuperClass.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (730)).method_searchKey (constinArgument_inReaderName, joker_42872_5, joker_42872_4, joker_42872_3, joker_42872_2, joker_42872_1, var_qualifier, joker_42887_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (730)) ;
    //-------- END @methodCallInstructionForGeneration
    //------- @switchInstructionForGeneration
    if (var_qualifier.isValid ()) {
      switch (var_qualifier.enumValue ()) {
      case GALGAS_methodQualifier::kNotBuilt:
        break ;
      case GALGAS_methodQualifier::kEnum_isAbstract: {
        //-------- @assignmentInstructionForGeneration
        result_outResult = GALGAS_string::makeEmptyString () ;
        } break ;
      case GALGAS_methodQualifier::kEnum_isBasic: case GALGAS_methodQualifier::kEnum_isBasicFinal: case GALGAS_methodQualifier::kEnum_isOverriding: {
        //-------- @assignmentInstructionForGeneration
        result_outResult = constinArgument_inSuperClass.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (735)) ;
        } break ;
      case GALGAS_methodQualifier::kEnum_isInherited: case GALGAS_methodQualifier::kEnum_isOverridingAbstract: {
        //-------- @assignmentInstructionForGeneration
        result_outResult = function_checkReaderImplementationInSuperClasses (constinArgument_inReaderName, constinArgument_inSuperClass.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (737)), inCompiler COMMA_SOURCE_FILE_AT_LINE (737)) ;
        } break ;
      }
    }
  }
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_checkReaderImplementationInSuperClasses [3] = {
  & kTypeDescriptor_GALGAS_lstring,
  & kTypeDescriptor_GALGAS_unifiedTypeMapProxy,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_checkReaderImplementationInSuperClasses (C_Compiler * inCompiler,
                                                                                        const cObjectArray & inEffectiveParameterArray,
                                                                                        const GALGAS_location & inErrorLocation
                                                                                        COMMA_LOCATION_ARGS) {
  const GALGAS_lstring operand0 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  const GALGAS_unifiedTypeMapProxy operand1 = GALGAS_unifiedTypeMapProxy::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_checkReaderImplementationInSuperClasses (operand0, operand1, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_checkReaderImplementationInSuperClasses ("checkReaderImplementationInSuperClasses",
                                                                                         functionWithGenericHeader_checkReaderImplementationInSuperClasses,
                                                                                         & kTypeDescriptor_GALGAS_string,
                                                                                         2,
                                                                                         functionArgs_checkReaderImplementationInSuperClasses) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'checkDiadicOperator'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkDiadicOperator (const GALGAS_unifiedTypeMapProxy constinArgument_inLeftType,
                                  const GALGAS_unifiedTypeMapProxy constinArgument_inRightType,
                                  const GALGAS_bool constinArgument_inOperandIsHandled,
                                  const GALGAS_string constinArgument_inOperatorNameForErrorMessage,
                                  const GALGAS_location constinArgument_inErrorLocation,
                                  GALGAS_semanticExpressionForGeneration & ioArgument_ioRightExpression,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = constinArgument_inOperandIsHandled.operator_not (SOURCE_FILE_AT_LINE (828)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("left operand type is '@").operator_concat (constinArgument_inLeftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (830)) COMMA_SOURCE_FILE_AT_LINE (830)).operator_concat (GALGAS_string ("' and does not accept '") COMMA_SOURCE_FILE_AT_LINE (830)).operator_concat (constinArgument_inOperatorNameForErrorMessage COMMA_SOURCE_FILE_AT_LINE (830)).operator_concat (GALGAS_string ("' operator (right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (830)).operator_concat (constinArgument_inRightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (830)) COMMA_SOURCE_FILE_AT_LINE (830)).operator_concat (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (830)) COMMA_SOURCE_FILE_AT_LINE (829)) ;
  }else if (kBoolFalse == test_0) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_unifiedTypeMapProxy var_rightType = constinArgument_inRightType ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_bool var_ok = GALGAS_bool (kIsEqual, constinArgument_inLeftType.objectCompare (var_rightType)) ;
    //-------- @loopInstructionForGeneration
    if (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (835)).isValid ()) {
      PMUInt32 variant_46868 = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (835)).uintValue () ;
      bool loop_46868 = true ;
      while (loop_46868) {
        loop_46868 = var_ok.operator_not (SOURCE_FILE_AT_LINE (835)).operator_and (var_rightType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (835)).reader_isNull (SOURCE_FILE_AT_LINE (835)).operator_not (SOURCE_FILE_AT_LINE (835)) COMMA_SOURCE_FILE_AT_LINE (835)).isValid () ;
        if (loop_46868) {
          loop_46868 = var_ok.operator_not (SOURCE_FILE_AT_LINE (835)).operator_and (var_rightType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (835)).reader_isNull (SOURCE_FILE_AT_LINE (835)).operator_not (SOURCE_FILE_AT_LINE (835)) COMMA_SOURCE_FILE_AT_LINE (835)).boolValue () ;
        }
        if (loop_46868 && (0 == variant_46868)) {
          loop_46868 = false ;
          inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (835)) ;
        }
        if (loop_46868) {
          variant_46868 -- ;
          //-------- @assignmentInstructionForGeneration
          var_rightType = var_rightType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (836)) ;
          //-------- @assignmentInstructionForGeneration
          var_ok = GALGAS_bool (kIsEqual, constinArgument_inLeftType.objectCompare (var_rightType)) ;
        }
      }
    }
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = var_ok.operator_not (SOURCE_FILE_AT_LINE (840)).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_2 = constinArgument_inRightType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (842)).reader_hasKey (constinArgument_inLeftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (842)) COMMA_SOURCE_FILE_AT_LINE (842)).boolEnum () ;
      if (kBoolTrue == test_2) {
        //-------- @localVariableDeclarationForGeneration
        GALGAS_unifiedTypeMapProxyList var_argumentTypeList ;
        //-------- @localVariableDeclarationForGeneration
        GALGAS_bool var_hasCompilerArgument ;
        //-------- @localVariableDeclarationForGeneration
        GALGAS_unifiedTypeMapProxy var_returnedType ;
        //-------- @localVariableDeclarationForGeneration
        GALGAS_methodKind var_kind ;
        //-------- @methodCallInstructionForGeneration
        GALGAS_location joker_47461_0 ; // Joker input parameter
        GALGAS_methodQualifier joker_47529_2 ; // Joker input parameter
        GALGAS_string joker_47529_1 ; // Joker input parameter
        constinArgument_inRightType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (847)).method_searchKey (constinArgument_inLeftType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (848)), var_kind, var_argumentTypeList, joker_47461_0, var_hasCompilerArgument, var_returnedType, joker_47529_2, joker_47529_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (847)) ;
        //-------- END @methodCallInstructionForGeneration
        //-------- @assignmentInstructionForGeneration
        var_ok = GALGAS_bool (kIsEqual, var_argumentTypeList.reader_length (SOURCE_FILE_AT_LINE (856)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (kIsEqual, var_returnedType.objectCompare (constinArgument_inLeftType)) COMMA_SOURCE_FILE_AT_LINE (856)) ;
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_semanticExpressionForGeneration var_conversionExpression = GALGAS_readerCallExpressionForGeneration::constructor_new (constinArgument_inLeftType, constinArgument_inErrorLocation, var_kind, ioArgument_ioRightExpression, GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (863)), constinArgument_inLeftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (864)), GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (865)), var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (858)) ;
        //-------- @assignmentInstructionForGeneration
        ioArgument_ioRightExpression = var_conversionExpression ;
      }
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_3 = var_ok.operator_not (SOURCE_FILE_AT_LINE (870)).boolEnum () ;
      if (kBoolTrue == test_3) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("left operand type of '").operator_concat (constinArgument_inOperatorNameForErrorMessage COMMA_SOURCE_FILE_AT_LINE (872)).operator_concat (GALGAS_string ("' operator is '@") COMMA_SOURCE_FILE_AT_LINE (872)).operator_concat (constinArgument_inLeftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (872)) COMMA_SOURCE_FILE_AT_LINE (872)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (873)).operator_concat (constinArgument_inRightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (873)) COMMA_SOURCE_FILE_AT_LINE (873)).operator_concat (GALGAS_string ("', it should be either the same, either inherits from left operand type, either have a '") COMMA_SOURCE_FILE_AT_LINE (874)).operator_concat (constinArgument_inLeftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (875)) COMMA_SOURCE_FILE_AT_LINE (875)).operator_concat (GALGAS_string ("' reader without argument that returns a '@") COMMA_SOURCE_FILE_AT_LINE (875)).operator_concat (constinArgument_inLeftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (875)) COMMA_SOURCE_FILE_AT_LINE (875)).operator_concat (GALGAS_string ("' object") COMMA_SOURCE_FILE_AT_LINE (875)) COMMA_SOURCE_FILE_AT_LINE (871)) ;
      }
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category method '@semanticExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_semanticExpressionAST_analyzeSemanticExpression> gCategoryMethodTable_semanticExpressionAST_analyzeSemanticExpression ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeSemanticExpression (const PMSInt32 inClassIndex,
                                                    categoryMethodSignature_semanticExpressionAST_analyzeSemanticExpression inMethod) {
  gCategoryMethodTable_semanticExpressionAST_analyzeSemanticExpression.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_semanticExpressionAST_analyzeSemanticExpression (void) {
  gCategoryMethodTable_semanticExpressionAST_analyzeSemanticExpression.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticExpressionAST_analyzeSemanticExpression (NULL,
                                                                            freeCategoryMethod_semanticExpressionAST_analyzeSemanticExpression) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                   const GALGAS_analysisContext constin_inAnalysisContext,
                                                   GALGAS_variableMap & io_ioVariableMap,
                                                   GALGAS_semanticExpressionForGeneration & out_outExpression,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outExpression.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_semanticExpressionAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_semanticExpressionAST_analyzeSemanticExpression f = NULL ;
    if (classIndex < gCategoryMethodTable_semanticExpressionAST_analyzeSemanticExpression.count ()) {
      f = gCategoryMethodTable_semanticExpressionAST_analyzeSemanticExpression (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_semanticExpressionAST_analyzeSemanticExpression.count ()) {
           f = gCategoryMethodTable_semanticExpressionAST_analyzeSemanticExpression (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_semanticExpressionAST_analyzeSemanticExpression.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    f (inObject, constin_inAnalysisContext, io_ioVariableMap, out_outExpression, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@selfCopyInExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_selfCopyInExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                              const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                              GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                              GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selfCopyInExpressionAST * object = (const cPtr_selfCopyInExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_selfCopyInExpressionAST) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = constinArgument_inAnalysisContext.mAttribute_mSelfCopyTypeProxy.reader_isNull (SOURCE_FILE_AT_LINE (398)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mSelfLocation, GALGAS_string ("'selfcopy' cannot be used in this context") COMMA_SOURCE_FILE_AT_LINE (399)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_selfCppName = constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_selfCopyInExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mSelfCopyTypeProxy, object->mAttribute_mSelfLocation, var_selfCppName COMMA_SOURCE_FILE_AT_LINE (402)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_selfCopyInExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_selfCopyInExpressionAST.mSlotID,
                                                 categoryMethod_selfCopyInExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selfCopyInExpressionAST_analyzeSemanticExpression (defineCategoryMethod_selfCopyInExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@hereExpressionAST analyzeSemanticExpression' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_hereExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                        const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                        GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                        GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_hereExpressionAST * object = (const cPtr_hereExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_hereExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_hereExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLocationType, object->mAttribute_mLocation COMMA_SOURCE_FILE_AT_LINE (413)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_hereExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_hereExpressionAST.mSlotID,
                                                 categoryMethod_hereExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_hereExpressionAST_analyzeSemanticExpression (defineCategoryMethod_hereExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@trueExpressionAST analyzeSemanticExpression' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_trueExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                        const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                        GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                        GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_trueExpressionAST * object = (const cPtr_trueExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_trueExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_trueExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mLocation COMMA_SOURCE_FILE_AT_LINE (423)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_trueExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_trueExpressionAST.mSlotID,
                                                 categoryMethod_trueExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_trueExpressionAST_analyzeSemanticExpression (defineCategoryMethod_trueExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@falseExpressionAST analyzeSemanticExpression' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_falseExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                         const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                         GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                         GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                         C_Compiler * /* inCompiler */
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_falseExpressionAST * object = (const cPtr_falseExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_falseExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_falseExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mLocation COMMA_SOURCE_FILE_AT_LINE (433)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_falseExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_falseExpressionAST.mSlotID,
                                                 categoryMethod_falseExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_falseExpressionAST_analyzeSemanticExpression (defineCategoryMethod_falseExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@literalCharExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_literalCharExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                               const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_literalCharExpressionAST * object = (const cPtr_literalCharExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_literalCharExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalCharExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mCharType, object->mAttribute_mCharacter.reader_location (SOURCE_FILE_AT_LINE (443)), object->mAttribute_mCharacter.reader_char (SOURCE_FILE_AT_LINE (443)) COMMA_SOURCE_FILE_AT_LINE (443)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_literalCharExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_literalCharExpressionAST.mSlotID,
                                                 categoryMethod_literalCharExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_literalCharExpressionAST_analyzeSemanticExpression (defineCategoryMethod_literalCharExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@literalStringExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_literalStringExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                 const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                 GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                 GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_literalStringExpressionAST * object = (const cPtr_literalStringExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_literalStringExpressionAST) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_stringlist enumerator_31450 (object->mAttribute_mStringSequence, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_31450.hasCurrentObject ()) {
    //-------- @concatInstructionForGeneration
    var_s.dotAssign_operation (enumerator_31450.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (455)) ;
    enumerator_31450.gotoNextObject () ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalStringExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType, object->mAttribute_mLocation, var_s COMMA_SOURCE_FILE_AT_LINE (457)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_literalStringExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_literalStringExpressionAST.mSlotID,
                                                 categoryMethod_literalStringExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_literalStringExpressionAST_analyzeSemanticExpression (defineCategoryMethod_literalStringExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@literalDoubleExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_literalDoubleExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                 const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                 GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                 GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_literalDoubleExpressionAST * object = (const cPtr_literalDoubleExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_literalDoubleExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalDoubleExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mDoubleType, object->mAttribute_mValue.reader_location (SOURCE_FILE_AT_LINE (467)), object->mAttribute_mValue.reader_double (SOURCE_FILE_AT_LINE (467)) COMMA_SOURCE_FILE_AT_LINE (467)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_literalDoubleExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_literalDoubleExpressionAST.mSlotID,
                                                 categoryMethod_literalDoubleExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_literalDoubleExpressionAST_analyzeSemanticExpression (defineCategoryMethod_literalDoubleExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@literalUIntExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_literalUIntExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                               const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_literalUIntExpressionAST * object = (const cPtr_literalUIntExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_literalUIntExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalUIntExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType, object->mAttribute_mValue.reader_location (SOURCE_FILE_AT_LINE (477)), object->mAttribute_mValue.reader_uint (SOURCE_FILE_AT_LINE (477)) COMMA_SOURCE_FILE_AT_LINE (477)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_literalUIntExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_literalUIntExpressionAST.mSlotID,
                                                 categoryMethod_literalUIntExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_literalUIntExpressionAST_analyzeSemanticExpression (defineCategoryMethod_literalUIntExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@literalUInt64ExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_literalUInt_36__34_ExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                       GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_literalUInt_36__34_ExpressionAST * object = (const cPtr_literalUInt_36__34_ExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_literalUInt_36__34_ExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalUInt_36__34_ExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUInt_36__34_Type, object->mAttribute_mValue.reader_location (SOURCE_FILE_AT_LINE (487)), object->mAttribute_mValue.reader_uint_36__34_ (SOURCE_FILE_AT_LINE (487)) COMMA_SOURCE_FILE_AT_LINE (487)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_literalUInt_36__34_ExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_literalUInt_36__34_ExpressionAST.mSlotID,
                                                 categoryMethod_literalUInt_36__34_ExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_literalUInt_36__34_ExpressionAST_analyzeSemanticExpression (defineCategoryMethod_literalUInt_36__34_ExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@literalSIntExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_literalSIntExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                               const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_literalSIntExpressionAST * object = (const cPtr_literalSIntExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_literalSIntExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalSIntExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mSIntType, object->mAttribute_mValue.reader_location (SOURCE_FILE_AT_LINE (497)), object->mAttribute_mValue.reader_sint (SOURCE_FILE_AT_LINE (497)) COMMA_SOURCE_FILE_AT_LINE (497)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_literalSIntExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_literalSIntExpressionAST.mSlotID,
                                                 categoryMethod_literalSIntExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_literalSIntExpressionAST_analyzeSemanticExpression (defineCategoryMethod_literalSIntExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@literalSInt64ExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_literalSInt_36__34_ExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                       GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_literalSInt_36__34_ExpressionAST * object = (const cPtr_literalSInt_36__34_ExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_literalSInt_36__34_ExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalSInt_36__34_ExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mSInt_36__34_Type, object->mAttribute_mValue.reader_location (SOURCE_FILE_AT_LINE (507)), object->mAttribute_mValue.reader_sint_36__34_ (SOURCE_FILE_AT_LINE (507)) COMMA_SOURCE_FILE_AT_LINE (507)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_literalSInt_36__34_ExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_literalSInt_36__34_ExpressionAST.mSlotID,
                                                 categoryMethod_literalSInt_36__34_ExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_literalSInt_36__34_ExpressionAST_analyzeSemanticExpression (defineCategoryMethod_literalSInt_36__34_ExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@constructorExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_constructorExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                               const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_constructorExpressionAST * object = (const cPtr_constructorExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_constructorExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_returnedType ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_constructorType ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionListForGeneration var_constructorEffectiveParameterList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_hasCompilerArgument ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeConstructorInvocation (constinArgument_inAnalysisContext, ioArgument_ioVariableMap, object->mAttribute_mTypeName, object->mAttribute_mConstructorName, object->mAttribute_mExpressions, var_returnedType, var_constructorType, var_constructorEffectiveParameterList, var_hasCompilerArgument, inCompiler COMMA_SOURCE_FILE_AT_LINE (582)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_constructorExpressionForGeneration::constructor_new (var_returnedType, object->mAttribute_mConstructorName.reader_location (SOURCE_FILE_AT_LINE (596)), var_constructorType, object->mAttribute_mConstructorName.reader_string (SOURCE_FILE_AT_LINE (598)), var_constructorEffectiveParameterList, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (594)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_constructorExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_constructorExpressionAST.mSlotID,
                                                 categoryMethod_constructorExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_constructorExpressionAST_analyzeSemanticExpression (defineCategoryMethod_constructorExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@readerCallExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_readerCallExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                              const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                              GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                              GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_readerCallExpressionAST * object = (const cPtr_readerCallExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_readerCallExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_receiverExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mReceiver.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_receiverExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (613)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_receiverType = var_receiverExpression.reader_mType (SOURCE_FILE_AT_LINE (614)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_readerMap var_readerMap = var_receiverType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (616)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxyList var_readerFormalArgumentTypeList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_methodKind var_kind ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_hasCompilerArgument ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_returnedType ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringlist var_fieldList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (622)) ;
  //-------- @readOnlyWithInstructionForGeneration
  const cMapElement_readerMap * objectArray_38419 = (const cMapElement_readerMap *) var_readerMap.readAccessForWithInstruction_hasKey (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (623))) ;
  if (NULL != objectArray_38419) {
      macroValidSharedObject (objectArray_38419, const cMapElement_readerMap) ;
    //-------- @assignmentInstructionForGeneration
    var_readerFormalArgumentTypeList = objectArray_38419->mAttribute_mArgumentTypeList ;
    //-------- @assignmentInstructionForGeneration
    var_hasCompilerArgument = objectArray_38419->mAttribute_mHasCompilerArgument ;
    //-------- @assignmentInstructionForGeneration
    var_returnedType = objectArray_38419->mAttribute_mReturnedType ;
    //-------- @assignmentInstructionForGeneration
    var_kind = objectArray_38419->mAttribute_mKind ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, objectArray_38419->mAttribute_mErrorMessage.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_1 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, objectArray_38419->mAttribute_mErrorMessage COMMA_SOURCE_FILE_AT_LINE (629)) ;
    }
  }else{
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_uint var_matchingReaderCount = GALGAS_uint ((PMUInt32) 0U) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_receiverType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (633)).objectCompare (GALGAS_typeKindEnum::constructor_structType (SOURCE_FILE_AT_LINE (633)))).boolEnum () ;
    if (kBoolTrue == test_2) {
      //-------- @assignmentInstructionForGeneration
      var_readerFormalArgumentTypeList = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (634)) ;
      //-------- @assignmentInstructionForGeneration
      var_hasCompilerArgument = GALGAS_bool (true) ;
      //-------- @assignmentInstructionForGeneration
      var_returnedType = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (636)) ;
      //-------- @assignmentInstructionForGeneration
      var_kind = GALGAS_methodKind::constructor_definedAsCategory (SOURCE_FILE_AT_LINE (637)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_typedAttributeList enumerator_39087 (var_receiverType.reader_mCurrentTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (638)), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_39087.hasCurrentObject ()) {
        //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
        GALGAS_unifiedTypeMapProxy var_attributeType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (enumerator_39087.current_mAttributeTypeProxy (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (639)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (639)), inCompiler COMMA_SOURCE_FILE_AT_LINE (639)) ;
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_readerMap var_aMap = var_attributeType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (640)) ;
        //-------- @readOnlyWithInstructionForGeneration
        const cMapElement_readerMap * objectArray_39326 = (const cMapElement_readerMap *) var_aMap.readAccessForWithInstruction_hasKey (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (641))) ;
        if (NULL != objectArray_39326) {
            macroValidSharedObject (objectArray_39326, const cMapElement_readerMap) ;
          //-------- @incrementInstructionForGeneration
          var_matchingReaderCount.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (642)) ;
          //-------- @assignmentInstructionForGeneration
          var_readerFormalArgumentTypeList = objectArray_39326->mAttribute_mArgumentTypeList ;
          //-------- @assignmentInstructionForGeneration
          var_hasCompilerArgument = objectArray_39326->mAttribute_mHasCompilerArgument ;
          //-------- @assignmentInstructionForGeneration
          var_returnedType = objectArray_39326->mAttribute_mReturnedType ;
          //-------- @assignmentInstructionForGeneration
          var_kind = objectArray_39326->mAttribute_mKind ;
          //-------- @plusEqualnstructionForGeneration
          var_fieldList.addAssign_operation (enumerator_39087.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (647)) COMMA_SOURCE_FILE_AT_LINE (647)) ;
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, objectArray_39326->mAttribute_mErrorMessage.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
          if (kBoolTrue == test_3) {
            //-------- @errorInstructionForGeneration
            GALGAS_location location_4 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_4, objectArray_39326->mAttribute_mErrorMessage COMMA_SOURCE_FILE_AT_LINE (649)) ;
          }
        }
        enumerator_39087.gotoNextObject () ;
      }
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, var_matchingReaderCount.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_5) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_6 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_6, GALGAS_string ("the '@").operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (655)) COMMA_SOURCE_FILE_AT_LINE (655)).operator_concat (GALGAS_string ("' struct type does not define the '") COMMA_SOURCE_FILE_AT_LINE (655)).operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (655)) COMMA_SOURCE_FILE_AT_LINE (655)).operator_concat (GALGAS_string ("' reader, and none of its fields defines it") COMMA_SOURCE_FILE_AT_LINE (656)) COMMA_SOURCE_FILE_AT_LINE (654)) ;
        var_readerFormalArgumentTypeList.drop () ; // Release error dropped variable
        var_hasCompilerArgument.drop () ; // Release error dropped variable
        var_returnedType.drop () ; // Release error dropped variable
        var_kind.drop () ; // Release error dropped variable
      }else if (kBoolFalse == test_5) {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_7 = GALGAS_bool (kIsStrictSup, var_matchingReaderCount.objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
        if (kBoolTrue == test_7) {
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
          //-------- @foreachInstructionForGeneration
          cEnumerator_stringlist enumerator_40192 (var_fieldList, kEnumeration_up) ;
          //--- simple foreach instruction
          while (enumerator_40192.hasCurrentObject ()) {
            //-------- @concatInstructionForGeneration
            var_s.dotAssign_operation (enumerator_40192.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (662)) ;
            if (enumerator_40192.hasNextObject ()) {
              //-------- @concatInstructionForGeneration
              var_s.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (663)) ;
            }
            enumerator_40192.gotoNextObject () ;
          }
          //-------- @errorInstructionForGeneration
          GALGAS_location location_8 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_8, GALGAS_string ("the '@").operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (666)) COMMA_SOURCE_FILE_AT_LINE (666)).operator_concat (GALGAS_string ("' struct type does not define the '") COMMA_SOURCE_FILE_AT_LINE (666)).operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (666)) COMMA_SOURCE_FILE_AT_LINE (666)).operator_concat (GALGAS_string ("' reader, and several of its fields defines it:") COMMA_SOURCE_FILE_AT_LINE (667)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (667)).operator_concat (GALGAS_string (" (exactly one field should define it)") COMMA_SOURCE_FILE_AT_LINE (667)) COMMA_SOURCE_FILE_AT_LINE (665)) ;
          var_readerFormalArgumentTypeList.drop () ; // Release error dropped variable
          var_hasCompilerArgument.drop () ; // Release error dropped variable
          var_returnedType.drop () ; // Release error dropped variable
          var_kind.drop () ; // Release error dropped variable
        }
      }
    }else if (kBoolFalse == test_2) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, var_readerMap.reader_count (SOURCE_FILE_AT_LINE (671)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_9) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_10 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_10, GALGAS_string ("the '@").operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (673)) COMMA_SOURCE_FILE_AT_LINE (673)).operator_concat (GALGAS_string ("' type does not define any reader") COMMA_SOURCE_FILE_AT_LINE (673)) COMMA_SOURCE_FILE_AT_LINE (672)) ;
        var_readerFormalArgumentTypeList.drop () ; // Release error dropped variable
        var_hasCompilerArgument.drop () ; // Release error dropped variable
        var_returnedType.drop () ; // Release error dropped variable
        var_kind.drop () ; // Release error dropped variable
      }else if (kBoolFalse == test_9) {
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_readerMap enumerator_40880 (var_readerMap, kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_40880.hasCurrentObject ()) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "  - ").operator_concat (enumerator_40880.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (679)) COMMA_SOURCE_FILE_AT_LINE (679)) COMMA_SOURCE_FILE_AT_LINE (679)) ;
          //-------- @foreachInstructionForGeneration
          cEnumerator_unifiedTypeMapProxyList enumerator_40948 (enumerator_40880.current_mArgumentTypeList (HERE), kEnumeration_up) ;
          //--- simple foreach instruction
          while (enumerator_40948.hasCurrentObject ()) {
            //-------- @concatInstructionForGeneration
            var_s.dotAssign_operation (GALGAS_string (" \?@").operator_concat (enumerator_40948.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (681)) COMMA_SOURCE_FILE_AT_LINE (681)) COMMA_SOURCE_FILE_AT_LINE (681)) ;
            enumerator_40948.gotoNextObject () ;
          }
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string (" -> @").operator_concat (enumerator_40880.current_mReturnedType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (683)) COMMA_SOURCE_FILE_AT_LINE (683)) COMMA_SOURCE_FILE_AT_LINE (683)) ;
          enumerator_40880.gotoNextObject () ;
        }
        //-------- @errorInstructionForGeneration
        //--- @ifExpressionForGeneration
        GALGAS_string temp_11 ;
        const enumGalgasBool test_12 = GALGAS_bool (kIsStrictSup, var_readerMap.reader_count (SOURCE_FILE_AT_LINE (687)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
        if (kBoolTrue == test_12) {
          temp_11 = GALGAS_string ("readers are") ;
        }else if (kBoolFalse == test_12) {
          temp_11 = GALGAS_string ("reader is") ;
        }
        GALGAS_location location_13 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_13, GALGAS_string ("the '@").operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (686)) COMMA_SOURCE_FILE_AT_LINE (686)).operator_concat (GALGAS_string ("' type does not define the '") COMMA_SOURCE_FILE_AT_LINE (686)).operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (686)) COMMA_SOURCE_FILE_AT_LINE (686)).operator_concat (GALGAS_string ("' reader; available ") COMMA_SOURCE_FILE_AT_LINE (686)).operator_concat (temp_11 COMMA_SOURCE_FILE_AT_LINE (687)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (688)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (688)) COMMA_SOURCE_FILE_AT_LINE (685)) ;
        var_readerFormalArgumentTypeList.drop () ; // Release error dropped variable
        var_hasCompilerArgument.drop () ; // Release error dropped variable
        var_returnedType.drop () ; // Release error dropped variable
        var_kind.drop () ; // Release error dropped variable
      }
    }
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_14 = GALGAS_bool (kIsNotEqual, object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (694)).objectCompare (var_readerFormalArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (694)))).boolEnum () ;
  if (kBoolTrue == test_14) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_15 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_15, GALGAS_string ("calling the '").operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (695)) COMMA_SOURCE_FILE_AT_LINE (695)).operator_concat (GALGAS_string ("' reader of '@") COMMA_SOURCE_FILE_AT_LINE (695)).operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (695)) COMMA_SOURCE_FILE_AT_LINE (695)).operator_concat (GALGAS_string ("' requires ") COMMA_SOURCE_FILE_AT_LINE (695)).operator_concat (var_readerFormalArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (696)).reader_string (SOURCE_FILE_AT_LINE (696)) COMMA_SOURCE_FILE_AT_LINE (696)).operator_concat (GALGAS_string (" parameter(s), while this call has ") COMMA_SOURCE_FILE_AT_LINE (696)).operator_concat (object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (697)).reader_string (SOURCE_FILE_AT_LINE (697)) COMMA_SOURCE_FILE_AT_LINE (697)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (697)) COMMA_SOURCE_FILE_AT_LINE (695)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_14) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_semanticExpressionListForGeneration var_constructorEffectiveParameterList = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (699)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_semanticExpressionListAST enumerator_41900 (object->mAttribute_mExpressions, kEnumeration_up) ;
    cEnumerator_unifiedTypeMapProxyList enumerator_41932 (var_readerFormalArgumentTypeList, kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_41900.hasCurrentObject () && enumerator_41932.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_semanticExpressionForGeneration var_exp ;
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_41900.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_exp, inCompiler COMMA_SOURCE_FILE_AT_LINE (702)) ;
      //-------- END @methodCallInstructionForGeneration
      { //-------- @routineCallInstructionForGeneration
      routine_checkAssignmentTypes (enumerator_41932.current_mType (HERE), var_exp.reader_mType (SOURCE_FILE_AT_LINE (703)), enumerator_41900.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (703)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @plusEqualnstructionForGeneration
      var_constructorEffectiveParameterList.addAssign_operation (var_exp COMMA_SOURCE_FILE_AT_LINE (704)) ;
      enumerator_41900.gotoNextObject () ;
      enumerator_41932.gotoNextObject () ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_readerCallExpressionForGeneration::constructor_new (var_returnedType, object->mAttribute_mReaderName.reader_location (SOURCE_FILE_AT_LINE (708)), var_kind, var_receiverExpression, var_fieldList, object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (712)), var_constructorEffectiveParameterList, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (706)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_readerCallExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_readerCallExpressionAST.mSlotID,
                                                 categoryMethod_readerCallExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_readerCallExpressionAST_analyzeSemanticExpression (defineCategoryMethod_readerCallExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@optionExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_optionExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                          const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                          GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                          GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_optionExpressionAST * object = (const cPtr_optionExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_optionExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_commandLineOptionMap var_boolOptionMap ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_commandLineOptionMap var_uintOptionMap ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_commandLineOptionMap var_stringOptionMap ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis.method_searchKey (object->mAttribute_mOptionComponentName, var_boolOptionMap, var_uintOptionMap, var_stringOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (752)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_found = var_boolOptionMap.reader_hasKey (object->mAttribute_mOptionEntryName.reader_string (SOURCE_FILE_AT_LINE (758)) COMMA_SOURCE_FILE_AT_LINE (758)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_returnedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (760)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @assignmentInstructionForGeneration
    var_found = var_uintOptionMap.reader_hasKey (object->mAttribute_mOptionEntryName.reader_string (SOURCE_FILE_AT_LINE (761)) COMMA_SOURCE_FILE_AT_LINE (761)) ;
    //-------- @assignmentInstructionForGeneration
    var_returnedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType ;
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_1 = var_found.operator_not (SOURCE_FILE_AT_LINE (764)).boolEnum () ;
  if (kBoolTrue == test_1) {
    //-------- @assignmentInstructionForGeneration
    var_found = var_stringOptionMap.reader_hasKey (object->mAttribute_mOptionEntryName.reader_string (SOURCE_FILE_AT_LINE (765)) COMMA_SOURCE_FILE_AT_LINE (765)) ;
    //-------- @assignmentInstructionForGeneration
    var_returnedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType ;
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_2 = var_found.boolEnum () ;
  if (kBoolTrue == test_2) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, object->mAttribute_mOptionReaderName.reader_string (SOURCE_FILE_AT_LINE (769)).objectCompare (GALGAS_string ("value"))).boolEnum () ;
    if (kBoolTrue == test_3) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_optionValueExpressionForGeneration::constructor_new (var_returnedType, object->mAttribute_mOptionComponentName.reader_location (SOURCE_FILE_AT_LINE (772)), object->mAttribute_mOptionComponentName.reader_string (SOURCE_FILE_AT_LINE (773)), object->mAttribute_mOptionEntryName.reader_string (SOURCE_FILE_AT_LINE (774)) COMMA_SOURCE_FILE_AT_LINE (770)) ;
    }else if (kBoolFalse == test_3) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, object->mAttribute_mOptionReaderName.reader_string (SOURCE_FILE_AT_LINE (776)).objectCompare (GALGAS_string ("char"))).boolEnum () ;
      if (kBoolTrue == test_4) {
        //-------- @assignmentInstructionForGeneration
        outArgument_outExpression = GALGAS_optionCharExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mCharType, object->mAttribute_mOptionComponentName.reader_location (SOURCE_FILE_AT_LINE (779)), object->mAttribute_mOptionComponentName.reader_string (SOURCE_FILE_AT_LINE (780)), object->mAttribute_mOptionEntryName.reader_string (SOURCE_FILE_AT_LINE (781)) COMMA_SOURCE_FILE_AT_LINE (777)) ;
      }else if (kBoolFalse == test_4) {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, object->mAttribute_mOptionReaderName.reader_string (SOURCE_FILE_AT_LINE (783)).objectCompare (GALGAS_string ("string"))).boolEnum () ;
        if (kBoolTrue == test_5) {
          //-------- @assignmentInstructionForGeneration
          outArgument_outExpression = GALGAS_optionStringExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType, object->mAttribute_mOptionComponentName.reader_location (SOURCE_FILE_AT_LINE (786)), object->mAttribute_mOptionComponentName.reader_string (SOURCE_FILE_AT_LINE (787)), object->mAttribute_mOptionEntryName.reader_string (SOURCE_FILE_AT_LINE (788)) COMMA_SOURCE_FILE_AT_LINE (784)) ;
        }else if (kBoolFalse == test_5) {
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, object->mAttribute_mOptionReaderName.reader_string (SOURCE_FILE_AT_LINE (790)).objectCompare (GALGAS_string ("comment"))).boolEnum () ;
          if (kBoolTrue == test_6) {
            //-------- @assignmentInstructionForGeneration
            outArgument_outExpression = GALGAS_optionCommentExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType, object->mAttribute_mOptionComponentName.reader_location (SOURCE_FILE_AT_LINE (793)), object->mAttribute_mOptionComponentName.reader_string (SOURCE_FILE_AT_LINE (794)), object->mAttribute_mOptionEntryName.reader_string (SOURCE_FILE_AT_LINE (795)) COMMA_SOURCE_FILE_AT_LINE (791)) ;
          }else if (kBoolFalse == test_6) {
            //-------- @errorInstructionForGeneration
            GALGAS_location location_7 (object->mAttribute_mOptionReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_7, GALGAS_string ("only the 'value', 'char', 'string' and 'comment' readers are defined for an option") COMMA_SOURCE_FILE_AT_LINE (798)) ;
            outArgument_outExpression.drop () ; // Release error dropped variable
          }
        }
      }
    }
  }else if (kBoolFalse == test_2) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_commandLineOptionMap enumerator_45696 (var_boolOptionMap, kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_45696.hasCurrentObject ()) {
      //-------- @concatInstructionForGeneration
      var_s.dotAssign_operation (GALGAS_string ("\n"
        "-  '").operator_concat (enumerator_45696.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (803)) COMMA_SOURCE_FILE_AT_LINE (803)).operator_concat (GALGAS_string ("' @bool option;") COMMA_SOURCE_FILE_AT_LINE (803)) COMMA_SOURCE_FILE_AT_LINE (803)) ;
      enumerator_45696.gotoNextObject () ;
    }
    //-------- @foreachInstructionForGeneration
    cEnumerator_commandLineOptionMap enumerator_45792 (var_uintOptionMap, kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_45792.hasCurrentObject ()) {
      //-------- @concatInstructionForGeneration
      var_s.dotAssign_operation (GALGAS_string ("\n"
        "-  '").operator_concat (enumerator_45792.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (806)) COMMA_SOURCE_FILE_AT_LINE (806)).operator_concat (GALGAS_string ("' @uint option;") COMMA_SOURCE_FILE_AT_LINE (806)) COMMA_SOURCE_FILE_AT_LINE (806)) ;
      enumerator_45792.gotoNextObject () ;
    }
    //-------- @foreachInstructionForGeneration
    cEnumerator_commandLineOptionMap enumerator_45890 (var_stringOptionMap, kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_45890.hasCurrentObject ()) {
      //-------- @concatInstructionForGeneration
      var_s.dotAssign_operation (GALGAS_string ("\n"
        "-  '").operator_concat (enumerator_45890.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (809)) COMMA_SOURCE_FILE_AT_LINE (809)).operator_concat (GALGAS_string ("' @string option;") COMMA_SOURCE_FILE_AT_LINE (809)) COMMA_SOURCE_FILE_AT_LINE (809)) ;
      enumerator_45890.gotoNextObject () ;
    }
    //-------- @errorInstructionForGeneration
    GALGAS_location location_8 (object->mAttribute_mOptionEntryName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_8, GALGAS_string ("the '").operator_concat (object->mAttribute_mOptionComponentName.reader_string (SOURCE_FILE_AT_LINE (812)) COMMA_SOURCE_FILE_AT_LINE (812)).operator_concat (GALGAS_string ("' option component does not define the '") COMMA_SOURCE_FILE_AT_LINE (812)).operator_concat (object->mAttribute_mOptionEntryName.reader_string (SOURCE_FILE_AT_LINE (812)) COMMA_SOURCE_FILE_AT_LINE (812)).operator_concat (GALGAS_string ("' option; available options:") COMMA_SOURCE_FILE_AT_LINE (812)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (812)) COMMA_SOURCE_FILE_AT_LINE (811)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_optionExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_optionExpressionAST.mSlotID,
                                                 categoryMethod_optionExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_optionExpressionAST_analyzeSemanticExpression (defineCategoryMethod_optionExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@concatExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_concatExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                          const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                          GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                          GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_concatExpressionAST * object = (const cPtr_concatExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_concatExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (891)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (894)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (896)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (899)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (900)).operator_and (function_binaryConcatOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (900)) COMMA_SOURCE_FILE_AT_LINE (900)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("."), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (897)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_concatExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (906)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_concatExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_concatExpressionAST.mSlotID,
                                                 categoryMethod_concatExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_concatExpressionAST_analyzeSemanticExpression (defineCategoryMethod_concatExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@orExpressionAST analyzeSemanticExpression'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_orExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                      const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                      GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                      GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_orExpressionAST * object = (const cPtr_orExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_orExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (923)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (926)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (928)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (931)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (932)).operator_and (function_binaryOrOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (932)) COMMA_SOURCE_FILE_AT_LINE (932)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("|"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (929)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_orExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (938)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_orExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_orExpressionAST.mSlotID,
                                                 categoryMethod_orExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_orExpressionAST_analyzeSemanticExpression (defineCategoryMethod_orExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@andExpressionAST analyzeSemanticExpression'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_andExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                       GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_andExpressionAST * object = (const cPtr_andExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_andExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (955)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (958)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (960)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (963)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (964)).operator_and (function_binaryAndOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (964)) COMMA_SOURCE_FILE_AT_LINE (964)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("&"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (961)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_andExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (970)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_andExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_andExpressionAST.mSlotID,
                                                 categoryMethod_andExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_andExpressionAST_analyzeSemanticExpression (defineCategoryMethod_andExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@xorExpressionAST analyzeSemanticExpression'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_xorExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                       GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_xorExpressionAST * object = (const cPtr_xorExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_xorExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (987)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (990)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (992)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (995)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (996)).operator_and (function_binaryXorOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (996)) COMMA_SOURCE_FILE_AT_LINE (996)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("^"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (993)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_xorExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1002)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_xorExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_xorExpressionAST.mSlotID,
                                                 categoryMethod_xorExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_xorExpressionAST_analyzeSemanticExpression (defineCategoryMethod_xorExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@equalExpressionAST analyzeSemanticExpression' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_equalExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                         const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                         GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                         GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_equalExpressionAST * object = (const cPtr_equalExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_equalExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1019)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1022)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1024)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1025)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_leftType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (1026)).reader_string (SOURCE_FILE_AT_LINE (1026)).objectCompare (var_rightType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (1026)).reader_string (SOURCE_FILE_AT_LINE (1026)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (1028)).reader_string (SOURCE_FILE_AT_LINE (1028)) COMMA_SOURCE_FILE_AT_LINE (1028)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1028)).operator_concat (var_rightType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (1028)).reader_string (SOURCE_FILE_AT_LINE (1028)) COMMA_SOURCE_FILE_AT_LINE (1028)).operator_concat (GALGAS_string ("': '==' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (1028)) COMMA_SOURCE_FILE_AT_LINE (1027)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_equalExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1033)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_equalExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_equalExpressionAST.mSlotID,
                                                 categoryMethod_equalExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_equalExpressionAST_analyzeSemanticExpression (defineCategoryMethod_equalExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@notEqualExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_notEqualExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                            const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                            GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                            GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_notEqualExpressionAST * object = (const cPtr_notEqualExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_notEqualExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1051)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1054)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1056)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1057)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_leftType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (1058)).reader_string (SOURCE_FILE_AT_LINE (1058)).objectCompare (var_rightType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (1058)).reader_string (SOURCE_FILE_AT_LINE (1058)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1060)) COMMA_SOURCE_FILE_AT_LINE (1060)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1060)).operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1060)) COMMA_SOURCE_FILE_AT_LINE (1060)).operator_concat (GALGAS_string ("': '!=' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (1060)) COMMA_SOURCE_FILE_AT_LINE (1059)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_notEqualExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1065)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_notEqualExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_notEqualExpressionAST.mSlotID,
                                                 categoryMethod_notEqualExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_notEqualExpressionAST_analyzeSemanticExpression (defineCategoryMethod_notEqualExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@lowerOrEqualExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_lowerOrEqualExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_lowerOrEqualExpressionAST * object = (const cPtr_lowerOrEqualExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lowerOrEqualExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1083)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1086)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1088)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1089)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1090)).operator_and (function_isComparable (inCompiler COMMA_SOURCE_FILE_AT_LINE (1090)) COMMA_SOURCE_FILE_AT_LINE (1090)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1092)) COMMA_SOURCE_FILE_AT_LINE (1092)).operator_concat (GALGAS_string ("' and does not support the '<=' operator") COMMA_SOURCE_FILE_AT_LINE (1092)) COMMA_SOURCE_FILE_AT_LINE (1091)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1095)).objectCompare (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1095)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1097)) COMMA_SOURCE_FILE_AT_LINE (1097)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1097)).operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1097)) COMMA_SOURCE_FILE_AT_LINE (1097)).operator_concat (GALGAS_string ("': '<=' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (1097)) COMMA_SOURCE_FILE_AT_LINE (1096)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_1) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_lowerOrEqualExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1102)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_lowerOrEqualExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_lowerOrEqualExpressionAST.mSlotID,
                                                 categoryMethod_lowerOrEqualExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_lowerOrEqualExpressionAST_analyzeSemanticExpression (defineCategoryMethod_lowerOrEqualExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@greaterOrEqualExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_greaterOrEqualExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                  const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                  GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                  GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_greaterOrEqualExpressionAST * object = (const cPtr_greaterOrEqualExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_greaterOrEqualExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1120)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1123)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1125)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1126)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1127)).operator_and (function_isComparable (inCompiler COMMA_SOURCE_FILE_AT_LINE (1127)) COMMA_SOURCE_FILE_AT_LINE (1127)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1129)) COMMA_SOURCE_FILE_AT_LINE (1129)).operator_concat (GALGAS_string ("' and does not support the '>=' operator") COMMA_SOURCE_FILE_AT_LINE (1129)) COMMA_SOURCE_FILE_AT_LINE (1128)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1132)).objectCompare (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1132)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1134)) COMMA_SOURCE_FILE_AT_LINE (1134)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1134)).operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1134)) COMMA_SOURCE_FILE_AT_LINE (1134)).operator_concat (GALGAS_string ("': '>=' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (1134)) COMMA_SOURCE_FILE_AT_LINE (1133)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_1) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_greaterOrEqualExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1139)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_greaterOrEqualExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_greaterOrEqualExpressionAST.mSlotID,
                                                 categoryMethod_greaterOrEqualExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_greaterOrEqualExpressionAST_analyzeSemanticExpression (defineCategoryMethod_greaterOrEqualExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@strictGreaterExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_strictGreaterExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                 const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                 GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                 GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_strictGreaterExpressionAST * object = (const cPtr_strictGreaterExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_strictGreaterExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1157)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1160)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1162)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1163)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1164)).operator_and (function_isComparable (inCompiler COMMA_SOURCE_FILE_AT_LINE (1164)) COMMA_SOURCE_FILE_AT_LINE (1164)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1166)) COMMA_SOURCE_FILE_AT_LINE (1166)).operator_concat (GALGAS_string ("' and does not support the '>' operator") COMMA_SOURCE_FILE_AT_LINE (1166)) COMMA_SOURCE_FILE_AT_LINE (1165)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1169)).objectCompare (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1169)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1171)) COMMA_SOURCE_FILE_AT_LINE (1171)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1171)).operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1171)) COMMA_SOURCE_FILE_AT_LINE (1171)).operator_concat (GALGAS_string ("': '>' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (1171)) COMMA_SOURCE_FILE_AT_LINE (1170)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_1) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_strictGreaterExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1176)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_strictGreaterExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_strictGreaterExpressionAST.mSlotID,
                                                 categoryMethod_strictGreaterExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_strictGreaterExpressionAST_analyzeSemanticExpression (defineCategoryMethod_strictGreaterExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@strictLowerExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_strictLowerExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                               const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_strictLowerExpressionAST * object = (const cPtr_strictLowerExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_strictLowerExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1194)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1197)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1199)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1200)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1201)).operator_and (function_isComparable (inCompiler COMMA_SOURCE_FILE_AT_LINE (1201)) COMMA_SOURCE_FILE_AT_LINE (1201)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1203)) COMMA_SOURCE_FILE_AT_LINE (1203)).operator_concat (GALGAS_string ("' and does not support the '<' operator") COMMA_SOURCE_FILE_AT_LINE (1203)) COMMA_SOURCE_FILE_AT_LINE (1202)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1206)).objectCompare (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1206)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1208)) COMMA_SOURCE_FILE_AT_LINE (1208)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1208)).operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1208)) COMMA_SOURCE_FILE_AT_LINE (1208)).operator_concat (GALGAS_string ("': '<' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (1208)) COMMA_SOURCE_FILE_AT_LINE (1207)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_1) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_strictLowerExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1213)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_strictLowerExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_strictLowerExpressionAST.mSlotID,
                                                 categoryMethod_strictLowerExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_strictLowerExpressionAST_analyzeSemanticExpression (defineCategoryMethod_strictLowerExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@rightShiftExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_rightShiftExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                              const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                              GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                              GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_rightShiftExpressionAST * object = (const cPtr_rightShiftExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_rightShiftExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1231)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1234)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1236)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1237)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1238)).operator_and (function_binaryShiftOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1238)) COMMA_SOURCE_FILE_AT_LINE (1238)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1240)) COMMA_SOURCE_FILE_AT_LINE (1240)).operator_concat (GALGAS_string ("' and does not support a shift operator") COMMA_SOURCE_FILE_AT_LINE (1240)) COMMA_SOURCE_FILE_AT_LINE (1239)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1243)).objectCompare (GALGAS_string ("uint"))).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("for a shift operator, right operand type should be '@uint': it is '@").operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1245)) COMMA_SOURCE_FILE_AT_LINE (1245)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1245)) COMMA_SOURCE_FILE_AT_LINE (1244)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_1) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_rightShiftExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1250)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_rightShiftExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_rightShiftExpressionAST.mSlotID,
                                                 categoryMethod_rightShiftExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_rightShiftExpressionAST_analyzeSemanticExpression (defineCategoryMethod_rightShiftExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@leftShiftExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_leftShiftExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                             const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                             GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                             GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_leftShiftExpressionAST * object = (const cPtr_leftShiftExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_leftShiftExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1268)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1271)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1273)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1274)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1275)).operator_and (function_binaryShiftOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1275)) COMMA_SOURCE_FILE_AT_LINE (1275)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1277)) COMMA_SOURCE_FILE_AT_LINE (1277)).operator_concat (GALGAS_string ("' and does not support a shift operator") COMMA_SOURCE_FILE_AT_LINE (1277)) COMMA_SOURCE_FILE_AT_LINE (1276)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1280)).objectCompare (GALGAS_string ("uint"))).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("for a shift operator, right operand type should be '@uint': it is '@").operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1282)) COMMA_SOURCE_FILE_AT_LINE (1282)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1282)) COMMA_SOURCE_FILE_AT_LINE (1281)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_1) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_leftShiftExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1287)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_leftShiftExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_leftShiftExpressionAST.mSlotID,
                                                 categoryMethod_leftShiftExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_leftShiftExpressionAST_analyzeSemanticExpression (defineCategoryMethod_leftShiftExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@addExpressionAST analyzeSemanticExpression'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_addExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                       GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_addExpressionAST * object = (const cPtr_addExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_addExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1305)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1308)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1310)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1313)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1314)).operator_and (function_binaryAddOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1314)) COMMA_SOURCE_FILE_AT_LINE (1314)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("+"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1311)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_addExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1320)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_addExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_addExpressionAST.mSlotID,
                                                 categoryMethod_addExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_addExpressionAST_analyzeSemanticExpression (defineCategoryMethod_addExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@subExpressionAST analyzeSemanticExpression'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_subExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                       GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_subExpressionAST * object = (const cPtr_subExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_subExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1337)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1340)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1342)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1345)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1346)).operator_and (function_binarySubOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1346)) COMMA_SOURCE_FILE_AT_LINE (1346)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("-"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1343)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_subExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1352)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_subExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_subExpressionAST.mSlotID,
                                                 categoryMethod_subExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_subExpressionAST_analyzeSemanticExpression (defineCategoryMethod_subExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@multiplicationExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_multiplicationExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                  const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                  GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                  GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_multiplicationExpressionAST * object = (const cPtr_multiplicationExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_multiplicationExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1369)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1372)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1374)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1377)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1378)).operator_and (function_binaryMulOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1378)) COMMA_SOURCE_FILE_AT_LINE (1378)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("*"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1375)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_multiplicationExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1384)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_multiplicationExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_multiplicationExpressionAST.mSlotID,
                                                 categoryMethod_multiplicationExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiplicationExpressionAST_analyzeSemanticExpression (defineCategoryMethod_multiplicationExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@divisionExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_divisionExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                            const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                            GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                            GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_divisionExpressionAST * object = (const cPtr_divisionExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_divisionExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1401)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1404)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1406)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1409)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1410)).operator_and (function_binaryDivOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1410)) COMMA_SOURCE_FILE_AT_LINE (1410)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("/"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1407)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_divisionExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1416)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_divisionExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_divisionExpressionAST.mSlotID,
                                                 categoryMethod_divisionExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_divisionExpressionAST_analyzeSemanticExpression (defineCategoryMethod_divisionExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@moduloExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_moduloExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                          const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                          GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                          GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_moduloExpressionAST * object = (const cPtr_moduloExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_moduloExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1433)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1436)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1438)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1441)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1442)).operator_and (function_binaryModOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1442)) COMMA_SOURCE_FILE_AT_LINE (1442)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("mod"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1439)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_moduloExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1448)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_moduloExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_moduloExpressionAST.mSlotID,
                                                 categoryMethod_moduloExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_moduloExpressionAST_analyzeSemanticExpression (defineCategoryMethod_moduloExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@unaryMinusExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_unaryMinusExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                              const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                              GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                              GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_unaryMinusExpressionAST * object = (const cPtr_unaryMinusExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_unaryMinusExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1465)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_type = var_expression.reader_mType (SOURCE_FILE_AT_LINE (1467)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_type.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1468)).operator_and (function_unaryMinusOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1468)) COMMA_SOURCE_FILE_AT_LINE (1468)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("operand type is '@").operator_concat (var_type.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1470)) COMMA_SOURCE_FILE_AT_LINE (1470)).operator_concat (GALGAS_string ("' and does not support the unary minus operator") COMMA_SOURCE_FILE_AT_LINE (1470)) COMMA_SOURCE_FILE_AT_LINE (1469)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_unaryMinusExpressionForGeneration::constructor_new (var_type, object->mAttribute_mOperatorLocation, var_expression COMMA_SOURCE_FILE_AT_LINE (1475)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_unaryMinusExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_unaryMinusExpressionAST.mSlotID,
                                                 categoryMethod_unaryMinusExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_unaryMinusExpressionAST_analyzeSemanticExpression (defineCategoryMethod_unaryMinusExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@notExpressionAST analyzeSemanticExpression'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_notExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                       GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_notExpressionAST * object = (const cPtr_notExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_notExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1492)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_type = var_expression.reader_mType (SOURCE_FILE_AT_LINE (1494)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_type.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1495)).operator_and (function_unaryNotOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1495)) COMMA_SOURCE_FILE_AT_LINE (1495)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("operand type is '@").operator_concat (var_type.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1497)) COMMA_SOURCE_FILE_AT_LINE (1497)).operator_concat (GALGAS_string ("' and does not support the 'not' operator") COMMA_SOURCE_FILE_AT_LINE (1497)) COMMA_SOURCE_FILE_AT_LINE (1496)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_notExpressionForGeneration::constructor_new (var_type, object->mAttribute_mOperatorLocation, var_expression COMMA_SOURCE_FILE_AT_LINE (1502)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_notExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_notExpressionAST.mSlotID,
                                                 categoryMethod_notExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_notExpressionAST_analyzeSemanticExpression (defineCategoryMethod_notExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@structFieldAccessExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_structFieldAccessExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                     const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                     GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                     GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_structFieldAccessExpressionAST * object = (const cPtr_structFieldAccessExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_structFieldAccessExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1519)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_type = var_expression.reader_mType (SOURCE_FILE_AT_LINE (1521)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_type.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1522)).objectCompare (GALGAS_typeKindEnum::constructor_structType (SOURCE_FILE_AT_LINE (1522)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (object->mAttribute_mStructFieldName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the '->' operator requires the receiver to be a struct") COMMA_SOURCE_FILE_AT_LINE (1523)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_attributeMap var_attributeMap = var_type.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1525)) ;
  //-------- @methodCallInstructionForGeneration
  var_attributeMap.method_searchKey (object->mAttribute_mStructFieldName, var_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (1526)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_structFieldAccessExpressionForGeneration::constructor_new (var_type, object->mAttribute_mOperatorLocation, var_expression, object->mAttribute_mStructFieldName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1528)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_structFieldAccessExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_structFieldAccessExpressionAST.mSlotID,
                                                 categoryMethod_structFieldAccessExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_structFieldAccessExpressionAST_analyzeSemanticExpression (defineCategoryMethod_structFieldAccessExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@complementExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_complementExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                              const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                              GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                              GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_complementExpressionAST * object = (const cPtr_complementExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_complementExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1545)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_type = var_expression.reader_mType (SOURCE_FILE_AT_LINE (1547)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_type.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1548)).operator_and (function_unaryTildeOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1548)) COMMA_SOURCE_FILE_AT_LINE (1548)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("operand type is '@").operator_concat (var_type.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1550)) COMMA_SOURCE_FILE_AT_LINE (1550)).operator_concat (GALGAS_string ("' and does not support the '~' operator") COMMA_SOURCE_FILE_AT_LINE (1550)) COMMA_SOURCE_FILE_AT_LINE (1549)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_tildeExpressionForGeneration::constructor_new (var_type, object->mAttribute_mOperatorLocation, var_expression COMMA_SOURCE_FILE_AT_LINE (1555)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_complementExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_complementExpressionAST.mSlotID,
                                                 categoryMethod_complementExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_complementExpressionAST_analyzeSemanticExpression (defineCategoryMethod_complementExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@ifExpressionAST analyzeSemanticExpression'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ifExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                      const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                      GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                      GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ifExpressionAST * object = (const cPtr_ifExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_ifExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_if_5F_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mIfExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_if_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1572)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_then_5F_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mThenExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_then_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1575)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_else_5F_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mElseExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_else_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1578)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_if_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (1580)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1580)).objectCompare (GALGAS_string ("bool"))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("the test expression type is '@").operator_concat (var_if_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (1582)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1582)) COMMA_SOURCE_FILE_AT_LINE (1582)).operator_concat (GALGAS_string ("', it should be '@bool'") COMMA_SOURCE_FILE_AT_LINE (1582)) COMMA_SOURCE_FILE_AT_LINE (1581)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_then_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (1585)).objectCompare (var_else_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (1585)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("operand expression types are '@").operator_concat (var_then_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (1587)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1587)) COMMA_SOURCE_FILE_AT_LINE (1587)).operator_concat (GALGAS_string ("' and '@") COMMA_SOURCE_FILE_AT_LINE (1587)).operator_concat (var_else_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (1587)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1587)) COMMA_SOURCE_FILE_AT_LINE (1587)).operator_concat (GALGAS_string ("': they should be the same") COMMA_SOURCE_FILE_AT_LINE (1587)) COMMA_SOURCE_FILE_AT_LINE (1586)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_1) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_ifExpressionForGeneration::constructor_new (var_then_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (1593)), object->mAttribute_mOperatorLocation, var_if_5F_expression, var_then_5F_expression, var_else_5F_expression COMMA_SOURCE_FILE_AT_LINE (1592)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ifExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_ifExpressionAST.mSlotID,
                                                 categoryMethod_ifExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ifExpressionAST_analyzeSemanticExpression (defineCategoryMethod_ifExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@functionCallExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_functionCallExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_functionCallExpressionAST * object = (const cPtr_functionCallExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_functionCallExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxyList var_functionSignature ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_resultType ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mFunctionMap.method_searchKey (object->mAttribute_mFunctionName, var_functionSignature, var_resultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1612)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_functionSignature.reader_length (SOURCE_FILE_AT_LINE (1614)).objectCompare (object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (1614)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (object->mAttribute_mFunctionName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (1616)) COMMA_SOURCE_FILE_AT_LINE (1616)).operator_concat (GALGAS_string ("' function header declares ") COMMA_SOURCE_FILE_AT_LINE (1616)).operator_concat (var_functionSignature.reader_length (SOURCE_FILE_AT_LINE (1616)).reader_string (SOURCE_FILE_AT_LINE (1616)) COMMA_SOURCE_FILE_AT_LINE (1616)).operator_concat (GALGAS_string (" formal parameter(s), but this function call names ") COMMA_SOURCE_FILE_AT_LINE (1617)).operator_concat (object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (1617)).reader_string (SOURCE_FILE_AT_LINE (1617)) COMMA_SOURCE_FILE_AT_LINE (1617)).operator_concat (GALGAS_string (" effective argument(s)") COMMA_SOURCE_FILE_AT_LINE (1618)) COMMA_SOURCE_FILE_AT_LINE (1615)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_semanticExpressionListForGeneration var_semanticExpressionListForGeneration = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1622)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_unifiedTypeMapProxyList enumerator_76321 (var_functionSignature, kEnumeration_up) ;
    cEnumerator_semanticExpressionListAST enumerator_76337 (object->mAttribute_mExpressions, kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_76321.hasCurrentObject () && enumerator_76337.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_semanticExpressionForGeneration var_expression ;
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_76337.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1625)) ;
      //-------- END @methodCallInstructionForGeneration
      { //-------- @routineCallInstructionForGeneration
      routine_checkAssignmentTypes (enumerator_76321.current_mType (HERE), var_expression.reader_mType (SOURCE_FILE_AT_LINE (1626)), enumerator_76337.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1626)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @plusEqualnstructionForGeneration
      var_semanticExpressionListForGeneration.addAssign_operation (var_expression COMMA_SOURCE_FILE_AT_LINE (1627)) ;
      enumerator_76321.gotoNextObject () ;
      enumerator_76337.gotoNextObject () ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_functionCallExpressionForGeneration::constructor_new (var_resultType, object->mAttribute_mFunctionName.reader_location (SOURCE_FILE_AT_LINE (1631)), object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (1632)), var_semanticExpressionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1629)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_functionCallExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_functionCallExpressionAST.mSlotID,
                                                 categoryMethod_functionCallExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_functionCallExpressionAST_analyzeSemanticExpression (defineCategoryMethod_functionCallExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@varInExpressionAST analyzeSemanticExpression' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_varInExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                         const GALGAS_analysisContext /* constinArgument_inAnalysisContext */,
                                                                         GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                         GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_varInExpressionAST * object = (const cPtr_varInExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_varInExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_type ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_sourceVariableCppName ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_nameForCheckingFormalParameterUsing ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_searchForReadAccess (object->mAttribute_mVarName, var_type, var_sourceVariableCppName, var_nameForCheckingFormalParameterUsing, inCompiler COMMA_SOURCE_FILE_AT_LINE (1648)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_varInExpressionForGeneration::constructor_new (var_type, object->mAttribute_mVarName.reader_location (SOURCE_FILE_AT_LINE (1651)), var_sourceVariableCppName, var_nameForCheckingFormalParameterUsing COMMA_SOURCE_FILE_AT_LINE (1649)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_varInExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_varInExpressionAST.mSlotID,
                                                 categoryMethod_varInExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_varInExpressionAST_analyzeSemanticExpression (defineCategoryMethod_varInExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@literalTypeInExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_literalTypeInExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                 const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                 GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                 GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_literalTypeInExpressionAST * object = (const cPtr_literalTypeInExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_literalTypeInExpressionAST) ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_bool joker_77937_21 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_77937_20 ; // Joker input parameter
  GALGAS_typeKindEnum joker_77937_19 ; // Joker input parameter
  GALGAS_typedAttributeList joker_77937_18 ; // Joker input parameter
  GALGAS_attributeMap joker_77937_17 ; // Joker input parameter
  GALGAS_typedAttributeList joker_77937_16 ; // Joker input parameter
  GALGAS_constructorMap joker_77937_15 ; // Joker input parameter
  GALGAS_readerMap joker_77937_14 ; // Joker input parameter
  GALGAS_modifierMap joker_77937_13 ; // Joker input parameter
  GALGAS_instanceMethodMap joker_77937_12 ; // Joker input parameter
  GALGAS_classMethodMap joker_77937_11 ; // Joker input parameter
  GALGAS_enumerationDescriptorList joker_77937_10 ; // Joker input parameter
  GALGAS_stringlist joker_77937_9 ; // Joker input parameter
  GALGAS_uint joker_77937_8 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxyList joker_77937_7 ; // Joker input parameter
  GALGAS_stringset joker_77937_6 ; // Joker input parameter
  GALGAS_lstringlist joker_77937_5 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_77937_4 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_77937_3 ; // Joker input parameter
  GALGAS_withAccessorMap joker_77937_2 ; // Joker input parameter
  GALGAS_bool joker_77937_1 ; // Joker input parameter
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap.method_searchKey (object->mAttribute_mLiteralTypeName, joker_77937_21, joker_77937_20, joker_77937_19, joker_77937_18, joker_77937_17, joker_77937_16, joker_77937_15, joker_77937_14, joker_77937_13, joker_77937_12, joker_77937_11, joker_77937_10, joker_77937_9, joker_77937_8, joker_77937_7, joker_77937_6, joker_77937_5, joker_77937_4, joker_77937_3, joker_77937_2, joker_77937_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1665)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalTypeInExpressionForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("type"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1668)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1668)), object->mAttribute_mLiteralTypeName.reader_location (SOURCE_FILE_AT_LINE (1669)), object->mAttribute_mLiteralTypeName.reader_string (SOURCE_FILE_AT_LINE (1670)) COMMA_SOURCE_FILE_AT_LINE (1667)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_literalTypeInExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_literalTypeInExpressionAST.mSlotID,
                                                 categoryMethod_literalTypeInExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_literalTypeInExpressionAST_analyzeSemanticExpression (defineCategoryMethod_literalTypeInExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@castInExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_castInExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                          const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                          GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                          GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_castInExpressionAST * object = (const cPtr_castInExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_castInExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mReceiverExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1683)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_unifiedTypeMapProxy var_type = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1685)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_expression.reader_mType (SOURCE_FILE_AT_LINE (1687)).reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1687)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1687)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_unifiedTypeMapProxy var_t = var_type ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_bool var_found = GALGAS_bool (kIsEqual, var_t.objectCompare (var_expression.reader_mType (SOURCE_FILE_AT_LINE (1690)))) ;
    //-------- @loopInstructionForGeneration
    if (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1691)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1691)).isValid ()) {
      PMUInt32 variant_79064 = constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1691)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1691)).uintValue () ;
      bool loop_79064 = true ;
      while (loop_79064) {
        loop_79064 = var_found.operator_not (SOURCE_FILE_AT_LINE (1692)).operator_and (var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1692)).reader_isNull (SOURCE_FILE_AT_LINE (1692)).operator_not (SOURCE_FILE_AT_LINE (1692)) COMMA_SOURCE_FILE_AT_LINE (1692)).isValid () ;
        if (loop_79064) {
          loop_79064 = var_found.operator_not (SOURCE_FILE_AT_LINE (1692)).operator_and (var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1692)).reader_isNull (SOURCE_FILE_AT_LINE (1692)).operator_not (SOURCE_FILE_AT_LINE (1692)) COMMA_SOURCE_FILE_AT_LINE (1692)).boolValue () ;
        }
        if (loop_79064 && (0 == variant_79064)) {
          loop_79064 = false ;
          inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1691)) ;
        }
        if (loop_79064) {
          variant_79064 -- ;
          //-------- @assignmentInstructionForGeneration
          var_t = var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1693)) ;
          //-------- @assignmentInstructionForGeneration
          var_found = GALGAS_bool (kIsEqual, var_t.objectCompare (var_expression.reader_mType (SOURCE_FILE_AT_LINE (1694)))) ;
        }
      }
    }
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = var_found.operator_not (SOURCE_FILE_AT_LINE (1696)).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_2 (object->mAttribute_mTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("the '@").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1698)) COMMA_SOURCE_FILE_AT_LINE (1698)).operator_concat (GALGAS_string ("' is not a descendant of the '@") COMMA_SOURCE_FILE_AT_LINE (1698)).operator_concat (var_expression.reader_mType (SOURCE_FILE_AT_LINE (1698)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1698)) COMMA_SOURCE_FILE_AT_LINE (1698)).operator_concat (GALGAS_string ("' type of the cast expression") COMMA_SOURCE_FILE_AT_LINE (1698)) COMMA_SOURCE_FILE_AT_LINE (1697)) ;
    }
  }else if (kBoolFalse == test_0) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_expression.reader_mType (SOURCE_FILE_AT_LINE (1701)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1701)).objectCompare (GALGAS_string ("object"))).boolEnum () ;
    if (kBoolTrue == test_3) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (var_expression.reader_mLocation (SOURCE_FILE_AT_LINE (1702)), GALGAS_string ("cast expression should be an @object or a class instance: it is an @").operator_concat (var_expression.reader_mType (SOURCE_FILE_AT_LINE (1703)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1703)) COMMA_SOURCE_FILE_AT_LINE (1703)).operator_concat (GALGAS_string (" instance") COMMA_SOURCE_FILE_AT_LINE (1703)) COMMA_SOURCE_FILE_AT_LINE (1702)) ;
    }
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_errorLocationExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mErrorLocationExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_errorLocationExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1707)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_useLocationReader = GALGAS_bool (kIsNotEqual, var_errorLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (1709)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLocationType)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_4 = var_useLocationReader.boolEnum () ;
  if (kBoolTrue == test_4) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_readerMap var_readerMap = var_errorLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (1711)).reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1711)) ;
    //-------- @readOnlyWithInstructionForGeneration
    const cMapElement_readerMap * objectArray_80219 = (const cMapElement_readerMap *) var_readerMap.readAccessForWithInstruction_hasKey (GALGAS_string ("location")) ;
    if (NULL != objectArray_80219) {
        macroValidSharedObject (objectArray_80219, const cMapElement_readerMap) ;
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, objectArray_80219->mAttribute_mArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (1713)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_5) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (object->mAttribute_mEndOfErrorLocationExpression, GALGAS_string ("the error location expression type is '@").operator_concat (var_errorLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (1715)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1715)) COMMA_SOURCE_FILE_AT_LINE (1715)).operator_concat (GALGAS_string ("' and defines a 'location' reader with arguments; it should be either of the '@location' type, either defines a 'location' reader without argument that"
          " returns an '@location' object") COMMA_SOURCE_FILE_AT_LINE (1716)) COMMA_SOURCE_FILE_AT_LINE (1714)) ;
      }else if (kBoolFalse == test_5) {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_6 = GALGAS_bool (kIsNotEqual, objectArray_80219->mAttribute_mReturnedType.objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLocationType)).boolEnum () ;
        if (kBoolTrue == test_6) {
          //-------- @errorInstructionForGeneration
          inCompiler->emitSemanticError (object->mAttribute_mEndOfErrorLocationExpression, GALGAS_string ("the error location expression type is '@").operator_concat (var_errorLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (1720)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1720)) COMMA_SOURCE_FILE_AT_LINE (1720)).operator_concat (GALGAS_string ("' and defines a 'location' reader that returns an '@") COMMA_SOURCE_FILE_AT_LINE (1721)).operator_concat (objectArray_80219->mAttribute_mReturnedType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1721)) COMMA_SOURCE_FILE_AT_LINE (1721)).operator_concat (GALGAS_string ("' object; it should be either of the '@location' type, either defines a 'location' reader without argument that returns an '@location' object") COMMA_SOURCE_FILE_AT_LINE (1722)) COMMA_SOURCE_FILE_AT_LINE (1719)) ;
        }
      }
      //-------- @assignmentInstructionForGeneration
      var_errorLocationExpression = GALGAS_readerCallExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLocationType, object->mAttribute_mEndOfErrorLocationExpression, objectArray_80219->mAttribute_mKind, var_errorLocationExpression, GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1730)), GALGAS_string ("location"), GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1732)), objectArray_80219->mAttribute_mHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (1725)) ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mEndOfErrorLocationExpression, GALGAS_string ("the error location expression type is '@").operator_concat (var_errorLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (1737)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1737)) COMMA_SOURCE_FILE_AT_LINE (1737)).operator_concat (GALGAS_string ("' and does not define a 'location' reader; it should be either of the '@location' type, either defines a 'location' reader without argument that return"
        "s an '@location' object") COMMA_SOURCE_FILE_AT_LINE (1738)) COMMA_SOURCE_FILE_AT_LINE (1736)) ;
    }
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, var_expression.reader_mType (SOURCE_FILE_AT_LINE (1743)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1743)).objectCompare (GALGAS_string ("object"))).boolEnum () ;
  if (kBoolTrue == test_7) {
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_extractObjectInExpressionForGeneration::constructor_new (var_type, object->mAttribute_mEndOfReceiverExpression, var_expression, object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1748)), var_errorLocationExpression COMMA_SOURCE_FILE_AT_LINE (1744)) ;
  }else if (kBoolFalse == test_7) {
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_castInExpressionForGeneration::constructor_new (var_type, object->mAttribute_mTypeName.reader_location (SOURCE_FILE_AT_LINE (1754)), var_expression, object->mAttribute_mUseKindOfClass, object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1757)), var_errorLocationExpression COMMA_SOURCE_FILE_AT_LINE (1752)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_castInExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_castInExpressionAST.mSlotID,
                                                 categoryMethod_castInExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_castInExpressionAST_analyzeSemanticExpression (defineCategoryMethod_castInExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@filewrapperObjectInstanciationInExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_filewrapperObjectInstanciationInExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                                    const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                                    GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                                    GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_filewrapperObjectInstanciationInExpressionAST * object = (const cPtr_filewrapperObjectInstanciationInExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_filewrapperObjectInstanciationInExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lstring var_filewrapperPath ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_lstringlist joker_82839_0 ; // Joker input parameter
  GALGAS_wrapperFileMap joker_82842_0 ; // Joker input parameter
  GALGAS_wrapperDirectoryMap joker_82845_0 ; // Joker input parameter
  GALGAS_filewrapperTemplateMap joker_82848_0 ; // Joker input parameter
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mFilewrapperMap.method_searchKey (object->mAttribute_mFilewrapperName, var_filewrapperPath, joker_82839_0, joker_82842_0, joker_82845_0, joker_82848_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1772)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_filewrapperInExpressionForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("filewrapper"), object->mAttribute_mFilewrapperName.reader_location (SOURCE_FILE_AT_LINE (1775)) COMMA_SOURCE_FILE_AT_LINE (1775)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1775)), object->mAttribute_mFilewrapperName.reader_location (SOURCE_FILE_AT_LINE (1776)), object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (1777)), var_filewrapperPath.reader_string (SOURCE_FILE_AT_LINE (1778)) COMMA_SOURCE_FILE_AT_LINE (1774)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_filewrapperObjectInstanciationInExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_filewrapperObjectInstanciationInExpressionAST.mSlotID,
                                                 categoryMethod_filewrapperObjectInstanciationInExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_filewrapperObjectInstanciationInExpressionAST_analyzeSemanticExpression (defineCategoryMethod_filewrapperObjectInstanciationInExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@filewrapperTemplateInExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_filewrapperTemplateInExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                         const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                         GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                         GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_filewrapperTemplateInExpressionAST * object = (const cPtr_filewrapperTemplateInExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_filewrapperTemplateInExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_filewrapperTemplateMap var_filewrapperTemplateMap ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_lstring joker_83599_0 ; // Joker input parameter
  GALGAS_lstringlist joker_83602_0 ; // Joker input parameter
  GALGAS_wrapperFileMap joker_83605_0 ; // Joker input parameter
  GALGAS_wrapperDirectoryMap joker_83608_0 ; // Joker input parameter
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mFilewrapperMap.method_searchKey (object->mAttribute_mFilewrapperName, joker_83599_0, joker_83602_0, joker_83605_0, joker_83608_0, var_filewrapperTemplateMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1791)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxyList var_templateSignature ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_lstring joker_83771_0 ; // Joker input parameter
  var_filewrapperTemplateMap.method_searchKey (object->mAttribute_mFilewrapperTemplateName, var_templateSignature, joker_83771_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1794)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionListForGeneration var_effectiveParameterList ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (1797)).objectCompare (var_templateSignature.reader_length (SOURCE_FILE_AT_LINE (1797)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (object->mAttribute_mFilewrapperTemplateName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("calling the '").operator_concat (object->mAttribute_mFilewrapperTemplateName.reader_string (SOURCE_FILE_AT_LINE (1799)) COMMA_SOURCE_FILE_AT_LINE (1799)).operator_concat (GALGAS_string ("' template of '") COMMA_SOURCE_FILE_AT_LINE (1799)).operator_concat (object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (1799)) COMMA_SOURCE_FILE_AT_LINE (1799)).operator_concat (GALGAS_string ("' filewrapper requires ") COMMA_SOURCE_FILE_AT_LINE (1799)).operator_concat (var_templateSignature.reader_length (SOURCE_FILE_AT_LINE (1800)).reader_string (SOURCE_FILE_AT_LINE (1800)) COMMA_SOURCE_FILE_AT_LINE (1800)).operator_concat (GALGAS_string (" parameter(s), while this call has ") COMMA_SOURCE_FILE_AT_LINE (1800)).operator_concat (object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (1801)).reader_string (SOURCE_FILE_AT_LINE (1801)) COMMA_SOURCE_FILE_AT_LINE (1801)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (1801)) COMMA_SOURCE_FILE_AT_LINE (1798)) ;
    var_effectiveParameterList.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @assignmentInstructionForGeneration
    var_effectiveParameterList = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1804)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_semanticExpressionListAST enumerator_84358 (object->mAttribute_mExpressions, kEnumeration_up) ;
    cEnumerator_unifiedTypeMapProxyList enumerator_84379 (var_templateSignature, kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_84358.hasCurrentObject () && enumerator_84379.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_semanticExpressionForGeneration var_exp ;
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_84358.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_exp, inCompiler COMMA_SOURCE_FILE_AT_LINE (1807)) ;
      //-------- END @methodCallInstructionForGeneration
      { //-------- @routineCallInstructionForGeneration
      routine_checkAssignmentTypes (enumerator_84379.current_mType (HERE), var_exp.reader_mType (SOURCE_FILE_AT_LINE (1808)), enumerator_84358.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1808)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @plusEqualnstructionForGeneration
      var_effectiveParameterList.addAssign_operation (var_exp COMMA_SOURCE_FILE_AT_LINE (1809)) ;
      enumerator_84358.gotoNextObject () ;
      enumerator_84379.gotoNextObject () ;
    }
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_filewrapperTemplateInExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType, object->mAttribute_mFilewrapperName.reader_location (SOURCE_FILE_AT_LINE (1815)), object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (1816)), object->mAttribute_mFilewrapperTemplateName.reader_string (SOURCE_FILE_AT_LINE (1817)), var_effectiveParameterList COMMA_SOURCE_FILE_AT_LINE (1813)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_filewrapperTemplateInExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_filewrapperTemplateInExpressionAST.mSlotID,
                                                 categoryMethod_filewrapperTemplateInExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_filewrapperTemplateInExpressionAST_analyzeSemanticExpression (defineCategoryMethod_filewrapperTemplateInExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@filewrapperInExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_filewrapperInExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                 const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                 GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                 GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_filewrapperInExpressionAST * object = (const cPtr_filewrapperInExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_filewrapperInExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_stringlist var_directoryList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_fileName ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mFilewrapperPath.mAttribute_string.reader_length (SOURCE_FILE_AT_LINE (1832)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (object->mAttribute_mFilewrapperPath.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("path is empty") COMMA_SOURCE_FILE_AT_LINE (1833)) ;
    var_directoryList.drop () ; // Release error dropped variable
    var_fileName.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, object->mAttribute_mFilewrapperPath.mAttribute_string.reader_firstCharacterOrNul (SOURCE_FILE_AT_LINE (1834)).objectCompare (GALGAS_char (TO_UNICODE (47)))).boolEnum () ;
    if (kBoolTrue == test_2) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_3 (object->mAttribute_mFilewrapperPath.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the path should not begin with '/'") COMMA_SOURCE_FILE_AT_LINE (1835)) ;
      var_directoryList.drop () ; // Release error dropped variable
      var_fileName.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_2) {
      //-------- @assignmentInstructionForGeneration
      var_directoryList = object->mAttribute_mFilewrapperPath.mAttribute_string.reader_componentsSeparatedByString (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1837)) ;
      { //-------- @modifierCallInstructionForGeneration
      var_directoryList.modifier_popLast (var_fileName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1838)) ;
      } //-------- END @typeMethodInstructionForGeneration
    }
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_wrapperFileMap var_filewrapperFileMap ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_wrapperDirectoryMap var_filewrapperDirectoryMap ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_lstring joker_85899_0 ; // Joker input parameter
  GALGAS_lstringlist joker_85902_0 ; // Joker input parameter
  GALGAS_filewrapperTemplateMap joker_85950_0 ; // Joker input parameter
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mFilewrapperMap.method_searchKey (object->mAttribute_mFilewrapperName, joker_85899_0, joker_85902_0, var_filewrapperFileMap, var_filewrapperDirectoryMap, joker_85950_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1843)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_builtPath = GALGAS_string::makeEmptyString () ;
  //-------- @loopInstructionForGeneration
  if (var_filewrapperDirectoryMap.reader_count (SOURCE_FILE_AT_LINE (1846)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1846)).isValid ()) {
    PMUInt32 variant_86011 = var_filewrapperDirectoryMap.reader_count (SOURCE_FILE_AT_LINE (1846)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1846)).uintValue () ;
    bool loop_86011 = true ;
    while (loop_86011) {
      loop_86011 = GALGAS_bool (kIsStrictSup, var_directoryList.reader_length (SOURCE_FILE_AT_LINE (1847)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValid () ;
      if (loop_86011) {
        loop_86011 = GALGAS_bool (kIsStrictSup, var_directoryList.reader_length (SOURCE_FILE_AT_LINE (1847)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolValue () ;
      }
      if (loop_86011 && (0 == variant_86011)) {
        loop_86011 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1846)) ;
      }
      if (loop_86011) {
        variant_86011 -- ;
        //-------- @localVariableDeclarationForGeneration
        GALGAS_string var_directoryName ;
        { //-------- @modifierCallInstructionForGeneration
        var_directoryList.modifier_popFirst (var_directoryName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1849)) ;
        } //-------- END @typeMethodInstructionForGeneration
        //-------- @concatInstructionForGeneration
        var_builtPath.dotAssign_operation (var_directoryName.operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1850)) COMMA_SOURCE_FILE_AT_LINE (1850)) ;
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_4 = var_filewrapperDirectoryMap.reader_hasKey (var_directoryName COMMA_SOURCE_FILE_AT_LINE (1851)).boolEnum () ;
        if (kBoolTrue == test_4) {
          //-------- @methodCallInstructionForGeneration
          GALGAS_uint joker_86418_0 ; // Joker input parameter
          var_filewrapperDirectoryMap.method_searchKey (GALGAS_lstring::constructor_new (var_directoryName, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1853)), var_filewrapperFileMap, var_filewrapperDirectoryMap, joker_86418_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1852)) ;
          //-------- END @methodCallInstructionForGeneration
        }else if (kBoolFalse == test_4) {
          //-------- @errorInstructionForGeneration
          GALGAS_location location_5 (object->mAttribute_mFilewrapperPath.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_5, GALGAS_string ("the '").operator_concat (var_builtPath COMMA_SOURCE_FILE_AT_LINE (1859)).operator_concat (GALGAS_string ("' path does not exists for the '") COMMA_SOURCE_FILE_AT_LINE (1859)).operator_concat (object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (1859)) COMMA_SOURCE_FILE_AT_LINE (1859)).operator_concat (GALGAS_string ("' filewrapper") COMMA_SOURCE_FILE_AT_LINE (1859)) COMMA_SOURCE_FILE_AT_LINE (1859)) ;
          var_filewrapperFileMap.drop () ; // Release error dropped variable
          //-------- @assignmentInstructionForGeneration
          var_directoryList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1860)) ;
        }
      }
    }
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_uint var_fileIndex ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_6 = var_filewrapperFileMap.reader_hasKey (var_fileName COMMA_SOURCE_FILE_AT_LINE (1864)).boolEnum () ;
  if (kBoolTrue == test_6) {
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_86817_3 ; // Joker input parameter
    GALGAS_bool joker_86817_2 ; // Joker input parameter
    GALGAS_uint joker_86817_1 ; // Joker input parameter
    var_filewrapperFileMap.method_searchKey (GALGAS_lstring::constructor_new (var_fileName, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1865)), joker_86817_3, joker_86817_2, joker_86817_1, var_fileIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1865)) ;
    //-------- END @methodCallInstructionForGeneration
  }else if (kBoolFalse == test_6) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_7 (object->mAttribute_mFilewrapperPath.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_7, GALGAS_string ("the '").operator_concat (var_fileName COMMA_SOURCE_FILE_AT_LINE (1868)).operator_concat (GALGAS_string ("' file does not exist in the '") COMMA_SOURCE_FILE_AT_LINE (1868)).operator_concat (var_builtPath COMMA_SOURCE_FILE_AT_LINE (1868)).operator_concat (GALGAS_string ("' directory of '") COMMA_SOURCE_FILE_AT_LINE (1868)).operator_concat (object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (1868)) COMMA_SOURCE_FILE_AT_LINE (1868)).operator_concat (GALGAS_string ("' filewrapper") COMMA_SOURCE_FILE_AT_LINE (1868)) COMMA_SOURCE_FILE_AT_LINE (1867)) ;
    var_fileIndex.drop () ; // Release error dropped variable
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_filewrapperStaticPathInExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType, object->mAttribute_mFilewrapperName.reader_location (SOURCE_FILE_AT_LINE (1875)), object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (1876)), var_fileIndex COMMA_SOURCE_FILE_AT_LINE (1873)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_filewrapperInExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_filewrapperInExpressionAST.mSlotID,
                                                 categoryMethod_filewrapperInExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_filewrapperInExpressionAST_analyzeSemanticExpression (defineCategoryMethod_filewrapperInExpressionAST_analyzeSemanticExpression, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


