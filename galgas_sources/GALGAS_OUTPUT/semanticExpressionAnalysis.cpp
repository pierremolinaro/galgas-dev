//---------------------------------------------------------------------------*
//                                                                           *
//                  File 'semanticExpressionAnalysis.cpp'                    *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    november 26th, 2010, at 16h11'41"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "semanticExpressionAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*

#include "optionLL1grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticExpressionAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                       Once function 'selfMarkName'                        *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string onceFunction_selfMarkName (C_Compiler * /* inCompiler */
                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("-self-") ;
//---
  return result_string ;
}



//---------------------------------------------------------------------------*
//  Function implementation                                                  *
//---------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_selfMarkName = false ;
static GALGAS_string gOnceFunctionResult_selfMarkName ;

//---------------------------------------------------------------------------*

GALGAS_string function_selfMarkName (C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_selfMarkName) {
    gOnceFunctionResult_selfMarkName = onceFunction_selfMarkName (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_selfMarkName = true ;
  }
  return gOnceFunctionResult_selfMarkName ;
}

//---------------------------------------------------------------------------*

static void releaseOnceFunctionResult_selfMarkName (void) {
  gOnceFunctionResult_selfMarkName.drop () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_selfMarkName (NULL,
                                                          releaseOnceFunctionResult_selfMarkName) ;

//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_selfMarkName [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_selfMarkName (C_Compiler * inCompiler,
                                                             const cObjectArray & /* inEffectiveParameterArray */,
                                                             const GALGAS_location & /* inErrorLocation */
                                                             COMMA_LOCATION_ARGS) {
  return function_selfMarkName (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_selfMarkName ("selfMarkName",
                                                              functionWithGenericHeader_selfMarkName,
                                                              & kTypeDescriptor_GALGAS_string,
                                                              0,
                                                              functionArgs_selfMarkName) ;

//---------------------------------------------------------------------------*

cMapElement_variableMap::cMapElement_variableMap (const GALGAS_lstring & inKey,
                                                  const GALGAS_unifiedTypeMapProxy & in_mTypeProxy,
                                                  const GALGAS_string & in_mCppName,
                                                  const GALGAS_string & in_mNameForCheckingFormalParameterUsing
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mTypeProxy (in_mTypeProxy),
mAttribute_mCppName (in_mCppName),
mAttribute_mNameForCheckingFormalParameterUsing (in_mNameForCheckingFormalParameterUsing) {
}

//---------------------------------------------------------------------------*

bool cMapElement_variableMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mTypeProxy.isValid () && mAttribute_mCppName.isValid () && mAttribute_mNameForCheckingFormalParameterUsing.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_variableMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_variableMap (mAttribute_lkey, mAttribute_mTypeProxy, mAttribute_mCppName, mAttribute_mNameForCheckingFormalParameterUsing COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_variableMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mTypeProxy.description (ioString, inIndentation) ;
// mAttribute_mCppName.description (ioString, inIndentation) ;
// mAttribute_mNameForCheckingFormalParameterUsing.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cMapElement_variableMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_variableMap * operand = (cMapElement_variableMap *) inOperand ;
  enumComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mTypeProxy.objectCompare (operand->mAttribute_mTypeProxy) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCppName.objectCompare (operand->mAttribute_mCppName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mNameForCheckingFormalParameterUsing.objectCompare (operand->mAttribute_mNameForCheckingFormalParameterUsing) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_variableMap::GALGAS_variableMap (void) :
AC_GALGAS_uniqueMap () {
}

//---------------------------------------------------------------------------*

GALGAS_variableMap::GALGAS_variableMap (const GALGAS_variableMap & inSource) :
AC_GALGAS_uniqueMap (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_variableMap & GALGAS_variableMap::operator = (const GALGAS_variableMap & inSource) {
  * ((AC_GALGAS_uniqueMap *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_variableMap GALGAS_variableMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_variableMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

/*GALGAS_variableMap GALGAS_variableMap::constructor_mapWithMapToOverride (const GALGAS_variableMap & inMapToOverride
                                                                           COMMA_LOCATION_ARGS) {
  GALGAS_variableMap result ;
  result.makeNewEmptyMap (inMapToOverride COMMA_THERE) ;
  return result ;
}*/

//---------------------------------------------------------------------------*

/*GALGAS_variableMap GALGAS_variableMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_variableMap result ;
  overridenMap (result) ;
  return result ;
}*/

//---------------------------------------------------------------------------*
//  Map automaton states                                                     *
//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const PMUInt32 kMapStateCount_variableMap = 20 ;
#endif
static const PMUInt32 kMapState_variableMap_constantInputFormalArgument = 12 ;
static const PMUInt32 kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused = 14 ;
static const PMUInt32 kMapState_variableMap_currentInstanceAttribute = 19 ;
static const PMUInt32 kMapState_variableMap_definedLocalVariable = 3 ;
static const PMUInt32 kMapState_variableMap_definedOutputFormalArgument = 7 ;
static const PMUInt32 kMapState_variableMap_droppedInputFormalArgument = 17 ;
static const PMUInt32 kMapState_variableMap_droppedInputOutputFormalArgument = 10 ;
static const PMUInt32 kMapState_variableMap_droppedLocalVariable = 5 ;
static const PMUInt32 kMapState_variableMap_inputFormalArgumentDeclaredAsUnused = 18 ;
static const PMUInt32 kMapState_variableMap_inputFormalParameter = 15 ;
static const PMUInt32 kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused = 11 ;
static const PMUInt32 kMapState_variableMap_localConstant = 1 ;
static const PMUInt32 kMapState_variableMap_undefinedLocalVariable = 2 ;
static const PMUInt32 kMapState_variableMap_undefinedOutputFormalArgument = 6 ;
static const PMUInt32 kMapState_variableMap_unusedInputOutputFormalArgument = 8 ;
static const PMUInt32 kMapState_variableMap_usedConstantInputFormalArgument = 13 ;
static const PMUInt32 kMapState_variableMap_usedInputFormalArgument = 16 ;
static const PMUInt32 kMapState_variableMap_usedInputOutputFormalArgument = 9 ;
static const PMUInt32 kMapState_variableMap_usedLocalConstant = 0 ;
static const PMUInt32 kMapState_variableMap_usedLocalVariable = 4 ;

//---------------------------------------------------------------------------*
//  Map automaton actions                                                     *
//---------------------------------------------------------------------------*

static const PMUInt32 kMapActionCount_variableMap = 4 ;
static const PMUInt32 kMapAction_variableMap_dropAccess = 3 ;
static const PMUInt32 kMapAction_variableMap_readAccess = 0 ;
static const PMUInt32 kMapAction_variableMap_readWriteAccess = 2 ;
static const PMUInt32 kMapAction_variableMap_writeAccess = 1 ;

//---------------------------------------------------------------------------*
//  Map automaton transitions                                                *
//---------------------------------------------------------------------------*

static const cMapAutomatonTransition kMapTransitions_variableMap [20 * 4] = {
// State 'usedLocalConstant', index 0 
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonIssueError, "a constant cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonIssueError, "a constant cannot be written"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonIssueError, "a constant cannot be drop"}, // for action 'dropAccess', (index 3)
// State 'localConstant', index 1 
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonIssueError, "a constant cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonIssueError, "a constant cannot be written"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonIssueError, "a constant cannot be drop"}, // for action 'dropAccess', (index 3)
// State 'undefinedLocalVariable', index 2 
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapAutomatonIssueError, "an undefined local variable cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapAutomatonIssueError, "an undefined local variable cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapAutomatonIssueWarning, "the local variable has no value"}, // for action 'dropAccess', (index 3)
// State 'definedLocalVariable', index 3 
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonIssueWarning, "the local variable has been dropped without any read"}, // for action 'dropAccess', (index 3)
// State 'usedLocalVariable', index 4 
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
// State 'droppedLocalVariable', index 5 
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonIssueError, "a dropped local variable cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonIssueError, "a dropped local variable cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonIssueWarning, "the local variable is already dropped"}, // for action 'dropAccess', (index 3)
// State 'undefinedOutputFormalArgument', index 6 
  {kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapAutomatonIssueError, "an undefined output formal parameter cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapAutomatonIssueError, "an undefined output formal parameter cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapAutomatonIssueWarning, "the output formal parameter has no value"}, // for action 'dropAccess', (index 3)
// State 'definedOutputFormalArgument', index 7 
  {kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
// State 'unusedInputOutputFormalArgument', index 8 
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
// State 'usedInputOutputFormalArgument', index 9 
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
// State 'droppedInputOutputFormalArgument', index 10 
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonIssueError, "a dropped input/output formal argument cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonIssueError, "a dropped input/output formal argument cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonIssueWarning, "the input/output formal argument is already dropped"}, // for action 'dropAccess', (index 3)
// State 'inputOutputFormalArgumentDeclaredAsUnused', index 11 
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'dropAccess', (index 3)
// State 'constantInputFormalArgument', index 12 
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be dropped"}, // for action 'dropAccess', (index 3)
// State 'usedConstantInputFormalArgument', index 13 
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be dropped"}, // for action 'dropAccess', (index 3)
// State 'constantInputFormalArgumentDeclaredAsUnused', index 14 
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueWarning, "the constant input formal parameter is declared as unused"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be dropped"}, // for action 'dropAccess', (index 3)
// State 'inputFormalParameter', index 15 
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
// State 'usedInputFormalArgument', index 16 
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
// State 'droppedInputFormalArgument', index 17 
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonIssueError, "a dropped input formal parameter cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonIssueError, "a dropped input formal parameter cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonIssueWarning, "the input formal parameter is already dropped"}, // for action 'dropAccess', (index 3)
// State 'inputFormalArgumentDeclaredAsUnused', index 18 
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'dropAccess', (index 3)
// State 'currentInstanceAttribute', index 19 
  {kMapState_variableMap_currentInstanceAttribute /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_currentInstanceAttribute /* 19 */, kMapAutomatonIssueError, "an attribute cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_currentInstanceAttribute /* 19 */, kMapAutomatonIssueError, "an attribute cannot be modified"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_currentInstanceAttribute /* 19 */, kMapAutomatonIssueError, "an attribute cannot be dropped"}, // for action 'dropAccess', (index 3)
} ;

//---------------------------------------------------------------------------*
//  Map automaton final state issues                                         *
//---------------------------------------------------------------------------*

static const cMapAutomatonFinalIssue kMapAutomatonFinalIssue_variableMap [20] = {
  {kMapAutomatonNoIssue, ""},// state 'usedLocalConstant' (index 0)
  {kMapAutomatonIssueWarning, "the '%K' constant value is unused"},// state 'localConstant' (index 1)
  {kMapAutomatonIssueWarning, "the '%K' local variable is unused"},// state 'undefinedLocalVariable' (index 2)
  {kMapAutomatonNoIssue, ""},// state 'definedLocalVariable' (index 3)
  {kMapAutomatonNoIssue, ""},// state 'usedLocalVariable' (index 4)
  {kMapAutomatonNoIssue, ""},// state 'droppedLocalVariable' (index 5)
  {kMapAutomatonIssueError, "the '%K' output formal parameter is undefined"},// state 'undefinedOutputFormalArgument' (index 6)
  {kMapAutomatonNoIssue, ""},// state 'definedOutputFormalArgument' (index 7)
  {kMapAutomatonIssueWarning, "the '%K' input/output formal parameter is unused"},// state 'unusedInputOutputFormalArgument' (index 8)
  {kMapAutomatonNoIssue, ""},// state 'usedInputOutputFormalArgument' (index 9)
  {kMapAutomatonIssueError, "the '%K' input/ouput formal argument should be valuated at the end of the routine"},// state 'droppedInputOutputFormalArgument' (index 10)
  {kMapAutomatonNoIssue, ""},// state 'inputOutputFormalArgumentDeclaredAsUnused' (index 11)
  {kMapAutomatonIssueWarning, "the constant '%K' input formal parameter is not used and is not declared as unused"},// state 'constantInputFormalArgument' (index 12)
  {kMapAutomatonNoIssue, ""},// state 'usedConstantInputFormalArgument' (index 13)
  {kMapAutomatonNoIssue, ""},// state 'constantInputFormalArgumentDeclaredAsUnused' (index 14)
  {kMapAutomatonIssueWarning, "the '%K' input formal parameter is not used and is not declared as unused"},// state 'inputFormalParameter' (index 15)
  {kMapAutomatonNoIssue, ""},// state 'usedInputFormalArgument' (index 16)
  {kMapAutomatonNoIssue, ""},// state 'droppedInputFormalArgument' (index 17)
  {kMapAutomatonNoIssue, ""},// state 'inputFormalArgumentDeclaredAsUnused' (index 18)
  {kMapAutomatonNoIssue, ""},// state 'currentInstanceAttribute' (index 19)
} ;
//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_closeBranch (GALGAS_location inErrorLocation,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  closeBranch (inErrorLocation,
               kMapAutomatonFinalIssue_variableMap,
               #ifndef DO_NOT_GENERATE_CHECKINGS
                 kMapStateCount_variableMap,
               #endif
               inCompiler COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::method_checkAutomatonStates (GALGAS_location inErrorLocation,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  checkAutomatonStates (inErrorLocation, kMapAutomatonFinalIssue_variableMap, inCompiler COMMA_THERE) ;
}

//---------------------------------------------------------------------------*
//                        map override 'selectBlock'                         *
//---------------------------------------------------------------------------*

static const cBranchOverrideTransformationDescriptor kBranchBehaviourForOverride_variableMap_selectBlock [26] = {
  {kMapState_variableMap_localConstant /* 1 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgument /* 12 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonNoIssue, ""},
} ;

//---------------------------------------------------------------------------*

static const cBranchOverrideCompatibilityDescriptor kBranchCombinationForOverride_variableMap_selectBlock [40] = {
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapState_variableMap_localConstant /* 1 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_localConstant /* 1 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones let it undefined"},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones let it undefined"},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonIssueError, "this branch lets the '%K' variable undefined, while previous ones define it"},
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonIssueError, "this branch drops the '%K' variable, while previous ones let it defined"},
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonIssueError, "this branch lets the '%K' variable undefined, while previous defines let it"},
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonIssueError, "this branch drops the '%K' variable, while previous ones let it defined"},
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones drop it"},
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones drop it"},
  {kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapAutomatonIssueError, "this branch defines the '%K' output formal argument, while previous ones let it undefined"},
  {kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapAutomatonIssueError, "this branch lets the '%K' variable undefined, while previous ones define it"},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapAutomatonIssueError, "this branch drops the '%K' input/output formal argument, while previous ones let it undefined"},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonIssueError, "this branch drops the '%K' input/output formal argument, while previous ones let it defined"},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapAutomatonIssueError, "this branch lets the '%K' input/output formal argument defined, while previous ones drop it"},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonIssueError, "this branch lets the '%K' input/output formal argument defined, while previous ones drop it"},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapAutomatonIssueError, "this branch lets the '%K' input formal argument defined, while previous ones drop it"},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapAutomatonIssueError, "this branch drops the '%K' input formal argument defined, while previous ones let it defined"},
  {kMapState_variableMap_constantInputFormalArgument /* 12 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_constantInputFormalArgument /* 12 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_inputFormalParameter /* 15 */, kMapAutomatonIssueError, "this branch drops the '%K' input formal argument, while previous let it defined"},
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonIssueError, "this branch drops the '%K' input formal argument, while previous ones let it defined"},
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonIssueError, "this branch drops the '%K' input formal argument, while previous ones let it defined"},
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonIssueError, "this branch defines the '%K' input formal argument, while previous ones let it dropped"},
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonNoIssue, ""},
} ;

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_openOverrideForSelectBlock (C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  openOverride (kBranchBehaviourForOverride_variableMap_selectBlock, 26,
                kBranchCombinationForOverride_variableMap_selectBlock, 40,
                "selectBlock",
                inCompiler
                COMMA_THERE) ;
}

//---------------------------------------------------------------------------*
//                        map override 'repeatBlock'                         *
//---------------------------------------------------------------------------*

static const cBranchOverrideTransformationDescriptor kBranchBehaviourForOverride_variableMap_repeatBlock [26] = {
  {kMapState_variableMap_localConstant /* 1 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapAutomatonIssueError, "the repeated branch should not define the '%K' variable"},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapAutomatonIssueError, "the repeated branch should not define the '%K' variable"},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' variable"},
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' variable"},
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' variable"},
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonIssueError, "the repeated branch should not define the dropped '%K' variable"},
  {kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapAutomatonIssueError, "the repeated branch should not define the '%K' output formal argument"},
  {kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapState_variableMap_undefinedOutputFormalArgument /* 6 */, kMapState_variableMap_definedOutputFormalArgument /* 7 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' output formal argument"},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input/output formal argument"},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input/output formal argument"},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapAutomatonIssueError, "the repeated branch should define the '%K' input formal argument"},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 10 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input/output formal argument"},
  {kMapState_variableMap_constantInputFormalArgument /* 12 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_inputFormalParameter /* 15 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input formal argument"},
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input formal argument"},
  {kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input formal argument"},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_droppedInputFormalArgument /* 17 */, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input formal argument"},
} ;

//---------------------------------------------------------------------------*

static const cBranchOverrideCompatibilityDescriptor kBranchCombinationForOverride_variableMap_repeatBlock [18] = {
  {kMapState_variableMap_usedLocalConstant /* 0 */, kMapState_variableMap_localConstant /* 1 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_localConstant /* 1 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapState_variableMap_usedLocalConstant /* 0 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 4 */, kMapState_variableMap_definedLocalVariable /* 3 */, kMapState_variableMap_usedLocalVariable /* 4 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedLocalVariable /* 5 */, kMapState_variableMap_undefinedLocalVariable /* 2 */, kMapState_variableMap_droppedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 8 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapState_variableMap_usedInputOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgument /* 12 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_constantInputFormalArgument /* 12 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapState_variableMap_usedConstantInputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_inputFormalParameter /* 15 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapState_variableMap_usedInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
} ;

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_openOverrideForRepeatBlock (C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  openOverride (kBranchBehaviourForOverride_variableMap_repeatBlock, 26,
                kBranchCombinationForOverride_variableMap_repeatBlock, 18,
                "repeatBlock",
                inCompiler
                COMMA_THERE) ;
}


//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertNonMutableAttribute (GALGAS_lstring inKey,
                                                             GALGAS_unifiedTypeMapProxy inArgument0,
                                                             GALGAS_string inArgument1,
                                                             GALGAS_string inArgument2,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' attribute (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_currentInstanceAttribute, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertUndefinedLocalVariable (GALGAS_lstring inKey,
                                                                GALGAS_unifiedTypeMapProxy inArgument0,
                                                                GALGAS_string inArgument1,
                                                                GALGAS_string inArgument2,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_undefinedLocalVariable, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertDefinedLocalVariable (GALGAS_lstring inKey,
                                                              GALGAS_unifiedTypeMapProxy inArgument0,
                                                              GALGAS_string inArgument1,
                                                              GALGAS_string inArgument2,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_definedLocalVariable, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertLocalConstant (GALGAS_lstring inKey,
                                                       GALGAS_unifiedTypeMapProxy inArgument0,
                                                       GALGAS_string inArgument1,
                                                       GALGAS_string inArgument2,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_localConstant, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertUsedLocalConstant (GALGAS_lstring inKey,
                                                           GALGAS_unifiedTypeMapProxy inArgument0,
                                                           GALGAS_string inArgument1,
                                                           GALGAS_string inArgument2,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_usedLocalConstant, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertInputFormalArgument (GALGAS_lstring inKey,
                                                             GALGAS_unifiedTypeMapProxy inArgument0,
                                                             GALGAS_string inArgument1,
                                                             GALGAS_string inArgument2,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_inputFormalParameter, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertInputFormalArgumentDeclaredAsUnused (GALGAS_lstring inKey,
                                                                             GALGAS_unifiedTypeMapProxy inArgument0,
                                                                             GALGAS_string inArgument1,
                                                                             GALGAS_string inArgument2,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertConstantInputFormalArgument (GALGAS_lstring inKey,
                                                                     GALGAS_unifiedTypeMapProxy inArgument0,
                                                                     GALGAS_string inArgument1,
                                                                     GALGAS_string inArgument2,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_constantInputFormalArgument, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertConstantInputFormalArgumentDeclaredAsUnused (GALGAS_lstring inKey,
                                                                                     GALGAS_unifiedTypeMapProxy inArgument0,
                                                                                     GALGAS_string inArgument1,
                                                                                     GALGAS_string inArgument2,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertOutputFormalArgument (GALGAS_lstring inKey,
                                                              GALGAS_unifiedTypeMapProxy inArgument0,
                                                              GALGAS_string inArgument1,
                                                              GALGAS_string inArgument2,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_undefinedOutputFormalArgument, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertInputOutputFormalArgument (GALGAS_lstring inKey,
                                                                   GALGAS_unifiedTypeMapProxy inArgument0,
                                                                   GALGAS_string inArgument1,
                                                                   GALGAS_string inArgument2,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_unusedInputOutputFormalArgument, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_insertInputOutputFormalArgumentDeclaredAsUnused (GALGAS_lstring inKey,
                                                                                   GALGAS_unifiedTypeMapProxy inArgument0,
                                                                                   GALGAS_string inArgument1,
                                                                                   GALGAS_string inArgument2,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForReadAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_searchForReadAccess (GALGAS_lstring inKey,
                                                       GALGAS_unifiedTypeMapProxy & outArgument0,
                                                       GALGAS_string & outArgument1,
                                                       GALGAS_string & outArgument2,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_readAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForReadAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_mTypeProxy ;
    outArgument1 = p->mAttribute_mCppName ;
    outArgument2 = p->mAttribute_mNameForCheckingFormalParameterUsing ;
  }
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForWriteAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_searchForWriteAccess (GALGAS_lstring inKey,
                                                        GALGAS_unifiedTypeMapProxy & outArgument0,
                                                        GALGAS_string & outArgument1,
                                                        GALGAS_string & outArgument2,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_writeAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForWriteAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_mTypeProxy ;
    outArgument1 = p->mAttribute_mCppName ;
    outArgument2 = p->mAttribute_mNameForCheckingFormalParameterUsing ;
  }
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForReadWriteAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_searchForReadWriteAccess (GALGAS_lstring inKey,
                                                            GALGAS_unifiedTypeMapProxy & outArgument0,
                                                            GALGAS_string & outArgument1,
                                                            GALGAS_string & outArgument2,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_readWriteAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForReadWriteAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_mTypeProxy ;
    outArgument1 = p->mAttribute_mCppName ;
    outArgument2 = p->mAttribute_mNameForCheckingFormalParameterUsing ;
  }
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForDropAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_searchForDropAccess (GALGAS_lstring inKey,
                                                       GALGAS_unifiedTypeMapProxy & outArgument0,
                                                       GALGAS_string & outArgument1,
                                                       GALGAS_string & outArgument2,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_dropAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForDropAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_mTypeProxy ;
    outArgument1 = p->mAttribute_mCppName ;
    outArgument2 = p->mAttribute_mNameForCheckingFormalParameterUsing ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_variableMap::reader_mTypeProxyForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_unifiedTypeMapProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_variableMap) ;
    result = p->mAttribute_mTypeProxy ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_variableMap::reader_mCppNameForKey (const GALGAS_string & inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_variableMap) ;
    result = p->mAttribute_mCppName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_variableMap::reader_mNameForCheckingFormalParameterUsingForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_variableMap) ;
    result = p->mAttribute_mNameForCheckingFormalParameterUsing ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_setMTypeProxyForKey (GALGAS_unifiedTypeMapProxy inAttributeValue,
                                                       GALGAS_string inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_mTypeProxy = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_setMCppNameForKey (GALGAS_string inAttributeValue,
                                                     GALGAS_string inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_mCppName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_variableMap::modifier_setMNameForCheckingFormalParameterUsingForKey (GALGAS_string inAttributeValue,
                                                                                 GALGAS_string inKey,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_mNameForCheckingFormalParameterUsing = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_variableMap * GALGAS_variableMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                        const GALGAS_string & inKey
                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * result = (cMapElement_variableMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_variableMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_variableMap * GALGAS_variableMap::readWriteAccessForWithInstruction_searchForDropAccess (C_Compiler * inCompiler,
                                                                                                     const GALGAS_lstring & inKey
                                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_variableMap_searchForDropAccess COMMA_THERE) ;
  cMapElement_variableMap * result = (cMapElement_variableMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_variableMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_variableMap * GALGAS_variableMap::readWriteAccessForWithInstruction_searchForReadAccess (C_Compiler * inCompiler,
                                                                                                     const GALGAS_lstring & inKey
                                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_variableMap_searchForReadAccess COMMA_THERE) ;
  cMapElement_variableMap * result = (cMapElement_variableMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_variableMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_variableMap * GALGAS_variableMap::readWriteAccessForWithInstruction_searchForReadWriteAccess (C_Compiler * inCompiler,
                                                                                                          const GALGAS_lstring & inKey
                                                                                                          COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_variableMap_searchForReadWriteAccess COMMA_THERE) ;
  cMapElement_variableMap * result = (cMapElement_variableMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_variableMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_variableMap * GALGAS_variableMap::readWriteAccessForWithInstruction_searchForWriteAccess (C_Compiler * inCompiler,
                                                                                                      const GALGAS_lstring & inKey
                                                                                                      COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_variableMap_searchForWriteAccess COMMA_THERE) ;
  cMapElement_variableMap * result = (cMapElement_variableMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_variableMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_variableMap::cEnumerator_variableMap (const GALGAS_variableMap & inEnumeratedObject,
                                                  const bool inAscending) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_variableMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy cEnumerator_variableMap::current_mTypeProxy (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_variableMap) ;
  return p->mAttribute_mTypeProxy ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_variableMap::current_mCppName (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_variableMap) ;
  return p->mAttribute_mCppName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_variableMap::current_mNameForCheckingFormalParameterUsing (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_variableMap) ;
  return p->mAttribute_mNameForCheckingFormalParameterUsing ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @variableMap type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_variableMap ("variableMap",
                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_variableMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_variableMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_variableMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_variableMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_variableMap GALGAS_variableMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler,
                                                      const GALGAS_location & inErrorLocation
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_variableMap result ;
  const GALGAS_variableMap * p = (const GALGAS_variableMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_variableMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "variableMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'checkAssignmentTypes'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkAssignmentTypes (const GALGAS_unifiedTypeMapProxy constinArgument_inTargetType,
                                   const GALGAS_unifiedTypeMapProxy constinArgument_inSourceType,
                                   const GALGAS_location constinArgument_inErrorLocation,
                                   C_Compiler * inCompiler
                                   COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_sourceType = constinArgument_inSourceType ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_ok = GALGAS_bool (kIsEqual, constinArgument_inTargetType.objectCompare (constinArgument_inSourceType)) ;
  //-------- @loopInstructionForGeneration
  if (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (313)).isValid ()) {
    PMUInt32 variant_24115 = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (313)).uintValue () ;
    bool loop_24115 = true ;
    while (loop_24115) {
      loop_24115 = var_ok.operator_not (SOURCE_FILE_AT_LINE (313)).operator_and (var_sourceType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (313)).reader_isNull (SOURCE_FILE_AT_LINE (313)).operator_not (SOURCE_FILE_AT_LINE (313)) COMMA_SOURCE_FILE_AT_LINE (313)).isValid () ;
      if (loop_24115) {
        loop_24115 = var_ok.operator_not (SOURCE_FILE_AT_LINE (313)).operator_and (var_sourceType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (313)).reader_isNull (SOURCE_FILE_AT_LINE (313)).operator_not (SOURCE_FILE_AT_LINE (313)) COMMA_SOURCE_FILE_AT_LINE (313)).boolValue () ;
      }
      if (loop_24115 && (0 == variant_24115)) {
        loop_24115 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (313)) ;
      }
      if (loop_24115) {
        variant_24115 -- ;
        //-------- @assignmentInstructionForGeneration
        var_sourceType = var_sourceType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (314)) ;
        //-------- @assignmentInstructionForGeneration
        var_ok = GALGAS_bool (kIsEqual, constinArgument_inTargetType.objectCompare (var_sourceType)) ;
      }
    }
  }
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (var_ok.operator_not (SOURCE_FILE_AT_LINE (317))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("target object type is '@").operator_concat (constinArgument_inTargetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (318)) COMMA_SOURCE_FILE_AT_LINE (318)).operator_concat (GALGAS_string ("' and cannot be assigned by an '@") COMMA_SOURCE_FILE_AT_LINE (318)).operator_concat (constinArgument_inSourceType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (318)) COMMA_SOURCE_FILE_AT_LINE (318)).operator_concat (GALGAS_string ("' object") COMMA_SOURCE_FILE_AT_LINE (318)) COMMA_SOURCE_FILE_AT_LINE (318)) ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_predefinedTypes::GALGAS_predefinedTypes (void) :
mAttribute_mLocationType (),
mAttribute_mBoolType (),
mAttribute_mCharType (),
mAttribute_mStringType (),
mAttribute_mUIntType (),
mAttribute_mSIntType (),
mAttribute_mUInt_36__34_Type (),
mAttribute_mSInt_36__34_Type (),
mAttribute_mDoubleType (),
mAttribute_mLBoolType (),
mAttribute_mLCharType (),
mAttribute_mLStringType (),
mAttribute_mLUIntType (),
mAttribute_mLSIntType (),
mAttribute_mLUInt_36__34_Type (),
mAttribute_mLSInt_36__34_Type (),
mAttribute_mLDoubleType () {
}

//---------------------------------------------------------------------------*

GALGAS_predefinedTypes::~ GALGAS_predefinedTypes (void) {
}

//---------------------------------------------------------------------------*

/* GALGAS_predefinedTypes::GALGAS_predefinedTypes (const GALGAS_predefinedTypes & inSource) :
//mAttribute_mLocationType (inSource.mAttribute_mLocationType),
//mAttribute_mBoolType (inSource.mAttribute_mBoolType),
//mAttribute_mCharType (inSource.mAttribute_mCharType),
//mAttribute_mStringType (inSource.mAttribute_mStringType),
//mAttribute_mUIntType (inSource.mAttribute_mUIntType),
//mAttribute_mSIntType (inSource.mAttribute_mSIntType),
//mAttribute_mUInt_36__34_Type (inSource.mAttribute_mUInt_36__34_Type),
//mAttribute_mSInt_36__34_Type (inSource.mAttribute_mSInt_36__34_Type),
//mAttribute_mDoubleType (inSource.mAttribute_mDoubleType),
//mAttribute_mLBoolType (inSource.mAttribute_mLBoolType),
//mAttribute_mLCharType (inSource.mAttribute_mLCharType),
//mAttribute_mLStringType (inSource.mAttribute_mLStringType),
//mAttribute_mLUIntType (inSource.mAttribute_mLUIntType),
//mAttribute_mLSIntType (inSource.mAttribute_mLSIntType),
//mAttribute_mLUInt_36__34_Type (inSource.mAttribute_mLUInt_36__34_Type),
//mAttribute_mLSInt_36__34_Type (inSource.mAttribute_mLSInt_36__34_Type),
//mAttribute_mLDoubleType (inSource.mAttribute_mLDoubleType) {
} */

//---------------------------------------------------------------------------*

GALGAS_predefinedTypes::GALGAS_predefinedTypes (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                const GALGAS_unifiedTypeMapProxy & inOperand1,
                                                const GALGAS_unifiedTypeMapProxy & inOperand2,
                                                const GALGAS_unifiedTypeMapProxy & inOperand3,
                                                const GALGAS_unifiedTypeMapProxy & inOperand4,
                                                const GALGAS_unifiedTypeMapProxy & inOperand5,
                                                const GALGAS_unifiedTypeMapProxy & inOperand6,
                                                const GALGAS_unifiedTypeMapProxy & inOperand7,
                                                const GALGAS_unifiedTypeMapProxy & inOperand8,
                                                const GALGAS_unifiedTypeMapProxy & inOperand9,
                                                const GALGAS_unifiedTypeMapProxy & inOperand10,
                                                const GALGAS_unifiedTypeMapProxy & inOperand11,
                                                const GALGAS_unifiedTypeMapProxy & inOperand12,
                                                const GALGAS_unifiedTypeMapProxy & inOperand13,
                                                const GALGAS_unifiedTypeMapProxy & inOperand14,
                                                const GALGAS_unifiedTypeMapProxy & inOperand15,
                                                const GALGAS_unifiedTypeMapProxy & inOperand16) :
mAttribute_mLocationType (inOperand0),
mAttribute_mBoolType (inOperand1),
mAttribute_mCharType (inOperand2),
mAttribute_mStringType (inOperand3),
mAttribute_mUIntType (inOperand4),
mAttribute_mSIntType (inOperand5),
mAttribute_mUInt_36__34_Type (inOperand6),
mAttribute_mSInt_36__34_Type (inOperand7),
mAttribute_mDoubleType (inOperand8),
mAttribute_mLBoolType (inOperand9),
mAttribute_mLCharType (inOperand10),
mAttribute_mLStringType (inOperand11),
mAttribute_mLUIntType (inOperand12),
mAttribute_mLSIntType (inOperand13),
mAttribute_mLUInt_36__34_Type (inOperand14),
mAttribute_mLSInt_36__34_Type (inOperand15),
mAttribute_mLDoubleType (inOperand16) {
}

//---------------------------------------------------------------------------*

/* GALGAS_predefinedTypes & GALGAS_predefinedTypes::operator = (const GALGAS_predefinedTypes & inOperand) {
  mAttribute_mLocationType = inOperand.mAttribute_mLocationType ;
  mAttribute_mBoolType = inOperand.mAttribute_mBoolType ;
  mAttribute_mCharType = inOperand.mAttribute_mCharType ;
  mAttribute_mStringType = inOperand.mAttribute_mStringType ;
  mAttribute_mUIntType = inOperand.mAttribute_mUIntType ;
  mAttribute_mSIntType = inOperand.mAttribute_mSIntType ;
  mAttribute_mUInt_36__34_Type = inOperand.mAttribute_mUInt_36__34_Type ;
  mAttribute_mSInt_36__34_Type = inOperand.mAttribute_mSInt_36__34_Type ;
  mAttribute_mDoubleType = inOperand.mAttribute_mDoubleType ;
  mAttribute_mLBoolType = inOperand.mAttribute_mLBoolType ;
  mAttribute_mLCharType = inOperand.mAttribute_mLCharType ;
  mAttribute_mLStringType = inOperand.mAttribute_mLStringType ;
  mAttribute_mLUIntType = inOperand.mAttribute_mLUIntType ;
  mAttribute_mLSIntType = inOperand.mAttribute_mLSIntType ;
  mAttribute_mLUInt_36__34_Type = inOperand.mAttribute_mLUInt_36__34_Type ;
  mAttribute_mLSInt_36__34_Type = inOperand.mAttribute_mLSInt_36__34_Type ;
  mAttribute_mLDoubleType = inOperand.mAttribute_mLDoubleType ;
  return *this ;
} */

//---------------------------------------------------------------------------*

GALGAS_predefinedTypes GALGAS_predefinedTypes::constructor_new (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand1,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand2,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand3,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand4,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand5,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand6,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand7,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand8,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand9,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand10,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand11,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand12,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand13,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand14,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand15,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand16 
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_predefinedTypes result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid () && inOperand10.isValid () && inOperand11.isValid () && inOperand12.isValid () && inOperand13.isValid () && inOperand14.isValid () && inOperand15.isValid () && inOperand16.isValid ()) {
    result = GALGAS_predefinedTypes (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9, inOperand10, inOperand11, inOperand12, inOperand13, inOperand14, inOperand15, inOperand16) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

enumComparisonResult GALGAS_predefinedTypes::objectCompare (const GALGAS_predefinedTypes & inOperand) const {
   enumComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mLocationType.objectCompare (inOperand.mAttribute_mLocationType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBoolType.objectCompare (inOperand.mAttribute_mBoolType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCharType.objectCompare (inOperand.mAttribute_mCharType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mStringType.objectCompare (inOperand.mAttribute_mStringType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mUIntType.objectCompare (inOperand.mAttribute_mUIntType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSIntType.objectCompare (inOperand.mAttribute_mSIntType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mUInt_36__34_Type.objectCompare (inOperand.mAttribute_mUInt_36__34_Type) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSInt_36__34_Type.objectCompare (inOperand.mAttribute_mSInt_36__34_Type) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDoubleType.objectCompare (inOperand.mAttribute_mDoubleType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLBoolType.objectCompare (inOperand.mAttribute_mLBoolType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLCharType.objectCompare (inOperand.mAttribute_mLCharType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLStringType.objectCompare (inOperand.mAttribute_mLStringType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLUIntType.objectCompare (inOperand.mAttribute_mLUIntType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLSIntType.objectCompare (inOperand.mAttribute_mLSIntType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLUInt_36__34_Type.objectCompare (inOperand.mAttribute_mLUInt_36__34_Type) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLSInt_36__34_Type.objectCompare (inOperand.mAttribute_mLSInt_36__34_Type) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLDoubleType.objectCompare (inOperand.mAttribute_mLDoubleType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_predefinedTypes::isValid (void) const {
  return mAttribute_mLocationType.isValid () && mAttribute_mBoolType.isValid () && mAttribute_mCharType.isValid () && mAttribute_mStringType.isValid () && mAttribute_mUIntType.isValid () && mAttribute_mSIntType.isValid () && mAttribute_mUInt_36__34_Type.isValid () && mAttribute_mSInt_36__34_Type.isValid () && mAttribute_mDoubleType.isValid () && mAttribute_mLBoolType.isValid () && mAttribute_mLCharType.isValid () && mAttribute_mLStringType.isValid () && mAttribute_mLUIntType.isValid () && mAttribute_mLSIntType.isValid () && mAttribute_mLUInt_36__34_Type.isValid () && mAttribute_mLSInt_36__34_Type.isValid () && mAttribute_mLDoubleType.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_predefinedTypes::drop (void) {
  mAttribute_mLocationType.drop () ;
  mAttribute_mBoolType.drop () ;
  mAttribute_mCharType.drop () ;
  mAttribute_mStringType.drop () ;
  mAttribute_mUIntType.drop () ;
  mAttribute_mSIntType.drop () ;
  mAttribute_mUInt_36__34_Type.drop () ;
  mAttribute_mSInt_36__34_Type.drop () ;
  mAttribute_mDoubleType.drop () ;
  mAttribute_mLBoolType.drop () ;
  mAttribute_mLCharType.drop () ;
  mAttribute_mLStringType.drop () ;
  mAttribute_mLUIntType.drop () ;
  mAttribute_mLSIntType.drop () ;
  mAttribute_mLUInt_36__34_Type.drop () ;
  mAttribute_mLSInt_36__34_Type.drop () ;
  mAttribute_mLDoubleType.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_predefinedTypes::description (C_String & ioString,
                                          const PMSInt32 inIndentation) const {
  ioString << "<struct @predefinedTypes:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mLocationType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBoolType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCharType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mStringType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mUIntType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSIntType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mUInt_36__34_Type.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSInt_36__34_Type.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDoubleType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLBoolType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLCharType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLStringType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLUIntType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLSIntType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLUInt_36__34_Type.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLSInt_36__34_Type.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLDoubleType.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLocationType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLocationType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mBoolType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBoolType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mCharType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCharType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mStringType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mStringType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mUIntType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mUIntType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mSIntType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSIntType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mUInt_36__34_Type (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mUInt_36__34_Type ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mSInt_36__34_Type (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSInt_36__34_Type ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mDoubleType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDoubleType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLBoolType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLBoolType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLCharType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLCharType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLStringType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLStringType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLUIntType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLUIntType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLSIntType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLSIntType ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLUInt_36__34_Type (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLUInt_36__34_Type ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLSInt_36__34_Type (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLSInt_36__34_Type ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_predefinedTypes::reader_mLDoubleType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLDoubleType ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @predefinedTypes type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_predefinedTypes ("predefinedTypes",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_predefinedTypes::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_predefinedTypes ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_predefinedTypes::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_predefinedTypes (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_predefinedTypes GALGAS_predefinedTypes::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler,
                                                              const GALGAS_location & inErrorLocation
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_predefinedTypes result ;
  const GALGAS_predefinedTypes * p = (const GALGAS_predefinedTypes *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_predefinedTypes *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "predefinedTypes", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_analysisContext::GALGAS_analysisContext (void) :
mAttribute_mSemanticContext (),
mAttribute_mPredefinedTypes (),
mAttribute_mSelfTypeProxy (),
mAttribute_mSelfObjectCppPointer () {
}

//---------------------------------------------------------------------------*

GALGAS_analysisContext::~ GALGAS_analysisContext (void) {
}

//---------------------------------------------------------------------------*

/* GALGAS_analysisContext::GALGAS_analysisContext (const GALGAS_analysisContext & inSource) :
//mAttribute_mSemanticContext (inSource.mAttribute_mSemanticContext),
//mAttribute_mPredefinedTypes (inSource.mAttribute_mPredefinedTypes),
//mAttribute_mSelfTypeProxy (inSource.mAttribute_mSelfTypeProxy),
//mAttribute_mSelfObjectCppPointer (inSource.mAttribute_mSelfObjectCppPointer) {
} */

//---------------------------------------------------------------------------*

GALGAS_analysisContext::GALGAS_analysisContext (const GALGAS_semanticContext & inOperand0,
                                                const GALGAS_predefinedTypes & inOperand1,
                                                const GALGAS_unifiedTypeMapProxy & inOperand2,
                                                const GALGAS_string & inOperand3) :
mAttribute_mSemanticContext (inOperand0),
mAttribute_mPredefinedTypes (inOperand1),
mAttribute_mSelfTypeProxy (inOperand2),
mAttribute_mSelfObjectCppPointer (inOperand3) {
}

//---------------------------------------------------------------------------*

/* GALGAS_analysisContext & GALGAS_analysisContext::operator = (const GALGAS_analysisContext & inOperand) {
  mAttribute_mSemanticContext = inOperand.mAttribute_mSemanticContext ;
  mAttribute_mPredefinedTypes = inOperand.mAttribute_mPredefinedTypes ;
  mAttribute_mSelfTypeProxy = inOperand.mAttribute_mSelfTypeProxy ;
  mAttribute_mSelfObjectCppPointer = inOperand.mAttribute_mSelfObjectCppPointer ;
  return *this ;
} */

//---------------------------------------------------------------------------*

GALGAS_analysisContext GALGAS_analysisContext::constructor_new (const GALGAS_semanticContext & inOperand0,
                                                                const GALGAS_predefinedTypes & inOperand1,
                                                                const GALGAS_unifiedTypeMapProxy & inOperand2,
                                                                const GALGAS_string & inOperand3 
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_analysisContext result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_analysisContext (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

enumComparisonResult GALGAS_analysisContext::objectCompare (const GALGAS_analysisContext & inOperand) const {
   enumComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mSemanticContext.objectCompare (inOperand.mAttribute_mSemanticContext) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPredefinedTypes.objectCompare (inOperand.mAttribute_mPredefinedTypes) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSelfTypeProxy.objectCompare (inOperand.mAttribute_mSelfTypeProxy) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSelfObjectCppPointer.objectCompare (inOperand.mAttribute_mSelfObjectCppPointer) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_analysisContext::isValid (void) const {
  return mAttribute_mSemanticContext.isValid () && mAttribute_mPredefinedTypes.isValid () && mAttribute_mSelfTypeProxy.isValid () && mAttribute_mSelfObjectCppPointer.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_analysisContext::drop (void) {
  mAttribute_mSemanticContext.drop () ;
  mAttribute_mPredefinedTypes.drop () ;
  mAttribute_mSelfTypeProxy.drop () ;
  mAttribute_mSelfObjectCppPointer.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_analysisContext::description (C_String & ioString,
                                          const PMSInt32 inIndentation) const {
  ioString << "<struct @analysisContext:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mSemanticContext.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPredefinedTypes.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSelfTypeProxy.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSelfObjectCppPointer.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticContext GALGAS_analysisContext::reader_mSemanticContext (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSemanticContext ;
}

//---------------------------------------------------------------------------*

GALGAS_predefinedTypes GALGAS_analysisContext::reader_mPredefinedTypes (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPredefinedTypes ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_analysisContext::reader_mSelfTypeProxy (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSelfTypeProxy ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_analysisContext::reader_mSelfObjectCppPointer (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSelfObjectCppPointer ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @analysisContext type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_analysisContext ("analysisContext",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_analysisContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_analysisContext ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_analysisContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_analysisContext (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_analysisContext GALGAS_analysisContext::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler,
                                                              const GALGAS_location & inErrorLocation
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_analysisContext result ;
  const GALGAS_analysisContext * p = (const GALGAS_analysisContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_analysisContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "analysisContext", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'analyzeConstructorInvocation'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeConstructorInvocation (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                           GALGAS_variableMap & ioArgument_ioVariableMap,
                                           const GALGAS_lstring constinArgument_inTypeName,
                                           const GALGAS_lstring constinArgument_inConstructorName,
                                           const GALGAS_semanticExpressionListAST constinArgument_inConstuctorEffectiveParameterExpressions,
                                           GALGAS_unifiedTypeMapProxy & outArgument_outReturnedType,
                                           GALGAS_unifiedTypeMapProxy & outArgument_outConstructorType,
                                           GALGAS_semanticExpressionListForGeneration & outArgument_outConstructorEffectiveParameterList,
                                           GALGAS_bool & outArgument_outHasCompilerArgument,
                                           C_Compiler * inCompiler
                                           COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outReturnedType.drop () ; // Release 'out' argument
  outArgument_outConstructorType.drop () ; // Release 'out' argument
  outArgument_outConstructorEffectiveParameterList.drop () ; // Release 'out' argument
  outArgument_outHasCompilerArgument.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outConstructorType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, constinArgument_inTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (506)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_constructorMap var_constructorMap = outArgument_outConstructorType.reader_mConstructorMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (508)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxyList var_constructorFormalArgumentTypeList ;
  //-------- @readOnlyWithInstructionForGeneration
  const cMapElement_constructorMap * objectArray_32790 = (const cMapElement_constructorMap *) var_constructorMap.readAccessForWithInstruction_hasKey (constinArgument_inConstructorName.reader_string (SOURCE_FILE_AT_LINE (511))) ;
  if (NULL != objectArray_32790) {
      macroValidSharedObject (objectArray_32790, const cMapElement_constructorMap) ;
    //-------- @assignmentInstructionForGeneration
    var_constructorFormalArgumentTypeList = objectArray_32790->mAttribute_mArgumentTypeList ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outHasCompilerArgument = objectArray_32790->mAttribute_mHasCompilerArgument ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outReturnedType = objectArray_32790->mAttribute_mReturnedType ;
  }else{
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_0 (GALGAS_bool (kIsEqual, var_constructorMap.reader_count (SOURCE_FILE_AT_LINE (516)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
    if (test_0.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_1 (constinArgument_inConstructorName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '@").operator_concat (constinArgument_inTypeName.reader_string (SOURCE_FILE_AT_LINE (518)) COMMA_SOURCE_FILE_AT_LINE (518)).operator_concat (GALGAS_string ("' type does not define any constructor") COMMA_SOURCE_FILE_AT_LINE (518)) COMMA_SOURCE_FILE_AT_LINE (517)) ;
      var_constructorFormalArgumentTypeList.drop () ; // Release error dropped variable
      outArgument_outHasCompilerArgument.drop () ; // Release error dropped variable
      outArgument_outReturnedType.drop () ; // Release error dropped variable
    }else if (test_0.isValid ()) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_constructorMap enumerator_33286 (var_constructorMap, true) ;
      //--- simple foreach instruction
      while (enumerator_33286.hasCurrentObject ()) {
        //-------- @appendInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - ").operator_concat (enumerator_33286.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (524)) COMMA_SOURCE_FILE_AT_LINE (524)) COMMA_SOURCE_FILE_AT_LINE (524)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_unifiedTypeMapProxyList enumerator_33354 (enumerator_33286.current_mArgumentTypeList (HERE), true) ;
        //--- simple foreach instruction
        while (enumerator_33354.hasCurrentObject ()) {
          //-------- @appendInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string (" \?@").operator_concat (enumerator_33354.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (526)) COMMA_SOURCE_FILE_AT_LINE (526)) COMMA_SOURCE_FILE_AT_LINE (526)) ;
          enumerator_33354.gotoNextObject () ;
        }
        //-------- @appendInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string (" -> @").operator_concat (enumerator_33286.current_mReturnedType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (528)) COMMA_SOURCE_FILE_AT_LINE (528)) COMMA_SOURCE_FILE_AT_LINE (528)) ;
        enumerator_33286.gotoNextObject () ;
      }
      //-------- @errorInstructionForGeneration
      //--- @ifExpressionForGeneration
      GALGAS_string temp_2 ;
      if (GALGAS_bool (kIsStrictSup, var_constructorMap.reader_count (SOURCE_FILE_AT_LINE (532)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).isValidAndTrue ()) {
        temp_2 = GALGAS_string ("available constructors are") ;
      }else{
        temp_2 = GALGAS_string ("available constructor is") ;
      }
      GALGAS_location location_3 (constinArgument_inConstructorName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the '@").operator_concat (constinArgument_inTypeName.reader_string (SOURCE_FILE_AT_LINE (531)) COMMA_SOURCE_FILE_AT_LINE (531)).operator_concat (GALGAS_string ("' type does not define the '") COMMA_SOURCE_FILE_AT_LINE (531)).operator_concat (constinArgument_inConstructorName.reader_string (SOURCE_FILE_AT_LINE (531)) COMMA_SOURCE_FILE_AT_LINE (531)).operator_concat (GALGAS_string ("' constructor; ") COMMA_SOURCE_FILE_AT_LINE (531)).operator_concat (temp_2 COMMA_SOURCE_FILE_AT_LINE (532)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (533)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (533)) COMMA_SOURCE_FILE_AT_LINE (530)) ;
      var_constructorFormalArgumentTypeList.drop () ; // Release error dropped variable
      outArgument_outHasCompilerArgument.drop () ; // Release error dropped variable
      outArgument_outReturnedType.drop () ; // Release error dropped variable
    }
  }
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_4 (GALGAS_bool (kIsNotEqual, constinArgument_inConstuctorEffectiveParameterExpressions.reader_length (SOURCE_FILE_AT_LINE (539)).objectCompare (var_constructorFormalArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (539))))) ;
  if (test_4.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_5 (constinArgument_inConstructorName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_5, GALGAS_string ("calling the '").operator_concat (constinArgument_inConstructorName.reader_string (SOURCE_FILE_AT_LINE (541)) COMMA_SOURCE_FILE_AT_LINE (541)).operator_concat (GALGAS_string ("' constructor of '@") COMMA_SOURCE_FILE_AT_LINE (541)).operator_concat (constinArgument_inTypeName.reader_string (SOURCE_FILE_AT_LINE (541)) COMMA_SOURCE_FILE_AT_LINE (541)).operator_concat (GALGAS_string ("' requires ") COMMA_SOURCE_FILE_AT_LINE (541)).operator_concat (var_constructorFormalArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (542)).reader_string (SOURCE_FILE_AT_LINE (542)) COMMA_SOURCE_FILE_AT_LINE (542)).operator_concat (GALGAS_string (" parameter(s), while this call has ") COMMA_SOURCE_FILE_AT_LINE (542)).operator_concat (constinArgument_inConstuctorEffectiveParameterExpressions.reader_length (SOURCE_FILE_AT_LINE (543)).reader_string (SOURCE_FILE_AT_LINE (543)) COMMA_SOURCE_FILE_AT_LINE (543)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (543)) COMMA_SOURCE_FILE_AT_LINE (540)) ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outConstructorEffectiveParameterList = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (545)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_semanticExpressionListAST enumerator_34446 (constinArgument_inConstuctorEffectiveParameterExpressions, true) ;
  cEnumerator_unifiedTypeMapProxyList enumerator_34483 (var_constructorFormalArgumentTypeList, true) ;
  //--- simple foreach instruction
  while (enumerator_34446.hasCurrentObject () && enumerator_34483.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_semanticExpressionForGeneration var_exp ;
    //-------- @methodCallInstructionForGeneration
    callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_34446.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_exp, inCompiler COMMA_SOURCE_FILE_AT_LINE (548)) ;
    //-------- END @methodCallInstructionForGeneration
    { //-------- @routineCallInstructionForGeneration
    routine_checkAssignmentTypes (enumerator_34483.current_mType (HERE), var_exp.reader_mType (SOURCE_FILE_AT_LINE (549)), enumerator_34446.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (549)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @addAssignInstructionForGeneration
    outArgument_outConstructorEffectiveParameterList.addAssign_operation (var_exp COMMA_SOURCE_FILE_AT_LINE (550)) ;
    enumerator_34446.gotoNextObject () ;
    enumerator_34483.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//            Function 'checkReaderImplementationInSuperClasses'             *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string function_checkReaderImplementationInSuperClasses (const GALGAS_lstring & constinArgument_inReaderName,
                                                                const GALGAS_unifiedTypeMapProxy & constinArgument_inSuperClass,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (constinArgument_inSuperClass.reader_isNull (SOURCE_FILE_AT_LINE (783))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @assignmentInstructionForGeneration
    result_string = GALGAS_string::makeEmptyString () ;
  }else if (test_0.isValid ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_methodQualifier var_qualifier ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_formalParameterSignature joker_44102_0 ; // Joker input parameter
    GALGAS_bool joker_44105_0 ; // Joker input parameter
    GALGAS_string joker_44119_0 ; // Joker input parameter
    constinArgument_inSuperClass.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (787)).method_searchKey (constinArgument_inReaderName, joker_44102_0, joker_44105_0, var_qualifier, joker_44119_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (787)) ;
    //-------- END @methodCallInstructionForGeneration
    //------- @switchInstructionForGeneration
    if (var_qualifier.isValid ()) {
      switch (var_qualifier.enumValue ()) {
      case GALGAS_methodQualifier::kNotBuilt:
        break ;
      case GALGAS_methodQualifier::kEnum_isAbstract: {
        //-------- @assignmentInstructionForGeneration
        result_string = GALGAS_string::makeEmptyString () ;
        } break ;
      case GALGAS_methodQualifier::kEnum_isBasic: case GALGAS_methodQualifier::kEnum_isBasicFinal: case GALGAS_methodQualifier::kEnum_isOverriding: {
        //-------- @assignmentInstructionForGeneration
        result_string = constinArgument_inSuperClass.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (792)) ;
        } break ;
      case GALGAS_methodQualifier::kEnum_isInherited: case GALGAS_methodQualifier::kEnum_isOverridingAbstract: {
        //-------- @assignmentInstructionForGeneration
        result_string = function_checkReaderImplementationInSuperClasses (constinArgument_inReaderName, constinArgument_inSuperClass.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (794)), inCompiler COMMA_SOURCE_FILE_AT_LINE (794)) ;
        } break ;
      }
    }
  }
//---
  return result_string ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_checkReaderImplementationInSuperClasses [3] = {
  & kTypeDescriptor_GALGAS_lstring,
  & kTypeDescriptor_GALGAS_unifiedTypeMapProxy,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_checkReaderImplementationInSuperClasses (C_Compiler * inCompiler,
                                                                                        const cObjectArray & inEffectiveParameterArray,
                                                                                        const GALGAS_location & inErrorLocation
                                                                                        COMMA_LOCATION_ARGS) {
  const GALGAS_lstring operand0 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  const GALGAS_unifiedTypeMapProxy operand1 = GALGAS_unifiedTypeMapProxy::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_checkReaderImplementationInSuperClasses (operand0, operand1, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_checkReaderImplementationInSuperClasses ("checkReaderImplementationInSuperClasses",
                                                                                         functionWithGenericHeader_checkReaderImplementationInSuperClasses,
                                                                                         & kTypeDescriptor_GALGAS_string,
                                                                                         2,
                                                                                         functionArgs_checkReaderImplementationInSuperClasses) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'checkDiadicOperator'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkDiadicOperator (const GALGAS_unifiedTypeMapProxy constinArgument_inLeftType,
                                  const GALGAS_unifiedTypeMapProxy constinArgument_inRightType,
                                  const GALGAS_bool constinArgument_inOperandIsHandled,
                                  const GALGAS_string constinArgument_inOperatorNameForErrorMessage,
                                  const GALGAS_location constinArgument_inErrorLocation,
                                  GALGAS_semanticExpressionForGeneration & ioArgument_ioRightExpression,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (constinArgument_inOperandIsHandled.operator_not (SOURCE_FILE_AT_LINE (970))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("left operand type is '@").operator_concat (constinArgument_inLeftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (972)) COMMA_SOURCE_FILE_AT_LINE (972)).operator_concat (GALGAS_string ("' and does not accept '") COMMA_SOURCE_FILE_AT_LINE (972)).operator_concat (constinArgument_inOperatorNameForErrorMessage COMMA_SOURCE_FILE_AT_LINE (972)).operator_concat (GALGAS_string ("' operator (right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (972)).operator_concat (constinArgument_inRightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (972)) COMMA_SOURCE_FILE_AT_LINE (972)).operator_concat (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (972)) COMMA_SOURCE_FILE_AT_LINE (971)) ;
  }else if (test_0.isValid ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_unifiedTypeMapProxy var_rightType = constinArgument_inRightType ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_bool var_ok = GALGAS_bool (kIsEqual, constinArgument_inLeftType.objectCompare (var_rightType)) ;
    //-------- @loopInstructionForGeneration
    if (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (977)).isValid ()) {
      PMUInt32 variant_51776 = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (977)).uintValue () ;
      bool loop_51776 = true ;
      while (loop_51776) {
        loop_51776 = var_ok.operator_not (SOURCE_FILE_AT_LINE (977)).operator_and (var_rightType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (977)).reader_isNull (SOURCE_FILE_AT_LINE (977)).operator_not (SOURCE_FILE_AT_LINE (977)) COMMA_SOURCE_FILE_AT_LINE (977)).isValid () ;
        if (loop_51776) {
          loop_51776 = var_ok.operator_not (SOURCE_FILE_AT_LINE (977)).operator_and (var_rightType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (977)).reader_isNull (SOURCE_FILE_AT_LINE (977)).operator_not (SOURCE_FILE_AT_LINE (977)) COMMA_SOURCE_FILE_AT_LINE (977)).boolValue () ;
        }
        if (loop_51776 && (0 == variant_51776)) {
          loop_51776 = false ;
          inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (977)) ;
        }
        if (loop_51776) {
          variant_51776 -- ;
          //-------- @assignmentInstructionForGeneration
          var_rightType = var_rightType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (978)) ;
          //-------- @assignmentInstructionForGeneration
          var_ok = GALGAS_bool (kIsEqual, constinArgument_inLeftType.objectCompare (var_rightType)) ;
        }
      }
    }
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_1 (var_ok.operator_not (SOURCE_FILE_AT_LINE (982))) ;
    if (test_1.isValidAndTrue ()) {
      //-------- @ifInstructionForGeneration
      const GALGAS_bool test_2 (constinArgument_inRightType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (984)).reader_hasKey (constinArgument_inLeftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (984)) COMMA_SOURCE_FILE_AT_LINE (984))) ;
      if (test_2.isValidAndTrue ()) {
        //-------- @localVariableDeclarationForGeneration
        GALGAS_unifiedTypeMapProxyList var_argumentTypeList ;
        //-------- @localVariableDeclarationForGeneration
        GALGAS_bool var_hasCompilerArgument ;
        //-------- @localVariableDeclarationForGeneration
        GALGAS_unifiedTypeMapProxy var_returnedType ;
        //-------- @localVariableDeclarationForGeneration
        GALGAS_bool var_isCategory ;
        //-------- @methodCallInstructionForGeneration
        GALGAS_location joker_52375_0 ; // Joker input parameter
        GALGAS_methodQualifier joker_52443_2 ; // Joker input parameter
        GALGAS_string joker_52443_1 ; // Joker input parameter
        constinArgument_inRightType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (989)).method_searchKey (constinArgument_inLeftType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (990)), var_isCategory, var_argumentTypeList, joker_52375_0, var_hasCompilerArgument, var_returnedType, joker_52443_2, joker_52443_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (989)) ;
        //-------- END @methodCallInstructionForGeneration
        //-------- @assignmentInstructionForGeneration
        var_ok = GALGAS_bool (kIsEqual, var_argumentTypeList.reader_length (SOURCE_FILE_AT_LINE (998)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (kIsEqual, var_returnedType.objectCompare (constinArgument_inLeftType)) COMMA_SOURCE_FILE_AT_LINE (998)) ;
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_semanticExpressionForGeneration var_conversionExpression = GALGAS_readerCallExpressionForGeneration::constructor_new (constinArgument_inLeftType, constinArgument_inErrorLocation, var_isCategory, ioArgument_ioRightExpression, GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1005)), constinArgument_inLeftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1006)), GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1007)), var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (1000)) ;
        //-------- @assignmentInstructionForGeneration
        ioArgument_ioRightExpression = var_conversionExpression ;
      }
      //-------- @ifInstructionForGeneration
      const GALGAS_bool test_3 (var_ok.operator_not (SOURCE_FILE_AT_LINE (1012))) ;
      if (test_3.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("left operand type of '").operator_concat (constinArgument_inOperatorNameForErrorMessage COMMA_SOURCE_FILE_AT_LINE (1014)).operator_concat (GALGAS_string ("' operator is '@") COMMA_SOURCE_FILE_AT_LINE (1014)).operator_concat (constinArgument_inLeftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1014)) COMMA_SOURCE_FILE_AT_LINE (1014)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1015)).operator_concat (constinArgument_inRightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1015)) COMMA_SOURCE_FILE_AT_LINE (1015)).operator_concat (GALGAS_string ("', it should be either the same, either inherits from left operand type, either have a '") COMMA_SOURCE_FILE_AT_LINE (1016)).operator_concat (constinArgument_inLeftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1017)) COMMA_SOURCE_FILE_AT_LINE (1017)).operator_concat (GALGAS_string ("' reader without argument that returns a '@") COMMA_SOURCE_FILE_AT_LINE (1017)).operator_concat (constinArgument_inLeftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1017)) COMMA_SOURCE_FILE_AT_LINE (1017)).operator_concat (GALGAS_string ("' object") COMMA_SOURCE_FILE_AT_LINE (1017)) COMMA_SOURCE_FILE_AT_LINE (1013)) ;
      }
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category method '@semanticExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_semanticExpressionAST_analyzeSemanticExpression> gCategoryMethodTable_semanticExpressionAST_analyzeSemanticExpression ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeSemanticExpression (const PMSInt32 inClassIndex,
                                                    categoryMethodSignature_semanticExpressionAST_analyzeSemanticExpression inMethod) {
  gCategoryMethodTable_semanticExpressionAST_analyzeSemanticExpression.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_semanticExpressionAST_analyzeSemanticExpression (void) {
  gCategoryMethodTable_semanticExpressionAST_analyzeSemanticExpression.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticExpressionAST_analyzeSemanticExpression (NULL,
                                                                            freeCategoryMethod_semanticExpressionAST_analyzeSemanticExpression) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                   const GALGAS_analysisContext constin_inAnalysisContext,
                                                   GALGAS_variableMap & io_ioVariableMap,
                                                   GALGAS_semanticExpressionForGeneration & out_outExpression,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outExpression.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_semanticExpressionAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_semanticExpressionAST_analyzeSemanticExpression f = NULL ;
    if (classIndex < gCategoryMethodTable_semanticExpressionAST_analyzeSemanticExpression.count ()) {
      f = gCategoryMethodTable_semanticExpressionAST_analyzeSemanticExpression (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_semanticExpressionAST_analyzeSemanticExpression.count ()) {
           f = gCategoryMethodTable_semanticExpressionAST_analyzeSemanticExpression (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_semanticExpressionAST_analyzeSemanticExpression.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    f (inObject, constin_inAnalysisContext, io_ioVariableMap, out_outExpression, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@selfCopyInExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_selfCopyInExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                              const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                              GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                              GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selfCopyInExpressionAST * object = (const cPtr_selfCopyInExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_selfCopyInExpressionAST) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy.reader_isNull (SOURCE_FILE_AT_LINE (380))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mSelfLocation, GALGAS_string ("'selfcopy' cannot be used in this context") COMMA_SOURCE_FILE_AT_LINE (381)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_0.isValid ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_selfCppName = constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppPointer ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_selfCopyInExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy, object->mAttribute_mSelfLocation, var_selfCppName COMMA_SOURCE_FILE_AT_LINE (385)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_selfCopyInExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_selfCopyInExpressionAST.mSlotID,
                                                 categoryMethod_selfCopyInExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selfCopyInExpressionAST_analyzeSemanticExpression (defineCategoryMethod_selfCopyInExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@hereExpressionAST analyzeSemanticExpression' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_hereExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                        const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                        GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                        GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_hereExpressionAST * object = (const cPtr_hereExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_hereExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_hereExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLocationType, object->mAttribute_mLocation COMMA_SOURCE_FILE_AT_LINE (396)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_hereExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_hereExpressionAST.mSlotID,
                                                 categoryMethod_hereExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_hereExpressionAST_analyzeSemanticExpression (defineCategoryMethod_hereExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@trueExpressionAST analyzeSemanticExpression' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_trueExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                        const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                        GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                        GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_trueExpressionAST * object = (const cPtr_trueExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_trueExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_trueExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mLocation COMMA_SOURCE_FILE_AT_LINE (406)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_trueExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_trueExpressionAST.mSlotID,
                                                 categoryMethod_trueExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_trueExpressionAST_analyzeSemanticExpression (defineCategoryMethod_trueExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@falseExpressionAST analyzeSemanticExpression' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_falseExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                         const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                         GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                         GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                         C_Compiler * /* inCompiler */
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_falseExpressionAST * object = (const cPtr_falseExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_falseExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_falseExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mLocation COMMA_SOURCE_FILE_AT_LINE (416)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_falseExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_falseExpressionAST.mSlotID,
                                                 categoryMethod_falseExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_falseExpressionAST_analyzeSemanticExpression (defineCategoryMethod_falseExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@literalCharExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_literalCharExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                               const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_literalCharExpressionAST * object = (const cPtr_literalCharExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_literalCharExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalCharExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mCharType, object->mAttribute_mCharacter.reader_location (SOURCE_FILE_AT_LINE (426)), object->mAttribute_mCharacter.reader_char (SOURCE_FILE_AT_LINE (426)) COMMA_SOURCE_FILE_AT_LINE (426)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_literalCharExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_literalCharExpressionAST.mSlotID,
                                                 categoryMethod_literalCharExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_literalCharExpressionAST_analyzeSemanticExpression (defineCategoryMethod_literalCharExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@literalStringExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_literalStringExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                 const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                 GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                 GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_literalStringExpressionAST * object = (const cPtr_literalStringExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_literalStringExpressionAST) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_stringlist enumerator_29560 (object->mAttribute_mStringSequence, true) ;
  //--- simple foreach instruction
  while (enumerator_29560.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    var_s.dotAssign_operation (enumerator_29560.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (438)) ;
    enumerator_29560.gotoNextObject () ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalStringExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType, object->mAttribute_mLocation, var_s COMMA_SOURCE_FILE_AT_LINE (440)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_literalStringExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_literalStringExpressionAST.mSlotID,
                                                 categoryMethod_literalStringExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_literalStringExpressionAST_analyzeSemanticExpression (defineCategoryMethod_literalStringExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@literalDoubleExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_literalDoubleExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                 const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                 GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                 GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_literalDoubleExpressionAST * object = (const cPtr_literalDoubleExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_literalDoubleExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalDoubleExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mDoubleType, object->mAttribute_mValue.reader_location (SOURCE_FILE_AT_LINE (450)), object->mAttribute_mValue.reader_double (SOURCE_FILE_AT_LINE (450)) COMMA_SOURCE_FILE_AT_LINE (450)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_literalDoubleExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_literalDoubleExpressionAST.mSlotID,
                                                 categoryMethod_literalDoubleExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_literalDoubleExpressionAST_analyzeSemanticExpression (defineCategoryMethod_literalDoubleExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@literalUIntExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_literalUIntExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                               const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_literalUIntExpressionAST * object = (const cPtr_literalUIntExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_literalUIntExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalUIntExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType, object->mAttribute_mValue.reader_location (SOURCE_FILE_AT_LINE (460)), object->mAttribute_mValue.reader_uint (SOURCE_FILE_AT_LINE (460)) COMMA_SOURCE_FILE_AT_LINE (460)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_literalUIntExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_literalUIntExpressionAST.mSlotID,
                                                 categoryMethod_literalUIntExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_literalUIntExpressionAST_analyzeSemanticExpression (defineCategoryMethod_literalUIntExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@literalUInt64ExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_literalUInt_36__34_ExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                       GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_literalUInt_36__34_ExpressionAST * object = (const cPtr_literalUInt_36__34_ExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_literalUInt_36__34_ExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalUInt_36__34_ExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUInt_36__34_Type, object->mAttribute_mValue.reader_location (SOURCE_FILE_AT_LINE (470)), object->mAttribute_mValue.reader_uint_36__34_ (SOURCE_FILE_AT_LINE (470)) COMMA_SOURCE_FILE_AT_LINE (470)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_literalUInt_36__34_ExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_literalUInt_36__34_ExpressionAST.mSlotID,
                                                 categoryMethod_literalUInt_36__34_ExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_literalUInt_36__34_ExpressionAST_analyzeSemanticExpression (defineCategoryMethod_literalUInt_36__34_ExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@literalSIntExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_literalSIntExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                               const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_literalSIntExpressionAST * object = (const cPtr_literalSIntExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_literalSIntExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalSIntExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mSIntType, object->mAttribute_mValue.reader_location (SOURCE_FILE_AT_LINE (480)), object->mAttribute_mValue.reader_sint (SOURCE_FILE_AT_LINE (480)) COMMA_SOURCE_FILE_AT_LINE (480)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_literalSIntExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_literalSIntExpressionAST.mSlotID,
                                                 categoryMethod_literalSIntExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_literalSIntExpressionAST_analyzeSemanticExpression (defineCategoryMethod_literalSIntExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@literalSInt64ExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_literalSInt_36__34_ExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                       GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_literalSInt_36__34_ExpressionAST * object = (const cPtr_literalSInt_36__34_ExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_literalSInt_36__34_ExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalSInt_36__34_ExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mSInt_36__34_Type, object->mAttribute_mValue.reader_location (SOURCE_FILE_AT_LINE (490)), object->mAttribute_mValue.reader_sint_36__34_ (SOURCE_FILE_AT_LINE (490)) COMMA_SOURCE_FILE_AT_LINE (490)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_literalSInt_36__34_ExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_literalSInt_36__34_ExpressionAST.mSlotID,
                                                 categoryMethod_literalSInt_36__34_ExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_literalSInt_36__34_ExpressionAST_analyzeSemanticExpression (defineCategoryMethod_literalSInt_36__34_ExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@constructorExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_constructorExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                               const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_constructorExpressionAST * object = (const cPtr_constructorExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_constructorExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_returnedType ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_constructorType ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionListForGeneration var_constructorEffectiveParameterList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_hasCompilerArgument ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeConstructorInvocation (constinArgument_inAnalysisContext, ioArgument_ioVariableMap, object->mAttribute_mTypeName, object->mAttribute_mConstructorName, object->mAttribute_mExpressions, var_returnedType, var_constructorType, var_constructorEffectiveParameterList, var_hasCompilerArgument, inCompiler COMMA_SOURCE_FILE_AT_LINE (565)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_constructorExpressionForGeneration::constructor_new (var_returnedType, object->mAttribute_mConstructorName.reader_location (SOURCE_FILE_AT_LINE (579)), var_constructorType, object->mAttribute_mConstructorName.reader_string (SOURCE_FILE_AT_LINE (581)), var_constructorEffectiveParameterList, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (577)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_constructorExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_constructorExpressionAST.mSlotID,
                                                 categoryMethod_constructorExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_constructorExpressionAST_analyzeSemanticExpression (defineCategoryMethod_constructorExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@readerCallExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_readerCallExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                              const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                              GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                              GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_readerCallExpressionAST * object = (const cPtr_readerCallExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_readerCallExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_receiverExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mReceiver.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_receiverExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (596)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_receiverType = var_receiverExpression.reader_mType (SOURCE_FILE_AT_LINE (597)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_readerMap var_readerMap = var_receiverType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (599)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxyList var_readerFormalArgumentTypeList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_isCategory ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_hasCompilerArgument ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_returnedType ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringlist var_fieldList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (605)) ;
  //-------- @readOnlyWithInstructionForGeneration
  const cMapElement_readerMap * objectArray_36529 = (const cMapElement_readerMap *) var_readerMap.readAccessForWithInstruction_hasKey (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (606))) ;
  if (NULL != objectArray_36529) {
      macroValidSharedObject (objectArray_36529, const cMapElement_readerMap) ;
    //-------- @assignmentInstructionForGeneration
    var_readerFormalArgumentTypeList = objectArray_36529->mAttribute_mArgumentTypeList ;
    //-------- @assignmentInstructionForGeneration
    var_hasCompilerArgument = objectArray_36529->mAttribute_mHasCompilerArgument ;
    //-------- @assignmentInstructionForGeneration
    var_returnedType = objectArray_36529->mAttribute_mReturnedType ;
    //-------- @assignmentInstructionForGeneration
    var_isCategory = objectArray_36529->mAttribute_mIsCategory ;
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_0 (GALGAS_bool (kIsNotEqual, objectArray_36529->mAttribute_mErrorMessage.objectCompare (GALGAS_string::makeEmptyString ()))) ;
    if (test_0.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_1 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, objectArray_36529->mAttribute_mErrorMessage COMMA_SOURCE_FILE_AT_LINE (612)) ;
    }
  }else{
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_uint var_matchingReaderCount = GALGAS_uint ((PMUInt32) 0U) ;
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_2 (GALGAS_bool (kIsEqual, var_receiverType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (616)).objectCompare (GALGAS_typeKindEnum::constructor_structType (SOURCE_FILE_AT_LINE (616))))) ;
    if (test_2.isValidAndTrue ()) {
      //-------- @assignmentInstructionForGeneration
      var_readerFormalArgumentTypeList = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (617)) ;
      //-------- @assignmentInstructionForGeneration
      var_hasCompilerArgument = GALGAS_bool (true) ;
      //-------- @assignmentInstructionForGeneration
      var_returnedType = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (619)) ;
      //-------- @assignmentInstructionForGeneration
      var_isCategory = GALGAS_bool (true) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_typedAttributeList enumerator_37188 (var_receiverType.reader_mCurrentTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (621)), true) ;
      //--- simple foreach instruction
      while (enumerator_37188.hasCurrentObject ()) {
        //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
        GALGAS_unifiedTypeMapProxy var_attributeType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (enumerator_37188.current_mAttributeTypeProxy (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (622)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (622)), inCompiler COMMA_SOURCE_FILE_AT_LINE (622)) ;
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_readerMap var_aMap = var_attributeType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (623)) ;
        //-------- @readOnlyWithInstructionForGeneration
        const cMapElement_readerMap * objectArray_37528 = (const cMapElement_readerMap *) var_aMap.readAccessForWithInstruction_hasKey (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (625))) ;
        if (NULL != objectArray_37528) {
            macroValidSharedObject (objectArray_37528, const cMapElement_readerMap) ;
          //-------- @incrementInstructionForGeneration
          var_matchingReaderCount.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (626)) ;
          //-------- @assignmentInstructionForGeneration
          var_readerFormalArgumentTypeList = objectArray_37528->mAttribute_mArgumentTypeList ;
          //-------- @assignmentInstructionForGeneration
          var_hasCompilerArgument = objectArray_37528->mAttribute_mHasCompilerArgument ;
          //-------- @assignmentInstructionForGeneration
          var_returnedType = objectArray_37528->mAttribute_mReturnedType ;
          //-------- @assignmentInstructionForGeneration
          var_isCategory = objectArray_37528->mAttribute_mIsCategory ;
          //-------- @addAssignInstructionForGeneration
          var_fieldList.addAssign_operation (enumerator_37188.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (631)) COMMA_SOURCE_FILE_AT_LINE (631)) ;
          //-------- @ifInstructionForGeneration
          const GALGAS_bool test_3 (GALGAS_bool (kIsNotEqual, objectArray_37528->mAttribute_mErrorMessage.objectCompare (GALGAS_string::makeEmptyString ()))) ;
          if (test_3.isValidAndTrue ()) {
            //-------- @errorInstructionForGeneration
            GALGAS_location location_4 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_4, objectArray_37528->mAttribute_mErrorMessage COMMA_SOURCE_FILE_AT_LINE (633)) ;
          }
        }
        enumerator_37188.gotoNextObject () ;
      }
      //-------- @ifInstructionForGeneration
      const GALGAS_bool test_5 (GALGAS_bool (kIsEqual, var_matchingReaderCount.objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
      if (test_5.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_6 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_6, GALGAS_string ("the '@").operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (639)) COMMA_SOURCE_FILE_AT_LINE (639)).operator_concat (GALGAS_string ("' struct type does not define the '") COMMA_SOURCE_FILE_AT_LINE (639)).operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (639)) COMMA_SOURCE_FILE_AT_LINE (639)).operator_concat (GALGAS_string ("' reader, and none of its fields defines it") COMMA_SOURCE_FILE_AT_LINE (640)) COMMA_SOURCE_FILE_AT_LINE (638)) ;
        var_readerFormalArgumentTypeList.drop () ; // Release error dropped variable
        var_hasCompilerArgument.drop () ; // Release error dropped variable
        var_returnedType.drop () ; // Release error dropped variable
        var_isCategory.drop () ; // Release error dropped variable
      }else if (test_5.isValid ()) {
        //-------- @ifInstructionForGeneration
        const GALGAS_bool test_7 (GALGAS_bool (kIsStrictSup, var_matchingReaderCount.objectCompare (GALGAS_uint ((PMUInt32) 1U)))) ;
        if (test_7.isValidAndTrue ()) {
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
          //-------- @foreachInstructionForGeneration
          cEnumerator_stringlist enumerator_38412 (var_fieldList, true) ;
          //--- simple foreach instruction
          while (enumerator_38412.hasCurrentObject ()) {
            //-------- @appendInstructionForGeneration
            var_s.dotAssign_operation (enumerator_38412.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (646)) ;
            if (enumerator_38412.hasNextObject ()) {
              //-------- @appendInstructionForGeneration
              var_s.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (647)) ;
            }
            enumerator_38412.gotoNextObject () ;
          }
          //-------- @errorInstructionForGeneration
          GALGAS_location location_8 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_8, GALGAS_string ("the '@").operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (650)) COMMA_SOURCE_FILE_AT_LINE (650)).operator_concat (GALGAS_string ("' struct type does not define the '") COMMA_SOURCE_FILE_AT_LINE (650)).operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (650)) COMMA_SOURCE_FILE_AT_LINE (650)).operator_concat (GALGAS_string ("' reader, and several of its fields defines it:") COMMA_SOURCE_FILE_AT_LINE (651)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (651)).operator_concat (GALGAS_string (" (exactly one field should define it)") COMMA_SOURCE_FILE_AT_LINE (651)) COMMA_SOURCE_FILE_AT_LINE (649)) ;
          var_readerFormalArgumentTypeList.drop () ; // Release error dropped variable
          var_hasCompilerArgument.drop () ; // Release error dropped variable
          var_returnedType.drop () ; // Release error dropped variable
          var_isCategory.drop () ; // Release error dropped variable
        }
      }
    }else if (test_2.isValid ()) {
      //-------- @ifInstructionForGeneration
      const GALGAS_bool test_9 (GALGAS_bool (kIsEqual, var_readerMap.reader_count (SOURCE_FILE_AT_LINE (655)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
      if (test_9.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_10 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_10, GALGAS_string ("the '@").operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (657)) COMMA_SOURCE_FILE_AT_LINE (657)).operator_concat (GALGAS_string ("' type does not define any reader") COMMA_SOURCE_FILE_AT_LINE (657)) COMMA_SOURCE_FILE_AT_LINE (656)) ;
        var_readerFormalArgumentTypeList.drop () ; // Release error dropped variable
        var_hasCompilerArgument.drop () ; // Release error dropped variable
        var_returnedType.drop () ; // Release error dropped variable
        var_isCategory.drop () ; // Release error dropped variable
      }else if (test_9.isValid ()) {
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_readerMap enumerator_39112 (var_readerMap, true) ;
        //--- simple foreach instruction
        while (enumerator_39112.hasCurrentObject ()) {
          //-------- @appendInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "  - ").operator_concat (enumerator_39112.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (663)) COMMA_SOURCE_FILE_AT_LINE (663)) COMMA_SOURCE_FILE_AT_LINE (663)) ;
          //-------- @foreachInstructionForGeneration
          cEnumerator_unifiedTypeMapProxyList enumerator_39180 (enumerator_39112.current_mArgumentTypeList (HERE), true) ;
          //--- simple foreach instruction
          while (enumerator_39180.hasCurrentObject ()) {
            //-------- @appendInstructionForGeneration
            var_s.dotAssign_operation (GALGAS_string (" \?@").operator_concat (enumerator_39180.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (665)) COMMA_SOURCE_FILE_AT_LINE (665)) COMMA_SOURCE_FILE_AT_LINE (665)) ;
            enumerator_39180.gotoNextObject () ;
          }
          //-------- @appendInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string (" -> @").operator_concat (enumerator_39112.current_mReturnedType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (667)) COMMA_SOURCE_FILE_AT_LINE (667)) COMMA_SOURCE_FILE_AT_LINE (667)) ;
          enumerator_39112.gotoNextObject () ;
        }
        //-------- @errorInstructionForGeneration
        //--- @ifExpressionForGeneration
        GALGAS_string temp_11 ;
        if (GALGAS_bool (kIsStrictSup, var_readerMap.reader_count (SOURCE_FILE_AT_LINE (671)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).isValidAndTrue ()) {
          temp_11 = GALGAS_string ("readers are") ;
        }else{
          temp_11 = GALGAS_string ("reader is") ;
        }
        GALGAS_location location_12 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_12, GALGAS_string ("the '@").operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (670)) COMMA_SOURCE_FILE_AT_LINE (670)).operator_concat (GALGAS_string ("' type does not define the '") COMMA_SOURCE_FILE_AT_LINE (670)).operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (670)) COMMA_SOURCE_FILE_AT_LINE (670)).operator_concat (GALGAS_string ("' reader; available ") COMMA_SOURCE_FILE_AT_LINE (670)).operator_concat (temp_11 COMMA_SOURCE_FILE_AT_LINE (671)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (672)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (672)) COMMA_SOURCE_FILE_AT_LINE (669)) ;
        var_readerFormalArgumentTypeList.drop () ; // Release error dropped variable
        var_hasCompilerArgument.drop () ; // Release error dropped variable
        var_returnedType.drop () ; // Release error dropped variable
        var_isCategory.drop () ; // Release error dropped variable
      }
    }
  }
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_13 (GALGAS_bool (kIsNotEqual, object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (678)).objectCompare (var_readerFormalArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (678))))) ;
  if (test_13.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_14 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_14, GALGAS_string ("calling the '").operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (679)) COMMA_SOURCE_FILE_AT_LINE (679)).operator_concat (GALGAS_string ("' reader of '@") COMMA_SOURCE_FILE_AT_LINE (679)).operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (679)) COMMA_SOURCE_FILE_AT_LINE (679)).operator_concat (GALGAS_string ("' requires ") COMMA_SOURCE_FILE_AT_LINE (679)).operator_concat (var_readerFormalArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (680)).reader_string (SOURCE_FILE_AT_LINE (680)) COMMA_SOURCE_FILE_AT_LINE (680)).operator_concat (GALGAS_string (" parameter(s), while this call has ") COMMA_SOURCE_FILE_AT_LINE (680)).operator_concat (object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (681)).reader_string (SOURCE_FILE_AT_LINE (681)) COMMA_SOURCE_FILE_AT_LINE (681)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (681)) COMMA_SOURCE_FILE_AT_LINE (679)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_13.isValid ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_semanticExpressionListForGeneration var_constructorEffectiveParameterList = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (683)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_semanticExpressionListAST enumerator_40138 (object->mAttribute_mExpressions, true) ;
    cEnumerator_unifiedTypeMapProxyList enumerator_40170 (var_readerFormalArgumentTypeList, true) ;
    //--- simple foreach instruction
    while (enumerator_40138.hasCurrentObject () && enumerator_40170.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_semanticExpressionForGeneration var_exp ;
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_40138.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_exp, inCompiler COMMA_SOURCE_FILE_AT_LINE (686)) ;
      //-------- END @methodCallInstructionForGeneration
      { //-------- @routineCallInstructionForGeneration
      routine_checkAssignmentTypes (enumerator_40170.current_mType (HERE), var_exp.reader_mType (SOURCE_FILE_AT_LINE (687)), enumerator_40138.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (687)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @addAssignInstructionForGeneration
      var_constructorEffectiveParameterList.addAssign_operation (var_exp COMMA_SOURCE_FILE_AT_LINE (688)) ;
      enumerator_40138.gotoNextObject () ;
      enumerator_40170.gotoNextObject () ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_readerCallExpressionForGeneration::constructor_new (var_returnedType, object->mAttribute_mReaderName.reader_location (SOURCE_FILE_AT_LINE (692)), var_isCategory, var_receiverExpression, var_fieldList, object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (696)), var_constructorEffectiveParameterList, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (690)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_readerCallExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_readerCallExpressionAST.mSlotID,
                                                 categoryMethod_readerCallExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_readerCallExpressionAST_analyzeSemanticExpression (defineCategoryMethod_readerCallExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@thisReaderCallExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_thisReaderCallExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                  const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                  GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                  GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_thisReaderCallExpressionAST * object = (const cPtr_thisReaderCallExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_thisReaderCallExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_thisTypeProxy ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (ioArgument_ioVariableMap.reader_hasKey (function_selfMarkName (inCompiler COMMA_SOURCE_FILE_AT_LINE (712)) COMMA_SOURCE_FILE_AT_LINE (712))) ;
  if (test_0.isValidAndTrue ()) {
    { //-------- @modifierCallInstructionForGeneration
    GALGAS_string joker_41248_0 ; // Joker input parameter
    GALGAS_string joker_41251_0 ; // Joker input parameter
    ioArgument_ioVariableMap.modifier_searchForReadAccess (GALGAS_lstring::constructor_new (function_selfMarkName (inCompiler COMMA_SOURCE_FILE_AT_LINE (713)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (713)), var_thisTypeProxy, joker_41248_0, joker_41251_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (713)) ;
    } //-------- END @typeMethodInstructionForGeneration
  }else if (test_0.isValid ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mLocation, GALGAS_string ("'this' can be used only in methods, modifiers and readers") COMMA_SOURCE_FILE_AT_LINE (715)) ;
    var_thisTypeProxy.drop () ; // Release error dropped variable
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_readerMap var_readerMap = var_thisTypeProxy.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (718)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxyList var_readerFormalArgumentTypeList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_isCategory ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_hasCompilerArgument ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_returnedType ;
  //-------- @readOnlyWithInstructionForGeneration
  const cMapElement_readerMap * objectArray_41633 = (const cMapElement_readerMap *) var_readerMap.readAccessForWithInstruction_hasKey (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (724))) ;
  if (NULL != objectArray_41633) {
      macroValidSharedObject (objectArray_41633, const cMapElement_readerMap) ;
    //-------- @assignmentInstructionForGeneration
    var_readerFormalArgumentTypeList = objectArray_41633->mAttribute_mArgumentTypeList ;
    //-------- @assignmentInstructionForGeneration
    var_hasCompilerArgument = objectArray_41633->mAttribute_mHasCompilerArgument ;
    //-------- @assignmentInstructionForGeneration
    var_returnedType = objectArray_41633->mAttribute_mReturnedType ;
    //-------- @assignmentInstructionForGeneration
    var_isCategory = objectArray_41633->mAttribute_mIsCategory ;
  }else{
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_1 (GALGAS_bool (kIsEqual, var_readerMap.reader_count (SOURCE_FILE_AT_LINE (730)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
    if (test_1.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_2 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("the '@").operator_concat (var_thisTypeProxy.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (732)) COMMA_SOURCE_FILE_AT_LINE (732)).operator_concat (GALGAS_string ("' type does not define any reader") COMMA_SOURCE_FILE_AT_LINE (732)) COMMA_SOURCE_FILE_AT_LINE (731)) ;
      var_readerFormalArgumentTypeList.drop () ; // Release error dropped variable
      var_hasCompilerArgument.drop () ; // Release error dropped variable
      var_returnedType.drop () ; // Release error dropped variable
      var_isCategory.drop () ; // Release error dropped variable
    }else if (test_1.isValid ()) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_readerMap enumerator_42133 (var_readerMap, true) ;
      //--- simple foreach instruction
      while (enumerator_42133.hasCurrentObject ()) {
        //-------- @appendInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - ").operator_concat (enumerator_42133.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (738)) COMMA_SOURCE_FILE_AT_LINE (738)) COMMA_SOURCE_FILE_AT_LINE (738)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_unifiedTypeMapProxyList enumerator_42201 (enumerator_42133.current_mArgumentTypeList (HERE), true) ;
        //--- simple foreach instruction
        while (enumerator_42201.hasCurrentObject ()) {
          //-------- @appendInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string (" \?@").operator_concat (enumerator_42201.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (740)) COMMA_SOURCE_FILE_AT_LINE (740)) COMMA_SOURCE_FILE_AT_LINE (740)) ;
          enumerator_42201.gotoNextObject () ;
        }
        //-------- @appendInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string (" -> @").operator_concat (enumerator_42133.current_mReturnedType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (742)) COMMA_SOURCE_FILE_AT_LINE (742)) COMMA_SOURCE_FILE_AT_LINE (742)) ;
        enumerator_42133.gotoNextObject () ;
      }
      //-------- @errorInstructionForGeneration
      //--- @ifExpressionForGeneration
      GALGAS_string temp_3 ;
      if (GALGAS_bool (kIsStrictSup, var_readerMap.reader_count (SOURCE_FILE_AT_LINE (746)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).isValidAndTrue ()) {
        temp_3 = GALGAS_string ("readers are") ;
      }else{
        temp_3 = GALGAS_string ("reader is") ;
      }
      GALGAS_location location_4 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("the '@").operator_concat (var_thisTypeProxy.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (745)) COMMA_SOURCE_FILE_AT_LINE (745)).operator_concat (GALGAS_string ("' type does not define the '") COMMA_SOURCE_FILE_AT_LINE (745)).operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (745)) COMMA_SOURCE_FILE_AT_LINE (745)).operator_concat (GALGAS_string ("' reader; available ") COMMA_SOURCE_FILE_AT_LINE (745)).operator_concat (temp_3 COMMA_SOURCE_FILE_AT_LINE (746)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (747)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (747)) COMMA_SOURCE_FILE_AT_LINE (744)) ;
      var_readerFormalArgumentTypeList.drop () ; // Release error dropped variable
      var_hasCompilerArgument.drop () ; // Release error dropped variable
      var_returnedType.drop () ; // Release error dropped variable
      var_isCategory.drop () ; // Release error dropped variable
    }
  }
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_5 (GALGAS_bool (kIsNotEqual, object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (753)).objectCompare (var_readerFormalArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (753))))) ;
  if (test_5.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_6 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_6, GALGAS_string ("calling the '").operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (754)) COMMA_SOURCE_FILE_AT_LINE (754)).operator_concat (GALGAS_string ("' reader of '@") COMMA_SOURCE_FILE_AT_LINE (754)).operator_concat (var_thisTypeProxy.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (754)) COMMA_SOURCE_FILE_AT_LINE (754)).operator_concat (GALGAS_string ("' requires ") COMMA_SOURCE_FILE_AT_LINE (754)).operator_concat (var_readerFormalArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (755)).reader_string (SOURCE_FILE_AT_LINE (755)) COMMA_SOURCE_FILE_AT_LINE (755)).operator_concat (GALGAS_string (" parameter(s), while this call has ") COMMA_SOURCE_FILE_AT_LINE (755)).operator_concat (object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (756)).reader_string (SOURCE_FILE_AT_LINE (756)) COMMA_SOURCE_FILE_AT_LINE (756)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (756)) COMMA_SOURCE_FILE_AT_LINE (754)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_5.isValid ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_semanticExpressionListForGeneration var_constructorEffectiveParameterList = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (758)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_semanticExpressionListAST enumerator_43161 (object->mAttribute_mExpressions, true) ;
    cEnumerator_unifiedTypeMapProxyList enumerator_43193 (var_readerFormalArgumentTypeList, true) ;
    //--- simple foreach instruction
    while (enumerator_43161.hasCurrentObject () && enumerator_43193.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_semanticExpressionForGeneration var_exp ;
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_43161.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_exp, inCompiler COMMA_SOURCE_FILE_AT_LINE (761)) ;
      //-------- END @methodCallInstructionForGeneration
      { //-------- @routineCallInstructionForGeneration
      routine_checkAssignmentTypes (enumerator_43193.current_mType (HERE), var_exp.reader_mType (SOURCE_FILE_AT_LINE (762)), enumerator_43161.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (762)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @addAssignInstructionForGeneration
      var_constructorEffectiveParameterList.addAssign_operation (var_exp COMMA_SOURCE_FILE_AT_LINE (763)) ;
      enumerator_43161.gotoNextObject () ;
      enumerator_43193.gotoNextObject () ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_thisReaderCallExpressionForGeneration::constructor_new (var_returnedType, object->mAttribute_mReaderName.reader_location (SOURCE_FILE_AT_LINE (767)), var_isCategory, object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (769)), var_constructorEffectiveParameterList, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (765)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_thisReaderCallExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_thisReaderCallExpressionAST.mSlotID,
                                                 categoryMethod_thisReaderCallExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_thisReaderCallExpressionAST_analyzeSemanticExpression (defineCategoryMethod_thisReaderCallExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@superReaderCallExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_superReaderCallExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                   const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                   GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                   GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_superReaderCallExpressionAST * object = (const cPtr_superReaderCallExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_superReaderCallExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_superTypeProxy ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (ioArgument_ioVariableMap.reader_hasKey (function_selfMarkName (inCompiler COMMA_SOURCE_FILE_AT_LINE (808)) COMMA_SOURCE_FILE_AT_LINE (808))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_unifiedTypeMapProxy var_thisTypeProxy ;
    { //-------- @modifierCallInstructionForGeneration
    GALGAS_string joker_45019_0 ; // Joker input parameter
    GALGAS_string joker_45022_0 ; // Joker input parameter
    ioArgument_ioVariableMap.modifier_searchForReadAccess (GALGAS_lstring::constructor_new (function_selfMarkName (inCompiler COMMA_SOURCE_FILE_AT_LINE (810)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (810)), var_thisTypeProxy, joker_45019_0, joker_45022_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (810)) ;
    } //-------- END @typeMethodInstructionForGeneration
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_1 (var_thisTypeProxy.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (811)).reader_isNull (SOURCE_FILE_AT_LINE (811))) ;
    if (test_1.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mLocation, GALGAS_string ("'super' cannot be used, current class has no super class") COMMA_SOURCE_FILE_AT_LINE (812)) ;
      var_superTypeProxy.drop () ; // Release error dropped variable
    }else if (test_1.isValid ()) {
      //-------- @assignmentInstructionForGeneration
      var_superTypeProxy = var_thisTypeProxy.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (814)) ;
    }
  }else if (test_0.isValid ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mLocation, GALGAS_string ("'super' can be used only in methods, modifiers and readers") COMMA_SOURCE_FILE_AT_LINE (817)) ;
    var_superTypeProxy.drop () ; // Release error dropped variable
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_readerMap var_readerMap = var_superTypeProxy.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (820)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxyList var_readerFormalArgumentTypeList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_isCategory ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_hasCompilerArgument ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_returnedType ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_superClassThatImplementsReader ;
  //-------- @readOnlyWithInstructionForGeneration
  const cMapElement_readerMap * objectArray_45673 = (const cMapElement_readerMap *) var_readerMap.readAccessForWithInstruction_hasKey (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (827))) ;
  if (NULL != objectArray_45673) {
      macroValidSharedObject (objectArray_45673, const cMapElement_readerMap) ;
    //-------- @assignmentInstructionForGeneration
    var_readerFormalArgumentTypeList = objectArray_45673->mAttribute_mArgumentTypeList ;
    //-------- @assignmentInstructionForGeneration
    var_hasCompilerArgument = objectArray_45673->mAttribute_mHasCompilerArgument ;
    //-------- @assignmentInstructionForGeneration
    var_returnedType = objectArray_45673->mAttribute_mReturnedType ;
    //-------- @assignmentInstructionForGeneration
    var_isCategory = objectArray_45673->mAttribute_mIsCategory ;
    //-------- @assignmentInstructionForGeneration
    var_superClassThatImplementsReader = function_checkReaderImplementationInSuperClasses (object->mAttribute_mReaderName, var_superTypeProxy, inCompiler COMMA_SOURCE_FILE_AT_LINE (832)) ;
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_2 (GALGAS_bool (kIsEqual, var_superClassThatImplementsReader.objectCompare (GALGAS_string::makeEmptyString ()))) ;
    if (test_2.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_3 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the '").operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (834)) COMMA_SOURCE_FILE_AT_LINE (834)).operator_concat (GALGAS_string ("' reader is not implemented by super class(es)") COMMA_SOURCE_FILE_AT_LINE (834)) COMMA_SOURCE_FILE_AT_LINE (834)) ;
    }
  }else{
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_4 (GALGAS_bool (kIsEqual, var_readerMap.reader_count (SOURCE_FILE_AT_LINE (837)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
    if (test_4.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_5 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_5, GALGAS_string ("the '@").operator_concat (var_superTypeProxy.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (839)) COMMA_SOURCE_FILE_AT_LINE (839)).operator_concat (GALGAS_string ("' type does not define any reader") COMMA_SOURCE_FILE_AT_LINE (839)) COMMA_SOURCE_FILE_AT_LINE (838)) ;
      var_readerFormalArgumentTypeList.drop () ; // Release error dropped variable
      var_hasCompilerArgument.drop () ; // Release error dropped variable
      var_returnedType.drop () ; // Release error dropped variable
      var_isCategory.drop () ; // Release error dropped variable
      var_superClassThatImplementsReader.drop () ; // Release error dropped variable
    }else if (test_4.isValid ()) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_readerMap enumerator_46479 (var_readerMap, true) ;
      //--- simple foreach instruction
      while (enumerator_46479.hasCurrentObject ()) {
        //-------- @appendInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - ").operator_concat (enumerator_46479.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (845)) COMMA_SOURCE_FILE_AT_LINE (845)) COMMA_SOURCE_FILE_AT_LINE (845)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_unifiedTypeMapProxyList enumerator_46547 (enumerator_46479.current_mArgumentTypeList (HERE), true) ;
        //--- simple foreach instruction
        while (enumerator_46547.hasCurrentObject ()) {
          //-------- @appendInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string (" \?@").operator_concat (enumerator_46547.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (847)) COMMA_SOURCE_FILE_AT_LINE (847)) COMMA_SOURCE_FILE_AT_LINE (847)) ;
          enumerator_46547.gotoNextObject () ;
        }
        //-------- @appendInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string (" -> @").operator_concat (enumerator_46479.current_mReturnedType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (849)) COMMA_SOURCE_FILE_AT_LINE (849)) COMMA_SOURCE_FILE_AT_LINE (849)) ;
        enumerator_46479.gotoNextObject () ;
      }
      //-------- @errorInstructionForGeneration
      //--- @ifExpressionForGeneration
      GALGAS_string temp_6 ;
      if (GALGAS_bool (kIsStrictSup, var_readerMap.reader_count (SOURCE_FILE_AT_LINE (853)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).isValidAndTrue ()) {
        temp_6 = GALGAS_string ("readers are") ;
      }else{
        temp_6 = GALGAS_string ("reader is") ;
      }
      GALGAS_location location_7 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_7, GALGAS_string ("the '@").operator_concat (var_superTypeProxy.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (852)) COMMA_SOURCE_FILE_AT_LINE (852)).operator_concat (GALGAS_string ("' type does not define the '") COMMA_SOURCE_FILE_AT_LINE (852)).operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (852)) COMMA_SOURCE_FILE_AT_LINE (852)).operator_concat (GALGAS_string ("' reader; available ") COMMA_SOURCE_FILE_AT_LINE (852)).operator_concat (temp_6 COMMA_SOURCE_FILE_AT_LINE (853)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (854)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (854)) COMMA_SOURCE_FILE_AT_LINE (851)) ;
      var_readerFormalArgumentTypeList.drop () ; // Release error dropped variable
      var_hasCompilerArgument.drop () ; // Release error dropped variable
      var_returnedType.drop () ; // Release error dropped variable
      var_isCategory.drop () ; // Release error dropped variable
      var_superClassThatImplementsReader.drop () ; // Release error dropped variable
    }
  }
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_8 (GALGAS_bool (kIsNotEqual, object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (860)).objectCompare (var_readerFormalArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (860))))) ;
  if (test_8.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_9 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_9, GALGAS_string ("calling the '").operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (861)) COMMA_SOURCE_FILE_AT_LINE (861)).operator_concat (GALGAS_string ("' reader of '@") COMMA_SOURCE_FILE_AT_LINE (861)).operator_concat (var_superTypeProxy.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (861)) COMMA_SOURCE_FILE_AT_LINE (861)).operator_concat (GALGAS_string ("' requires ") COMMA_SOURCE_FILE_AT_LINE (861)).operator_concat (var_readerFormalArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (862)).reader_string (SOURCE_FILE_AT_LINE (862)) COMMA_SOURCE_FILE_AT_LINE (862)).operator_concat (GALGAS_string (" parameter(s), while this call has ") COMMA_SOURCE_FILE_AT_LINE (862)).operator_concat (object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (863)).reader_string (SOURCE_FILE_AT_LINE (863)) COMMA_SOURCE_FILE_AT_LINE (863)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (863)) COMMA_SOURCE_FILE_AT_LINE (861)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_8.isValid ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_semanticExpressionListForGeneration var_constructorEffectiveParameterList = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (865)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_semanticExpressionListAST enumerator_47541 (object->mAttribute_mExpressions, true) ;
    cEnumerator_unifiedTypeMapProxyList enumerator_47573 (var_readerFormalArgumentTypeList, true) ;
    //--- simple foreach instruction
    while (enumerator_47541.hasCurrentObject () && enumerator_47573.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_semanticExpressionForGeneration var_exp ;
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_47541.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_exp, inCompiler COMMA_SOURCE_FILE_AT_LINE (868)) ;
      //-------- END @methodCallInstructionForGeneration
      { //-------- @routineCallInstructionForGeneration
      routine_checkAssignmentTypes (enumerator_47573.current_mType (HERE), var_exp.reader_mType (SOURCE_FILE_AT_LINE (869)), enumerator_47541.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (869)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @addAssignInstructionForGeneration
      var_constructorEffectiveParameterList.addAssign_operation (var_exp COMMA_SOURCE_FILE_AT_LINE (870)) ;
      enumerator_47541.gotoNextObject () ;
      enumerator_47573.gotoNextObject () ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_superReaderCallExpressionForGeneration::constructor_new (var_returnedType, object->mAttribute_mReaderName.reader_location (SOURCE_FILE_AT_LINE (874)), var_isCategory, var_superClassThatImplementsReader, object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (877)), var_constructorEffectiveParameterList, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (872)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_superReaderCallExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_superReaderCallExpressionAST.mSlotID,
                                                 categoryMethod_superReaderCallExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_superReaderCallExpressionAST_analyzeSemanticExpression (defineCategoryMethod_superReaderCallExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@optionExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_optionExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                          const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                          GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                          GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_optionExpressionAST * object = (const cPtr_optionExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_optionExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_commandLineOptionMap var_boolOptionMap ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_commandLineOptionMap var_uintOptionMap ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_commandLineOptionMap var_stringOptionMap ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis.method_searchKey (object->mAttribute_mOptionComponentName, var_boolOptionMap, var_uintOptionMap, var_stringOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (894)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_found = var_boolOptionMap.reader_hasKey (object->mAttribute_mOptionEntryName.reader_string (SOURCE_FILE_AT_LINE (900)) COMMA_SOURCE_FILE_AT_LINE (900)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_returnedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (var_found.operator_not (SOURCE_FILE_AT_LINE (902))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @assignmentInstructionForGeneration
    var_found = var_uintOptionMap.reader_hasKey (object->mAttribute_mOptionEntryName.reader_string (SOURCE_FILE_AT_LINE (903)) COMMA_SOURCE_FILE_AT_LINE (903)) ;
    //-------- @assignmentInstructionForGeneration
    var_returnedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType ;
  }
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_1 (var_found.operator_not (SOURCE_FILE_AT_LINE (906))) ;
  if (test_1.isValidAndTrue ()) {
    //-------- @assignmentInstructionForGeneration
    var_found = var_stringOptionMap.reader_hasKey (object->mAttribute_mOptionEntryName.reader_string (SOURCE_FILE_AT_LINE (907)) COMMA_SOURCE_FILE_AT_LINE (907)) ;
    //-------- @assignmentInstructionForGeneration
    var_returnedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType ;
  }
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_2 (var_found) ;
  if (test_2.isValidAndTrue ()) {
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_3 (GALGAS_bool (kIsEqual, object->mAttribute_mOptionReaderName.reader_string (SOURCE_FILE_AT_LINE (911)).objectCompare (GALGAS_string ("value")))) ;
    if (test_3.isValidAndTrue ()) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_optionValueExpressionForGeneration::constructor_new (var_returnedType, object->mAttribute_mOptionComponentName.reader_location (SOURCE_FILE_AT_LINE (914)), object->mAttribute_mOptionComponentName.reader_string (SOURCE_FILE_AT_LINE (915)), object->mAttribute_mOptionEntryName.reader_string (SOURCE_FILE_AT_LINE (916)) COMMA_SOURCE_FILE_AT_LINE (912)) ;
    }else if (test_3.isValid ()) {
      //-------- @ifInstructionForGeneration
      const GALGAS_bool test_4 (GALGAS_bool (kIsEqual, object->mAttribute_mOptionReaderName.reader_string (SOURCE_FILE_AT_LINE (918)).objectCompare (GALGAS_string ("char")))) ;
      if (test_4.isValidAndTrue ()) {
        //-------- @assignmentInstructionForGeneration
        outArgument_outExpression = GALGAS_optionCharExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mCharType, object->mAttribute_mOptionComponentName.reader_location (SOURCE_FILE_AT_LINE (921)), object->mAttribute_mOptionComponentName.reader_string (SOURCE_FILE_AT_LINE (922)), object->mAttribute_mOptionEntryName.reader_string (SOURCE_FILE_AT_LINE (923)) COMMA_SOURCE_FILE_AT_LINE (919)) ;
      }else if (test_4.isValid ()) {
        //-------- @ifInstructionForGeneration
        const GALGAS_bool test_5 (GALGAS_bool (kIsEqual, object->mAttribute_mOptionReaderName.reader_string (SOURCE_FILE_AT_LINE (925)).objectCompare (GALGAS_string ("string")))) ;
        if (test_5.isValidAndTrue ()) {
          //-------- @assignmentInstructionForGeneration
          outArgument_outExpression = GALGAS_optionStringExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType, object->mAttribute_mOptionComponentName.reader_location (SOURCE_FILE_AT_LINE (928)), object->mAttribute_mOptionComponentName.reader_string (SOURCE_FILE_AT_LINE (929)), object->mAttribute_mOptionEntryName.reader_string (SOURCE_FILE_AT_LINE (930)) COMMA_SOURCE_FILE_AT_LINE (926)) ;
        }else if (test_5.isValid ()) {
          //-------- @ifInstructionForGeneration
          const GALGAS_bool test_6 (GALGAS_bool (kIsEqual, object->mAttribute_mOptionReaderName.reader_string (SOURCE_FILE_AT_LINE (932)).objectCompare (GALGAS_string ("comment")))) ;
          if (test_6.isValidAndTrue ()) {
            //-------- @assignmentInstructionForGeneration
            outArgument_outExpression = GALGAS_optionCommentExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType, object->mAttribute_mOptionComponentName.reader_location (SOURCE_FILE_AT_LINE (935)), object->mAttribute_mOptionComponentName.reader_string (SOURCE_FILE_AT_LINE (936)), object->mAttribute_mOptionEntryName.reader_string (SOURCE_FILE_AT_LINE (937)) COMMA_SOURCE_FILE_AT_LINE (933)) ;
          }else if (test_6.isValid ()) {
            //-------- @errorInstructionForGeneration
            GALGAS_location location_7 (object->mAttribute_mOptionReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_7, GALGAS_string ("only the 'value', 'char', 'string' and 'comment' readers are defined for an option") COMMA_SOURCE_FILE_AT_LINE (940)) ;
            outArgument_outExpression.drop () ; // Release error dropped variable
          }
        }
      }
    }
  }else if (test_2.isValid ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_commandLineOptionMap enumerator_50604 (var_boolOptionMap, true) ;
    //--- simple foreach instruction
    while (enumerator_50604.hasCurrentObject ()) {
      //-------- @appendInstructionForGeneration
      var_s.dotAssign_operation (GALGAS_string ("\n"
        "-  '").operator_concat (enumerator_50604.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (945)) COMMA_SOURCE_FILE_AT_LINE (945)).operator_concat (GALGAS_string ("' @bool option;") COMMA_SOURCE_FILE_AT_LINE (945)) COMMA_SOURCE_FILE_AT_LINE (945)) ;
      enumerator_50604.gotoNextObject () ;
    }
    //-------- @foreachInstructionForGeneration
    cEnumerator_commandLineOptionMap enumerator_50700 (var_uintOptionMap, true) ;
    //--- simple foreach instruction
    while (enumerator_50700.hasCurrentObject ()) {
      //-------- @appendInstructionForGeneration
      var_s.dotAssign_operation (GALGAS_string ("\n"
        "-  '").operator_concat (enumerator_50700.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (948)) COMMA_SOURCE_FILE_AT_LINE (948)).operator_concat (GALGAS_string ("' @uint option;") COMMA_SOURCE_FILE_AT_LINE (948)) COMMA_SOURCE_FILE_AT_LINE (948)) ;
      enumerator_50700.gotoNextObject () ;
    }
    //-------- @foreachInstructionForGeneration
    cEnumerator_commandLineOptionMap enumerator_50798 (var_stringOptionMap, true) ;
    //--- simple foreach instruction
    while (enumerator_50798.hasCurrentObject ()) {
      //-------- @appendInstructionForGeneration
      var_s.dotAssign_operation (GALGAS_string ("\n"
        "-  '").operator_concat (enumerator_50798.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (951)) COMMA_SOURCE_FILE_AT_LINE (951)).operator_concat (GALGAS_string ("' @string option;") COMMA_SOURCE_FILE_AT_LINE (951)) COMMA_SOURCE_FILE_AT_LINE (951)) ;
      enumerator_50798.gotoNextObject () ;
    }
    //-------- @errorInstructionForGeneration
    GALGAS_location location_8 (object->mAttribute_mOptionEntryName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_8, GALGAS_string ("the '").operator_concat (object->mAttribute_mOptionComponentName.reader_string (SOURCE_FILE_AT_LINE (954)) COMMA_SOURCE_FILE_AT_LINE (954)).operator_concat (GALGAS_string ("' option component does not define the '") COMMA_SOURCE_FILE_AT_LINE (954)).operator_concat (object->mAttribute_mOptionEntryName.reader_string (SOURCE_FILE_AT_LINE (954)) COMMA_SOURCE_FILE_AT_LINE (954)).operator_concat (GALGAS_string ("' option; available options:") COMMA_SOURCE_FILE_AT_LINE (954)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (954)) COMMA_SOURCE_FILE_AT_LINE (953)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_optionExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_optionExpressionAST.mSlotID,
                                                 categoryMethod_optionExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_optionExpressionAST_analyzeSemanticExpression (defineCategoryMethod_optionExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@concatExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_concatExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                          const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                          GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                          GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_concatExpressionAST * object = (const cPtr_concatExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_concatExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1033)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1036)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1038)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1041)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1042)).operator_and (function_binaryConcatOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1042)) COMMA_SOURCE_FILE_AT_LINE (1042)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("."), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1039)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_concatExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1048)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_concatExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_concatExpressionAST.mSlotID,
                                                 categoryMethod_concatExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_concatExpressionAST_analyzeSemanticExpression (defineCategoryMethod_concatExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@orExpressionAST analyzeSemanticExpression'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_orExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                      const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                      GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                      GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_orExpressionAST * object = (const cPtr_orExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_orExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1065)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1068)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1070)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1073)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1074)).operator_and (function_binaryOrOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1074)) COMMA_SOURCE_FILE_AT_LINE (1074)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("|"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1071)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_orExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1080)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_orExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_orExpressionAST.mSlotID,
                                                 categoryMethod_orExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_orExpressionAST_analyzeSemanticExpression (defineCategoryMethod_orExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@andExpressionAST analyzeSemanticExpression'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_andExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                       GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_andExpressionAST * object = (const cPtr_andExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_andExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1097)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1100)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1102)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1105)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1106)).operator_and (function_binaryAndOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1106)) COMMA_SOURCE_FILE_AT_LINE (1106)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("&"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1103)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_andExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1112)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_andExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_andExpressionAST.mSlotID,
                                                 categoryMethod_andExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_andExpressionAST_analyzeSemanticExpression (defineCategoryMethod_andExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@xorExpressionAST analyzeSemanticExpression'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_xorExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                       GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_xorExpressionAST * object = (const cPtr_xorExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_xorExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1129)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1132)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1134)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1137)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1138)).operator_and (function_binaryXorOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1138)) COMMA_SOURCE_FILE_AT_LINE (1138)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("^"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1135)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_xorExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1144)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_xorExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_xorExpressionAST.mSlotID,
                                                 categoryMethod_xorExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_xorExpressionAST_analyzeSemanticExpression (defineCategoryMethod_xorExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@equalExpressionAST analyzeSemanticExpression' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_equalExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                         const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                         GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                         GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_equalExpressionAST * object = (const cPtr_equalExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_equalExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1161)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1164)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1166)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1167)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsNotEqual, var_leftType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (1168)).reader_string (SOURCE_FILE_AT_LINE (1168)).objectCompare (var_rightType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (1168)).reader_string (SOURCE_FILE_AT_LINE (1168))))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (1170)).reader_string (SOURCE_FILE_AT_LINE (1170)) COMMA_SOURCE_FILE_AT_LINE (1170)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1170)).operator_concat (var_rightType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (1170)).reader_string (SOURCE_FILE_AT_LINE (1170)) COMMA_SOURCE_FILE_AT_LINE (1170)).operator_concat (GALGAS_string ("': '==' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (1170)) COMMA_SOURCE_FILE_AT_LINE (1169)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_0.isValid ()) {
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_equalExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1175)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_equalExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_equalExpressionAST.mSlotID,
                                                 categoryMethod_equalExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_equalExpressionAST_analyzeSemanticExpression (defineCategoryMethod_equalExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@notEqualExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_notEqualExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                            const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                            GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                            GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_notEqualExpressionAST * object = (const cPtr_notEqualExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_notEqualExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1193)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1196)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1198)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1199)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsNotEqual, var_leftType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (1200)).reader_string (SOURCE_FILE_AT_LINE (1200)).objectCompare (var_rightType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (1200)).reader_string (SOURCE_FILE_AT_LINE (1200))))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1202)) COMMA_SOURCE_FILE_AT_LINE (1202)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1202)).operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1202)) COMMA_SOURCE_FILE_AT_LINE (1202)).operator_concat (GALGAS_string ("': '!=' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (1202)) COMMA_SOURCE_FILE_AT_LINE (1201)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_0.isValid ()) {
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_notEqualExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1207)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_notEqualExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_notEqualExpressionAST.mSlotID,
                                                 categoryMethod_notEqualExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_notEqualExpressionAST_analyzeSemanticExpression (defineCategoryMethod_notEqualExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@lowerOrEqualExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_lowerOrEqualExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_lowerOrEqualExpressionAST * object = (const cPtr_lowerOrEqualExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lowerOrEqualExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1225)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1228)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1230)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1231)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1232)).operator_and (function_isComparable (inCompiler COMMA_SOURCE_FILE_AT_LINE (1232)) COMMA_SOURCE_FILE_AT_LINE (1232)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1234)) COMMA_SOURCE_FILE_AT_LINE (1234)).operator_concat (GALGAS_string ("' and does not support the '<=' operator") COMMA_SOURCE_FILE_AT_LINE (1234)) COMMA_SOURCE_FILE_AT_LINE (1233)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_0.isValid ()) {
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_1 (GALGAS_bool (kIsNotEqual, var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1237)).objectCompare (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1237))))) ;
    if (test_1.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1239)) COMMA_SOURCE_FILE_AT_LINE (1239)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1239)).operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1239)) COMMA_SOURCE_FILE_AT_LINE (1239)).operator_concat (GALGAS_string ("': '<=' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (1239)) COMMA_SOURCE_FILE_AT_LINE (1238)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else if (test_1.isValid ()) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_lowerOrEqualExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1244)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_lowerOrEqualExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_lowerOrEqualExpressionAST.mSlotID,
                                                 categoryMethod_lowerOrEqualExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_lowerOrEqualExpressionAST_analyzeSemanticExpression (defineCategoryMethod_lowerOrEqualExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@greaterOrEqualExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_greaterOrEqualExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                  const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                  GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                  GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_greaterOrEqualExpressionAST * object = (const cPtr_greaterOrEqualExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_greaterOrEqualExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1262)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1265)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1267)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1268)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1269)).operator_and (function_isComparable (inCompiler COMMA_SOURCE_FILE_AT_LINE (1269)) COMMA_SOURCE_FILE_AT_LINE (1269)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1271)) COMMA_SOURCE_FILE_AT_LINE (1271)).operator_concat (GALGAS_string ("' and does not support the '>=' operator") COMMA_SOURCE_FILE_AT_LINE (1271)) COMMA_SOURCE_FILE_AT_LINE (1270)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_0.isValid ()) {
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_1 (GALGAS_bool (kIsNotEqual, var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1274)).objectCompare (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1274))))) ;
    if (test_1.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1276)) COMMA_SOURCE_FILE_AT_LINE (1276)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1276)).operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1276)) COMMA_SOURCE_FILE_AT_LINE (1276)).operator_concat (GALGAS_string ("': '>=' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (1276)) COMMA_SOURCE_FILE_AT_LINE (1275)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else if (test_1.isValid ()) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_greaterOrEqualExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1281)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_greaterOrEqualExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_greaterOrEqualExpressionAST.mSlotID,
                                                 categoryMethod_greaterOrEqualExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_greaterOrEqualExpressionAST_analyzeSemanticExpression (defineCategoryMethod_greaterOrEqualExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@strictGreaterExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_strictGreaterExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                 const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                 GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                 GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_strictGreaterExpressionAST * object = (const cPtr_strictGreaterExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_strictGreaterExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1299)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1302)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1304)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1305)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1306)).operator_and (function_isComparable (inCompiler COMMA_SOURCE_FILE_AT_LINE (1306)) COMMA_SOURCE_FILE_AT_LINE (1306)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1308)) COMMA_SOURCE_FILE_AT_LINE (1308)).operator_concat (GALGAS_string ("' and does not support the '>' operator") COMMA_SOURCE_FILE_AT_LINE (1308)) COMMA_SOURCE_FILE_AT_LINE (1307)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_0.isValid ()) {
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_1 (GALGAS_bool (kIsNotEqual, var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1311)).objectCompare (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1311))))) ;
    if (test_1.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1313)) COMMA_SOURCE_FILE_AT_LINE (1313)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1313)).operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1313)) COMMA_SOURCE_FILE_AT_LINE (1313)).operator_concat (GALGAS_string ("': '>' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (1313)) COMMA_SOURCE_FILE_AT_LINE (1312)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else if (test_1.isValid ()) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_strictGreaterExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1318)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_strictGreaterExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_strictGreaterExpressionAST.mSlotID,
                                                 categoryMethod_strictGreaterExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_strictGreaterExpressionAST_analyzeSemanticExpression (defineCategoryMethod_strictGreaterExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@strictLowerExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_strictLowerExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                               const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_strictLowerExpressionAST * object = (const cPtr_strictLowerExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_strictLowerExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1336)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1339)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1341)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1342)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1343)).operator_and (function_isComparable (inCompiler COMMA_SOURCE_FILE_AT_LINE (1343)) COMMA_SOURCE_FILE_AT_LINE (1343)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1345)) COMMA_SOURCE_FILE_AT_LINE (1345)).operator_concat (GALGAS_string ("' and does not support the '<' operator") COMMA_SOURCE_FILE_AT_LINE (1345)) COMMA_SOURCE_FILE_AT_LINE (1344)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_0.isValid ()) {
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_1 (GALGAS_bool (kIsNotEqual, var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1348)).objectCompare (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1348))))) ;
    if (test_1.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1350)) COMMA_SOURCE_FILE_AT_LINE (1350)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1350)).operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1350)) COMMA_SOURCE_FILE_AT_LINE (1350)).operator_concat (GALGAS_string ("': '<' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (1350)) COMMA_SOURCE_FILE_AT_LINE (1349)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else if (test_1.isValid ()) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_strictLowerExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1355)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_strictLowerExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_strictLowerExpressionAST.mSlotID,
                                                 categoryMethod_strictLowerExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_strictLowerExpressionAST_analyzeSemanticExpression (defineCategoryMethod_strictLowerExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@rightShiftExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_rightShiftExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                              const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                              GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                              GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_rightShiftExpressionAST * object = (const cPtr_rightShiftExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_rightShiftExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1373)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1376)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1378)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1379)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1380)).operator_and (function_binaryShiftOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1380)) COMMA_SOURCE_FILE_AT_LINE (1380)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1382)) COMMA_SOURCE_FILE_AT_LINE (1382)).operator_concat (GALGAS_string ("' and does not support a shift operator") COMMA_SOURCE_FILE_AT_LINE (1382)) COMMA_SOURCE_FILE_AT_LINE (1381)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_0.isValid ()) {
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_1 (GALGAS_bool (kIsNotEqual, var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1385)).objectCompare (GALGAS_string ("uint")))) ;
    if (test_1.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("for a shift operator, right operand type should be '@uint': it is '@").operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1387)) COMMA_SOURCE_FILE_AT_LINE (1387)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1387)) COMMA_SOURCE_FILE_AT_LINE (1386)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else if (test_1.isValid ()) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_rightShiftExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1392)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_rightShiftExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_rightShiftExpressionAST.mSlotID,
                                                 categoryMethod_rightShiftExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_rightShiftExpressionAST_analyzeSemanticExpression (defineCategoryMethod_rightShiftExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@leftShiftExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_leftShiftExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                             const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                             GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                             GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_leftShiftExpressionAST * object = (const cPtr_leftShiftExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_leftShiftExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1410)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1413)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1415)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1416)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1417)).operator_and (function_binaryShiftOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1417)) COMMA_SOURCE_FILE_AT_LINE (1417)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1419)) COMMA_SOURCE_FILE_AT_LINE (1419)).operator_concat (GALGAS_string ("' and does not support a shift operator") COMMA_SOURCE_FILE_AT_LINE (1419)) COMMA_SOURCE_FILE_AT_LINE (1418)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_0.isValid ()) {
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_1 (GALGAS_bool (kIsNotEqual, var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1422)).objectCompare (GALGAS_string ("uint")))) ;
    if (test_1.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("for a shift operator, right operand type should be '@uint': it is '@").operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1424)) COMMA_SOURCE_FILE_AT_LINE (1424)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1424)) COMMA_SOURCE_FILE_AT_LINE (1423)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else if (test_1.isValid ()) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_leftShiftExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1429)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_leftShiftExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_leftShiftExpressionAST.mSlotID,
                                                 categoryMethod_leftShiftExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_leftShiftExpressionAST_analyzeSemanticExpression (defineCategoryMethod_leftShiftExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@addExpressionAST analyzeSemanticExpression'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_addExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                       GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_addExpressionAST * object = (const cPtr_addExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_addExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1447)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1450)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1452)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1455)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1456)).operator_and (function_binaryAddOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1456)) COMMA_SOURCE_FILE_AT_LINE (1456)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("+"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1453)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_addExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1462)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_addExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_addExpressionAST.mSlotID,
                                                 categoryMethod_addExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_addExpressionAST_analyzeSemanticExpression (defineCategoryMethod_addExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@subExpressionAST analyzeSemanticExpression'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_subExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                       GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_subExpressionAST * object = (const cPtr_subExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_subExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1479)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1482)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1484)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1487)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1488)).operator_and (function_binarySubOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1488)) COMMA_SOURCE_FILE_AT_LINE (1488)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("-"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1485)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_subExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1494)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_subExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_subExpressionAST.mSlotID,
                                                 categoryMethod_subExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_subExpressionAST_analyzeSemanticExpression (defineCategoryMethod_subExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@multiplicationExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_multiplicationExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                  const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                  GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                  GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_multiplicationExpressionAST * object = (const cPtr_multiplicationExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_multiplicationExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1511)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1514)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1516)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1519)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1520)).operator_and (function_binaryMulOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1520)) COMMA_SOURCE_FILE_AT_LINE (1520)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("*"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1517)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_multiplicationExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1526)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_multiplicationExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_multiplicationExpressionAST.mSlotID,
                                                 categoryMethod_multiplicationExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiplicationExpressionAST_analyzeSemanticExpression (defineCategoryMethod_multiplicationExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@divisionExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_divisionExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                            const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                            GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                            GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_divisionExpressionAST * object = (const cPtr_divisionExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_divisionExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1543)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1546)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1548)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1551)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1552)).operator_and (function_binaryDivOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1552)) COMMA_SOURCE_FILE_AT_LINE (1552)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("/"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1549)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_divisionExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1558)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_divisionExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_divisionExpressionAST.mSlotID,
                                                 categoryMethod_divisionExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_divisionExpressionAST_analyzeSemanticExpression (defineCategoryMethod_divisionExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@moduloExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_moduloExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                          const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                          GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                          GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_moduloExpressionAST * object = (const cPtr_moduloExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_moduloExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1575)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1578)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1580)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1583)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1584)).operator_and (function_binaryModOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1584)) COMMA_SOURCE_FILE_AT_LINE (1584)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("mod"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1581)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_moduloExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1590)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_moduloExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_moduloExpressionAST.mSlotID,
                                                 categoryMethod_moduloExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_moduloExpressionAST_analyzeSemanticExpression (defineCategoryMethod_moduloExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@unaryMinusExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_unaryMinusExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                              const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                              GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                              GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_unaryMinusExpressionAST * object = (const cPtr_unaryMinusExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_unaryMinusExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1607)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_type = var_expression.reader_mType (SOURCE_FILE_AT_LINE (1609)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsEqual, var_type.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1610)).operator_and (function_unaryMinusOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1610)) COMMA_SOURCE_FILE_AT_LINE (1610)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("operand type is '@").operator_concat (var_type.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1612)) COMMA_SOURCE_FILE_AT_LINE (1612)).operator_concat (GALGAS_string ("' and does not support the unary minus operator") COMMA_SOURCE_FILE_AT_LINE (1612)) COMMA_SOURCE_FILE_AT_LINE (1611)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_0.isValid ()) {
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_unaryMinusExpressionForGeneration::constructor_new (var_type, object->mAttribute_mOperatorLocation, var_expression COMMA_SOURCE_FILE_AT_LINE (1617)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_unaryMinusExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_unaryMinusExpressionAST.mSlotID,
                                                 categoryMethod_unaryMinusExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_unaryMinusExpressionAST_analyzeSemanticExpression (defineCategoryMethod_unaryMinusExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@notExpressionAST analyzeSemanticExpression'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_notExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                       GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_notExpressionAST * object = (const cPtr_notExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_notExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1634)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_type = var_expression.reader_mType (SOURCE_FILE_AT_LINE (1636)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsEqual, var_type.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1637)).operator_and (function_unaryNotOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1637)) COMMA_SOURCE_FILE_AT_LINE (1637)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("operand type is '@").operator_concat (var_type.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1639)) COMMA_SOURCE_FILE_AT_LINE (1639)).operator_concat (GALGAS_string ("' and does not support the 'not' operator") COMMA_SOURCE_FILE_AT_LINE (1639)) COMMA_SOURCE_FILE_AT_LINE (1638)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_0.isValid ()) {
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_notExpressionForGeneration::constructor_new (var_type, object->mAttribute_mOperatorLocation, var_expression COMMA_SOURCE_FILE_AT_LINE (1644)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_notExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_notExpressionAST.mSlotID,
                                                 categoryMethod_notExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_notExpressionAST_analyzeSemanticExpression (defineCategoryMethod_notExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@complementExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_complementExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                              const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                              GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                              GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_complementExpressionAST * object = (const cPtr_complementExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_complementExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1661)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_type = var_expression.reader_mType (SOURCE_FILE_AT_LINE (1663)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsEqual, var_type.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1664)).operator_and (function_unaryTildeOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1664)) COMMA_SOURCE_FILE_AT_LINE (1664)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("operand type is '@").operator_concat (var_type.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1666)) COMMA_SOURCE_FILE_AT_LINE (1666)).operator_concat (GALGAS_string ("' and does not support the '~' operator") COMMA_SOURCE_FILE_AT_LINE (1666)) COMMA_SOURCE_FILE_AT_LINE (1665)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_0.isValid ()) {
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_tildeExpressionForGeneration::constructor_new (var_type, object->mAttribute_mOperatorLocation, var_expression COMMA_SOURCE_FILE_AT_LINE (1671)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_complementExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_complementExpressionAST.mSlotID,
                                                 categoryMethod_complementExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_complementExpressionAST_analyzeSemanticExpression (defineCategoryMethod_complementExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@ifExpressionAST analyzeSemanticExpression'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ifExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                      const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                      GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                      GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ifExpressionAST * object = (const cPtr_ifExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_ifExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_if_5F_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mIfExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_if_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1688)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_then_5F_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mThenExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_then_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1691)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_else_5F_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mElseExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_else_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1694)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsNotEqual, var_if_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (1696)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1696)).objectCompare (GALGAS_string ("bool")))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("the test expression type is '@").operator_concat (var_if_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (1698)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1698)) COMMA_SOURCE_FILE_AT_LINE (1698)).operator_concat (GALGAS_string ("', it should be '@bool'") COMMA_SOURCE_FILE_AT_LINE (1698)) COMMA_SOURCE_FILE_AT_LINE (1697)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_0.isValid ()) {
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_1 (GALGAS_bool (kIsNotEqual, var_then_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (1701)).objectCompare (var_else_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (1701))))) ;
    if (test_1.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("operand expression types are '@").operator_concat (var_then_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (1703)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1703)) COMMA_SOURCE_FILE_AT_LINE (1703)).operator_concat (GALGAS_string ("' and '@") COMMA_SOURCE_FILE_AT_LINE (1703)).operator_concat (var_else_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (1703)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1703)) COMMA_SOURCE_FILE_AT_LINE (1703)).operator_concat (GALGAS_string ("': they should be the same") COMMA_SOURCE_FILE_AT_LINE (1703)) COMMA_SOURCE_FILE_AT_LINE (1702)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else if (test_1.isValid ()) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_ifExpressionForGeneration::constructor_new (var_then_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (1709)), object->mAttribute_mOperatorLocation, var_if_5F_expression, var_then_5F_expression, var_else_5F_expression COMMA_SOURCE_FILE_AT_LINE (1708)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ifExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_ifExpressionAST.mSlotID,
                                                 categoryMethod_ifExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ifExpressionAST_analyzeSemanticExpression (defineCategoryMethod_ifExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@functionCallExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_functionCallExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_functionCallExpressionAST * object = (const cPtr_functionCallExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_functionCallExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxyList var_functionSignature ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_resultType ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mFunctionMap.method_searchKey (object->mAttribute_mFunctionName, var_functionSignature, var_resultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1728)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsNotEqual, var_functionSignature.reader_length (SOURCE_FILE_AT_LINE (1730)).objectCompare (object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (1730))))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (object->mAttribute_mFunctionName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (1732)) COMMA_SOURCE_FILE_AT_LINE (1732)).operator_concat (GALGAS_string ("' function header declares ") COMMA_SOURCE_FILE_AT_LINE (1732)).operator_concat (var_functionSignature.reader_length (SOURCE_FILE_AT_LINE (1732)).reader_string (SOURCE_FILE_AT_LINE (1732)) COMMA_SOURCE_FILE_AT_LINE (1732)).operator_concat (GALGAS_string (" formal parameter(s), but this function call names ") COMMA_SOURCE_FILE_AT_LINE (1733)).operator_concat (object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (1733)).reader_string (SOURCE_FILE_AT_LINE (1733)) COMMA_SOURCE_FILE_AT_LINE (1733)).operator_concat (GALGAS_string (" effective argument(s)") COMMA_SOURCE_FILE_AT_LINE (1734)) COMMA_SOURCE_FILE_AT_LINE (1731)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else if (test_0.isValid ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_semanticExpressionListForGeneration var_semanticExpressionListForGeneration = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1738)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_unifiedTypeMapProxyList enumerator_80251 (var_functionSignature, true) ;
    cEnumerator_semanticExpressionListAST enumerator_80267 (object->mAttribute_mExpressions, true) ;
    //--- simple foreach instruction
    while (enumerator_80251.hasCurrentObject () && enumerator_80267.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_semanticExpressionForGeneration var_expression ;
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_80267.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1741)) ;
      //-------- END @methodCallInstructionForGeneration
      { //-------- @routineCallInstructionForGeneration
      routine_checkAssignmentTypes (enumerator_80251.current_mType (HERE), var_expression.reader_mType (SOURCE_FILE_AT_LINE (1742)), enumerator_80267.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1742)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @addAssignInstructionForGeneration
      var_semanticExpressionListForGeneration.addAssign_operation (var_expression COMMA_SOURCE_FILE_AT_LINE (1743)) ;
      enumerator_80251.gotoNextObject () ;
      enumerator_80267.gotoNextObject () ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_functionCallExpressionForGeneration::constructor_new (var_resultType, object->mAttribute_mFunctionName.reader_location (SOURCE_FILE_AT_LINE (1747)), object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (1748)), var_semanticExpressionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1745)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_functionCallExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_functionCallExpressionAST.mSlotID,
                                                 categoryMethod_functionCallExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_functionCallExpressionAST_analyzeSemanticExpression (defineCategoryMethod_functionCallExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@varInExpressionAST analyzeSemanticExpression' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_varInExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                         const GALGAS_analysisContext /* constinArgument_inAnalysisContext */,
                                                                         GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                         GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_varInExpressionAST * object = (const cPtr_varInExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_varInExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_type ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_sourceVariableCppName ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_nameForCheckingFormalParameterUsing ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_searchForReadAccess (object->mAttribute_mVarName, var_type, var_sourceVariableCppName, var_nameForCheckingFormalParameterUsing, inCompiler COMMA_SOURCE_FILE_AT_LINE (1764)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @foreachInstructionForGeneration
  cEnumerator_lstringlist enumerator_81322 (object->mAttribute_mStructFieldList, true) ;
  //--- simple foreach instruction
  while (enumerator_81322.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_attributeMap var_attributeMap = var_type.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1766)) ;
    //-------- @methodCallInstructionForGeneration
    var_attributeMap.method_searchKey (enumerator_81322.current_mValue (HERE), var_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (1767)) ;
    //-------- END @methodCallInstructionForGeneration
    enumerator_81322.gotoNextObject () ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_varInExpressionForGeneration::constructor_new (var_type, object->mAttribute_mVarName.reader_location (SOURCE_FILE_AT_LINE (1771)), var_sourceVariableCppName, var_nameForCheckingFormalParameterUsing, object->mAttribute_mStructFieldList COMMA_SOURCE_FILE_AT_LINE (1769)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_varInExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_varInExpressionAST.mSlotID,
                                                 categoryMethod_varInExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_varInExpressionAST_analyzeSemanticExpression (defineCategoryMethod_varInExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@literalTypeInExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_literalTypeInExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                 const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                 GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                 GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_literalTypeInExpressionAST * object = (const cPtr_literalTypeInExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_literalTypeInExpressionAST) ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_bool joker_82043_20 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_82043_19 ; // Joker input parameter
  GALGAS_typeKindEnum joker_82043_18 ; // Joker input parameter
  GALGAS_typedAttributeList joker_82043_17 ; // Joker input parameter
  GALGAS_attributeMap joker_82043_16 ; // Joker input parameter
  GALGAS_typedAttributeList joker_82043_15 ; // Joker input parameter
  GALGAS_constructorMap joker_82043_14 ; // Joker input parameter
  GALGAS_readerMap joker_82043_13 ; // Joker input parameter
  GALGAS_modifierMap joker_82043_12 ; // Joker input parameter
  GALGAS_instanceMethodMap joker_82043_11 ; // Joker input parameter
  GALGAS_classMethodMap joker_82043_10 ; // Joker input parameter
  GALGAS_enumerationDescriptorList joker_82043_9 ; // Joker input parameter
  GALGAS_uint joker_82043_8 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxyList joker_82043_7 ; // Joker input parameter
  GALGAS_stringset joker_82043_6 ; // Joker input parameter
  GALGAS_lstringlist joker_82043_5 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_82043_4 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_82043_3 ; // Joker input parameter
  GALGAS_withAccessorMap joker_82043_2 ; // Joker input parameter
  GALGAS_bool joker_82043_1 ; // Joker input parameter
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap.method_searchKey (object->mAttribute_mLiteralTypeName, joker_82043_20, joker_82043_19, joker_82043_18, joker_82043_17, joker_82043_16, joker_82043_15, joker_82043_14, joker_82043_13, joker_82043_12, joker_82043_11, joker_82043_10, joker_82043_9, joker_82043_8, joker_82043_7, joker_82043_6, joker_82043_5, joker_82043_4, joker_82043_3, joker_82043_2, joker_82043_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1786)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalTypeInExpressionForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("type"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1789)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1789)), object->mAttribute_mLiteralTypeName.reader_location (SOURCE_FILE_AT_LINE (1790)), object->mAttribute_mLiteralTypeName.reader_string (SOURCE_FILE_AT_LINE (1791)) COMMA_SOURCE_FILE_AT_LINE (1788)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_literalTypeInExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_literalTypeInExpressionAST.mSlotID,
                                                 categoryMethod_literalTypeInExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_literalTypeInExpressionAST_analyzeSemanticExpression (defineCategoryMethod_literalTypeInExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@castInExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_castInExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                          const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                          GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                          GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_castInExpressionAST * object = (const cPtr_castInExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_castInExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mReceiverExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1804)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_unifiedTypeMapProxy var_type = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1806)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsEqual, var_expression.reader_mType (SOURCE_FILE_AT_LINE (1808)).reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1808)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1808))))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_unifiedTypeMapProxy var_t = var_type ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_bool var_found = GALGAS_bool (kIsEqual, var_t.objectCompare (var_expression.reader_mType (SOURCE_FILE_AT_LINE (1811)))) ;
    //-------- @loopInstructionForGeneration
    if (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1812)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1812)).isValid ()) {
      PMUInt32 variant_83170 = constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1812)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1812)).uintValue () ;
      bool loop_83170 = true ;
      while (loop_83170) {
        loop_83170 = var_found.operator_not (SOURCE_FILE_AT_LINE (1813)).operator_and (var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1813)).reader_isNull (SOURCE_FILE_AT_LINE (1813)).operator_not (SOURCE_FILE_AT_LINE (1813)) COMMA_SOURCE_FILE_AT_LINE (1813)).isValid () ;
        if (loop_83170) {
          loop_83170 = var_found.operator_not (SOURCE_FILE_AT_LINE (1813)).operator_and (var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1813)).reader_isNull (SOURCE_FILE_AT_LINE (1813)).operator_not (SOURCE_FILE_AT_LINE (1813)) COMMA_SOURCE_FILE_AT_LINE (1813)).boolValue () ;
        }
        if (loop_83170 && (0 == variant_83170)) {
          loop_83170 = false ;
          inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1812)) ;
        }
        if (loop_83170) {
          variant_83170 -- ;
          //-------- @assignmentInstructionForGeneration
          var_t = var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1814)) ;
          //-------- @assignmentInstructionForGeneration
          var_found = GALGAS_bool (kIsEqual, var_t.objectCompare (var_expression.reader_mType (SOURCE_FILE_AT_LINE (1815)))) ;
        }
      }
    }
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_1 (var_found.operator_not (SOURCE_FILE_AT_LINE (1817))) ;
    if (test_1.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_2 (object->mAttribute_mTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("the '@").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1819)) COMMA_SOURCE_FILE_AT_LINE (1819)).operator_concat (GALGAS_string ("' is not a descendant of the '@") COMMA_SOURCE_FILE_AT_LINE (1819)).operator_concat (var_expression.reader_mType (SOURCE_FILE_AT_LINE (1819)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1819)) COMMA_SOURCE_FILE_AT_LINE (1819)).operator_concat (GALGAS_string ("' type of the cast expression") COMMA_SOURCE_FILE_AT_LINE (1819)) COMMA_SOURCE_FILE_AT_LINE (1818)) ;
    }
  }else if (test_0.isValid ()) {
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_3 (GALGAS_bool (kIsNotEqual, var_expression.reader_mType (SOURCE_FILE_AT_LINE (1822)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1822)).objectCompare (GALGAS_string ("object")))) ;
    if (test_3.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (var_expression.reader_mLocation (SOURCE_FILE_AT_LINE (1823)), GALGAS_string ("cast expression should be an @object or a class instance: it is an @").operator_concat (var_expression.reader_mType (SOURCE_FILE_AT_LINE (1824)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1824)) COMMA_SOURCE_FILE_AT_LINE (1824)).operator_concat (GALGAS_string (" instance") COMMA_SOURCE_FILE_AT_LINE (1824)) COMMA_SOURCE_FILE_AT_LINE (1823)) ;
    }
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_errorLocationExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mErrorLocationExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_errorLocationExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1828)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_useLocationReader = GALGAS_bool (kIsNotEqual, var_errorLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (1830)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLocationType)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_4 (var_useLocationReader) ;
  if (test_4.isValidAndTrue ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_readerMap var_readerMap = var_errorLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (1832)).reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1832)) ;
    //-------- @readOnlyWithInstructionForGeneration
    const cMapElement_readerMap * objectArray_84325 = (const cMapElement_readerMap *) var_readerMap.readAccessForWithInstruction_hasKey (GALGAS_string ("location")) ;
    if (NULL != objectArray_84325) {
        macroValidSharedObject (objectArray_84325, const cMapElement_readerMap) ;
      //-------- @ifInstructionForGeneration
      const GALGAS_bool test_5 (GALGAS_bool (kIsNotEqual, objectArray_84325->mAttribute_mArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (1834)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
      if (test_5.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (object->mAttribute_mEndOfErrorLocationExpression, GALGAS_string ("the error location expression type is '@").operator_concat (var_errorLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (1836)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1836)) COMMA_SOURCE_FILE_AT_LINE (1836)).operator_concat (GALGAS_string ("' and defines a 'location' reader with arguments; it should be either of the '@location' type, either defines a 'location' reader without argument that"
          " returns an '@location' object") COMMA_SOURCE_FILE_AT_LINE (1837)) COMMA_SOURCE_FILE_AT_LINE (1835)) ;
      }else if (test_5.isValid ()) {
        //-------- @ifInstructionForGeneration
        const GALGAS_bool test_6 (GALGAS_bool (kIsNotEqual, objectArray_84325->mAttribute_mReturnedType.objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLocationType))) ;
        if (test_6.isValidAndTrue ()) {
          //-------- @errorInstructionForGeneration
          inCompiler->emitSemanticError (object->mAttribute_mEndOfErrorLocationExpression, GALGAS_string ("the error location expression type is '@").operator_concat (var_errorLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (1841)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1841)) COMMA_SOURCE_FILE_AT_LINE (1841)).operator_concat (GALGAS_string ("' and defines a 'location' reader that returns an '@") COMMA_SOURCE_FILE_AT_LINE (1842)).operator_concat (objectArray_84325->mAttribute_mReturnedType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1842)) COMMA_SOURCE_FILE_AT_LINE (1842)).operator_concat (GALGAS_string ("' object; it should be either of the '@location' type, either defines a 'location' reader without argument that returns an '@location' object") COMMA_SOURCE_FILE_AT_LINE (1843)) COMMA_SOURCE_FILE_AT_LINE (1840)) ;
        }
      }
      //-------- @assignmentInstructionForGeneration
      var_errorLocationExpression = GALGAS_readerCallExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLocationType, object->mAttribute_mEndOfErrorLocationExpression, GALGAS_bool (false), var_errorLocationExpression, GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1851)), GALGAS_string ("location"), GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1853)), objectArray_84325->mAttribute_mHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (1846)) ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mEndOfErrorLocationExpression, GALGAS_string ("the error location expression type is '@").operator_concat (var_errorLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (1858)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1858)) COMMA_SOURCE_FILE_AT_LINE (1858)).operator_concat (GALGAS_string ("' and does not define a 'location' reader; it should be either of the '@location' type, either defines a 'location' reader without argument that return"
        "s an '@location' object") COMMA_SOURCE_FILE_AT_LINE (1859)) COMMA_SOURCE_FILE_AT_LINE (1857)) ;
    }
  }
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_7 (GALGAS_bool (kIsEqual, var_expression.reader_mType (SOURCE_FILE_AT_LINE (1864)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1864)).objectCompare (GALGAS_string ("object")))) ;
  if (test_7.isValidAndTrue ()) {
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_extractObjectInExpressionForGeneration::constructor_new (var_type, object->mAttribute_mEndOfReceiverExpression, var_expression, object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1869)), var_errorLocationExpression COMMA_SOURCE_FILE_AT_LINE (1865)) ;
  }else if (test_7.isValid ()) {
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_castInExpressionForGeneration::constructor_new (var_type, object->mAttribute_mTypeName.reader_location (SOURCE_FILE_AT_LINE (1875)), var_expression, object->mAttribute_mUseKindOfClass, object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1878)), var_errorLocationExpression COMMA_SOURCE_FILE_AT_LINE (1873)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_castInExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_castInExpressionAST.mSlotID,
                                                 categoryMethod_castInExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_castInExpressionAST_analyzeSemanticExpression (defineCategoryMethod_castInExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@filewrapperObjectInstanciationInExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_filewrapperObjectInstanciationInExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                                    const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                                    GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                                    GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_filewrapperObjectInstanciationInExpressionAST * object = (const cPtr_filewrapperObjectInstanciationInExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_filewrapperObjectInstanciationInExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lstring var_filewrapperPath ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_lstringlist joker_86945_0 ; // Joker input parameter
  GALGAS_wrapperFileMap joker_86948_0 ; // Joker input parameter
  GALGAS_wrapperDirectoryMap joker_86951_0 ; // Joker input parameter
  GALGAS_filewrapperTemplateMap joker_86954_0 ; // Joker input parameter
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mFilewrapperMap.method_searchKey (object->mAttribute_mFilewrapperName, var_filewrapperPath, joker_86945_0, joker_86948_0, joker_86951_0, joker_86954_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1893)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_filewrapperInExpressionForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("filewrapper"), object->mAttribute_mFilewrapperName.reader_location (SOURCE_FILE_AT_LINE (1896)) COMMA_SOURCE_FILE_AT_LINE (1896)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1896)), object->mAttribute_mFilewrapperName.reader_location (SOURCE_FILE_AT_LINE (1897)), object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (1898)), var_filewrapperPath.reader_string (SOURCE_FILE_AT_LINE (1899)) COMMA_SOURCE_FILE_AT_LINE (1895)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_filewrapperObjectInstanciationInExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_filewrapperObjectInstanciationInExpressionAST.mSlotID,
                                                 categoryMethod_filewrapperObjectInstanciationInExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_filewrapperObjectInstanciationInExpressionAST_analyzeSemanticExpression (defineCategoryMethod_filewrapperObjectInstanciationInExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@filewrapperTemplateInExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_filewrapperTemplateInExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                         const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                         GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                         GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_filewrapperTemplateInExpressionAST * object = (const cPtr_filewrapperTemplateInExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_filewrapperTemplateInExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_filewrapperTemplateMap var_filewrapperTemplateMap ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_lstring joker_87705_0 ; // Joker input parameter
  GALGAS_lstringlist joker_87708_0 ; // Joker input parameter
  GALGAS_wrapperFileMap joker_87711_0 ; // Joker input parameter
  GALGAS_wrapperDirectoryMap joker_87714_0 ; // Joker input parameter
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mFilewrapperMap.method_searchKey (object->mAttribute_mFilewrapperName, joker_87705_0, joker_87708_0, joker_87711_0, joker_87714_0, var_filewrapperTemplateMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1912)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxyList var_templateSignature ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_lstring joker_87877_0 ; // Joker input parameter
  var_filewrapperTemplateMap.method_searchKey (object->mAttribute_mFilewrapperTemplateName, var_templateSignature, joker_87877_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1915)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionListForGeneration var_effectiveParameterList ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsNotEqual, object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (1918)).objectCompare (var_templateSignature.reader_length (SOURCE_FILE_AT_LINE (1918))))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (object->mAttribute_mFilewrapperTemplateName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("calling the '").operator_concat (object->mAttribute_mFilewrapperTemplateName.reader_string (SOURCE_FILE_AT_LINE (1920)) COMMA_SOURCE_FILE_AT_LINE (1920)).operator_concat (GALGAS_string ("' template of '") COMMA_SOURCE_FILE_AT_LINE (1920)).operator_concat (object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (1920)) COMMA_SOURCE_FILE_AT_LINE (1920)).operator_concat (GALGAS_string ("' filewrapper requires ") COMMA_SOURCE_FILE_AT_LINE (1920)).operator_concat (var_templateSignature.reader_length (SOURCE_FILE_AT_LINE (1921)).reader_string (SOURCE_FILE_AT_LINE (1921)) COMMA_SOURCE_FILE_AT_LINE (1921)).operator_concat (GALGAS_string (" parameter(s), while this call has ") COMMA_SOURCE_FILE_AT_LINE (1921)).operator_concat (object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (1922)).reader_string (SOURCE_FILE_AT_LINE (1922)) COMMA_SOURCE_FILE_AT_LINE (1922)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (1922)) COMMA_SOURCE_FILE_AT_LINE (1919)) ;
    var_effectiveParameterList.drop () ; // Release error dropped variable
  }else if (test_0.isValid ()) {
    //-------- @assignmentInstructionForGeneration
    var_effectiveParameterList = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1925)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_semanticExpressionListAST enumerator_88464 (object->mAttribute_mExpressions, true) ;
    cEnumerator_unifiedTypeMapProxyList enumerator_88485 (var_templateSignature, true) ;
    //--- simple foreach instruction
    while (enumerator_88464.hasCurrentObject () && enumerator_88485.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_semanticExpressionForGeneration var_exp ;
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_88464.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_exp, inCompiler COMMA_SOURCE_FILE_AT_LINE (1928)) ;
      //-------- END @methodCallInstructionForGeneration
      { //-------- @routineCallInstructionForGeneration
      routine_checkAssignmentTypes (enumerator_88485.current_mType (HERE), var_exp.reader_mType (SOURCE_FILE_AT_LINE (1929)), enumerator_88464.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1929)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @addAssignInstructionForGeneration
      var_effectiveParameterList.addAssign_operation (var_exp COMMA_SOURCE_FILE_AT_LINE (1930)) ;
      enumerator_88464.gotoNextObject () ;
      enumerator_88485.gotoNextObject () ;
    }
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_filewrapperTemplateInExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType, object->mAttribute_mFilewrapperName.reader_location (SOURCE_FILE_AT_LINE (1936)), object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (1937)), object->mAttribute_mFilewrapperTemplateName.reader_string (SOURCE_FILE_AT_LINE (1938)), var_effectiveParameterList COMMA_SOURCE_FILE_AT_LINE (1934)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_filewrapperTemplateInExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_filewrapperTemplateInExpressionAST.mSlotID,
                                                 categoryMethod_filewrapperTemplateInExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_filewrapperTemplateInExpressionAST_analyzeSemanticExpression (defineCategoryMethod_filewrapperTemplateInExpressionAST_analyzeSemanticExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@filewrapperInExpressionAST analyzeSemanticExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_filewrapperInExpressionAST_analyzeSemanticExpression (const cPtr_semanticExpressionAST * inObject,
                                                                                 const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                 GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                 GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_filewrapperInExpressionAST * object = (const cPtr_filewrapperInExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_filewrapperInExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_stringlist var_directoryList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_fileName ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsEqual, object->mAttribute_mFilewrapperPath.mAttribute_string.reader_length (SOURCE_FILE_AT_LINE (1953)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (object->mAttribute_mFilewrapperPath.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("path is empty") COMMA_SOURCE_FILE_AT_LINE (1954)) ;
    var_directoryList.drop () ; // Release error dropped variable
    var_fileName.drop () ; // Release error dropped variable
  }else if (test_0.isValid ()) {
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_2 (GALGAS_bool (kIsEqual, object->mAttribute_mFilewrapperPath.mAttribute_string.reader_firstCharacterOrNul (SOURCE_FILE_AT_LINE (1955)).objectCompare (GALGAS_char (TO_UNICODE (47))))) ;
    if (test_2.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_3 (object->mAttribute_mFilewrapperPath.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the path should not begin with '/'") COMMA_SOURCE_FILE_AT_LINE (1956)) ;
      var_directoryList.drop () ; // Release error dropped variable
      var_fileName.drop () ; // Release error dropped variable
    }else if (test_2.isValid ()) {
      //-------- @assignmentInstructionForGeneration
      var_directoryList = object->mAttribute_mFilewrapperPath.mAttribute_string.reader_componentsSeparatedByString (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1958)) ;
      { //-------- @modifierCallInstructionForGeneration
      var_directoryList.modifier_popLast (var_fileName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1959)) ;
      } //-------- END @typeMethodInstructionForGeneration
    }
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_wrapperFileMap var_filewrapperFileMap ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_wrapperDirectoryMap var_filewrapperDirectoryMap ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_lstring joker_90005_0 ; // Joker input parameter
  GALGAS_lstringlist joker_90008_0 ; // Joker input parameter
  GALGAS_filewrapperTemplateMap joker_90056_0 ; // Joker input parameter
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mFilewrapperMap.method_searchKey (object->mAttribute_mFilewrapperName, joker_90005_0, joker_90008_0, var_filewrapperFileMap, var_filewrapperDirectoryMap, joker_90056_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1964)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_builtPath = GALGAS_string::makeEmptyString () ;
  //-------- @loopInstructionForGeneration
  if (var_filewrapperDirectoryMap.reader_count (SOURCE_FILE_AT_LINE (1967)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1967)).isValid ()) {
    PMUInt32 variant_90117 = var_filewrapperDirectoryMap.reader_count (SOURCE_FILE_AT_LINE (1967)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1967)).uintValue () ;
    bool loop_90117 = true ;
    while (loop_90117) {
      loop_90117 = GALGAS_bool (kIsStrictSup, var_directoryList.reader_length (SOURCE_FILE_AT_LINE (1968)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValid () ;
      if (loop_90117) {
        loop_90117 = GALGAS_bool (kIsStrictSup, var_directoryList.reader_length (SOURCE_FILE_AT_LINE (1968)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolValue () ;
      }
      if (loop_90117 && (0 == variant_90117)) {
        loop_90117 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1967)) ;
      }
      if (loop_90117) {
        variant_90117 -- ;
        //-------- @localVariableDeclarationForGeneration
        GALGAS_string var_directoryName ;
        { //-------- @modifierCallInstructionForGeneration
        var_directoryList.modifier_popFirst (var_directoryName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1970)) ;
        } //-------- END @typeMethodInstructionForGeneration
        //-------- @appendInstructionForGeneration
        var_builtPath.dotAssign_operation (var_directoryName.operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1971)) COMMA_SOURCE_FILE_AT_LINE (1971)) ;
        //-------- @ifInstructionForGeneration
        const GALGAS_bool test_4 (var_filewrapperDirectoryMap.reader_hasKey (var_directoryName COMMA_SOURCE_FILE_AT_LINE (1972))) ;
        if (test_4.isValidAndTrue ()) {
          //-------- @methodCallInstructionForGeneration
          GALGAS_uint joker_90524_0 ; // Joker input parameter
          var_filewrapperDirectoryMap.method_searchKey (GALGAS_lstring::constructor_new (var_directoryName, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1974)), var_filewrapperFileMap, var_filewrapperDirectoryMap, joker_90524_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1973)) ;
          //-------- END @methodCallInstructionForGeneration
        }else if (test_4.isValid ()) {
          //-------- @errorInstructionForGeneration
          GALGAS_location location_5 (object->mAttribute_mFilewrapperPath.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_5, GALGAS_string ("the '").operator_concat (var_builtPath COMMA_SOURCE_FILE_AT_LINE (1980)).operator_concat (GALGAS_string ("' path does not exists for the '") COMMA_SOURCE_FILE_AT_LINE (1980)).operator_concat (object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (1980)) COMMA_SOURCE_FILE_AT_LINE (1980)).operator_concat (GALGAS_string ("' filewrapper") COMMA_SOURCE_FILE_AT_LINE (1980)) COMMA_SOURCE_FILE_AT_LINE (1980)) ;
          var_filewrapperFileMap.drop () ; // Release error dropped variable
          //-------- @assignmentInstructionForGeneration
          var_directoryList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1981)) ;
        }
      }
    }
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_uint var_fileIndex ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_6 (var_filewrapperFileMap.reader_hasKey (var_fileName COMMA_SOURCE_FILE_AT_LINE (1985))) ;
  if (test_6.isValidAndTrue ()) {
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_90923_0 ; // Joker input parameter
    GALGAS_uint joker_90926_0 ; // Joker input parameter
    var_filewrapperFileMap.method_searchKey (GALGAS_lstring::constructor_new (var_fileName, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1986)), joker_90923_0, joker_90926_0, var_fileIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1986)) ;
    //-------- END @methodCallInstructionForGeneration
  }else if (test_6.isValid ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_7 (object->mAttribute_mFilewrapperPath.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_7, GALGAS_string ("the '").operator_concat (var_fileName COMMA_SOURCE_FILE_AT_LINE (1989)).operator_concat (GALGAS_string ("' file does not exist in the '") COMMA_SOURCE_FILE_AT_LINE (1989)).operator_concat (var_builtPath COMMA_SOURCE_FILE_AT_LINE (1989)).operator_concat (GALGAS_string ("' directory of '") COMMA_SOURCE_FILE_AT_LINE (1989)).operator_concat (object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (1989)) COMMA_SOURCE_FILE_AT_LINE (1989)).operator_concat (GALGAS_string ("' filewrapper") COMMA_SOURCE_FILE_AT_LINE (1989)) COMMA_SOURCE_FILE_AT_LINE (1988)) ;
    var_fileIndex.drop () ; // Release error dropped variable
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_filewrapperStaticPathInExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType, object->mAttribute_mFilewrapperName.reader_location (SOURCE_FILE_AT_LINE (1996)), object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (1997)), var_fileIndex COMMA_SOURCE_FILE_AT_LINE (1994)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_filewrapperInExpressionAST_analyzeSemanticExpression (void) {
  enterCategoryMethod_analyzeSemanticExpression (kTypeDescriptor_GALGAS_filewrapperInExpressionAST.mSlotID,
                                                 categoryMethod_filewrapperInExpressionAST_analyzeSemanticExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_filewrapperInExpressionAST_analyzeSemanticExpression (defineCategoryMethod_filewrapperInExpressionAST_analyzeSemanticExpression, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


