//---------------------------------------------------------------------------*
//                                                                           *
//                File 'semanticAnalysisOfSyntaxComponent.h'                 *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     october 17th, 2010, at 14h34'30"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semanticAnalysisOfSyntaxComponent_DEFINED
#define semanticAnalysisOfSyntaxComponent_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "syntaxSignature.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_nonterminalLabelMap ;
class GGS_nonterminalMap ;
class GGS_ruleLabelImplementationList ;
class GGS_ruleDeclarationList ;
class GGS_syntaxDeclarationForGeneration ;
class cPtr_syntaxDeclarationForGeneration ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@nonterminalLabelMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_nonterminalLabelMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_nonterminalLabelMap ;

//---------------------------------------------------------------------------*

class GGS_nonterminalLabelMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_nonterminalLabelMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_nonterminalLabelMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_nonterminalLabelMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_nonterminalLabelMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_nonterminalLabelMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_nonterminalLabelMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_nonterminalLabelMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_nonterminalLabelMap constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_formalParameterListForGeneration & inValue0,
                                             const GGS_formalParameterSignature & inValue1,
                                             const GGS_location & inValue2
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_formalParameterListForGeneration &  inParameter0,
                                const GGS_formalParameterSignature &  inParameter1,
                                const GGS_location &  inParameter2 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_formalParameterListForGeneration   & outParameter0,
                                GGS_formalParameterSignature   & outParameter1,
                                GGS_location   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_formalParameterListForGeneration & inParameter0,
                                   const GGS_formalParameterSignature & inParameter1,
                                   const GGS_location & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_formalParameterListForGeneration & outParameter0,
                                   GGS_formalParameterSignature & outParameter1,
                                   GGS_location & outParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_nonterminalLabelMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_nonterminalLabelMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_nonterminalLabelMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_nonterminalLabelMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_nonterminalLabelMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_formalParameterListForGeneration   & _mSignatureForGeneration (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalParameterSignature   & _mSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_location   & _mEndOfArgumentLocation (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@nonterminalMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_nonterminalMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_nonterminalMap ;

//---------------------------------------------------------------------------*

class GGS_nonterminalMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_nonterminalMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_nonterminalMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_nonterminalMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_nonterminalMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_nonterminalMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_nonterminalMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_nonterminalMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_nonterminalMap constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_nonterminalLabelMap & inValue0,
                                             const GGS_bool& inValue1
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_nonterminalLabelMap &  inParameter0,
                                const GGS_bool&  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_nonterminalLabelMap   & outParameter0,
                                GGS_bool  & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_nonterminalLabelMap & inParameter0,
                                   const GGS_bool& inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_nonterminalLabelMap & outParameter0,
                                   GGS_bool& outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_nonterminalMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_nonterminalMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_nonterminalMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_nonterminalMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_nonterminalMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_nonterminalLabelMap   & _mLabelMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mHasParseLabel (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@ruleLabelImplementationList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ruleLabelImplementationList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ruleLabelImplementationList ;

//---------------------------------------------------------------------------*

class GGS_ruleLabelImplementationList : public AC_GGS_list {
  public : typedef elementOf_GGS_ruleLabelImplementationList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_ruleLabelImplementationList constructor_emptyList (void) ;
  public : static GGS_ruleLabelImplementationList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_formalParameterListForGeneration & argument_1,
                                const GGS_formalParameterSignature & argument_2,
                                const GGS_location & argument_3,
                                const GGS_semanticInstructionListForGeneration & argument_4) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_ruleLabelImplementationList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_ruleLabelImplementationList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_ruleLabelImplementationList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_ruleLabelImplementationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_formalParameterListForGeneration & _out_1,
                              GGS_formalParameterSignature & _out_2,
                              GGS_location & _out_3,
                              GGS_semanticInstructionListForGeneration & _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_formalParameterListForGeneration & _out_1,
                             GGS_formalParameterSignature & _out_2,
                             GGS_location & _out_3,
                             GGS_semanticInstructionListForGeneration & _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_formalParameterListForGeneration & _out_1,
                                GGS_formalParameterSignature & _out_2,
                                GGS_location & _out_3,
                                GGS_semanticInstructionListForGeneration & _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_formalParameterListForGeneration & _out_1,
                                 GGS_formalParameterSignature & _out_2,
                                 GGS_location & _out_3,
                                 GGS_semanticInstructionListForGeneration & _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_ruleLabelImplementationList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_formalParameterListForGeneration & argument_1,
                                const GGS_formalParameterSignature & argument_2,
                                const GGS_location & argument_3,
                                const GGS_semanticInstructionListForGeneration & argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_ruleLabelImplementationList operator_concat (const GGS_ruleLabelImplementationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameterListForGeneration & argument_1,
                                const GGS_formalParameterSignature & argument_2,
                                const GGS_location & argument_3,
                                const GGS_semanticInstructionListForGeneration & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameterListForGeneration & argument_1,
                                const GGS_formalParameterSignature & argument_2,
                                const GGS_location & argument_3,
                                const GGS_semanticInstructionListForGeneration & argument_4
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameterListForGeneration & argument_1,
                                const GGS_formalParameterSignature & argument_2,
                                const GGS_location & argument_3,
                                const GGS_semanticInstructionListForGeneration & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mLabelNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameterListForGeneration 
  reader_mSignatureForGenerationAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameterSignature 
  reader_mSignatureAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_location 
  reader_mEndOfArgumentLocationAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListForGeneration 
  reader_mInstructionListForGenerationAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMLabelNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMSignatureForGenerationAtIndex (C_Compiler & inLexique,
                              const GGS_formalParameterListForGeneration  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMSignatureAtIndex (C_Compiler & inLexique,
                              const GGS_formalParameterSignature  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMEndOfArgumentLocationAtIndex (C_Compiler & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListForGenerationAtIndex (C_Compiler & inLexique,
                              const GGS_semanticInstructionListForGeneration  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ruleLabelImplementationList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_ruleLabelImplementationList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mLabelName (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalParameterListForGeneration   & _mSignatureForGeneration (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalParameterSignature   & _mSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_location   & _mEndOfArgumentLocation (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticInstructionListForGeneration   & _mInstructionListForGeneration (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@ruleDeclarationList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ruleDeclarationList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ruleDeclarationList ;

//---------------------------------------------------------------------------*

class GGS_ruleDeclarationList : public AC_GGS_list {
  public : typedef elementOf_GGS_ruleDeclarationList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_ruleDeclarationList constructor_emptyList (void) ;
  public : static GGS_ruleDeclarationList constructor_listWithValue (const GGS_string& argument_0,
                                const GGS_uint & argument_1,
                                const GGS_ruleLabelImplementationList & argument_2,
                                const GGS_bool& argument_3) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_ruleDeclarationList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_ruleDeclarationList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_ruleDeclarationList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_ruleDeclarationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_string& _out_0,
                              GGS_uint & _out_1,
                              GGS_ruleLabelImplementationList & _out_2,
                              GGS_bool& _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_string& _out_0,
                             GGS_uint & _out_1,
                             GGS_ruleLabelImplementationList & _out_2,
                             GGS_bool& _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_string& _out_0,
                                GGS_uint & _out_1,
                                GGS_ruleLabelImplementationList & _out_2,
                                GGS_bool& _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_string& _out_0,
                                 GGS_uint & _out_1,
                                 GGS_ruleLabelImplementationList & _out_2,
                                 GGS_bool& _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_ruleDeclarationList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_string& argument_0,
                                const GGS_uint & argument_1,
                                const GGS_ruleLabelImplementationList & argument_2,
                                const GGS_bool& argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_ruleDeclarationList operator_concat (const GGS_ruleDeclarationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_string& argument_0,
                                const GGS_uint & argument_1,
                                const GGS_ruleLabelImplementationList & argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_string& argument_0,
                                const GGS_uint & argument_1,
                                const GGS_ruleLabelImplementationList & argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_string& argument_0,
                                const GGS_uint & argument_1,
                                const GGS_ruleLabelImplementationList & argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_string
  reader_mNonterminalNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_uint 
  reader_mRuleIndexAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_ruleLabelImplementationList 
  reader_mLabelImplementationListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mHasParseLabelAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMNonterminalNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMRuleIndexAtIndex (C_Compiler & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMLabelImplementationListAtIndex (C_Compiler & inLexique,
                              const GGS_ruleLabelImplementationList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMHasParseLabelAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ruleDeclarationList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_ruleDeclarationList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_string  & _mNonterminalName (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint   & _mRuleIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_ruleLabelImplementationList   & _mLabelImplementationList (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mHasParseLabel (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_syntaxDeclarationForGeneration'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_syntaxDeclarationForGeneration ;

//---------------------------------------------------------------------------*

class GGS_syntaxDeclarationForGeneration : public GGS_semanticDeclarationForGeneration {
//--- Default constructor
  public : inline GGS_syntaxDeclarationForGeneration (void) :
  GGS_semanticDeclarationForGeneration () {}

//--- Pointer assignment constructor
  public : GGS_syntaxDeclarationForGeneration (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_syntaxDeclarationForGeneration (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_syntaxDeclarationForGeneration
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_syntaxDeclarationForGeneration constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_nonterminalMap & argument_2,
                                const GGS_ruleDeclarationList & argument_3,
                                const GGS_uint & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_syntaxDeclarationForGeneration * getPtr (void) const {
    return (cPtr_syntaxDeclarationForGeneration *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_string reader_mComponentName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_mLexiqueName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_nonterminalMap  reader_mNonterminalDeclarationMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_ruleDeclarationList  reader_mRuleDeclarationList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mSelectMethodCount (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_syntaxDeclarationForGeneration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_syntaxDeclarationForGeneration * operator () (LOCATION_ARGS) const {
      return (cPtr_syntaxDeclarationForGeneration *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_syntaxDeclarationForGeneration castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__syntaxDeclarationForGeneration ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Routine 'enterNonterminalNonTerminalInMapAndCheck'             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterNonterminalNonTerminalInMapAndCheck (C_Compiler &,
                                const GGS_lstring  ,
                                const GGS_nonterminalLabelMap  ,
                                const GGS_bool ,
                                GGS_nonterminalMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'buildNonterminalDeclarationsMap'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildNonterminalDeclarationsMap (C_Compiler &,
                                const GGS_nonterminalDeclarationListAST  ,
                                const GGS_semanticContext ,
                                GGS_nonterminalMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@syntaxInstructionAST.analyzeSyntaxInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__syntaxInstructionAST__analyzeSyntaxInstruction)  (C_Compiler & inLexique,
                                const cPtr_syntaxInstructionAST * inObjectPtr,
                                const GGS_semanticContext  var_cas_inSemanticContext,
                                const GGS_predefinedTypes  var_cas_inPredefinedTypes,
                                const GGS_terminalMap   var_cas_inTerminalMap,
                                const GGS_string  var_cas_inLexiqueName,
                                const GGS_nonterminalMap   var_cas_inNonterminalMap,
                                const GGS_string  var_cas_inComponentName,
                                GGS_semanticInstructionListForGeneration  & var_cas_ioInstructionListForGeneration,
                                GGS_variableMap  & var_cas_ioVariableMap,
                                GGS_uint  & var_cas_ioSelectMethodCount
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__syntaxInstructionAST__analyzeSyntaxInstruction (typeCategoryMethod__syntaxInstructionAST__analyzeSyntaxInstruction inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__syntaxInstructionAST__analyzeSyntaxInstruction
findCategoryMethod__syntaxInstructionAST__analyzeSyntaxInstruction (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'analyzeSyntaxInstructionList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeSyntaxInstructionList (C_Compiler &,
                                const GGS_semanticContext ,
                                const GGS_predefinedTypes ,
                                const GGS_terminalMap  ,
                                const GGS_string ,
                                const GGS_nonterminalMap  ,
                                const GGS_string ,
                                const GGS_syntaxInstructionList  ,
                                const GGS_location  ,
                                GGS_variableMap  &,
                                GGS_uint  &,
                                GGS_semanticInstructionListForGeneration  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'semanticAnalysisOfRuleLabel'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_semanticAnalysisOfRuleLabel (C_Compiler &,
                                const GGS_formalParameterListAST  ,
                                const GGS_syntaxInstructionList  ,
                                const GGS_semanticContext ,
                                const GGS_predefinedTypes ,
                                const GGS_terminalMap  ,
                                const GGS_string ,
                                const GGS_nonterminalMap  ,
                                const GGS_string ,
                                const GGS_location  ,
                                GGS_uint  &,
                                GGS_formalParameterListForGeneration  &,
                                GGS_formalParameterSignature  &,
                                GGS_semanticInstructionListForGeneration  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'semanticAnalysisOfSyntaxComponent'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_semanticAnalysisOfSyntaxComponent (C_Compiler &,
                                const GGS_nonterminalDeclarationListAST  ,
                                const GGS_syntaxRuleListAST  ,
                                const GGS_string ,
                                const GGS_string ,
                                const GGS_semanticContext ,
                                const GGS_predefinedTypes ,
                                const GGS_terminalMap  ,
                                GGS_syntaxDeclarationForGeneration  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@nonterminalLabelMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_nonterminalLabelMap {
  public : GGS_formalParameterListForGeneration  mSignatureForGeneration ;
  public : GGS_formalParameterSignature  mSignature ;
  public : GGS_location  mEndOfArgumentLocation ;

  public : e_nonterminalLabelMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_nonterminalLabelMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_nonterminalLabelMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_nonterminalLabelMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_nonterminalLabelMap * nextObject (void) const { return (elementOf_GGS_nonterminalLabelMap *) mNextItem ; }
  public : inline elementOf_GGS_nonterminalLabelMap * infObject (void) const { return (elementOf_GGS_nonterminalLabelMap *) mInfPtr ; }
  public : inline elementOf_GGS_nonterminalLabelMap * supObject (void) const { return (elementOf_GGS_nonterminalLabelMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_nonterminalLabelMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@nonterminalMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_nonterminalMap {
  public : GGS_nonterminalLabelMap  mLabelMap ;
  public : GGS_bool mHasParseLabel ;

  public : e_nonterminalMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_nonterminalMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_nonterminalMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_nonterminalMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_nonterminalMap * nextObject (void) const { return (elementOf_GGS_nonterminalMap *) mNextItem ; }
  public : inline elementOf_GGS_nonterminalMap * infObject (void) const { return (elementOf_GGS_nonterminalMap *) mInfPtr ; }
  public : inline elementOf_GGS_nonterminalMap * supObject (void) const { return (elementOf_GGS_nonterminalMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_nonterminalMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@ruleLabelImplementationList'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ruleLabelImplementationList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mLabelName ;
  public : GGS_formalParameterListForGeneration  mSignatureForGeneration ;
  public : GGS_formalParameterSignature  mSignature ;
  public : GGS_location  mEndOfArgumentLocation ;
  public : GGS_semanticInstructionListForGeneration  mInstructionListForGeneration ;
//--- Constructor
  public : elementOf_GGS_ruleLabelImplementationList (const GGS_lstring & ,
                                const GGS_formalParameterListForGeneration & ,
                                const GGS_formalParameterSignature & ,
                                const GGS_location & ,
                                const GGS_semanticInstructionListForGeneration & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_ruleLabelImplementationList * nextObject (void) const { return (elementOf_GGS_ruleLabelImplementationList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_ruleLabelImplementationList * previousObject (void) const { return (elementOf_GGS_ruleLabelImplementationList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_ruleLabelImplementationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@ruleDeclarationList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ruleDeclarationList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_string mNonterminalName ;
  public : GGS_uint  mRuleIndex ;
  public : GGS_ruleLabelImplementationList  mLabelImplementationList ;
  public : GGS_bool mHasParseLabel ;
//--- Constructor
  public : elementOf_GGS_ruleDeclarationList (const GGS_string& ,
                                const GGS_uint & ,
                                const GGS_ruleLabelImplementationList & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_ruleDeclarationList * nextObject (void) const { return (elementOf_GGS_ruleDeclarationList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_ruleDeclarationList * previousObject (void) const { return (elementOf_GGS_ruleDeclarationList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_ruleDeclarationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           abstract class 'cPtr_syntaxDeclarationForGeneration'            *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_syntaxDeclarationForGeneration : public cPtr_semanticDeclarationForGeneration {
  private : typedef cPtr_semanticDeclarationForGeneration inherited ;
//--- Constructor
  public : cPtr_syntaxDeclarationForGeneration (const GGS_string& ,
                                const GGS_string& ,
                                const GGS_nonterminalMap & ,
                                const GGS_ruleDeclarationList & ,
                                const GGS_uint & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_string mComponentName ;
  public : GGS_string mLexiqueName ;
  public : GGS_nonterminalMap  mNonterminalDeclarationMap ;
  public : GGS_ruleDeclarationList  mRuleDeclarationList ;
  public : GGS_uint  mSelectMethodCount ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Declarations for 'syntaxFileGenerationTemplate' wrapper           *
//                                                                           *
//---------------------------------------------------------------------------*

extern const cDirectoryWrapperEx gWrapperDirectory_0_syntaxFileGenerationTemplate ;

//---------------------------------------------------------------------------*
//                                                                           *
//'syntaxFileHeader' template of 'syntaxFileGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_syntaxFileGenerationTemplate_syntaxFileHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_COMPONENT_NAME,
                                const GGS_string& var_cas_LEXIQUE_NAME,
                                const GGS_stringlist & var_cas_IMPORTED_COMPONENT_LIST,
                                const GGS_lstringlist & var_cas_TYPE_PREDECLARATION_LIST) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'syntaxFileImplementation' template of 'syntaxFileGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_syntaxFileGenerationTemplate_syntaxFileImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_COMPONENT_NAME,
                                const GGS_stringlist & var_cas_IMPORTED_COMPONENT_LIST) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'syntaxAnalyserClassDeclaration' template of 'syntaxFileGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_syntaxFileGenerationTemplate_syntaxAnalyserClassDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_COMPONENT_NAME,
                                const GGS_string& var_cas_LEXIQUE_NAME,
                                const GGS_nonterminalMap & var_cas_NONTERMINAL_MAP,
                                const GGS_ruleDeclarationList & var_cas_RULE_DECLARATION_LIST,
                                const GGS_uintlist & var_cas_SELECT_METHOD_LIST) ;

//---------------------------------------------------------------------------*

#endif
