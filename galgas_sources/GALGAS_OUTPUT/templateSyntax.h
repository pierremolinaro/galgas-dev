//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'templateSyntax.h'                           *
//             Generated by version version GALGAS_BETA_VERSION              *
//                       march 8th, 2012, at 20h0'20"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef templateSyntax_ENTITIES_DEFINED
#define templateSyntax_ENTITIES_DEFINED

//---------------------------------------------------------------------------*

#include "galgas2/predefined-types.h"

//---------------------------------------------------------------------------*

#include "galgasTemplateScanner.h"

//---------------------------------------------------------------------------*

#include "templateTypesForAST.h"

//---------------------------------------------------------------------------*

class GALGAS__32_stringlist ;
class GALGAS__32_stringlist_2E_element ;
class GALGAS_application ;
class GALGAS_binaryset ;
class GALGAS_bool ;
class GALGAS_char ;
class GALGAS_data ;
class GALGAS_double ;
class GALGAS_filewrapper ;
class GALGAS_function ;
class GALGAS_functionlist ;
class GALGAS_functionlist_2E_element ;
class GALGAS_lbool ;
class GALGAS_lchar ;
class GALGAS_ldouble ;
class GALGAS_location ;
class GALGAS_lsint ;
class GALGAS_lsint_36__34_ ;
class GALGAS_lstring ;
class GALGAS_lstringlist ;
class GALGAS_lstringlist_2E_element ;
class GALGAS_luint ;
class GALGAS_luint_36__34_ ;
class GALGAS_luintlist ;
class GALGAS_luintlist_2E_element ;
class GALGAS_object ;
class GALGAS_objectlist ;
class GALGAS_objectlist_2E_element ;
class GALGAS_range ;
class GALGAS_sint ;
class GALGAS_sint_36__34_ ;
class GALGAS_string ;
class GALGAS_stringlist ;
class GALGAS_stringlist_2E_element ;
class GALGAS_stringset ;
class GALGAS_structFieldAccessTemplateExpressionAST ;
class GALGAS_templateAddOperationAST ;
class GALGAS_templateAndOperationAST ;
class GALGAS_templateBlockInstructionAST ;
class GALGAS_templateCategoryTemplateCallAST ;
class GALGAS_templateClassToTypeOperandAST ;
class GALGAS_templateConcatOperationAST ;
class GALGAS_templateConstructorAST ;
class GALGAS_templateDivideOperationAST ;
class GALGAS_templateEqualTestAST ;
class GALGAS_templateExpressionAST ;
class GALGAS_templateExpressionListAST ;
class GALGAS_templateExpressionListAST_2E_element ;
class GALGAS_templateFalseBoolAST ;
class GALGAS_templateFileWrapperTemplateCallAST ;
class GALGAS_templateFileWrapperWithStaticPathAST ;
class GALGAS_templateFunctionCallAST ;
class GALGAS_templateIfThenElseExpressionAST ;
class GALGAS_templateInfOrEqualTestAST ;
class GALGAS_templateInstructionAST ;
class GALGAS_templateInstructionExpressionAST ;
class GALGAS_templateInstructionForeachAST ;
class GALGAS_templateInstructionGetColumnLocationAST ;
class GALGAS_templateInstructionGotoColumnLocationAST ;
class GALGAS_templateInstructionIfAST ;
class GALGAS_templateInstructionIfBranchListAST ;
class GALGAS_templateInstructionIfBranchListAST_2E_element ;
class GALGAS_templateInstructionListAST ;
class GALGAS_templateInstructionListAST_2E_element ;
class GALGAS_templateInstructionStringAST ;
class GALGAS_templateInstructionSwitchAST ;
class GALGAS_templateInstructionSwitchBranchListAST ;
class GALGAS_templateInstructionSwitchBranchListAST_2E_element ;
class GALGAS_templateLeftShiftOperationAST ;
class GALGAS_templateLiteralCharExpressionAST ;
class GALGAS_templateLiteralDoubleExpressionAST ;
class GALGAS_templateLiteralSInt_36__34_ExpressionAST ;
class GALGAS_templateLiteralSIntExpressionAST ;
class GALGAS_templateLiteralStringExpressionAST ;
class GALGAS_templateLiteralUInt_36__34_ExpressionAST ;
class GALGAS_templateLiteralUIntExpressionAST ;
class GALGAS_templateLogicalNegateAST ;
class GALGAS_templateModuloOperationAST ;
class GALGAS_templateMultiplyOperationAST ;
class GALGAS_templateNonEqualTestAST ;
class GALGAS_templateNotOperatorAST ;
class GALGAS_templateOptionAccessAST ;
class GALGAS_templateOrOperationAST ;
class GALGAS_templateReaderCallInExpressionAST ;
class GALGAS_templateRightShiftOperationAST ;
class GALGAS_templateStrictInfTestAST ;
class GALGAS_templateStrictSupTestAST ;
class GALGAS_templateSubOperationAST ;
class GALGAS_templateSupOrEqualTestAST ;
class GALGAS_templateTrueBoolAST ;
class GALGAS_templateUnaryMinusOperationAST ;
class GALGAS_templateVarInExpressionAST ;
class GALGAS_templateXorOperationAST ;
class GALGAS_type ;
class GALGAS_typelist ;
class GALGAS_typelist_2E_element ;
class GALGAS_uint ;
class GALGAS_uint_36__34_ ;
class GALGAS_uint_36__34_list ;
class GALGAS_uint_36__34_list_2E_element ;
class GALGAS_uintlist ;
class GALGAS_uintlist_2E_element ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'enterTemplateString'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterTemplateString (GALGAS_templateInstructionListAST & ioArgument0,
                                  C_Compiler * inCompiler
                                  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Parser class 'templateSyntax' declaration                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cParser_templateSyntax {
//--- Virtual destructor
  public : virtual ~ cParser_templateSyntax (void) {}

//--- Non terminal declarations
  protected : virtual void nt_concatenation_5F_term_ (GALGAS_templateExpressionAST & outArgument0,
                                                      C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_concatenation_5F_term_parse (C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_expression_ (GALGAS_templateExpressionAST & outArgument0,
                                           C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_expression_parse (C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_factor_ (GALGAS_templateExpressionAST & outArgument0,
                                       C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_factor_parse (C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_output_5F_expression_5F_list_ (GALGAS_templateExpressionListAST & outArgument0,
                                                             C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_output_5F_expression_5F_list_parse (C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_primary_ (GALGAS_templateExpressionAST & outArgument0,
                                        C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_primary_parse (C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_relation_5F_factor_ (GALGAS_templateExpressionAST & outArgument0,
                                                   C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_relation_5F_factor_parse (C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_relation_5F_term_ (GALGAS_templateExpressionAST & outArgument0,
                                                 C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_relation_5F_term_parse (C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_simple_5F_expression_ (GALGAS_templateExpressionAST & outArgument0,
                                                     C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_simple_5F_expression_parse (C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_template_5F_instruction_ (GALGAS_templateInstructionListAST & ioArgument0,
                                                        C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_template_5F_instruction_parse (C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_template_5F_parser_5F_start_5F_symbol_ (GALGAS_templateInstructionListAST & outArgument0,
                                                                      C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_template_5F_parser_5F_start_5F_symbol_parse (C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_term_ (GALGAS_templateExpressionAST & outArgument0,
                                     C_Lexique_galgasTemplateScanner * inLexique) = 0 ;

  protected : virtual void nt_term_parse (C_Lexique_galgasTemplateScanner * inLexique) = 0 ;


//--- Rule declarations
  protected : void rule_templateSyntax_expression_i0_ (GALGAS_templateExpressionAST & outArgument0,
                                                       C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_expression_i0_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_concatenation_5F_term_i1_ (GALGAS_templateExpressionAST & outArgument0,
                                                                  C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_concatenation_5F_term_i1_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_relation_5F_term_i2_ (GALGAS_templateExpressionAST & outArgument0,
                                                             C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_relation_5F_term_i2_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_relation_5F_factor_i3_ (GALGAS_templateExpressionAST & outArgument0,
                                                               C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_relation_5F_factor_i3_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_simple_5F_expression_i4_ (GALGAS_templateExpressionAST & outArgument0,
                                                                 C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_simple_5F_expression_i4_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_term_i5_ (GALGAS_templateExpressionAST & outArgument0,
                                                 C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_term_i5_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_factor_i6_ (GALGAS_templateExpressionAST & outArgument0,
                                                   C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_factor_i6_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_factor_i7_ (GALGAS_templateExpressionAST & outArgument0,
                                                   C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_factor_i7_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_factor_i8_ (GALGAS_templateExpressionAST & outArgument0,
                                                   C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_factor_i8_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_factor_i9_ (GALGAS_templateExpressionAST & outArgument0,
                                                   C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_factor_i9_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i10_ (GALGAS_templateExpressionAST & outArgument0,
                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i10_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i11_ (GALGAS_templateExpressionAST & outArgument0,
                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i11_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i12_ (GALGAS_templateExpressionAST & outArgument0,
                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i12_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i13_ (GALGAS_templateExpressionAST & outArgument0,
                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i13_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i14_ (GALGAS_templateExpressionAST & outArgument0,
                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i14_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i15_ (GALGAS_templateExpressionAST & outArgument0,
                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i15_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i16_ (GALGAS_templateExpressionAST & outArgument0,
                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i16_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i17_ (GALGAS_templateExpressionAST & outArgument0,
                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i17_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i18_ (GALGAS_templateExpressionAST & outArgument0,
                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i18_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i19_ (GALGAS_templateExpressionAST & outArgument0,
                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i19_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i20_ (GALGAS_templateExpressionAST & outArgument0,
                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i20_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i21_ (GALGAS_templateExpressionAST & outArgument0,
                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i21_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i22_ (GALGAS_templateExpressionAST & outArgument0,
                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_primary_i22_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_output_5F_expression_5F_list_i23_ (GALGAS_templateExpressionListAST & outArgument0,
                                                                          C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_output_5F_expression_5F_list_i23_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_template_5F_instruction_i24_ (GALGAS_templateInstructionListAST & ioArgument0,
                                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_template_5F_instruction_i24_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_template_5F_instruction_i25_ (GALGAS_templateInstructionListAST & ioArgument0,
                                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_template_5F_instruction_i25_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_template_5F_instruction_i26_ (GALGAS_templateInstructionListAST & ioArgument0,
                                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_template_5F_instruction_i26_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_template_5F_instruction_i27_ (GALGAS_templateInstructionListAST & ioArgument0,
                                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_template_5F_instruction_i27_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_template_5F_instruction_i28_ (GALGAS_templateInstructionListAST & ioArgument0,
                                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_template_5F_instruction_i28_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_template_5F_instruction_i29_ (GALGAS_templateInstructionListAST & ioArgument0,
                                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_template_5F_instruction_i29_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_template_5F_instruction_i30_ (GALGAS_templateInstructionListAST & ioArgument0,
                                                                     C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_template_5F_instruction_i30_parse (C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_template_5F_parser_5F_start_5F_symbol_i31_ (GALGAS_templateInstructionListAST & outArgument0,
                                                                                   C_Lexique_galgasTemplateScanner * inLexique) ;

  protected : void rule_templateSyntax_template_5F_parser_5F_start_5F_symbol_i31_parse (C_Lexique_galgasTemplateScanner * inLexique) ;



//--- Select methods
  protected : virtual PMSInt32 select_templateSyntax_0 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_1 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_2 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_3 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_4 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_5 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_6 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_7 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_8 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_9 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_10 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_11 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_12 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_13 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_14 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_15 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_16 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_17 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_18 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_19 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_20 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_21 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_22 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_23 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_24 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_25 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_26 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_27 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_28 (C_Lexique_galgasTemplateScanner *) = 0 ;

  protected : virtual PMSInt32 select_templateSyntax_29 (C_Lexique_galgasTemplateScanner *) = 0 ;


} ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

#endif
