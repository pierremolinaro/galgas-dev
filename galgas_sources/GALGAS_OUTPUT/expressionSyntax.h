//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'expressionSyntax.h'                          *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    february 28th, 2012, at 19h33'41"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef expressionSyntax_ENTITIES_DEFINED
#define expressionSyntax_ENTITIES_DEFINED

//---------------------------------------------------------------------------*

#include "galgas2/predefined-types.h"

//---------------------------------------------------------------------------*

#include "galgas_scanner.h"

//---------------------------------------------------------------------------*

#include "semanticsTypesForAST.h"

//---------------------------------------------------------------------------*

class GALGAS__32_stringlist ;
class GALGAS_abstractCategoryMethodAST ;
class GALGAS_abstractCategoryModifierAST ;
class GALGAS_abstractCategoryReaderAST ;
class GALGAS_actualInputParameterListAST ;
class GALGAS_actualParameterAST ;
class GALGAS_actualParameterListAST ;
class GALGAS_addExpressionAST ;
class GALGAS_andExpressionAST ;
class GALGAS_application ;
class GALGAS_arrayDeclarationAST ;
class GALGAS_assignmentInstructionAST ;
class GALGAS_attributeInCollectionListAST ;
class GALGAS_binaryset ;
class GALGAS_bool ;
class GALGAS_castInExpressionAST ;
class GALGAS_castInstructionBranchListAST ;
class GALGAS_categoryMethodAST ;
class GALGAS_categoryModifierAST ;
class GALGAS_categoryReaderAST ;
class GALGAS_char ;
class GALGAS_classDeclarationAST ;
class GALGAS_complementExpressionAST ;
class GALGAS_concatExpressionAST ;
class GALGAS_concatInstructionAST ;
class GALGAS_constructorExpressionAST ;
class GALGAS_data ;
class GALGAS_decrementInstructionAST ;
class GALGAS_divisionExpressionAST ;
class GALGAS_double ;
class GALGAS_dropInstructionAST ;
class GALGAS_enumDeclarationAST ;
class GALGAS_equalExpressionAST ;
class GALGAS_errorInstructionAST ;
class GALGAS_externFunctionDeclarationAST ;
class GALGAS_externRoutineDeclarationAST ;
class GALGAS_falseExpressionAST ;
class GALGAS_filewrapper ;
class GALGAS_filewrapperDeclarationAST ;
class GALGAS_filewrapperInExpressionAST ;
class GALGAS_filewrapperObjectInstanciationInExpressionAST ;
class GALGAS_filewrapperTemplateInExpressionAST ;
class GALGAS_filewrapperTemplateListAST ;
class GALGAS_foreachInstructionAST ;
class GALGAS_foreachInstructionEnumeratedObjectElementListAST ;
class GALGAS_foreachInstructionEnumeratedObjectListAST ;
class GALGAS_foreachNewInstructionAST ;
class GALGAS_foreachNewInstructionEnumeratedObjectListAST ;
class GALGAS_formalArgumentPassingModeAST ;
class GALGAS_formalInputParameterListAST ;
class GALGAS_formalParameterListAST ;
class GALGAS_formalTemplateInputParameterListAST ;
class GALGAS_function ;
class GALGAS_functionCallExpressionAST ;
class GALGAS_functionDeclarationAST ;
class GALGAS_functionlist ;
class GALGAS_grammarInstructionAST ;
class GALGAS_graphDeclarationAST ;
class GALGAS_graphInsertModifierList ;
class GALGAS_greaterOrEqualExpressionAST ;
class GALGAS_hereExpressionAST ;
class GALGAS_ifExpressionAST ;
class GALGAS_ifInstructionAST ;
class GALGAS_incrementInstructionAST ;
class GALGAS_inputActualParameterAST ;
class GALGAS_inputJokerActualParameterAST ;
class GALGAS_insertMethodListAST ;
class GALGAS_insertOrReplaceDeclarationListAST ;
class GALGAS_lbool ;
class GALGAS_lchar ;
class GALGAS_ldouble ;
class GALGAS_leftShiftExpressionAST ;
class GALGAS_lexiqueIntrospectionExpressionAST ;
class GALGAS_listDeclarationAST ;
class GALGAS_listmapDeclarationAST ;
class GALGAS_literalCharExpressionAST ;
class GALGAS_literalDoubleExpressionAST ;
class GALGAS_literalSInt_36__34_ExpressionAST ;
class GALGAS_literalSIntExpressionAST ;
class GALGAS_literalStringExpressionAST ;
class GALGAS_literalTypeInExpressionAST ;
class GALGAS_literalUInt_36__34_ExpressionAST ;
class GALGAS_literalUIntExpressionAST ;
class GALGAS_localVariableDeclarationAST ;
class GALGAS_localVariableDeclarationListAST ;
class GALGAS_localVariableOrConstantDeclarationWithAssignmentAST ;
class GALGAS_localVariableOrConstantDeclarationWithConstructorCallAST ;
class GALGAS_location ;
class GALGAS_logInstructionAST ;
class GALGAS_logListAST ;
class GALGAS_loopInstructionAST ;
class GALGAS_lowerOrEqualExpressionAST ;
class GALGAS_lsint ;
class GALGAS_lsint_36__34_ ;
class GALGAS_lstring ;
class GALGAS_lstringlist ;
class GALGAS_luint ;
class GALGAS_luint_36__34_ ;
class GALGAS_luintlist ;
class GALGAS_mapAutomatonMessageKind ;
class GALGAS_mapDeclarationAST ;
class GALGAS_mapOverrideBlockDescriptorAST ;
class GALGAS_mapOverrideBlockListAST ;
class GALGAS_mapProxyDeclarationAST ;
class GALGAS_mapRemoveMethodListAST ;
class GALGAS_mapSearchMethodListAST ;
class GALGAS_mapStateList ;
class GALGAS_mapStateTransitionList ;
class GALGAS_matchEntryListAST ;
class GALGAS_matchInstructionAST ;
class GALGAS_matchInstructionBranchListAST ;
class GALGAS_messageInstructionAST ;
class GALGAS_methodCallInstructionAST ;
class GALGAS_modifierCallInstructionAST ;
class GALGAS_moduloExpressionAST ;
class GALGAS_multiplicationExpressionAST ;
class GALGAS_notEqualExpressionAST ;
class GALGAS_notExpressionAST ;
class GALGAS_object ;
class GALGAS_objectlist ;
class GALGAS_onceFunctionDeclarationAST ;
class GALGAS_optionExpressionAST ;
class GALGAS_orExpressionAST ;
class GALGAS_outputActualParameterAST ;
class GALGAS_outputInputActualParameterAST ;
class GALGAS_overridingAbstractCategoryMethodAST ;
class GALGAS_overridingAbstractCategoryModifierAST ;
class GALGAS_overridingAbstractCategoryReaderAST ;
class GALGAS_overridingCategoryMethodAST ;
class GALGAS_overridingCategoryModifierAST ;
class GALGAS_overridingCategoryReaderAST ;
class GALGAS_plusEqualInstructionAST ;
class GALGAS_range ;
class GALGAS_readAccessWithInstructionAST ;
class GALGAS_readWriteAccessWithInstructionAST ;
class GALGAS_readerCallExpressionAST ;
class GALGAS_rightShiftExpressionAST ;
class GALGAS_routineCallInstructionAST ;
class GALGAS_routineDeclarationAST ;
class GALGAS_selfAssignmentInstructionAST ;
class GALGAS_selfConcatInstructionAST ;
class GALGAS_selfCopyInExpressionAST ;
class GALGAS_selfDecrementInstructionAST ;
class GALGAS_selfIncrementInstructionAST ;
class GALGAS_selfModifierCallInstructionAST ;
class GALGAS_selfPlusEqualInstructionAST ;
class GALGAS_semanticDeclarationAST ;
class GALGAS_semanticDeclarationListAST ;
class GALGAS_semanticExpressionAST ;
class GALGAS_semanticExpressionListAST ;
class GALGAS_semanticInstructionAST ;
class GALGAS_semanticInstructionListAST ;
class GALGAS_semanticsComponentAST ;
class GALGAS_sint ;
class GALGAS_sint_36__34_ ;
class GALGAS_sortedListDeclarationAST ;
class GALGAS_sortedListSortDescriptorListAST ;
class GALGAS_strictGreaterExpressionAST ;
class GALGAS_strictLowerExpressionAST ;
class GALGAS_string ;
class GALGAS_stringlist ;
class GALGAS_stringset ;
class GALGAS_structDeclarationAST ;
class GALGAS_structFieldAccessExpressionAST ;
class GALGAS_structuredCastInstructionAST ;
class GALGAS_subExpressionAST ;
class GALGAS_switchBranchesAST ;
class GALGAS_switchInstructionAST ;
class GALGAS_syntaxInstructionAST ;
class GALGAS_trueExpressionAST ;
class GALGAS_type ;
class GALGAS_typeMethodCallInstructionAST ;
class GALGAS_typelist ;
class GALGAS_uint ;
class GALGAS_uint_36__34_ ;
class GALGAS_uint_36__34_list ;
class GALGAS_uintlist ;
class GALGAS_unaryMinusExpressionAST ;
class GALGAS_uniqueMapDeclarationAST ;
class GALGAS_varInExpressionAST ;
class GALGAS_warningInstructionAST ;
class GALGAS_xorExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Parser class 'expressionSyntax' declaration                *
//                                                                           *
//---------------------------------------------------------------------------*

class cParser_expressionSyntax {
//--- Virtual destructor
  public : virtual ~ cParser_expressionSyntax (void) {}

//--- Non terminal declarations
  protected : virtual void nt_concatenation_5F_term_ (GALGAS_semanticExpressionAST & outArgument0,
                                                      C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_concatenation_5F_term_parse (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_concatenation_5F_term_indexing (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_expression_ (GALGAS_semanticExpressionAST & outArgument0,
                                           C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_expression_parse (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_expression_indexing (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_factor_ (GALGAS_semanticExpressionAST & outArgument0,
                                       C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_factor_parse (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_factor_indexing (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_output_5F_expression_5F_list_ (GALGAS_semanticExpressionListAST & outArgument0,
                                                             C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_output_5F_expression_5F_list_parse (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_output_5F_expression_5F_list_indexing (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_primary_ (GALGAS_semanticExpressionAST & outArgument0,
                                        C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_primary_parse (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_primary_indexing (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_relation_5F_factor_ (GALGAS_semanticExpressionAST & outArgument0,
                                                   C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_relation_5F_factor_parse (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_relation_5F_factor_indexing (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_relation_5F_term_ (GALGAS_semanticExpressionAST & outArgument0,
                                                 C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_relation_5F_term_parse (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_relation_5F_term_indexing (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_simple_5F_expression_ (GALGAS_semanticExpressionAST & outArgument0,
                                                     C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_simple_5F_expression_parse (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_simple_5F_expression_indexing (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_term_ (GALGAS_semanticExpressionAST & outArgument0,
                                     C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_term_parse (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_term_indexing (C_Lexique_galgas_5F_scanner * inLexique) = 0 ;


//--- Rule declarations
  protected : void rule_expressionSyntax_expression_i0_ (GALGAS_semanticExpressionAST & outArgument0,
                                                         C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_expression_i0_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_expression_i0_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_concatenation_5F_term_i1_ (GALGAS_semanticExpressionAST & outArgument0,
                                                                    C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_concatenation_5F_term_i1_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_concatenation_5F_term_i1_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_relation_5F_term_i2_ (GALGAS_semanticExpressionAST & outArgument0,
                                                               C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_relation_5F_term_i2_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_relation_5F_term_i2_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_relation_5F_factor_i3_ (GALGAS_semanticExpressionAST & outArgument0,
                                                                 C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_relation_5F_factor_i3_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_relation_5F_factor_i3_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_simple_5F_expression_i4_ (GALGAS_semanticExpressionAST & outArgument0,
                                                                   C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_simple_5F_expression_i4_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_simple_5F_expression_i4_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_term_i5_ (GALGAS_semanticExpressionAST & outArgument0,
                                                   C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_term_i5_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_term_i5_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_factor_i6_ (GALGAS_semanticExpressionAST & outArgument0,
                                                     C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_factor_i6_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_factor_i6_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_factor_i7_ (GALGAS_semanticExpressionAST & outArgument0,
                                                     C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_factor_i7_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_factor_i7_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_factor_i8_ (GALGAS_semanticExpressionAST & outArgument0,
                                                     C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_factor_i8_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_factor_i8_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_factor_i9_ (GALGAS_semanticExpressionAST & outArgument0,
                                                     C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_factor_i9_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_factor_i9_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i10_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i10_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i10_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i11_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i11_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i11_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i12_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i12_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i12_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i13_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i13_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i13_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i14_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i14_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i14_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i15_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i15_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i15_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i16_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i16_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i16_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i17_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i17_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i17_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i18_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i18_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i18_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i19_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i19_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i19_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i20_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i20_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i20_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i21_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i21_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i21_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i22_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i22_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i22_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i23_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i23_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i23_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i24_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i24_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i24_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i25_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i25_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i25_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i26_ (GALGAS_semanticExpressionAST & outArgument0,
                                                       C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i26_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_primary_i26_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_output_5F_expression_5F_list_i27_ (GALGAS_semanticExpressionListAST & outArgument0,
                                                                            C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_output_5F_expression_5F_list_i27_parse (C_Lexique_galgas_5F_scanner * inLexique) ;

  protected : void rule_expressionSyntax_output_5F_expression_5F_list_i27_indexing (C_Lexique_galgas_5F_scanner * inLexique) ;



//--- Select methods
  protected : virtual PMSInt32 select_expressionSyntax_0 (C_Lexique_galgas_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_expressionSyntax_1 (C_Lexique_galgas_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_expressionSyntax_2 (C_Lexique_galgas_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_expressionSyntax_3 (C_Lexique_galgas_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_expressionSyntax_4 (C_Lexique_galgas_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_expressionSyntax_5 (C_Lexique_galgas_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_expressionSyntax_6 (C_Lexique_galgas_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_expressionSyntax_7 (C_Lexique_galgas_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_expressionSyntax_8 (C_Lexique_galgas_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_expressionSyntax_9 (C_Lexique_galgas_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_expressionSyntax_10 (C_Lexique_galgas_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_expressionSyntax_11 (C_Lexique_galgas_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_expressionSyntax_12 (C_Lexique_galgas_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_expressionSyntax_13 (C_Lexique_galgas_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_expressionSyntax_14 (C_Lexique_galgas_5F_scanner *) = 0 ;


} ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

#endif
