//---------------------------------------------------------------------------*
//                                                                           *
//                 File 'semanticInstructionGeneration.cpp'                  *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     november 13th, 2010, at 17h3'5"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "semanticInstructionGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticInstructionGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@actualParameterForGeneration.generateActualParameter'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__actualParameterForGeneration__generateActualParameter> gDispatchTableForMethod__actualParameterForGeneration__generateActualParameter ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__actualParameterForGeneration__generateActualParameter (typeCategoryMethod__actualParameterForGeneration__generateActualParameter inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__actualParameterForGeneration__generateActualParameter.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__actualParameterForGeneration__generateActualParameter
findCategoryMethod__actualParameterForGeneration__generateActualParameter (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__actualParameterForGeneration__generateActualParameter result = NULL ;
  if (NULL != inClassPtr) {
    if (inClassPtr->slotID () < gDispatchTableForMethod__actualParameterForGeneration__generateActualParameter.count ()) {
      result = gDispatchTableForMethod__actualParameterForGeneration__generateActualParameter (inClassPtr->slotID () COMMA_HERE) ;
    }
    if (NULL == result) {
      AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
      if (superClassPtr != NULL) {
        result = findCategoryMethod__actualParameterForGeneration__generateActualParameter (superClassPtr) ;
        gDispatchTableForMethod__actualParameterForGeneration__generateActualParameter.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
      }
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@outputActualParameterForGeneration.generateActualParameter'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__outputActualParameterForGeneration__generateActualParameter (C_CompilerEx & inLexique,
                                const cPtr_outputActualParameterForGeneration * operand_2121,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_string & var_cas_ioImplementation,
                                GGS_stringlist  & /* var_cas_ioJokerParametersToReleaseList */,
                                GGS_stringlist  & /* var_cas_ioOutputVariableList */,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_outCppName
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2121 != NULL) {
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_2121->mOutputActualParameterExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_2121->mOutputActualParameterExpression (HERE), var_cas_ioImplementation, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_outCppName COMMA_SOURCE_FILE_AT_LINE (46)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@outputInputActualParameterForGeneration.generateActualParameter'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__outputInputActualParameterForGeneration__generateActualParameter (C_CompilerEx & inLexique,
                                const cPtr_outputInputActualParameterForGeneration * operand_2668,
                                GGS_uint  & /* var_cas_ioTemporaryVariableIndex */,
                                GGS_string & /* var_cas_ioImplementation */,
                                GGS_stringlist  & /* var_cas_ioJokerParametersToReleaseList */,
                                GGS_stringlist  & /* var_cas_ioOutputVariableList */,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_outCppName
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2668 != NULL) {
    var_cas_outCppName = operand_2668->mOutputInputVariableCppName ;
    {
      GGS_lstringlist::cEnumerator enumerator_2987 (operand_2668->mStructAttributeList, true) ;
      const GGS_lstringlist::cElement * operand_2987 = NULL ;
      while (((operand_2987 = enumerator_2987.nextObject ()))) {
        macroValidPointer (operand_2987) ;
        var_cas_outCppName.appendCString (".mAttribute_") ;
        var_cas_outCppName.dotAssign_operation (operand_2987->mValue.ggs_string ().reader_identifierRepresentation ()) ;
      }
    }
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, operand_2668->mOutputInputVariableCppName COMMA_SOURCE_FILE_AT_LINE (63)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@inputActualParameterForGeneration.generateActualParameter'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__inputActualParameterForGeneration__generateActualParameter (C_CompilerEx & inLexique,
                                const cPtr_inputActualParameterForGeneration * operand_3319,
                                GGS_uint  & /* var_cas_ioTemporaryVariableIndex */,
                                GGS_string & /* var_cas_ioImplementation */,
                                GGS_stringlist  & /* var_cas_ioJokerParametersToReleaseList */,
                                GGS_stringlist  & var_cas_ioOutputVariableList,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_outCppName
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3319 != NULL) {
    var_cas_outCppName = operand_3319->mInputActualCppName ;
    var_cas_ioOutputVariableList.addAssign_operation (operand_3319->mInputActualCppName) ;
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, var_cas_outCppName COMMA_SOURCE_FILE_AT_LINE (78)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@inputJokerParameterForGeneration.generateActualParameter'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__inputJokerParameterForGeneration__generateActualParameter (C_CompilerEx & inLexique,
                                const cPtr_inputJokerParameterForGeneration * operand_3865,
                                GGS_uint  & /* var_cas_ioTemporaryVariableIndex */,
                                GGS_string & var_cas_ioImplementation,
                                GGS_stringlist  & var_cas_ioJokerParametersToReleaseList,
                                GGS_stringlist  & var_cas_ioOutputVariableList,
                                GGS_stringset  & /* var_cas_ioUnusedVariableCppNameSet */,
                                GGS_string & var_cas_outCppName
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3865 != NULL) {
    var_cas_outCppName = operand_3865->mInputActualCppName ;
    var_cas_ioImplementation.appendCString ("GALGAS_") ;
    var_cas_ioImplementation.dotAssign_operation (operand_3865->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (92))) ;
    var_cas_ioImplementation.appendCString (" ") ;
    var_cas_ioImplementation.dotAssign_operation (var_cas_outCppName) ;
    var_cas_ioImplementation.appendCString (" ; // Joker input parameter\n") ;
    var_cas_ioJokerParametersToReleaseList.addAssign_operation (operand_3865->mInputActualCppName) ;
    var_cas_ioOutputVariableList.addAssign_operation (operand_3865->mInputActualCppName) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticInstructionForGeneration.generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticInstructionForGeneration__generateInstruction> gDispatchTableForMethod__semanticInstructionForGeneration__generateInstruction ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticInstructionForGeneration__generateInstruction (typeCategoryMethod__semanticInstructionForGeneration__generateInstruction inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticInstructionForGeneration__generateInstruction.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticInstructionForGeneration__generateInstruction
findCategoryMethod__semanticInstructionForGeneration__generateInstruction (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticInstructionForGeneration__generateInstruction result = NULL ;
  if (NULL != inClassPtr) {
    if (inClassPtr->slotID () < gDispatchTableForMethod__semanticInstructionForGeneration__generateInstruction.count ()) {
      result = gDispatchTableForMethod__semanticInstructionForGeneration__generateInstruction (inClassPtr->slotID () COMMA_HERE) ;
    }
    if (NULL == result) {
      AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
      if (superClassPtr != NULL) {
        result = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (superClassPtr) ;
        gDispatchTableForMethod__semanticInstructionForGeneration__generateInstruction.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
      }
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of function "generateRoutineBody"              *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateRoutineBody (C_CompilerEx & inLexique,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateRoutineBody at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
  GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_outGeneratedCode = GGS_string ("") ;
  GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
  var_cas_outGeneratedCode.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (120)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_5406 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_5406 = NULL ;
    while (((operand_5406 = enumerator_5406.nextObject ()))) {
      macroValidPointer (operand_5406) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_5406->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_5406->mInstruction (HERE), var_cas_inGenerateCheckValid, var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_outGeneratedCode COMMA_SOURCE_FILE_AT_LINE (122)) ;
        }
      }
    }
  }
  var_cas_outGeneratedCode.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (124)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateRoutineBody\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateRoutineBody (C_CompilerEx & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_bool arg_0 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_1 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateRoutineBody (inLexique,
                            arg_0,
                            arg_1
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateRoutineBody [2] = {& kTypeDescriptor_GGS_bool,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration } ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateRoutineBody ("generateRoutineBody",
                              functionForGenericCall_generateRoutineBody,
                              & kTypeDescriptor_GGS_string,
                              2,
                              kArgumentTypeList_generateRoutineBody) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "generateInstructionList"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateInstructionList (C_CompilerEx & inLexique,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateInstructionList at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioGeneratedCode.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (136)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_5997 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_5997 = NULL ;
    while (((operand_5997 = enumerator_5997.nextObject ()))) {
      macroValidPointer (operand_5997) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_5997->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_5997->mInstruction (HERE), var_cas_inGenerateCheckValid, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (138)) ;
        }
      }
    }
  }
  var_cas_ioGeneratedCode.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (140)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateInstructionList\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableOrConstantDeclarationWithSourceExpressionForGeneration.generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableOrConstantDeclarationWithSourceExpressionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_localVariableOrConstantDeclarationWithSourceExpressionForGeneration * operand_6394,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6394 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration\n") ;
    GGS_string var_cas_sourceVar ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_6394->mSourceExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_6394->mSourceExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_sourceVar COMMA_SOURCE_FILE_AT_LINE (153)) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("GALGAS_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_6394->mTargetType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (154))) ;
    var_cas_ioGeneratedCode.appendCString (" ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_6394->mCppVariableName) ;
    var_cas_ioGeneratedCode.appendCString (" = ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_sourceVar) ;
    var_cas_ioGeneratedCode.appendCString (" ;\n") ;
    const GGS_bool cond_7151 = var_cas_inGenerateCheckValid ;
    if (cond_7151.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      var_cas_ioGeneratedCode.appendCString ("  ") ;
      var_cas_ioGeneratedCode.dotAssign_operation (operand_6394->mCppVariableName) ;
      var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationForGeneration.generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_localVariableDeclarationForGeneration * operand_7324,
                                const GGS_bool  /* var_cas_inGenerateCheckValid */,
                                GGS_uint  & /* var_cas_ioTemporaryVariableIndex */,
                                GGS_stringset  & /* var_cas_ioUnusedVariableCppNameSet */,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7324 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @localVariableDeclarationForGeneration\n") ;
    var_cas_ioGeneratedCode.appendCString ("GALGAS_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_7324->mVariableType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (172))) ;
    var_cas_ioGeneratedCode.appendCString (" ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_7324->mCppVariableName) ;
    var_cas_ioGeneratedCode.appendCString (" ;\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableOrConstantDeclarationWithConstructorCallForGeneration.generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableOrConstantDeclarationWithConstructorCallForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_localVariableOrConstantDeclarationWithConstructorCallForGeneration * operand_7867,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7867 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration\n") ;
    GGS_stringlist  var_cas_parameterList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_semanticExpressionListForGeneration::cEnumerator enumerator_8185 (operand_7867->mConstructorArguments, true) ;
      const GGS_semanticExpressionListForGeneration::cElement * operand_8185 = NULL ;
      while (((operand_8185 = enumerator_8185.nextObject ()))) {
        macroValidPointer (operand_8185) ;
        GGS_string var_cas_parameter ;
        { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_8185->mExpression.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, operand_8185->mExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_parameter COMMA_SOURCE_FILE_AT_LINE (187)) ;
          }
        }
        var_cas_parameterList.addAssign_operation (var_cas_parameter) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("GALGAS_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_7867->mTargetType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (190))) ;
    var_cas_ioGeneratedCode.appendCString (" ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_7867->mTargetVariableCppName) ;
    var_cas_ioGeneratedCode.appendCString (" = GALGAS_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_7867->mTargetType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (192))) ;
    var_cas_ioGeneratedCode.appendCString ("::constructor_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_7867->mConstructorName.reader_identifierRepresentation ()) ;
    var_cas_ioGeneratedCode.appendCString (" (") ;
    {
      GGS_stringlist::cEnumerator enumerator_8722 (var_cas_parameterList, true) ;
      const GGS_stringlist::cElement * operand_8722 = enumerator_8722.nextObject () ;
      if ((operand_8722 != NULL)) {
        bool _foreach_loop_8722 ;
        do{
          macroValidPointer (operand_8722) ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_8722->mValue) ;
          operand_8722 = enumerator_8722.nextObject () ;
          _foreach_loop_8722 = ((operand_8722 != NULL)) ;
          if (_foreach_loop_8722) {
            var_cas_ioGeneratedCode.appendCString (", ") ;
          }
        }while (_foreach_loop_8722) ;
      }
    }
    GGS_bool var_cas_needsComma = (var_cas_parameterList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
    const GGS_bool cond_9103 = operand_7867->mHasCompilerArgument ;
    if (cond_9103.isBuiltAndTrue ()) {
      const GGS_bool cond_8956 = var_cas_needsComma ;
      if (cond_8956.isBuiltAndTrue ()) {
        var_cas_ioGeneratedCode.appendCString (", ") ;
      }
      var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (204)) COMMA_SOURCE_FILE_AT_LINE (204)) ;
      var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (205))) ;
      var_cas_needsComma = GGS_bool (true) ;
    }
    const GGS_bool cond_9242 = var_cas_needsComma ;
    if (cond_9242.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString (" COMMA_SOURCE_FILE_AT_LINE (") ;
      var_cas_ioGeneratedCode.dotAssign_operation (operand_7867->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (209)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (209))) ;
      var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    }else if (cond_9242.isBuiltAndFalse ()) {
      var_cas_ioGeneratedCode.appendCString ("SOURCE_FILE_AT_LINE (") ;
      var_cas_ioGeneratedCode.dotAssign_operation (operand_7867->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (211)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (211))) ;
      var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    }
    const GGS_bool cond_9572 = var_cas_inGenerateCheckValid ;
    if (cond_9572.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      var_cas_ioGeneratedCode.appendCString ("  ") ;
      var_cas_ioGeneratedCode.dotAssign_operation (operand_7867->mTargetVariableCppName) ;
      var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@assignmentInstructionForGeneration.generateInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__assignmentInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_assignmentInstructionForGeneration * operand_9742,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9742 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @assignmentInstructionForGeneration\n") ;
    GGS_string var_cas_sourceVar ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_9742->mSourceExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_9742->mSourceExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_sourceVar COMMA_SOURCE_FILE_AT_LINE (230)) ;
      }
    }
    GGS_string var_cas_receiverCppName = operand_9742->mTargetCppName ;
    {
      GGS_lstringlist::cEnumerator enumerator_10181 (operand_9742->mStructAttributeList, true) ;
      const GGS_lstringlist::cElement * operand_10181 = NULL ;
      while (((operand_10181 = enumerator_10181.nextObject ()))) {
        macroValidPointer (operand_10181) ;
        var_cas_receiverCppName.appendCString (".mAttribute_") ;
        var_cas_receiverCppName.dotAssign_operation (operand_10181->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (233)).reader_identifierRepresentation ()) ;
      }
    }
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverCppName) ;
    var_cas_ioGeneratedCode.appendCString (" = ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_sourceVar) ;
    var_cas_ioGeneratedCode.appendCString (" ;\n") ;
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, operand_9742->mTargetCppName COMMA_SOURCE_FILE_AT_LINE (236)) ;
    const GGS_bool cond_10627 = var_cas_inGenerateCheckValid ;
    if (cond_10627.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      var_cas_ioGeneratedCode.appendCString ("  ") ;
      var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverCppName) ;
      var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@dropInstructionForGeneration.generateInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__dropInstructionForGeneration__generateInstruction (C_CompilerEx &,
                                const cPtr_dropInstructionForGeneration * operand_10791,
                                const GGS_bool  /* var_cas_inGenerateCheckValid */,
                                GGS_uint  & /* var_cas_ioTemporaryVariableIndex */,
                                GGS_stringset  & /* var_cas_ioUnusedVariableCppNameSet */,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10791 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @dropInstructionForGeneration\n") ;
    {
      GGS_stringlist::cEnumerator enumerator_11038 (operand_10791->mDropList, true) ;
      const GGS_stringlist::cElement * operand_11038 = NULL ;
      while (((operand_11038 = enumerator_11038.nextObject ()))) {
        macroValidPointer (operand_11038) ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_11038->mValue) ;
        var_cas_ioGeneratedCode.appendCString (".drop () ; // ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_10791->mComment) ;
        var_cas_ioGeneratedCode.appendCString ("\n") ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@appendInstructionForGeneration.generateInstruction'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__appendInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_appendInstructionForGeneration * operand_11287,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11287 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @appendInstructionForGeneration\n") ;
    GGS_string var_cas_sourceVar ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_11287->mSourceExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_11287->mSourceExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_sourceVar COMMA_SOURCE_FILE_AT_LINE (268)) ;
      }
    }
    {
      GGS_lstringlist::cEnumerator enumerator_11676 (operand_11287->mStructAttributeList, true) ;
      const GGS_lstringlist::cElement * operand_11676 = NULL ;
      while (((operand_11676 = enumerator_11676.nextObject ()))) {
        macroValidPointer (operand_11676) ;
        var_cas_ioGeneratedCode.appendCString ("(TO DO handle field in @appendInstructionForGeneration)\n") ;
      }
    }
    var_cas_ioGeneratedCode.dotAssign_operation (operand_11287->mTargetVariableCppName) ;
    var_cas_ioGeneratedCode.appendCString (".dotAssign_operation (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_sourceVar) ;
    var_cas_ioGeneratedCode.appendCString (" COMMA_SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_11287->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (273)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (273))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, operand_11287->mTargetVariableCppName COMMA_SOURCE_FILE_AT_LINE (274)) ;
    const GGS_bool cond_12255 = var_cas_inGenerateCheckValid ;
    if (cond_12255.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      var_cas_ioGeneratedCode.appendCString ("  ") ;
      var_cas_ioGeneratedCode.dotAssign_operation (operand_11287->mTargetVariableCppName) ;
      var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@grammarInstructionWithSourceFileForGeneration.generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__grammarInstructionWithSourceFileForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_grammarInstructionWithSourceFileForGeneration * operand_12436,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12436 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("{ //-------- @grammarInstructionWithSourceFileForGeneration\n") ;
    GGS_string var_cas_sourceVar ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_12436->mSourceFileExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_12436->mSourceFileExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_sourceVar COMMA_SOURCE_FILE_AT_LINE (293)) ;
      }
    }
    GGS_stringlist  var_cas_parameterCppNameList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_jokerParametersToReleaseList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_inputVariableList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_actualParameterListForGeneration::cEnumerator enumerator_13033 (operand_12436->mActualParameterList, true) ;
      const GGS_actualParameterListForGeneration::cElement * operand_13033 = NULL ;
      while (((operand_13033 = enumerator_13033.nextObject ()))) {
        macroValidPointer (operand_13033) ;
        GGS_string var_cas_parameterCppName ;
        { typeCategoryMethod__actualParameterForGeneration__generateActualParameter method = findCategoryMethod__actualParameterForGeneration__generateActualParameter (operand_13033->mActualParameter.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, operand_13033->mActualParameter (HERE), var_cas_ioTemporaryVariableIndex, var_cas_ioGeneratedCode, var_cas_jokerParametersToReleaseList, var_cas_inputVariableList, var_cas_ioUnusedVariableCppNameSet, var_cas_parameterCppName COMMA_SOURCE_FILE_AT_LINE (300)) ;
          }
        }
        var_cas_parameterCppNameList.addAssign_operation (var_cas_parameterCppName) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("cGrammar_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_12436->mGrammarName.reader_identifierRepresentation ()) ;
    var_cas_ioGeneratedCode.appendCString ("::_performSourceFileParsing_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_12436->mLabelName.reader_identifierRepresentation ()) ;
    var_cas_ioGeneratedCode.appendCString (" (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (312))) ;
    var_cas_ioGeneratedCode.appendCString (", ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_sourceVar) ;
    {
      GGS_stringlist::cEnumerator enumerator_13631 (var_cas_parameterCppNameList, true) ;
      const GGS_stringlist::cElement * operand_13631 = NULL ;
      while (((operand_13631 = enumerator_13631.nextObject ()))) {
        macroValidPointer (operand_13631) ;
        var_cas_ioGeneratedCode.appendCString (", ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_13631->mValue) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString (" COMMA_SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_12436->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (316)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (316))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (317)) COMMA_SOURCE_FILE_AT_LINE (317)) ;
    var_cas_ioGeneratedCode.appendCString ("} //-------- END @grammarInstructionWithSourceFileForGeneration\n") ;
    const GGS_bool cond_14206 = var_cas_inGenerateCheckValid ;
    if (cond_14206.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      {
        GGS_stringlist::cEnumerator enumerator_14073 (var_cas_inputVariableList, true) ;
        const GGS_stringlist::cElement * operand_14073 = NULL ;
        while (((operand_14073 = enumerator_14073.nextObject ()))) {
          macroValidPointer (operand_14073) ;
          var_cas_ioGeneratedCode.appendCString ("  ") ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_14073->mValue) ;
          var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
        }
      }
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@grammarInstructionWithSourceExpressionForGeneration.generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__grammarInstructionWithSourceExpressionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_grammarInstructionWithSourceExpressionForGeneration * operand_14393,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14393 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("{ //---- @grammarInstructionWithSourceExpressionForGeneration\n") ;
    GGS_string var_cas_sourceVar ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_14393->mSourceStringExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_14393->mSourceStringExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_sourceVar COMMA_SOURCE_FILE_AT_LINE (339)) ;
      }
    }
    GGS_stringlist  var_cas_parameterCppNameList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_jokerParametersToReleaseList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_inputVariableList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_actualParameterListForGeneration::cEnumerator enumerator_14994 (operand_14393->mActualParameterList, true) ;
      const GGS_actualParameterListForGeneration::cElement * operand_14994 = NULL ;
      while (((operand_14994 = enumerator_14994.nextObject ()))) {
        macroValidPointer (operand_14994) ;
        GGS_string var_cas_parameterCppName ;
        { typeCategoryMethod__actualParameterForGeneration__generateActualParameter method = findCategoryMethod__actualParameterForGeneration__generateActualParameter (operand_14994->mActualParameter.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, operand_14994->mActualParameter (HERE), var_cas_ioTemporaryVariableIndex, var_cas_ioGeneratedCode, var_cas_jokerParametersToReleaseList, var_cas_inputVariableList, var_cas_ioUnusedVariableCppNameSet, var_cas_parameterCppName COMMA_SOURCE_FILE_AT_LINE (346)) ;
          }
        }
        var_cas_parameterCppNameList.addAssign_operation (var_cas_parameterCppName) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("cGrammar_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_14393->mGrammarName.reader_identifierRepresentation ()) ;
    var_cas_ioGeneratedCode.appendCString ("::_performSourceStringParsing_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_14393->mLabelName.reader_identifierRepresentation ()) ;
    var_cas_ioGeneratedCode.appendCString (" (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (351))) ;
    var_cas_ioGeneratedCode.appendCString (", ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_sourceVar) ;
    {
      GGS_stringlist::cEnumerator enumerator_15553 (var_cas_parameterCppNameList, true) ;
      const GGS_stringlist::cElement * operand_15553 = NULL ;
      while (((operand_15553 = enumerator_15553.nextObject ()))) {
        macroValidPointer (operand_15553) ;
        var_cas_ioGeneratedCode.appendCString (", ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_15553->mValue) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString (" COMMA_SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_14393->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (355)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (355))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (356)) COMMA_SOURCE_FILE_AT_LINE (356)) ;
    const GGS_bool cond_16037 = var_cas_inGenerateCheckValid ;
    if (cond_16037.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      {
        GGS_stringlist::cEnumerator enumerator_15904 (var_cas_inputVariableList, true) ;
        const GGS_stringlist::cElement * operand_15904 = NULL ;
        while (((operand_15904 = enumerator_15904.nextObject ()))) {
          macroValidPointer (operand_15904) ;
          var_cas_ioGeneratedCode.appendCString ("  ") ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_15904->mValue) ;
          var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
        }
      }
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
    var_cas_ioGeneratedCode.appendCString ("} //---- END @grammarInstructionWithSourceExpressionForGeneration\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@ifInstructionForGeneration.generateInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ifInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_ifInstructionForGeneration * operand_16292,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16292 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @ifInstructionForGeneration\n") ;
    GGS_string var_cas_cppVarName ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_16292->mIFexpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_16292->mIFexpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_cppVarName COMMA_SOURCE_FILE_AT_LINE (378)) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("if (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_cppVarName) ;
    var_cas_ioGeneratedCode.appendCString (".isValidAndTrue ()) {\n") ;
    ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_16292->m_then_instructionList,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (381)) ;
    const GGS_bool cond_17257 = (operand_16292->m_else_instructionList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
    if (cond_17257.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("}else{\n") ;
      ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_16292->m_else_instructionList,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (390)) ;
    }
    var_cas_ioGeneratedCode.appendCString ("}\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@errorInstructionForGeneration.generateInstruction'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__errorInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_errorInstructionForGeneration * operand_17451,
                                const GGS_bool  /* var_cas_inGenerateCheckValid */,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17451 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @errorInstructionForGeneration\n") ;
    GGS_string var_cas_receiverCppVarName ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_17451->mReceiverExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_17451->mReceiverExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_receiverCppVarName COMMA_SOURCE_FILE_AT_LINE (412)) ;
      }
    }
    GGS_string var_cas_messageCppVarName ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_17451->mErrorExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_17451->mErrorExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_messageCppVarName COMMA_SOURCE_FILE_AT_LINE (415)) ;
      }
    }
    const GGS_bool cond_18421 = operand_17451->mUseLocationReader ;
    if (cond_18421.isBuiltAndTrue ()) {
      const GGS_string var_cas_locationVar = (GGS_string ("location_")).operator_concat (var_cas_ioTemporaryVariableIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (418))) ;
      var_cas_ioTemporaryVariableIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (418)) ;
      var_cas_ioGeneratedCode.appendCString ("GALGAS_location ") ;
      var_cas_ioGeneratedCode.dotAssign_operation (var_cas_locationVar) ;
      var_cas_ioGeneratedCode.appendCString (" (") ;
      var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverCppVarName) ;
      var_cas_ioGeneratedCode.appendCString (".reader_location (HERE)) ; // Implicit use of 'location' reader\n") ;
      var_cas_receiverCppVarName = var_cas_locationVar ;
    }
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (423)) COMMA_SOURCE_FILE_AT_LINE (423)) ;
    var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (424))) ;
    var_cas_ioGeneratedCode.appendCString ("->emitSemanticError (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverCppVarName) ;
    var_cas_ioGeneratedCode.appendCString (", ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_messageCppVarName) ;
    var_cas_ioGeneratedCode.appendCString (" COMMA_SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_17451->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (425)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (425))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    {
      GGS_stringlist::cEnumerator enumerator_18808 (operand_17451->mBuiltVariableCppNameList, true) ;
      const GGS_stringlist::cElement * operand_18808 = NULL ;
      while (((operand_18808 = enumerator_18808.nextObject ()))) {
        macroValidPointer (operand_18808) ;
        var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, operand_18808->mValue COMMA_SOURCE_FILE_AT_LINE (428)) ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_18808->mValue) ;
        var_cas_ioGeneratedCode.appendCString (".drop () ; // Release error dropped variable\n") ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@warningInstructionForGeneration.generateInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__warningInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_warningInstructionForGeneration * operand_19127,
                                const GGS_bool  /* var_cas_inGenerateCheckValid */,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19127 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @warningInstructionForGeneration\n") ;
    GGS_string var_cas_receiverCppVarName ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_19127->mReceiverExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_19127->mReceiverExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_receiverCppVarName COMMA_SOURCE_FILE_AT_LINE (444)) ;
      }
    }
    GGS_string var_cas_messageCppVarName ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_19127->mWarningExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_19127->mWarningExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_messageCppVarName COMMA_SOURCE_FILE_AT_LINE (447)) ;
      }
    }
    const GGS_bool cond_20101 = operand_19127->mUseLocationReader ;
    if (cond_20101.isBuiltAndTrue ()) {
      const GGS_string var_cas_locationVar = (GGS_string ("location_")).operator_concat (var_cas_ioTemporaryVariableIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (450))) ;
      var_cas_ioTemporaryVariableIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (450)) ;
      var_cas_ioGeneratedCode.appendCString ("GALGAS_location ") ;
      var_cas_ioGeneratedCode.dotAssign_operation (var_cas_locationVar) ;
      var_cas_ioGeneratedCode.appendCString (" (") ;
      var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverCppVarName) ;
      var_cas_ioGeneratedCode.appendCString (".reader_location (HERE)) ; // Implicit use of 'location' reader\n") ;
      var_cas_receiverCppVarName = var_cas_locationVar ;
    }
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (455)) COMMA_SOURCE_FILE_AT_LINE (455)) ;
    var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (456))) ;
    var_cas_ioGeneratedCode.appendCString ("->emitSemanticWarning (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverCppVarName) ;
    var_cas_ioGeneratedCode.appendCString (", ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_messageCppVarName) ;
    var_cas_ioGeneratedCode.appendCString (" COMMA_SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_19127->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (457)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (457))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@methodCallInstructionForGeneration.generateInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__methodCallInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_methodCallInstructionForGeneration * operand_20589,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20589 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @methodCallInstructionForGeneration\n") ;
    GGS_string var_cas_receiverVar ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_20589->mReceiverExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_20589->mReceiverExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_receiverVar COMMA_SOURCE_FILE_AT_LINE (471)) ;
      }
    }
    GGS_stringlist  var_cas_parameterCppNameList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_jokerParametersToReleaseList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_inputVariableList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_actualParameterListForGeneration::cEnumerator enumerator_21170 (operand_20589->mActualParameterList, true) ;
      const GGS_actualParameterListForGeneration::cElement * operand_21170 = NULL ;
      while (((operand_21170 = enumerator_21170.nextObject ()))) {
        macroValidPointer (operand_21170) ;
        GGS_string var_cas_parameterCppName ;
        { typeCategoryMethod__actualParameterForGeneration__generateActualParameter method = findCategoryMethod__actualParameterForGeneration__generateActualParameter (operand_21170->mActualParameter.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, operand_21170->mActualParameter (HERE), var_cas_ioTemporaryVariableIndex, var_cas_ioGeneratedCode, var_cas_jokerParametersToReleaseList, var_cas_inputVariableList, var_cas_ioUnusedVariableCppNameSet, var_cas_parameterCppName COMMA_SOURCE_FILE_AT_LINE (478)) ;
          }
        }
        var_cas_parameterCppNameList.addAssign_operation (var_cas_parameterCppName) ;
      }
    }
    const GGS_bool cond_21716 = operand_20589->mIsCategory ;
    if (cond_21716.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("callCategoryMethod_") ;
      var_cas_ioGeneratedCode.dotAssign_operation (operand_20589->mMethodName.reader_identifierRepresentation ()) ;
      var_cas_ioGeneratedCode.appendCString (" ((const cPtr_") ;
      var_cas_ioGeneratedCode.dotAssign_operation (operand_20589->mReceiverExpression.reader_mType (inLexique COMMA_SOURCE_FILE_AT_LINE (483)).reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (483))) ;
      var_cas_ioGeneratedCode.appendCString (" *) ") ;
      var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverVar) ;
      var_cas_ioGeneratedCode.appendCString (".ptr (), ") ;
    }else if (cond_21716.isBuiltAndFalse ()) {
      var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverVar) ;
      var_cas_ioGeneratedCode.appendCString (".method_") ;
      var_cas_ioGeneratedCode.dotAssign_operation (operand_20589->mMethodName.reader_identifierRepresentation ()) ;
      var_cas_ioGeneratedCode.appendCString (" (") ;
    }
    {
      GGS_stringlist::cEnumerator enumerator_21856 (var_cas_parameterCppNameList, true) ;
      const GGS_stringlist::cElement * operand_21856 = enumerator_21856.nextObject () ;
      if ((operand_21856 != NULL)) {
        bool _foreach_loop_21856 ;
        do{
          macroValidPointer (operand_21856) ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_21856->mValue) ;
          operand_21856 = enumerator_21856.nextObject () ;
          _foreach_loop_21856 = ((operand_21856 != NULL)) ;
          if (_foreach_loop_21856) {
            var_cas_ioGeneratedCode.appendCString (", ") ;
          }
        }while (_foreach_loop_21856) ;
      }
    }
    const GGS_bool cond_22196 = (var_cas_parameterCppNameList.reader_length ()).operator_isEqual (GGS_uint (0U)) ;
    if (cond_22196.isBuiltAndTrue ()) {
      const GGS_bool cond_22183 = operand_20589->mHasCompilerArgument ;
      if (cond_22183.isBuiltAndTrue ()) {
        var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (493)) COMMA_SOURCE_FILE_AT_LINE (493)) ;
        var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (494))) ;
        var_cas_ioGeneratedCode.appendCString (" COMMA_") ;
      }
    }else if (cond_22196.isBuiltAndFalse ()) {
      const GGS_bool cond_22382 = operand_20589->mHasCompilerArgument ;
      if (cond_22382.isBuiltAndTrue ()) {
        var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (498)) COMMA_SOURCE_FILE_AT_LINE (498)) ;
        var_cas_ioGeneratedCode.appendCString (", ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (499))) ;
        var_cas_ioGeneratedCode.appendCString (" COMMA_") ;
      }else if (cond_22382.isBuiltAndFalse ()) {
        var_cas_ioGeneratedCode.appendCString (" COMMA_") ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_20589->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (504)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (504))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    const GGS_bool cond_22782 = var_cas_inGenerateCheckValid ;
    if (cond_22782.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      {
        GGS_stringlist::cEnumerator enumerator_22649 (var_cas_inputVariableList, true) ;
        const GGS_stringlist::cElement * operand_22649 = NULL ;
        while (((operand_22649 = enumerator_22649.nextObject ()))) {
          macroValidPointer (operand_22649) ;
          var_cas_ioGeneratedCode.appendCString ("  ") ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_22649->mValue) ;
          var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
        }
      }
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
    var_cas_ioGeneratedCode.appendCString ("//-------- END @methodCallInstructionForGeneration\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@thisMethodCallInstructionForGeneration.generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__thisMethodCallInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_thisMethodCallInstructionForGeneration * operand_23034,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23034 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @thisMethodCallInstructionForGeneration\n") ;
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_selfMarkName (inLexique COMMA_SOURCE_FILE_AT_LINE (525)) COMMA_SOURCE_FILE_AT_LINE (525)) ;
    GGS_stringlist  var_cas_parameterCppNameList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_jokerParametersToReleaseList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_inputVariableList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_actualParameterListForGeneration::cEnumerator enumerator_23500 (operand_23034->mActualParameterList, true) ;
      const GGS_actualParameterListForGeneration::cElement * operand_23500 = NULL ;
      while (((operand_23500 = enumerator_23500.nextObject ()))) {
        macroValidPointer (operand_23500) ;
        GGS_string var_cas_parameterCppName ;
        { typeCategoryMethod__actualParameterForGeneration__generateActualParameter method = findCategoryMethod__actualParameterForGeneration__generateActualParameter (operand_23500->mActualParameter.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, operand_23500->mActualParameter (HERE), var_cas_ioTemporaryVariableIndex, var_cas_ioGeneratedCode, var_cas_jokerParametersToReleaseList, var_cas_inputVariableList, var_cas_ioUnusedVariableCppNameSet, var_cas_parameterCppName COMMA_SOURCE_FILE_AT_LINE (531)) ;
          }
        }
        var_cas_parameterCppNameList.addAssign_operation (var_cas_parameterCppName) ;
      }
    }
    const GGS_bool cond_23974 = operand_23034->mIsCategory ;
    if (cond_23974.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("callCategoryMethod_") ;
      var_cas_ioGeneratedCode.dotAssign_operation (operand_23034->mMethodName.reader_identifierRepresentation ()) ;
      var_cas_ioGeneratedCode.appendCString (" (") ;
      var_cas_ioGeneratedCode.dotAssign_operation (operand_23034->mCurrentObjectCppPointer) ;
      var_cas_ioGeneratedCode.appendCString (", ") ;
    }else if (cond_23974.isBuiltAndFalse ()) {
      var_cas_ioGeneratedCode.dotAssign_operation (operand_23034->mCurrentObjectCppPointer) ;
      var_cas_ioGeneratedCode.appendCString ("->method_") ;
      var_cas_ioGeneratedCode.dotAssign_operation (operand_23034->mMethodName.reader_identifierRepresentation ()) ;
      var_cas_ioGeneratedCode.appendCString (" (") ;
    }
    {
      GGS_stringlist::cEnumerator enumerator_24128 (var_cas_parameterCppNameList, true) ;
      const GGS_stringlist::cElement * operand_24128 = enumerator_24128.nextObject () ;
      if ((operand_24128 != NULL)) {
        bool _foreach_loop_24128 ;
        do{
          macroValidPointer (operand_24128) ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_24128->mValue) ;
          operand_24128 = enumerator_24128.nextObject () ;
          _foreach_loop_24128 = ((operand_24128 != NULL)) ;
          if (_foreach_loop_24128) {
            var_cas_ioGeneratedCode.appendCString (", ") ;
          }
        }while (_foreach_loop_24128) ;
      }
    }
    const GGS_bool cond_24468 = (var_cas_parameterCppNameList.reader_length ()).operator_isEqual (GGS_uint (0U)) ;
    if (cond_24468.isBuiltAndTrue ()) {
      const GGS_bool cond_24455 = operand_23034->mHasCompilerArgument ;
      if (cond_24455.isBuiltAndTrue ()) {
        var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (546)) COMMA_SOURCE_FILE_AT_LINE (546)) ;
        var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (547))) ;
        var_cas_ioGeneratedCode.appendCString (" COMMA_") ;
      }
    }else if (cond_24468.isBuiltAndFalse ()) {
      const GGS_bool cond_24654 = operand_23034->mHasCompilerArgument ;
      if (cond_24654.isBuiltAndTrue ()) {
        var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (551)) COMMA_SOURCE_FILE_AT_LINE (551)) ;
        var_cas_ioGeneratedCode.appendCString (", ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (552))) ;
        var_cas_ioGeneratedCode.appendCString (" COMMA_") ;
      }else if (cond_24654.isBuiltAndFalse ()) {
        var_cas_ioGeneratedCode.appendCString (" COMMA_") ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_23034->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (557)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (557))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    const GGS_bool cond_25054 = var_cas_inGenerateCheckValid ;
    if (cond_25054.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      {
        GGS_stringlist::cEnumerator enumerator_24921 (var_cas_inputVariableList, true) ;
        const GGS_stringlist::cElement * operand_24921 = NULL ;
        while (((operand_24921 = enumerator_24921.nextObject ()))) {
          macroValidPointer (operand_24921) ;
          var_cas_ioGeneratedCode.appendCString ("  ") ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_24921->mValue) ;
          var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
        }
      }
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
    var_cas_ioGeneratedCode.appendCString ("//-------- END @thisMethodCallInstructionForGeneration\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@superMethodCallInstructionForGeneration.generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__superMethodCallInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_superMethodCallInstructionForGeneration * operand_25311,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25311 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @superMethodCallInstructionForGeneration\n") ;
    GGS_stringlist  var_cas_parameterCppNameList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_jokerParametersToReleaseList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_inputVariableList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_actualParameterListForGeneration::cEnumerator enumerator_25716 (operand_25311->mActualParameterList, true) ;
      const GGS_actualParameterListForGeneration::cElement * operand_25716 = NULL ;
      while (((operand_25716 = enumerator_25716.nextObject ()))) {
        macroValidPointer (operand_25716) ;
        GGS_string var_cas_parameterCppName ;
        { typeCategoryMethod__actualParameterForGeneration__generateActualParameter method = findCategoryMethod__actualParameterForGeneration__generateActualParameter (operand_25716->mActualParameter.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, operand_25716->mActualParameter (HERE), var_cas_ioTemporaryVariableIndex, var_cas_ioGeneratedCode, var_cas_jokerParametersToReleaseList, var_cas_inputVariableList, var_cas_ioUnusedVariableCppNameSet, var_cas_parameterCppName COMMA_SOURCE_FILE_AT_LINE (583)) ;
          }
        }
        var_cas_parameterCppNameList.addAssign_operation (var_cas_parameterCppName) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("cPtr_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_25311->mSuperClassThatImplementsMethod.reader_identifierRepresentation ()) ;
    var_cas_ioGeneratedCode.appendCString ("::method_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_25311->mMethodName.reader_identifierRepresentation ()) ;
    var_cas_ioGeneratedCode.appendCString (" (") ;
    {
      GGS_stringlist::cEnumerator enumerator_26217 (var_cas_parameterCppNameList, true) ;
      const GGS_stringlist::cElement * operand_26217 = enumerator_26217.nextObject () ;
      if ((operand_26217 != NULL)) {
        bool _foreach_loop_26217 ;
        do{
          macroValidPointer (operand_26217) ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_26217->mValue) ;
          operand_26217 = enumerator_26217.nextObject () ;
          _foreach_loop_26217 = ((operand_26217 != NULL)) ;
          if (_foreach_loop_26217) {
            var_cas_ioGeneratedCode.appendCString (", ") ;
          }
        }while (_foreach_loop_26217) ;
      }
    }
    const GGS_bool cond_26557 = (var_cas_parameterCppNameList.reader_length ()).operator_isEqual (GGS_uint (0U)) ;
    if (cond_26557.isBuiltAndTrue ()) {
      const GGS_bool cond_26544 = operand_25311->mHasCompilerArgument ;
      if (cond_26544.isBuiltAndTrue ()) {
        var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (594)) COMMA_SOURCE_FILE_AT_LINE (594)) ;
        var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (595))) ;
        var_cas_ioGeneratedCode.appendCString (" COMMA_") ;
      }
    }else if (cond_26557.isBuiltAndFalse ()) {
      const GGS_bool cond_26743 = operand_25311->mHasCompilerArgument ;
      if (cond_26743.isBuiltAndTrue ()) {
        var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (599)) COMMA_SOURCE_FILE_AT_LINE (599)) ;
        var_cas_ioGeneratedCode.appendCString (", ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (600))) ;
        var_cas_ioGeneratedCode.appendCString (" COMMA_") ;
      }else if (cond_26743.isBuiltAndFalse ()) {
        var_cas_ioGeneratedCode.appendCString (" COMMA_") ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_25311->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (605)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (605))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    const GGS_bool cond_27143 = var_cas_inGenerateCheckValid ;
    if (cond_27143.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      {
        GGS_stringlist::cEnumerator enumerator_27010 (var_cas_inputVariableList, true) ;
        const GGS_stringlist::cElement * operand_27010 = NULL ;
        while (((operand_27010 = enumerator_27010.nextObject ()))) {
          macroValidPointer (operand_27010) ;
          var_cas_ioGeneratedCode.appendCString ("  ") ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_27010->mValue) ;
          var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
        }
      }
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
    var_cas_ioGeneratedCode.appendCString ("//-------- END @superMethodCallInstructionForGeneration\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@routineCallInstructionForGeneration.generateInstruction' *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineCallInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_routineCallInstructionForGeneration * operand_27397,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27397 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("{ //-------- @routineCallInstructionForGeneration\n") ;
    GGS_stringlist  var_cas_parameterCppNameList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_jokerParametersToReleaseList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_inputVariableList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_actualParameterListForGeneration::cEnumerator enumerator_27811 (operand_27397->mActualParameterList, true) ;
      const GGS_actualParameterListForGeneration::cElement * operand_27811 = NULL ;
      while (((operand_27811 = enumerator_27811.nextObject ()))) {
        macroValidPointer (operand_27811) ;
        GGS_string var_cas_parameterCppName ;
        { typeCategoryMethod__actualParameterForGeneration__generateActualParameter method = findCategoryMethod__actualParameterForGeneration__generateActualParameter (operand_27811->mActualParameter.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, operand_27811->mActualParameter (HERE), var_cas_ioTemporaryVariableIndex, var_cas_ioGeneratedCode, var_cas_jokerParametersToReleaseList, var_cas_inputVariableList, var_cas_ioUnusedVariableCppNameSet, var_cas_parameterCppName COMMA_SOURCE_FILE_AT_LINE (631)) ;
          }
        }
        var_cas_parameterCppNameList.addAssign_operation (var_cas_parameterCppName) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("routine_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_27397->mRoutineName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (635)).reader_identifierRepresentation ()) ;
    var_cas_ioGeneratedCode.appendCString (" (") ;
    {
      GGS_stringlist::cEnumerator enumerator_28250 (var_cas_parameterCppNameList, true) ;
      const GGS_stringlist::cElement * operand_28250 = NULL ;
      while (((operand_28250 = enumerator_28250.nextObject ()))) {
        macroValidPointer (operand_28250) ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_28250->mValue) ;
        var_cas_ioGeneratedCode.appendCString (", ") ;
      }
    }
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (639)) COMMA_SOURCE_FILE_AT_LINE (639)) ;
    var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (640))) ;
    var_cas_ioGeneratedCode.appendCString (" COMMA_SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_27397->mRoutineName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (640)).reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (640)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (640))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    const GGS_bool cond_28759 = var_cas_inGenerateCheckValid ;
    if (cond_28759.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      {
        GGS_stringlist::cEnumerator enumerator_28626 (var_cas_inputVariableList, true) ;
        const GGS_stringlist::cElement * operand_28626 = NULL ;
        while (((operand_28626 = enumerator_28626.nextObject ()))) {
          macroValidPointer (operand_28626) ;
          var_cas_ioGeneratedCode.appendCString ("  ") ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_28626->mValue) ;
          var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
        }
      }
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
    var_cas_ioGeneratedCode.appendCString ("} //-------- @routineCallInstructionForGeneration\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@modifierCallInstructionForGeneration.generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__modifierCallInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_modifierCallInstructionForGeneration * operand_29008,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_29008 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("{ //-------- @modifierCallInstructionForGeneration\n") ;
    GGS_string var_cas_receiverCppName = operand_29008->mReceiverCppName ;
    {
      GGS_lstringlist::cEnumerator enumerator_29308 (operand_29008->mReceiverStructAttributes, true) ;
      const GGS_lstringlist::cElement * operand_29308 = NULL ;
      while (((operand_29308 = enumerator_29308.nextObject ()))) {
        macroValidPointer (operand_29308) ;
        var_cas_receiverCppName.appendCString (".mAttribute_") ;
        var_cas_receiverCppName.dotAssign_operation (operand_29308->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (662)).reader_identifierRepresentation ()) ;
      }
    }
    GGS_stringlist  var_cas_parameterCppNameList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_jokerParametersToReleaseList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_inputVariableList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_actualParameterListForGeneration::cEnumerator enumerator_29611 (operand_29008->mActualParameterList, true) ;
      const GGS_actualParameterListForGeneration::cElement * operand_29611 = NULL ;
      while (((operand_29611 = enumerator_29611.nextObject ()))) {
        macroValidPointer (operand_29611) ;
        GGS_string var_cas_parameterCppName ;
        { typeCategoryMethod__actualParameterForGeneration__generateActualParameter method = findCategoryMethod__actualParameterForGeneration__generateActualParameter (operand_29611->mActualParameter.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, operand_29611->mActualParameter (HERE), var_cas_ioTemporaryVariableIndex, var_cas_ioGeneratedCode, var_cas_jokerParametersToReleaseList, var_cas_inputVariableList, var_cas_ioUnusedVariableCppNameSet, var_cas_parameterCppName COMMA_SOURCE_FILE_AT_LINE (670)) ;
          }
        }
        var_cas_parameterCppNameList.addAssign_operation (var_cas_parameterCppName) ;
      }
    }
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, operand_29008->mReceiverCppName COMMA_SOURCE_FILE_AT_LINE (674)) ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverCppName) ;
    var_cas_ioGeneratedCode.appendCString (".modifier_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_29008->mModifierName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (675)).reader_identifierRepresentation ()) ;
    var_cas_ioGeneratedCode.appendCString (" (") ;
    {
      GGS_stringlist::cEnumerator enumerator_30134 (var_cas_parameterCppNameList, true) ;
      const GGS_stringlist::cElement * operand_30134 = enumerator_30134.nextObject () ;
      if ((operand_30134 != NULL)) {
        bool _foreach_loop_30134 ;
        do{
          macroValidPointer (operand_30134) ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_30134->mValue) ;
          operand_30134 = enumerator_30134.nextObject () ;
          _foreach_loop_30134 = ((operand_30134 != NULL)) ;
          if (_foreach_loop_30134) {
            var_cas_ioGeneratedCode.appendCString (", ") ;
          }
        }while (_foreach_loop_30134) ;
      }
    }
    const GGS_bool cond_30502 = operand_29008->mHasCompilerArgument ;
    if (cond_30502.isBuiltAndTrue ()) {
      const GGS_bool cond_30342 = (var_cas_parameterCppNameList.reader_length ()).operator_isNotEqual (GGS_uint (0U)) ;
      if (cond_30342.isBuiltAndTrue ()) {
        var_cas_ioGeneratedCode.appendCString (", ") ;
      }
      var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (684)) COMMA_SOURCE_FILE_AT_LINE (684)) ;
      var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (685))) ;
      var_cas_ioGeneratedCode.appendCString (" COMMA_") ;
    }else if (cond_30502.isBuiltAndFalse ()) {
      const GGS_bool cond_30583 = (var_cas_parameterCppNameList.reader_length ()).operator_isNotEqual (GGS_uint (0U)) ;
      if (cond_30583.isBuiltAndTrue ()) {
        var_cas_ioGeneratedCode.appendCString (" COMMA_") ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_29008->mModifierName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (690)).reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (690)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (690))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    const GGS_bool cond_30946 = var_cas_inGenerateCheckValid ;
    if (cond_30946.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      {
        GGS_stringlist::cEnumerator enumerator_30813 (var_cas_inputVariableList, true) ;
        const GGS_stringlist::cElement * operand_30813 = NULL ;
        while (((operand_30813 = enumerator_30813.nextObject ()))) {
          macroValidPointer (operand_30813) ;
          var_cas_ioGeneratedCode.appendCString ("  ") ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_30813->mValue) ;
          var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
        }
      }
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
    var_cas_ioGeneratedCode.appendCString ("} //-------- END @typeMethodInstructionForGeneration\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@thisModifierCallInstructionForGeneration.generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__thisModifierCallInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_thisModifierCallInstructionForGeneration * operand_31202,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_31202 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("{ //-------- @thisModifierCallInstructionForGeneration\n") ;
    GGS_stringlist  var_cas_parameterCppNameList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_jokerParametersToReleaseList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_inputVariableList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_actualParameterListForGeneration::cEnumerator enumerator_31621 (operand_31202->mActualParameterList, true) ;
      const GGS_actualParameterListForGeneration::cElement * operand_31621 = NULL ;
      while (((operand_31621 = enumerator_31621.nextObject ()))) {
        macroValidPointer (operand_31621) ;
        GGS_string var_cas_parameterCppName ;
        { typeCategoryMethod__actualParameterForGeneration__generateActualParameter method = findCategoryMethod__actualParameterForGeneration__generateActualParameter (operand_31621->mActualParameter.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, operand_31621->mActualParameter (HERE), var_cas_ioTemporaryVariableIndex, var_cas_ioGeneratedCode, var_cas_jokerParametersToReleaseList, var_cas_inputVariableList, var_cas_ioUnusedVariableCppNameSet, var_cas_parameterCppName COMMA_SOURCE_FILE_AT_LINE (716)) ;
          }
        }
        var_cas_parameterCppNameList.addAssign_operation (var_cas_parameterCppName) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("modifier_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_31202->mModifierName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (720)).reader_identifierRepresentation ()) ;
    var_cas_ioGeneratedCode.appendCString (" (") ;
    {
      GGS_stringlist::cEnumerator enumerator_32062 (var_cas_parameterCppNameList, true) ;
      const GGS_stringlist::cElement * operand_32062 = enumerator_32062.nextObject () ;
      if ((operand_32062 != NULL)) {
        bool _foreach_loop_32062 ;
        do{
          macroValidPointer (operand_32062) ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_32062->mValue) ;
          operand_32062 = enumerator_32062.nextObject () ;
          _foreach_loop_32062 = ((operand_32062 != NULL)) ;
          if (_foreach_loop_32062) {
            var_cas_ioGeneratedCode.appendCString (", ") ;
          }
        }while (_foreach_loop_32062) ;
      }
    }
    const GGS_bool cond_32430 = operand_31202->mHasCompilerArgument ;
    if (cond_32430.isBuiltAndTrue ()) {
      const GGS_bool cond_32270 = (var_cas_parameterCppNameList.reader_length ()).operator_isNotEqual (GGS_uint (0U)) ;
      if (cond_32270.isBuiltAndTrue ()) {
        var_cas_ioGeneratedCode.appendCString (", ") ;
      }
      var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (729)) COMMA_SOURCE_FILE_AT_LINE (729)) ;
      var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (730))) ;
      var_cas_ioGeneratedCode.appendCString (" COMMA_") ;
    }else if (cond_32430.isBuiltAndFalse ()) {
      const GGS_bool cond_32511 = (var_cas_parameterCppNameList.reader_length ()).operator_isNotEqual (GGS_uint (0U)) ;
      if (cond_32511.isBuiltAndTrue ()) {
        var_cas_ioGeneratedCode.appendCString (" COMMA_") ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_31202->mModifierName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (735)).reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (735)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (735))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    const GGS_bool cond_32874 = var_cas_inGenerateCheckValid ;
    if (cond_32874.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      {
        GGS_stringlist::cEnumerator enumerator_32741 (var_cas_inputVariableList, true) ;
        const GGS_stringlist::cElement * operand_32741 = NULL ;
        while (((operand_32741 = enumerator_32741.nextObject ()))) {
          macroValidPointer (operand_32741) ;
          var_cas_ioGeneratedCode.appendCString ("  ") ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_32741->mValue) ;
          var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
        }
      }
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
    var_cas_ioGeneratedCode.appendCString ("} //-------- END @thisModifierCallInstructionForGeneration\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@superModifierCallInstructionForGeneration.generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__superModifierCallInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_superModifierCallInstructionForGeneration * operand_33137,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_33137 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("{ //-------- @superModifierCallInstructionForGeneration\n") ;
    GGS_stringlist  var_cas_parameterCppNameList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_jokerParametersToReleaseList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_inputVariableList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_actualParameterListForGeneration::cEnumerator enumerator_33557 (operand_33137->mActualParameterList, true) ;
      const GGS_actualParameterListForGeneration::cElement * operand_33557 = NULL ;
      while (((operand_33557 = enumerator_33557.nextObject ()))) {
        macroValidPointer (operand_33557) ;
        GGS_string var_cas_parameterCppName ;
        { typeCategoryMethod__actualParameterForGeneration__generateActualParameter method = findCategoryMethod__actualParameterForGeneration__generateActualParameter (operand_33557->mActualParameter.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, operand_33557->mActualParameter (HERE), var_cas_ioTemporaryVariableIndex, var_cas_ioGeneratedCode, var_cas_jokerParametersToReleaseList, var_cas_inputVariableList, var_cas_ioUnusedVariableCppNameSet, var_cas_parameterCppName COMMA_SOURCE_FILE_AT_LINE (761)) ;
          }
        }
        var_cas_parameterCppNameList.addAssign_operation (var_cas_parameterCppName) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("cPtr_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_33137->mSuperClassThatImplementsModifier.reader_identifierRepresentation ()) ;
    var_cas_ioGeneratedCode.appendCString ("::modifier_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_33137->mModifierName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (765)).reader_identifierRepresentation ()) ;
    var_cas_ioGeneratedCode.appendCString (" (") ;
    {
      GGS_stringlist::cEnumerator enumerator_34073 (var_cas_parameterCppNameList, true) ;
      const GGS_stringlist::cElement * operand_34073 = enumerator_34073.nextObject () ;
      if ((operand_34073 != NULL)) {
        bool _foreach_loop_34073 ;
        do{
          macroValidPointer (operand_34073) ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_34073->mValue) ;
          operand_34073 = enumerator_34073.nextObject () ;
          _foreach_loop_34073 = ((operand_34073 != NULL)) ;
          if (_foreach_loop_34073) {
            var_cas_ioGeneratedCode.appendCString (", ") ;
          }
        }while (_foreach_loop_34073) ;
      }
    }
    const GGS_bool cond_34441 = operand_33137->mHasCompilerArgument ;
    if (cond_34441.isBuiltAndTrue ()) {
      const GGS_bool cond_34281 = (var_cas_parameterCppNameList.reader_length ()).operator_isNotEqual (GGS_uint (0U)) ;
      if (cond_34281.isBuiltAndTrue ()) {
        var_cas_ioGeneratedCode.appendCString (", ") ;
      }
      var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (774)) COMMA_SOURCE_FILE_AT_LINE (774)) ;
      var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (775))) ;
      var_cas_ioGeneratedCode.appendCString (" COMMA_") ;
    }else if (cond_34441.isBuiltAndFalse ()) {
      const GGS_bool cond_34522 = (var_cas_parameterCppNameList.reader_length ()).operator_isNotEqual (GGS_uint (0U)) ;
      if (cond_34522.isBuiltAndTrue ()) {
        var_cas_ioGeneratedCode.appendCString (" COMMA_") ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_33137->mModifierName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (780)).reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (780)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (780))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    const GGS_bool cond_34885 = var_cas_inGenerateCheckValid ;
    if (cond_34885.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      {
        GGS_stringlist::cEnumerator enumerator_34752 (var_cas_inputVariableList, true) ;
        const GGS_stringlist::cElement * operand_34752 = NULL ;
        while (((operand_34752 = enumerator_34752.nextObject ()))) {
          macroValidPointer (operand_34752) ;
          var_cas_ioGeneratedCode.appendCString ("  ") ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_34752->mValue) ;
          var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
        }
      }
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
    var_cas_ioGeneratedCode.appendCString ("} //-------- END @superModifierCallInstructionForGeneration\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@typeMethodInstructionForGeneration.generateInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__typeMethodInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_typeMethodInstructionForGeneration * operand_35142,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_35142 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("{ //-------- @typeMethodInstructionForGeneration\n") ;
    GGS_stringlist  var_cas_parameterCppNameList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_jokerParametersToReleaseList = GGS_stringlist ::constructor_emptyList () ;
    GGS_stringlist  var_cas_inputVariableList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_actualParameterListForGeneration::cEnumerator enumerator_35555 (operand_35142->mActualParameterList, true) ;
      const GGS_actualParameterListForGeneration::cElement * operand_35555 = NULL ;
      while (((operand_35555 = enumerator_35555.nextObject ()))) {
        macroValidPointer (operand_35555) ;
        GGS_string var_cas_parameterCppName ;
        { typeCategoryMethod__actualParameterForGeneration__generateActualParameter method = findCategoryMethod__actualParameterForGeneration__generateActualParameter (operand_35555->mActualParameter.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, operand_35555->mActualParameter (HERE), var_cas_ioTemporaryVariableIndex, var_cas_ioGeneratedCode, var_cas_jokerParametersToReleaseList, var_cas_inputVariableList, var_cas_ioUnusedVariableCppNameSet, var_cas_parameterCppName COMMA_SOURCE_FILE_AT_LINE (806)) ;
          }
        }
        var_cas_parameterCppNameList.addAssign_operation (var_cas_parameterCppName) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("GALGAS_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_35142->mTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (810)).reader_identifierRepresentation ()) ;
    var_cas_ioGeneratedCode.appendCString ("::class_method_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_35142->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (811)).reader_identifierRepresentation ()) ;
    var_cas_ioGeneratedCode.appendCString (" (") ;
    {
      GGS_stringlist::cEnumerator enumerator_36078 (var_cas_parameterCppNameList, true) ;
      const GGS_stringlist::cElement * operand_36078 = enumerator_36078.nextObject () ;
      if ((operand_36078 != NULL)) {
        bool _foreach_loop_36078 ;
        do{
          macroValidPointer (operand_36078) ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_36078->mValue) ;
          operand_36078 = enumerator_36078.nextObject () ;
          _foreach_loop_36078 = ((operand_36078 != NULL)) ;
          if (_foreach_loop_36078) {
            var_cas_ioGeneratedCode.appendCString (", ") ;
          }
        }while (_foreach_loop_36078) ;
      }
    }
    const GGS_bool cond_36407 = operand_35142->mHasCompilerArgument ;
    if (cond_36407.isBuiltAndTrue ()) {
      var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (817)) COMMA_SOURCE_FILE_AT_LINE (817)) ;
      const GGS_bool cond_36351 = (var_cas_parameterCppNameList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
      if (cond_36351.isBuiltAndTrue ()) {
        var_cas_ioGeneratedCode.appendCString (", ") ;
      }
      var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (821))) ;
    }
    const GGS_bool cond_36522 = (operand_35142->mHasCompilerArgument).operator_or ((var_cas_parameterCppNameList.reader_length ()).operator_strictSup (GGS_uint (0U))) ;
    if (cond_36522.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString (" COMMA_") ;
    }
    var_cas_ioGeneratedCode.appendCString ("SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_35142->mMethodName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (826)).reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (826)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (826))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    const GGS_bool cond_36883 = var_cas_inGenerateCheckValid ;
    if (cond_36883.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      {
        GGS_stringlist::cEnumerator enumerator_36750 (var_cas_inputVariableList, true) ;
        const GGS_stringlist::cElement * operand_36750 = NULL ;
        while (((operand_36750 = enumerator_36750.nextObject ()))) {
          macroValidPointer (operand_36750) ;
          var_cas_ioGeneratedCode.appendCString ("  ") ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_36750->mValue) ;
          var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
        }
      }
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
    var_cas_ioGeneratedCode.appendCString ("} //-------- @routineCallInstructionForGeneration\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@structuredCastInstructionForGeneration.generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structuredCastInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_structuredCastInstructionForGeneration * operand_37134,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_37134 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @structuredCastInstructionForGeneration\n") ;
    GGS_string var_cas_castCppVarName ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_37134->mExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_37134->mExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_castCppVarName COMMA_SOURCE_FILE_AT_LINE (848)) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("if (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_castCppVarName) ;
    var_cas_ioGeneratedCode.appendCString (".isValid ()) {\n") ;
    var_cas_ioGeneratedCode.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (851)) ;
    {
      GGS_castInstructionBranchListForGeneration::cEnumerator enumerator_37666 (operand_37134->mCastBranchList, true) ;
      const GGS_castInstructionBranchListForGeneration::cElement * operand_37666 = enumerator_37666.nextObject () ;
      if ((operand_37666 != NULL)) {
        bool _foreach_loop_37666 ;
        do{
          macroValidPointer (operand_37666) ;
          const GGS_bool cond_37853 = operand_37666->mUseKindOfClass ;
          if (cond_37853.isBuiltAndTrue ()) {
            var_cas_ioGeneratedCode.appendCString ("if (NULL != dynamic_cast <const cPtr_") ;
            var_cas_ioGeneratedCode.dotAssign_operation (operand_37666->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (854))) ;
            var_cas_ioGeneratedCode.appendCString (" *> (") ;
            var_cas_ioGeneratedCode.dotAssign_operation (var_cas_castCppVarName) ;
            var_cas_ioGeneratedCode.appendCString (".ptr ())) {\n") ;
          }else if (cond_37853.isBuiltAndFalse ()) {
            var_cas_ioGeneratedCode.appendCString ("if (") ;
            var_cas_ioGeneratedCode.dotAssign_operation (var_cas_castCppVarName) ;
            var_cas_ioGeneratedCode.appendCString (".dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_") ;
            var_cas_ioGeneratedCode.dotAssign_operation (operand_37666->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (856))) ;
            var_cas_ioGeneratedCode.appendCString (") {\n") ;
          }
          const GGS_bool cond_38263 = (operand_37666->mCastedVarCppName.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
          if (cond_38263.isBuiltAndTrue ()) {
            var_cas_ioGeneratedCode.appendCString ("  GALGAS_") ;
            var_cas_ioGeneratedCode.dotAssign_operation (operand_37666->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (859))) ;
            var_cas_ioGeneratedCode.appendCString (" ") ;
            var_cas_ioGeneratedCode.dotAssign_operation (operand_37666->mCastedVarCppName) ;
            var_cas_ioGeneratedCode.appendCString (" ((cPtr_") ;
            var_cas_ioGeneratedCode.dotAssign_operation (operand_37666->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (859))) ;
            var_cas_ioGeneratedCode.appendCString (" *) ") ;
            var_cas_ioGeneratedCode.dotAssign_operation (var_cas_castCppVarName) ;
            var_cas_ioGeneratedCode.appendCString (".ptr ()) ;\n") ;
          }
          ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_37666->mInstructionList,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (861)) ;
          operand_37666 = enumerator_37666.nextObject () ;
          _foreach_loop_37666 = ((operand_37666 != NULL)) ;
          if (_foreach_loop_37666) {
            var_cas_ioGeneratedCode.appendCString ("}else ") ;
          }
        }while (_foreach_loop_37666) ;
      }
    }
    const GGS_bool cond_38791 = (operand_37134->mElseInstructionList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
    if (cond_38791.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("}else{\n") ;
      ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_37134->mElseInstructionList,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (873)) ;
    }
    var_cas_ioGeneratedCode.appendCString ("}\n") ;
    var_cas_ioGeneratedCode.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (883)) ;
    var_cas_ioGeneratedCode.appendCString ("}\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@addAssignInstructionForGeneration.generateInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__addAssignInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_addAssignInstructionForGeneration * operand_39065,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_39065 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @addAssignInstructionForGeneration\n") ;
    GGS_stringlist  var_cas_parameterList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_semanticExpressionListForGeneration::cEnumerator enumerator_39360 (operand_39065->mExpressionList, true) ;
      const GGS_semanticExpressionListForGeneration::cElement * operand_39360 = NULL ;
      while (((operand_39360 = enumerator_39360.nextObject ()))) {
        macroValidPointer (operand_39360) ;
        GGS_string var_cas_parameter ;
        { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_39360->mExpression.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, operand_39360->mExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_parameter COMMA_SOURCE_FILE_AT_LINE (900)) ;
          }
        }
        var_cas_parameterList.addAssign_operation (var_cas_parameter) ;
      }
    }
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, operand_39065->mReceiverCppName COMMA_SOURCE_FILE_AT_LINE (904)) ;
    GGS_string var_cas_receiverCppName = operand_39065->mReceiverCppName ;
    {
      GGS_lstringlist::cEnumerator enumerator_39719 (operand_39065->mStructAttributeList, true) ;
      const GGS_lstringlist::cElement * operand_39719 = NULL ;
      while (((operand_39719 = enumerator_39719.nextObject ()))) {
        macroValidPointer (operand_39719) ;
        var_cas_receiverCppName.appendCString (".mAttribute_") ;
        var_cas_receiverCppName.dotAssign_operation (operand_39719->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (907)).reader_identifierRepresentation ()) ;
      }
    }
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverCppName) ;
    var_cas_ioGeneratedCode.appendCString (".addAssign_operation (") ;
    {
      GGS_stringlist::cEnumerator enumerator_39948 (var_cas_parameterList, true) ;
      const GGS_stringlist::cElement * operand_39948 = enumerator_39948.nextObject () ;
      if ((operand_39948 != NULL)) {
        bool _foreach_loop_39948 ;
        do{
          macroValidPointer (operand_39948) ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_39948->mValue) ;
          operand_39948 = enumerator_39948.nextObject () ;
          _foreach_loop_39948 = ((operand_39948 != NULL)) ;
          if (_foreach_loop_39948) {
            var_cas_ioGeneratedCode.appendCString (", ") ;
          }
        }while (_foreach_loop_39948) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString (" COMMA_SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_39065->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (915)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (915))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    const GGS_bool cond_40355 = var_cas_inGenerateCheckValid ;
    if (cond_40355.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      var_cas_ioGeneratedCode.appendCString ("  ") ;
      var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverCppName) ;
      var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@incrementInstructionForGeneration.generateInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__incrementInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_incrementInstructionForGeneration * operand_40524,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & /* var_cas_ioTemporaryVariableIndex */,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_40524 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @incrementInstructionForGeneration\n") ;
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, operand_40524->mReceiverCppName COMMA_SOURCE_FILE_AT_LINE (933)) ;
    GGS_string var_cas_receiverCppName = operand_40524->mReceiverCppName ;
    {
      GGS_lstringlist::cEnumerator enumerator_40898 (operand_40524->mStructAttributeList, true) ;
      const GGS_lstringlist::cElement * operand_40898 = NULL ;
      while (((operand_40898 = enumerator_40898.nextObject ()))) {
        macroValidPointer (operand_40898) ;
        var_cas_receiverCppName.appendCString (".mAttribute_") ;
        var_cas_receiverCppName.dotAssign_operation (operand_40898->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (936)).reader_identifierRepresentation ()) ;
      }
    }
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverCppName) ;
    var_cas_ioGeneratedCode.appendCString (".increment_operation (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (939))) ;
    var_cas_ioGeneratedCode.appendCString (" COMMA_SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_40524->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (940)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (940))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (941)) COMMA_SOURCE_FILE_AT_LINE (941)) ;
    const GGS_bool cond_41495 = var_cas_inGenerateCheckValid ;
    if (cond_41495.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      var_cas_ioGeneratedCode.appendCString ("  ") ;
      var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverCppName) ;
      var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@decrementInstructionForGeneration.generateInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__decrementInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_decrementInstructionForGeneration * operand_41664,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & /* var_cas_ioTemporaryVariableIndex */,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_41664 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @decrementInstructionForGeneration\n") ;
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, operand_41664->mReceiverCppName COMMA_SOURCE_FILE_AT_LINE (959)) ;
    GGS_string var_cas_receiverCppName = operand_41664->mReceiverCppName ;
    {
      GGS_lstringlist::cEnumerator enumerator_42038 (operand_41664->mStructAttributeList, true) ;
      const GGS_lstringlist::cElement * operand_42038 = NULL ;
      while (((operand_42038 = enumerator_42038.nextObject ()))) {
        macroValidPointer (operand_42038) ;
        var_cas_receiverCppName.appendCString (".mAttribute_") ;
        var_cas_receiverCppName.dotAssign_operation (operand_42038->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (962)).reader_identifierRepresentation ()) ;
      }
    }
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverCppName) ;
    var_cas_ioGeneratedCode.appendCString (".decrement_operation (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (965))) ;
    var_cas_ioGeneratedCode.appendCString (" COMMA_SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_41664->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (966)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (966))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (967)) COMMA_SOURCE_FILE_AT_LINE (967)) ;
    const GGS_bool cond_42635 = var_cas_inGenerateCheckValid ;
    if (cond_42635.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") ;
      var_cas_ioGeneratedCode.appendCString ("  ") ;
      var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverCppName) ;
      var_cas_ioGeneratedCode.appendCString (".checkIsValid (HERE) ;\n") ;
      var_cas_ioGeneratedCode.appendCString ("#endif\n") ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@messageInstructionForGeneration.generateInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__messageInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_messageInstructionForGeneration * operand_42802,
                                const GGS_bool  /* var_cas_inGenerateCheckValid */,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_42802 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @messageInstructionForGeneration\n") ;
    GGS_string var_cas_messageCppVarName ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_42802->mExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_42802->mExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_messageCppVarName COMMA_SOURCE_FILE_AT_LINE (986)) ;
      }
    }
    var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (988))) ;
    var_cas_ioGeneratedCode.appendCString ("->printMessage (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_messageCppVarName) ;
    var_cas_ioGeneratedCode.appendCString (" COMMA_SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_42802->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (989)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (989))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (990)) COMMA_SOURCE_FILE_AT_LINE (990)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@loopInstructionForGeneration.generateInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__loopInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_loopInstructionForGeneration * operand_43662,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_43662 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @loopInstructionForGeneration\n") ;
    GGS_string var_cas_variantCppVarName ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_43662->mVariantExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_43662->mVariantExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_variantCppVarName COMMA_SOURCE_FILE_AT_LINE (1004)) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("if (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_variantCppVarName) ;
    var_cas_ioGeneratedCode.appendCString (".isValid ()) {\n") ;
    var_cas_ioGeneratedCode.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (1006)) ;
    const GGS_string var_cas_variantVar = (GGS_string ("variant_")).operator_concat (operand_43662->mInstructionLocation.reader_locationIndex (inLexique COMMA_SOURCE_FILE_AT_LINE (1007)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1007))) ;
    var_cas_ioGeneratedCode.appendCString ("PMUInt32 ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_variantVar) ;
    var_cas_ioGeneratedCode.appendCString (" = ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_variantCppVarName) ;
    var_cas_ioGeneratedCode.appendCString (".uintValue () ;\n") ;
    const GGS_string var_cas_loopVar = (GGS_string ("loop_")).operator_concat (operand_43662->mInstructionLocation.reader_locationIndex (inLexique COMMA_SOURCE_FILE_AT_LINE (1009)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1009))) ;
    var_cas_ioGeneratedCode.appendCString ("bool ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_loopVar) ;
    var_cas_ioGeneratedCode.appendCString (" = true ;\n"
    "while (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_loopVar) ;
    var_cas_ioGeneratedCode.appendCString (") {\n") ;
    var_cas_ioGeneratedCode.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (1012)) ;
    ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_43662->mFirstInstructions,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (1013)) ;
    GGS_string var_cas_loopExpressionVar ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_43662->mLoopExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_43662->mLoopExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_loopExpressionVar COMMA_SOURCE_FILE_AT_LINE (1021)) ;
      }
    }
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_loopVar) ;
    var_cas_ioGeneratedCode.appendCString (" = ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_loopExpressionVar) ;
    var_cas_ioGeneratedCode.appendCString (".isValid () ;\n"
    "if (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_loopVar) ;
    var_cas_ioGeneratedCode.appendCString (") {\n"
    "  ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_loopVar) ;
    var_cas_ioGeneratedCode.appendCString (" = ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_loopExpressionVar) ;
    var_cas_ioGeneratedCode.appendCString (".boolValue () ;\n"
    "}\n") ;
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (1026)) COMMA_SOURCE_FILE_AT_LINE (1026)) ;
    var_cas_ioGeneratedCode.appendCString ("if (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_loopVar) ;
    var_cas_ioGeneratedCode.appendCString (" && (0 == ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_variantVar) ;
    var_cas_ioGeneratedCode.appendCString (")) {\n"
    "  ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_loopVar) ;
    var_cas_ioGeneratedCode.appendCString (" = false ;\n"
    "  ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (1029))) ;
    var_cas_ioGeneratedCode.appendCString ("->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_43662->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (1029)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1029))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n"
    "}\n"
    "if (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_loopVar) ;
    var_cas_ioGeneratedCode.appendCString (") {\n") ;
    var_cas_ioGeneratedCode.appendCString ("  ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_variantVar) ;
    var_cas_ioGeneratedCode.appendCString (" -- ;\n") ;
    ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_43662->mSecondInstructions,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (1033)) ;
    var_cas_ioGeneratedCode.appendCString ("}\n") ;
    var_cas_ioGeneratedCode.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (1041)) ;
    var_cas_ioGeneratedCode.appendCString ("}\n") ;
    var_cas_ioGeneratedCode.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (1043)) ;
    var_cas_ioGeneratedCode.appendCString ("}\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@readOnlyWithInstructionForGeneration.generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__readOnlyWithInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_readOnlyWithInstructionForGeneration * operand_46145,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_46145 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @readOnlyWithInstructionForGeneration\n") ;
    GGS_string var_cas_receiverVarCppName ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_46145->mReceiverExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_46145->mReceiverExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_receiverVarCppName COMMA_SOURCE_FILE_AT_LINE (1058)) ;
      }
    }
    const GGS_unifiedTypeMapProxy  var_cas_receiverType = operand_46145->mReceiverExpression.reader_mType (inLexique COMMA_SOURCE_FILE_AT_LINE (1059)) ;
    GGS_string var_cas_keyVarCppName ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_46145->mKeyExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_46145->mKeyExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_keyVarCppName COMMA_SOURCE_FILE_AT_LINE (1062)) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("const cMapElement_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1064))) ;
    var_cas_ioGeneratedCode.appendCString (" * ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_46145->mObjectArrayCppName) ;
    var_cas_ioGeneratedCode.appendCString (" = (const cMapElement_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1065))) ;
    var_cas_ioGeneratedCode.appendCString (" *) ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverVarCppName) ;
    var_cas_ioGeneratedCode.appendCString (".") ;
    const GGS_bool cond_47198 = (operand_46145->mAccessName).operator_isEqual (GGS_string ("hasKey")) ;
    if (cond_47198.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("readAccessForWithInstruction_hasKey (") ;
      var_cas_ioGeneratedCode.dotAssign_operation (var_cas_keyVarCppName) ;
      var_cas_ioGeneratedCode.appendCString (") ;\n") ;
    }else if (cond_47198.isBuiltAndFalse ()) {
      var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (1070)) COMMA_SOURCE_FILE_AT_LINE (1070)) ;
      var_cas_ioGeneratedCode.appendCString ("performSearch (") ;
      var_cas_ioGeneratedCode.dotAssign_operation (var_cas_keyVarCppName) ;
      var_cas_ioGeneratedCode.appendCString (", ") ;
      var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (1071))) ;
      var_cas_ioGeneratedCode.appendCString (", kSearchErrorMessage_") ;
      var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1072))) ;
      var_cas_ioGeneratedCode.appendCString ("_") ;
      var_cas_ioGeneratedCode.dotAssign_operation (operand_46145->mAccessName.reader_identifierRepresentation ()) ;
      var_cas_ioGeneratedCode.appendCString (" COMMA_SOURCE_FILE_AT_LINE (") ;
      var_cas_ioGeneratedCode.dotAssign_operation (operand_46145->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (1073)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1073))) ;
      var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
    }
    var_cas_ioGeneratedCode.appendCString ("if (NULL != ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_46145->mObjectArrayCppName) ;
    var_cas_ioGeneratedCode.appendCString (") {\n"
    "    macroValidSharedObject (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_46145->mObjectArrayCppName) ;
    var_cas_ioGeneratedCode.appendCString (", const cMapElement_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1076))) ;
    var_cas_ioGeneratedCode.appendCString (") ;\n") ;
    ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_46145->mDoBranchInstructions,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (1077)) ;
    const GGS_bool cond_48268 = (operand_46145->mElseBranchInstructions.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
    if (cond_48268.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("}else{\n") ;
      ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_46145->mElseBranchInstructions,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (1086)) ;
    }
    var_cas_ioGeneratedCode.appendCString ("}\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@readWriteWithInstructionForGeneration.generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__readWriteWithInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_readWriteWithInstructionForGeneration * operand_48470,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_48470 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @readWriteWithInstructionForGeneration\n") ;
    GGS_string var_cas_receiverCppName = operand_48470->mReceiverVariableCppName ;
    {
      GGS_lstringlist::cEnumerator enumerator_48772 (operand_48470->mStructAttributeList, true) ;
      const GGS_lstringlist::cElement * operand_48772 = NULL ;
      while (((operand_48772 = enumerator_48772.nextObject ()))) {
        macroValidPointer (operand_48772) ;
        var_cas_receiverCppName.appendCString (".mAttribute_") ;
        var_cas_receiverCppName.dotAssign_operation (operand_48772->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1108)).reader_identifierRepresentation ()) ;
      }
    }
    GGS_string var_cas_keyVarCppName ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_48470->mKeyExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_48470->mKeyExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_keyVarCppName COMMA_SOURCE_FILE_AT_LINE (1112)) ;
      }
    }
    {
        GGS_uint var_cas_IDX (true, 0) ;
      GGS_typedAttributeList::cEnumerator enumerator_49068 (operand_48470->mReceiverType.reader_mCurrentTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (1114)), true) ;
      const GGS_typedAttributeList::cElement * operand_49068 = NULL ;
      while (((operand_49068 = enumerator_49068.nextObject ()))) {
        macroValidPointer (operand_49068) ;
        var_cas_ioGeneratedCode.appendCString ("// index ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (1115)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1115))) ;
        var_cas_ioGeneratedCode.appendCString (": attribute '") ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_49068->mAttributeName) ;
        var_cas_ioGeneratedCode.appendCString ("', type @") ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_49068->mAttributeTypeProxy.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (1115))) ;
        var_cas_ioGeneratedCode.appendCString ("\n") ;
        var_cas_IDX.mValue ++ ;
      }
    }
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (1117)) COMMA_SOURCE_FILE_AT_LINE (1117)) ;
    var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, operand_48470->mReceiverVariableCppName COMMA_SOURCE_FILE_AT_LINE (1118)) ;
    var_cas_ioGeneratedCode.appendCString ("cMapElement_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_48470->mReceiverType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1119))) ;
    var_cas_ioGeneratedCode.appendCString (" * ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_48470->mObjectArrayCppName) ;
    var_cas_ioGeneratedCode.appendCString (" = (cMapElement_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_48470->mReceiverType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1120))) ;
    var_cas_ioGeneratedCode.appendCString (" *) ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_receiverCppName) ;
    var_cas_ioGeneratedCode.appendCString (".readWriteAccessForWithInstruction_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_48470->mAccessName.reader_identifierRepresentation ()) ;
    var_cas_ioGeneratedCode.appendCString (" (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (1121))) ;
    var_cas_ioGeneratedCode.appendCString (", ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_keyVarCppName) ;
    var_cas_ioGeneratedCode.appendCString (" COMMA_SOURCE_FILE_AT_LINE (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_48470->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (1122)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1122))) ;
    var_cas_ioGeneratedCode.appendCString (")) ;\n"
    "if (NULL != ") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_48470->mObjectArrayCppName) ;
    var_cas_ioGeneratedCode.appendCString (") {\n"
    "    macroValidSharedObject (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_48470->mObjectArrayCppName) ;
    var_cas_ioGeneratedCode.appendCString (", cMapElement_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_48470->mReceiverType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1124))) ;
    var_cas_ioGeneratedCode.appendCString (") ;\n") ;
    ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_48470->mDoBranchInstructions,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (1125)) ;
    const GGS_bool cond_50536 = (operand_48470->mElseBranchInstructions.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
    if (cond_50536.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("}else{\n") ;
      ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_48470->mElseBranchInstructions,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (1134)) ;
    }
    var_cas_ioGeneratedCode.appendCString ("}\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@foreachInstructionForGeneration.generateInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__foreachInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_foreachInstructionForGeneration * operand_50732,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_50732 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @foreachInstructionForGeneration\n") ;
    GGS_stringlist  var_cas_enumerationVarCppNameList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_foreachInstructionEnumeratedObjectListForGeneration::cEnumerator enumerator_51027 (operand_50732->mEnumeratedObjectList, true) ;
      const GGS_foreachInstructionEnumeratedObjectListForGeneration::cElement * operand_51027 = NULL ;
      while (((operand_51027 = enumerator_51027.nextObject ()))) {
        macroValidPointer (operand_51027) ;
        GGS_string var_cas_enumerationVar ;
        { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_51027->mEnumeratedExpression.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, operand_51027->mEnumeratedExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_enumerationVar COMMA_SOURCE_FILE_AT_LINE (1157)) ;
          }
        }
        var_cas_enumerationVarCppNameList.addAssign_operation (var_cas_enumerationVar) ;
      }
    }
    {
      GGS_foreachInstructionEnumeratedObjectListForGeneration::cEnumerator enumerator_51297 (operand_50732->mEnumeratedObjectList, true) ;
      const GGS_foreachInstructionEnumeratedObjectListForGeneration::cElement * operand_51297 = NULL ;
      GGS_stringlist::cEnumerator enumerator_51324 (var_cas_enumerationVarCppNameList, true) ;
      const GGS_stringlist::cElement * operand_51324 = NULL ;
      while (((operand_51297 = enumerator_51297.nextObject ()))
          && ((operand_51324 = enumerator_51324.nextObject ()))) {
        macroValidPointer (operand_51297) ;
        macroValidPointer (operand_51324) ;
        var_cas_ioGeneratedCode.appendCString ("cEnumerator_") ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_51297->mEnumeratedExpression.reader_mType (inLexique COMMA_SOURCE_FILE_AT_LINE (1161)).reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1161))) ;
        var_cas_ioGeneratedCode.appendCString (" ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_51297->mEnumeratorCppName) ;
        var_cas_ioGeneratedCode.appendCString (" (") ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_51324->mValue) ;
        var_cas_ioGeneratedCode.appendCString (", ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_51297->mIsAscending.reader_cString (inLexique COMMA_SOURCE_FILE_AT_LINE (1162))) ;
        var_cas_ioGeneratedCode.appendCString (") ;\n") ;
      }
    }
    const GGS_bool var_cas_whileExpressionIsAllwaysTrue = (findCategoryReader__semanticExpressionForGeneration__isTrueExpression (operand_50732->mWhileExpression (HERE)->galgasRTTI ()) (inLexique, operand_50732->mWhileExpression.getPtr () COMMA_SOURCE_FILE_AT_LINE (1165))) ;
    const GGS_bool cond_55063 = ((operand_50732->mBeforeInstructionList.reader_length ().add_operation (inLexique, operand_50732->mAfterInstructionList.reader_length () COMMA_SOURCE_FILE_AT_LINE (1167))).operator_strictSup (GGS_uint (0U))).operator_or ((var_cas_whileExpressionIsAllwaysTrue).operator_not ()) ;
    if (cond_55063.isBuiltAndTrue ()) {
      var_cas_ioGeneratedCode.appendCString ("//--- complex foreach instruction\n") ;
      const GGS_bool cond_52077 = (operand_50732->mIndexVariableCppName).operator_isNotEqual (GGS_string ("")) ;
      if (cond_52077.isBuiltAndTrue ()) {
        var_cas_ioGeneratedCode.appendCString ("GALGAS_uint ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_50732->mIndexVariableCppName) ;
        var_cas_ioGeneratedCode.appendCString (" ((PMUInt32) 0) ;\n") ;
      }
      const GGS_string var_cas_boolVarCppName = (GGS_string ("bool_")).operator_concat (var_cas_ioTemporaryVariableIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1173))) ;
      var_cas_ioTemporaryVariableIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1173)) ;
      const GGS_bool cond_52312 = var_cas_whileExpressionIsAllwaysTrue ;
      if (cond_52312.isBuiltAndTrue ()) {
        var_cas_ioGeneratedCode.appendCString ("bool ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (var_cas_boolVarCppName) ;
        var_cas_ioGeneratedCode.appendCString (" = true ;\n") ;
      }else if (cond_52312.isBuiltAndFalse ()) {
        GGS_string var_cas_whileVar ;
        { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_50732->mWhileExpression.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, operand_50732->mWhileExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_whileVar COMMA_SOURCE_FILE_AT_LINE (1178)) ;
          }
        }
        var_cas_ioGeneratedCode.appendCString ("bool ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (var_cas_boolVarCppName) ;
        var_cas_ioGeneratedCode.appendCString (" = ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (var_cas_whileVar) ;
        var_cas_ioGeneratedCode.appendCString (".isValidAndTrue () ;\n") ;
      }
      var_cas_ioGeneratedCode.appendCString ("if (") ;
      {
        GGS_foreachInstructionEnumeratedObjectListForGeneration::cEnumerator enumerator_52644 (operand_50732->mEnumeratedObjectList, true) ;
        const GGS_foreachInstructionEnumeratedObjectListForGeneration::cElement * operand_52644 = NULL ;
        while (((operand_52644 = enumerator_52644.nextObject ()))) {
          macroValidPointer (operand_52644) ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_52644->mEnumeratorCppName) ;
          var_cas_ioGeneratedCode.appendCString (".hasCurrentObject () && ") ;
        }
      }
      var_cas_ioGeneratedCode.dotAssign_operation (var_cas_boolVarCppName) ;
      var_cas_ioGeneratedCode.appendCString (") {\n") ;
      ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_50732->mBeforeInstructionList,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (1186)) ;
      var_cas_ioGeneratedCode.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (1193)) ;
      var_cas_ioGeneratedCode.appendCString ("while (") ;
      {
        GGS_foreachInstructionEnumeratedObjectListForGeneration::cEnumerator enumerator_53087 (operand_50732->mEnumeratedObjectList, true) ;
        const GGS_foreachInstructionEnumeratedObjectListForGeneration::cElement * operand_53087 = NULL ;
        while (((operand_53087 = enumerator_53087.nextObject ()))) {
          macroValidPointer (operand_53087) ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_53087->mEnumeratorCppName) ;
          var_cas_ioGeneratedCode.appendCString (".hasCurrentObject () && ") ;
        }
      }
      var_cas_ioGeneratedCode.dotAssign_operation (var_cas_boolVarCppName) ;
      var_cas_ioGeneratedCode.appendCString (") {\n") ;
      ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_50732->mDoInstructionList,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (1200)) ;
      const GGS_bool cond_53783 = (var_cas_whileExpressionIsAllwaysTrue).operator_not () ;
      if (cond_53783.isBuiltAndTrue ()) {
        GGS_string var_cas_whileVar ;
        { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_50732->mWhileExpression.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, operand_50732->mWhileExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_whileVar COMMA_SOURCE_FILE_AT_LINE (1210)) ;
          }
        }
        var_cas_ioGeneratedCode.appendCString ("  ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (var_cas_boolVarCppName) ;
        var_cas_ioGeneratedCode.appendCString (" = ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (var_cas_whileVar) ;
        var_cas_ioGeneratedCode.appendCString (".isValidAndTrue () ;\n") ;
      }
      const GGS_bool cond_54426 = (operand_50732->mBetweenInstructionList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
      if (cond_54426.isBuiltAndTrue ()) {
        var_cas_ioGeneratedCode.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (1215)) ;
        var_cas_ioGeneratedCode.appendCString ("if (") ;
        {
          GGS_foreachInstructionEnumeratedObjectListForGeneration::cEnumerator enumerator_53991 (operand_50732->mEnumeratedObjectList, true) ;
          const GGS_foreachInstructionEnumeratedObjectListForGeneration::cElement * operand_53991 = NULL ;
          while (((operand_53991 = enumerator_53991.nextObject ()))) {
            macroValidPointer (operand_53991) ;
            var_cas_ioGeneratedCode.dotAssign_operation (operand_53991->mEnumeratorCppName) ;
            var_cas_ioGeneratedCode.appendCString (".hasNextObject () && ") ;
          }
        }
        var_cas_ioGeneratedCode.dotAssign_operation (var_cas_boolVarCppName) ;
        var_cas_ioGeneratedCode.appendCString (") {\n") ;
        ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_50732->mBetweenInstructionList,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (1221)) ;
        var_cas_ioGeneratedCode.appendCString ("}\n") ;
        var_cas_ioGeneratedCode.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (1229)) ;
      }
      {
        GGS_foreachInstructionEnumeratedObjectListForGeneration::cEnumerator enumerator_54499 (operand_50732->mEnumeratedObjectList, true) ;
        const GGS_foreachInstructionEnumeratedObjectListForGeneration::cElement * operand_54499 = NULL ;
        while (((operand_54499 = enumerator_54499.nextObject ()))) {
          macroValidPointer (operand_54499) ;
          var_cas_ioGeneratedCode.appendCString ("  ") ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_54499->mEnumeratorCppName) ;
          var_cas_ioGeneratedCode.appendCString (".gotoNextObject () ;\n") ;
        }
      }
      const GGS_bool cond_54726 = (operand_50732->mIndexVariableCppName).operator_isNotEqual (GGS_string ("")) ;
      if (cond_54726.isBuiltAndTrue ()) {
        var_cas_ioGeneratedCode.appendCString ("  ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_50732->mIndexVariableCppName) ;
        var_cas_ioGeneratedCode.appendCString (".increment () ;\n") ;
      }
      var_cas_ioGeneratedCode.appendCString ("}\n") ;
      ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_50732->mAfterInstructionList,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (1240)) ;
      var_cas_ioGeneratedCode.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (1247)) ;
      var_cas_ioGeneratedCode.appendCString ("}\n") ;
    }else if (cond_55063.isBuiltAndFalse ()) {
      var_cas_ioGeneratedCode.appendCString ("//--- simple foreach instruction\n") ;
      const GGS_bool cond_55334 = (operand_50732->mIndexVariableCppName).operator_isNotEqual (GGS_string ("")) ;
      if (cond_55334.isBuiltAndTrue ()) {
        var_cas_ioGeneratedCode.appendCString ("GALGAS_uint ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_50732->mIndexVariableCppName) ;
        var_cas_ioGeneratedCode.appendCString (" ((PMUInt32) 0) ;\n") ;
      }
      var_cas_ioGeneratedCode.appendCString ("while (") ;
      {
        GGS_foreachInstructionEnumeratedObjectListForGeneration::cEnumerator enumerator_55408 (operand_50732->mEnumeratedObjectList, true) ;
        const GGS_foreachInstructionEnumeratedObjectListForGeneration::cElement * operand_55408 = enumerator_55408.nextObject () ;
        if ((operand_55408 != NULL)) {
          bool _foreach_loop_55408 ;
          do{
            macroValidPointer (operand_55408) ;
            var_cas_ioGeneratedCode.dotAssign_operation (operand_55408->mEnumeratorCppName) ;
            var_cas_ioGeneratedCode.appendCString (".hasCurrentObject ()") ;
            operand_55408 = enumerator_55408.nextObject () ;
            _foreach_loop_55408 = ((operand_55408 != NULL)) ;
            if (_foreach_loop_55408) {
              var_cas_ioGeneratedCode.appendCString (" && ") ;
            }
          }while (_foreach_loop_55408) ;
        }
      }
      var_cas_ioGeneratedCode.appendCString (") {\n") ;
      ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_50732->mDoInstructionList,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (1261)) ;
      const GGS_bool cond_56449 = (operand_50732->mBetweenInstructionList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
      if (cond_56449.isBuiltAndTrue ()) {
        var_cas_ioGeneratedCode.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (1270)) ;
        var_cas_ioGeneratedCode.appendCString ("if (") ;
        {
          GGS_foreachInstructionEnumeratedObjectListForGeneration::cEnumerator enumerator_55991 (operand_50732->mEnumeratedObjectList, true) ;
          const GGS_foreachInstructionEnumeratedObjectListForGeneration::cElement * operand_55991 = enumerator_55991.nextObject () ;
          if ((operand_55991 != NULL)) {
            bool _foreach_loop_55991 ;
            do{
              macroValidPointer (operand_55991) ;
              var_cas_ioGeneratedCode.dotAssign_operation (operand_55991->mEnumeratorCppName) ;
              var_cas_ioGeneratedCode.appendCString (".hasNextObject ()") ;
              operand_55991 = enumerator_55991.nextObject () ;
              _foreach_loop_55991 = ((operand_55991 != NULL)) ;
              if (_foreach_loop_55991) {
                var_cas_ioGeneratedCode.appendCString (" && ") ;
              }
            }while (_foreach_loop_55991) ;
          }
        }
        var_cas_ioGeneratedCode.appendCString (") {\n") ;
        ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_50732->mBetweenInstructionList,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (1277)) ;
        var_cas_ioGeneratedCode.appendCString ("}\n") ;
        var_cas_ioGeneratedCode.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (1285)) ;
      }
      {
        GGS_foreachInstructionEnumeratedObjectListForGeneration::cEnumerator enumerator_56522 (operand_50732->mEnumeratedObjectList, true) ;
        const GGS_foreachInstructionEnumeratedObjectListForGeneration::cElement * operand_56522 = NULL ;
        while (((operand_56522 = enumerator_56522.nextObject ()))) {
          macroValidPointer (operand_56522) ;
          var_cas_ioGeneratedCode.appendCString ("  ") ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_56522->mEnumeratorCppName) ;
          var_cas_ioGeneratedCode.appendCString (".gotoNextObject () ;\n") ;
        }
      }
      const GGS_bool cond_56927 = (operand_50732->mIndexVariableCppName).operator_isNotEqual (GGS_string ("")) ;
      if (cond_56927.isBuiltAndTrue ()) {
        var_cas_ioUnusedVariableCppNameSet.modifier_removeKey (inLexique, function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (1292)) COMMA_SOURCE_FILE_AT_LINE (1292)) ;
        var_cas_ioGeneratedCode.appendCString ("  ") ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_50732->mIndexVariableCppName) ;
        var_cas_ioGeneratedCode.appendCString (".increment_operation (") ;
        var_cas_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (1293))) ;
        var_cas_ioGeneratedCode.appendCString (" COMMA_SOURCE_FILE_AT_LINE (") ;
        var_cas_ioGeneratedCode.dotAssign_operation (operand_50732->mInstructionLocation.reader_line (inLexique COMMA_SOURCE_FILE_AT_LINE (1293)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1293))) ;
        var_cas_ioGeneratedCode.appendCString (")) ;\n") ;
      }
      var_cas_ioGeneratedCode.appendCString ("}\n") ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@sendInstructionForGeneration.generateInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sendInstructionForGeneration__generateInstruction (C_CompilerEx &,
                                const cPtr_sendInstructionForGeneration * operand_57133,
                                const GGS_bool  /* var_cas_inGenerateCheckValid */,
                                GGS_uint  & /* var_cas_ioTemporaryVariableIndex */,
                                GGS_stringset  & /* var_cas_ioUnusedVariableCppNameSet */,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_57133 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("@sendInstructionForGeneration generateInstruction\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@logInstructionForGeneration.generateInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__logInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_logInstructionForGeneration * operand_57527,
                                const GGS_bool  /* var_cas_inGenerateCheckValid */,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_57527 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//-------- @logInstructionForGeneration\n") ;
    GGS_string var_cas_logVar ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_57527->mLogExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_57527->mLogExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_logVar COMMA_SOURCE_FILE_AT_LINE (1320)) ;
      }
    }
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_logVar) ;
    var_cas_ioGeneratedCode.appendCString (".log (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_57527->mLogMessage.reader_utf8Representation ()) ;
    var_cas_ioGeneratedCode.appendCString (") ;\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@switchInstructionForGeneration.generateInstruction'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__switchInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_switchInstructionForGeneration * operand_58127,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_58127 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//------- @switchInstructionForGeneration\n") ;
    GGS_string var_cas_switchVar ;
    { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_58127->mSwitchExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_58127->mSwitchExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_switchVar COMMA_SOURCE_FILE_AT_LINE (1335)) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("if (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_switchVar) ;
    var_cas_ioGeneratedCode.appendCString (".isValid ()) {\n") ;
    var_cas_ioGeneratedCode.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (1337)) ;
    var_cas_ioGeneratedCode.appendCString ("switch (") ;
    var_cas_ioGeneratedCode.dotAssign_operation (var_cas_switchVar) ;
    var_cas_ioGeneratedCode.appendCString (".enumValue ()) {\n") ;
    var_cas_ioGeneratedCode.appendCString ("case GALGAS_") ;
    var_cas_ioGeneratedCode.dotAssign_operation (operand_58127->mSwitchExpression.reader_mType (inLexique COMMA_SOURCE_FILE_AT_LINE (1339)).reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1339))) ;
    var_cas_ioGeneratedCode.appendCString ("::kNotBuilt:\n") ;
    var_cas_ioGeneratedCode.appendCString ("  break ;\n") ;
    {
      GGS_switchBranchesForGeneration::cEnumerator enumerator_58850 (operand_58127->mBranches, true) ;
      const GGS_switchBranchesForGeneration::cElement * operand_58850 = NULL ;
      while (((operand_58850 = enumerator_58850.nextObject ()))) {
        macroValidPointer (operand_58850) ;
        {
          GGS_lstringlist::cEnumerator enumerator_58885 (operand_58850->mSwitchConstantList, true) ;
          const GGS_lstringlist::cElement * operand_58885 = NULL ;
          while (((operand_58885 = enumerator_58885.nextObject ()))) {
            macroValidPointer (operand_58885) ;
            var_cas_ioGeneratedCode.appendCString ("case GALGAS_") ;
            var_cas_ioGeneratedCode.dotAssign_operation (operand_58127->mSwitchExpression.reader_mType (inLexique COMMA_SOURCE_FILE_AT_LINE (1343)).reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1343))) ;
            var_cas_ioGeneratedCode.appendCString ("::kEnum_") ;
            var_cas_ioGeneratedCode.dotAssign_operation (operand_58885->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1343)).reader_identifierRepresentation ()) ;
            var_cas_ioGeneratedCode.appendCString (": ") ;
          }
        }
        var_cas_ioGeneratedCode.appendCString ("{\n") ;
        ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_58850->mInstructions,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (1346)) ;
        var_cas_ioGeneratedCode.appendCString ("  } break ;\n") ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("}\n") ;
    var_cas_ioGeneratedCode.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (1356)) ;
    var_cas_ioGeneratedCode.appendCString ("}\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@matchInstructionForGeneration.generateInstruction'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__matchInstructionForGeneration__generateInstruction (C_CompilerEx & inLexique,
                                const cPtr_matchInstructionForGeneration * operand_59591,
                                const GGS_bool  var_cas_inGenerateCheckValid,
                                GGS_uint  & var_cas_ioTemporaryVariableIndex,
                                GGS_stringset  & var_cas_ioUnusedVariableCppNameSet,
                                GGS_string & var_cas_ioGeneratedCode
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_59591 != NULL) {
    var_cas_ioGeneratedCode.appendCString ("//------- @matchInstructionForGeneration\n") ;
    GGS_stringlist  var_cas_receiverList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_semanticExpressionListForGeneration::cEnumerator enumerator_59871 (operand_59591->mMatchedExpressionList, true) ;
      const GGS_semanticExpressionListForGeneration::cElement * operand_59871 = NULL ;
      while (((operand_59871 = enumerator_59871.nextObject ()))) {
        macroValidPointer (operand_59871) ;
        GGS_string var_cas_var ;
        { typeCategoryMethod__semanticExpressionForGeneration__generateExpression method = findCategoryMethod__semanticExpressionForGeneration__generateExpression (operand_59871->mExpression.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, operand_59871->mExpression (HERE), var_cas_ioGeneratedCode, var_cas_ioTemporaryVariableIndex, var_cas_ioUnusedVariableCppNameSet, var_cas_var COMMA_SOURCE_FILE_AT_LINE (1372)) ;
          }
        }
        var_cas_receiverList.addAssign_operation (var_cas_var) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("if (") ;
    {
      GGS_stringlist::cEnumerator enumerator_60106 (var_cas_receiverList, true) ;
      const GGS_stringlist::cElement * operand_60106 = enumerator_60106.nextObject () ;
      if ((operand_60106 != NULL)) {
        bool _foreach_loop_60106 ;
        do{
          macroValidPointer (operand_60106) ;
          var_cas_ioGeneratedCode.dotAssign_operation (operand_60106->mValue) ;
          var_cas_ioGeneratedCode.appendCString (".isValid ()") ;
          operand_60106 = enumerator_60106.nextObject () ;
          _foreach_loop_60106 = ((operand_60106 != NULL)) ;
          if (_foreach_loop_60106) {
            var_cas_ioGeneratedCode.appendCString (" && ") ;
          }
        }while (_foreach_loop_60106) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString (") {\n") ;
    var_cas_ioGeneratedCode.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (1381)) ;
    {
      GGS_matchInstructionBranchListForGeneration::cEnumerator enumerator_60324 (operand_59591->mMatchInstructionBranchList, true) ;
      const GGS_matchInstructionBranchListForGeneration::cElement * operand_60324 = enumerator_60324.nextObject () ;
      if ((operand_60324 != NULL)) {
        bool _foreach_loop_60324 ;
        do{
          macroValidPointer (operand_60324) ;
          var_cas_ioGeneratedCode.appendCString ("if (") ;
          {
            GGS_matchListForGeneration::cEnumerator enumerator_60395 (operand_60324->mMatchListForGeneration, true) ;
            GGS_stringlist::cEnumerator enumerator_60409 (var_cas_receiverList, true) ;
            const GGS_matchListForGeneration::cElement * operand_60395 = enumerator_60395.nextObject () ;
            const GGS_stringlist::cElement * operand_60409 = enumerator_60409.nextObject () ;
            if ((operand_60395 != NULL) && (operand_60409 != NULL)) {
              bool _foreach_loop_60395 ;
              do{
                macroValidPointer (operand_60395) ;
                macroValidPointer (operand_60409) ;
                const GGS_bool cond_60632 = operand_60395->mIsType ;
                if (cond_60632.isBuiltAndTrue ()) {
                  var_cas_ioGeneratedCode.appendCString ("(NULL != dynamic_cast <const cPtr_") ;
                  var_cas_ioGeneratedCode.dotAssign_operation (operand_60395->mTypeNameOrEnumerationConstantName.reader_identifierRepresentation ()) ;
                  var_cas_ioGeneratedCode.appendCString (" *> (") ;
                  var_cas_ioGeneratedCode.dotAssign_operation (operand_60409->mValue) ;
                  var_cas_ioGeneratedCode.appendCString (".ptr ()))") ;
                }else if (cond_60632.isBuiltAndFalse ()) {
                  var_cas_ioGeneratedCode.appendCString ("(") ;
                  var_cas_ioGeneratedCode.dotAssign_operation (operand_60409->mValue) ;
                  var_cas_ioGeneratedCode.appendCString (".enumValue () == GALGAS_") ;
                  var_cas_ioGeneratedCode.dotAssign_operation (operand_60395->mLocalConstantName.reader_identifierRepresentation ()) ;
                  var_cas_ioGeneratedCode.appendCString ("::kEnum_") ;
                  var_cas_ioGeneratedCode.dotAssign_operation (operand_60395->mTypeNameOrEnumerationConstantName.reader_identifierRepresentation ()) ;
                  var_cas_ioGeneratedCode.appendCString (")") ;
                }
                operand_60395 = enumerator_60395.nextObject () ;
                operand_60409 = enumerator_60409.nextObject () ;
                _foreach_loop_60395 = ((operand_60395 != NULL)
                  && (operand_60409 != NULL)) ;
                if (_foreach_loop_60395) {
                  var_cas_ioGeneratedCode.appendCString (" && ") ;
                }
              }while (_foreach_loop_60395) ;
            }
          }
          var_cas_ioGeneratedCode.appendCString (") {\n") ;
          ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_60324->mMatchBranchInstructionList,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (1396)) ;
          operand_60324 = enumerator_60324.nextObject () ;
          _foreach_loop_60324 = ((operand_60324 != NULL)) ;
          if (_foreach_loop_60324) {
            var_cas_ioGeneratedCode.appendCString ("}else ") ;
          }
        }while (_foreach_loop_60324) ;
      }
    }
    var_cas_ioGeneratedCode.appendCString ("}else{\n") ;
    ::routine_generateInstructionList (inLexique,  var_cas_inGenerateCheckValid,  operand_59591->mElseInstructionList,  var_cas_ioTemporaryVariableIndex,  var_cas_ioUnusedVariableCppNameSet,  var_cas_ioGeneratedCode COMMA_SOURCE_FILE_AT_LINE (1406)) ;
    var_cas_ioGeneratedCode.appendCString ("}\n") ;
    var_cas_ioGeneratedCode.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (1414)) ;
    var_cas_ioGeneratedCode.appendCString ("}\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticInstructionGeneration (void) {
  enterCategoryMethod__actualParameterForGeneration__generateActualParameter ((typeCategoryMethod__actualParameterForGeneration__generateActualParameter) category_method__outputActualParameterForGeneration__generateActualParameter, gClassInfoFor__outputActualParameterForGeneration.slotID ()) ;
  enterCategoryMethod__actualParameterForGeneration__generateActualParameter ((typeCategoryMethod__actualParameterForGeneration__generateActualParameter) category_method__outputInputActualParameterForGeneration__generateActualParameter, gClassInfoFor__outputInputActualParameterForGeneration.slotID ()) ;
  enterCategoryMethod__actualParameterForGeneration__generateActualParameter ((typeCategoryMethod__actualParameterForGeneration__generateActualParameter) category_method__inputActualParameterForGeneration__generateActualParameter, gClassInfoFor__inputActualParameterForGeneration.slotID ()) ;
  enterCategoryMethod__actualParameterForGeneration__generateActualParameter ((typeCategoryMethod__actualParameterForGeneration__generateActualParameter) category_method__inputJokerParameterForGeneration__generateActualParameter, gClassInfoFor__inputJokerParameterForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__localVariableOrConstantDeclarationWithSourceExpressionForGeneration__generateInstruction, gClassInfoFor__localVariableOrConstantDeclarationWithSourceExpressionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__localVariableDeclarationForGeneration__generateInstruction, gClassInfoFor__localVariableDeclarationForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__localVariableOrConstantDeclarationWithConstructorCallForGeneration__generateInstruction, gClassInfoFor__localVariableOrConstantDeclarationWithConstructorCallForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__assignmentInstructionForGeneration__generateInstruction, gClassInfoFor__assignmentInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__dropInstructionForGeneration__generateInstruction, gClassInfoFor__dropInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__appendInstructionForGeneration__generateInstruction, gClassInfoFor__appendInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__grammarInstructionWithSourceFileForGeneration__generateInstruction, gClassInfoFor__grammarInstructionWithSourceFileForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__grammarInstructionWithSourceExpressionForGeneration__generateInstruction, gClassInfoFor__grammarInstructionWithSourceExpressionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__ifInstructionForGeneration__generateInstruction, gClassInfoFor__ifInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__errorInstructionForGeneration__generateInstruction, gClassInfoFor__errorInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__warningInstructionForGeneration__generateInstruction, gClassInfoFor__warningInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__methodCallInstructionForGeneration__generateInstruction, gClassInfoFor__methodCallInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__thisMethodCallInstructionForGeneration__generateInstruction, gClassInfoFor__thisMethodCallInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__superMethodCallInstructionForGeneration__generateInstruction, gClassInfoFor__superMethodCallInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__routineCallInstructionForGeneration__generateInstruction, gClassInfoFor__routineCallInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__modifierCallInstructionForGeneration__generateInstruction, gClassInfoFor__modifierCallInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__thisModifierCallInstructionForGeneration__generateInstruction, gClassInfoFor__thisModifierCallInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__superModifierCallInstructionForGeneration__generateInstruction, gClassInfoFor__superModifierCallInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__typeMethodInstructionForGeneration__generateInstruction, gClassInfoFor__typeMethodInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__structuredCastInstructionForGeneration__generateInstruction, gClassInfoFor__structuredCastInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__addAssignInstructionForGeneration__generateInstruction, gClassInfoFor__addAssignInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__incrementInstructionForGeneration__generateInstruction, gClassInfoFor__incrementInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__decrementInstructionForGeneration__generateInstruction, gClassInfoFor__decrementInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__messageInstructionForGeneration__generateInstruction, gClassInfoFor__messageInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__loopInstructionForGeneration__generateInstruction, gClassInfoFor__loopInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__readOnlyWithInstructionForGeneration__generateInstruction, gClassInfoFor__readOnlyWithInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__readWriteWithInstructionForGeneration__generateInstruction, gClassInfoFor__readWriteWithInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__foreachInstructionForGeneration__generateInstruction, gClassInfoFor__foreachInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__sendInstructionForGeneration__generateInstruction, gClassInfoFor__sendInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__logInstructionForGeneration__generateInstruction, gClassInfoFor__logInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__switchInstructionForGeneration__generateInstruction, gClassInfoFor__switchInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__generateInstruction ((typeCategoryMethod__semanticInstructionForGeneration__generateInstruction) category_method__matchInstructionForGeneration__generateInstruction, gClassInfoFor__matchInstructionForGeneration.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticInstructionGeneration (void) {
  gDispatchTableForMethod__actualParameterForGeneration__generateActualParameter.free () ;
  gDispatchTableForMethod__semanticInstructionForGeneration__generateInstruction.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticInstructionGeneration (prologueRoutineFor_semanticInstructionGeneration, epilogueRoutineFor_semanticInstructionGeneration) ;

//---------------------------------------------------------------------------*

