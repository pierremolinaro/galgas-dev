//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'grammarSemantics.h'                          *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    november 14th, 2010, at 20h20'29"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef grammarSemantics_ENTITIES_DEFINED
#define grammarSemantics_ENTITIES_DEFINED

//---------------------------------------------------------------------------*

#include "galgas2/predefined-types.h"

//---------------------------------------------------------------------------*

#include "semanticsTypesForAST.h"

//---------------------------------------------------------------------------*

class GALGAS__32_stringlist ;
class GALGAS_abstractCategoryMethodAST ;
class GALGAS_abstractCategoryReaderAST ;
class GALGAS_abstractMethodDefinitionListAST ;
class GALGAS_abstractSyntaxInstructionForGrammarAnalysis ;
class GALGAS_actualInputParameterListAST ;
class GALGAS_actualParameterAST ;
class GALGAS_actualParameterListAST ;
class GALGAS_addExpressionAST ;
class GALGAS_addInstructionAST ;
class GALGAS_andExpressionAST ;
class GALGAS_appendInstructionAST ;
class GALGAS_application ;
class GALGAS_assignmentInstructionAST ;
class GALGAS_attributeInCollectionListAST ;
class GALGAS_binaryset ;
class GALGAS_bool ;
class GALGAS_branchListForGrammarAnalysis ;
class GALGAS_castInExpressionAST ;
class GALGAS_castInstructionBranchListAST ;
class GALGAS_categoryMethodAST ;
class GALGAS_categoryReaderAST ;
class GALGAS_char ;
class GALGAS_classDeclarationAST ;
class GALGAS_complementExpressionAST ;
class GALGAS_concatExpressionAST ;
class GALGAS_constructorExpressionAST ;
class GALGAS_data ;
class GALGAS_decrementInstructionAST ;
class GALGAS_divisionExpressionAST ;
class GALGAS_double ;
class GALGAS_dropInstructionAST ;
class GALGAS_enumDeclarationAST ;
class GALGAS_enumMessageAssociationListAST ;
class GALGAS_enumMessageListAST ;
class GALGAS_equalExpressionAST ;
class GALGAS_errorInstructionAST ;
class GALGAS_externFunctionDeclarationAST ;
class GALGAS_externRoutineDeclarationAST ;
class GALGAS_falseExpressionAST ;
class GALGAS_filewrapper ;
class GALGAS_filewrapperDeclarationAST ;
class GALGAS_filewrapperInExpressionAST ;
class GALGAS_filewrapperObjectInstanciationInExpressionAST ;
class GALGAS_filewrapperTemplateInExpressionAST ;
class GALGAS_filewrapperTemplateListAST ;
class GALGAS_foreachInstructionAST ;
class GALGAS_foreachInstructionEnumeratedObjectElementListAST ;
class GALGAS_foreachInstructionEnumeratedObjectListAST ;
class GALGAS_formalArgumentPassingModeAST ;
class GALGAS_formalInputParameterListAST ;
class GALGAS_formalParameterListAST ;
class GALGAS_formalTemplateInputParameterListAST ;
class GALGAS_function ;
class GALGAS_functionCallExpressionAST ;
class GALGAS_functionDeclarationAST ;
class GALGAS_functionlist ;
class GALGAS_grammarInstructionAST ;
class GALGAS_greaterOrEqualExpressionAST ;
class GALGAS_hereExpressionAST ;
class GALGAS_ifExpressionAST ;
class GALGAS_ifInstructionAST ;
class GALGAS_incrementInstructionAST ;
class GALGAS_inputActualParameterAST ;
class GALGAS_inputJokerActualParameterAST ;
class GALGAS_insertMethodListAST ;
class GALGAS_insertOrReplaceDeclarationListAST ;
class GALGAS_lbool ;
class GALGAS_lchar ;
class GALGAS_ldouble ;
class GALGAS_leftShiftExpressionAST ;
class GALGAS_listDeclarationAST ;
class GALGAS_listmapDeclarationAST ;
class GALGAS_literalCharExpressionAST ;
class GALGAS_literalDoubleExpressionAST ;
class GALGAS_literalSInt_36__34_ExpressionAST ;
class GALGAS_literalSIntExpressionAST ;
class GALGAS_literalStringExpressionAST ;
class GALGAS_literalTypeInExpressionAST ;
class GALGAS_literalUInt_36__34_ExpressionAST ;
class GALGAS_literalUIntExpressionAST ;
class GALGAS_localVariableDeclarationAST ;
class GALGAS_localVariableOrConstantDeclarationWithAssignmentAST ;
class GALGAS_localVariableOrConstantDeclarationWithConstructorCallAST ;
class GALGAS_location ;
class GALGAS_logInstructionAST ;
class GALGAS_logListAST ;
class GALGAS_loopInstructionAST ;
class GALGAS_lowerOrEqualExpressionAST ;
class GALGAS_lsint ;
class GALGAS_lsint_36__34_ ;
class GALGAS_lstring ;
class GALGAS_lstringlist ;
class GALGAS_luint ;
class GALGAS_luint_36__34_ ;
class GALGAS_luintlist ;
class GALGAS_mapAutomatonMessageKind ;
class GALGAS_mapDeclarationAST ;
class GALGAS_mapOverrideBlockDescriptorAST ;
class GALGAS_mapOverrideBlockListAST ;
class GALGAS_mapProxyDeclarationAST ;
class GALGAS_mapRemoveMethodListAST ;
class GALGAS_mapSearchMethodListAST ;
class GALGAS_mapStateList ;
class GALGAS_mapStateTransitionList ;
class GALGAS_matchEntryListAST ;
class GALGAS_matchInstructionAST ;
class GALGAS_matchInstructionBranchListAST ;
class GALGAS_messageInstructionAST ;
class GALGAS_methodCallInstructionAST ;
class GALGAS_methodDefinitionListAST ;
class GALGAS_modifierCallInstructionAST ;
class GALGAS_moduloExpressionAST ;
class GALGAS_multiplicationExpressionAST ;
class GALGAS_nonTerminalInstructionForGrammarAnalysis ;
class GALGAS_nonTerminalSymbolMapForGrammarAnalysis ;
class GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis ;
class GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis ;
class GALGAS_notEqualExpressionAST ;
class GALGAS_notExpressionAST ;
class GALGAS_object ;
class GALGAS_objectlist ;
class GALGAS_onceFunctionDeclarationAST ;
class GALGAS_optionExpressionAST ;
class GALGAS_orExpressionAST ;
class GALGAS_outputActualParameterAST ;
class GALGAS_outputInputActualParameterAST ;
class GALGAS_overridingAbstractCategoryMethodAST ;
class GALGAS_overridingAbstractCategoryReaderAST ;
class GALGAS_overridingCategoryMethodAST ;
class GALGAS_overridingCategoryReaderAST ;
class GALGAS_productionRuleListForGrammarAnalysis ;
class GALGAS_readAccessWithInstructionAST ;
class GALGAS_readWriteAccessWithInstructionAST ;
class GALGAS_readerCallExpressionAST ;
class GALGAS_repeatInstructionForGrammarAnalysis ;
class GALGAS_rightShiftExpressionAST ;
class GALGAS_routineCallInstructionAST ;
class GALGAS_routineDeclarationAST ;
class GALGAS_selectInstructionForGrammarAnalysis ;
class GALGAS_selfCopyInExpressionAST ;
class GALGAS_semanticDeclarationAST ;
class GALGAS_semanticDeclarationListAST ;
class GALGAS_semanticExpressionAST ;
class GALGAS_semanticExpressionListAST ;
class GALGAS_semanticInstructionAST ;
class GALGAS_semanticInstructionListAST ;
class GALGAS_semanticsComponentAST ;
class GALGAS_signatureForGrammarAnalysis ;
class GALGAS_sint ;
class GALGAS_sint_36__34_ ;
class GALGAS_sortedListDeclarationAST ;
class GALGAS_sortedListSortDescriptorListAST ;
class GALGAS_strictGreaterExpressionAST ;
class GALGAS_strictLowerExpressionAST ;
class GALGAS_string ;
class GALGAS_stringlist ;
class GALGAS_stringset ;
class GALGAS_structDeclarationAST ;
class GALGAS_structuredCastInstructionAST ;
class GALGAS_subExpressionAST ;
class GALGAS_superMethodCallInstructionAST ;
class GALGAS_superModifierCallInstructionAST ;
class GALGAS_superReaderCallExpressionAST ;
class GALGAS_switchBranchesAST ;
class GALGAS_switchInstructionAST ;
class GALGAS_syntaxComponentListForGrammarAnalysis ;
class GALGAS_syntaxInstructionAST ;
class GALGAS_syntaxInstructionListForGrammarAnalysis ;
class GALGAS_terminalInstructionForGrammarAnalysis ;
class GALGAS_terminalSymbolsMapForGrammarAnalysis ;
class GALGAS_thisMethodCallInstructionAST ;
class GALGAS_thisModifierCallInstructionAST ;
class GALGAS_thisReaderCallExpressionAST ;
class GALGAS_trueExpressionAST ;
class GALGAS_type ;
class GALGAS_typeMethodCallInstructionAST ;
class GALGAS_typelist ;
class GALGAS_uint ;
class GALGAS_uint_36__34_ ;
class GALGAS_uint_36__34_list ;
class GALGAS_uintlist ;
class GALGAS_unaryMinusExpressionAST ;
class GALGAS_uniqueMapDeclarationAST ;
class GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis ;
class GALGAS_varInExpressionAST ;
class GALGAS_warningInstructionAST ;
class GALGAS_xorExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     @signatureForGrammarAnalysis list                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_signatureForGrammarAnalysis  ;

//---------------------------------------------------------------------------*

class GALGAS_signatureForGrammarAnalysis : public AC_GALGAS_list {
//--------------------------------- Default constructor
  public : GALGAS_signatureForGrammarAnalysis (void) ;

//--------------------------------- List constructor used by listmap
  public : GALGAS_signatureForGrammarAnalysis (cSharedList * inSharedListPtr) ;

//--------------------------------- Element constructor used by listmap
  public : static cCollectionElement_signatureForGrammarAnalysis * makeElement (const GALGAS_formalArgumentPassingModeAST & in_mFormalArgumentPassingModeForGrammarAnalysis,
                                                                                const GALGAS_lstring & in_mGalgasTypeNameForGrammarAnalysis
                                                                                COMMA_LOCATION_ARGS) ;

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_signatureForGrammarAnalysis extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler,
                                                                    const GALGAS_location & inErrorLocation
                                                                    COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_signatureForGrammarAnalysis constructor_emptyList (LOCATION_ARGS) ;

  public : static GALGAS_signatureForGrammarAnalysis constructor_listWithValue (const GALGAS_formalArgumentPassingModeAST & inOperand0,
                                                                                const GALGAS_lstring & inOperand1
                                                                                COMMA_LOCATION_ARGS) ;

//--------------------------------- .= operator
  public : VIRTUAL_IN_DEBUG void dotAssign_operation (const GALGAS_signatureForGrammarAnalysis inOperand
                                                      COMMA_LOCATION_ARGS) ;

//--------------------------------- += operator
  public : VIRTUAL_IN_DEBUG void addAssign_operation (const GALGAS_formalArgumentPassingModeAST & inOperand0,
                                                      const GALGAS_lstring & inOperand1
                                                      COMMA_LOCATION_ARGS) ;
//--------------------------------- . (concat) operator
  public : VIRTUAL_IN_DEBUG GALGAS_signatureForGrammarAnalysis operator_concat (const GALGAS_signatureForGrammarAnalysis & inOperand
                                                                                COMMA_LOCATION_ARGS) const ;


//--------------------------------- Modifiers
  public : VIRTUAL_IN_DEBUG void modifier_popFirst (GALGAS_formalArgumentPassingModeAST & outArgument0,
                                                    GALGAS_lstring & outArgument1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_popLast (GALGAS_formalArgumentPassingModeAST & outArgument0,
                                                   GALGAS_lstring & outArgument1,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_prependValue (GALGAS_formalArgumentPassingModeAST constinArgument0,
                                                        GALGAS_lstring constinArgument1
                                                        COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMFormalArgumentPassingModeForGrammarAnalysisAtIndex (GALGAS_formalArgumentPassingModeAST constinArgument0,
                                                                                                  GALGAS_uint constinArgument1,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMGalgasTypeNameForGrammarAnalysisAtIndex (GALGAS_lstring constinArgument0,
                                                                                       GALGAS_uint constinArgument1,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_LOCATION_ARGS) ;


//--------------------------------- Instance Methods
  public : VIRTUAL_IN_DEBUG void method_first (GALGAS_formalArgumentPassingModeAST & outArgument0,
                                               GALGAS_lstring & outArgument1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG void method_last (GALGAS_formalArgumentPassingModeAST & outArgument0,
                                              GALGAS_lstring & outArgument1,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_formalArgumentPassingModeAST reader_mFormalArgumentPassingModeForGrammarAnalysisAtIndex (const GALGAS_uint & constinOperand0,
                                                                                                                            C_Compiler * inCompiler
                                                                                                                            COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_lstring reader_mGalgasTypeNameForGrammarAnalysisAtIndex (const GALGAS_uint & constinOperand0,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_signatureForGrammarAnalysis reader_subListFromIndex (const GALGAS_uint & constinOperand0,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_signatureForGrammarAnalysis reader_subListWithRange (const GALGAS_uint & constinOperand0,
                                                                                        const GALGAS_uint & constinOperand1,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
//--------------------------------- Friend

  friend class cEnumerator_signatureForGrammarAnalysis ;
 
} ; // End of GALGAS_signatureForGrammarAnalysis class

//---------------------------------------------------------------------------*
//   Enumerator declaration                                                  *
//---------------------------------------------------------------------------*

class cEnumerator_signatureForGrammarAnalysis : public cGenericAbstractEnumerator {
  public : cEnumerator_signatureForGrammarAnalysis (const GALGAS_signatureForGrammarAnalysis & inEnumeratedObject,
                                                    const bool inAscending) ;

//--- Current element access
  public : GALGAS_formalArgumentPassingModeAST current_mFormalArgumentPassingModeForGrammarAnalysis (LOCATION_ARGS) const ;
  public : GALGAS_lstring current_mGalgasTypeNameForGrammarAnalysis (LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_signatureForGrammarAnalysis ;

//---------------------------------------------------------------------------*
//                                                                           *
//             @nonterminalSymbolLabelMapForGrammarAnalysis map              *
//                                                                           *
//---------------------------------------------------------------------------*

class cMapElement_nonterminalSymbolLabelMapForGrammarAnalysis ;

//---------------------------------------------------------------------------*

extern const char * kSearchErrorMessage_nonterminalSymbolLabelMapForGrammarAnalysis_searchKey ;

//---------------------------------------------------------------------------*

class GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis : public AC_GALGAS_map {
//--------------------------------- Default constructor
  public : GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis (void) ;

//--------------------------------- Handle copy
  public : GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis (const GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis & inSource) ;
  public : GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis & operator = (const GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis & inSource) ;

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler,
                                                                                    const GALGAS_location & inErrorLocation
                                                                                    COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis constructor_emptyMap (LOCATION_ARGS) ;

  public : static GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis constructor_mapWithMapToOverride (const GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis & inOperand0
                                                                                                       COMMA_LOCATION_ARGS) ;


//--------------------------------- Modifiers
  public : VIRTUAL_IN_DEBUG void modifier_insertKey (GALGAS_lstring constinArgument0,
                                                     GALGAS_signatureForGrammarAnalysis constinArgument1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMFormalParametersListForKey (GALGAS_signatureForGrammarAnalysis constinArgument0,
                                                                          GALGAS_string constinArgument1,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) ;


//--------------------------------- Instance Methods
  public : VIRTUAL_IN_DEBUG void method_searchKey (GALGAS_lstring constinArgument0,
                                                   GALGAS_signatureForGrammarAnalysis & outArgument1,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const ;

//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_signatureForGrammarAnalysis reader_mFormalParametersListForKey (const GALGAS_string & constinOperand0,
                                                                                                   C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis reader_overriddenMap (LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
//--------------------------------- 'with' accessors
  public : VIRTUAL_IN_DEBUG cMapElement_nonterminalSymbolLabelMapForGrammarAnalysis * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                                const GALGAS_string & inKey
                                                                                                                                COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG cMapElement_nonterminalSymbolLabelMapForGrammarAnalysis * readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                                   const GALGAS_lstring & inKey
                                                                                                                                   COMMA_LOCATION_ARGS) ;

//--------------------------------- Friend

  friend class cEnumerator_nonterminalSymbolLabelMapForGrammarAnalysis ;
 
} ; // End of GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis class

//---------------------------------------------------------------------------*
//   Enumerator declaration                                                  *
//---------------------------------------------------------------------------*

class cEnumerator_nonterminalSymbolLabelMapForGrammarAnalysis : public cGenericAbstractEnumerator {
  public : cEnumerator_nonterminalSymbolLabelMapForGrammarAnalysis (const GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis & inEnumeratedObject,
                                                                    const bool inAscending) ;

//--- Current element access
  public : GALGAS_lstring current_lkey (LOCATION_ARGS) const ;
  public : GALGAS_signatureForGrammarAnalysis current_mFormalParametersList (LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis ;

//--------------------------------- 'with' accessors
cCollectionElement * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                               GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis & ioMap,
                                                               GALGAS_string & inKey
                                                               COMMA_LOCATION_ARGS) ;

cCollectionElement * readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                  GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis & ioMap,
                                                                  GALGAS_lstring & inKey
                                                                  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               @syntaxInstructionListForGrammarAnalysis list               *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_syntaxInstructionListForGrammarAnalysis  ;

//---------------------------------------------------------------------------*

class GALGAS_syntaxInstructionListForGrammarAnalysis : public AC_GALGAS_list {
//--------------------------------- Default constructor
  public : GALGAS_syntaxInstructionListForGrammarAnalysis (void) ;

//--------------------------------- List constructor used by listmap
  public : GALGAS_syntaxInstructionListForGrammarAnalysis (cSharedList * inSharedListPtr) ;

//--------------------------------- Element constructor used by listmap
  public : static cCollectionElement_syntaxInstructionListForGrammarAnalysis * makeElement (const GALGAS_abstractSyntaxInstructionForGrammarAnalysis & in_mInstruction
                                                                                            COMMA_LOCATION_ARGS) ;

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_syntaxInstructionListForGrammarAnalysis extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler,
                                                                                const GALGAS_location & inErrorLocation
                                                                                COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_syntaxInstructionListForGrammarAnalysis constructor_emptyList (LOCATION_ARGS) ;

  public : static GALGAS_syntaxInstructionListForGrammarAnalysis constructor_listWithValue (const GALGAS_abstractSyntaxInstructionForGrammarAnalysis & inOperand0
                                                                                            COMMA_LOCATION_ARGS) ;

//--------------------------------- .= operator
  public : VIRTUAL_IN_DEBUG void dotAssign_operation (const GALGAS_syntaxInstructionListForGrammarAnalysis inOperand
                                                      COMMA_LOCATION_ARGS) ;

//--------------------------------- += operator
  public : VIRTUAL_IN_DEBUG void addAssign_operation (const GALGAS_abstractSyntaxInstructionForGrammarAnalysis & inOperand0
                                                      COMMA_LOCATION_ARGS) ;
//--------------------------------- . (concat) operator
  public : VIRTUAL_IN_DEBUG GALGAS_syntaxInstructionListForGrammarAnalysis operator_concat (const GALGAS_syntaxInstructionListForGrammarAnalysis & inOperand
                                                                                            COMMA_LOCATION_ARGS) const ;


//--------------------------------- Modifiers
  public : VIRTUAL_IN_DEBUG void modifier_popFirst (GALGAS_abstractSyntaxInstructionForGrammarAnalysis & outArgument0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_popLast (GALGAS_abstractSyntaxInstructionForGrammarAnalysis & outArgument0,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_prependValue (GALGAS_abstractSyntaxInstructionForGrammarAnalysis constinArgument0
                                                        COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMInstructionAtIndex (GALGAS_abstractSyntaxInstructionForGrammarAnalysis constinArgument0,
                                                                  GALGAS_uint constinArgument1,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) ;


//--------------------------------- Instance Methods
  public : VIRTUAL_IN_DEBUG void method_first (GALGAS_abstractSyntaxInstructionForGrammarAnalysis & outArgument0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG void method_last (GALGAS_abstractSyntaxInstructionForGrammarAnalysis & outArgument0,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_abstractSyntaxInstructionForGrammarAnalysis reader_mInstructionAtIndex (const GALGAS_uint & constinOperand0,
                                                                                                           C_Compiler * inCompiler
                                                                                                           COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_syntaxInstructionListForGrammarAnalysis reader_subListFromIndex (const GALGAS_uint & constinOperand0,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_syntaxInstructionListForGrammarAnalysis reader_subListWithRange (const GALGAS_uint & constinOperand0,
                                                                                                    const GALGAS_uint & constinOperand1,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
//--------------------------------- Friend

  friend class cEnumerator_syntaxInstructionListForGrammarAnalysis ;
 
} ; // End of GALGAS_syntaxInstructionListForGrammarAnalysis class

//---------------------------------------------------------------------------*
//   Enumerator declaration                                                  *
//---------------------------------------------------------------------------*

class cEnumerator_syntaxInstructionListForGrammarAnalysis : public cGenericAbstractEnumerator {
  public : cEnumerator_syntaxInstructionListForGrammarAnalysis (const GALGAS_syntaxInstructionListForGrammarAnalysis & inEnumeratedObject,
                                                                const bool inAscending) ;

//--- Current element access
  public : GALGAS_abstractSyntaxInstructionForGrammarAnalysis current_mInstruction (LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_syntaxInstructionListForGrammarAnalysis ;

//---------------------------------------------------------------------------*
//                                                                           *
//                @productionRuleListForGrammarAnalysis list                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_productionRuleListForGrammarAnalysis  ;

//---------------------------------------------------------------------------*

class GALGAS_productionRuleListForGrammarAnalysis : public AC_GALGAS_list {
//--------------------------------- Default constructor
  public : GALGAS_productionRuleListForGrammarAnalysis (void) ;

//--------------------------------- List constructor used by listmap
  public : GALGAS_productionRuleListForGrammarAnalysis (cSharedList * inSharedListPtr) ;

//--------------------------------- Element constructor used by listmap
  public : static cCollectionElement_productionRuleListForGrammarAnalysis * makeElement (const GALGAS_lstring & in_mLeftNonterminalSymbol,
                                                                                         const GALGAS_uint & in_mLeftNonterminalSymbolIndex,
                                                                                         const GALGAS_syntaxInstructionListForGrammarAnalysis & in_mInstructionList,
                                                                                         const GALGAS_uint & in_mProductionIndex
                                                                                         COMMA_LOCATION_ARGS) ;

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_productionRuleListForGrammarAnalysis extractObject (const GALGAS_object & inObject,
                                                                             C_Compiler * inCompiler,
                                                                             const GALGAS_location & inErrorLocation
                                                                             COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_productionRuleListForGrammarAnalysis constructor_emptyList (LOCATION_ARGS) ;

  public : static GALGAS_productionRuleListForGrammarAnalysis constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                                         const GALGAS_uint & inOperand1,
                                                                                         const GALGAS_syntaxInstructionListForGrammarAnalysis & inOperand2,
                                                                                         const GALGAS_uint & inOperand3
                                                                                         COMMA_LOCATION_ARGS) ;

//--------------------------------- .= operator
  public : VIRTUAL_IN_DEBUG void dotAssign_operation (const GALGAS_productionRuleListForGrammarAnalysis inOperand
                                                      COMMA_LOCATION_ARGS) ;

//--------------------------------- += operator
  public : VIRTUAL_IN_DEBUG void addAssign_operation (const GALGAS_lstring & inOperand0,
                                                      const GALGAS_uint & inOperand1,
                                                      const GALGAS_syntaxInstructionListForGrammarAnalysis & inOperand2,
                                                      const GALGAS_uint & inOperand3
                                                      COMMA_LOCATION_ARGS) ;
//--------------------------------- . (concat) operator
  public : VIRTUAL_IN_DEBUG GALGAS_productionRuleListForGrammarAnalysis operator_concat (const GALGAS_productionRuleListForGrammarAnalysis & inOperand
                                                                                         COMMA_LOCATION_ARGS) const ;


//--------------------------------- Modifiers
  public : VIRTUAL_IN_DEBUG void modifier_popFirst (GALGAS_lstring & outArgument0,
                                                    GALGAS_uint & outArgument1,
                                                    GALGAS_syntaxInstructionListForGrammarAnalysis & outArgument2,
                                                    GALGAS_uint & outArgument3,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_popLast (GALGAS_lstring & outArgument0,
                                                   GALGAS_uint & outArgument1,
                                                   GALGAS_syntaxInstructionListForGrammarAnalysis & outArgument2,
                                                   GALGAS_uint & outArgument3,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_prependValue (GALGAS_lstring constinArgument0,
                                                        GALGAS_uint constinArgument1,
                                                        GALGAS_syntaxInstructionListForGrammarAnalysis constinArgument2,
                                                        GALGAS_uint constinArgument3
                                                        COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMInstructionListAtIndex (GALGAS_syntaxInstructionListForGrammarAnalysis constinArgument0,
                                                                      GALGAS_uint constinArgument1,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMLeftNonterminalSymbolAtIndex (GALGAS_lstring constinArgument0,
                                                                            GALGAS_uint constinArgument1,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMLeftNonterminalSymbolIndexAtIndex (GALGAS_uint constinArgument0,
                                                                                 GALGAS_uint constinArgument1,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMProductionIndexAtIndex (GALGAS_uint constinArgument0,
                                                                      GALGAS_uint constinArgument1,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) ;


//--------------------------------- Instance Methods
  public : VIRTUAL_IN_DEBUG void method_first (GALGAS_lstring & outArgument0,
                                               GALGAS_uint & outArgument1,
                                               GALGAS_syntaxInstructionListForGrammarAnalysis & outArgument2,
                                               GALGAS_uint & outArgument3,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG void method_last (GALGAS_lstring & outArgument0,
                                              GALGAS_uint & outArgument1,
                                              GALGAS_syntaxInstructionListForGrammarAnalysis & outArgument2,
                                              GALGAS_uint & outArgument3,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_syntaxInstructionListForGrammarAnalysis reader_mInstructionListAtIndex (const GALGAS_uint & constinOperand0,
                                                                                                           C_Compiler * inCompiler
                                                                                                           COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_lstring reader_mLeftNonterminalSymbolAtIndex (const GALGAS_uint & constinOperand0,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_uint reader_mLeftNonterminalSymbolIndexAtIndex (const GALGAS_uint & constinOperand0,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_uint reader_mProductionIndexAtIndex (const GALGAS_uint & constinOperand0,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_productionRuleListForGrammarAnalysis reader_subListFromIndex (const GALGAS_uint & constinOperand0,
                                                                                                 C_Compiler * inCompiler
                                                                                                 COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_productionRuleListForGrammarAnalysis reader_subListWithRange (const GALGAS_uint & constinOperand0,
                                                                                                 const GALGAS_uint & constinOperand1,
                                                                                                 C_Compiler * inCompiler
                                                                                                 COMMA_LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
//--------------------------------- Friend

  friend class cEnumerator_productionRuleListForGrammarAnalysis ;
 
} ; // End of GALGAS_productionRuleListForGrammarAnalysis class

//---------------------------------------------------------------------------*
//   Enumerator declaration                                                  *
//---------------------------------------------------------------------------*

class cEnumerator_productionRuleListForGrammarAnalysis : public cGenericAbstractEnumerator {
  public : cEnumerator_productionRuleListForGrammarAnalysis (const GALGAS_productionRuleListForGrammarAnalysis & inEnumeratedObject,
                                                             const bool inAscending) ;

//--- Current element access
  public : GALGAS_lstring current_mLeftNonterminalSymbol (LOCATION_ARGS) const ;
  public : GALGAS_uint current_mLeftNonterminalSymbolIndex (LOCATION_ARGS) const ;
  public : GALGAS_syntaxInstructionListForGrammarAnalysis current_mInstructionList (LOCATION_ARGS) const ;
  public : GALGAS_uint current_mProductionIndex (LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_productionRuleListForGrammarAnalysis ;

//---------------------------------------------------------------------------*
//                                                                           *
//             @unusedNonTerminalSymbolMapForGrammarAnalysis map             *
//                                                                           *
//---------------------------------------------------------------------------*

class cMapElement_unusedNonTerminalSymbolMapForGrammarAnalysis ;

//---------------------------------------------------------------------------*

class GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis : public AC_GALGAS_map {
//--------------------------------- Default constructor
  public : GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis (void) ;

//--------------------------------- Handle copy
  public : GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis (const GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis & inSource) ;
  public : GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis & operator = (const GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis & inSource) ;

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis extractObject (const GALGAS_object & inObject,
                                                                                     C_Compiler * inCompiler,
                                                                                     const GALGAS_location & inErrorLocation
                                                                                     COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis constructor_emptyMap (LOCATION_ARGS) ;

  public : static GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis constructor_mapWithMapToOverride (const GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis & inOperand0
                                                                                                        COMMA_LOCATION_ARGS) ;


//--------------------------------- Modifiers
  public : VIRTUAL_IN_DEBUG void modifier_insertKey (GALGAS_lstring constinArgument0,
                                                     GALGAS_uint constinArgument1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMNonTerminalIndexForKey (GALGAS_uint constinArgument0,
                                                                      GALGAS_string constinArgument1,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) ;


//--------------------------------- Instance Methods
//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_uint reader_mNonTerminalIndexForKey (const GALGAS_string & constinOperand0,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis reader_overriddenMap (LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
//--------------------------------- 'with' accessors
  public : VIRTUAL_IN_DEBUG cMapElement_unusedNonTerminalSymbolMapForGrammarAnalysis * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                                 const GALGAS_string & inKey
                                                                                                                                 COMMA_LOCATION_ARGS) ;

//--------------------------------- Friend

  friend class cEnumerator_unusedNonTerminalSymbolMapForGrammarAnalysis ;
 
} ; // End of GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis class

//---------------------------------------------------------------------------*
//   Enumerator declaration                                                  *
//---------------------------------------------------------------------------*

class cEnumerator_unusedNonTerminalSymbolMapForGrammarAnalysis : public cGenericAbstractEnumerator {
  public : cEnumerator_unusedNonTerminalSymbolMapForGrammarAnalysis (const GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis & inEnumeratedObject,
                                                                     const bool inAscending) ;

//--- Current element access
  public : GALGAS_lstring current_lkey (LOCATION_ARGS) const ;
  public : GALGAS_uint current_mNonTerminalIndex (LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis ;

//--------------------------------- 'with' accessors
cCollectionElement * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                               GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis & ioMap,
                                                               GALGAS_string & inKey
                                                               COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                @nonTerminalSymbolMapForGrammarAnalysis map                *
//                                                                           *
//---------------------------------------------------------------------------*

class cMapElement_nonTerminalSymbolMapForGrammarAnalysis ;

//---------------------------------------------------------------------------*

extern const char * kSearchErrorMessage_nonTerminalSymbolMapForGrammarAnalysis_searchKey ;

//---------------------------------------------------------------------------*

class GALGAS_nonTerminalSymbolMapForGrammarAnalysis : public AC_GALGAS_map {
//--------------------------------- Default constructor
  public : GALGAS_nonTerminalSymbolMapForGrammarAnalysis (void) ;

//--------------------------------- Handle copy
  public : GALGAS_nonTerminalSymbolMapForGrammarAnalysis (const GALGAS_nonTerminalSymbolMapForGrammarAnalysis & inSource) ;
  public : GALGAS_nonTerminalSymbolMapForGrammarAnalysis & operator = (const GALGAS_nonTerminalSymbolMapForGrammarAnalysis & inSource) ;

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_nonTerminalSymbolMapForGrammarAnalysis extractObject (const GALGAS_object & inObject,
                                                                               C_Compiler * inCompiler,
                                                                               const GALGAS_location & inErrorLocation
                                                                               COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_nonTerminalSymbolMapForGrammarAnalysis constructor_emptyMap (LOCATION_ARGS) ;

  public : static GALGAS_nonTerminalSymbolMapForGrammarAnalysis constructor_mapWithMapToOverride (const GALGAS_nonTerminalSymbolMapForGrammarAnalysis & inOperand0
                                                                                                  COMMA_LOCATION_ARGS) ;


//--------------------------------- Modifiers
  public : VIRTUAL_IN_DEBUG void modifier_insertKey (GALGAS_lstring constinArgument0,
                                                     GALGAS_uint constinArgument1,
                                                     GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis constinArgument2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMNonTerminalIndexForKey (GALGAS_uint constinArgument0,
                                                                      GALGAS_string constinArgument1,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMNonterminalSymbolParametersMapForKey (GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis constinArgument0,
                                                                                    GALGAS_string constinArgument1,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) ;


//--------------------------------- Instance Methods
  public : VIRTUAL_IN_DEBUG void method_searchKey (GALGAS_lstring constinArgument0,
                                                   GALGAS_uint & outArgument1,
                                                   GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis & outArgument2,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const ;

//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_uint reader_mNonTerminalIndexForKey (const GALGAS_string & constinOperand0,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis reader_mNonterminalSymbolParametersMapForKey (const GALGAS_string & constinOperand0,
                                                                                                                             C_Compiler * inCompiler
                                                                                                                             COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_nonTerminalSymbolMapForGrammarAnalysis reader_overriddenMap (LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
//--------------------------------- 'with' accessors
  public : VIRTUAL_IN_DEBUG cMapElement_nonTerminalSymbolMapForGrammarAnalysis * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                           const GALGAS_string & inKey
                                                                                                                           COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG cMapElement_nonTerminalSymbolMapForGrammarAnalysis * readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                              const GALGAS_lstring & inKey
                                                                                                                              COMMA_LOCATION_ARGS) ;

//--------------------------------- Friend

  friend class cEnumerator_nonTerminalSymbolMapForGrammarAnalysis ;
 
} ; // End of GALGAS_nonTerminalSymbolMapForGrammarAnalysis class

//---------------------------------------------------------------------------*
//   Enumerator declaration                                                  *
//---------------------------------------------------------------------------*

class cEnumerator_nonTerminalSymbolMapForGrammarAnalysis : public cGenericAbstractEnumerator {
  public : cEnumerator_nonTerminalSymbolMapForGrammarAnalysis (const GALGAS_nonTerminalSymbolMapForGrammarAnalysis & inEnumeratedObject,
                                                               const bool inAscending) ;

//--- Current element access
  public : GALGAS_lstring current_lkey (LOCATION_ARGS) const ;
  public : GALGAS_uint current_mNonTerminalIndex (LOCATION_ARGS) const ;
  public : GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis current_mNonterminalSymbolParametersMap (LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_nonTerminalSymbolMapForGrammarAnalysis ;

//--------------------------------- 'with' accessors
cCollectionElement * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                               GALGAS_nonTerminalSymbolMapForGrammarAnalysis & ioMap,
                                                               GALGAS_string & inKey
                                                               COMMA_LOCATION_ARGS) ;

cCollectionElement * readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                  GALGAS_nonTerminalSymbolMapForGrammarAnalysis & ioMap,
                                                                  GALGAS_lstring & inKey
                                                                  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        @nonTerminalSymbolSortedListForGrammarAnalysis sorted list         *
//                                                                           *
//---------------------------------------------------------------------------*

class GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis : public AC_GALGAS_sortedlist {
//--------------------------------- Default constructor
  public : GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis (void) ;

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler,
                                                                                      const GALGAS_location & inErrorLocation
                                                                                      COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis constructor_emptySortedList (LOCATION_ARGS) ;

  public : static GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis constructor_sortedListWithValue (const GALGAS_lstring & inOperand0,
                                                                                                        const GALGAS_uint & inOperand1,
                                                                                                        const GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis & inOperand2
                                                                                                        COMMA_LOCATION_ARGS) ;

//--------------------------------- .= operator
  public : VIRTUAL_IN_DEBUG void dotAssign_operation (const GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis inOperand
                                                      COMMA_LOCATION_ARGS) ;

//--------------------------------- += operator
  public : VIRTUAL_IN_DEBUG void addAssign_operation (const GALGAS_lstring & inOperand0,
                                                      const GALGAS_uint & inOperand1,
                                                      const GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis & inOperand2
                                                      COMMA_LOCATION_ARGS) ;
//--------------------------------- . (concat) operator
  public : VIRTUAL_IN_DEBUG GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis operator_concat (const GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis & inOperand
                                                                                                  COMMA_LOCATION_ARGS) const ;


//--------------------------------- Modifiers
  public : VIRTUAL_IN_DEBUG void modifier_popGreatest (GALGAS_lstring & outArgument0,
                                                       GALGAS_uint & outArgument1,
                                                       GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis & outArgument2,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_popSmallest (GALGAS_lstring & outArgument0,
                                                       GALGAS_uint & outArgument1,
                                                       GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis & outArgument2,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) ;


//--------------------------------- Instance Methods
  public : VIRTUAL_IN_DEBUG void method_greatest (GALGAS_lstring & outArgument0,
                                                  GALGAS_uint & outArgument1,
                                                  GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis & outArgument2,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG void method_smallest (GALGAS_lstring & outArgument0,
                                                  GALGAS_uint & outArgument1,
                                                  GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis & outArgument2,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const ;

//--------------------------------- Class Methods

//--------------------------------- Readers

//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
//--------------------------------- Friend

  friend class cEnumerator_nonTerminalSymbolSortedListForGrammarAnalysis ;
 
} ; // End of GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis class

//---------------------------------------------------------------------------*
//   Enumerator declaration                                                  *
//---------------------------------------------------------------------------*

class cEnumerator_nonTerminalSymbolSortedListForGrammarAnalysis : public cGenericAbstractEnumerator {
  public : cEnumerator_nonTerminalSymbolSortedListForGrammarAnalysis (const GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis & inEnumeratedObject,
                                                                      const bool inAscending) ;

//--- Current element access
  public : GALGAS_lstring current_mNonTerminalSymbol (LOCATION_ARGS) const ;
  public : GALGAS_uint current_mNonTerminalIndex (LOCATION_ARGS) const ;
  public : GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis current_mNonterminalSymbolParametersMap (LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    @branchListForGrammarAnalysis list                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_branchListForGrammarAnalysis  ;

//---------------------------------------------------------------------------*

class GALGAS_branchListForGrammarAnalysis : public AC_GALGAS_list {
//--------------------------------- Default constructor
  public : GALGAS_branchListForGrammarAnalysis (void) ;

//--------------------------------- List constructor used by listmap
  public : GALGAS_branchListForGrammarAnalysis (cSharedList * inSharedListPtr) ;

//--------------------------------- Element constructor used by listmap
  public : static cCollectionElement_branchListForGrammarAnalysis * makeElement (const GALGAS_syntaxInstructionListForGrammarAnalysis & in_mSyntaxInstructionList
                                                                                 COMMA_LOCATION_ARGS) ;

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_branchListForGrammarAnalysis extractObject (const GALGAS_object & inObject,
                                                                     C_Compiler * inCompiler,
                                                                     const GALGAS_location & inErrorLocation
                                                                     COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_branchListForGrammarAnalysis constructor_emptyList (LOCATION_ARGS) ;

  public : static GALGAS_branchListForGrammarAnalysis constructor_listWithValue (const GALGAS_syntaxInstructionListForGrammarAnalysis & inOperand0
                                                                                 COMMA_LOCATION_ARGS) ;

//--------------------------------- .= operator
  public : VIRTUAL_IN_DEBUG void dotAssign_operation (const GALGAS_branchListForGrammarAnalysis inOperand
                                                      COMMA_LOCATION_ARGS) ;

//--------------------------------- += operator
  public : VIRTUAL_IN_DEBUG void addAssign_operation (const GALGAS_syntaxInstructionListForGrammarAnalysis & inOperand0
                                                      COMMA_LOCATION_ARGS) ;
//--------------------------------- . (concat) operator
  public : VIRTUAL_IN_DEBUG GALGAS_branchListForGrammarAnalysis operator_concat (const GALGAS_branchListForGrammarAnalysis & inOperand
                                                                                 COMMA_LOCATION_ARGS) const ;


//--------------------------------- Modifiers
  public : VIRTUAL_IN_DEBUG void modifier_popFirst (GALGAS_syntaxInstructionListForGrammarAnalysis & outArgument0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_popLast (GALGAS_syntaxInstructionListForGrammarAnalysis & outArgument0,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_prependValue (GALGAS_syntaxInstructionListForGrammarAnalysis constinArgument0
                                                        COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMSyntaxInstructionListAtIndex (GALGAS_syntaxInstructionListForGrammarAnalysis constinArgument0,
                                                                            GALGAS_uint constinArgument1,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) ;


//--------------------------------- Instance Methods
  public : VIRTUAL_IN_DEBUG void method_first (GALGAS_syntaxInstructionListForGrammarAnalysis & outArgument0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG void method_last (GALGAS_syntaxInstructionListForGrammarAnalysis & outArgument0,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_syntaxInstructionListForGrammarAnalysis reader_mSyntaxInstructionListAtIndex (const GALGAS_uint & constinOperand0,
                                                                                                                 C_Compiler * inCompiler
                                                                                                                 COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_branchListForGrammarAnalysis reader_subListFromIndex (const GALGAS_uint & constinOperand0,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_branchListForGrammarAnalysis reader_subListWithRange (const GALGAS_uint & constinOperand0,
                                                                                         const GALGAS_uint & constinOperand1,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
//--------------------------------- Friend

  friend class cEnumerator_branchListForGrammarAnalysis ;
 
} ; // End of GALGAS_branchListForGrammarAnalysis class

//---------------------------------------------------------------------------*
//   Enumerator declaration                                                  *
//---------------------------------------------------------------------------*

class cEnumerator_branchListForGrammarAnalysis : public cGenericAbstractEnumerator {
  public : cEnumerator_branchListForGrammarAnalysis (const GALGAS_branchListForGrammarAnalysis & inEnumeratedObject,
                                                     const bool inAscending) ;

//--- Current element access
  public : GALGAS_syntaxInstructionListForGrammarAnalysis current_mSyntaxInstructionList (LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_branchListForGrammarAnalysis ;

//---------------------------------------------------------------------------*
//                                                                           *
//                @syntaxComponentListForGrammarAnalysis list                *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_syntaxComponentListForGrammarAnalysis  ;

//---------------------------------------------------------------------------*

class GALGAS_syntaxComponentListForGrammarAnalysis : public AC_GALGAS_list {
//--------------------------------- Default constructor
  public : GALGAS_syntaxComponentListForGrammarAnalysis (void) ;

//--------------------------------- List constructor used by listmap
  public : GALGAS_syntaxComponentListForGrammarAnalysis (cSharedList * inSharedListPtr) ;

//--------------------------------- Element constructor used by listmap
  public : static cCollectionElement_syntaxComponentListForGrammarAnalysis * makeElement (const GALGAS_productionRuleListForGrammarAnalysis & in_mProductionRulesList,
                                                                                          const GALGAS_lstring & in_mSyntaxComponentName
                                                                                          COMMA_LOCATION_ARGS) ;

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_syntaxComponentListForGrammarAnalysis extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler,
                                                                              const GALGAS_location & inErrorLocation
                                                                              COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_syntaxComponentListForGrammarAnalysis constructor_emptyList (LOCATION_ARGS) ;

  public : static GALGAS_syntaxComponentListForGrammarAnalysis constructor_listWithValue (const GALGAS_productionRuleListForGrammarAnalysis & inOperand0,
                                                                                          const GALGAS_lstring & inOperand1
                                                                                          COMMA_LOCATION_ARGS) ;

//--------------------------------- .= operator
  public : VIRTUAL_IN_DEBUG void dotAssign_operation (const GALGAS_syntaxComponentListForGrammarAnalysis inOperand
                                                      COMMA_LOCATION_ARGS) ;

//--------------------------------- += operator
  public : VIRTUAL_IN_DEBUG void addAssign_operation (const GALGAS_productionRuleListForGrammarAnalysis & inOperand0,
                                                      const GALGAS_lstring & inOperand1
                                                      COMMA_LOCATION_ARGS) ;
//--------------------------------- . (concat) operator
  public : VIRTUAL_IN_DEBUG GALGAS_syntaxComponentListForGrammarAnalysis operator_concat (const GALGAS_syntaxComponentListForGrammarAnalysis & inOperand
                                                                                          COMMA_LOCATION_ARGS) const ;


//--------------------------------- Modifiers
  public : VIRTUAL_IN_DEBUG void modifier_popFirst (GALGAS_productionRuleListForGrammarAnalysis & outArgument0,
                                                    GALGAS_lstring & outArgument1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_popLast (GALGAS_productionRuleListForGrammarAnalysis & outArgument0,
                                                   GALGAS_lstring & outArgument1,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_prependValue (GALGAS_productionRuleListForGrammarAnalysis constinArgument0,
                                                        GALGAS_lstring constinArgument1
                                                        COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMProductionRulesListAtIndex (GALGAS_productionRuleListForGrammarAnalysis constinArgument0,
                                                                          GALGAS_uint constinArgument1,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMSyntaxComponentNameAtIndex (GALGAS_lstring constinArgument0,
                                                                          GALGAS_uint constinArgument1,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) ;


//--------------------------------- Instance Methods
  public : VIRTUAL_IN_DEBUG void method_first (GALGAS_productionRuleListForGrammarAnalysis & outArgument0,
                                               GALGAS_lstring & outArgument1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG void method_last (GALGAS_productionRuleListForGrammarAnalysis & outArgument0,
                                              GALGAS_lstring & outArgument1,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_productionRuleListForGrammarAnalysis reader_mProductionRulesListAtIndex (const GALGAS_uint & constinOperand0,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_lstring reader_mSyntaxComponentNameAtIndex (const GALGAS_uint & constinOperand0,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_syntaxComponentListForGrammarAnalysis reader_subListFromIndex (const GALGAS_uint & constinOperand0,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_syntaxComponentListForGrammarAnalysis reader_subListWithRange (const GALGAS_uint & constinOperand0,
                                                                                                  const GALGAS_uint & constinOperand1,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
//--------------------------------- Friend

  friend class cEnumerator_syntaxComponentListForGrammarAnalysis ;
 
} ; // End of GALGAS_syntaxComponentListForGrammarAnalysis class

//---------------------------------------------------------------------------*
//   Enumerator declaration                                                  *
//---------------------------------------------------------------------------*

class cEnumerator_syntaxComponentListForGrammarAnalysis : public cGenericAbstractEnumerator {
  public : cEnumerator_syntaxComponentListForGrammarAnalysis (const GALGAS_syntaxComponentListForGrammarAnalysis & inEnumeratedObject,
                                                              const bool inAscending) ;

//--- Current element access
  public : GALGAS_productionRuleListForGrammarAnalysis current_mProductionRulesList (LOCATION_ARGS) const ;
  public : GALGAS_lstring current_mSyntaxComponentName (LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_syntaxComponentListForGrammarAnalysis ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 @terminalSymbolsMapForGrammarAnalysis map                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cMapElement_terminalSymbolsMapForGrammarAnalysis ;

//---------------------------------------------------------------------------*

extern const char * kSearchErrorMessage_terminalSymbolsMapForGrammarAnalysis_searchKey ;

//---------------------------------------------------------------------------*

class GALGAS_terminalSymbolsMapForGrammarAnalysis : public AC_GALGAS_map {
//--------------------------------- Default constructor
  public : GALGAS_terminalSymbolsMapForGrammarAnalysis (void) ;

//--------------------------------- Handle copy
  public : GALGAS_terminalSymbolsMapForGrammarAnalysis (const GALGAS_terminalSymbolsMapForGrammarAnalysis & inSource) ;
  public : GALGAS_terminalSymbolsMapForGrammarAnalysis & operator = (const GALGAS_terminalSymbolsMapForGrammarAnalysis & inSource) ;

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_terminalSymbolsMapForGrammarAnalysis extractObject (const GALGAS_object & inObject,
                                                                             C_Compiler * inCompiler,
                                                                             const GALGAS_location & inErrorLocation
                                                                             COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_terminalSymbolsMapForGrammarAnalysis constructor_emptyMap (LOCATION_ARGS) ;

  public : static GALGAS_terminalSymbolsMapForGrammarAnalysis constructor_mapWithMapToOverride (const GALGAS_terminalSymbolsMapForGrammarAnalysis & inOperand0
                                                                                                COMMA_LOCATION_ARGS) ;


//--------------------------------- Modifiers
  public : VIRTUAL_IN_DEBUG void modifier_insertKey (GALGAS_lstring constinArgument0,
                                                     GALGAS_uint constinArgument1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMTerminalIndexForKey (GALGAS_uint constinArgument0,
                                                                   GALGAS_string constinArgument1,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) ;


//--------------------------------- Instance Methods
  public : VIRTUAL_IN_DEBUG void method_searchKey (GALGAS_lstring constinArgument0,
                                                   GALGAS_uint & outArgument1,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const ;

//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_uint reader_mTerminalIndexForKey (const GALGAS_string & constinOperand0,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_terminalSymbolsMapForGrammarAnalysis reader_overriddenMap (LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
//--------------------------------- 'with' accessors
  public : VIRTUAL_IN_DEBUG cMapElement_terminalSymbolsMapForGrammarAnalysis * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                         const GALGAS_string & inKey
                                                                                                                         COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG cMapElement_terminalSymbolsMapForGrammarAnalysis * readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                            const GALGAS_lstring & inKey
                                                                                                                            COMMA_LOCATION_ARGS) ;

//--------------------------------- Friend

  friend class cEnumerator_terminalSymbolsMapForGrammarAnalysis ;
 
} ; // End of GALGAS_terminalSymbolsMapForGrammarAnalysis class

//---------------------------------------------------------------------------*
//   Enumerator declaration                                                  *
//---------------------------------------------------------------------------*

class cEnumerator_terminalSymbolsMapForGrammarAnalysis : public cGenericAbstractEnumerator {
  public : cEnumerator_terminalSymbolsMapForGrammarAnalysis (const GALGAS_terminalSymbolsMapForGrammarAnalysis & inEnumeratedObject,
                                                             const bool inAscending) ;

//--- Current element access
  public : GALGAS_lstring current_lkey (LOCATION_ARGS) const ;
  public : GALGAS_uint current_mTerminalIndex (LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_terminalSymbolsMapForGrammarAnalysis ;

//--------------------------------- 'with' accessors
cCollectionElement * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                               GALGAS_terminalSymbolsMapForGrammarAnalysis & ioMap,
                                                               GALGAS_string & inKey
                                                               COMMA_LOCATION_ARGS) ;

cCollectionElement * readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                  GALGAS_terminalSymbolsMapForGrammarAnalysis & ioMap,
                                                                  GALGAS_lstring & inKey
                                                                  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'grammarAnalysisAndGeneration'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_grammarAnalysisAndGeneration (const GALGAS_lstring constinArgument0,
                                           const GALGAS_lstring constinArgument1,
                                           const GALGAS_uint constinArgument2,
                                           const GALGAS_string constinArgument3,
                                           const GALGAS_location constinArgument4,
                                           const GALGAS_terminalSymbolsMapForGrammarAnalysis constinArgument5,
                                           const GALGAS_syntaxComponentListForGrammarAnalysis constinArgument6,
                                           const GALGAS_nonTerminalSymbolMapForGrammarAnalysis constinArgument7,
                                           const GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis constinArgument8,
                                           const GALGAS_string constinArgument9,
                                           const GALGAS_string constinArgument10,
                                           const GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis constinArgument11,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            @abstractSyntaxInstructionForGrammarAnalysis class             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_abstractSyntaxInstructionForGrammarAnalysis ;

//---------------------------------------------------------------------------*

class GALGAS_abstractSyntaxInstructionForGrammarAnalysis : public AC_GALGAS_class {
//--- Constructor
  public : GALGAS_abstractSyntaxInstructionForGrammarAnalysis (void) ;

//---
  public : inline const cPtr_abstractSyntaxInstructionForGrammarAnalysis * ptr (void) const { return (const cPtr_abstractSyntaxInstructionForGrammarAnalysis *) mObjectPtr ; }

//--------------------------------- Constructor from pointer
  public : GALGAS_abstractSyntaxInstructionForGrammarAnalysis (const cPtr_abstractSyntaxInstructionForGrammarAnalysis * inSourcePtr) ;



//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_abstractSyntaxInstructionForGrammarAnalysis extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler,
                                                                                    const GALGAS_location & inErrorLocation
                                                                                    COMMA_LOCATION_ARGS) ;

//--------------------------------- Comparison
  public : enumComparisonResult objectCompare (const GALGAS_abstractSyntaxInstructionForGrammarAnalysis & inOperand) const ;

//--------------------------------- Modifiers

//--------------------------------- Instance Methods
//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_location reader_mStartLocation (LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
 
} ; // End of GALGAS_abstractSyntaxInstructionForGrammarAnalysis class


//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_abstractSyntaxInstructionForGrammarAnalysis ;

//---------------------------------------------------------------------------*
//                                                                           *
//              @nonTerminalInstructionForGrammarAnalysis class              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_nonTerminalInstructionForGrammarAnalysis ;

//---------------------------------------------------------------------------*

class GALGAS_nonTerminalInstructionForGrammarAnalysis : public GALGAS_abstractSyntaxInstructionForGrammarAnalysis {
//--- Constructor
  public : GALGAS_nonTerminalInstructionForGrammarAnalysis (void) ;

//---
  public : inline const cPtr_nonTerminalInstructionForGrammarAnalysis * ptr (void) const { return (const cPtr_nonTerminalInstructionForGrammarAnalysis *) mObjectPtr ; }

//--------------------------------- Constructor from pointer
  public : GALGAS_nonTerminalInstructionForGrammarAnalysis (const cPtr_nonTerminalInstructionForGrammarAnalysis * inSourcePtr) ;

//--- Insulate
  private : VIRTUAL_IN_DEBUG void insulate (LOCATION_ARGS) ;


//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_nonTerminalInstructionForGrammarAnalysis extractObject (const GALGAS_object & inObject,
                                                                                 C_Compiler * inCompiler,
                                                                                 const GALGAS_location & inErrorLocation
                                                                                 COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_nonTerminalInstructionForGrammarAnalysis constructor_new (const GALGAS_location & inOperand0,
                                                                                   const GALGAS_lstring & inOperand1,
                                                                                   const GALGAS_uint & inOperand2
                                                                                   COMMA_LOCATION_ARGS) ;

//--------------------------------- Comparison
  public : enumComparisonResult objectCompare (const GALGAS_nonTerminalInstructionForGrammarAnalysis & inOperand) const ;

//--------------------------------- Modifiers

//--------------------------------- Instance Methods
//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_uint reader_mNonterminalSymbolIndex (LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_lstring reader_mNonterminalSymbolName (LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
 
} ; // End of GALGAS_nonTerminalInstructionForGrammarAnalysis class


//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_nonTerminalInstructionForGrammarAnalysis ;

//---------------------------------------------------------------------------*
//                                                                           *
//                @repeatInstructionForGrammarAnalysis class                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_repeatInstructionForGrammarAnalysis ;

//---------------------------------------------------------------------------*

class GALGAS_repeatInstructionForGrammarAnalysis : public GALGAS_abstractSyntaxInstructionForGrammarAnalysis {
//--- Constructor
  public : GALGAS_repeatInstructionForGrammarAnalysis (void) ;

//---
  public : inline const cPtr_repeatInstructionForGrammarAnalysis * ptr (void) const { return (const cPtr_repeatInstructionForGrammarAnalysis *) mObjectPtr ; }

//--------------------------------- Constructor from pointer
  public : GALGAS_repeatInstructionForGrammarAnalysis (const cPtr_repeatInstructionForGrammarAnalysis * inSourcePtr) ;

//--- Insulate
  private : VIRTUAL_IN_DEBUG void insulate (LOCATION_ARGS) ;


//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_repeatInstructionForGrammarAnalysis extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler,
                                                                            const GALGAS_location & inErrorLocation
                                                                            COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_repeatInstructionForGrammarAnalysis constructor_new (const GALGAS_location & inOperand0,
                                                                              const GALGAS_branchListForGrammarAnalysis & inOperand1,
                                                                              const GALGAS_uint & inOperand2
                                                                              COMMA_LOCATION_ARGS) ;

//--------------------------------- Comparison
  public : enumComparisonResult objectCompare (const GALGAS_repeatInstructionForGrammarAnalysis & inOperand) const ;

//--------------------------------- Modifiers

//--------------------------------- Instance Methods
//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_uint reader_mAddedNonTerminalSymbolIndex (LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_branchListForGrammarAnalysis reader_mRepeatBranchList (LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
 
} ; // End of GALGAS_repeatInstructionForGrammarAnalysis class


//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_repeatInstructionForGrammarAnalysis ;

//---------------------------------------------------------------------------*
//                                                                           *
//                @selectInstructionForGrammarAnalysis class                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_selectInstructionForGrammarAnalysis ;

//---------------------------------------------------------------------------*

class GALGAS_selectInstructionForGrammarAnalysis : public GALGAS_abstractSyntaxInstructionForGrammarAnalysis {
//--- Constructor
  public : GALGAS_selectInstructionForGrammarAnalysis (void) ;

//---
  public : inline const cPtr_selectInstructionForGrammarAnalysis * ptr (void) const { return (const cPtr_selectInstructionForGrammarAnalysis *) mObjectPtr ; }

//--------------------------------- Constructor from pointer
  public : GALGAS_selectInstructionForGrammarAnalysis (const cPtr_selectInstructionForGrammarAnalysis * inSourcePtr) ;

//--- Insulate
  private : VIRTUAL_IN_DEBUG void insulate (LOCATION_ARGS) ;


//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_selectInstructionForGrammarAnalysis extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler,
                                                                            const GALGAS_location & inErrorLocation
                                                                            COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_selectInstructionForGrammarAnalysis constructor_new (const GALGAS_location & inOperand0,
                                                                              const GALGAS_branchListForGrammarAnalysis & inOperand1,
                                                                              const GALGAS_uint & inOperand2
                                                                              COMMA_LOCATION_ARGS) ;

//--------------------------------- Comparison
  public : enumComparisonResult objectCompare (const GALGAS_selectInstructionForGrammarAnalysis & inOperand) const ;

//--------------------------------- Modifiers

//--------------------------------- Instance Methods
//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_uint reader_mAddedNonTerminalSymbolIndex (LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_branchListForGrammarAnalysis reader_mSelectBranchList (LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
 
} ; // End of GALGAS_selectInstructionForGrammarAnalysis class


//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_selectInstructionForGrammarAnalysis ;

//---------------------------------------------------------------------------*
//                                                                           *
//               @terminalInstructionForGrammarAnalysis class                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_terminalInstructionForGrammarAnalysis ;

//---------------------------------------------------------------------------*

class GALGAS_terminalInstructionForGrammarAnalysis : public GALGAS_abstractSyntaxInstructionForGrammarAnalysis {
//--- Constructor
  public : GALGAS_terminalInstructionForGrammarAnalysis (void) ;

//---
  public : inline const cPtr_terminalInstructionForGrammarAnalysis * ptr (void) const { return (const cPtr_terminalInstructionForGrammarAnalysis *) mObjectPtr ; }

//--------------------------------- Constructor from pointer
  public : GALGAS_terminalInstructionForGrammarAnalysis (const cPtr_terminalInstructionForGrammarAnalysis * inSourcePtr) ;

//--- Insulate
  private : VIRTUAL_IN_DEBUG void insulate (LOCATION_ARGS) ;


//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_terminalInstructionForGrammarAnalysis extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler,
                                                                              const GALGAS_location & inErrorLocation
                                                                              COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_terminalInstructionForGrammarAnalysis constructor_new (const GALGAS_location & inOperand0,
                                                                                const GALGAS_lstring & inOperand1,
                                                                                const GALGAS_uint & inOperand2
                                                                                COMMA_LOCATION_ARGS) ;

//--------------------------------- Comparison
  public : enumComparisonResult objectCompare (const GALGAS_terminalInstructionForGrammarAnalysis & inOperand) const ;

//--------------------------------- Modifiers

//--------------------------------- Instance Methods
//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_uint reader_mTerminalSymbolIndex (LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_lstring reader_mTerminalSymbolName (LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
 
} ; // End of GALGAS_terminalInstructionForGrammarAnalysis class


//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_terminalInstructionForGrammarAnalysis ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Class for element of '@nonterminalSymbolLabelMapForGrammarAnalysis' map  *
//                                                                           *
//---------------------------------------------------------------------------*

class cMapElement_nonterminalSymbolLabelMapForGrammarAnalysis : public cMapElement {
//--- Map attributes
  public : GALGAS_signatureForGrammarAnalysis mAttribute_mFormalParametersList ;

//--- Constructor
  public : cMapElement_nonterminalSymbolLabelMapForGrammarAnalysis (const GALGAS_lstring & inKey,
                                                                    const GALGAS_signatureForGrammarAnalysis & in_mFormalParametersList
                                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cMapElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
// Class for element of '@unusedNonTerminalSymbolMapForGrammarAnalysis' map  *
//                                                                           *
//---------------------------------------------------------------------------*

class cMapElement_unusedNonTerminalSymbolMapForGrammarAnalysis : public cMapElement {
//--- Map attributes
  public : GALGAS_uint mAttribute_mNonTerminalIndex ;

//--- Constructor
  public : cMapElement_unusedNonTerminalSymbolMapForGrammarAnalysis (const GALGAS_lstring & inKey,
                                                                     const GALGAS_uint & in_mNonTerminalIndex
                                                                     COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cMapElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Class for element of '@nonTerminalSymbolMapForGrammarAnalysis' map     *
//                                                                           *
//---------------------------------------------------------------------------*

class cMapElement_nonTerminalSymbolMapForGrammarAnalysis : public cMapElement {
//--- Map attributes
  public : GALGAS_uint mAttribute_mNonTerminalIndex ;
  public : GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis mAttribute_mNonterminalSymbolParametersMap ;

//--- Constructor
  public : cMapElement_nonTerminalSymbolMapForGrammarAnalysis (const GALGAS_lstring & inKey,
                                                               const GALGAS_uint & in_mNonTerminalIndex,
                                                               const GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis & in_mNonterminalSymbolParametersMap
                                                               COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cMapElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Class for element of '@terminalSymbolsMapForGrammarAnalysis' map      *
//                                                                           *
//---------------------------------------------------------------------------*

class cMapElement_terminalSymbolsMapForGrammarAnalysis : public cMapElement {
//--- Map attributes
  public : GALGAS_uint mAttribute_mTerminalIndex ;

//--- Constructor
  public : cMapElement_terminalSymbolsMapForGrammarAnalysis (const GALGAS_lstring & inKey,
                                                             const GALGAS_uint & in_mTerminalIndex
                                                             COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cMapElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

#include "separateHeaderFor_abstractSyntaxInstructionForGrammarAnalysis.h"

#include "separateHeaderFor_nonTerminalInstructionForGrammarAnalysis.h"

#include "separateHeaderFor_repeatInstructionForGrammarAnalysis.h"

#include "separateHeaderFor_selectInstructionForGrammarAnalysis.h"

#include "separateHeaderFor_terminalInstructionForGrammarAnalysis.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

#endif
