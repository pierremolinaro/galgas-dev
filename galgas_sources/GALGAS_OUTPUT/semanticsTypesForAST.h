//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'semanticsTypesForAST.h'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       may 6th, 2010, at 15h35'22"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semanticsTypesForAST_DEFINED
#define semanticsTypesForAST_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticExpressionAST ;
class cPtr_semanticExpressionAST ;
class GGS_semanticExpressionListAST ;
class GGS_selfInExpressionAST ;
class cPtr_selfInExpressionAST ;
class GGS_hereExpressionAST ;
class cPtr_hereExpressionAST ;
class GGS_trueExpressionAST ;
class cPtr_trueExpressionAST ;
class GGS_falseExpressionAST ;
class cPtr_falseExpressionAST ;
class GGS_literalCharExpressionAST ;
class cPtr_literalCharExpressionAST ;
class GGS_literalStringExpressionAST ;
class cPtr_literalStringExpressionAST ;
class GGS_literalDoubleExpressionAST ;
class cPtr_literalDoubleExpressionAST ;
class GGS_literalUIntExpressionAST ;
class cPtr_literalUIntExpressionAST ;
class GGS_literalUInt64ExpressionAST ;
class cPtr_literalUInt64ExpressionAST ;
class GGS_literalSIntExpressionAST ;
class cPtr_literalSIntExpressionAST ;
class GGS_literalSInt64ExpressionAST ;
class cPtr_literalSInt64ExpressionAST ;
class GGS_constructorExpressionAST ;
class cPtr_constructorExpressionAST ;
class GGS_readerCallExpressionAST ;
class cPtr_readerCallExpressionAST ;
class GGS_optionExpressionAST ;
class cPtr_optionExpressionAST ;
class GGS_concatExpressionAST ;
class cPtr_concatExpressionAST ;
class GGS_orExpressionAST ;
class cPtr_orExpressionAST ;
class GGS_xorExpressionAST ;
class cPtr_xorExpressionAST ;
class GGS_andExpressionAST ;
class cPtr_andExpressionAST ;
class GGS_equalExpressionAST ;
class cPtr_equalExpressionAST ;
class GGS_notEqualExpressionAST ;
class cPtr_notEqualExpressionAST ;
class GGS_lowerOrEqualExpressionAST ;
class cPtr_lowerOrEqualExpressionAST ;
class GGS_greaterOrEqualExpressionAST ;
class cPtr_greaterOrEqualExpressionAST ;
class GGS_strictGreaterExpressionAST ;
class cPtr_strictGreaterExpressionAST ;
class GGS_strictLowerExpressionAST ;
class cPtr_strictLowerExpressionAST ;
class GGS_rightShiftExpressionAST ;
class cPtr_rightShiftExpressionAST ;
class GGS_leftShiftExpressionAST ;
class cPtr_leftShiftExpressionAST ;
class GGS_addExpressionAST ;
class cPtr_addExpressionAST ;
class GGS_subExpressionAST ;
class cPtr_subExpressionAST ;
class GGS_multiplicationExpressionAST ;
class cPtr_multiplicationExpressionAST ;
class GGS_divisionExpressionAST ;
class cPtr_divisionExpressionAST ;
class GGS_moduloExpressionAST ;
class cPtr_moduloExpressionAST ;
class GGS_unaryMinusExpressionAST ;
class cPtr_unaryMinusExpressionAST ;
class GGS_notExpressionAST ;
class cPtr_notExpressionAST ;
class GGS_negateExpressionAST ;
class cPtr_negateExpressionAST ;
class GGS_ifExpressionAST ;
class cPtr_ifExpressionAST ;
class GGS_functionCallExpressionAST ;
class cPtr_functionCallExpressionAST ;
class GGS_varInExpressionAST ;
class cPtr_varInExpressionAST ;
class GGS_literalTypeInExpressionAST ;
class cPtr_literalTypeInExpressionAST ;
class GGS_castInExpressionAST ;
class cPtr_castInExpressionAST ;
class GGS_filewrapperObjectInstanciationInExpressionAST ;
class cPtr_filewrapperObjectInstanciationInExpressionAST ;
class GGS_filewrapperInExpressionAST ;
class cPtr_filewrapperInExpressionAST ;
class GGS_filewrapperTemplateInExpressionAST ;
class cPtr_filewrapperTemplateInExpressionAST ;
class GGS_formalArgumentPassingModeAST ;
class GGS_formalParameterListAST ;
class GGS_formalInputParameterListAST ;
class GGS_actualParameterAST ;
class cPtr_actualParameterAST ;
class GGS_outputActualParameterAST ;
class cPtr_outputActualParameterAST ;
class GGS_outputInputActualParameterAST ;
class cPtr_outputInputActualParameterAST ;
class GGS_inputActualParameterAST ;
class cPtr_inputActualParameterAST ;
class GGS_inputJokerActualParameterAST ;
class cPtr_inputJokerActualParameterAST ;
class GGS_actualParameterListAST ;
class GGS_actualInputParameterListAST ;
class GGS_syntaxInstructionAST ;
class cPtr_syntaxInstructionAST ;
class GGS_semanticInstructionAST ;
class cPtr_semanticInstructionAST ;
class GGS_semanticInstructionListAST ;
class GGS_semanticDeclarationAST ;
class cPtr_semanticDeclarationAST ;
class GGS_semanticDeclarationListAST ;
class GGS_externRoutineDeclarationAST ;
class cPtr_externRoutineDeclarationAST ;
class GGS_routinePrototypeDeclarationAST ;
class cPtr_routinePrototypeDeclarationAST ;
class GGS_routineDeclarationAST ;
class cPtr_routineDeclarationAST ;
class GGS_externFunctionDeclarationAST ;
class cPtr_externFunctionDeclarationAST ;
class GGS_functionDeclarationAST ;
class cPtr_functionDeclarationAST ;
class GGS_lazyFunctionDeclarationAST ;
class cPtr_lazyFunctionDeclarationAST ;
class GGS_localVariableDeclarationAST ;
class cPtr_localVariableDeclarationAST ;
class GGS_localVariableDeclarationWithInitializationAST ;
class cPtr_localVariableDeclarationWithInitializationAST ;
class GGS_localVariableDeclarationWithAssignmentAST ;
class cPtr_localVariableDeclarationWithAssignmentAST ;
class GGS_localConstantDeclarationWithSourceExpressionAST ;
class cPtr_localConstantDeclarationWithSourceExpressionAST ;
class GGS_localConstantDeclarationWithConstructorCallAST ;
class cPtr_localConstantDeclarationWithConstructorCallAST ;
class GGS_assignmentInstructionAST ;
class cPtr_assignmentInstructionAST ;
class GGS_appendInstructionAST ;
class cPtr_appendInstructionAST ;
class GGS_sendInstructionAST ;
class cPtr_sendInstructionAST ;
class GGS_foreachInstructionEnumeratedObjectElementAST ;
class cPtr_foreachInstructionEnumeratedObjectElementAST ;
class GGS_foreachInstructionJokerAST ;
class cPtr_foreachInstructionJokerAST ;
class GGS_foreachInstructionEnumeratedConstantAST ;
class cPtr_foreachInstructionEnumeratedConstantAST ;
class GGS_foreachInstructionEnumeratedObjectElementListAST ;
class GGS_foreachInstructionEnumeratedObjectListAST ;
class GGS_foreachInstructionAST ;
class cPtr_foreachInstructionAST ;
class GGS_ifBranchListAST ;
class GGS_ifInstructionAST ;
class cPtr_ifInstructionAST ;
class GGS_methodCallInstructionAST ;
class cPtr_methodCallInstructionAST ;
class GGS_modifierCallInstructionAST ;
class cPtr_modifierCallInstructionAST ;
class GGS_errorInstructionAST ;
class cPtr_errorInstructionAST ;
class GGS_warningInstructionAST ;
class cPtr_warningInstructionAST ;
class GGS_routineCallInstructionAST ;
class cPtr_routineCallInstructionAST ;
class GGS_matchEntryAST ;
class cPtr_matchEntryAST ;
class GGS_matchEntryListAST ;
class GGS_constantMatchEntryAST ;
class cPtr_constantMatchEntryAST ;
class GGS_classMatchEntryAST ;
class cPtr_classMatchEntryAST ;
class GGS_matchInstructionBranchListAST ;
class GGS_matchInstructionAST ;
class cPtr_matchInstructionAST ;
class GGS_castInstructionBranchListAST ;
class GGS_elseOrDefaultForCastInstructionAST ;
class cPtr_elseOrDefaultForCastInstructionAST ;
class GGS_elseForCastInstructionAST ;
class cPtr_elseForCastInstructionAST ;
class GGS_defaultForCastInstructionAST ;
class cPtr_defaultForCastInstructionAST ;
class GGS_castInstructionAST ;
class cPtr_castInstructionAST ;
class GGS_addInstructionAST ;
class cPtr_addInstructionAST ;
class GGS_removeInstructionAST ;
class cPtr_removeInstructionAST ;
class GGS_incrementInstructionAST ;
class cPtr_incrementInstructionAST ;
class GGS_decrementInstructionAST ;
class cPtr_decrementInstructionAST ;
class GGS_loopInstructionAST ;
class cPtr_loopInstructionAST ;
class GGS_messageInstructionAST ;
class cPtr_messageInstructionAST ;
class GGS_logListAST ;
class GGS_logInstructionAST ;
class cPtr_logInstructionAST ;
class GGS_grammarInstructionAST ;
class cPtr_grammarInstructionAST ;
class GGS_withInstructionAST ;
class cPtr_withInstructionAST ;
class GGS_switchBranchesAST ;
class GGS_switchInstructionAST ;
class cPtr_switchInstructionAST ;
class GGS_typeMethodCallInstructionAST ;
class cPtr_typeMethodCallInstructionAST ;
class GGS_abstracMultiMethodListAST ;
class GGS_abstractMultiMethodListMapAST ;
class GGS_multiMethodListAST ;
class GGS_multiMethodListMapAST ;
class GGS_overridingMultiMethodListAST ;
class GGS_overridingMultiMethodListMapAST ;
class GGS_abstractMultiReaderListAST ;
class GGS_abstractMultiReaderListMapAST ;
class GGS_multiReaderListAST ;
class GGS_multiReaderListMapAST ;
class GGS_overridingMultiReaderListAST ;
class GGS_overridingMultiReaderListMapAST ;
class GGS_semanticDeclarationStructAST ;
class GGS_attributeInCollectionListAST ;
class GGS_listmapDeclarationAST ;
class cPtr_listmapDeclarationAST ;
class GGS_mapAutomatonMessageKind ;
class GGS_mapStateTransitionList ;
class GGS_mapStateList ;
class GGS_insertMethodListAST ;
class GGS_mapSearchMethodListAST ;
class GGS_mapRemoveMethodListAST ;
class GGS_insertOrReplaceDeclarationListAST ;
class GGS_mapDeclarationAST ;
class cPtr_mapDeclarationAST ;
class GGS_mapProxyDeclarationAST ;
class cPtr_mapProxyDeclarationAST ;
class GGS_abstractMethodDefinitionListAST ;
class GGS_methodDefinitionListAST ;
class GGS_lazyAttributeListAST ;
class GGS_classDeclarationAST ;
class cPtr_classDeclarationAST ;
class GGS_listDeclarationAST ;
class cPtr_listDeclarationAST ;
class GGS_structDeclarationAST ;
class cPtr_structDeclarationAST ;
class GGS_sortedListSortDescriptorListAST ;
class GGS_sortedListDeclarationAST ;
class cPtr_sortedListDeclarationAST ;
class GGS_enumMessageAssociationListAST ;
class GGS_enumMessageListAST ;
class GGS_enumDeclarationAST ;
class cPtr_enumDeclarationAST ;
class GGS_filewrapperTemplateListAST ;
class GGS_filewrapperDeclarationAST ;
class cPtr_filewrapperDeclarationAST ;
class GGS_semanticsComponentAST ;
class cPtr_semanticsComponentAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_semanticExpressionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_semanticExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_semanticExpressionAST : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_semanticExpressionAST (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_semanticExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_semanticExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_semanticExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_semanticExpressionAST * getPtr (void) const {
    return (cPtr_semanticExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_semanticExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_semanticExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_semanticExpressionAST *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_semanticExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__semanticExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@semanticExpressionListAST'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_semanticExpressionListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_semanticExpressionListAST ;

//---------------------------------------------------------------------------*

class GGS_semanticExpressionListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_semanticExpressionListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_semanticExpressionListAST constructor_emptyList (void) ;
  public : static GGS_semanticExpressionListAST constructor_listWithValue (const GGS_semanticExpressionAST & argument_0,
                                const GGS_location & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_semanticExpressionListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_semanticExpressionListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_semanticExpressionListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_semanticExpressionListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_semanticExpressionAST & _out_0,
                              GGS_location & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_semanticExpressionAST & _out_0,
                             GGS_location & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_semanticExpressionAST & _out_0,
                                GGS_location & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_semanticExpressionAST & _out_0,
                                 GGS_location & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_semanticExpressionListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_semanticExpressionAST & argument_0,
                                const GGS_location & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_semanticExpressionListAST operator_concat (const GGS_semanticExpressionListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_semanticExpressionAST & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_semanticExpressionAST & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_semanticExpressionAST & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_semanticExpressionAST 
  reader_mExpressionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_location 
  reader_mEndOfExpressionLocationAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMExpressionAtIndex (C_Compiler & inLexique,
                              const GGS_semanticExpressionAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMEndOfExpressionLocationAtIndex (C_Compiler & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_semanticExpressionListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_semanticExpressionListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_semanticExpressionAST   & _mExpression (LOCATION_ARGS) const ;
    public : /* const */ GGS_location   & _mEndOfExpressionLocation (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_selfInExpressionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_selfInExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_selfInExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_selfInExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_selfInExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_selfInExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_selfInExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_selfInExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_selfInExpressionAST * getPtr (void) const {
    return (cPtr_selfInExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mSelfLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_selfInExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_selfInExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_selfInExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_selfInExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__selfInExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_hereExpressionAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_hereExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_hereExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_hereExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_hereExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_hereExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_hereExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_hereExpressionAST constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_hereExpressionAST * getPtr (void) const {
    return (cPtr_hereExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_hereExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_hereExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_hereExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_hereExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__hereExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_trueExpressionAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_trueExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_trueExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_trueExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_trueExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_trueExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_trueExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_trueExpressionAST constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_trueExpressionAST * getPtr (void) const {
    return (cPtr_trueExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_trueExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_trueExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_trueExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_trueExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__trueExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_falseExpressionAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_falseExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_falseExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_falseExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_falseExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_falseExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_falseExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_falseExpressionAST constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_falseExpressionAST * getPtr (void) const {
    return (cPtr_falseExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_falseExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_falseExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_falseExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_falseExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__falseExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_literalCharExpressionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_literalCharExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_literalCharExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_literalCharExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_literalCharExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_literalCharExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_literalCharExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_literalCharExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_lchar & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_literalCharExpressionAST * getPtr (void) const {
    return (cPtr_literalCharExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lchar  reader_mCharacter (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_literalCharExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_literalCharExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_literalCharExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_literalCharExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__literalCharExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_literalStringExpressionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_literalStringExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_literalStringExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_literalStringExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_literalStringExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_literalStringExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_literalStringExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_literalStringExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_stringlist & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_literalStringExpressionAST * getPtr (void) const {
    return (cPtr_literalStringExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_stringlist  reader_mStringSequence (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_literalStringExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_literalStringExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_literalStringExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_literalStringExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__literalStringExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_literalDoubleExpressionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_literalDoubleExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_literalDoubleExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_literalDoubleExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_literalDoubleExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_literalDoubleExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_literalDoubleExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_literalDoubleExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_ldouble & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_literalDoubleExpressionAST * getPtr (void) const {
    return (cPtr_literalDoubleExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_ldouble  reader_mValue (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_literalDoubleExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_literalDoubleExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_literalDoubleExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_literalDoubleExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__literalDoubleExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_literalUIntExpressionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_literalUIntExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_literalUIntExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_literalUIntExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_literalUIntExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_literalUIntExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_literalUIntExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_literalUIntExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_luint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_literalUIntExpressionAST * getPtr (void) const {
    return (cPtr_literalUIntExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_luint  reader_mValue (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_literalUIntExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_literalUIntExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_literalUIntExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_literalUIntExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__literalUIntExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_literalUInt64ExpressionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_literalUInt64ExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_literalUInt64ExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_literalUInt64ExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_literalUInt64ExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_literalUInt64ExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_literalUInt64ExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_literalUInt64ExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_luint64 & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_literalUInt64ExpressionAST * getPtr (void) const {
    return (cPtr_literalUInt64ExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_luint64  reader_mValue (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_literalUInt64ExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_literalUInt64ExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_literalUInt64ExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_literalUInt64ExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__literalUInt64ExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_literalSIntExpressionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_literalSIntExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_literalSIntExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_literalSIntExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_literalSIntExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_literalSIntExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_literalSIntExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_literalSIntExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_lsint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_literalSIntExpressionAST * getPtr (void) const {
    return (cPtr_literalSIntExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lsint  reader_mValue (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_literalSIntExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_literalSIntExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_literalSIntExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_literalSIntExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__literalSIntExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_literalSInt64ExpressionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_literalSInt64ExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_literalSInt64ExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_literalSInt64ExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_literalSInt64ExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_literalSInt64ExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_literalSInt64ExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_literalSInt64ExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_lsint64 & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_literalSInt64ExpressionAST * getPtr (void) const {
    return (cPtr_literalSInt64ExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lsint64  reader_mValue (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_literalSInt64ExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_literalSInt64ExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_literalSInt64ExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_literalSInt64ExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__literalSInt64ExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_constructorExpressionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_constructorExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_constructorExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_constructorExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_constructorExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_constructorExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_constructorExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_constructorExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticExpressionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_constructorExpressionAST * getPtr (void) const {
    return (cPtr_constructorExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mConstructorName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionListAST  reader_mExpressions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_constructorExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_constructorExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_constructorExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_constructorExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__constructorExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_readerCallExpressionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_readerCallExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_readerCallExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_readerCallExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_readerCallExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_readerCallExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_readerCallExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_readerCallExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpressionAST & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticExpressionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_readerCallExpressionAST * getPtr (void) const {
    return (cPtr_readerCallExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpressionAST  reader_mReceiver (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mReaderName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionListAST  reader_mExpressions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_readerCallExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_readerCallExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_readerCallExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_readerCallExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__readerCallExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_optionExpressionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_optionExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_optionExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_optionExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_optionExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_optionExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_optionExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_optionExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_optionExpressionAST * getPtr (void) const {
    return (cPtr_optionExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mOptionComponentName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mOptionEntryName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mOptionReaderName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_optionExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_optionExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_optionExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_optionExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__optionExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_concatExpressionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_concatExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_concatExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_concatExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_concatExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_concatExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_concatExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_concatExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_concatExpressionAST * getPtr (void) const {
    return (cPtr_concatExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_concatExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_concatExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_concatExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_concatExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__concatExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_orExpressionAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_orExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_orExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_orExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_orExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_orExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_orExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_orExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_orExpressionAST * getPtr (void) const {
    return (cPtr_orExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_orExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_orExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_orExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_orExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__orExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_xorExpressionAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_xorExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_xorExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_xorExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_xorExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_xorExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_xorExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_xorExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_xorExpressionAST * getPtr (void) const {
    return (cPtr_xorExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_xorExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_xorExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_xorExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_xorExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__xorExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_andExpressionAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_andExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_andExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_andExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_andExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_andExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_andExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_andExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_andExpressionAST * getPtr (void) const {
    return (cPtr_andExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_andExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_andExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_andExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_andExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__andExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_equalExpressionAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_equalExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_equalExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_equalExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_equalExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_equalExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_equalExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_equalExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_equalExpressionAST * getPtr (void) const {
    return (cPtr_equalExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_equalExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_equalExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_equalExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_equalExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__equalExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_notEqualExpressionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_notEqualExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_notEqualExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_notEqualExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_notEqualExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_notEqualExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_notEqualExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_notEqualExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_notEqualExpressionAST * getPtr (void) const {
    return (cPtr_notEqualExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_notEqualExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_notEqualExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_notEqualExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_notEqualExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__notEqualExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_lowerOrEqualExpressionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_lowerOrEqualExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_lowerOrEqualExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_lowerOrEqualExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_lowerOrEqualExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_lowerOrEqualExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_lowerOrEqualExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lowerOrEqualExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lowerOrEqualExpressionAST * getPtr (void) const {
    return (cPtr_lowerOrEqualExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lowerOrEqualExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lowerOrEqualExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_lowerOrEqualExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_lowerOrEqualExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__lowerOrEqualExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_greaterOrEqualExpressionAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_greaterOrEqualExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_greaterOrEqualExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_greaterOrEqualExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_greaterOrEqualExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_greaterOrEqualExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_greaterOrEqualExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_greaterOrEqualExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_greaterOrEqualExpressionAST * getPtr (void) const {
    return (cPtr_greaterOrEqualExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_greaterOrEqualExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_greaterOrEqualExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_greaterOrEqualExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_greaterOrEqualExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__greaterOrEqualExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_strictGreaterExpressionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_strictGreaterExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_strictGreaterExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_strictGreaterExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_strictGreaterExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_strictGreaterExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_strictGreaterExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_strictGreaterExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_strictGreaterExpressionAST * getPtr (void) const {
    return (cPtr_strictGreaterExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_strictGreaterExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_strictGreaterExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_strictGreaterExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_strictGreaterExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__strictGreaterExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_strictLowerExpressionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_strictLowerExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_strictLowerExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_strictLowerExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_strictLowerExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_strictLowerExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_strictLowerExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_strictLowerExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_strictLowerExpressionAST * getPtr (void) const {
    return (cPtr_strictLowerExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_strictLowerExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_strictLowerExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_strictLowerExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_strictLowerExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__strictLowerExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_rightShiftExpressionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_rightShiftExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_rightShiftExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_rightShiftExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_rightShiftExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_rightShiftExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_rightShiftExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_rightShiftExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_rightShiftExpressionAST * getPtr (void) const {
    return (cPtr_rightShiftExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_rightShiftExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_rightShiftExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_rightShiftExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_rightShiftExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__rightShiftExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_leftShiftExpressionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_leftShiftExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_leftShiftExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_leftShiftExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_leftShiftExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_leftShiftExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_leftShiftExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_leftShiftExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_leftShiftExpressionAST * getPtr (void) const {
    return (cPtr_leftShiftExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_leftShiftExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_leftShiftExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_leftShiftExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_leftShiftExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__leftShiftExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_addExpressionAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_addExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_addExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_addExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_addExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_addExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_addExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_addExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_addExpressionAST * getPtr (void) const {
    return (cPtr_addExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_addExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_addExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_addExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_addExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__addExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_subExpressionAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_subExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_subExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_subExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_subExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_subExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_subExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_subExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_subExpressionAST * getPtr (void) const {
    return (cPtr_subExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_subExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_subExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_subExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_subExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__subExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_multiplicationExpressionAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_multiplicationExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_multiplicationExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_multiplicationExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_multiplicationExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_multiplicationExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_multiplicationExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_multiplicationExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_multiplicationExpressionAST * getPtr (void) const {
    return (cPtr_multiplicationExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_multiplicationExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_multiplicationExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_multiplicationExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_multiplicationExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__multiplicationExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_divisionExpressionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_divisionExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_divisionExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_divisionExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_divisionExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_divisionExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_divisionExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_divisionExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_divisionExpressionAST * getPtr (void) const {
    return (cPtr_divisionExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_divisionExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_divisionExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_divisionExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_divisionExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__divisionExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_moduloExpressionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_moduloExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_moduloExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_moduloExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_moduloExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_moduloExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_moduloExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_moduloExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_moduloExpressionAST * getPtr (void) const {
    return (cPtr_moduloExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_moduloExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_moduloExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_moduloExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_moduloExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__moduloExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_unaryMinusExpressionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_unaryMinusExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_unaryMinusExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_unaryMinusExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_unaryMinusExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_unaryMinusExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_unaryMinusExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_unaryMinusExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_unaryMinusExpressionAST * getPtr (void) const {
    return (cPtr_unaryMinusExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_unaryMinusExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_unaryMinusExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_unaryMinusExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_unaryMinusExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__unaryMinusExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_notExpressionAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_notExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_notExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_notExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_notExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_notExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_notExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_notExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_notExpressionAST * getPtr (void) const {
    return (cPtr_notExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_notExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_notExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_notExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_notExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__notExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_negateExpressionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_negateExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_negateExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_negateExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_negateExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_negateExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_negateExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_negateExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_negateExpressionAST * getPtr (void) const {
    return (cPtr_negateExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_negateExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_negateExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_negateExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_negateExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__negateExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_ifExpressionAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ifExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_ifExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_ifExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_ifExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_ifExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_ifExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_ifExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpressionAST & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ifExpressionAST * getPtr (void) const {
    return (cPtr_ifExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpressionAST  reader_mIfExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mThenExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mElseExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ifExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ifExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_ifExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ifExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__ifExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_functionCallExpressionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_functionCallExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_functionCallExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_functionCallExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_functionCallExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_functionCallExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_functionCallExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_functionCallExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_semanticExpressionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_functionCallExpressionAST * getPtr (void) const {
    return (cPtr_functionCallExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mFunctionName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionListAST  reader_mExpressions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_functionCallExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_functionCallExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_functionCallExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_functionCallExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__functionCallExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_varInExpressionAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_varInExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_varInExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_varInExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_varInExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_varInExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_varInExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_varInExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_varInExpressionAST * getPtr (void) const {
    return (cPtr_varInExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mVarName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructFieldList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_varInExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_varInExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_varInExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_varInExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__varInExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_literalTypeInExpressionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_literalTypeInExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_literalTypeInExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_literalTypeInExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_literalTypeInExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_literalTypeInExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_literalTypeInExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_literalTypeInExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_literalTypeInExpressionAST * getPtr (void) const {
    return (cPtr_literalTypeInExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mVarName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_literalTypeInExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_literalTypeInExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_literalTypeInExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_literalTypeInExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__literalTypeInExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_castInExpressionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_castInExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_castInExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_castInExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_castInExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_castInExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_castInExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_castInExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpressionAST & argument_0,
                                const GGS_bool& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticExpressionAST & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_castInExpressionAST * getPtr (void) const {
    return (cPtr_castInExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpressionAST  reader_mReceiverExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mUseKindOfClass (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mErrorLocationExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_castInExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_castInExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_castInExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_castInExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__castInExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//     GALGAS class 'GGS_filewrapperObjectInstanciationInExpressionAST'      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_filewrapperObjectInstanciationInExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_filewrapperObjectInstanciationInExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_filewrapperObjectInstanciationInExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_filewrapperObjectInstanciationInExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_filewrapperObjectInstanciationInExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_filewrapperObjectInstanciationInExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_filewrapperObjectInstanciationInExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_filewrapperObjectInstanciationInExpressionAST * getPtr (void) const {
    return (cPtr_filewrapperObjectInstanciationInExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mFilewrapperName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_filewrapperObjectInstanciationInExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_filewrapperObjectInstanciationInExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_filewrapperObjectInstanciationInExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_filewrapperObjectInstanciationInExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__filewrapperObjectInstanciationInExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_filewrapperInExpressionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_filewrapperInExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_filewrapperInExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_filewrapperInExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_filewrapperInExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_filewrapperInExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_filewrapperInExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_filewrapperInExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_filewrapperInExpressionAST * getPtr (void) const {
    return (cPtr_filewrapperInExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mFilewrapperName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mFilewrapperPath (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_filewrapperInExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_filewrapperInExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_filewrapperInExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_filewrapperInExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__filewrapperInExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_filewrapperTemplateInExpressionAST'            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_filewrapperTemplateInExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_filewrapperTemplateInExpressionAST : public GGS_semanticExpressionAST {
//--- Default constructor
  public : inline GGS_filewrapperTemplateInExpressionAST (void) :
  GGS_semanticExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_filewrapperTemplateInExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_filewrapperTemplateInExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_filewrapperTemplateInExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_filewrapperTemplateInExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticExpressionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_filewrapperTemplateInExpressionAST * getPtr (void) const {
    return (cPtr_filewrapperTemplateInExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mFilewrapperName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mFilewrapperTemplateName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionListAST  reader_mExpressions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_filewrapperTemplateInExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_filewrapperTemplateInExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_filewrapperTemplateInExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_filewrapperTemplateInExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__filewrapperTemplateInExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Class for 'formalArgumentPassingModeAST' Enumeration            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_formalArgumentPassingModeAST ;

//---------------------------------------------------------------------------*

class GGS_formalArgumentPassingModeAST : public GGS__root {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_argumentConstantIn, enum_argumentIn, enum_argumentInOut, enum_argumentOut} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_formalArgumentPassingModeAST (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_formalArgumentPassingModeAST (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline PMUInt16 bitCount (void) { return 3 ; }

//--- Is built ?
  public : bool isBuilt (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_formalArgumentPassingModeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Construction from GALGAS constructor
  public : static inline GGS_formalArgumentPassingModeAST  constructor_argumentConstantIn (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_formalArgumentPassingModeAST (enum_argumentConstantIn) ;
  }
  public : static inline GGS_formalArgumentPassingModeAST  constructor_argumentIn (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_formalArgumentPassingModeAST (enum_argumentIn) ;
  }
  public : static inline GGS_formalArgumentPassingModeAST  constructor_argumentInOut (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_formalArgumentPassingModeAST (enum_argumentInOut) ;
  }
  public : static inline GGS_formalArgumentPassingModeAST  constructor_argumentOut (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_formalArgumentPassingModeAST (enum_argumentOut) ;
  }

//--- Readers
  public : GGS_string reader_formalArgumentMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_formalArgumentString (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_string (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_generation1ForFormalParameter (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_generation2ForFormalParameter (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'description' reader
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator_isEqual (const GGS_formalArgumentPassingModeAST inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_formalArgumentPassingModeAST inOperand) const ;
  public : GGS_bool operator_infOrEqual (const GGS_formalArgumentPassingModeAST inOperand) const ;
  public : GGS_bool operator_supOrEqual (const GGS_formalArgumentPassingModeAST inOperand) const ;
  public : GGS_bool operator_strictInf (const GGS_formalArgumentPassingModeAST inOperand) const ;
  public : GGS_bool operator_strictSup (const GGS_formalArgumentPassingModeAST inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@formalParameterListAST'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_formalParameterListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_formalParameterListAST ;

//---------------------------------------------------------------------------*

class GGS_formalParameterListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_formalParameterListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_formalParameterListAST constructor_emptyList (void) ;
  public : static GGS_formalParameterListAST constructor_listWithValue (const GGS_formalArgumentPassingModeAST& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_formalParameterListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_formalParameterListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_formalParameterListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_formalParameterListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_formalArgumentPassingModeAST& _out_0,
                              GGS_lstring & _out_1,
                              GGS_lstring & _out_2,
                              GGS_bool& _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_formalArgumentPassingModeAST& _out_0,
                             GGS_lstring & _out_1,
                             GGS_lstring & _out_2,
                             GGS_bool& _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_formalArgumentPassingModeAST& _out_0,
                                GGS_lstring & _out_1,
                                GGS_lstring & _out_2,
                                GGS_bool& _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_formalArgumentPassingModeAST& _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_lstring & _out_2,
                                 GGS_bool& _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_formalParameterListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_formalArgumentPassingModeAST& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_formalParameterListAST operator_concat (const GGS_formalParameterListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_formalArgumentPassingModeAST& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_formalArgumentPassingModeAST& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_formalArgumentPassingModeAST& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_formalArgumentPassingModeAST
  reader_mFormalParameterPassingModeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mFormalParameterTypeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mFormalParameterNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mIsUnusedAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMFormalParameterPassingModeAtIndex (C_Compiler & inLexique,
                              const GGS_formalArgumentPassingModeAST & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFormalParameterTypeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFormalParameterNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMIsUnusedAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_formalParameterListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_formalParameterListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_formalArgumentPassingModeAST  & _mFormalParameterPassingMode (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mFormalParameterTypeName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mFormalParameterName (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mIsUnused (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@formalInputParameterListAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_formalInputParameterListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_formalInputParameterListAST ;

//---------------------------------------------------------------------------*

class GGS_formalInputParameterListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_formalInputParameterListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_formalInputParameterListAST constructor_emptyList (void) ;
  public : static GGS_formalInputParameterListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_bool& argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_formalInputParameterListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_formalInputParameterListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_formalInputParameterListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_formalInputParameterListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1,
                              GGS_bool& _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1,
                             GGS_bool& _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1,
                                GGS_bool& _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_bool& _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_formalInputParameterListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_bool& argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_formalInputParameterListAST operator_concat (const GGS_formalInputParameterListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_bool& argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_bool& argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_bool& argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mFormalParameterTypeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mFormalParameterNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mIsUnusedAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMFormalParameterTypeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFormalParameterNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMIsUnusedAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_formalInputParameterListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_formalInputParameterListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mFormalParameterTypeName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mFormalParameterName (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mIsUnused (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_actualParameterAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_actualParameterAST ;

//---------------------------------------------------------------------------*

class GGS_actualParameterAST : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_actualParameterAST (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_actualParameterAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_actualParameterAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_actualParameterAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_actualParameterAST * getPtr (void) const {
    return (cPtr_actualParameterAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_actualParameterAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_actualParameterAST * operator () (LOCATION_ARGS) const {
      return (cPtr_actualParameterAST *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_actualParameterAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__actualParameterAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_outputActualParameterAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_outputActualParameterAST ;

//---------------------------------------------------------------------------*

class GGS_outputActualParameterAST : public GGS_actualParameterAST {
//--- Default constructor
  public : inline GGS_outputActualParameterAST (void) :
  GGS_actualParameterAST () {}

//--- Pointer assignment constructor
  public : GGS_outputActualParameterAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_outputActualParameterAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_outputActualParameterAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_outputActualParameterAST constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpressionAST & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_outputActualParameterAST * getPtr (void) const {
    return (cPtr_outputActualParameterAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpressionAST  reader_mOutputActualParameterExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_outputActualParameterAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_outputActualParameterAST * operator () (LOCATION_ARGS) const {
      return (cPtr_outputActualParameterAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_outputActualParameterAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__outputActualParameterAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_outputInputActualParameterAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_outputInputActualParameterAST ;

//---------------------------------------------------------------------------*

class GGS_outputInputActualParameterAST : public GGS_actualParameterAST {
//--- Default constructor
  public : inline GGS_outputInputActualParameterAST (void) :
  GGS_actualParameterAST () {}

//--- Pointer assignment constructor
  public : GGS_outputInputActualParameterAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_outputInputActualParameterAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_outputInputActualParameterAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_outputInputActualParameterAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_outputInputActualParameterAST * getPtr (void) const {
    return (cPtr_outputInputActualParameterAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mOutputInputActualParameterName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_outputInputActualParameterAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_outputInputActualParameterAST * operator () (LOCATION_ARGS) const {
      return (cPtr_outputInputActualParameterAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_outputInputActualParameterAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__outputInputActualParameterAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_inputActualParameterAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_inputActualParameterAST ;

//---------------------------------------------------------------------------*

class GGS_inputActualParameterAST : public GGS_actualParameterAST {
//--- Default constructor
  public : inline GGS_inputActualParameterAST (void) :
  GGS_actualParameterAST () {}

//--- Pointer assignment constructor
  public : GGS_inputActualParameterAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_inputActualParameterAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_inputActualParameterAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_inputActualParameterAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_inputActualParameterAST * getPtr (void) const {
    return (cPtr_inputActualParameterAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mDeclarationTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mInputActualParameterName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_inputActualParameterAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_inputActualParameterAST * operator () (LOCATION_ARGS) const {
      return (cPtr_inputActualParameterAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_inputActualParameterAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__inputActualParameterAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_inputJokerActualParameterAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_inputJokerActualParameterAST ;

//---------------------------------------------------------------------------*

class GGS_inputJokerActualParameterAST : public GGS_actualParameterAST {
//--- Default constructor
  public : inline GGS_inputJokerActualParameterAST (void) :
  GGS_actualParameterAST () {}

//--- Pointer assignment constructor
  public : GGS_inputJokerActualParameterAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_inputJokerActualParameterAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_inputJokerActualParameterAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_inputJokerActualParameterAST constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_inputJokerActualParameterAST * getPtr (void) const {
    return (cPtr_inputJokerActualParameterAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_inputJokerActualParameterAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_inputJokerActualParameterAST * operator () (LOCATION_ARGS) const {
      return (cPtr_inputJokerActualParameterAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_inputJokerActualParameterAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__inputJokerActualParameterAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@actualParameterListAST'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_actualParameterListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_actualParameterListAST ;

//---------------------------------------------------------------------------*

class GGS_actualParameterListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_actualParameterListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_actualParameterListAST constructor_emptyList (void) ;
  public : static GGS_actualParameterListAST constructor_listWithValue (const GGS_actualParameterAST & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_actualParameterListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_actualParameterListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_actualParameterListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_actualParameterListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_actualParameterAST & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_actualParameterAST & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_actualParameterAST & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_actualParameterAST & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_actualParameterListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_actualParameterAST & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_actualParameterListAST operator_concat (const GGS_actualParameterListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_actualParameterAST & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_actualParameterAST & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_actualParameterAST & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_actualParameterAST 
  reader_mActualParameterAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMActualParameterAtIndex (C_Compiler & inLexique,
                              const GGS_actualParameterAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_actualParameterListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_actualParameterListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_actualParameterAST   & _mActualParameter (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@actualInputParameterListAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_actualInputParameterListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_actualInputParameterListAST ;

//---------------------------------------------------------------------------*

class GGS_actualInputParameterListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_actualInputParameterListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_actualInputParameterListAST constructor_emptyList (void) ;
  public : static GGS_actualInputParameterListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_actualInputParameterListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_actualInputParameterListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_actualInputParameterListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_actualInputParameterListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_actualInputParameterListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_actualInputParameterListAST operator_concat (const GGS_actualInputParameterListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mActualParameterTypeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mActualParameterNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMActualParameterTypeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMActualParameterNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_actualInputParameterListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_actualInputParameterListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mActualParameterTypeName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mActualParameterName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_syntaxInstructionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_syntaxInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_syntaxInstructionAST : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_syntaxInstructionAST (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_syntaxInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_syntaxInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_syntaxInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_syntaxInstructionAST * getPtr (void) const {
    return (cPtr_syntaxInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_syntaxInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_syntaxInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_syntaxInstructionAST *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_syntaxInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__syntaxInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_semanticInstructionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_semanticInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_semanticInstructionAST : public GGS_syntaxInstructionAST {
//--- Default constructor
  public : inline GGS_semanticInstructionAST (void) :
  GGS_syntaxInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_semanticInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_semanticInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_semanticInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_semanticInstructionAST * getPtr (void) const {
    return (cPtr_semanticInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_semanticInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_semanticInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_semanticInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_semanticInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__semanticInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@semanticInstructionListAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_semanticInstructionListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_semanticInstructionListAST ;

//---------------------------------------------------------------------------*

class GGS_semanticInstructionListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_semanticInstructionListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_semanticInstructionListAST constructor_emptyList (void) ;
  public : static GGS_semanticInstructionListAST constructor_listWithValue (const GGS_semanticInstructionAST & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_semanticInstructionListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_semanticInstructionListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_semanticInstructionListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_semanticInstructionListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_semanticInstructionAST & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_semanticInstructionAST & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_semanticInstructionAST & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_semanticInstructionAST & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_semanticInstructionListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_semanticInstructionAST & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_semanticInstructionListAST operator_concat (const GGS_semanticInstructionListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_semanticInstructionAST & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_semanticInstructionAST & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_semanticInstructionAST & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_semanticInstructionAST 
  reader_mInstructionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMInstructionAtIndex (C_Compiler & inLexique,
                              const GGS_semanticInstructionAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_semanticInstructionListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_semanticInstructionListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_semanticInstructionAST   & _mInstruction (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_semanticDeclarationAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_semanticDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_semanticDeclarationAST : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_semanticDeclarationAST (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_semanticDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_semanticDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_semanticDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_semanticDeclarationAST * getPtr (void) const {
    return (cPtr_semanticDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_semanticDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_semanticDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_semanticDeclarationAST *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_semanticDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__semanticDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@semanticDeclarationListAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_semanticDeclarationListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_semanticDeclarationListAST ;

//---------------------------------------------------------------------------*

class GGS_semanticDeclarationListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_semanticDeclarationListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_semanticDeclarationListAST constructor_emptyList (void) ;
  public : static GGS_semanticDeclarationListAST constructor_listWithValue (const GGS_semanticDeclarationAST & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_semanticDeclarationListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_semanticDeclarationListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_semanticDeclarationListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_semanticDeclarationListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_semanticDeclarationAST & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_semanticDeclarationAST & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_semanticDeclarationAST & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_semanticDeclarationAST & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_semanticDeclarationListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_semanticDeclarationAST & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_semanticDeclarationListAST operator_concat (const GGS_semanticDeclarationListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_semanticDeclarationAST & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_semanticDeclarationAST & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_semanticDeclarationAST & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_semanticDeclarationAST 
  reader_mSemanticDeclarationAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMSemanticDeclarationAtIndex (C_Compiler & inLexique,
                              const GGS_semanticDeclarationAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_semanticDeclarationListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_semanticDeclarationListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_semanticDeclarationAST   & _mSemanticDeclaration (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_externRoutineDeclarationAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_externRoutineDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_externRoutineDeclarationAST : public GGS_semanticDeclarationAST {
//--- Default constructor
  public : inline GGS_externRoutineDeclarationAST (void) :
  GGS_semanticDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_externRoutineDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_externRoutineDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_externRoutineDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_externRoutineDeclarationAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_externRoutineDeclarationAST * getPtr (void) const {
    return (cPtr_externRoutineDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mRoutineName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameterListAST  reader_mFormalParameterList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_externRoutineDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_externRoutineDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_externRoutineDeclarationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_externRoutineDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__externRoutineDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_routinePrototypeDeclarationAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_routinePrototypeDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_routinePrototypeDeclarationAST : public GGS_externRoutineDeclarationAST {
//--- Default constructor
  public : inline GGS_routinePrototypeDeclarationAST (void) :
  GGS_externRoutineDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_routinePrototypeDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_routinePrototypeDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_routinePrototypeDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_routinePrototypeDeclarationAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_routinePrototypeDeclarationAST * getPtr (void) const {
    return (cPtr_routinePrototypeDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_routinePrototypeDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_routinePrototypeDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_routinePrototypeDeclarationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_routinePrototypeDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__routinePrototypeDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_routineDeclarationAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_routineDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_routineDeclarationAST : public GGS_routinePrototypeDeclarationAST {
//--- Default constructor
  public : inline GGS_routineDeclarationAST (void) :
  GGS_routinePrototypeDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_routineDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_routineDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_routineDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_routineDeclarationAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_routineDeclarationAST * getPtr (void) const {
    return (cPtr_routineDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticInstructionListAST  reader_mRoutineInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_routineDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_routineDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_routineDeclarationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_routineDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__routineDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_externFunctionDeclarationAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_externFunctionDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_externFunctionDeclarationAST : public GGS_semanticDeclarationAST {
//--- Default constructor
  public : inline GGS_externFunctionDeclarationAST (void) :
  GGS_semanticDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_externFunctionDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_externFunctionDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_externFunctionDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_externFunctionDeclarationAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_externFunctionDeclarationAST * getPtr (void) const {
    return (cPtr_externFunctionDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mFunctionName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameterListAST  reader_mFormalParameterList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mResultTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mResultVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_externFunctionDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_externFunctionDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_externFunctionDeclarationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_externFunctionDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__externFunctionDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_functionDeclarationAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_functionDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_functionDeclarationAST : public GGS_externFunctionDeclarationAST {
//--- Default constructor
  public : inline GGS_functionDeclarationAST (void) :
  GGS_externFunctionDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_functionDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_functionDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_functionDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_functionDeclarationAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_semanticInstructionListAST & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_functionDeclarationAST * getPtr (void) const {
    return (cPtr_functionDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticInstructionListAST  reader_mFunctionInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_functionDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_functionDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_functionDeclarationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_functionDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__functionDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_lazyFunctionDeclarationAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_lazyFunctionDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_lazyFunctionDeclarationAST : public GGS_semanticDeclarationAST {
//--- Default constructor
  public : inline GGS_lazyFunctionDeclarationAST (void) :
  GGS_semanticDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_lazyFunctionDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_lazyFunctionDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_lazyFunctionDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lazyFunctionDeclarationAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticInstructionListAST & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lazyFunctionDeclarationAST * getPtr (void) const {
    return (cPtr_lazyFunctionDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mFunctionName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mResultTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mResultVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST  reader_mFunctionInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lazyFunctionDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lazyFunctionDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_lazyFunctionDeclarationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_lazyFunctionDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__lazyFunctionDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_localVariableDeclarationAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_localVariableDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_localVariableDeclarationAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_localVariableDeclarationAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_localVariableDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_localVariableDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_localVariableDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_localVariableDeclarationAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_localVariableDeclarationAST * getPtr (void) const {
    return (cPtr_localVariableDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_localVariableDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_localVariableDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_localVariableDeclarationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_localVariableDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__localVariableDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//     GALGAS class 'GGS_localVariableDeclarationWithInitializationAST'      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_localVariableDeclarationWithInitializationAST ;

//---------------------------------------------------------------------------*

class GGS_localVariableDeclarationWithInitializationAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_localVariableDeclarationWithInitializationAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_localVariableDeclarationWithInitializationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_localVariableDeclarationWithInitializationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_localVariableDeclarationWithInitializationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_localVariableDeclarationWithInitializationAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_semanticExpressionListAST & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_localVariableDeclarationWithInitializationAST * getPtr (void) const {
    return (cPtr_localVariableDeclarationWithInitializationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mConstructorName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionListAST  reader_mConstructorExpressions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_localVariableDeclarationWithInitializationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_localVariableDeclarationWithInitializationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_localVariableDeclarationWithInitializationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_localVariableDeclarationWithInitializationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__localVariableDeclarationWithInitializationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//       GALGAS class 'GGS_localVariableDeclarationWithAssignmentAST'        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_localVariableDeclarationWithAssignmentAST ;

//---------------------------------------------------------------------------*

class GGS_localVariableDeclarationWithAssignmentAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_localVariableDeclarationWithAssignmentAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_localVariableDeclarationWithAssignmentAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_localVariableDeclarationWithAssignmentAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_localVariableDeclarationWithAssignmentAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_localVariableDeclarationWithAssignmentAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticExpressionAST & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_localVariableDeclarationWithAssignmentAST * getPtr (void) const {
    return (cPtr_localVariableDeclarationWithAssignmentAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mSourceExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_localVariableDeclarationWithAssignmentAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_localVariableDeclarationWithAssignmentAST * operator () (LOCATION_ARGS) const {
      return (cPtr_localVariableDeclarationWithAssignmentAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_localVariableDeclarationWithAssignmentAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__localVariableDeclarationWithAssignmentAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//    GALGAS class 'GGS_localConstantDeclarationWithSourceExpressionAST'     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_localConstantDeclarationWithSourceExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_localConstantDeclarationWithSourceExpressionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_localConstantDeclarationWithSourceExpressionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_localConstantDeclarationWithSourceExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_localConstantDeclarationWithSourceExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_localConstantDeclarationWithSourceExpressionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_localConstantDeclarationWithSourceExpressionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticExpressionAST & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_localConstantDeclarationWithSourceExpressionAST * getPtr (void) const {
    return (cPtr_localConstantDeclarationWithSourceExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mSourceExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_localConstantDeclarationWithSourceExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_localConstantDeclarationWithSourceExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_localConstantDeclarationWithSourceExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_localConstantDeclarationWithSourceExpressionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__localConstantDeclarationWithSourceExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//    GALGAS class 'GGS_localConstantDeclarationWithConstructorCallAST'      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_localConstantDeclarationWithConstructorCallAST ;

//---------------------------------------------------------------------------*

class GGS_localConstantDeclarationWithConstructorCallAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_localConstantDeclarationWithConstructorCallAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_localConstantDeclarationWithConstructorCallAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_localConstantDeclarationWithConstructorCallAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_localConstantDeclarationWithConstructorCallAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_localConstantDeclarationWithConstructorCallAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_semanticExpressionListAST & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_localConstantDeclarationWithConstructorCallAST * getPtr (void) const {
    return (cPtr_localConstantDeclarationWithConstructorCallAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mConstructorName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionListAST  reader_mConstructorExpressions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_localConstantDeclarationWithConstructorCallAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_localConstantDeclarationWithConstructorCallAST * operator () (LOCATION_ARGS) const {
      return (cPtr_localConstantDeclarationWithConstructorCallAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_localConstantDeclarationWithConstructorCallAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__localConstantDeclarationWithConstructorCallAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_assignmentInstructionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_assignmentInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_assignmentInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_assignmentInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_assignmentInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_assignmentInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_assignmentInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_assignmentInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_location & argument_2,
                                const GGS_lstringlist & argument_3,
                                const GGS_semanticExpressionAST & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_assignmentInstructionAST * getPtr (void) const {
    return (cPtr_assignmentInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTargetVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mAssignmentOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mSourceExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_assignmentInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_assignmentInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_assignmentInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_assignmentInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__assignmentInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_appendInstructionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_appendInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_appendInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_appendInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_appendInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_appendInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_appendInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_appendInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2,
                                const GGS_semanticExpressionAST & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_appendInstructionAST * getPtr (void) const {
    return (cPtr_appendInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTargetVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mSourceExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_appendInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_appendInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_appendInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_appendInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__appendInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_sendInstructionAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sendInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_sendInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_sendInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_sendInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sendInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sendInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sendInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sendInstructionAST * getPtr (void) const {
    return (cPtr_sendInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpressionAST  reader_mSourceExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sendInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sendInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_sendInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sendInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sendInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//     GALGAS class 'GGS_foreachInstructionEnumeratedObjectElementAST'       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_foreachInstructionEnumeratedObjectElementAST ;

//---------------------------------------------------------------------------*

class GGS_foreachInstructionEnumeratedObjectElementAST : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_foreachInstructionEnumeratedObjectElementAST (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_foreachInstructionEnumeratedObjectElementAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_foreachInstructionEnumeratedObjectElementAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_foreachInstructionEnumeratedObjectElementAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_foreachInstructionEnumeratedObjectElementAST * getPtr (void) const {
    return (cPtr_foreachInstructionEnumeratedObjectElementAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_foreachInstructionEnumeratedObjectElementAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_foreachInstructionEnumeratedObjectElementAST * operator () (LOCATION_ARGS) const {
      return (cPtr_foreachInstructionEnumeratedObjectElementAST *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_foreachInstructionEnumeratedObjectElementAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__foreachInstructionEnumeratedObjectElementAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_foreachInstructionJokerAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_foreachInstructionJokerAST ;

//---------------------------------------------------------------------------*

class GGS_foreachInstructionJokerAST : public GGS_foreachInstructionEnumeratedObjectElementAST {
//--- Default constructor
  public : inline GGS_foreachInstructionJokerAST (void) :
  GGS_foreachInstructionEnumeratedObjectElementAST () {}

//--- Pointer assignment constructor
  public : GGS_foreachInstructionJokerAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_foreachInstructionJokerAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_foreachInstructionJokerAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_foreachInstructionJokerAST constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_foreachInstructionJokerAST * getPtr (void) const {
    return (cPtr_foreachInstructionJokerAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_foreachInstructionJokerAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_foreachInstructionJokerAST * operator () (LOCATION_ARGS) const {
      return (cPtr_foreachInstructionJokerAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_foreachInstructionJokerAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__foreachInstructionJokerAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_foreachInstructionEnumeratedConstantAST'         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_foreachInstructionEnumeratedConstantAST ;

//---------------------------------------------------------------------------*

class GGS_foreachInstructionEnumeratedConstantAST : public GGS_foreachInstructionEnumeratedObjectElementAST {
//--- Default constructor
  public : inline GGS_foreachInstructionEnumeratedConstantAST (void) :
  GGS_foreachInstructionEnumeratedObjectElementAST () {}

//--- Pointer assignment constructor
  public : GGS_foreachInstructionEnumeratedConstantAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_foreachInstructionEnumeratedConstantAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_foreachInstructionEnumeratedConstantAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_foreachInstructionEnumeratedConstantAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_foreachInstructionEnumeratedConstantAST * getPtr (void) const {
    return (cPtr_foreachInstructionEnumeratedConstantAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mConstantName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_foreachInstructionEnumeratedConstantAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_foreachInstructionEnumeratedConstantAST * operator () (LOCATION_ARGS) const {
      return (cPtr_foreachInstructionEnumeratedConstantAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_foreachInstructionEnumeratedConstantAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__foreachInstructionEnumeratedConstantAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//         list '@foreachInstructionEnumeratedObjectElementListAST'          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_foreachInstructionEnumeratedObjectElementListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_foreachInstructionEnumeratedObjectElementListAST ;

//---------------------------------------------------------------------------*

class GGS_foreachInstructionEnumeratedObjectElementListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_foreachInstructionEnumeratedObjectElementListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_foreachInstructionEnumeratedObjectElementListAST constructor_emptyList (void) ;
  public : static GGS_foreachInstructionEnumeratedObjectElementListAST constructor_listWithValue (const GGS_foreachInstructionEnumeratedObjectElementAST & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_foreachInstructionEnumeratedObjectElementListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_foreachInstructionEnumeratedObjectElementListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_foreachInstructionEnumeratedObjectElementListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_foreachInstructionEnumeratedObjectElementListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_foreachInstructionEnumeratedObjectElementAST & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_foreachInstructionEnumeratedObjectElementAST & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_foreachInstructionEnumeratedObjectElementAST & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_foreachInstructionEnumeratedObjectElementAST & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_foreachInstructionEnumeratedObjectElementListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_foreachInstructionEnumeratedObjectElementAST & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_foreachInstructionEnumeratedObjectElementListAST operator_concat (const GGS_foreachInstructionEnumeratedObjectElementListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_foreachInstructionEnumeratedObjectElementAST & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_foreachInstructionEnumeratedObjectElementAST & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_foreachInstructionEnumeratedObjectElementAST & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_foreachInstructionEnumeratedObjectElementAST 
  reader_mElementAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMElementAtIndex (C_Compiler & inLexique,
                              const GGS_foreachInstructionEnumeratedObjectElementAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_foreachInstructionEnumeratedObjectElementListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_foreachInstructionEnumeratedObjectElementListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_foreachInstructionEnumeratedObjectElementAST   & _mElement (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            list '@foreachInstructionEnumeratedObjectListAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_foreachInstructionEnumeratedObjectListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_foreachInstructionEnumeratedObjectListAST ;

//---------------------------------------------------------------------------*

class GGS_foreachInstructionEnumeratedObjectListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_foreachInstructionEnumeratedObjectListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_foreachInstructionEnumeratedObjectListAST constructor_emptyList (void) ;
  public : static GGS_foreachInstructionEnumeratedObjectListAST constructor_listWithValue (const GGS_bool& argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_foreachInstructionEnumeratedObjectElementListAST & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_lstring & argument_4) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_foreachInstructionEnumeratedObjectListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_foreachInstructionEnumeratedObjectListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_foreachInstructionEnumeratedObjectListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_foreachInstructionEnumeratedObjectListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_bool& _out_0,
                              GGS_semanticExpressionAST & _out_1,
                              GGS_foreachInstructionEnumeratedObjectElementListAST & _out_2,
                              GGS_bool& _out_3,
                              GGS_lstring & _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_bool& _out_0,
                             GGS_semanticExpressionAST & _out_1,
                             GGS_foreachInstructionEnumeratedObjectElementListAST & _out_2,
                             GGS_bool& _out_3,
                             GGS_lstring & _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_bool& _out_0,
                                GGS_semanticExpressionAST & _out_1,
                                GGS_foreachInstructionEnumeratedObjectElementListAST & _out_2,
                                GGS_bool& _out_3,
                                GGS_lstring & _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_bool& _out_0,
                                 GGS_semanticExpressionAST & _out_1,
                                 GGS_foreachInstructionEnumeratedObjectElementListAST & _out_2,
                                 GGS_bool& _out_3,
                                 GGS_lstring & _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_foreachInstructionEnumeratedObjectListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_bool& argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_foreachInstructionEnumeratedObjectElementListAST & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_lstring & argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_foreachInstructionEnumeratedObjectListAST operator_concat (const GGS_foreachInstructionEnumeratedObjectListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_foreachInstructionEnumeratedObjectElementListAST & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_lstring & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_bool& argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_foreachInstructionEnumeratedObjectElementListAST & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_lstring & argument_4
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_bool& argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_foreachInstructionEnumeratedObjectElementListAST & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_lstring & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_bool
  reader_mIsAscendingAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST 
  reader_mEnumeratedExpressionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_foreachInstructionEnumeratedObjectElementListAST 
  reader_mElementListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mEndsWithEllipsisAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mPrefixAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMIsAscendingAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMEnumeratedExpressionAtIndex (C_Compiler & inLexique,
                              const GGS_semanticExpressionAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMElementListAtIndex (C_Compiler & inLexique,
                              const GGS_foreachInstructionEnumeratedObjectElementListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMEndsWithEllipsisAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMPrefixAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_foreachInstructionEnumeratedObjectListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_foreachInstructionEnumeratedObjectListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_bool  & _mIsAscending (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticExpressionAST   & _mEnumeratedExpression (LOCATION_ARGS) const ;
    public : /* const */ GGS_foreachInstructionEnumeratedObjectElementListAST   & _mElementList (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mEndsWithEllipsis (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mPrefix (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_foreachInstructionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_foreachInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_foreachInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_foreachInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_foreachInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_foreachInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_foreachInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_foreachInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_foreachInstructionEnumeratedObjectListAST & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticExpressionAST & argument_3,
                                const GGS_semanticInstructionListAST & argument_4,
                                const GGS_semanticInstructionListAST & argument_5,
                                const GGS_semanticInstructionListAST & argument_6,
                                const GGS_semanticInstructionListAST & argument_7
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_foreachInstructionAST * getPtr (void) const {
    return (cPtr_foreachInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_foreachInstructionEnumeratedObjectListAST  reader_mEnumeratedObjectList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mIndexVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mWhileExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST  reader_mBeforeInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST  reader_mBetweenInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST  reader_mDoInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST  reader_mAfterInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_foreachInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_foreachInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_foreachInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_foreachInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__foreachInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@ifBranchListAST'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ifBranchListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ifBranchListAST ;

//---------------------------------------------------------------------------*

class GGS_ifBranchListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_ifBranchListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_ifBranchListAST constructor_emptyList (void) ;
  public : static GGS_ifBranchListAST constructor_listWithValue (const GGS_semanticExpressionAST & argument_0,
                                const GGS_semanticInstructionListAST & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_ifBranchListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_ifBranchListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_ifBranchListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_ifBranchListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_semanticExpressionAST & _out_0,
                              GGS_semanticInstructionListAST & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_semanticExpressionAST & _out_0,
                             GGS_semanticInstructionListAST & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_semanticExpressionAST & _out_0,
                                GGS_semanticInstructionListAST & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_semanticExpressionAST & _out_0,
                                 GGS_semanticInstructionListAST & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_ifBranchListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_semanticExpressionAST & argument_0,
                                const GGS_semanticInstructionListAST & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_ifBranchListAST operator_concat (const GGS_ifBranchListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_semanticExpressionAST & argument_0,
                                const GGS_semanticInstructionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_semanticExpressionAST & argument_0,
                                const GGS_semanticInstructionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_semanticExpressionAST & argument_0,
                                const GGS_semanticInstructionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_semanticExpressionAST 
  reader_mIFexpressionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST 
  reader_mIFinstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMIFexpressionAtIndex (C_Compiler & inLexique,
                              const GGS_semanticExpressionAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMIFinstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_semanticInstructionListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ifBranchListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_ifBranchListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_semanticExpressionAST   & _mIFexpression (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticInstructionListAST   & _mIFinstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_ifInstructionAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ifInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_ifInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_ifInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_ifInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_ifInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_ifInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_ifInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_ifBranchListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ifInstructionAST * getPtr (void) const {
    return (cPtr_ifInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_ifBranchListAST  reader_mBranchList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST  reader_mElseInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ifInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ifInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_ifInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ifInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__ifInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_methodCallInstructionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_methodCallInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_methodCallInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_methodCallInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_methodCallInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_methodCallInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_methodCallInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_methodCallInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_actualParameterListAST & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_methodCallInstructionAST * getPtr (void) const {
    return (cPtr_methodCallInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpressionAST  reader_mReceiverExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_actualParameterListAST  reader_mActualParameterList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_methodCallInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_methodCallInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_methodCallInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_methodCallInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__methodCallInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_modifierCallInstructionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_modifierCallInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_modifierCallInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_modifierCallInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_modifierCallInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_modifierCallInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_modifierCallInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_modifierCallInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_actualParameterListAST & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_modifierCallInstructionAST * getPtr (void) const {
    return (cPtr_modifierCallInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mReceiverName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mReceiverStructAttributes (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mModifierName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_actualParameterListAST  reader_mActualParameterList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_modifierCallInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_modifierCallInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_modifierCallInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_modifierCallInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__modifierCallInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_errorInstructionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_errorInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_errorInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_errorInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_errorInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_errorInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_errorInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_errorInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2,
                                const GGS_lstringlist & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_errorInstructionAST * getPtr (void) const {
    return (cPtr_errorInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpressionAST  reader_mReceiverExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mErrorExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mBuiltVariableList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_errorInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_errorInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_errorInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_errorInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__errorInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_warningInstructionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_warningInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_warningInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_warningInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_warningInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_warningInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_warningInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_warningInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_warningInstructionAST * getPtr (void) const {
    return (cPtr_warningInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpressionAST  reader_mReceiverExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mWarningExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_warningInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_warningInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_warningInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_warningInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__warningInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_routineCallInstructionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_routineCallInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_routineCallInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_routineCallInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_routineCallInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_routineCallInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_routineCallInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_routineCallInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameterListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_routineCallInstructionAST * getPtr (void) const {
    return (cPtr_routineCallInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mRoutineName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_actualParameterListAST  reader_mActualParameterList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_routineCallInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_routineCallInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_routineCallInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_routineCallInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__routineCallInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_matchEntryAST'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_matchEntryAST ;

//---------------------------------------------------------------------------*

class GGS_matchEntryAST : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_matchEntryAST (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_matchEntryAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_matchEntryAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_matchEntryAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_matchEntryAST * getPtr (void) const {
    return (cPtr_matchEntryAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_matchEntryAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_matchEntryAST * operator () (LOCATION_ARGS) const {
      return (cPtr_matchEntryAST *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_matchEntryAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__matchEntryAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@matchEntryListAST'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_matchEntryListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_matchEntryListAST ;

//---------------------------------------------------------------------------*

class GGS_matchEntryListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_matchEntryListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_matchEntryListAST constructor_emptyList (void) ;
  public : static GGS_matchEntryListAST constructor_listWithValue (const GGS_matchEntryAST & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_matchEntryListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_matchEntryListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_matchEntryListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_matchEntryListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_matchEntryAST & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_matchEntryAST & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_matchEntryAST & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_matchEntryAST & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_matchEntryListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_matchEntryAST & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_matchEntryListAST operator_concat (const GGS_matchEntryListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_matchEntryAST & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_matchEntryAST & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_matchEntryAST & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_matchEntryAST 
  reader_mEntryAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMEntryAtIndex (C_Compiler & inLexique,
                              const GGS_matchEntryAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_matchEntryListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_matchEntryListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_matchEntryAST   & _mEntry (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_constantMatchEntryAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_constantMatchEntryAST ;

//---------------------------------------------------------------------------*

class GGS_constantMatchEntryAST : public GGS_matchEntryAST {
//--- Default constructor
  public : inline GGS_constantMatchEntryAST (void) :
  GGS_matchEntryAST () {}

//--- Pointer assignment constructor
  public : GGS_constantMatchEntryAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_constantMatchEntryAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_constantMatchEntryAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_constantMatchEntryAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_constantMatchEntryAST * getPtr (void) const {
    return (cPtr_constantMatchEntryAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mConstantName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_constantMatchEntryAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_constantMatchEntryAST * operator () (LOCATION_ARGS) const {
      return (cPtr_constantMatchEntryAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_constantMatchEntryAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__constantMatchEntryAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_classMatchEntryAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_classMatchEntryAST ;

//---------------------------------------------------------------------------*

class GGS_classMatchEntryAST : public GGS_matchEntryAST {
//--- Default constructor
  public : inline GGS_classMatchEntryAST (void) :
  GGS_matchEntryAST () {}

//--- Pointer assignment constructor
  public : GGS_classMatchEntryAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_classMatchEntryAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_classMatchEntryAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_classMatchEntryAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_foreachInstructionEnumeratedObjectElementListAST & argument_1,
                                const GGS_bool& argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_classMatchEntryAST * getPtr (void) const {
    return (cPtr_classMatchEntryAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mClassName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_foreachInstructionEnumeratedObjectElementListAST  reader_mElements (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mEndsWithEllipsis (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_classMatchEntryAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_classMatchEntryAST * operator () (LOCATION_ARGS) const {
      return (cPtr_classMatchEntryAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_classMatchEntryAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__classMatchEntryAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@matchInstructionBranchListAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_matchInstructionBranchListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_matchInstructionBranchListAST ;

//---------------------------------------------------------------------------*

class GGS_matchInstructionBranchListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_matchInstructionBranchListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_matchInstructionBranchListAST constructor_emptyList (void) ;
  public : static GGS_matchInstructionBranchListAST constructor_listWithValue (const GGS_matchEntryListAST & argument_0,
                                const GGS_semanticInstructionListAST & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_matchInstructionBranchListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_matchInstructionBranchListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_matchInstructionBranchListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_matchInstructionBranchListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_matchEntryListAST & _out_0,
                              GGS_semanticInstructionListAST & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_matchEntryListAST & _out_0,
                             GGS_semanticInstructionListAST & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_matchEntryListAST & _out_0,
                                GGS_semanticInstructionListAST & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_matchEntryListAST & _out_0,
                                 GGS_semanticInstructionListAST & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_matchInstructionBranchListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_matchEntryListAST & argument_0,
                                const GGS_semanticInstructionListAST & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_matchInstructionBranchListAST operator_concat (const GGS_matchInstructionBranchListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_matchEntryListAST & argument_0,
                                const GGS_semanticInstructionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_matchEntryListAST & argument_0,
                                const GGS_semanticInstructionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_matchEntryListAST & argument_0,
                                const GGS_semanticInstructionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_matchEntryListAST 
  reader_mMatchEntryListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST 
  reader_mMatchBranchInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMMatchEntryListAtIndex (C_Compiler & inLexique,
                              const GGS_matchEntryListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMMatchBranchInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_semanticInstructionListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_matchInstructionBranchListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_matchInstructionBranchListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_matchEntryListAST   & _mMatchEntryList (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticInstructionListAST   & _mMatchBranchInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_matchInstructionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_matchInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_matchInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_matchInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_matchInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_matchInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_matchInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_matchInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_matchInstructionBranchListAST & argument_2,
                                const GGS_semanticInstructionListAST & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_matchInstructionAST * getPtr (void) const {
    return (cPtr_matchInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstringlist  reader_mMatchedVariableNameList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_matchInstructionBranchListAST  reader_mMatchInstructionBranchList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST  reader_mElseInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_matchInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_matchInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_matchInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_matchInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__matchInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@castInstructionBranchListAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_castInstructionBranchListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_castInstructionBranchListAST ;

//---------------------------------------------------------------------------*

class GGS_castInstructionBranchListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_castInstructionBranchListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_castInstructionBranchListAST constructor_emptyList (void) ;
  public : static GGS_castInstructionBranchListAST constructor_listWithValue (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_semanticInstructionListAST & argument_4) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_castInstructionBranchListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_castInstructionBranchListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_castInstructionBranchListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_castInstructionBranchListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_bool& _out_0,
                              GGS_lstring & _out_1,
                              GGS_lstring & _out_2,
                              GGS_bool& _out_3,
                              GGS_semanticInstructionListAST & _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_bool& _out_0,
                             GGS_lstring & _out_1,
                             GGS_lstring & _out_2,
                             GGS_bool& _out_3,
                             GGS_semanticInstructionListAST & _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_bool& _out_0,
                                GGS_lstring & _out_1,
                                GGS_lstring & _out_2,
                                GGS_bool& _out_3,
                                GGS_semanticInstructionListAST & _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_bool& _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_lstring & _out_2,
                                 GGS_bool& _out_3,
                                 GGS_semanticInstructionListAST & _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_castInstructionBranchListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_semanticInstructionListAST & argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_castInstructionBranchListAST operator_concat (const GGS_castInstructionBranchListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_semanticInstructionListAST & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_semanticInstructionListAST & argument_4
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_semanticInstructionListAST & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_bool
  reader_mUseKindOfClassAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mTypeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mConstantVarNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mConstantVarNameIsUnusedAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST 
  reader_mCastBranchInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMUseKindOfClassAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTypeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMConstantVarNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMConstantVarNameIsUnusedAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMCastBranchInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_semanticInstructionListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_castInstructionBranchListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_castInstructionBranchListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_bool  & _mUseKindOfClass (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mTypeName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mConstantVarName (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mConstantVarNameIsUnused (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticInstructionListAST   & _mCastBranchInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_elseOrDefaultForCastInstructionAST'            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_elseOrDefaultForCastInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_elseOrDefaultForCastInstructionAST : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_elseOrDefaultForCastInstructionAST (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_elseOrDefaultForCastInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_elseOrDefaultForCastInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_elseOrDefaultForCastInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_elseOrDefaultForCastInstructionAST * getPtr (void) const {
    return (cPtr_elseOrDefaultForCastInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_elseOrDefaultForCastInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_elseOrDefaultForCastInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_elseOrDefaultForCastInstructionAST *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_elseOrDefaultForCastInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__elseOrDefaultForCastInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_elseForCastInstructionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_elseForCastInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_elseForCastInstructionAST : public GGS_elseOrDefaultForCastInstructionAST {
//--- Default constructor
  public : inline GGS_elseForCastInstructionAST (void) :
  GGS_elseOrDefaultForCastInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_elseForCastInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_elseForCastInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_elseForCastInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_elseForCastInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_semanticInstructionListAST & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_elseForCastInstructionAST * getPtr (void) const {
    return (cPtr_elseForCastInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticInstructionListAST  reader_mElseInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_elseForCastInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_elseForCastInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_elseForCastInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_elseForCastInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__elseForCastInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_defaultForCastInstructionAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_defaultForCastInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_defaultForCastInstructionAST : public GGS_elseOrDefaultForCastInstructionAST {
//--- Default constructor
  public : inline GGS_defaultForCastInstructionAST (void) :
  GGS_elseOrDefaultForCastInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_defaultForCastInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_defaultForCastInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_defaultForCastInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_defaultForCastInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpressionAST & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_defaultForCastInstructionAST * getPtr (void) const {
    return (cPtr_defaultForCastInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpressionAST  reader_mErrorLocationExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_defaultForCastInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_defaultForCastInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_defaultForCastInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_defaultForCastInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__defaultForCastInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_castInstructionAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_castInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_castInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_castInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_castInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_castInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_castInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_castInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_castInstructionBranchListAST & argument_2,
                                const GGS_elseOrDefaultForCastInstructionAST & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_castInstructionAST * getPtr (void) const {
    return (cPtr_castInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpressionAST  reader_mExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_castInstructionBranchListAST  reader_mCastInstructionBranchList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_elseOrDefaultForCastInstructionAST  reader_mElseOrDefault (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_castInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_castInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_castInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_castInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__castInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_addInstructionAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_addInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_addInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_addInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_addInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_addInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_addInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_addInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2,
                                const GGS_semanticExpressionListAST & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_addInstructionAST * getPtr (void) const {
    return (cPtr_addInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mReceiverName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionListAST  reader_mExpressions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_addInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_addInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_addInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_addInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__addInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_removeInstructionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_removeInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_removeInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_removeInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_removeInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_removeInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_removeInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_removeInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2,
                                const GGS_semanticExpressionAST & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_removeInstructionAST * getPtr (void) const {
    return (cPtr_removeInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mReceiverName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_removeInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_removeInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_removeInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_removeInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__removeInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_incrementInstructionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_incrementInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_incrementInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_incrementInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_incrementInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_incrementInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_incrementInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_incrementInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_incrementInstructionAST * getPtr (void) const {
    return (cPtr_incrementInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mReceiverName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_incrementInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_incrementInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_incrementInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_incrementInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__incrementInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_decrementInstructionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_decrementInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_decrementInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_decrementInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_decrementInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_decrementInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_decrementInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_decrementInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_decrementInstructionAST * getPtr (void) const {
    return (cPtr_decrementInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mReceiverName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_decrementInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_decrementInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_decrementInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_decrementInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__decrementInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_loopInstructionAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_loopInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_loopInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_loopInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_loopInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_loopInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_loopInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_loopInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2,
                                const GGS_semanticExpressionAST & argument_3,
                                const GGS_semanticInstructionListAST & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_loopInstructionAST * getPtr (void) const {
    return (cPtr_loopInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpressionAST  reader_mVariantExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST  reader_mFirstInstructions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mLoopExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST  reader_mSecondInstructions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_loopInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_loopInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_loopInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_loopInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__loopInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_messageInstructionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_messageInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_messageInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_messageInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_messageInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_messageInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_messageInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_messageInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_messageInstructionAST * getPtr (void) const {
    return (cPtr_messageInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpressionAST  reader_mExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_messageInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_messageInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_messageInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_messageInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__messageInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            list '@logListAST'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_logListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_logListAST ;

//---------------------------------------------------------------------------*

class GGS_logListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_logListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_logListAST constructor_emptyList (void) ;
  public : static GGS_logListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_semanticExpressionAST & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_logListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_logListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_logListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_logListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_semanticExpressionAST & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_semanticExpressionAST & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_semanticExpressionAST & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_semanticExpressionAST & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_logListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_semanticExpressionAST & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_logListAST operator_concat (const GGS_logListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_semanticExpressionAST & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_semanticExpressionAST & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_semanticExpressionAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mLogMessageAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST 
  reader_mLogExpressionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMLogMessageAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMLogExpressionAtIndex (C_Compiler & inLexique,
                              const GGS_semanticExpressionAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_logListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_logListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mLogMessage (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticExpressionAST   & _mLogExpression (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_logInstructionAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_logInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_logInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_logInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_logInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_logInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_logInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_logInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_logListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_logInstructionAST * getPtr (void) const {
    return (cPtr_logInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_logListAST  reader_mLogList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_logInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_logInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_logInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_logInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__logInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_grammarInstructionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_grammarInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_grammarInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_grammarInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_grammarInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_grammarInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_grammarInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_grammarInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticExpressionAST & argument_3,
                                const GGS_bool& argument_4,
                                const GGS_actualParameterListAST & argument_5
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_grammarInstructionAST * getPtr (void) const {
    return (cPtr_grammarInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mGrammarComponentName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mLabelName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mSourceExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mSourceExpressionIsFile (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_actualParameterListAST  reader_mActualParameterList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_grammarInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_grammarInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_grammarInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_grammarInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__grammarInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_withInstructionAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_withInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_withInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_withInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_withInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_withInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_withInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_withInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstringlist & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_semanticExpressionAST & argument_5,
                                const GGS_bool& argument_6,
                                const GGS_semanticInstructionListAST & argument_7,
                                const GGS_semanticInstructionListAST & argument_8
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_withInstructionAST * getPtr (void) const {
    return (cPtr_withInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mPrefix (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mTargetObjectName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSearchMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpressionAST  reader_mKeyExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mReadWriteAccess (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST  reader_mDoBranchInstructions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST  reader_mElseBranchInstructions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_withInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_withInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_withInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_withInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__withInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@switchBranchesAST'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_switchBranchesAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_switchBranchesAST ;

//---------------------------------------------------------------------------*

class GGS_switchBranchesAST : public AC_GGS_list {
  public : typedef elementOf_GGS_switchBranchesAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_switchBranchesAST constructor_emptyList (void) ;
  public : static GGS_switchBranchesAST constructor_listWithValue (const GGS_lstringlist & argument_0,
                                const GGS_semanticInstructionListAST & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_switchBranchesAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_switchBranchesAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_switchBranchesAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_switchBranchesAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstringlist & _out_0,
                              GGS_semanticInstructionListAST & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstringlist & _out_0,
                             GGS_semanticInstructionListAST & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstringlist & _out_0,
                                GGS_semanticInstructionListAST & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstringlist & _out_0,
                                 GGS_semanticInstructionListAST & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_switchBranchesAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstringlist & argument_0,
                                const GGS_semanticInstructionListAST & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_switchBranchesAST operator_concat (const GGS_switchBranchesAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstringlist & argument_0,
                                const GGS_semanticInstructionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstringlist & argument_0,
                                const GGS_semanticInstructionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstringlist & argument_0,
                                const GGS_semanticInstructionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstringlist 
  reader_mSwitchConstantListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST 
  reader_mInstructionsAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMSwitchConstantListAtIndex (C_Compiler & inLexique,
                              const GGS_lstringlist  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionsAtIndex (C_Compiler & inLexique,
                              const GGS_semanticInstructionListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_switchBranchesAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_switchBranchesAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstringlist   & _mSwitchConstantList (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticInstructionListAST   & _mInstructions (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_switchInstructionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_switchInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_switchInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_switchInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_switchInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_switchInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_switchInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_switchInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpressionAST & argument_1,
                                const GGS_switchBranchesAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_switchInstructionAST * getPtr (void) const {
    return (cPtr_switchInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpressionAST  reader_mSwitchExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_switchBranchesAST  reader_mBranches (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_switchInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_switchInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_switchInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_switchInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__switchInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeMethodCallInstructionAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeMethodCallInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_typeMethodCallInstructionAST : public GGS_semanticInstructionAST {
//--- Default constructor
  public : inline GGS_typeMethodCallInstructionAST (void) :
  GGS_semanticInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_typeMethodCallInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeMethodCallInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeMethodCallInstructionAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeMethodCallInstructionAST constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_actualParameterListAST & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeMethodCallInstructionAST * getPtr (void) const {
    return (cPtr_typeMethodCallInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_actualParameterListAST  reader_mActualParameterList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeMethodCallInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeMethodCallInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_typeMethodCallInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeMethodCallInstructionAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeMethodCallInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@abstracMultiMethodListAST'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_abstracMultiMethodListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_abstracMultiMethodListAST ;

//---------------------------------------------------------------------------*

class GGS_abstracMultiMethodListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_abstracMultiMethodListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_abstracMultiMethodListAST constructor_emptyList (void) ;
  public : static GGS_abstracMultiMethodListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_abstracMultiMethodListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_abstracMultiMethodListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_abstracMultiMethodListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_abstracMultiMethodListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_formalParameterListAST & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_formalParameterListAST & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_formalParameterListAST & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_formalParameterListAST & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_abstracMultiMethodListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_abstracMultiMethodListAST operator_concat (const GGS_abstracMultiMethodListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mAbstractMultiMethodNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameterListAST 
  reader_mAbstractCategoryFormalParameterListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMAbstractMultiMethodNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAbstractCategoryFormalParameterListAtIndex (C_Compiler & inLexique,
                              const GGS_formalParameterListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_abstracMultiMethodListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_abstracMultiMethodListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mAbstractMultiMethodName (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalParameterListAST   & _mAbstractCategoryFormalParameterList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Map list '@abstractMultiMethodListMapAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_abstractMultiMethodListMapAST ;

//---------------------------------------------------------------------------*

class GGS_abstractMultiMethodListMapAST : public AC_GGS_listmap {
//--- Node class
  public : class cElement : public cPtrListMapObject {
 //--- List attribute
    public : GGS_abstracMultiMethodListAST mListObject ;
 //--- Constructor
    public : cElement (LOCATION_ARGS) ;
 //--- Description
    public : virtual C_String performDescription (const PMSInt32 inIndentation) const ;
    public : virtual cPtrObject * cloneObject (LOCATION_ARGS) ;
    public : virtual bool isEqual (const cPtrListMapObject * inOperand) const ;
  } ;

//--- 'emptyMap' constructor
  public : static GGS_abstractMultiMethodListMapAST
  constructor_emptyMap (void) ;

//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_abstractMultiMethodListMapAST inOperand) ; //Don't pass 'inOperand' by reference !

//--- Handling '.' GALGAS operator
  public : GGS_abstractMultiMethodListMapAST operator_concat (const GGS_abstractMultiMethodListMapAST & inOperand) const ;

//--- Handle '+=' operator
  public : void
  addAssign_operation (const GGS_string & inKey,
                        const GGS_lstring & inAttribute0,
                        const GGS_formalParameterListAST & inAttribute1) ;

//--- For 'description' reader
  protected : virtual const char * _typeNameForDescriptionReader (void) const ;

//--- Reader 'allKeys'
  public : GGS_stringset
  reader_allKeys (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'keyList'
  public : GGS_stringlist
  reader_keyList (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'listForKey'
  public : GGS_abstracMultiMethodListAST
  reader_listForKey (C_Compiler & inLexique,
                     const GGS_string & inKey
                     COMMA_LOCATION_ARGS) const ;

//--- Enumerator
  public : class cEnumerator : public cAbstractDictionaryEnumerator {
  //--- Contructor
    public : cEnumerator (const GGS_abstractMultiMethodListMapAST & inListMap,
                          const bool inAscending) ;
  //--- Associated object accessor
    public : const GGS_abstracMultiMethodListAST & _object (LOCATION_ARGS) const ;
  } ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_abstractMultiMethodListMapAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@multiMethodListAST'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_multiMethodListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_multiMethodListAST ;

//---------------------------------------------------------------------------*

class GGS_multiMethodListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_multiMethodListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_multiMethodListAST constructor_emptyList (void) ;
  public : static GGS_multiMethodListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_multiMethodListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_multiMethodListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_multiMethodListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_multiMethodListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_formalParameterListAST & _out_1,
                              GGS_semanticInstructionListAST & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_formalParameterListAST & _out_1,
                             GGS_semanticInstructionListAST & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_formalParameterListAST & _out_1,
                                GGS_semanticInstructionListAST & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_formalParameterListAST & _out_1,
                                 GGS_semanticInstructionListAST & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_multiMethodListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_multiMethodListAST operator_concat (const GGS_multiMethodListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mMultiMethodNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameterListAST 
  reader_mCategoryFormalParameterListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST 
  reader_mRoutineInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMMultiMethodNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMCategoryFormalParameterListAtIndex (C_Compiler & inLexique,
                              const GGS_formalParameterListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMRoutineInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_semanticInstructionListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_multiMethodListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_multiMethodListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mMultiMethodName (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalParameterListAST   & _mCategoryFormalParameterList (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticInstructionListAST   & _mRoutineInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map list '@multiMethodListMapAST'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_multiMethodListMapAST ;

//---------------------------------------------------------------------------*

class GGS_multiMethodListMapAST : public AC_GGS_listmap {
//--- Node class
  public : class cElement : public cPtrListMapObject {
 //--- List attribute
    public : GGS_multiMethodListAST mListObject ;
 //--- Constructor
    public : cElement (LOCATION_ARGS) ;
 //--- Description
    public : virtual C_String performDescription (const PMSInt32 inIndentation) const ;
    public : virtual cPtrObject * cloneObject (LOCATION_ARGS) ;
    public : virtual bool isEqual (const cPtrListMapObject * inOperand) const ;
  } ;

//--- 'emptyMap' constructor
  public : static GGS_multiMethodListMapAST
  constructor_emptyMap (void) ;

//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_multiMethodListMapAST inOperand) ; //Don't pass 'inOperand' by reference !

//--- Handling '.' GALGAS operator
  public : GGS_multiMethodListMapAST operator_concat (const GGS_multiMethodListMapAST & inOperand) const ;

//--- Handle '+=' operator
  public : void
  addAssign_operation (const GGS_string & inKey,
                        const GGS_lstring & inAttribute0,
                        const GGS_formalParameterListAST & inAttribute1,
                        const GGS_semanticInstructionListAST & inAttribute2) ;

//--- For 'description' reader
  protected : virtual const char * _typeNameForDescriptionReader (void) const ;

//--- Reader 'allKeys'
  public : GGS_stringset
  reader_allKeys (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'keyList'
  public : GGS_stringlist
  reader_keyList (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'listForKey'
  public : GGS_multiMethodListAST
  reader_listForKey (C_Compiler & inLexique,
                     const GGS_string & inKey
                     COMMA_LOCATION_ARGS) const ;

//--- Enumerator
  public : class cEnumerator : public cAbstractDictionaryEnumerator {
  //--- Contructor
    public : cEnumerator (const GGS_multiMethodListMapAST & inListMap,
                          const bool inAscending) ;
  //--- Associated object accessor
    public : const GGS_multiMethodListAST & _object (LOCATION_ARGS) const ;
  } ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_multiMethodListMapAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@overridingMultiMethodListAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_overridingMultiMethodListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_overridingMultiMethodListAST ;

//---------------------------------------------------------------------------*

class GGS_overridingMultiMethodListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_overridingMultiMethodListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_overridingMultiMethodListAST constructor_emptyList (void) ;
  public : static GGS_overridingMultiMethodListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_overridingMultiMethodListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_overridingMultiMethodListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_overridingMultiMethodListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_overridingMultiMethodListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_formalParameterListAST & _out_1,
                              GGS_semanticInstructionListAST & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_formalParameterListAST & _out_1,
                             GGS_semanticInstructionListAST & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_formalParameterListAST & _out_1,
                                GGS_semanticInstructionListAST & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_formalParameterListAST & _out_1,
                                 GGS_semanticInstructionListAST & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_overridingMultiMethodListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_overridingMultiMethodListAST operator_concat (const GGS_overridingMultiMethodListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameterListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mOverridingMultiMethodMethodNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameterListAST 
  reader_mOverridingCategoryFormalParameterListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST 
  reader_mRoutineInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMOverridingMultiMethodMethodNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMOverridingCategoryFormalParameterListAtIndex (C_Compiler & inLexique,
                              const GGS_formalParameterListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMRoutineInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_semanticInstructionListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_overridingMultiMethodListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_overridingMultiMethodListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mOverridingMultiMethodMethodName (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalParameterListAST   & _mOverridingCategoryFormalParameterList (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticInstructionListAST   & _mRoutineInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Map list '@overridingMultiMethodListMapAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_overridingMultiMethodListMapAST ;

//---------------------------------------------------------------------------*

class GGS_overridingMultiMethodListMapAST : public AC_GGS_listmap {
//--- Node class
  public : class cElement : public cPtrListMapObject {
 //--- List attribute
    public : GGS_overridingMultiMethodListAST mListObject ;
 //--- Constructor
    public : cElement (LOCATION_ARGS) ;
 //--- Description
    public : virtual C_String performDescription (const PMSInt32 inIndentation) const ;
    public : virtual cPtrObject * cloneObject (LOCATION_ARGS) ;
    public : virtual bool isEqual (const cPtrListMapObject * inOperand) const ;
  } ;

//--- 'emptyMap' constructor
  public : static GGS_overridingMultiMethodListMapAST
  constructor_emptyMap (void) ;

//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_overridingMultiMethodListMapAST inOperand) ; //Don't pass 'inOperand' by reference !

//--- Handling '.' GALGAS operator
  public : GGS_overridingMultiMethodListMapAST operator_concat (const GGS_overridingMultiMethodListMapAST & inOperand) const ;

//--- Handle '+=' operator
  public : void
  addAssign_operation (const GGS_string & inKey,
                        const GGS_lstring & inAttribute0,
                        const GGS_formalParameterListAST & inAttribute1,
                        const GGS_semanticInstructionListAST & inAttribute2) ;

//--- For 'description' reader
  protected : virtual const char * _typeNameForDescriptionReader (void) const ;

//--- Reader 'allKeys'
  public : GGS_stringset
  reader_allKeys (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'keyList'
  public : GGS_stringlist
  reader_keyList (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'listForKey'
  public : GGS_overridingMultiMethodListAST
  reader_listForKey (C_Compiler & inLexique,
                     const GGS_string & inKey
                     COMMA_LOCATION_ARGS) const ;

//--- Enumerator
  public : class cEnumerator : public cAbstractDictionaryEnumerator {
  //--- Contructor
    public : cEnumerator (const GGS_overridingMultiMethodListMapAST & inListMap,
                          const bool inAscending) ;
  //--- Associated object accessor
    public : const GGS_overridingMultiMethodListAST & _object (LOCATION_ARGS) const ;
  } ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_overridingMultiMethodListMapAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@abstractMultiReaderListAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_abstractMultiReaderListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_abstractMultiReaderListAST ;

//---------------------------------------------------------------------------*

class GGS_abstractMultiReaderListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_abstractMultiReaderListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_abstractMultiReaderListAST constructor_emptyList (void) ;
  public : static GGS_abstractMultiReaderListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_formalInputParameterListAST & argument_1,
                                const GGS_lstring & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_abstractMultiReaderListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_abstractMultiReaderListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_abstractMultiReaderListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_abstractMultiReaderListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_formalInputParameterListAST & _out_1,
                              GGS_lstring & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_formalInputParameterListAST & _out_1,
                             GGS_lstring & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_formalInputParameterListAST & _out_1,
                                GGS_lstring & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_formalInputParameterListAST & _out_1,
                                 GGS_lstring & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_abstractMultiReaderListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_formalInputParameterListAST & argument_1,
                                const GGS_lstring & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_abstractMultiReaderListAST operator_concat (const GGS_abstractMultiReaderListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalInputParameterListAST & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalInputParameterListAST & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalInputParameterListAST & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mAbstractMultiReaderNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalInputParameterListAST 
  reader_mAbstractCategoryFormalInputParameterListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mReturnedTypeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMAbstractMultiReaderNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAbstractCategoryFormalInputParameterListAtIndex (C_Compiler & inLexique,
                              const GGS_formalInputParameterListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMReturnedTypeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_abstractMultiReaderListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_abstractMultiReaderListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mAbstractMultiReaderName (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalInputParameterListAST   & _mAbstractCategoryFormalInputParameterList (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mReturnedTypeName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Map list '@abstractMultiReaderListMapAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_abstractMultiReaderListMapAST ;

//---------------------------------------------------------------------------*

class GGS_abstractMultiReaderListMapAST : public AC_GGS_listmap {
//--- Node class
  public : class cElement : public cPtrListMapObject {
 //--- List attribute
    public : GGS_abstractMultiReaderListAST mListObject ;
 //--- Constructor
    public : cElement (LOCATION_ARGS) ;
 //--- Description
    public : virtual C_String performDescription (const PMSInt32 inIndentation) const ;
    public : virtual cPtrObject * cloneObject (LOCATION_ARGS) ;
    public : virtual bool isEqual (const cPtrListMapObject * inOperand) const ;
  } ;

//--- 'emptyMap' constructor
  public : static GGS_abstractMultiReaderListMapAST
  constructor_emptyMap (void) ;

//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_abstractMultiReaderListMapAST inOperand) ; //Don't pass 'inOperand' by reference !

//--- Handling '.' GALGAS operator
  public : GGS_abstractMultiReaderListMapAST operator_concat (const GGS_abstractMultiReaderListMapAST & inOperand) const ;

//--- Handle '+=' operator
  public : void
  addAssign_operation (const GGS_string & inKey,
                        const GGS_lstring & inAttribute0,
                        const GGS_formalInputParameterListAST & inAttribute1,
                        const GGS_lstring & inAttribute2) ;

//--- For 'description' reader
  protected : virtual const char * _typeNameForDescriptionReader (void) const ;

//--- Reader 'allKeys'
  public : GGS_stringset
  reader_allKeys (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'keyList'
  public : GGS_stringlist
  reader_keyList (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'listForKey'
  public : GGS_abstractMultiReaderListAST
  reader_listForKey (C_Compiler & inLexique,
                     const GGS_string & inKey
                     COMMA_LOCATION_ARGS) const ;

//--- Enumerator
  public : class cEnumerator : public cAbstractDictionaryEnumerator {
  //--- Contructor
    public : cEnumerator (const GGS_abstractMultiReaderListMapAST & inListMap,
                          const bool inAscending) ;
  //--- Associated object accessor
    public : const GGS_abstractMultiReaderListAST & _object (LOCATION_ARGS) const ;
  } ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_abstractMultiReaderListMapAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@multiReaderListAST'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_multiReaderListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_multiReaderListAST ;

//---------------------------------------------------------------------------*

class GGS_multiReaderListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_multiReaderListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_multiReaderListAST constructor_emptyList (void) ;
  public : static GGS_multiReaderListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_formalInputParameterListAST & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_semanticInstructionListAST & argument_4) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_multiReaderListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_multiReaderListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_multiReaderListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_multiReaderListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_formalInputParameterListAST & _out_1,
                              GGS_lstring & _out_2,
                              GGS_lstring & _out_3,
                              GGS_semanticInstructionListAST & _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_formalInputParameterListAST & _out_1,
                             GGS_lstring & _out_2,
                             GGS_lstring & _out_3,
                             GGS_semanticInstructionListAST & _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_formalInputParameterListAST & _out_1,
                                GGS_lstring & _out_2,
                                GGS_lstring & _out_3,
                                GGS_semanticInstructionListAST & _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_formalInputParameterListAST & _out_1,
                                 GGS_lstring & _out_2,
                                 GGS_lstring & _out_3,
                                 GGS_semanticInstructionListAST & _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_multiReaderListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_formalInputParameterListAST & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_semanticInstructionListAST & argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_multiReaderListAST operator_concat (const GGS_multiReaderListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalInputParameterListAST & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_semanticInstructionListAST & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalInputParameterListAST & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_semanticInstructionListAST & argument_4
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalInputParameterListAST & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_semanticInstructionListAST & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mMultiReaderNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalInputParameterListAST 
  reader_mReaderCategoryFormalInputParameterListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mReturnedTypeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mReturnedVariableNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST 
  reader_mRoutineInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMMultiReaderNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMReaderCategoryFormalInputParameterListAtIndex (C_Compiler & inLexique,
                              const GGS_formalInputParameterListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMReturnedTypeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMReturnedVariableNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMRoutineInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_semanticInstructionListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_multiReaderListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_multiReaderListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mMultiReaderName (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalInputParameterListAST   & _mReaderCategoryFormalInputParameterList (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mReturnedTypeName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mReturnedVariableName (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticInstructionListAST   & _mRoutineInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map list '@multiReaderListMapAST'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_multiReaderListMapAST ;

//---------------------------------------------------------------------------*

class GGS_multiReaderListMapAST : public AC_GGS_listmap {
//--- Node class
  public : class cElement : public cPtrListMapObject {
 //--- List attribute
    public : GGS_multiReaderListAST mListObject ;
 //--- Constructor
    public : cElement (LOCATION_ARGS) ;
 //--- Description
    public : virtual C_String performDescription (const PMSInt32 inIndentation) const ;
    public : virtual cPtrObject * cloneObject (LOCATION_ARGS) ;
    public : virtual bool isEqual (const cPtrListMapObject * inOperand) const ;
  } ;

//--- 'emptyMap' constructor
  public : static GGS_multiReaderListMapAST
  constructor_emptyMap (void) ;

//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_multiReaderListMapAST inOperand) ; //Don't pass 'inOperand' by reference !

//--- Handling '.' GALGAS operator
  public : GGS_multiReaderListMapAST operator_concat (const GGS_multiReaderListMapAST & inOperand) const ;

//--- Handle '+=' operator
  public : void
  addAssign_operation (const GGS_string & inKey,
                        const GGS_lstring & inAttribute0,
                        const GGS_formalInputParameterListAST & inAttribute1,
                        const GGS_lstring & inAttribute2,
                        const GGS_lstring & inAttribute3,
                        const GGS_semanticInstructionListAST & inAttribute4) ;

//--- For 'description' reader
  protected : virtual const char * _typeNameForDescriptionReader (void) const ;

//--- Reader 'allKeys'
  public : GGS_stringset
  reader_allKeys (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'keyList'
  public : GGS_stringlist
  reader_keyList (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'listForKey'
  public : GGS_multiReaderListAST
  reader_listForKey (C_Compiler & inLexique,
                     const GGS_string & inKey
                     COMMA_LOCATION_ARGS) const ;

//--- Enumerator
  public : class cEnumerator : public cAbstractDictionaryEnumerator {
  //--- Contructor
    public : cEnumerator (const GGS_multiReaderListMapAST & inListMap,
                          const bool inAscending) ;
  //--- Associated object accessor
    public : const GGS_multiReaderListAST & _object (LOCATION_ARGS) const ;
  } ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_multiReaderListMapAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@overridingMultiReaderListAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_overridingMultiReaderListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_overridingMultiReaderListAST ;

//---------------------------------------------------------------------------*

class GGS_overridingMultiReaderListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_overridingMultiReaderListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_overridingMultiReaderListAST constructor_emptyList (void) ;
  public : static GGS_overridingMultiReaderListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_formalInputParameterListAST & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_semanticInstructionListAST & argument_4) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_overridingMultiReaderListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_overridingMultiReaderListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_overridingMultiReaderListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_overridingMultiReaderListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_formalInputParameterListAST & _out_1,
                              GGS_lstring & _out_2,
                              GGS_lstring & _out_3,
                              GGS_semanticInstructionListAST & _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_formalInputParameterListAST & _out_1,
                             GGS_lstring & _out_2,
                             GGS_lstring & _out_3,
                             GGS_semanticInstructionListAST & _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_formalInputParameterListAST & _out_1,
                                GGS_lstring & _out_2,
                                GGS_lstring & _out_3,
                                GGS_semanticInstructionListAST & _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_formalInputParameterListAST & _out_1,
                                 GGS_lstring & _out_2,
                                 GGS_lstring & _out_3,
                                 GGS_semanticInstructionListAST & _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_overridingMultiReaderListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_formalInputParameterListAST & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_semanticInstructionListAST & argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_overridingMultiReaderListAST operator_concat (const GGS_overridingMultiReaderListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalInputParameterListAST & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_semanticInstructionListAST & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalInputParameterListAST & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_semanticInstructionListAST & argument_4
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalInputParameterListAST & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_semanticInstructionListAST & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mOverridingMultiReaderNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalInputParameterListAST 
  reader_mOverridingReaderFormalInputParameterListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mReturnedTypeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mReturnedVariableNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST 
  reader_mRoutineInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMOverridingMultiReaderNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMOverridingReaderFormalInputParameterListAtIndex (C_Compiler & inLexique,
                              const GGS_formalInputParameterListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMReturnedTypeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMReturnedVariableNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMRoutineInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_semanticInstructionListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_overridingMultiReaderListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_overridingMultiReaderListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mOverridingMultiReaderName (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalInputParameterListAST   & _mOverridingReaderFormalInputParameterList (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mReturnedTypeName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mReturnedVariableName (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticInstructionListAST   & _mRoutineInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Map list '@overridingMultiReaderListMapAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_overridingMultiReaderListMapAST ;

//---------------------------------------------------------------------------*

class GGS_overridingMultiReaderListMapAST : public AC_GGS_listmap {
//--- Node class
  public : class cElement : public cPtrListMapObject {
 //--- List attribute
    public : GGS_overridingMultiReaderListAST mListObject ;
 //--- Constructor
    public : cElement (LOCATION_ARGS) ;
 //--- Description
    public : virtual C_String performDescription (const PMSInt32 inIndentation) const ;
    public : virtual cPtrObject * cloneObject (LOCATION_ARGS) ;
    public : virtual bool isEqual (const cPtrListMapObject * inOperand) const ;
  } ;

//--- 'emptyMap' constructor
  public : static GGS_overridingMultiReaderListMapAST
  constructor_emptyMap (void) ;

//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_overridingMultiReaderListMapAST inOperand) ; //Don't pass 'inOperand' by reference !

//--- Handling '.' GALGAS operator
  public : GGS_overridingMultiReaderListMapAST operator_concat (const GGS_overridingMultiReaderListMapAST & inOperand) const ;

//--- Handle '+=' operator
  public : void
  addAssign_operation (const GGS_string & inKey,
                        const GGS_lstring & inAttribute0,
                        const GGS_formalInputParameterListAST & inAttribute1,
                        const GGS_lstring & inAttribute2,
                        const GGS_lstring & inAttribute3,
                        const GGS_semanticInstructionListAST & inAttribute4) ;

//--- For 'description' reader
  protected : virtual const char * _typeNameForDescriptionReader (void) const ;

//--- Reader 'allKeys'
  public : GGS_stringset
  reader_allKeys (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'keyList'
  public : GGS_stringlist
  reader_keyList (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'listForKey'
  public : GGS_overridingMultiReaderListAST
  reader_listForKey (C_Compiler & inLexique,
                     const GGS_string & inKey
                     COMMA_LOCATION_ARGS) const ;

//--- Enumerator
  public : class cEnumerator : public cAbstractDictionaryEnumerator {
  //--- Contructor
    public : cEnumerator (const GGS_overridingMultiReaderListMapAST & inListMap,
                          const bool inAscending) ;
  //--- Associated object accessor
    public : const GGS_overridingMultiReaderListAST & _object (LOCATION_ARGS) const ;
  } ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_overridingMultiReaderListMapAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@attributeInCollectionListAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_attributeInCollectionListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_attributeInCollectionListAST ;

//---------------------------------------------------------------------------*

class GGS_attributeInCollectionListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_attributeInCollectionListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_attributeInCollectionListAST constructor_emptyList (void) ;
  public : static GGS_attributeInCollectionListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_attributeInCollectionListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_attributeInCollectionListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_attributeInCollectionListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_attributeInCollectionListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_attributeInCollectionListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_attributeInCollectionListAST operator_concat (const GGS_attributeInCollectionListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mAttributeTypeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mAttributeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMAttributeTypeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAttributeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_attributeInCollectionListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_attributeInCollectionListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mAttributeTypeName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mAttributeName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_listmapDeclarationAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_listmapDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_listmapDeclarationAST : public GGS_semanticDeclarationAST {
//--- Default constructor
  public : inline GGS_listmapDeclarationAST (void) :
  GGS_semanticDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_listmapDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_listmapDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_listmapDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_listmapDeclarationAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_listmapDeclarationAST * getPtr (void) const {
    return (cPtr_listmapDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mListmapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mAssociatedListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_listmapDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_listmapDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_listmapDeclarationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_listmapDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__listmapDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Class for 'mapAutomatonMessageKind' Enumeration               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapAutomatonMessageKind ;

//---------------------------------------------------------------------------*

class GGS_mapAutomatonMessageKind : public GGS__root {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_errorMessage, enum_noMessage, enum_warningMessage} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_mapAutomatonMessageKind (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_mapAutomatonMessageKind (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline PMUInt16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : bool isBuilt (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapAutomatonMessageKind castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Construction from GALGAS constructor
  public : static inline GGS_mapAutomatonMessageKind  constructor_errorMessage (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_mapAutomatonMessageKind (enum_errorMessage) ;
  }
  public : static inline GGS_mapAutomatonMessageKind  constructor_noMessage (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_mapAutomatonMessageKind (enum_noMessage) ;
  }
  public : static inline GGS_mapAutomatonMessageKind  constructor_warningMessage (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_mapAutomatonMessageKind (enum_warningMessage) ;
  }

//--- Readers

//--- 'description' reader
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator_isEqual (const GGS_mapAutomatonMessageKind inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_mapAutomatonMessageKind inOperand) const ;
  public : GGS_bool operator_infOrEqual (const GGS_mapAutomatonMessageKind inOperand) const ;
  public : GGS_bool operator_supOrEqual (const GGS_mapAutomatonMessageKind inOperand) const ;
  public : GGS_bool operator_strictInf (const GGS_mapAutomatonMessageKind inOperand) const ;
  public : GGS_bool operator_strictSup (const GGS_mapAutomatonMessageKind inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@mapStateTransitionList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapStateTransitionList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapStateTransitionList ;

//---------------------------------------------------------------------------*

class GGS_mapStateTransitionList : public AC_GGS_list {
  public : typedef elementOf_GGS_mapStateTransitionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_mapStateTransitionList constructor_emptyList (void) ;
  public : static GGS_mapStateTransitionList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_mapAutomatonMessageKind& argument_2,
                                const GGS_lstring & argument_3) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_mapStateTransitionList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_mapStateTransitionList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_mapStateTransitionList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_mapStateTransitionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1,
                              GGS_mapAutomatonMessageKind& _out_2,
                              GGS_lstring & _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1,
                             GGS_mapAutomatonMessageKind& _out_2,
                             GGS_lstring & _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1,
                                GGS_mapAutomatonMessageKind& _out_2,
                                GGS_lstring & _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_mapAutomatonMessageKind& _out_2,
                                 GGS_lstring & _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_mapStateTransitionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_mapAutomatonMessageKind& argument_2,
                                const GGS_lstring & argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_mapStateTransitionList operator_concat (const GGS_mapStateTransitionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_mapAutomatonMessageKind& argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_mapAutomatonMessageKind& argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_mapAutomatonMessageKind& argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mActionNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mTargetStateNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_mapAutomatonMessageKind
  reader_mTransitionMessageKindAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mTransitionMessageAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMActionNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTargetStateNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTransitionMessageKindAtIndex (C_Compiler & inLexique,
                              const GGS_mapAutomatonMessageKind & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTransitionMessageAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapStateTransitionList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_mapStateTransitionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mActionName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mTargetStateName (LOCATION_ARGS) const ;
    public : /* const */ GGS_mapAutomatonMessageKind  & _mTransitionMessageKind (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mTransitionMessage (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           list '@mapStateList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapStateList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapStateList ;

//---------------------------------------------------------------------------*

class GGS_mapStateList : public AC_GGS_list {
  public : typedef elementOf_GGS_mapStateList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_mapStateList constructor_emptyList (void) ;
  public : static GGS_mapStateList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_mapAutomatonMessageKind& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_mapStateTransitionList & argument_3) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_mapStateList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_mapStateList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_mapStateList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_mapStateList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_mapAutomatonMessageKind& _out_1,
                              GGS_lstring & _out_2,
                              GGS_mapStateTransitionList & _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_mapAutomatonMessageKind& _out_1,
                             GGS_lstring & _out_2,
                             GGS_mapStateTransitionList & _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_mapAutomatonMessageKind& _out_1,
                                GGS_lstring & _out_2,
                                GGS_mapStateTransitionList & _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_mapAutomatonMessageKind& _out_1,
                                 GGS_lstring & _out_2,
                                 GGS_mapStateTransitionList & _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_mapStateList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_mapAutomatonMessageKind& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_mapStateTransitionList & argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_mapStateList operator_concat (const GGS_mapStateList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_mapAutomatonMessageKind& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_mapStateTransitionList & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_mapAutomatonMessageKind& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_mapStateTransitionList & argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_mapAutomatonMessageKind& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_mapStateTransitionList & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mStateNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_mapAutomatonMessageKind
  reader_mStateMessageKindAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mStateMessageAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_mapStateTransitionList 
  reader_mTransitionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMStateNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMStateMessageKindAtIndex (C_Compiler & inLexique,
                              const GGS_mapAutomatonMessageKind & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMStateMessageAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTransitionListAtIndex (C_Compiler & inLexique,
                              const GGS_mapStateTransitionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapStateList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_mapStateList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mStateName (LOCATION_ARGS) const ;
    public : /* const */ GGS_mapAutomatonMessageKind  & _mStateMessageKind (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mStateMessage (LOCATION_ARGS) const ;
    public : /* const */ GGS_mapStateTransitionList   & _mTransitionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@insertMethodListAST'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_insertMethodListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_insertMethodListAST ;

//---------------------------------------------------------------------------*

class GGS_insertMethodListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_insertMethodListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_insertMethodListAST constructor_emptyList (void) ;
  public : static GGS_insertMethodListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_insertMethodListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_insertMethodListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_insertMethodListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_insertMethodListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1,
                              GGS_lstring & _out_2,
                              GGS_lstring & _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1,
                             GGS_lstring & _out_2,
                             GGS_lstring & _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1,
                                GGS_lstring & _out_2,
                                GGS_lstring & _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_lstring & _out_2,
                                 GGS_lstring & _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_insertMethodListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_insertMethodListAST operator_concat (const GGS_insertMethodListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mMethodNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mErrorMessageAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mShadowErrorMessageAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mInitialStateNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMMethodNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMErrorMessageAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMShadowErrorMessageAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInitialStateNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_insertMethodListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_insertMethodListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mMethodName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mErrorMessage (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mShadowErrorMessage (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mInitialStateName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@mapSearchMethodListAST'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapSearchMethodListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapSearchMethodListAST ;

//---------------------------------------------------------------------------*

class GGS_mapSearchMethodListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_mapSearchMethodListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_mapSearchMethodListAST constructor_emptyList (void) ;
  public : static GGS_mapSearchMethodListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_mapSearchMethodListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_mapSearchMethodListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_mapSearchMethodListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_mapSearchMethodListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1,
                              GGS_lstring & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1,
                             GGS_lstring & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1,
                                GGS_lstring & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_lstring & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_mapSearchMethodListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_mapSearchMethodListAST operator_concat (const GGS_mapSearchMethodListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mMethodNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mErrorMessageAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mActionNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMMethodNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMErrorMessageAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMActionNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapSearchMethodListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_mapSearchMethodListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mMethodName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mErrorMessage (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mActionName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@mapRemoveMethodListAST'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapRemoveMethodListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapRemoveMethodListAST ;

//---------------------------------------------------------------------------*

class GGS_mapRemoveMethodListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_mapRemoveMethodListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_mapRemoveMethodListAST constructor_emptyList (void) ;
  public : static GGS_mapRemoveMethodListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_mapRemoveMethodListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_mapRemoveMethodListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_mapRemoveMethodListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_mapRemoveMethodListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_mapRemoveMethodListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_mapRemoveMethodListAST operator_concat (const GGS_mapRemoveMethodListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mMethodNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mErrorMessageAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMMethodNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMErrorMessageAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapRemoveMethodListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_mapRemoveMethodListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mMethodName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mErrorMessage (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                list '@insertOrReplaceDeclarationListAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_insertOrReplaceDeclarationListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_insertOrReplaceDeclarationListAST ;

//---------------------------------------------------------------------------*

class GGS_insertOrReplaceDeclarationListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_insertOrReplaceDeclarationListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_insertOrReplaceDeclarationListAST constructor_emptyList (void) ;
  public : static GGS_insertOrReplaceDeclarationListAST constructor_listWithValue (const GGS_location & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_insertOrReplaceDeclarationListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_insertOrReplaceDeclarationListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_insertOrReplaceDeclarationListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_insertOrReplaceDeclarationListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_location & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_location & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_location & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_location & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_insertOrReplaceDeclarationListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_location & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_insertOrReplaceDeclarationListAST operator_concat (const GGS_insertOrReplaceDeclarationListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_location 
  reader_mInsertOrReplaceDeclarationLocationAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMInsertOrReplaceDeclarationLocationAtIndex (C_Compiler & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_insertOrReplaceDeclarationListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_insertOrReplaceDeclarationListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_location   & _mInsertOrReplaceDeclarationLocation (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_mapDeclarationAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_mapDeclarationAST : public GGS_semanticDeclarationAST {
//--- Default constructor
  public : inline GGS_mapDeclarationAST (void) :
  GGS_semanticDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_mapDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_mapDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_mapDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_mapDeclarationAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionListAST & argument_1,
                                const GGS_insertMethodListAST & argument_2,
                                const GGS_mapSearchMethodListAST & argument_3,
                                const GGS_mapRemoveMethodListAST & argument_4,
                                const GGS_insertOrReplaceDeclarationListAST & argument_5,
                                const GGS_mapStateList & argument_6
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_mapDeclarationAST * getPtr (void) const {
    return (cPtr_mapDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeInCollectionListAST  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_insertMethodListAST  reader_mInsertMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapSearchMethodListAST  reader_mSearchMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapRemoveMethodListAST  reader_mRemoveMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_insertOrReplaceDeclarationListAST  reader_mInsertOrReplaceDeclarationListAST (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapStateList  reader_mMapStateList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_mapDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_mapDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_mapDeclarationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__mapDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_mapProxyDeclarationAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapProxyDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_mapProxyDeclarationAST : public GGS_semanticDeclarationAST {
//--- Default constructor
  public : inline GGS_mapProxyDeclarationAST (void) :
  GGS_semanticDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_mapProxyDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_mapProxyDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_mapProxyDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_mapProxyDeclarationAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_mapProxyDeclarationAST * getPtr (void) const {
    return (cPtr_mapProxyDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapProxyTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mAssociatedMapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_mapProxyDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_mapProxyDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_mapProxyDeclarationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapProxyDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__mapProxyDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 list '@abstractMethodDefinitionListAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_abstractMethodDefinitionListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_abstractMethodDefinitionListAST ;

//---------------------------------------------------------------------------*

class GGS_abstractMethodDefinitionListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_abstractMethodDefinitionListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_abstractMethodDefinitionListAST constructor_emptyList (void) ;
  public : static GGS_abstractMethodDefinitionListAST constructor_listWithValue (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalParameterListAST & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_abstractMethodDefinitionListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_abstractMethodDefinitionListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_abstractMethodDefinitionListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_abstractMethodDefinitionListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_bool& _out_0,
                              GGS_lstring & _out_1,
                              GGS_formalParameterListAST & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_bool& _out_0,
                             GGS_lstring & _out_1,
                             GGS_formalParameterListAST & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_bool& _out_0,
                                GGS_lstring & _out_1,
                                GGS_formalParameterListAST & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_bool& _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_formalParameterListAST & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_abstractMethodDefinitionListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalParameterListAST & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_abstractMethodDefinitionListAST operator_concat (const GGS_abstractMethodDefinitionListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalParameterListAST & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalParameterListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalParameterListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_bool
  reader_mIsOverridingAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mMethodNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameterListAST 
  reader_mSignatureAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMIsOverridingAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMMethodNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMSignatureAtIndex (C_Compiler & inLexique,
                              const GGS_formalParameterListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_abstractMethodDefinitionListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_abstractMethodDefinitionListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_bool  & _mIsOverriding (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mMethodName (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalParameterListAST   & _mSignature (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@methodDefinitionListAST'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_methodDefinitionListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_methodDefinitionListAST ;

//---------------------------------------------------------------------------*

class GGS_methodDefinitionListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_methodDefinitionListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_methodDefinitionListAST constructor_emptyList (void) ;
  public : static GGS_methodDefinitionListAST constructor_listWithValue (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalParameterListAST & argument_2,
                                const GGS_semanticInstructionListAST & argument_3,
                                const GGS_location & argument_4) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_methodDefinitionListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_methodDefinitionListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_methodDefinitionListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_methodDefinitionListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_bool& _out_0,
                              GGS_lstring & _out_1,
                              GGS_formalParameterListAST & _out_2,
                              GGS_semanticInstructionListAST & _out_3,
                              GGS_location & _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_bool& _out_0,
                             GGS_lstring & _out_1,
                             GGS_formalParameterListAST & _out_2,
                             GGS_semanticInstructionListAST & _out_3,
                             GGS_location & _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_bool& _out_0,
                                GGS_lstring & _out_1,
                                GGS_formalParameterListAST & _out_2,
                                GGS_semanticInstructionListAST & _out_3,
                                GGS_location & _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_bool& _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_formalParameterListAST & _out_2,
                                 GGS_semanticInstructionListAST & _out_3,
                                 GGS_location & _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_methodDefinitionListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalParameterListAST & argument_2,
                                const GGS_semanticInstructionListAST & argument_3,
                                const GGS_location & argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_methodDefinitionListAST operator_concat (const GGS_methodDefinitionListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalParameterListAST & argument_2,
                                const GGS_semanticInstructionListAST & argument_3,
                                const GGS_location & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalParameterListAST & argument_2,
                                const GGS_semanticInstructionListAST & argument_3,
                                const GGS_location & argument_4
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalParameterListAST & argument_2,
                                const GGS_semanticInstructionListAST & argument_3,
                                const GGS_location & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_bool
  reader_mIsOverridingAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mMethodNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameterListAST 
  reader_mSignatureAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST 
  reader_mInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_location 
  reader_mEndOfMethodLocationAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMIsOverridingAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMMethodNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMSignatureAtIndex (C_Compiler & inLexique,
                              const GGS_formalParameterListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_semanticInstructionListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMEndOfMethodLocationAtIndex (C_Compiler & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_methodDefinitionListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_methodDefinitionListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_bool  & _mIsOverriding (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mMethodName (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalParameterListAST   & _mSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticInstructionListAST   & _mInstructionList (LOCATION_ARGS) const ;
    public : /* const */ GGS_location   & _mEndOfMethodLocation (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@lazyAttributeListAST'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_lazyAttributeListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_lazyAttributeListAST ;

//---------------------------------------------------------------------------*

class GGS_lazyAttributeListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_lazyAttributeListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_lazyAttributeListAST constructor_emptyList (void) ;
  public : static GGS_lazyAttributeListAST constructor_listWithValue (const GGS_location & argument_0,
                                const GGS_attributeInCollectionListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_lazyAttributeListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_lazyAttributeListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_lazyAttributeListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_lazyAttributeListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_location & _out_0,
                              GGS_attributeInCollectionListAST & _out_1,
                              GGS_semanticInstructionListAST & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_location & _out_0,
                             GGS_attributeInCollectionListAST & _out_1,
                             GGS_semanticInstructionListAST & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_location & _out_0,
                                GGS_attributeInCollectionListAST & _out_1,
                                GGS_semanticInstructionListAST & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_location & _out_0,
                                 GGS_attributeInCollectionListAST & _out_1,
                                 GGS_semanticInstructionListAST & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_lazyAttributeListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_location & argument_0,
                                const GGS_attributeInCollectionListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_lazyAttributeListAST operator_concat (const GGS_lazyAttributeListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_attributeInCollectionListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_location & argument_0,
                                const GGS_attributeInCollectionListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_location & argument_0,
                                const GGS_attributeInCollectionListAST & argument_1,
                                const GGS_semanticInstructionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_location 
  reader_mLocationMagicNumberAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeInCollectionListAST 
  reader_mAttributeListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionListAST 
  reader_mInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMLocationMagicNumberAtIndex (C_Compiler & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAttributeListAtIndex (C_Compiler & inLexique,
                              const GGS_attributeInCollectionListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_semanticInstructionListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_lazyAttributeListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_lazyAttributeListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_location   & _mLocationMagicNumber (LOCATION_ARGS) const ;
    public : /* const */ GGS_attributeInCollectionListAST   & _mAttributeList (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticInstructionListAST   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_classDeclarationAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_classDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_classDeclarationAST : public GGS_semanticDeclarationAST {
//--- Default constructor
  public : inline GGS_classDeclarationAST (void) :
  GGS_semanticDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_classDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_classDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_classDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_classDeclarationAST constructor_new (C_Compiler & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstringlist & argument_3,
                                const GGS_attributeInCollectionListAST & argument_4,
                                const GGS_abstractMethodDefinitionListAST & argument_5,
                                const GGS_methodDefinitionListAST & argument_6,
                                const GGS_lazyAttributeListAST & argument_7
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_classDeclarationAST * getPtr (void) const {
    return (cPtr_classDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_mIsAbstract (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mClassTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSuperClassName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mClassFeatureList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeInCollectionListAST  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_abstractMethodDefinitionListAST  reader_mAbstractMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_methodDefinitionListAST  reader_mMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lazyAttributeListAST  reader_mLazyAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_classDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_classDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_classDeclarationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_classDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__classDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_listDeclarationAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_listDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_listDeclarationAST : public GGS_semanticDeclarationAST {
//--- Default constructor
  public : inline GGS_listDeclarationAST (void) :
  GGS_semanticDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_listDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_listDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_listDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_listDeclarationAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_listDeclarationAST * getPtr (void) const {
    return (cPtr_listDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeInCollectionListAST  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_listDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_listDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_listDeclarationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_listDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__listDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_structDeclarationAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_structDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_structDeclarationAST : public GGS_semanticDeclarationAST {
//--- Default constructor
  public : inline GGS_structDeclarationAST (void) :
  GGS_semanticDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_structDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_structDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_structDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_structDeclarationAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_structDeclarationAST * getPtr (void) const {
    return (cPtr_structDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mStructTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeInCollectionListAST  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_structDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_structDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_structDeclarationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_structDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__structDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 list '@sortedListSortDescriptorListAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_sortedListSortDescriptorListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sortedListSortDescriptorListAST ;

//---------------------------------------------------------------------------*

class GGS_sortedListSortDescriptorListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_sortedListSortDescriptorListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_sortedListSortDescriptorListAST constructor_emptyList (void) ;
  public : static GGS_sortedListSortDescriptorListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_sortedListSortDescriptorListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_sortedListSortDescriptorListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_sortedListSortDescriptorListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_sortedListSortDescriptorListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_bool& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_bool& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_bool& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_bool& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_sortedListSortDescriptorListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_sortedListSortDescriptorListAST operator_concat (const GGS_sortedListSortDescriptorListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mSortedAttributeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mAscendingAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMSortedAttributeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAscendingAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sortedListSortDescriptorListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_sortedListSortDescriptorListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mSortedAttributeName (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mAscending (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_sortedListDeclarationAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sortedListDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_sortedListDeclarationAST : public GGS_semanticDeclarationAST {
//--- Default constructor
  public : inline GGS_sortedListDeclarationAST (void) :
  GGS_semanticDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_sortedListDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sortedListDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sortedListDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sortedListDeclarationAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionListAST & argument_1,
                                const GGS_sortedListSortDescriptorListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sortedListDeclarationAST * getPtr (void) const {
    return (cPtr_sortedListDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mSortedListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeInCollectionListAST  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_sortedListSortDescriptorListAST  reader_mSortDescriptorList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sortedListDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sortedListDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_sortedListDeclarationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sortedListDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sortedListDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@enumMessageAssociationListAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageAssociationListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_enumMessageAssociationListAST ;

//---------------------------------------------------------------------------*

class GGS_enumMessageAssociationListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_enumMessageAssociationListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_enumMessageAssociationListAST constructor_emptyList (void) ;
  public : static GGS_enumMessageAssociationListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_enumMessageAssociationListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_enumMessageAssociationListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_enumMessageAssociationListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_enumMessageAssociationListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_enumMessageAssociationListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_enumMessageAssociationListAST operator_concat (const GGS_enumMessageAssociationListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mConstantNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mMessageAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMConstantNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMMessageAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_enumMessageAssociationListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_enumMessageAssociationListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mConstantName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mMessage (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@enumMessageListAST'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_enumMessageListAST ;

//---------------------------------------------------------------------------*

class GGS_enumMessageListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_enumMessageListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_enumMessageListAST constructor_emptyList (void) ;
  public : static GGS_enumMessageListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_enumMessageAssociationListAST & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_enumMessageListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_enumMessageListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_enumMessageListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_enumMessageListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_enumMessageAssociationListAST & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_enumMessageAssociationListAST & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_enumMessageAssociationListAST & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_enumMessageAssociationListAST & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_enumMessageListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_enumMessageAssociationListAST & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_enumMessageListAST operator_concat (const GGS_enumMessageListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_enumMessageAssociationListAST & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_enumMessageAssociationListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_enumMessageAssociationListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mEnumMessageNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_enumMessageAssociationListAST 
  reader_mMessageAssociationListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMEnumMessageNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMMessageAssociationListAtIndex (C_Compiler & inLexique,
                              const GGS_enumMessageAssociationListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_enumMessageListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_enumMessageListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mEnumMessageName (LOCATION_ARGS) const ;
    public : /* const */ GGS_enumMessageAssociationListAST   & _mMessageAssociationList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_enumDeclarationAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_enumDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_enumDeclarationAST : public GGS_semanticDeclarationAST {
//--- Default constructor
  public : inline GGS_enumDeclarationAST (void) :
  GGS_semanticDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_enumDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_enumDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_enumDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_enumDeclarationAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_enumMessageListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_enumDeclarationAST * getPtr (void) const {
    return (cPtr_enumDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mEnumTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mConstantList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_enumMessageListAST  reader_mEnumMessageList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_enumDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_enumDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_enumDeclarationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_enumDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__enumDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@filewrapperTemplateListAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_filewrapperTemplateListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_filewrapperTemplateListAST ;

//---------------------------------------------------------------------------*

class GGS_filewrapperTemplateListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_filewrapperTemplateListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_filewrapperTemplateListAST constructor_emptyList (void) ;
  public : static GGS_filewrapperTemplateListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalInputParameterListAST & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_filewrapperTemplateListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_filewrapperTemplateListAST
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_filewrapperTemplateListAST
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_filewrapperTemplateListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1,
                              GGS_formalInputParameterListAST & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1,
                             GGS_formalInputParameterListAST & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1,
                                GGS_formalInputParameterListAST & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_formalInputParameterListAST & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_filewrapperTemplateListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalInputParameterListAST & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_filewrapperTemplateListAST operator_concat (const GGS_filewrapperTemplateListAST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalInputParameterListAST & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalInputParameterListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalInputParameterListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mFilewrapperTemplateNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mFilewrapperTemplatePathAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalInputParameterListAST 
  reader_mFilewrapperTemplateFormalInputParametersAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMFilewrapperTemplateNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFilewrapperTemplatePathAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFilewrapperTemplateFormalInputParametersAtIndex (C_Compiler & inLexique,
                              const GGS_formalInputParameterListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_filewrapperTemplateListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_filewrapperTemplateListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mFilewrapperTemplateName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mFilewrapperTemplatePath (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalInputParameterListAST   & _mFilewrapperTemplateFormalInputParameters (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_filewrapperDeclarationAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_filewrapperDeclarationAST ;

//---------------------------------------------------------------------------*

class GGS_filewrapperDeclarationAST : public GGS_semanticDeclarationAST {
//--- Default constructor
  public : inline GGS_filewrapperDeclarationAST (void) :
  GGS_semanticDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_filewrapperDeclarationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_filewrapperDeclarationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_filewrapperDeclarationAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_filewrapperDeclarationAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2,
                                const GGS_filewrapperTemplateListAST & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_filewrapperDeclarationAST * getPtr (void) const {
    return (cPtr_filewrapperDeclarationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mFilewrapperName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mFilewrapperPath (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mFilewrapperExtensionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_filewrapperTemplateListAST  reader_mFilewrapperTemplateList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_filewrapperDeclarationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_filewrapperDeclarationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_filewrapperDeclarationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_filewrapperDeclarationAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__filewrapperDeclarationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_semanticsComponentAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_semanticsComponentAST ;

//---------------------------------------------------------------------------*

class GGS_semanticsComponentAST : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_semanticsComponentAST (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_semanticsComponentAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_semanticsComponentAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_semanticsComponentAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_semanticsComponentAST constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_semanticDeclarationStructAST& argument_2,
                                const GGS_location & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_semanticsComponentAST * getPtr (void) const {
    return (cPtr_semanticsComponentAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mSemanticsComponentName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mImportedComponentFileNameList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticDeclarationStructAST reader_mSemanticDeclarations (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mEndOfSourceFile (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_semanticsComponentAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_semanticsComponentAST * operator () (LOCATION_ARGS) const {
      return (cPtr_semanticsComponentAST *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_semanticsComponentAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__semanticsComponentAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_semanticExpressionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_semanticExpressionAST : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_semanticExpressionAST (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@semanticExpressionListAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_semanticExpressionListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_semanticExpressionAST  mExpression ;
  public : GGS_location  mEndOfExpressionLocation ;
//--- Constructor
  public : elementOf_GGS_semanticExpressionListAST (const GGS_semanticExpressionAST & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_semanticExpressionListAST * nextObject (void) const { return (elementOf_GGS_semanticExpressionListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_semanticExpressionListAST * previousObject (void) const { return (elementOf_GGS_semanticExpressionListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_semanticExpressionListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_selfInExpressionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_selfInExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_selfInExpressionAST (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mSelfLocation ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_hereExpressionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_hereExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_hereExpressionAST (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_trueExpressionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_trueExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_trueExpressionAST (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_falseExpressionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_falseExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_falseExpressionAST (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_literalCharExpressionAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_literalCharExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_literalCharExpressionAST (const GGS_lchar & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lchar  mCharacter ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_literalStringExpressionAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_literalStringExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_literalStringExpressionAST (const GGS_stringlist & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_stringlist  mStringSequence ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_literalDoubleExpressionAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_literalDoubleExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_literalDoubleExpressionAST (const GGS_ldouble & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_ldouble  mValue ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_literalUIntExpressionAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_literalUIntExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_literalUIntExpressionAST (const GGS_luint & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_luint  mValue ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_literalUInt64ExpressionAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_literalUInt64ExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_literalUInt64ExpressionAST (const GGS_luint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_luint64  mValue ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_literalSIntExpressionAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_literalSIntExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_literalSIntExpressionAST (const GGS_lsint & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lsint  mValue ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_literalSInt64ExpressionAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_literalSInt64ExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_literalSInt64ExpressionAST (const GGS_lsint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lsint64  mValue ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_constructorExpressionAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_constructorExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_constructorExpressionAST (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticExpressionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mConstructorName ;
  public : GGS_semanticExpressionListAST  mExpressions ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_readerCallExpressionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_readerCallExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_readerCallExpressionAST (const GGS_semanticExpressionAST & ,
                                const GGS_lstring & ,
                                const GGS_semanticExpressionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_semanticExpressionAST  mReceiver ;
  public : GGS_lstring  mReaderName ;
  public : GGS_semanticExpressionListAST  mExpressions ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_optionExpressionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_optionExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_optionExpressionAST (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mOptionComponentName ;
  public : GGS_lstring  mOptionEntryName ;
  public : GGS_lstring  mOptionReaderName ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_concatExpressionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_concatExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_concatExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_orExpressionAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_orExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_orExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_xorExpressionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_xorExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_xorExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_andExpressionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_andExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_andExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_equalExpressionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_equalExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_equalExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_notEqualExpressionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_notEqualExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_notEqualExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_lowerOrEqualExpressionAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_lowerOrEqualExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_lowerOrEqualExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_greaterOrEqualExpressionAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_greaterOrEqualExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_greaterOrEqualExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_strictGreaterExpressionAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_strictGreaterExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_strictGreaterExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_strictLowerExpressionAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_strictLowerExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_strictLowerExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_rightShiftExpressionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_rightShiftExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_rightShiftExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_leftShiftExpressionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_leftShiftExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_leftShiftExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_addExpressionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_addExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_addExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_subExpressionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_subExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_subExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_multiplicationExpressionAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_multiplicationExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_multiplicationExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_divisionExpressionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_divisionExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_divisionExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_moduloExpressionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_moduloExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_moduloExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mLeftExpression ;
  public : GGS_semanticExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_unaryMinusExpressionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_unaryMinusExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_unaryMinusExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_notExpressionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_notExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_notExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_negateExpressionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_negateExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_negateExpressionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpressionAST  mExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_ifExpressionAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ifExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_ifExpressionAST (const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_semanticExpressionAST  mIfExpression ;
  public : GGS_semanticExpressionAST  mThenExpression ;
  public : GGS_semanticExpressionAST  mElseExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_functionCallExpressionAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_functionCallExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_functionCallExpressionAST (const GGS_lstring & ,
                                const GGS_semanticExpressionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mFunctionName ;
  public : GGS_semanticExpressionListAST  mExpressions ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_varInExpressionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_varInExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_varInExpressionAST (const GGS_lstring & ,
                                const GGS_lstringlist & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mVarName ;
  public : GGS_lstringlist  mStructFieldList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_literalTypeInExpressionAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_literalTypeInExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_literalTypeInExpressionAST (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mVarName ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_castInExpressionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_castInExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_castInExpressionAST (const GGS_semanticExpressionAST & ,
                                const GGS_bool& ,
                                const GGS_lstring & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_semanticExpressionAST  mReceiverExpression ;
  public : GGS_bool mUseKindOfClass ;
  public : GGS_lstring  mTypeName ;
  public : GGS_semanticExpressionAST  mErrorLocationExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//   abstract class 'cPtr_filewrapperObjectInstanciationInExpressionAST'     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_filewrapperObjectInstanciationInExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_filewrapperObjectInstanciationInExpressionAST (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mFilewrapperName ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_filewrapperInExpressionAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_filewrapperInExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_filewrapperInExpressionAST (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mFilewrapperName ;
  public : GGS_lstring  mFilewrapperPath ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         abstract class 'cPtr_filewrapperTemplateInExpressionAST'          *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_filewrapperTemplateInExpressionAST : public cPtr_semanticExpressionAST {
  private : typedef cPtr_semanticExpressionAST inherited ;
//--- Constructor
  public : cPtr_filewrapperTemplateInExpressionAST (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticExpressionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mFilewrapperName ;
  public : GGS_lstring  mFilewrapperTemplateName ;
  public : GGS_semanticExpressionListAST  mExpressions ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@formalParameterListAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_formalParameterListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_formalArgumentPassingModeAST mFormalParameterPassingMode ;
  public : GGS_lstring  mFormalParameterTypeName ;
  public : GGS_lstring  mFormalParameterName ;
  public : GGS_bool mIsUnused ;
//--- Constructor
  public : elementOf_GGS_formalParameterListAST (const GGS_formalArgumentPassingModeAST& ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_formalParameterListAST * nextObject (void) const { return (elementOf_GGS_formalParameterListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_formalParameterListAST * previousObject (void) const { return (elementOf_GGS_formalParameterListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_formalParameterListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@formalInputParameterListAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_formalInputParameterListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mFormalParameterTypeName ;
  public : GGS_lstring  mFormalParameterName ;
  public : GGS_bool mIsUnused ;
//--- Constructor
  public : elementOf_GGS_formalInputParameterListAST (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_formalInputParameterListAST * nextObject (void) const { return (elementOf_GGS_formalInputParameterListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_formalInputParameterListAST * previousObject (void) const { return (elementOf_GGS_formalInputParameterListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_formalInputParameterListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_actualParameterAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_actualParameterAST : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_actualParameterAST (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_outputActualParameterAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_outputActualParameterAST : public cPtr_actualParameterAST {
  private : typedef cPtr_actualParameterAST inherited ;
//--- Constructor
  public : cPtr_outputActualParameterAST (const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_semanticExpressionAST  mOutputActualParameterExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           abstract class 'cPtr_outputInputActualParameterAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_outputInputActualParameterAST : public cPtr_actualParameterAST {
  private : typedef cPtr_actualParameterAST inherited ;
//--- Constructor
  public : cPtr_outputInputActualParameterAST (const GGS_lstring & ,
                                const GGS_lstringlist & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mOutputInputActualParameterName ;
  public : GGS_lstringlist  mStructAttributeList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_inputActualParameterAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_inputActualParameterAST : public cPtr_actualParameterAST {
  private : typedef cPtr_actualParameterAST inherited ;
//--- Constructor
  public : cPtr_inputActualParameterAST (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mDeclarationTypeName ;
  public : GGS_lstring  mInputActualParameterName ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_inputJokerActualParameterAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_inputJokerActualParameterAST : public cPtr_actualParameterAST {
  private : typedef cPtr_actualParameterAST inherited ;
//--- Constructor
  public : cPtr_inputJokerActualParameterAST (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@actualParameterListAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_actualParameterListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_actualParameterAST  mActualParameter ;
//--- Constructor
  public : elementOf_GGS_actualParameterListAST (const GGS_actualParameterAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_actualParameterListAST * nextObject (void) const { return (elementOf_GGS_actualParameterListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_actualParameterListAST * previousObject (void) const { return (elementOf_GGS_actualParameterListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_actualParameterListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@actualInputParameterListAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_actualInputParameterListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mActualParameterTypeName ;
  public : GGS_lstring  mActualParameterName ;
//--- Constructor
  public : elementOf_GGS_actualInputParameterListAST (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_actualInputParameterListAST * nextObject (void) const { return (elementOf_GGS_actualInputParameterListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_actualInputParameterListAST * previousObject (void) const { return (elementOf_GGS_actualInputParameterListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_actualInputParameterListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_syntaxInstructionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_syntaxInstructionAST : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_syntaxInstructionAST (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mStartLocation ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_semanticInstructionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_semanticInstructionAST : public cPtr_syntaxInstructionAST {
  private : typedef cPtr_syntaxInstructionAST inherited ;
//--- Constructor
  public : cPtr_semanticInstructionAST (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@semanticInstructionListAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_semanticInstructionListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_semanticInstructionAST  mInstruction ;
//--- Constructor
  public : elementOf_GGS_semanticInstructionListAST (const GGS_semanticInstructionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_semanticInstructionListAST * nextObject (void) const { return (elementOf_GGS_semanticInstructionListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_semanticInstructionListAST * previousObject (void) const { return (elementOf_GGS_semanticInstructionListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_semanticInstructionListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_semanticDeclarationAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_semanticDeclarationAST : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_semanticDeclarationAST (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@semanticDeclarationListAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_semanticDeclarationListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_semanticDeclarationAST  mSemanticDeclaration ;
//--- Constructor
  public : elementOf_GGS_semanticDeclarationListAST (const GGS_semanticDeclarationAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_semanticDeclarationListAST * nextObject (void) const { return (elementOf_GGS_semanticDeclarationListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_semanticDeclarationListAST * previousObject (void) const { return (elementOf_GGS_semanticDeclarationListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_semanticDeclarationListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_externRoutineDeclarationAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_externRoutineDeclarationAST : public cPtr_semanticDeclarationAST {
  private : typedef cPtr_semanticDeclarationAST inherited ;
//--- Constructor
  public : cPtr_externRoutineDeclarationAST (const GGS_lstring & ,
                                const GGS_formalParameterListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mRoutineName ;
  public : GGS_formalParameterListAST  mFormalParameterList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           abstract class 'cPtr_routinePrototypeDeclarationAST'            *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_routinePrototypeDeclarationAST : public cPtr_externRoutineDeclarationAST {
  private : typedef cPtr_externRoutineDeclarationAST inherited ;
//--- Constructor
  public : cPtr_routinePrototypeDeclarationAST (const GGS_lstring & ,
                                const GGS_formalParameterListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_routineDeclarationAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_routineDeclarationAST : public cPtr_routinePrototypeDeclarationAST {
  private : typedef cPtr_routinePrototypeDeclarationAST inherited ;
//--- Constructor
  public : cPtr_routineDeclarationAST (const GGS_lstring & ,
                                const GGS_formalParameterListAST & ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_semanticInstructionListAST  mRoutineInstructionList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_externFunctionDeclarationAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_externFunctionDeclarationAST : public cPtr_semanticDeclarationAST {
  private : typedef cPtr_semanticDeclarationAST inherited ;
//--- Constructor
  public : cPtr_externFunctionDeclarationAST (const GGS_lstring & ,
                                const GGS_formalParameterListAST & ,
                                const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mFunctionName ;
  public : GGS_formalParameterListAST  mFormalParameterList ;
  public : GGS_lstring  mResultTypeName ;
  public : GGS_lstring  mResultVariableName ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_functionDeclarationAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_functionDeclarationAST : public cPtr_externFunctionDeclarationAST {
  private : typedef cPtr_externFunctionDeclarationAST inherited ;
//--- Constructor
  public : cPtr_functionDeclarationAST (const GGS_lstring & ,
                                const GGS_formalParameterListAST & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_semanticInstructionListAST  mFunctionInstructionList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_lazyFunctionDeclarationAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_lazyFunctionDeclarationAST : public cPtr_semanticDeclarationAST {
  private : typedef cPtr_semanticDeclarationAST inherited ;
//--- Constructor
  public : cPtr_lazyFunctionDeclarationAST (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mFunctionName ;
  public : GGS_lstring  mResultTypeName ;
  public : GGS_lstring  mResultVariableName ;
  public : GGS_semanticInstructionListAST  mFunctionInstructionList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_localVariableDeclarationAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_localVariableDeclarationAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_localVariableDeclarationAST (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mVariableName ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//   abstract class 'cPtr_localVariableDeclarationWithInitializationAST'     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_localVariableDeclarationWithInitializationAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_localVariableDeclarationWithInitializationAST (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticExpressionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mVariableName ;
  public : GGS_lstring  mConstructorName ;
  public : GGS_semanticExpressionListAST  mConstructorExpressions ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//     abstract class 'cPtr_localVariableDeclarationWithAssignmentAST'       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_localVariableDeclarationWithAssignmentAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_localVariableDeclarationWithAssignmentAST (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mVariableName ;
  public : GGS_semanticExpressionAST  mSourceExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//  abstract class 'cPtr_localConstantDeclarationWithSourceExpressionAST'    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_localConstantDeclarationWithSourceExpressionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_localConstantDeclarationWithSourceExpressionAST (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mVariableName ;
  public : GGS_semanticExpressionAST  mSourceExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//   abstract class 'cPtr_localConstantDeclarationWithConstructorCallAST'    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_localConstantDeclarationWithConstructorCallAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_localConstantDeclarationWithConstructorCallAST (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticExpressionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mVariableName ;
  public : GGS_lstring  mConstructorName ;
  public : GGS_semanticExpressionListAST  mConstructorExpressions ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_assignmentInstructionAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_assignmentInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_assignmentInstructionAST (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_location & ,
                                const GGS_lstringlist & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mTargetVariableName ;
  public : GGS_location  mAssignmentOperatorLocation ;
  public : GGS_lstringlist  mStructAttributeList ;
  public : GGS_semanticExpressionAST  mSourceExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_appendInstructionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_appendInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_appendInstructionAST (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mTargetVariableName ;
  public : GGS_lstringlist  mStructAttributeList ;
  public : GGS_semanticExpressionAST  mSourceExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_sendInstructionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sendInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_sendInstructionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_semanticExpressionAST  mSourceExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//    abstract class 'cPtr_foreachInstructionEnumeratedObjectElementAST'     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_foreachInstructionEnumeratedObjectElementAST : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_foreachInstructionEnumeratedObjectElementAST (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_foreachInstructionJokerAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_foreachInstructionJokerAST : public cPtr_foreachInstructionEnumeratedObjectElementAST {
  private : typedef cPtr_foreachInstructionEnumeratedObjectElementAST inherited ;
//--- Constructor
  public : cPtr_foreachInstructionJokerAST (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//      abstract class 'cPtr_foreachInstructionEnumeratedConstantAST'        *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_foreachInstructionEnumeratedConstantAST : public cPtr_foreachInstructionEnumeratedObjectElementAST {
  private : typedef cPtr_foreachInstructionEnumeratedObjectElementAST inherited ;
//--- Constructor
  public : cPtr_foreachInstructionEnumeratedConstantAST (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mConstantName ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Element of list '@foreachInstructionEnumeratedObjectElementListAST'     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_foreachInstructionEnumeratedObjectElementListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_foreachInstructionEnumeratedObjectElementAST  mElement ;
//--- Constructor
  public : elementOf_GGS_foreachInstructionEnumeratedObjectElementListAST (const GGS_foreachInstructionEnumeratedObjectElementAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_foreachInstructionEnumeratedObjectElementListAST * nextObject (void) const { return (elementOf_GGS_foreachInstructionEnumeratedObjectElementListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_foreachInstructionEnumeratedObjectElementListAST * previousObject (void) const { return (elementOf_GGS_foreachInstructionEnumeratedObjectElementListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_foreachInstructionEnumeratedObjectElementListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Element of list '@foreachInstructionEnumeratedObjectListAST'        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_foreachInstructionEnumeratedObjectListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_bool mIsAscending ;
  public : GGS_semanticExpressionAST  mEnumeratedExpression ;
  public : GGS_foreachInstructionEnumeratedObjectElementListAST  mElementList ;
  public : GGS_bool mEndsWithEllipsis ;
  public : GGS_lstring  mPrefix ;
//--- Constructor
  public : elementOf_GGS_foreachInstructionEnumeratedObjectListAST (const GGS_bool& ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_foreachInstructionEnumeratedObjectElementListAST & ,
                                const GGS_bool& ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_foreachInstructionEnumeratedObjectListAST * nextObject (void) const { return (elementOf_GGS_foreachInstructionEnumeratedObjectListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_foreachInstructionEnumeratedObjectListAST * previousObject (void) const { return (elementOf_GGS_foreachInstructionEnumeratedObjectListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_foreachInstructionEnumeratedObjectListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_foreachInstructionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_foreachInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_foreachInstructionAST (const GGS_location & ,
                                const GGS_foreachInstructionEnumeratedObjectListAST & ,
                                const GGS_lstring & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticInstructionListAST & ,
                                const GGS_semanticInstructionListAST & ,
                                const GGS_semanticInstructionListAST & ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_foreachInstructionEnumeratedObjectListAST  mEnumeratedObjectList ;
  public : GGS_lstring  mIndexVariableName ;
  public : GGS_semanticExpressionAST  mWhileExpression ;
  public : GGS_semanticInstructionListAST  mBeforeInstructionList ;
  public : GGS_semanticInstructionListAST  mBetweenInstructionList ;
  public : GGS_semanticInstructionListAST  mDoInstructionList ;
  public : GGS_semanticInstructionListAST  mAfterInstructionList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@ifBranchListAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ifBranchListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_semanticExpressionAST  mIFexpression ;
  public : GGS_semanticInstructionListAST  mIFinstructionList ;
//--- Constructor
  public : elementOf_GGS_ifBranchListAST (const GGS_semanticExpressionAST & ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_ifBranchListAST * nextObject (void) const { return (elementOf_GGS_ifBranchListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_ifBranchListAST * previousObject (void) const { return (elementOf_GGS_ifBranchListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_ifBranchListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_ifInstructionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ifInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_ifInstructionAST (const GGS_location & ,
                                const GGS_ifBranchListAST & ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_ifBranchListAST  mBranchList ;
  public : GGS_semanticInstructionListAST  mElseInstructionList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_methodCallInstructionAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_methodCallInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_methodCallInstructionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_lstring & ,
                                const GGS_actualParameterListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_semanticExpressionAST  mReceiverExpression ;
  public : GGS_lstring  mMethodName ;
  public : GGS_actualParameterListAST  mActualParameterList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_modifierCallInstructionAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_modifierCallInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_modifierCallInstructionAST (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS_lstring & ,
                                const GGS_actualParameterListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mReceiverName ;
  public : GGS_lstringlist  mReceiverStructAttributes ;
  public : GGS_lstring  mModifierName ;
  public : GGS_actualParameterListAST  mActualParameterList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_errorInstructionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_errorInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_errorInstructionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_lstringlist & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_semanticExpressionAST  mReceiverExpression ;
  public : GGS_semanticExpressionAST  mErrorExpression ;
  public : GGS_lstringlist  mBuiltVariableList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_warningInstructionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_warningInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_warningInstructionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_semanticExpressionAST  mReceiverExpression ;
  public : GGS_semanticExpressionAST  mWarningExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_routineCallInstructionAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_routineCallInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_routineCallInstructionAST (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_actualParameterListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mRoutineName ;
  public : GGS_actualParameterListAST  mActualParameterList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_matchEntryAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_matchEntryAST : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_matchEntryAST (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@matchEntryListAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_matchEntryListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_matchEntryAST  mEntry ;
//--- Constructor
  public : elementOf_GGS_matchEntryListAST (const GGS_matchEntryAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_matchEntryListAST * nextObject (void) const { return (elementOf_GGS_matchEntryListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_matchEntryListAST * previousObject (void) const { return (elementOf_GGS_matchEntryListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_matchEntryListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_constantMatchEntryAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_constantMatchEntryAST : public cPtr_matchEntryAST {
  private : typedef cPtr_matchEntryAST inherited ;
//--- Constructor
  public : cPtr_constantMatchEntryAST (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mConstantName ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_classMatchEntryAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_classMatchEntryAST : public cPtr_matchEntryAST {
  private : typedef cPtr_matchEntryAST inherited ;
//--- Constructor
  public : cPtr_classMatchEntryAST (const GGS_lstring & ,
                                const GGS_foreachInstructionEnumeratedObjectElementListAST & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mClassName ;
  public : GGS_foreachInstructionEnumeratedObjectElementListAST  mElements ;
  public : GGS_bool mEndsWithEllipsis ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@matchInstructionBranchListAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_matchInstructionBranchListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_matchEntryListAST  mMatchEntryList ;
  public : GGS_semanticInstructionListAST  mMatchBranchInstructionList ;
//--- Constructor
  public : elementOf_GGS_matchInstructionBranchListAST (const GGS_matchEntryListAST & ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_matchInstructionBranchListAST * nextObject (void) const { return (elementOf_GGS_matchInstructionBranchListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_matchInstructionBranchListAST * previousObject (void) const { return (elementOf_GGS_matchInstructionBranchListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_matchInstructionBranchListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_matchInstructionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_matchInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_matchInstructionAST (const GGS_location & ,
                                const GGS_lstringlist & ,
                                const GGS_matchInstructionBranchListAST & ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstringlist  mMatchedVariableNameList ;
  public : GGS_matchInstructionBranchListAST  mMatchInstructionBranchList ;
  public : GGS_semanticInstructionListAST  mElseInstructionList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@castInstructionBranchListAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_castInstructionBranchListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_bool mUseKindOfClass ;
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mConstantVarName ;
  public : GGS_bool mConstantVarNameIsUnused ;
  public : GGS_semanticInstructionListAST  mCastBranchInstructionList ;
//--- Constructor
  public : elementOf_GGS_castInstructionBranchListAST (const GGS_bool& ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_bool& ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_castInstructionBranchListAST * nextObject (void) const { return (elementOf_GGS_castInstructionBranchListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_castInstructionBranchListAST * previousObject (void) const { return (elementOf_GGS_castInstructionBranchListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_castInstructionBranchListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         abstract class 'cPtr_elseOrDefaultForCastInstructionAST'          *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_elseOrDefaultForCastInstructionAST : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_elseOrDefaultForCastInstructionAST (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_elseForCastInstructionAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_elseForCastInstructionAST : public cPtr_elseOrDefaultForCastInstructionAST {
  private : typedef cPtr_elseOrDefaultForCastInstructionAST inherited ;
//--- Constructor
  public : cPtr_elseForCastInstructionAST (const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_semanticInstructionListAST  mElseInstructionList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_defaultForCastInstructionAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_defaultForCastInstructionAST : public cPtr_elseOrDefaultForCastInstructionAST {
  private : typedef cPtr_elseOrDefaultForCastInstructionAST inherited ;
//--- Constructor
  public : cPtr_defaultForCastInstructionAST (const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_semanticExpressionAST  mErrorLocationExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_castInstructionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_castInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_castInstructionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_castInstructionBranchListAST & ,
                                const GGS_elseOrDefaultForCastInstructionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_semanticExpressionAST  mExpression ;
  public : GGS_castInstructionBranchListAST  mCastInstructionBranchList ;
  public : GGS_elseOrDefaultForCastInstructionAST  mElseOrDefault ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_addInstructionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_addInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_addInstructionAST (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS_semanticExpressionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mReceiverName ;
  public : GGS_lstringlist  mStructAttributeList ;
  public : GGS_semanticExpressionListAST  mExpressions ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_removeInstructionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_removeInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_removeInstructionAST (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mReceiverName ;
  public : GGS_lstringlist  mStructAttributeList ;
  public : GGS_semanticExpressionAST  mExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_incrementInstructionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_incrementInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_incrementInstructionAST (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_lstringlist & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mReceiverName ;
  public : GGS_lstringlist  mStructAttributeList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_decrementInstructionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_decrementInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_decrementInstructionAST (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_lstringlist & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mReceiverName ;
  public : GGS_lstringlist  mStructAttributeList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_loopInstructionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_loopInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_loopInstructionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticInstructionListAST & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_semanticExpressionAST  mVariantExpression ;
  public : GGS_semanticInstructionListAST  mFirstInstructions ;
  public : GGS_semanticExpressionAST  mLoopExpression ;
  public : GGS_semanticInstructionListAST  mSecondInstructions ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_messageInstructionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_messageInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_messageInstructionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_semanticExpressionAST  mExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of list '@logListAST'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_logListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mLogMessage ;
  public : GGS_semanticExpressionAST  mLogExpression ;
//--- Constructor
  public : elementOf_GGS_logListAST (const GGS_lstring & ,
                                const GGS_semanticExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_logListAST * nextObject (void) const { return (elementOf_GGS_logListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_logListAST * previousObject (void) const { return (elementOf_GGS_logListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_logListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_logInstructionAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_logInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_logInstructionAST (const GGS_location & ,
                                const GGS_logListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_logListAST  mLogList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_grammarInstructionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_grammarInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_grammarInstructionAST (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_bool& ,
                                const GGS_actualParameterListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mGrammarComponentName ;
  public : GGS_lstring  mLabelName ;
  public : GGS_semanticExpressionAST  mSourceExpression ;
  public : GGS_bool mSourceExpressionIsFile ;
  public : GGS_actualParameterListAST  mActualParameterList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_withInstructionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_withInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_withInstructionAST (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS_lstring & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_bool& ,
                                const GGS_semanticInstructionListAST & ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mPrefix ;
  public : GGS_lstring  mTargetObjectName ;
  public : GGS_lstringlist  mStructAttributeList ;
  public : GGS_lstring  mSearchMethodName ;
  public : GGS_semanticExpressionAST  mKeyExpression ;
  public : GGS_bool mReadWriteAccess ;
  public : GGS_semanticInstructionListAST  mDoBranchInstructions ;
  public : GGS_semanticInstructionListAST  mElseBranchInstructions ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@switchBranchesAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_switchBranchesAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstringlist  mSwitchConstantList ;
  public : GGS_semanticInstructionListAST  mInstructions ;
//--- Constructor
  public : elementOf_GGS_switchBranchesAST (const GGS_lstringlist & ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_switchBranchesAST * nextObject (void) const { return (elementOf_GGS_switchBranchesAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_switchBranchesAST * previousObject (void) const { return (elementOf_GGS_switchBranchesAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_switchBranchesAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_switchInstructionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_switchInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_switchInstructionAST (const GGS_location & ,
                                const GGS_semanticExpressionAST & ,
                                const GGS_switchBranchesAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_semanticExpressionAST  mSwitchExpression ;
  public : GGS_switchBranchesAST  mBranches ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_typeMethodCallInstructionAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeMethodCallInstructionAST : public cPtr_semanticInstructionAST {
  private : typedef cPtr_semanticInstructionAST inherited ;
//--- Constructor
  public : cPtr_typeMethodCallInstructionAST (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_actualParameterListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mMethodName ;
  public : GGS_actualParameterListAST  mActualParameterList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@abstracMultiMethodListAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_abstracMultiMethodListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mAbstractMultiMethodName ;
  public : GGS_formalParameterListAST  mAbstractCategoryFormalParameterList ;
//--- Constructor
  public : elementOf_GGS_abstracMultiMethodListAST (const GGS_lstring & ,
                                const GGS_formalParameterListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_abstracMultiMethodListAST * nextObject (void) const { return (elementOf_GGS_abstracMultiMethodListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_abstracMultiMethodListAST * previousObject (void) const { return (elementOf_GGS_abstracMultiMethodListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_abstracMultiMethodListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@multiMethodListAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_multiMethodListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mMultiMethodName ;
  public : GGS_formalParameterListAST  mCategoryFormalParameterList ;
  public : GGS_semanticInstructionListAST  mRoutineInstructionList ;
//--- Constructor
  public : elementOf_GGS_multiMethodListAST (const GGS_lstring & ,
                                const GGS_formalParameterListAST & ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_multiMethodListAST * nextObject (void) const { return (elementOf_GGS_multiMethodListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_multiMethodListAST * previousObject (void) const { return (elementOf_GGS_multiMethodListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_multiMethodListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@overridingMultiMethodListAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_overridingMultiMethodListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mOverridingMultiMethodMethodName ;
  public : GGS_formalParameterListAST  mOverridingCategoryFormalParameterList ;
  public : GGS_semanticInstructionListAST  mRoutineInstructionList ;
//--- Constructor
  public : elementOf_GGS_overridingMultiMethodListAST (const GGS_lstring & ,
                                const GGS_formalParameterListAST & ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_overridingMultiMethodListAST * nextObject (void) const { return (elementOf_GGS_overridingMultiMethodListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_overridingMultiMethodListAST * previousObject (void) const { return (elementOf_GGS_overridingMultiMethodListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_overridingMultiMethodListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@abstractMultiReaderListAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_abstractMultiReaderListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mAbstractMultiReaderName ;
  public : GGS_formalInputParameterListAST  mAbstractCategoryFormalInputParameterList ;
  public : GGS_lstring  mReturnedTypeName ;
//--- Constructor
  public : elementOf_GGS_abstractMultiReaderListAST (const GGS_lstring & ,
                                const GGS_formalInputParameterListAST & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_abstractMultiReaderListAST * nextObject (void) const { return (elementOf_GGS_abstractMultiReaderListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_abstractMultiReaderListAST * previousObject (void) const { return (elementOf_GGS_abstractMultiReaderListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_abstractMultiReaderListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@multiReaderListAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_multiReaderListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mMultiReaderName ;
  public : GGS_formalInputParameterListAST  mReaderCategoryFormalInputParameterList ;
  public : GGS_lstring  mReturnedTypeName ;
  public : GGS_lstring  mReturnedVariableName ;
  public : GGS_semanticInstructionListAST  mRoutineInstructionList ;
//--- Constructor
  public : elementOf_GGS_multiReaderListAST (const GGS_lstring & ,
                                const GGS_formalInputParameterListAST & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_multiReaderListAST * nextObject (void) const { return (elementOf_GGS_multiReaderListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_multiReaderListAST * previousObject (void) const { return (elementOf_GGS_multiReaderListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_multiReaderListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@overridingMultiReaderListAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_overridingMultiReaderListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mOverridingMultiReaderName ;
  public : GGS_formalInputParameterListAST  mOverridingReaderFormalInputParameterList ;
  public : GGS_lstring  mReturnedTypeName ;
  public : GGS_lstring  mReturnedVariableName ;
  public : GGS_semanticInstructionListAST  mRoutineInstructionList ;
//--- Constructor
  public : elementOf_GGS_overridingMultiReaderListAST (const GGS_lstring & ,
                                const GGS_formalInputParameterListAST & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_overridingMultiReaderListAST * nextObject (void) const { return (elementOf_GGS_overridingMultiReaderListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_overridingMultiReaderListAST * previousObject (void) const { return (elementOf_GGS_overridingMultiReaderListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_overridingMultiReaderListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Declarations for 'semanticDeclarationStructAST' struct           *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_semanticDeclarationStructAST ;

//---------------------------------------------------------------------------*

class GGS_semanticDeclarationStructAST : public GGS__root {
//--- Default constructor
  public : GGS_semanticDeclarationStructAST (void) ;

//--- Virtual destructor
  public : virtual ~GGS_semanticDeclarationStructAST (void) ;

//--- Handle 'drop' instruction
  public : void drop (void) ;

//--- Method 'isBuilt'
  public : bool isBuilt (void) const ;

//--- Support for method call handling in GALGAS
  public : inline const GGS_semanticDeclarationStructAST * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
  public : inline GGS_semanticDeclarationStructAST * operator () (UNUSED_LOCATION_ARGS) { return this ; }

//--- Comparison
  public : GGS_bool operator_isEqual (const GGS_semanticDeclarationStructAST & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_semanticDeclarationStructAST & inOperand) const ;

//--- Reader 'description'
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_semanticDeclarationStructAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Galgas 'new' destructor
  public : static GGS_semanticDeclarationStructAST constructor_new (const GGS_semanticDeclarationListAST & argument_0,
                 const GGS_abstractMultiMethodListMapAST& argument_1,
                 const GGS_multiMethodListMapAST& argument_2,
                 const GGS_overridingMultiMethodListMapAST& argument_3,
                 const GGS_abstractMultiReaderListMapAST& argument_4,
                 const GGS_multiReaderListMapAST& argument_5,
                 const GGS_overridingMultiReaderListMapAST& argument_6) ;

//--- Readers
  public : inline GGS_semanticDeclarationListAST 
  reader_mSemanticDeclarationList (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mSemanticDeclarationList ;
  }

  public : inline GGS_abstractMultiMethodListMapAST
  reader_mAbstractCategoryMethodListMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mAbstractCategoryMethodListMap ;
  }

  public : inline GGS_multiMethodListMapAST
  reader_mCategoryMethodListMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mCategoryMethodListMap ;
  }

  public : inline GGS_overridingMultiMethodListMapAST
  reader_mOverridingCategoryMethodListMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mOverridingCategoryMethodListMap ;
  }

  public : inline GGS_abstractMultiReaderListMapAST
  reader_mAbstractCategoryReaderListMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mAbstractCategoryReaderListMap ;
  }

  public : inline GGS_multiReaderListMapAST
  reader_mCategoryReaderListMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mCategoryReaderListMap ;
  }

  public : inline GGS_overridingMultiReaderListMapAST
  reader_mOverridingCategoryReaderListMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mOverridingCategoryReaderListMap ;
  }

//--- Attributes
  public : GGS_semanticDeclarationListAST  mSemanticDeclarationList ;
  public : GGS_abstractMultiMethodListMapAST mAbstractCategoryMethodListMap ;
  public : GGS_multiMethodListMapAST mCategoryMethodListMap ;
  public : GGS_overridingMultiMethodListMapAST mOverridingCategoryMethodListMap ;
  public : GGS_abstractMultiReaderListMapAST mAbstractCategoryReaderListMap ;
  public : GGS_multiReaderListMapAST mCategoryReaderListMap ;
  public : GGS_overridingMultiReaderListMapAST mOverridingCategoryReaderListMap ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@attributeInCollectionListAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_attributeInCollectionListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mAttributeTypeName ;
  public : GGS_lstring  mAttributeName ;
//--- Constructor
  public : elementOf_GGS_attributeInCollectionListAST (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_attributeInCollectionListAST * nextObject (void) const { return (elementOf_GGS_attributeInCollectionListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_attributeInCollectionListAST * previousObject (void) const { return (elementOf_GGS_attributeInCollectionListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_attributeInCollectionListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_listmapDeclarationAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_listmapDeclarationAST : public cPtr_semanticDeclarationAST {
  private : typedef cPtr_semanticDeclarationAST inherited ;
//--- Constructor
  public : cPtr_listmapDeclarationAST (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mListmapTypeName ;
  public : GGS_lstring  mAssociatedListTypeName ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@mapStateTransitionList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapStateTransitionList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mActionName ;
  public : GGS_lstring  mTargetStateName ;
  public : GGS_mapAutomatonMessageKind mTransitionMessageKind ;
  public : GGS_lstring  mTransitionMessage ;
//--- Constructor
  public : elementOf_GGS_mapStateTransitionList (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_mapAutomatonMessageKind& ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_mapStateTransitionList * nextObject (void) const { return (elementOf_GGS_mapStateTransitionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_mapStateTransitionList * previousObject (void) const { return (elementOf_GGS_mapStateTransitionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_mapStateTransitionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@mapStateList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapStateList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mStateName ;
  public : GGS_mapAutomatonMessageKind mStateMessageKind ;
  public : GGS_lstring  mStateMessage ;
  public : GGS_mapStateTransitionList  mTransitionList ;
//--- Constructor
  public : elementOf_GGS_mapStateList (const GGS_lstring & ,
                                const GGS_mapAutomatonMessageKind& ,
                                const GGS_lstring & ,
                                const GGS_mapStateTransitionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_mapStateList * nextObject (void) const { return (elementOf_GGS_mapStateList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_mapStateList * previousObject (void) const { return (elementOf_GGS_mapStateList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_mapStateList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@insertMethodListAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_insertMethodListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_lstring  mErrorMessage ;
  public : GGS_lstring  mShadowErrorMessage ;
  public : GGS_lstring  mInitialStateName ;
//--- Constructor
  public : elementOf_GGS_insertMethodListAST (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_insertMethodListAST * nextObject (void) const { return (elementOf_GGS_insertMethodListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_insertMethodListAST * previousObject (void) const { return (elementOf_GGS_insertMethodListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_insertMethodListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@mapSearchMethodListAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapSearchMethodListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_lstring  mErrorMessage ;
  public : GGS_lstring  mActionName ;
//--- Constructor
  public : elementOf_GGS_mapSearchMethodListAST (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_mapSearchMethodListAST * nextObject (void) const { return (elementOf_GGS_mapSearchMethodListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_mapSearchMethodListAST * previousObject (void) const { return (elementOf_GGS_mapSearchMethodListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_mapSearchMethodListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@mapRemoveMethodListAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapRemoveMethodListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_lstring  mErrorMessage ;
//--- Constructor
  public : elementOf_GGS_mapRemoveMethodListAST (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_mapRemoveMethodListAST * nextObject (void) const { return (elementOf_GGS_mapRemoveMethodListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_mapRemoveMethodListAST * previousObject (void) const { return (elementOf_GGS_mapRemoveMethodListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_mapRemoveMethodListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Element of list '@insertOrReplaceDeclarationListAST'            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_insertOrReplaceDeclarationListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_location  mInsertOrReplaceDeclarationLocation ;
//--- Constructor
  public : elementOf_GGS_insertOrReplaceDeclarationListAST (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_insertOrReplaceDeclarationListAST * nextObject (void) const { return (elementOf_GGS_insertOrReplaceDeclarationListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_insertOrReplaceDeclarationListAST * previousObject (void) const { return (elementOf_GGS_insertOrReplaceDeclarationListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_insertOrReplaceDeclarationListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_mapDeclarationAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_mapDeclarationAST : public cPtr_semanticDeclarationAST {
  private : typedef cPtr_semanticDeclarationAST inherited ;
//--- Constructor
  public : cPtr_mapDeclarationAST (const GGS_lstring & ,
                                const GGS_attributeInCollectionListAST & ,
                                const GGS_insertMethodListAST & ,
                                const GGS_mapSearchMethodListAST & ,
                                const GGS_mapRemoveMethodListAST & ,
                                const GGS_insertOrReplaceDeclarationListAST & ,
                                const GGS_mapStateList & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mMapTypeName ;
  public : GGS_attributeInCollectionListAST  mAttributeList ;
  public : GGS_insertMethodListAST  mInsertMethodList ;
  public : GGS_mapSearchMethodListAST  mSearchMethodList ;
  public : GGS_mapRemoveMethodListAST  mRemoveMethodList ;
  public : GGS_insertOrReplaceDeclarationListAST  mInsertOrReplaceDeclarationListAST ;
  public : GGS_mapStateList  mMapStateList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_mapProxyDeclarationAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_mapProxyDeclarationAST : public cPtr_semanticDeclarationAST {
  private : typedef cPtr_semanticDeclarationAST inherited ;
//--- Constructor
  public : cPtr_mapProxyDeclarationAST (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mMapProxyTypeName ;
  public : GGS_lstring  mAssociatedMapTypeName ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of list '@abstractMethodDefinitionListAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_abstractMethodDefinitionListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_bool mIsOverriding ;
  public : GGS_lstring  mMethodName ;
  public : GGS_formalParameterListAST  mSignature ;
//--- Constructor
  public : elementOf_GGS_abstractMethodDefinitionListAST (const GGS_bool& ,
                                const GGS_lstring & ,
                                const GGS_formalParameterListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_abstractMethodDefinitionListAST * nextObject (void) const { return (elementOf_GGS_abstractMethodDefinitionListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_abstractMethodDefinitionListAST * previousObject (void) const { return (elementOf_GGS_abstractMethodDefinitionListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_abstractMethodDefinitionListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@methodDefinitionListAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_methodDefinitionListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_bool mIsOverriding ;
  public : GGS_lstring  mMethodName ;
  public : GGS_formalParameterListAST  mSignature ;
  public : GGS_semanticInstructionListAST  mInstructionList ;
  public : GGS_location  mEndOfMethodLocation ;
//--- Constructor
  public : elementOf_GGS_methodDefinitionListAST (const GGS_bool& ,
                                const GGS_lstring & ,
                                const GGS_formalParameterListAST & ,
                                const GGS_semanticInstructionListAST & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_methodDefinitionListAST * nextObject (void) const { return (elementOf_GGS_methodDefinitionListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_methodDefinitionListAST * previousObject (void) const { return (elementOf_GGS_methodDefinitionListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_methodDefinitionListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@lazyAttributeListAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_lazyAttributeListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_location  mLocationMagicNumber ;
  public : GGS_attributeInCollectionListAST  mAttributeList ;
  public : GGS_semanticInstructionListAST  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_lazyAttributeListAST (const GGS_location & ,
                                const GGS_attributeInCollectionListAST & ,
                                const GGS_semanticInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_lazyAttributeListAST * nextObject (void) const { return (elementOf_GGS_lazyAttributeListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_lazyAttributeListAST * previousObject (void) const { return (elementOf_GGS_lazyAttributeListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_lazyAttributeListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_classDeclarationAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_classDeclarationAST : public cPtr_semanticDeclarationAST {
  private : typedef cPtr_semanticDeclarationAST inherited ;
//--- Constructor
  public : cPtr_classDeclarationAST (const GGS_bool& ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS_attributeInCollectionListAST & ,
                                const GGS_abstractMethodDefinitionListAST & ,
                                const GGS_methodDefinitionListAST & ,
                                const GGS_lazyAttributeListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_bool mIsAbstract ;
  public : GGS_lstring  mClassTypeName ;
  public : GGS_lstring  mSuperClassName ;
  public : GGS_lstringlist  mClassFeatureList ;
  public : GGS_attributeInCollectionListAST  mAttributeList ;
  public : GGS_abstractMethodDefinitionListAST  mAbstractMethodList ;
  public : GGS_methodDefinitionListAST  mMethodList ;
  public : GGS_lazyAttributeListAST  mLazyAttributeList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_listDeclarationAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_listDeclarationAST : public cPtr_semanticDeclarationAST {
  private : typedef cPtr_semanticDeclarationAST inherited ;
//--- Constructor
  public : cPtr_listDeclarationAST (const GGS_lstring & ,
                                const GGS_attributeInCollectionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mListTypeName ;
  public : GGS_attributeInCollectionListAST  mAttributeList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_structDeclarationAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_structDeclarationAST : public cPtr_semanticDeclarationAST {
  private : typedef cPtr_semanticDeclarationAST inherited ;
//--- Constructor
  public : cPtr_structDeclarationAST (const GGS_lstring & ,
                                const GGS_attributeInCollectionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mStructTypeName ;
  public : GGS_attributeInCollectionListAST  mAttributeList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of list '@sortedListSortDescriptorListAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_sortedListSortDescriptorListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mSortedAttributeName ;
  public : GGS_bool mAscending ;
//--- Constructor
  public : elementOf_GGS_sortedListSortDescriptorListAST (const GGS_lstring & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_sortedListSortDescriptorListAST * nextObject (void) const { return (elementOf_GGS_sortedListSortDescriptorListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_sortedListSortDescriptorListAST * previousObject (void) const { return (elementOf_GGS_sortedListSortDescriptorListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_sortedListSortDescriptorListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_sortedListDeclarationAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sortedListDeclarationAST : public cPtr_semanticDeclarationAST {
  private : typedef cPtr_semanticDeclarationAST inherited ;
//--- Constructor
  public : cPtr_sortedListDeclarationAST (const GGS_lstring & ,
                                const GGS_attributeInCollectionListAST & ,
                                const GGS_sortedListSortDescriptorListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mSortedListTypeName ;
  public : GGS_attributeInCollectionListAST  mAttributeList ;
  public : GGS_sortedListSortDescriptorListAST  mSortDescriptorList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@enumMessageAssociationListAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageAssociationListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mConstantName ;
  public : GGS_lstring  mMessage ;
//--- Constructor
  public : elementOf_GGS_enumMessageAssociationListAST (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_enumMessageAssociationListAST * nextObject (void) const { return (elementOf_GGS_enumMessageAssociationListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_enumMessageAssociationListAST * previousObject (void) const { return (elementOf_GGS_enumMessageAssociationListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_enumMessageAssociationListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@enumMessageListAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mEnumMessageName ;
  public : GGS_enumMessageAssociationListAST  mMessageAssociationList ;
//--- Constructor
  public : elementOf_GGS_enumMessageListAST (const GGS_lstring & ,
                                const GGS_enumMessageAssociationListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_enumMessageListAST * nextObject (void) const { return (elementOf_GGS_enumMessageListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_enumMessageListAST * previousObject (void) const { return (elementOf_GGS_enumMessageListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_enumMessageListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_enumDeclarationAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_enumDeclarationAST : public cPtr_semanticDeclarationAST {
  private : typedef cPtr_semanticDeclarationAST inherited ;
//--- Constructor
  public : cPtr_enumDeclarationAST (const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS_enumMessageListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mEnumTypeName ;
  public : GGS_lstringlist  mConstantList ;
  public : GGS_enumMessageListAST  mEnumMessageList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@filewrapperTemplateListAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_filewrapperTemplateListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mFilewrapperTemplateName ;
  public : GGS_lstring  mFilewrapperTemplatePath ;
  public : GGS_formalInputParameterListAST  mFilewrapperTemplateFormalInputParameters ;
//--- Constructor
  public : elementOf_GGS_filewrapperTemplateListAST (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_formalInputParameterListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_filewrapperTemplateListAST * nextObject (void) const { return (elementOf_GGS_filewrapperTemplateListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_filewrapperTemplateListAST * previousObject (void) const { return (elementOf_GGS_filewrapperTemplateListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_filewrapperTemplateListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_filewrapperDeclarationAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_filewrapperDeclarationAST : public cPtr_semanticDeclarationAST {
  private : typedef cPtr_semanticDeclarationAST inherited ;
//--- Constructor
  public : cPtr_filewrapperDeclarationAST (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS_filewrapperTemplateListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mFilewrapperName ;
  public : GGS_lstring  mFilewrapperPath ;
  public : GGS_lstringlist  mFilewrapperExtensionList ;
  public : GGS_filewrapperTemplateListAST  mFilewrapperTemplateList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_semanticsComponentAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_semanticsComponentAST : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_semanticsComponentAST (const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS_semanticDeclarationStructAST& ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mSemanticsComponentName ;
  public : GGS_lstringlist  mImportedComponentFileNameList ;
  public : GGS_semanticDeclarationStructAST mSemanticDeclarations ;
  public : GGS_location  mEndOfSourceFile ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*

#endif
