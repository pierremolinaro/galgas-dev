#---------------------------------------------------------------------------*
#                                                                           *
#  GALGAS cocoa component parser                                            *
#                                                                           *
#  Copyright (C) 2004, ..., 2008 Pierre Molinaro.                           *
#                                                                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

syntax cocoa_parser :
with "galgas_scanner.gLexique" ;

import lexique galgas_scanner in "galgas_scanner.gLexique" ;

import semantics common_semantics in "common_semantics.gSemantics" ;

#--------------------------------------------------------------------------------*

nonterminal <galgas_component>
  ?!@M_lexiqueComponents ioLexiqueMapForUse
  ?!@M_semanticsComponents ioSemanticsComponentsMap
  ?!@M_syntaxComponents ioSyntaxComponentsMap
  ?!@M_grammarComponents ioGrammarComponentsMap
  ?!@M_optionComponents ioOptionsComponentsMap
  ?!@EXsemanticContext ioSemanticContext
label importLexique
  ?!@M_lexiqueComponents ioLexiqueMapForUse
label importSyntax
  ?!@M_syntaxComponents ioSyntaxComponentsMap
  ?!@EXsemanticContext ioSemanticContext
label importSemantics
  ?!@M_semanticsComponents ioSemanticsComponentsMap
  ?!@EXsemanticContext ioSemanticContext
  ?!@stringset ioImportedSemanticsComponentNameSet
label importGrammarForSemantics
  ?!@M_grammarComponents ioGrammarComponentsMap
  ?!@M_optionComponents ioOptionsComponentsMap
  ?!@EXsemanticContext ioSemanticContext
label importOptions
  ?!@M_optionComponents ioOptionsComponentsMap
;

nonterminal <import_headers_semantics_and_grammars>
  !@stringset outIncludedSemanticsComponents
  !@stringset outIncludedMetamodelComponents
  !@stringset outIncludedOptionComponents
  !@stringset outIncludedGrammarComponents
  ?!@M_lexiqueComponents ioLexiqueMapForUse
  ?!@M_semanticsComponents ioSemanticsComponentsMap
  ?!@M_grammarComponents ioGrammarComponentsMap
  ?!@M_optionComponents ioOptionsComponentsMap
  !@stringset outInclusionsForImplementationFile
  !@stringset outInclusionsForHeaderFile
  !@M_optionComponents ioOptionsComponentsMapForUse
  !@ModelMap outModelMap
  !@ActionMap outActionMap
  !@M_semanticsEntitiesForUse ioComponentSemanticsEntitiesMap
  !@typeTableEnAvant tableEnAvant
  ?!@EXsemanticContext ioSemanticContext
label importSemantics
  ?!@M_semanticsComponents ioSemanticsComponentsMap
  !@stringset outIncludedSemanticsComponents
  !@stringset outIcludedOptionComponents
  !@ModelMap outModelMap
  !@ActionMap outActionMap
  ?!@M_semanticsEntitiesForUse ioComponentSemanticsEntitiesMap
  ?!@EXsemanticContext ioSemanticContext
  ?!@stringset ioImportedSemanticsComponentNameSet
label parse
;

nonterminal <parse_lexique_for_importing>
  ??@lstring inFileName
  ?!@M_lexiqueComponents ioLexiqueMapForUse
label parse
;

#--------------------------------------------------------------------------------*

rule <galgas_component>
  ?!@M_lexiqueComponents unused ioLexiqueMapForUse
  ?!@M_semanticsComponents unused ioSemanticsComponentsMap
  ?!@M_syntaxComponents unused ioSyntaxComponentsMap
  ?!@M_grammarComponents unused ioGrammarComponentsMap
  ?!@M_optionComponents unused ioOptionsComponentsMap
  ?!@EXsemanticContext unused ioSemanticContext
:
  $gui$ ;
#--- Definition du programme
  @lstring guiComponentName ;
  $identifier$ ? guiComponentName ;
  error guiComponentName: "in GALGAS 1.9.0 and later, extension of gui component file should be '.gGui'" ;
  $literal_string$ ? * ;
  select
  or
    $grammar$ ;
    $identifier$ ? * ;
  end select ;
  $:$ ;
  <import_headers_semantics_and_grammars> parse ;
#--- Assignment list
  repeat
  while
    $label$ ;
    $terminal$ ? * ;
    $,$ ;
    $terminal$ ? * ;
    $;$ ;
  while
    $identifier$ ? * ;
    select
    or
      $literal_string$ ? * ;
    end select ;
    $:$ ;
    repeat
      $literal_string$ ? * ;
    while
    end repeat ;
    $;$ ;
  while
    $with$ ;
    $lexique$ ;
    $literal_string$ ?* ;
    ${$ ;
    repeat
    while
      $label$ ;
      repeat
        $terminal$ ? * ;
      while
        $,$ ;
      end repeat ;
      $;$ ;
    while
      $identifier$ ?* ;
      $literal_string$ ?* ;
      $:$ ;
      repeat
        $literal_string$ ?* ;
      while
      end repeat ;
      $;$ ;
    while
      $identifier$ ?* ;
      $:$ ;
      $literal_string$ ?* ;
      $;$ ;
    end repeat ;
    $}$ ;    
  end repeat ;
  $end$ ;
  $gui$ ;
  $;$ ;
label importLexique
  ?!@M_lexiqueComponents unused ioLexiqueMapForUse
:
  $gui$ ;
  $identifier$ ? * ;
  $literal_string$ ? * ;
  select
  or
    $grammar$ ;
    $identifier$ ? * ;
  end select ;
  $:$ ;
  <import_headers_semantics_and_grammars> parse ;
#--- Assignment list
  repeat
  while
    $label$ ;
    $terminal$ ? * ;
    $,$ ;
    $terminal$ ? * ;
    $;$ ;
  while
    $identifier$ ? * ;
    select
    or
      $literal_string$ ? * ;
    end select ;
    $:$ ;
    repeat
      $literal_string$ ? * ;
    while
    end repeat ;
    $;$ ;
  while
    $with$ ;
    $lexique$ ;
    $literal_string$ ?* ;
    ${$ ;
    repeat
    while
      $label$ ;
      repeat
        $terminal$ ? * ;
      while
        $,$ ;
      end repeat ;
      $;$ ;
    while
      $identifier$ ?* ;
      $literal_string$ ?* ;
      $:$ ;
      repeat
        $literal_string$ ?* ;
      while
      end repeat ;
      $;$ ;
    while
      $identifier$ ?* ;
      $:$ ;
      $literal_string$ ?* ;
      $;$ ;
    end repeat ;
    $}$ ;    
  end repeat ;
  $end$ ;
  $gui$ ;
  $;$ ;
label importSyntax
  ?!@M_syntaxComponents unused ioSyntaxComponentsMap
  ?!@EXsemanticContext unused ioSemanticContext
:
  $gui$ ;
  $identifier$ ? * ;
  $literal_string$ ? * ;
  select
  or
    $grammar$ ;
    $identifier$ ? * ;
  end select ;
  $:$ ;
  <import_headers_semantics_and_grammars> parse ;
#--- Assignment list
  repeat
  while
    $label$ ;
    $terminal$ ? * ;
    $,$ ;
    $terminal$ ? * ;
    $;$ ;
  while
    $identifier$ ? * ;
    select
    or
      $literal_string$ ? * ;
    end select ;
    $:$ ;
    repeat
      $literal_string$ ? * ;
    while
    end repeat ;
    $;$ ;
  while
    $with$ ;
    $lexique$ ;
    $literal_string$ ?* ;
    ${$ ;
    repeat
    while
      $label$ ;
      repeat
        $terminal$ ? * ;
      while
        $,$ ;
      end repeat ;
      $;$ ;
    while
      $identifier$ ?* ;
      $literal_string$ ?* ;
      $:$ ;
      repeat
        $literal_string$ ?* ;
      while
      end repeat ;
      $;$ ;
    while
      $identifier$ ?* ;
      $:$ ;
      $literal_string$ ?* ;
      $;$ ;
    end repeat ;
    $}$ ;    
  end repeat ;
  $end$ ;
  $gui$ ;
  $;$ ;
label importSemantics
  ?!@M_semanticsComponents unused ioSemanticsComponentsMap
  ?!@EXsemanticContext unused ioSemanticContext
  ?!@stringset unused ioImportedSemanticsComponentNameSet
:
  $gui$ ;
  $identifier$ ? * ;
  $literal_string$ ? * ;
  select
  or
    $grammar$ ;
    $identifier$ ? * ;
  end select ;
  $:$ ;
  <import_headers_semantics_and_grammars> parse ;
#--- Assignment list
  repeat
  while
    $label$ ;
    $terminal$ ? * ;
    $,$ ;
    $terminal$ ? * ;
    $;$ ;
  while
    $identifier$ ? * ;
    select
    or
      $literal_string$ ? * ;
    end select ;
    $:$ ;
    repeat
      $literal_string$ ? * ;
    while
    end repeat ;
    $;$ ;
  while
    $with$ ;
    $lexique$ ;
    $literal_string$ ?* ;
    ${$ ;
    repeat
    while
      $label$ ;
      repeat
        $terminal$ ? * ;
      while
        $,$ ;
      end repeat ;
      $;$ ;
    while
      $identifier$ ?* ;
      $literal_string$ ?* ;
      $:$ ;
      repeat
        $literal_string$ ?* ;
      while
      end repeat ;
      $;$ ;
    while
      $identifier$ ?* ;
      $:$ ;
      $literal_string$ ?* ;
      $;$ ;
    end repeat ;
    $}$ ;    
  end repeat ;
  $end$ ;
  $gui$ ;
  $;$ ;
label importGrammarForSemantics
  ?!@M_grammarComponents unused ioGrammarComponentsMap
  ?!@M_optionComponents unused ioOptionsComponentsMap
  ?!@EXsemanticContext unused ioSemanticContext
:
  $gui$ ;
  $identifier$ ? * ;
  $literal_string$ ? * ;
  select
  or
    $grammar$ ;
    $identifier$ ? * ;
  end select ;
  $:$ ;
  <import_headers_semantics_and_grammars> parse ;
  repeat
  while
    $label$ ;
    $terminal$ ? * ;
    $,$ ;
    $terminal$ ? * ;
    $;$ ;
  while
    $identifier$ ? * ;
    select
    or
      $literal_string$ ? * ;
    end select ;
    $:$ ;
    repeat
      $literal_string$ ? * ;
    while
    end repeat ;
    $;$ ;
  while
    $with$ ;
    $lexique$ ;
    $literal_string$ ?* ;
    ${$ ;
    repeat
    while
      $label$ ;
      repeat
        $terminal$ ? * ;
      while
        $,$ ;
      end repeat ;
      $;$ ;
    while
      $identifier$ ?* ;
      $literal_string$ ?* ;
      $:$ ;
      repeat
        $literal_string$ ?* ;
      while
      end repeat ;
      $;$ ;
    while
      $identifier$ ?* ;
      $:$ ;
      $literal_string$ ?* ;
      $;$ ;
    end repeat ;
    $}$ ;    
  end repeat ;
  $end$ ;
  $gui$ ;
  $;$ ;
label importOptions
  ?!@M_optionComponents unused ioOptionsComponentsMap
:
  $gui$ ;
  $identifier$ ? * ;
  $literal_string$ ? * ;
  select
  or
    $grammar$ ;
    $identifier$ ? * ;
  end select ;
  $:$ ;
  <import_headers_semantics_and_grammars> parse ;
#--- Assignment list
  repeat
  while
    $label$ ;
    $terminal$ ? * ;
    $,$ ;
    $terminal$ ? * ;
    $;$ ;
  while
    $identifier$ ? * ;
    select
    or
      $literal_string$ ? * ;
    end select ;
    $:$ ;
    repeat
      $literal_string$ ? * ;
    while
    end repeat ;
    $;$ ;
  while
    $with$ ;
    $lexique$ ;
    $literal_string$ ?* ;
    ${$ ;
    repeat
    while
      $label$ ;
      repeat
        $terminal$ ? * ;
      while
        $,$ ;
      end repeat ;
      $;$ ;
    while
      $identifier$ ?* ;
      $literal_string$ ?* ;
      $:$ ;
      repeat
        $literal_string$ ?* ;
      while
      end repeat ;
      $;$ ;
    while
      $identifier$ ?* ;
      $:$ ;
      $literal_string$ ?* ;
      $;$ ;
    end repeat ;
    $}$ ;    
  end repeat ;
  $end$ ;
  $gui$ ;
  $;$ ;
end rule ;

#--------------------------------------------------------------------------------*

end syntax ;
