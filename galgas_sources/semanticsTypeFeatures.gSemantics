#---------------------------------------------------------------------------*
#                                                                           *
#  semantics definitions for semantics component                            *
#                                                                           *
#  Copyright (C) 1997, ..., 2008 Pierre Molinaro.                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

semantics semanticsTypeFeatures :
  import "semanticsTypes.gSemantics" ;
  import semantics semanticsTypes in "semanticsTypes.gSemantics" ;

#---------------------------------------------------------------------------*
#                                                                           *
#  G E T    E N U M E R A T I O N    L I S T                                *
#                                                                           *
#---------------------------------------------------------------------------*

override method @stringsetPredefinedTypeAST getEnumerationList
  ?!@unifiedTypeMap ioUnifiedTypeMap
  !@enumerationDescriptorList outEnumerationList
:
  @unifiedTypeMapIndex stringTypeIndex ;
  [@unifiedTypeMapIndex makeRegularIndex ![@lstring new !"string" !here] !?ioUnifiedTypeMap ?stringTypeIndex] ;
  outEnumerationList := [@enumerationDescriptorList emptyList] ;
  outEnumerationList += !stringTypeIndex !"key" ;
end method ;

#---------------------------------------------------------------------------*
#                                                                           *
#  G E T    S U P P O R T E D    O P E R A T O R    F L A G S               *
#                                                                           *
#---------------------------------------------------------------------------*

override reader @stringPredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := binaryConcatOperator [] | dotAssignOperator [] | generateNativeNewConstructor []
    | generateDescriptionReaderUtilityMethod [] | generateVirtualDestructor []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @charPredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := generateNativeNewConstructor [] | generateDescriptionReaderUtilityMethod []
   | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @boolPredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := binaryAndOperator [] | binaryOrOperator [] | binaryXorOperator [] | unaryNotOperator []
    | generateNativeNewConstructor [] | generateDescriptionReaderUtilityMethod []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @uintPredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := binaryAddOperator [] | binarySubOperator [] | binaryMulOperator [] | binaryDivOperator []
    | binaryModOperator [] | binaryShiftOperator [] | unaryPlusOperator [] | unaryMinusOperator []
    | binaryAndOperator [] | binaryOrOperator [] | binaryXorOperator [] | unaryTildeOperator []
    | generateNativeNewConstructor [] | generateDescriptionReaderUtilityMethod [] | incDecOperator []
    | generateCppConstructorWithNativeAttributeList []  ;
end reader ;

#---------------------------------------------------------------------------*

override reader @sintPredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := binaryAddOperator [] | binarySubOperator [] | binaryMulOperator [] | binaryDivOperator []
    | binaryModOperator [] | binaryShiftOperator [] | unaryPlusOperator [] | unaryMinusOperator []
    | binaryAndOperator [] | binaryOrOperator [] | binaryXorOperator [] | unaryTildeOperator []
    | generateNativeNewConstructor [] | generateDescriptionReaderUtilityMethod []  | incDecOperator []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @uint64PredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := binaryAddOperator [] | binarySubOperator [] | binaryMulOperator [] | binaryDivOperator []
    | binaryModOperator [] | binaryShiftOperator [] | unaryPlusOperator [] | unaryMinusOperator []
    | binaryAndOperator [] | binaryOrOperator [] | binaryXorOperator [] | unaryTildeOperator []
    | generateNativeNewConstructor [] | generateDescriptionReaderUtilityMethod [] | incDecOperator []
    | generateCppConstructorWithNativeAttributeList []  ;
end reader ;

#---------------------------------------------------------------------------*

override reader @sint64PredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := binaryAddOperator [] | binarySubOperator [] | binaryMulOperator [] | binaryDivOperator []
    | binaryModOperator [] | binaryShiftOperator [] | unaryPlusOperator [] | unaryMinusOperator []
    | binaryAndOperator [] | binaryOrOperator [] | binaryXorOperator [] | unaryTildeOperator []
    | generateNativeNewConstructor []  | incDecOperator []  | generateDescriptionReaderUtilityMethod []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @doublePredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := binaryAddOperator [] | binarySubOperator [] | binaryMulOperator [] | binaryDivOperator []
    | unaryPlusOperator [] | unaryMinusOperator []
    |generateNativeNewConstructor [] | generateDescriptionReaderUtilityMethod []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @stringsetPredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := unaryPlusOperator [] | unaryMinusOperator [] | binarySubOperator []
    | binaryAndOperator [] | binaryOrOperator [] | binaryXorOperator []
    | generateDescriptionReaderUtilityMethod [] | generateVirtualDestructor []
    | generateNativeNewConstructor []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @binarysetPredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := binaryAndOperator [] | binaryOrOperator [] | binaryXorOperator []
    | generateNativeNewConstructor [] | generateVirtualDestructor []
    | unaryTildeOperator [] | binaryShiftOperator []
    | generateDescriptionReaderUtilityMethod []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @typePredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := generateNativeNewConstructor [] | generateDescriptionReaderUtilityMethod []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @objectPredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := generateNativeNewConstructor [] | generateVirtualDestructor []
   | generateDescriptionReaderUtilityMethod []
   | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @dataPredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := generateNativeNewConstructor [] | generateVirtualDestructor []
    | generateDescriptionReaderUtilityMethod []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @functionPredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := generateNativeNewConstructor [] | generateDescriptionReaderUtilityMethod []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @lboolPredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := generateVirtualDestructor [] | generateDescriptionReaderUtilityMethod []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @lcharPredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := generateVirtualDestructor [] | generateDescriptionReaderUtilityMethod []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @ldoublePredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := generateVirtualDestructor [] | generateDescriptionReaderUtilityMethod []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @locationPredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := generateVirtualDestructor []
    | generateNativeNewConstructor [] | generateDescriptionReaderUtilityMethod []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @lsintPredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := generateVirtualDestructor [] | generateDescriptionReaderUtilityMethod []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @lsint64PredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := generateVirtualDestructor [] | generateDescriptionReaderUtilityMethod []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @luintPredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := generateVirtualDestructor [] | generateDescriptionReaderUtilityMethod []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @luint64PredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := generateVirtualDestructor [] | generateDescriptionReaderUtilityMethod []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override reader @lstringPredefinedTypeAST getSupportedOperatorFlags
  ->@uint outFlags
:
  outFlags := generateVirtualDestructor [] | generateDescriptionReaderUtilityMethod []
    | generateCppConstructorWithNativeAttributeList [] ;
end reader ;

#---------------------------------------------------------------------------*

override method @stringsetPredefinedTypeAST getAddAssignArgumentList
  ?!@unifiedTypeMap ioUnifiedTypeMap
  !@unifiedTypeMapIndexList outAddAssignArgumentList
:
  @unifiedTypeMapIndex stringTypeIndex ;
  [@unifiedTypeMapIndex makeRegularIndex ![@lstring new !"string" !here] !?ioUnifiedTypeMap ?stringTypeIndex] ;
  outAddAssignArgumentList := [@unifiedTypeMapIndexList listWithValue !stringTypeIndex] ;
end method ;

#---------------------------------------------------------------------------*

override method @stringsetPredefinedTypeAST getMinusAssignArgumentList
  ?!@unifiedTypeMap ioUnifiedTypeMap
  !@unifiedTypeMapIndexList outAddAssignArgumentList
:
  @unifiedTypeMapIndex stringTypeIndex ;
  [@unifiedTypeMapIndex makeRegularIndex ![@lstring new !"string" !here] !?ioUnifiedTypeMap ?stringTypeIndex] ;
  outAddAssignArgumentList := [@unifiedTypeMapIndexList listWithValue !stringTypeIndex] ;
end method ;

#---------------------------------------------------------------------------*
#                                                                           *
#  G E T    N A T I V E    A T T R I B U T E    L I S T                     *
#                                                                           *
#---------------------------------------------------------------------------*

override reader @boolPredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"bool" !false !"mBoolValue" !false !"boolValue" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @stringsetPredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"cStringsetNode" !true !"mRoot" !false !"" ;
  outList += !"PMUInt32" !false !"mCount" !false !"" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @charPredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"utf32" !false !"mCharValue" !false !"charValue" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @stringPredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"C_String" !false !"mString" !true !"stringValue" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @uintPredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"PMUInt32" !false !"mUIntValue" !false !"uintValue" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @sintPredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"PMSInt32" !false !"mSIntValue" !false !"sintValue" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @uint64PredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"PMUInt64" !false !"mUInt64Value" !false !"uint64Value" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @sint64PredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"PMSInt64" !false !"mSInt64Value" !false !"sint64Value" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @doublePredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"double" !false !"mDoubleValue" !false !"doubleValue" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @locationPredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"C_LocationInSource" !false !"mStartLocationInSource" !true !"startLocation" ;
  outList += !"C_LocationInSource" !false !"mEndLocationInSource" !true !"endLocation" ;
  outList += !"C_SourceTextInString" !true !"mSourceText" !false !"sourceText" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @objectPredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"GALGAS_root" !true !"mEmbeddedObject" !false !"embeddedObject" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @typePredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"C_galgas_type_descriptor" !true !"mTypeDescriptor" !false !"embeddedTypeDescriptor" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @functionPredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"C_galgas_function_descriptor" !true !"mFunctionDescriptor" !false !"functionDescriptor" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @lstringPredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"GALGAS_string" !true !"mString" !false !"stringValue" ;
  outList += !"GALGAS_location" !true !"mLocation" !false !"locationValue" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @lcharPredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"GALGAS_char" !true !"mChar" !false !"charValue" ;
  outList += !"GALGAS_location" !true !"mLocation" !false !"locationValue" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @luintPredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"GALGAS_uint" !true !"mUInt" !false !"uintValue" ;
  outList += !"GALGAS_location" !true !"mLocation" !false !"locationValue" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @lsintPredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"GALGAS_sint" !true !"mSInt" !false !"sintValue" ;
  outList += !"GALGAS_location" !true !"mLocation" !false !"locationValue" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @luint64PredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"GALGAS_uint_36__34_" !true !"mUInt64" !false !"uint64Value" ;
  outList += !"GALGAS_location" !true !"mLocation" !false !"locationValue" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @lsint64PredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"GALGAS_sint_36__34_" !true !"mSInt64" !false !"sint64Value" ;
  outList += !"GALGAS_location" !true !"mLocation" !false !"locationValue" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @lboolPredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"GALGAS_bool" !true !"mBool" !false !"boolValue" ;
  outList += !"GALGAS_location" !true !"mLocation" !false !"locationValue" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @ldoublePredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"GALGAS_double" !true !"mDouble" !false !"doubleValue" ;
  outList += !"GALGAS_location" !true !"mLocation" !false !"locationValue" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @binarysetPredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"C_BDD" !false !"mBDD" !true !"bdd" ;
end reader ;

#---------------------------------------------------------------------------*

override reader @dataPredefinedTypeAST getNativeAttributeList -> @nativeAttributeList outList :
  outList := [@nativeAttributeList emptyList] ;
  outList += !"uint8Array" !false !"mData" !true !"" ;
end reader ;

#---------------------------------------------------------------------------*

end semantics ;
