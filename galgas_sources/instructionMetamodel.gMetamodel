#---------------------------------------------------------------------------*
#                                                                           *
#  metamodel that defines instructions                                      *
#                                                                           *
#  Copyright (C) 2007, ..., 2007 Pierre Molinaro.                           *
#                                                                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

abstract metamodel instructionMetamodel extends parameterArgumentMetamodel :

import metamodel expressionMetamodel in "expressionMetamodel.gMetamodel" ;
import metamodel parameterArgumentMetamodel in "parameterArgumentMetamodel.gMetamodel" ;

#---------------------------------------------------------------------------*

abstract entity @syntaxInstruction {
}

#---------------------------------------------------------------------------*

abstract entity @semanticInstruction extends @syntaxInstruction {
}

#---------------------------------------------------------------------------*

entity @semanticInstructions {
  @semanticInstruction [] mInstruction ;
}

#---------------------------------------------------------------------------*

abstract entity @semanticDeclaration {
}

#---------------------------------------------------------------------------*
#                                                                           *
#    R O U T I N E    D E C L A R A T I O N                                 *
#                                                                           *
#---------------------------------------------------------------------------*

entity @routineDeclaration extends @semanticDeclaration {
  @lstring mRoutineName ;
  @formalParameters mFormalParameters ;
  @semanticInstructions mRoutineInstructions ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    E X T E R N    R O U T I N E    D E C L A R A T I O N                  *
#                                                                           *
#---------------------------------------------------------------------------*

entity @externRoutineDeclaration extends @semanticDeclaration {
  @lstring mActionName ;
  @formalParameters mFormalParameters ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  L O C A L    V A R I A B L E    D E C L A R A T I O N                    *
#                                                                           *
#---------------------------------------------------------------------------*

entity @localVariableDeclaration extends @semanticInstruction {
  @lstring mTypeName ;
  @lstring mVariableName ;
}

#---------------------------------------------------------------------------*

entity @localVariableDeclarationWithInitialization extends @semanticInstruction {
  @lstring mTypeName ;
  @lstring mVariableName ;
  @lstring mConstructorName ;
  @outExpressionList mConstructorArguments ;
}

#---------------------------------------------------------------------------*

entity @localVariableDeclarationWithAssignment extends @semanticInstruction {
  @lstring mTypeName ;
  @lstring mVariableName ;
  @semanticExpression mSourceExpression ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  A S S I G N M E N T    I N S T R U C T I O N                             *
#                                                                           *
#---------------------------------------------------------------------------*

entity @assignmentInstruction extends @semanticInstruction {
  @lstring mTargetVariableName ;
  @semanticExpression mSourceExpression ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  D O T    A S S I G N M E N T    I N S T R U C T I O N                    *
#                                                                           *
#  VARIABLE .= EXPRESSION ;                                                 *
#                                                                           *
#---------------------------------------------------------------------------*

entity @appendInstruction extends @semanticInstruction {
  @lstring mTargetVariableName ;
  @semanticExpression mSourceExpression ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  F O R E A C H    I N S T R U C T I O N                                   *
#                                                                           *
#---------------------------------------------------------------------------*

abstract entity @foreachInstructionEnumeratedObjectElement {
}

#---------------------------------------------------------------------------*

entity @foreachInstructionJoker extends @foreachInstructionEnumeratedObjectElement {
}

#---------------------------------------------------------------------------*

entity @foreachInstructionEnumeratedConstant extends @foreachInstructionEnumeratedObjectElement {
  @lstring mTypeName ;
  @lstring mConstantName ;
}

#---------------------------------------------------------------------------*

entity @foreachInstructionEnumeratedObject {
  @semanticExpression mEnumeratedExpression ;
  @foreachInstructionEnumeratedObjectElement [] mElements ;
  @bool mEndsWithEllipsis ;
}

#---------------------------------------------------------------------------*

entity @foreachInstruction extends @semanticInstruction {
  @foreachInstructionEnumeratedObject [] mEnumeratedObjects ;
  @semanticExpression mWhileExpression ;
  @semanticInstructions mInstructionList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  I F    I N S T R U C T I O N                                             *
#                                                                           *
#---------------------------------------------------------------------------*

entity @ifInstruction extends @semanticInstruction {
  @semanticExpression [] mIFexpressionList ;
  @semanticInstructions [] mIFinstructionListList ;
  @semanticInstructions [0, 1] mElseInstructionList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  M E T H O D    C A L L    I N S T R U C T I O N                          *
#                                                                           *
#---------------------------------------------------------------------------*

entity @methodCallInstruction extends @semanticInstruction {
  @semanticExpression mReceiverExpression ;
  @lstring mMethodName ;
  @actualParameters mActualParameterList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  M O D I F I E R    C A L L    I N S T R U C T I O N                      *
#                                                                           *
#---------------------------------------------------------------------------*

entity @modifierCallInstruction extends @semanticInstruction {
  @lstring mReceiverName ;
  @lstring mModifierName ;
  @actualParameters mActualParameterList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    E R R O R    I N S T R U C T I O N                                     *
#                                                                           *
#---------------------------------------------------------------------------*

entity @errorInstruction extends @semanticInstruction {
  @semanticExpression mReceiverExpression ;
  @semanticExpression mErrorExpression ;
  @lstringlist mBuiltVariableList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    E R R O R    I N S T R U C T I O N                                     *
#                                                                           *
#---------------------------------------------------------------------------*

entity @warningInstruction extends @semanticInstruction {
  @semanticExpression mReceiverExpression ;
  @semanticExpression mErrorExpression ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    R O U T I N E    C A L L    I N S T R U C T I O N                      *
#                                                                           *
#---------------------------------------------------------------------------*

entity @routineCallInstruction extends @semanticInstruction {
  @lstring mRoutineName ;
  @actualParameters mActualParameterList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    M A T C H    I N S T R U C T I O N                                     *
#                                                                           *
#---------------------------------------------------------------------------*

abstract entity @matchEntry {
}

#---------------------------------------------------------------------------*

entity @constantMatchEntry extends @matchEntry {
  @lstring mConstantName ;
}

#---------------------------------------------------------------------------*

entity @classMatchEntry extends @matchEntry {
  @lstring mClassName ;
  @foreachInstructionEnumeratedObjectElement [] mElements ;
  @bool mEndsWithEllipsis ;
}

#---------------------------------------------------------------------------*

entity @matchInstructionBranch {
  @matchEntry [] mMatchedEntryList ;
  @semanticInstructions mMatchBranchInstructionList ;
}

#---------------------------------------------------------------------------*

entity @matchInstruction extends @semanticInstruction {
  @lstringlist mMatchedVariableNameList ;
  @matchInstructionBranch [] mMatchInstructionBranchList ;
  @semanticInstructions [0, 1] mElseInstructionList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    C A S T    I N S T R U C T I O N                                       *
#                                                                           *
#---------------------------------------------------------------------------*

entity @castInstructionBranch {
  @bool mUseKindOfClass ;
  @lstring mTypeName ;
  @lstring mConstantVarName ; # Empty string if no constant var
  @bool mConstantVarNameIsUnused ; # true if no constant var
  @semanticInstructions mCastBranchInstructionList ;
}

#---------------------------------------------------------------------------*

abstract entity @elseOrDefaultForCastInstruction {
}

#---------------------------------------------------------------------------*

entity @elseForCastInstruction extends @elseOrDefaultForCastInstruction {
  @semanticInstructions mElseInstructionList ;
}

#---------------------------------------------------------------------------*

entity @defaultForCastInstruction extends @elseOrDefaultForCastInstruction {
  @semanticExpression mErrorLocationExpression ;
}

#---------------------------------------------------------------------------*

entity @castInstruction extends @semanticInstruction {
  @semanticExpression mExpression ;
  @castInstructionBranch [] mCastInstructionBranchList ;
  @elseOrDefaultForCastInstruction mElseOrDefault ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    A D D    I N S T R U C T I O N      + =                                *
#                                                                           *
#---------------------------------------------------------------------------*

entity @addInstruction extends @semanticInstruction {
  @lstring mReceiverName ;
  @outExpressionList mExpressionList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    I N C R E M E N T    I N S T R U C T I O N                             *
#                                                                           *
#---------------------------------------------------------------------------*

entity @incrementInstruction extends @semanticInstruction {
  @lstring mReceiverName ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    D E C R E M E N T    I N S T R U C T I O N                             *
#                                                                           *
#---------------------------------------------------------------------------*

entity @decrementInstruction extends @semanticInstruction {
  @lstring mReceiverName ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    L O O P    I N S T R U C T I O N                                       *
#                                                                           *
#---------------------------------------------------------------------------*

entity @loopInstruction extends @semanticInstruction {
  @semanticExpression mVariantExpression ;
  @semanticInstructions mFirstInstructions ;
  @semanticExpression mLoopExpression ;
  @semanticInstructions mSecondInstructions ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  M E S S A G E    I N S T R U C T I O N                                   *
#                                                                           *
#---------------------------------------------------------------------------*

entity @messageInstruction extends @semanticInstruction {
  @semanticExpression mExpression ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  L O G    I N S T R U C T I O N                                           *
#                                                                           *
#---------------------------------------------------------------------------*

entity @logInstruction extends @semanticInstruction {
  @lstringlist mLoggedVariableList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  G R A M M A R    I N S T R U C T I O N                                   *
#                                                                           *
#---------------------------------------------------------------------------*

entity @grammarInstruction extends @semanticInstruction {
  @lstring mGrammarComponentName ;
  @lstring mLabelName ;
  @semanticExpression mSourceFileExpression ;
  @actualParameters mActualParameterList ;
  @lstring mReturnedModelName ; # Empty string if no returned model
}

#---------------------------------------------------------------------------*
#                                                                           *
#  T R E E W A L K I N G    I N S T R U C T I O N                           *
#                                                                           *
#---------------------------------------------------------------------------*

entity @treewalkingInstruction extends @semanticInstruction {
  @lstring mTreewalkingComponentName ;
  @lstring mModelName ;
  @actualParameters mActualParameterList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  T Y P E    M E T H O D    C A L L    I N S T R U C T I O N               *
#                                                                           *
#---------------------------------------------------------------------------*

entity @typeMethodInstruction extends @semanticInstruction {
  @lstring mTypeName ;
  @lstring mMethodName ;
  @actualParameters mActualParameterList ;
}

#---------------------------------------------------------------------------*

end metamodel ;
