#---------------------------------------------------------------------------*
#                                                                           *
#  GALGAS LL1 program definition                                            *
#                                                                           *
#  Copyright (C) 1997, ..., 2007 Pierre Molinaro.                           *
#                                                                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

program mda_galgas_LL1_prgm "version GALGAS_BETA_VERSION (LL(1) grammar)" :
  import semantics option_semantics in "option_semantics.ggs" ;
  import semantics semantics_semantics in "semantics_semantics.ggs" ;
  import metamodel option_metamodel in "option_metamodel.ggs" ;
  import treewalking option_treewalking_for_generating_header in "option_treewalking_for_generating_header.ggs" ;
  import treewalking option_treewalking_for_building_map in "option_treewalking_for_building_map.ggs" ;
  import grammar galgas_LL1_grammar in "galgas_LL1_grammar.ggs" ;
  import grammar option_LL1_grammar in "option_LL1_grammar.ggs" ;
  
  error 100 ;
  warning 100 ;

  when . "ggs"
  message "a '.ggs' GALGAS source file"
  ??@lstring inSourceFile {
    fixFileGenerationStartDirectory !inSourceFile ;

    @M_lexiqueComponents lexiqueMapForUse [emptyMap] ;
    @M_semanticsComponents semanticsComponentsMap [emptyMap] ;
    @M_syntaxComponents syntaxComponentsMap [emptyMap] ;
    @M_grammarComponents grammarComponentsMap [emptyMap] ;
    @M_optionComponents optionComponentsMap [emptyMap] ;
    @M_metamodelsComponents metamodelComponentMap [emptyMap] ;
    @M_treewalkingComponents treewalkingComponentMap [emptyMap] ;
    grammar galgas_LL1_grammar in inSourceFile
      !?lexiqueMapForUse
      !?semanticsComponentsMap
      !?syntaxComponentsMap
      !?grammarComponentsMap
      !?optionComponentsMap
      !?metamodelComponentMap
      !?treewalkingComponentMap
    ;
  }

  when . "ggs_option"
  message "a GALGAS option source file"
  ??@lstring inSourceFile {
  #--- File generation start directory
    @string startDirectory := [inSourceFile stringByDeletingLastPathComponent] ;
    startDirectory .= "/GALGAS_OUTPUT_TEMP" ;
  #--- Parse option component
    @optionComponentRoot optionComponentRoot ;
    grammar option_LL1_grammar in inSourceFile -> optionComponentRoot ;
  #--- Treewalking for defining option map
    @commandLineOptionMap boolOptionMap ;
    @commandLineOptionMap uintOptionMap ;
    @commandLineOptionMap stringOptionMap ;
    treewalking option_treewalking_for_building_map on optionComponentRoot
      ?boolOptionMap
      ?uintOptionMap
      ?stringOptionMap
   ;
  #--- Treewalking for generating header map
    treewalking option_treewalking_for_generating_header on optionComponentRoot
      !startDirectory
      ![[inSourceFile lastPathComponent] stringByDeletingPathExtension]
      !boolOptionMap
      !uintOptionMap
      !stringOptionMap
   ;
  }

end program ;

#---------------------------------------------------------------------------*
