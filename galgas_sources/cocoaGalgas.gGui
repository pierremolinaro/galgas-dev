#---------------------------------------------------------------------------*
#                                                                           *
#  Cocoa component for GALGAS                                               *
#                                                                           *
#  Copyright (C) 2004, ..., 2009 Pierre Molinaro.                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

gui cocoaGalgas "cocoa" :
with option "galgas_cli_options.gOption" ;

nibAndMainClass : "GGSUpdateCocoaGalgas" ;

#--------------------------------------------------------------------------------*

with lexique "galgas_scanner.gLexique" {
  fileExtension : "gLexique" ;
  fileExtension : "gSemantics" ;
  fileExtension : "gSyntax" ;
  fileExtension : "gGrammar" ;
  fileExtension : "gProgram" ;
  fileExtension : "gOption" ;
  fileExtension : "gGui" ;
  fileExtension : "gProject" ;
  blockComment : "#" ;
  title: "Source GALGAS < 2" ;
  label $before$, ${$ ;
  label $after$, ${$ ;
  label $map$, $type_name$ ;
  label $uniquemap$, $type_name$ ;
  label $list$, $type_name$ ;
  label $sortedlist$, $type_name$ ;
  label $enum$, $type_name$ ;
  label $class$, $type_name$ ;
  label $extern$, $type_name$ ;
  label $struct$, $type_name$ ;
  label $nonterminal$, $non_terminal_symbol$ ;
  label $rule$, $non_terminal_symbol$ ;
  label $routine$, $identifier$ ;
  label $function$, $identifier$ ;
  label $once$, $identifier$ ;
  label $filewrapper$, $identifier$, $in$ ;
  label $abstract$, $method$, $type_name$, $identifier$ ;
  label $override$, $method$, $type_name$, $identifier$ ;
  label $method$, $type_name$, $identifier$ ;
  label $abstract$, $reader$, $type_name$, $identifier$ ;
  label $override$, $reader$, $type_name$, $identifier$ ;
  label $reader$, $type_name$, $identifier$ ;
  label $when$, $.$, $literal_string$ ;
  label * $commentMark$ (2, 0) ;
  label $terminal$, $!$ - ;
  label $terminal$, $error$ - ;

  
  textMacro "Types/Class" :
    "class @aClassName : extends @superClassName {\n"
    "  @aType mAnAttribute ;\n"
    "}\n"
  ;
  
  textMacro "Types/Enum" :
    "enum @aType {\n"
    "  constant1, constant2\n"
    "}\n"
  ;
  
  textMacro "Types/List" :
    "list @type {\n"
    "  @aType mAnAttribute ;\n"
    "}\n"
  ;
  
  textMacro "Types/List Map" :
    "list @type {\n"
    "  @aType mAnAttribute ;\n"
    "}\n"
    "listmap @myListMap (@aList) ;\n"
  ;
  
  textMacro "Types/Map" :
    "map @type {\n"
    "  @aType mAnAttribute ;\n"
    "  insert insertKey error message \"the '%K' key is already declared in %L\" ;\n"
    "  search searchKey error message \"there is no '%K' key\" ;\n"
    "}\n"
  ;
  
  textMacro "Types/Sorted List" :
    "sortedlist @type {\n"
    "  @string mFirstAttribute ;\n"
    "  @bool mSecondAttribute ;\n"
    "}{\n"
    "  mFirstAttribute >, mSecondAttribute <\n"
    "}\n"
  ;
  
  textMacro "Types/Struct" :
    "struct @type {\n"
    "  @aType mAnAttribute ;\n"
    "}\n"
  ;
}

#--------------------------------------------------------------------------------*

with lexique "galgasTemplateScanner.gLexique" {
  fileExtension : "gTemplate" ;
  title: "Template" ;
}

#--------------------------------------------------------------------------------*

with lexique "galgas3Scanner.gLexique" {
  fileExtension : "galgasProject" ;
  fileExtension : "galgas" ;
  blockComment : "#" ;
  title: "Source GALGAS â‰¥ 3" ;
  label $before$, ${$ ;
  label $after$, ${$ ;
  label $map$, $type_name$ ;
  label $uniquemap$, $type_name$ ;
  label $list$, $type_name$ ;
  label $sortedlist$, $type_name$ ;
  label $enum$, $type_name$ ;
  label $class$, $type_name$ ;
  label $extern$, $type_name$ ;
  label $struct$, $type_name$ ;
  label $rule$, $non_terminal_symbol$ ;
  label $proc$, $identifier$ ;
  label $func$, $identifier$ ;
  label $once$, $identifier$ ;
  label $filewrapper$, $identifier$, $in$ ;
  label $abstract$, $method$, $type_name$, $identifier$ ;
  label $override$, $method$, $type_name$, $identifier$ ;
  label $method$, $type_name$, $identifier$ ;
  label $abstract$, $getter$, $type_name$, $identifier$ ;
  label $override$,  $getter$, $type_name$, $identifier$ ;
  label $getter$, $type_name$, $identifier$ ;
  label $when$, $.$, $literal_string$ ;
  label * $commentMark$ (2, 0) ;
  label $terminal$, $!$ - ;
  label $terminal$, $error$ - ;

  
  textMacro "Types/Class" :
    "class @aClassName : extends @superClassName {\n"
    "  @aType mAnAttribute ;\n"
    "}\n"
  ;
  
  textMacro "Types/Enum" :
    "enum @aType {\n"
    "  constant1, constant2\n"
    "}\n"
  ;
  
  textMacro "Types/List" :
    "list @type {\n"
    "  @aType mAnAttribute ;\n"
    "}\n"
  ;
  
  textMacro "Types/List Map" :
    "list @type {\n"
    "  @aType mAnAttribute ;\n"
    "}\n"
    "listmap @myListMap (@aList) ;\n"
  ;
  
  textMacro "Types/Map" :
    "map @type {\n"
    "  @aType mAnAttribute ;\n"
    "  insert insertKey error message \"the '%K' key is already declared in %L\" ;\n"
    "  search searchKey error message \"there is no '%K' key\" ;\n"
    "}\n"
  ;
  
  textMacro "Types/Sorted List" :
    "sortedlist @type {\n"
    "  @string mFirstAttribute ;\n"
    "  @bool mSecondAttribute ;\n"
    "}{\n"
    "  mFirstAttribute >, mSecondAttribute <\n"
    "}\n"
  ;
  
  textMacro "Types/Struct" :
    "struct @type {\n"
    "  @aType mAnAttribute ;\n"
    "}\n"
  ;
}

#--------------------------------------------------------------------------------*

end gui ;

#--------------------------------------------------------------------------------*
