#---------------------------------------------------------------------------*
#                                                                           *
#  Cocoa component for GALGAS                                               *
#                                                                           *
#  Copyright (C) 2004, ..., 2009 Pierre Molinaro.                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

gui cocoaGalgas "cocoa" :
import "galgas_cli_options.gOption" ;
import semantics semantics_semantics in "semantics_semantics.gSemantics" ;
import grammar galgas_LL1_grammar in "galgas_LL1_grammar.gGrammar" ;
import__ "galgas_scanner.gLexique" ;

nibAndMainClass : "galgasUpdate.GGSUpdateCocoaGalgas" ;


with lexique "galgas_scanner.gLexique" {
  fileExtension : "gLexique" ;
  fileExtension : "gSemantics" ;
  fileExtension : "gSyntax" ;
  fileExtension : "gGrammar" ;
  fileExtension : "gProgram" ;
  fileExtension : "gOption" ;
  fileExtension : "gGUI" ;
  blockComment : "#" ;
  title: "Source" ;
  label $map$, $type_name$ ;
  label $list$, $type_name$ ;
  label $sortedlist$, $type_name$ ;
  label $enum$, $type_name$ ;
  label $class$, $type_name$ ;
  label $nonterminal$, $non_terminal_symbol$ ;
  label $rule$, $non_terminal_symbol$ ;
  label $routine$, $identifier$ ;
  label $method$, $type_name$ ;
  label $reader$, $type_name$ ;
  
  textMacro "Types/Class" :
    "class @aClassName : extends @superClassNane {\n"
    "  @aType mAnAttribute ;\n"
    "  override method myMethod !@string outResult :\n"
    "    outResult := \"a string\" ;\n"
    "  end method ;\n"
    "}\n"
  ;
  
  textMacro "Types/Enum" :
    "enum @aType {\n"
    "  constructor constant1 ;\n"
    "  constructor constant2 ;\n"
    "}{\n"
    "  reader actualArgumentMessage :\n"
    "    constant1 -> \"message for constant1\" ;\n"
    "    constant2 -> \"message for constant2\" ;\n"
    "  end reader ;\n"
    "}\n"
  ;
  
  textMacro "Types/List" :
    "list @type {\n"
    "  @aType mAnAttribute ;\n"
    "}\n"
  ;
  
  textMacro "Types/List Map" :
    "list @type {\n"
    "  @aType mAnAttribute ;\n"
    "}\n"
    "listmap @myListMap (@aList) ;\n"
  ;
  
  textMacro "Types/Map" :
    "map @type {\n"
    "  @aType mAnAttribute ;\n"
    "  insert insertKey error message \"the '%K' key is already declared in %L\" ;\n"
    "  search searchKey error message \"there is no '%K' key\" ;\n"
    "}\n"
  ;
  
  textMacro "Types/Sorted List" :
    "sortedlist @type {\n"
    "  @string mFirstAttribute ;\n"
    "  @bool mSecondAttribute ;\n"
    "}{\n"
    "mFirstAttribute >, mSecondAttribute <\n"
    "}\n"
  ;
  
  textMacro "Types/Struct" :
    "struct @type {\n"
    "  @aType mAnAttribute ;\n"
    "}\n"
  ;
}

with lexique "galgasTemplateScanner.gLexique" {
  fileExtension : "gTemplate" ;
  blockComment : "#" ;
  title: "Template" ;
}

blockComment : "#" ;

label $map$, $type_name$ ;
label $list$, $type_name$ ;
label $sortedlist$, $type_name$ ;
label $enum$, $type_name$ ;
label $class$, $type_name$ ;
label $nonterminal$, $non_terminal_symbol$ ;
label $rule$, $non_terminal_symbol$ ;
label $routine$, $identifier$ ;
label $method$, $type_name$ ;
label $reader$, $type_name$ ;

textMacro "Types/Class" :
  "class @aClassName : extends @superClassNane {\n"
  "  @aType mAnAttribute ;\n"
  "  override method myMethod !@string outResult :\n"
  "    outResult := \"a string\" ;\n"
  "  end method ;\n"
  "}\n"
;

textMacro "Types/Enum" :
  "enum @aType {\n"
  "  constructor constant1 ;\n"
  "  constructor constant2 ;\n"
  "}{\n"
  "  reader actualArgumentMessage :\n"
  "    constant1 -> \"message for constant1\" ;\n"
  "    constant2 -> \"message for constant2\" ;\n"
  "  end reader ;\n"
  "}\n"
;

textMacro "Types/List" :
  "list @type {\n"
  "  @aType mAnAttribute ;\n"
  "}\n"
;

textMacro "Types/List Map" :
  "list @type {\n"
  "  @aType mAnAttribute ;\n"
  "}\n"
  "listmap @myListMap (@aList) ;\n"
;

textMacro "Types/Map" :
  "map @type {\n"
  "  @aType mAnAttribute ;\n"
  "  insert insertKey error message \"the '%K' key is already declared in %L\" ;\n"
  "  search searchKey error message \"there is no '%K' key\" ;\n"
  "}\n"
;

textMacro "Types/Sorted List" :
  "sortedlist @type {\n"
  "  @string mFirstAttribute ;\n"
  "  @bool mSecondAttribute ;\n"
  "}{\n"
  "mFirstAttribute >, mSecondAttribute <\n"
  "}\n"
;

textMacro "Types/Struct" :
  "struct @type {\n"
  "  @aType mAnAttribute ;\n"
  "}\n"
;

end gui ;

#--------------------------------------------------------------------------------*
