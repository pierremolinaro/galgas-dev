#---------------------------------------------------------------------------*
#                                                                           *
#  GALGAS compile component definition (call the LL(1) grammar)             *
#                                                                           *
#  Copyright (C) 1997, ..., 2009 Pierre Molinaro.                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

syntax ggs_LL1_compile_component :
with "galgas_scanner.gLexique" ;

import lexique galgas_scanner in "galgas_scanner.gLexique" ;

import semantics semantics_semantics in "semantics_semantics.gSemantics" ;
import semantics optionCompilation in "optionCompilation.gSemantics" ;
import semantics lexiqueCompilation in "lexiqueCompilation.gSemantics" ;
import semantics guiCompilation in "guiCompilation.gSemantics" ;
import semantics grammarCompilation in "grammarCompilation.gSemantics" ;
import semantics XcodeProjectGeneration in "XcodeProjectGeneration.gSemantics" ;
import semantics projectGlobalCheckings in "projectGlobalCheckings.gSemantics" ;

import grammar galgas_LL1_grammar in "galgas_LL1_grammar.gGrammar" ;

#------------------------------------------------------------------------------*
#                                                                              *
#          Production rules declaration                                        *
#                                                                              *
#------------------------------------------------------------------------------*

nonterminal <galgas_component>
  ?!@M_lexiqueComponents ioLexiqueMapForUse
  ?!@M_semanticsComponents ioSemanticsComponentsMap
  ?!@M_syntaxComponents ioSyntaxComponentsMap
  ?!@M_grammarComponents ioGrammarComponentsMap
  ?!@M_optionComponents ioOptionsComponentsMap
  ?!@EXsemanticContext ioSemanticContext
label importLexique
  ?!@M_lexiqueComponents ioLexiqueMapForUse
label importSyntax
  ?!@M_syntaxComponents ioSyntaxComponentsMap
  ?!@EXsemanticContext ioSemanticContext
label importSemantics
  ?!@M_semanticsComponents ioSemanticsComponentsMap
  ?!@EXsemanticContext ioSemanticContext
  ?!@stringset ioImportedSemanticsComponentNameSet
label importGrammarForSemantics
  ?!@M_grammarComponents ioGrammarComponentsMap
  ?!@M_optionComponents ioOptionsComponentsMap
  ?!@EXsemanticContext ioSemanticContext
label importOptions
  ?!@M_optionComponents ioOptionsComponentsMap
;

nonterminal <parse_lexique_for_importing>
  ??@lstring inFileName
  ?!@M_lexiqueComponents ioLexiqueMapForUse
label parse
;

nonterminal <parse_syntax_for_importing>
  ??@lstring inFileName
  ?!@M_syntaxComponents ioSyntaxComponentsMap
  ?!@EXsemanticContext ioSemanticContext
label parse
;

nonterminal <parse_grammar_component_for_importing>
  ??@lstring inFileName
  ?!@M_grammarComponents ioGrammarComponentsMap
  ?!@M_optionComponents ioOptionsComponentsMapForUse
  ?!@EXsemanticContext ioSemanticContext
label parse
;

nonterminal <parse_option_component_for_importing>
  ??@lstring inFileName
  ?!@M_optionComponents ioOptionsComponentsMap
label parse
;

#------------------------------------------------------------------------------*

listmap @EXtargetFileListMap (@stringlist) ;

#------------------------------------------------------------------------------*

enum @EXsourceFileKind {
  externSourceFile, lexiqueSourceFile, guiSourceFile, optionSourceFile,
  syntaxSourceFile, semanticsSourceFile, grammarSourceFile, programSourceFile
}{
}

#------------------------------------------------------------------------------*

map @EXsourceFileMap {
  @string mFullPath ;
  @EXsourceFileKind mSourceKind ;
  insert insertKey error message "the '%K' source base name has been already declared in %L" ;
  search searchKey error message "the '%K' source base name is not declared" ;
}

#------------------------------------------------------------------------------*
#                                                                              *
#          Parse lexique component for importing                               *
#                                                                              *
#------------------------------------------------------------------------------*

rule <parse_lexique_for_importing>
  ??@lstring inFileName
  ?!@M_lexiqueComponents ioLexiqueMapForUse
:
  grammar galgas_LL1_grammar label importLexique in inFileName
    !?ioLexiqueMapForUse
  ;
end rule ;

#------------------------------------------------------------------------------*
#                                                                              *
#          Parse syntax component for importing                                *
#                                                                              *
#------------------------------------------------------------------------------*

rule <parse_syntax_for_importing>
  ??@lstring inFileName
  ?!@M_syntaxComponents ioSyntaxComponentsMap
  ?!@EXsemanticContext ioSemanticContext
:
  grammar galgas_LL1_grammar label importSyntax in inFileName
    !?ioSyntaxComponentsMap
    !?ioSemanticContext
  ;
end rule ;

#------------------------------------------------------------------------------*
#                                                                              *
#          Parse grammar component for importing                               *
#                                                                              *
#------------------------------------------------------------------------------*

rule <parse_grammar_component_for_importing>
  ??@lstring inFileName
  ?!@M_grammarComponents ioGrammarComponentsMap
  ?!@M_optionComponents ioOptionsComponentsMapForUse
  ?!@EXsemanticContext ioSemanticContext
:
  grammar galgas_LL1_grammar label importGrammarForSemantics in inFileName
    !?ioGrammarComponentsMap
    !?ioOptionsComponentsMapForUse
    !?ioSemanticContext
  ;
end rule ;

#------------------------------------------------------------------------------*
#                                                                              *
#          Parse option component for importing                                *
#                                                                              *
#------------------------------------------------------------------------------*

rule <parse_option_component_for_importing>
  ??@lstring inFileName
  ?!@M_optionComponents ioOptionsComponentsMap
:
  grammar galgas_LL1_grammar label importOptions in inFileName
    !? ioOptionsComponentsMap
  ;
end rule ;

#------------------------------------------------------------------------------*

end syntax ;
